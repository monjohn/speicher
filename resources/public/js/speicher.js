if(typeof Math.imul == "undefined" || (Math.imul(0xffffffff,5) == 0)) {
    Math.imul = function (a, b) {
        var ah  = (a >>> 16) & 0xffff;
        var al = a & 0xffff;
        var bh  = (b >>> 16) & 0xffff;
        var bl = b & 0xffff;
        // the shift by 0 fixes the sign on the high part
        // the final |0 converts the unsigned value into a signed value
        return ((al * bl) + (((ah * bl + al * bh) << 16) >>> 0)|0);
    }
}


var CLOSURE_NO_DEPS = true;
var COMPILED = false;
var goog = goog || {};
goog.global = this;
goog.global.CLOSURE_UNCOMPILED_DEFINES;
goog.global.CLOSURE_DEFINES;
goog.isDef = function(val) {
  return val !== void 0;
};
goog.exportPath_ = function(name, opt_object, opt_objectToExportTo) {
  var parts = name.split(".");
  var cur = opt_objectToExportTo || goog.global;
  if (!(parts[0] in cur) && cur.execScript) {
    cur.execScript("var " + parts[0]);
  }
  for (var part;parts.length && (part = parts.shift());) {
    if (!parts.length && goog.isDef(opt_object)) {
      cur[part] = opt_object;
    } else {
      if (cur[part]) {
        cur = cur[part];
      } else {
        cur = cur[part] = {};
      }
    }
  }
};
goog.define = function(name, defaultValue) {
  var value = defaultValue;
  if (!COMPILED) {
    if (goog.global.CLOSURE_UNCOMPILED_DEFINES && Object.prototype.hasOwnProperty.call(goog.global.CLOSURE_UNCOMPILED_DEFINES, name)) {
      value = goog.global.CLOSURE_UNCOMPILED_DEFINES[name];
    } else {
      if (goog.global.CLOSURE_DEFINES && Object.prototype.hasOwnProperty.call(goog.global.CLOSURE_DEFINES, name)) {
        value = goog.global.CLOSURE_DEFINES[name];
      }
    }
  }
  goog.exportPath_(name, value);
};
goog.DEBUG = true;
goog.define("goog.LOCALE", "en");
goog.define("goog.TRUSTED_SITE", true);
goog.define("goog.STRICT_MODE_COMPATIBLE", false);
goog.provide = function(name) {
  if (!COMPILED) {
    if (goog.isProvided_(name)) {
      throw Error('Namespace "' + name + '" already declared.');
    }
    delete goog.implicitNamespaces_[name];
    var namespace = name;
    while (namespace = namespace.substring(0, namespace.lastIndexOf("."))) {
      if (goog.getObjectByName(namespace)) {
        break;
      }
      goog.implicitNamespaces_[namespace] = true;
    }
  }
  goog.exportPath_(name);
};
goog.setTestOnly = function(opt_message) {
  if (COMPILED && !goog.DEBUG) {
    opt_message = opt_message || "";
    throw Error("Importing test-only code into non-debug environment" + (opt_message ? ": " + opt_message : "."));
  }
};
goog.forwardDeclare = function(name) {
};
if (!COMPILED) {
  goog.isProvided_ = function(name) {
    return!goog.implicitNamespaces_[name] && goog.isDefAndNotNull(goog.getObjectByName(name));
  };
  goog.implicitNamespaces_ = {};
}
goog.getObjectByName = function(name, opt_obj) {
  var parts = name.split(".");
  var cur = opt_obj || goog.global;
  for (var part;part = parts.shift();) {
    if (goog.isDefAndNotNull(cur[part])) {
      cur = cur[part];
    } else {
      return null;
    }
  }
  return cur;
};
goog.globalize = function(obj, opt_global) {
  var global = opt_global || goog.global;
  for (var x in obj) {
    global[x] = obj[x];
  }
};
goog.addDependency = function(relPath, provides, requires) {
  if (goog.DEPENDENCIES_ENABLED) {
    var provide, require;
    var path = relPath.replace(/\\/g, "/");
    var deps = goog.dependencies_;
    for (var i = 0;provide = provides[i];i++) {
      deps.nameToPath[provide] = path;
      if (!(path in deps.pathToNames)) {
        deps.pathToNames[path] = {};
      }
      deps.pathToNames[path][provide] = true;
    }
    for (var j = 0;require = requires[j];j++) {
      if (!(path in deps.requires)) {
        deps.requires[path] = {};
      }
      deps.requires[path][require] = true;
    }
  }
};
goog.define("goog.ENABLE_DEBUG_LOADER", true);
goog.require = function(name) {
  if (!COMPILED) {
    if (goog.isProvided_(name)) {
      return;
    }
    if (goog.ENABLE_DEBUG_LOADER) {
      var path = goog.getPathFromDeps_(name);
      if (path) {
        goog.included_[path] = true;
        goog.writeScripts_();
        return;
      }
    }
    var errorMessage = "goog.require could not find: " + name;
    if (goog.global.console) {
      goog.global.console["error"](errorMessage);
    }
    throw Error(errorMessage);
  }
};
goog.basePath = "";
goog.global.CLOSURE_BASE_PATH;
goog.global.CLOSURE_NO_DEPS;
goog.global.CLOSURE_IMPORT_SCRIPT;
goog.nullFunction = function() {
};
goog.identityFunction = function(opt_returnValue, var_args) {
  return opt_returnValue;
};
goog.abstractMethod = function() {
  throw Error("unimplemented abstract method");
};
goog.addSingletonGetter = function(ctor) {
  ctor.getInstance = function() {
    if (ctor.instance_) {
      return ctor.instance_;
    }
    if (goog.DEBUG) {
      goog.instantiatedSingletons_[goog.instantiatedSingletons_.length] = ctor;
    }
    return ctor.instance_ = new ctor;
  };
};
goog.instantiatedSingletons_ = [];
goog.DEPENDENCIES_ENABLED = !COMPILED && goog.ENABLE_DEBUG_LOADER;
if (goog.DEPENDENCIES_ENABLED) {
  goog.included_ = {};
  goog.dependencies_ = {pathToNames:{}, nameToPath:{}, requires:{}, visited:{}, written:{}};
  goog.inHtmlDocument_ = function() {
    var doc = goog.global.document;
    return typeof doc != "undefined" && "write" in doc;
  };
  goog.findBasePath_ = function() {
    if (goog.global.CLOSURE_BASE_PATH) {
      goog.basePath = goog.global.CLOSURE_BASE_PATH;
      return;
    } else {
      if (!goog.inHtmlDocument_()) {
        return;
      }
    }
    var doc = goog.global.document;
    var scripts = doc.getElementsByTagName("script");
    for (var i = scripts.length - 1;i >= 0;--i) {
      var src = scripts[i].src;
      var qmark = src.lastIndexOf("?");
      var l = qmark == -1 ? src.length : qmark;
      if (src.substr(l - 7, 7) == "base.js") {
        goog.basePath = src.substr(0, l - 7);
        return;
      }
    }
  };
  goog.importScript_ = function(src) {
    var importScript = goog.global.CLOSURE_IMPORT_SCRIPT || goog.writeScriptTag_;
    if (!goog.dependencies_.written[src] && importScript(src)) {
      goog.dependencies_.written[src] = true;
    }
  };
  goog.writeScriptTag_ = function(src) {
    if (goog.inHtmlDocument_()) {
      var doc = goog.global.document;
      if (doc.readyState == "complete") {
        var isDeps = /\bdeps.js$/.test(src);
        if (isDeps) {
          return false;
        } else {
          throw Error('Cannot write "' + src + '" after document load');
        }
      }
      doc.write('\x3cscript type\x3d"text/javascript" src\x3d"' + src + '"\x3e\x3c/' + "script\x3e");
      return true;
    } else {
      return false;
    }
  };
  goog.writeScripts_ = function() {
    var scripts = [];
    var seenScript = {};
    var deps = goog.dependencies_;
    function visitNode(path) {
      if (path in deps.written) {
        return;
      }
      if (path in deps.visited) {
        if (!(path in seenScript)) {
          seenScript[path] = true;
          scripts.push(path);
        }
        return;
      }
      deps.visited[path] = true;
      if (path in deps.requires) {
        for (var requireName in deps.requires[path]) {
          if (!goog.isProvided_(requireName)) {
            if (requireName in deps.nameToPath) {
              visitNode(deps.nameToPath[requireName]);
            } else {
              throw Error("Undefined nameToPath for " + requireName);
            }
          }
        }
      }
      if (!(path in seenScript)) {
        seenScript[path] = true;
        scripts.push(path);
      }
    }
    for (var path in goog.included_) {
      if (!deps.written[path]) {
        visitNode(path);
      }
    }
    for (var i = 0;i < scripts.length;i++) {
      if (scripts[i]) {
        goog.importScript_(goog.basePath + scripts[i]);
      } else {
        throw Error("Undefined script input");
      }
    }
  };
  goog.getPathFromDeps_ = function(rule) {
    if (rule in goog.dependencies_.nameToPath) {
      return goog.dependencies_.nameToPath[rule];
    } else {
      return null;
    }
  };
  goog.findBasePath_();
  if (!goog.global.CLOSURE_NO_DEPS) {
    goog.importScript_(goog.basePath + "deps.js");
  }
}
goog.typeOf = function(value) {
  var s = typeof value;
  if (s == "object") {
    if (value) {
      if (value instanceof Array) {
        return "array";
      } else {
        if (value instanceof Object) {
          return s;
        }
      }
      var className = Object.prototype.toString.call((value));
      if (className == "[object Window]") {
        return "object";
      }
      if (className == "[object Array]" || typeof value.length == "number" && typeof value.splice != "undefined" && typeof value.propertyIsEnumerable != "undefined" && !value.propertyIsEnumerable("splice")) {
        return "array";
      }
      if (className == "[object Function]" || typeof value.call != "undefined" && typeof value.propertyIsEnumerable != "undefined" && !value.propertyIsEnumerable("call")) {
        return "function";
      }
    } else {
      return "null";
    }
  } else {
    if (s == "function" && typeof value.call == "undefined") {
      return "object";
    }
  }
  return s;
};
goog.isNull = function(val) {
  return val === null;
};
goog.isDefAndNotNull = function(val) {
  return val != null;
};
goog.isArray = function(val) {
  return goog.typeOf(val) == "array";
};
goog.isArrayLike = function(val) {
  var type = goog.typeOf(val);
  return type == "array" || type == "object" && typeof val.length == "number";
};
goog.isDateLike = function(val) {
  return goog.isObject(val) && typeof val.getFullYear == "function";
};
goog.isString = function(val) {
  return typeof val == "string";
};
goog.isBoolean = function(val) {
  return typeof val == "boolean";
};
goog.isNumber = function(val) {
  return typeof val == "number";
};
goog.isFunction = function(val) {
  return goog.typeOf(val) == "function";
};
goog.isObject = function(val) {
  var type = typeof val;
  return type == "object" && val != null || type == "function";
};
goog.getUid = function(obj) {
  return obj[goog.UID_PROPERTY_] || (obj[goog.UID_PROPERTY_] = ++goog.uidCounter_);
};
goog.hasUid = function(obj) {
  return!!obj[goog.UID_PROPERTY_];
};
goog.removeUid = function(obj) {
  if ("removeAttribute" in obj) {
    obj.removeAttribute(goog.UID_PROPERTY_);
  }
  try {
    delete obj[goog.UID_PROPERTY_];
  } catch (ex) {
  }
};
goog.UID_PROPERTY_ = "closure_uid_" + (Math.random() * 1E9 >>> 0);
goog.uidCounter_ = 0;
goog.getHashCode = goog.getUid;
goog.removeHashCode = goog.removeUid;
goog.cloneObject = function(obj) {
  var type = goog.typeOf(obj);
  if (type == "object" || type == "array") {
    if (obj.clone) {
      return obj.clone();
    }
    var clone = type == "array" ? [] : {};
    for (var key in obj) {
      clone[key] = goog.cloneObject(obj[key]);
    }
    return clone;
  }
  return obj;
};
goog.bindNative_ = function(fn, selfObj, var_args) {
  return(fn.call.apply(fn.bind, arguments));
};
goog.bindJs_ = function(fn, selfObj, var_args) {
  if (!fn) {
    throw new Error;
  }
  if (arguments.length > 2) {
    var boundArgs = Array.prototype.slice.call(arguments, 2);
    return function() {
      var newArgs = Array.prototype.slice.call(arguments);
      Array.prototype.unshift.apply(newArgs, boundArgs);
      return fn.apply(selfObj, newArgs);
    };
  } else {
    return function() {
      return fn.apply(selfObj, arguments);
    };
  }
};
goog.bind = function(fn, selfObj, var_args) {
  if (Function.prototype.bind && Function.prototype.bind.toString().indexOf("native code") != -1) {
    goog.bind = goog.bindNative_;
  } else {
    goog.bind = goog.bindJs_;
  }
  return goog.bind.apply(null, arguments);
};
goog.partial = function(fn, var_args) {
  var args = Array.prototype.slice.call(arguments, 1);
  return function() {
    var newArgs = args.slice();
    newArgs.push.apply(newArgs, arguments);
    return fn.apply(this, newArgs);
  };
};
goog.mixin = function(target, source) {
  for (var x in source) {
    target[x] = source[x];
  }
};
goog.now = goog.TRUSTED_SITE && Date.now || function() {
  return+new Date;
};
goog.globalEval = function(script) {
  if (goog.global.execScript) {
    goog.global.execScript(script, "JavaScript");
  } else {
    if (goog.global.eval) {
      if (goog.evalWorksForGlobals_ == null) {
        goog.global.eval("var _et_ \x3d 1;");
        if (typeof goog.global["_et_"] != "undefined") {
          delete goog.global["_et_"];
          goog.evalWorksForGlobals_ = true;
        } else {
          goog.evalWorksForGlobals_ = false;
        }
      }
      if (goog.evalWorksForGlobals_) {
        goog.global.eval(script);
      } else {
        var doc = goog.global.document;
        var scriptElt = doc.createElement("script");
        scriptElt.type = "text/javascript";
        scriptElt.defer = false;
        scriptElt.appendChild(doc.createTextNode(script));
        doc.body.appendChild(scriptElt);
        doc.body.removeChild(scriptElt);
      }
    } else {
      throw Error("goog.globalEval not available");
    }
  }
};
goog.evalWorksForGlobals_ = null;
goog.cssNameMapping_;
goog.cssNameMappingStyle_;
goog.getCssName = function(className, opt_modifier) {
  var getMapping = function(cssName) {
    return goog.cssNameMapping_[cssName] || cssName;
  };
  var renameByParts = function(cssName) {
    var parts = cssName.split("-");
    var mapped = [];
    for (var i = 0;i < parts.length;i++) {
      mapped.push(getMapping(parts[i]));
    }
    return mapped.join("-");
  };
  var rename;
  if (goog.cssNameMapping_) {
    rename = goog.cssNameMappingStyle_ == "BY_WHOLE" ? getMapping : renameByParts;
  } else {
    rename = function(a) {
      return a;
    };
  }
  if (opt_modifier) {
    return className + "-" + rename(opt_modifier);
  } else {
    return rename(className);
  }
};
goog.setCssNameMapping = function(mapping, opt_style) {
  goog.cssNameMapping_ = mapping;
  goog.cssNameMappingStyle_ = opt_style;
};
goog.global.CLOSURE_CSS_NAME_MAPPING;
if (!COMPILED && goog.global.CLOSURE_CSS_NAME_MAPPING) {
  goog.cssNameMapping_ = goog.global.CLOSURE_CSS_NAME_MAPPING;
}
goog.getMsg = function(str, opt_values) {
  if (opt_values) {
    str = str.replace(/\{\$([^}]+)}/g, function(match, key) {
      return key in opt_values ? opt_values[key] : match;
    });
  }
  return str;
};
goog.getMsgWithFallback = function(a, b) {
  return a;
};
goog.exportSymbol = function(publicPath, object, opt_objectToExportTo) {
  goog.exportPath_(publicPath, object, opt_objectToExportTo);
};
goog.exportProperty = function(object, publicName, symbol) {
  object[publicName] = symbol;
};
goog.inherits = function(childCtor, parentCtor) {
  function tempCtor() {
  }
  tempCtor.prototype = parentCtor.prototype;
  childCtor.superClass_ = parentCtor.prototype;
  childCtor.prototype = new tempCtor;
  childCtor.prototype.constructor = childCtor;
  childCtor.base = function(me, methodName, var_args) {
    var args = Array.prototype.slice.call(arguments, 2);
    return parentCtor.prototype[methodName].apply(me, args);
  };
};
goog.base = function(me, opt_methodName, var_args) {
  var caller = arguments.callee.caller;
  if (goog.STRICT_MODE_COMPATIBLE || goog.DEBUG && !caller) {
    throw Error("arguments.caller not defined.  goog.base() cannot be used " + "with strict mode code. See " + "http://www.ecma-international.org/ecma-262/5.1/#sec-C");
  }
  if (caller.superClass_) {
    return caller.superClass_.constructor.apply(me, Array.prototype.slice.call(arguments, 1));
  }
  var args = Array.prototype.slice.call(arguments, 2);
  var foundCaller = false;
  for (var ctor = me.constructor;ctor;ctor = ctor.superClass_ && ctor.superClass_.constructor) {
    if (ctor.prototype[opt_methodName] === caller) {
      foundCaller = true;
    } else {
      if (foundCaller) {
        return ctor.prototype[opt_methodName].apply(me, args);
      }
    }
  }
  if (me[opt_methodName] === caller) {
    return me.constructor.prototype[opt_methodName].apply(me, args);
  } else {
    throw Error("goog.base called from a method of one name " + "to a method of a different name");
  }
};
goog.scope = function(fn) {
  fn.call(goog.global);
};
if (!COMPILED) {
  goog.global["COMPILED"] = COMPILED;
}
goog.defineClass = function(superClass, def) {
  var constructor = def.constructor;
  var statics = def.statics;
  if (!constructor || constructor == Object.prototype.constructor) {
    constructor = function() {
      throw Error("cannot instantiate an interface (no constructor defined).");
    };
  }
  var cls = goog.defineClass.createSealingConstructor_(constructor, superClass);
  if (superClass) {
    goog.inherits(cls, superClass);
  }
  delete def.constructor;
  delete def.statics;
  goog.defineClass.applyProperties_(cls.prototype, def);
  if (statics != null) {
    if (statics instanceof Function) {
      statics(cls);
    } else {
      goog.defineClass.applyProperties_(cls, statics);
    }
  }
  return cls;
};
goog.defineClass.ClassDescriptor;
goog.define("goog.defineClass.SEAL_CLASS_INSTANCES", goog.DEBUG);
goog.defineClass.createSealingConstructor_ = function(ctr, superClass) {
  if (goog.defineClass.SEAL_CLASS_INSTANCES && Object.seal instanceof Function) {
    if (superClass && superClass.prototype && superClass.prototype[goog.UNSEALABLE_CONSTRUCTOR_PROPERTY_]) {
      return ctr;
    }
    var wrappedCtr = function() {
      var instance = ctr.apply(this, arguments) || this;
      if (this.constructor === wrappedCtr) {
        Object.seal(instance);
      }
      return instance;
    };
    return wrappedCtr;
  }
  return ctr;
};
goog.defineClass.OBJECT_PROTOTYPE_FIELDS_ = ["constructor", "hasOwnProperty", "isPrototypeOf", "propertyIsEnumerable", "toLocaleString", "toString", "valueOf"];
goog.defineClass.applyProperties_ = function(target, source) {
  var key;
  for (key in source) {
    if (Object.prototype.hasOwnProperty.call(source, key)) {
      target[key] = source[key];
    }
  }
  for (var i = 0;i < goog.defineClass.OBJECT_PROTOTYPE_FIELDS_.length;i++) {
    key = goog.defineClass.OBJECT_PROTOTYPE_FIELDS_[i];
    if (Object.prototype.hasOwnProperty.call(source, key)) {
      target[key] = source[key];
    }
  }
};
goog.tagUnsealableClass = function(ctr) {
  if (!COMPILED && goog.defineClass.SEAL_CLASS_INSTANCES) {
    ctr.prototype[goog.UNSEALABLE_CONSTRUCTOR_PROPERTY_] = true;
  }
};
goog.UNSEALABLE_CONSTRUCTOR_PROPERTY_ = "goog_defineClass_legacy_unsealable";
goog.provide("goog.string");
goog.provide("goog.string.Unicode");
goog.define("goog.string.DETECT_DOUBLE_ESCAPING", false);
goog.string.Unicode = {NBSP:"\u00a0"};
goog.string.startsWith = function(str, prefix) {
  return str.lastIndexOf(prefix, 0) == 0;
};
goog.string.endsWith = function(str, suffix) {
  var l = str.length - suffix.length;
  return l >= 0 && str.indexOf(suffix, l) == l;
};
goog.string.caseInsensitiveStartsWith = function(str, prefix) {
  return goog.string.caseInsensitiveCompare(prefix, str.substr(0, prefix.length)) == 0;
};
goog.string.caseInsensitiveEndsWith = function(str, suffix) {
  return goog.string.caseInsensitiveCompare(suffix, str.substr(str.length - suffix.length, suffix.length)) == 0;
};
goog.string.caseInsensitiveEquals = function(str1, str2) {
  return str1.toLowerCase() == str2.toLowerCase();
};
goog.string.subs = function(str, var_args) {
  var splitParts = str.split("%s");
  var returnString = "";
  var subsArguments = Array.prototype.slice.call(arguments, 1);
  while (subsArguments.length && splitParts.length > 1) {
    returnString += splitParts.shift() + subsArguments.shift();
  }
  return returnString + splitParts.join("%s");
};
goog.string.collapseWhitespace = function(str) {
  return str.replace(/[\s\xa0]+/g, " ").replace(/^\s+|\s+$/g, "");
};
goog.string.isEmpty = function(str) {
  return/^[\s\xa0]*$/.test(str);
};
goog.string.isEmptySafe = function(str) {
  return goog.string.isEmpty(goog.string.makeSafe(str));
};
goog.string.isBreakingWhitespace = function(str) {
  return!/[^\t\n\r ]/.test(str);
};
goog.string.isAlpha = function(str) {
  return!/[^a-zA-Z]/.test(str);
};
goog.string.isNumeric = function(str) {
  return!/[^0-9]/.test(str);
};
goog.string.isAlphaNumeric = function(str) {
  return!/[^a-zA-Z0-9]/.test(str);
};
goog.string.isSpace = function(ch) {
  return ch == " ";
};
goog.string.isUnicodeChar = function(ch) {
  return ch.length == 1 && ch >= " " && ch <= "~" || ch >= "\u0080" && ch <= "\ufffd";
};
goog.string.stripNewlines = function(str) {
  return str.replace(/(\r\n|\r|\n)+/g, " ");
};
goog.string.canonicalizeNewlines = function(str) {
  return str.replace(/(\r\n|\r|\n)/g, "\n");
};
goog.string.normalizeWhitespace = function(str) {
  return str.replace(/\xa0|\s/g, " ");
};
goog.string.normalizeSpaces = function(str) {
  return str.replace(/\xa0|[ \t]+/g, " ");
};
goog.string.collapseBreakingSpaces = function(str) {
  return str.replace(/[\t\r\n ]+/g, " ").replace(/^[\t\r\n ]+|[\t\r\n ]+$/g, "");
};
goog.string.trim = function(str) {
  return str.replace(/^[\s\xa0]+|[\s\xa0]+$/g, "");
};
goog.string.trimLeft = function(str) {
  return str.replace(/^[\s\xa0]+/, "");
};
goog.string.trimRight = function(str) {
  return str.replace(/[\s\xa0]+$/, "");
};
goog.string.caseInsensitiveCompare = function(str1, str2) {
  var test1 = String(str1).toLowerCase();
  var test2 = String(str2).toLowerCase();
  if (test1 < test2) {
    return-1;
  } else {
    if (test1 == test2) {
      return 0;
    } else {
      return 1;
    }
  }
};
goog.string.numerateCompareRegExp_ = /(\.\d+)|(\d+)|(\D+)/g;
goog.string.numerateCompare = function(str1, str2) {
  if (str1 == str2) {
    return 0;
  }
  if (!str1) {
    return-1;
  }
  if (!str2) {
    return 1;
  }
  var tokens1 = str1.toLowerCase().match(goog.string.numerateCompareRegExp_);
  var tokens2 = str2.toLowerCase().match(goog.string.numerateCompareRegExp_);
  var count = Math.min(tokens1.length, tokens2.length);
  for (var i = 0;i < count;i++) {
    var a = tokens1[i];
    var b = tokens2[i];
    if (a != b) {
      var num1 = parseInt(a, 10);
      if (!isNaN(num1)) {
        var num2 = parseInt(b, 10);
        if (!isNaN(num2) && num1 - num2) {
          return num1 - num2;
        }
      }
      return a < b ? -1 : 1;
    }
  }
  if (tokens1.length != tokens2.length) {
    return tokens1.length - tokens2.length;
  }
  return str1 < str2 ? -1 : 1;
};
goog.string.urlEncode = function(str) {
  return encodeURIComponent(String(str));
};
goog.string.urlDecode = function(str) {
  return decodeURIComponent(str.replace(/\+/g, " "));
};
goog.string.newLineToBr = function(str, opt_xml) {
  return str.replace(/(\r\n|\r|\n)/g, opt_xml ? "\x3cbr /\x3e" : "\x3cbr\x3e");
};
goog.string.htmlEscape = function(str, opt_isLikelyToContainHtmlChars) {
  if (opt_isLikelyToContainHtmlChars) {
    str = str.replace(goog.string.AMP_RE_, "\x26amp;").replace(goog.string.LT_RE_, "\x26lt;").replace(goog.string.GT_RE_, "\x26gt;").replace(goog.string.QUOT_RE_, "\x26quot;").replace(goog.string.SINGLE_QUOTE_RE_, "\x26#39;").replace(goog.string.NULL_RE_, "\x26#0;");
    if (goog.string.DETECT_DOUBLE_ESCAPING) {
      str = str.replace(goog.string.E_RE_, "\x26#101;");
    }
    return str;
  } else {
    if (!goog.string.ALL_RE_.test(str)) {
      return str;
    }
    if (str.indexOf("\x26") != -1) {
      str = str.replace(goog.string.AMP_RE_, "\x26amp;");
    }
    if (str.indexOf("\x3c") != -1) {
      str = str.replace(goog.string.LT_RE_, "\x26lt;");
    }
    if (str.indexOf("\x3e") != -1) {
      str = str.replace(goog.string.GT_RE_, "\x26gt;");
    }
    if (str.indexOf('"') != -1) {
      str = str.replace(goog.string.QUOT_RE_, "\x26quot;");
    }
    if (str.indexOf("'") != -1) {
      str = str.replace(goog.string.SINGLE_QUOTE_RE_, "\x26#39;");
    }
    if (str.indexOf("\x00") != -1) {
      str = str.replace(goog.string.NULL_RE_, "\x26#0;");
    }
    if (goog.string.DETECT_DOUBLE_ESCAPING && str.indexOf("e") != -1) {
      str = str.replace(goog.string.E_RE_, "\x26#101;");
    }
    return str;
  }
};
goog.string.AMP_RE_ = /&/g;
goog.string.LT_RE_ = /</g;
goog.string.GT_RE_ = />/g;
goog.string.QUOT_RE_ = /"/g;
goog.string.SINGLE_QUOTE_RE_ = /'/g;
goog.string.NULL_RE_ = /\x00/g;
goog.string.E_RE_ = /e/g;
goog.string.ALL_RE_ = goog.string.DETECT_DOUBLE_ESCAPING ? /[\x00&<>"'e]/ : /[\x00&<>"']/;
goog.string.unescapeEntities = function(str) {
  if (goog.string.contains(str, "\x26")) {
    if ("document" in goog.global) {
      return goog.string.unescapeEntitiesUsingDom_(str);
    } else {
      return goog.string.unescapePureXmlEntities_(str);
    }
  }
  return str;
};
goog.string.unescapeEntitiesWithDocument = function(str, document) {
  if (goog.string.contains(str, "\x26")) {
    return goog.string.unescapeEntitiesUsingDom_(str, document);
  }
  return str;
};
goog.string.unescapeEntitiesUsingDom_ = function(str, opt_document) {
  var seen = {"\x26amp;":"\x26", "\x26lt;":"\x3c", "\x26gt;":"\x3e", "\x26quot;":'"'};
  var div;
  if (opt_document) {
    div = opt_document.createElement("div");
  } else {
    div = goog.global.document.createElement("div");
  }
  return str.replace(goog.string.HTML_ENTITY_PATTERN_, function(s, entity) {
    var value = seen[s];
    if (value) {
      return value;
    }
    if (entity.charAt(0) == "#") {
      var n = Number("0" + entity.substr(1));
      if (!isNaN(n)) {
        value = String.fromCharCode(n);
      }
    }
    if (!value) {
      div.innerHTML = s + " ";
      value = div.firstChild.nodeValue.slice(0, -1);
    }
    return seen[s] = value;
  });
};
goog.string.unescapePureXmlEntities_ = function(str) {
  return str.replace(/&([^;]+);/g, function(s, entity) {
    switch(entity) {
      case "amp":
        return "\x26";
      case "lt":
        return "\x3c";
      case "gt":
        return "\x3e";
      case "quot":
        return'"';
      default:
        if (entity.charAt(0) == "#") {
          var n = Number("0" + entity.substr(1));
          if (!isNaN(n)) {
            return String.fromCharCode(n);
          }
        }
        return s;
    }
  });
};
goog.string.HTML_ENTITY_PATTERN_ = /&([^;\s<&]+);?/g;
goog.string.whitespaceEscape = function(str, opt_xml) {
  return goog.string.newLineToBr(str.replace(/  /g, " \x26#160;"), opt_xml);
};
goog.string.preserveSpaces = function(str) {
  return str.replace(/(^|[\n ]) /g, "$1" + goog.string.Unicode.NBSP);
};
goog.string.stripQuotes = function(str, quoteChars) {
  var length = quoteChars.length;
  for (var i = 0;i < length;i++) {
    var quoteChar = length == 1 ? quoteChars : quoteChars.charAt(i);
    if (str.charAt(0) == quoteChar && str.charAt(str.length - 1) == quoteChar) {
      return str.substring(1, str.length - 1);
    }
  }
  return str;
};
goog.string.truncate = function(str, chars, opt_protectEscapedCharacters) {
  if (opt_protectEscapedCharacters) {
    str = goog.string.unescapeEntities(str);
  }
  if (str.length > chars) {
    str = str.substring(0, chars - 3) + "...";
  }
  if (opt_protectEscapedCharacters) {
    str = goog.string.htmlEscape(str);
  }
  return str;
};
goog.string.truncateMiddle = function(str, chars, opt_protectEscapedCharacters, opt_trailingChars) {
  if (opt_protectEscapedCharacters) {
    str = goog.string.unescapeEntities(str);
  }
  if (opt_trailingChars && str.length > chars) {
    if (opt_trailingChars > chars) {
      opt_trailingChars = chars;
    }
    var endPoint = str.length - opt_trailingChars;
    var startPoint = chars - opt_trailingChars;
    str = str.substring(0, startPoint) + "..." + str.substring(endPoint);
  } else {
    if (str.length > chars) {
      var half = Math.floor(chars / 2);
      var endPos = str.length - half;
      half += chars % 2;
      str = str.substring(0, half) + "..." + str.substring(endPos);
    }
  }
  if (opt_protectEscapedCharacters) {
    str = goog.string.htmlEscape(str);
  }
  return str;
};
goog.string.specialEscapeChars_ = {"\x00":"\\0", "\b":"\\b", "\f":"\\f", "\n":"\\n", "\r":"\\r", "\t":"\\t", "\x0B":"\\x0B", '"':'\\"', "\\":"\\\\"};
goog.string.jsEscapeCache_ = {"'":"\\'"};
goog.string.quote = function(s) {
  s = String(s);
  if (s.quote) {
    return s.quote();
  } else {
    var sb = ['"'];
    for (var i = 0;i < s.length;i++) {
      var ch = s.charAt(i);
      var cc = ch.charCodeAt(0);
      sb[i + 1] = goog.string.specialEscapeChars_[ch] || (cc > 31 && cc < 127 ? ch : goog.string.escapeChar(ch));
    }
    sb.push('"');
    return sb.join("");
  }
};
goog.string.escapeString = function(str) {
  var sb = [];
  for (var i = 0;i < str.length;i++) {
    sb[i] = goog.string.escapeChar(str.charAt(i));
  }
  return sb.join("");
};
goog.string.escapeChar = function(c) {
  if (c in goog.string.jsEscapeCache_) {
    return goog.string.jsEscapeCache_[c];
  }
  if (c in goog.string.specialEscapeChars_) {
    return goog.string.jsEscapeCache_[c] = goog.string.specialEscapeChars_[c];
  }
  var rv = c;
  var cc = c.charCodeAt(0);
  if (cc > 31 && cc < 127) {
    rv = c;
  } else {
    if (cc < 256) {
      rv = "\\x";
      if (cc < 16 || cc > 256) {
        rv += "0";
      }
    } else {
      rv = "\\u";
      if (cc < 4096) {
        rv += "0";
      }
    }
    rv += cc.toString(16).toUpperCase();
  }
  return goog.string.jsEscapeCache_[c] = rv;
};
goog.string.toMap = function(s) {
  var rv = {};
  for (var i = 0;i < s.length;i++) {
    rv[s.charAt(i)] = true;
  }
  return rv;
};
goog.string.contains = function(str, subString) {
  return str.indexOf(subString) != -1;
};
goog.string.caseInsensitiveContains = function(str, subString) {
  return goog.string.contains(str.toLowerCase(), subString.toLowerCase());
};
goog.string.countOf = function(s, ss) {
  return s && ss ? s.split(ss).length - 1 : 0;
};
goog.string.removeAt = function(s, index, stringLength) {
  var resultStr = s;
  if (index >= 0 && index < s.length && stringLength > 0) {
    resultStr = s.substr(0, index) + s.substr(index + stringLength, s.length - index - stringLength);
  }
  return resultStr;
};
goog.string.remove = function(s, ss) {
  var re = new RegExp(goog.string.regExpEscape(ss), "");
  return s.replace(re, "");
};
goog.string.removeAll = function(s, ss) {
  var re = new RegExp(goog.string.regExpEscape(ss), "g");
  return s.replace(re, "");
};
goog.string.regExpEscape = function(s) {
  return String(s).replace(/([-()\[\]{}+?*.$\^|,:#<!\\])/g, "\\$1").replace(/\x08/g, "\\x08");
};
goog.string.repeat = function(string, length) {
  return(new Array(length + 1)).join(string);
};
goog.string.padNumber = function(num, length, opt_precision) {
  var s = goog.isDef(opt_precision) ? num.toFixed(opt_precision) : String(num);
  var index = s.indexOf(".");
  if (index == -1) {
    index = s.length;
  }
  return goog.string.repeat("0", Math.max(0, length - index)) + s;
};
goog.string.makeSafe = function(obj) {
  return obj == null ? "" : String(obj);
};
goog.string.buildString = function(var_args) {
  return Array.prototype.join.call(arguments, "");
};
goog.string.getRandomString = function() {
  var x = 2147483648;
  return Math.floor(Math.random() * x).toString(36) + Math.abs(Math.floor(Math.random() * x) ^ goog.now()).toString(36);
};
goog.string.compareVersions = function(version1, version2) {
  var order = 0;
  var v1Subs = goog.string.trim(String(version1)).split(".");
  var v2Subs = goog.string.trim(String(version2)).split(".");
  var subCount = Math.max(v1Subs.length, v2Subs.length);
  for (var subIdx = 0;order == 0 && subIdx < subCount;subIdx++) {
    var v1Sub = v1Subs[subIdx] || "";
    var v2Sub = v2Subs[subIdx] || "";
    var v1CompParser = new RegExp("(\\d*)(\\D*)", "g");
    var v2CompParser = new RegExp("(\\d*)(\\D*)", "g");
    do {
      var v1Comp = v1CompParser.exec(v1Sub) || ["", "", ""];
      var v2Comp = v2CompParser.exec(v2Sub) || ["", "", ""];
      if (v1Comp[0].length == 0 && v2Comp[0].length == 0) {
        break;
      }
      var v1CompNum = v1Comp[1].length == 0 ? 0 : parseInt(v1Comp[1], 10);
      var v2CompNum = v2Comp[1].length == 0 ? 0 : parseInt(v2Comp[1], 10);
      order = goog.string.compareElements_(v1CompNum, v2CompNum) || goog.string.compareElements_(v1Comp[2].length == 0, v2Comp[2].length == 0) || goog.string.compareElements_(v1Comp[2], v2Comp[2]);
    } while (order == 0);
  }
  return order;
};
goog.string.compareElements_ = function(left, right) {
  if (left < right) {
    return-1;
  } else {
    if (left > right) {
      return 1;
    }
  }
  return 0;
};
goog.string.HASHCODE_MAX_ = 4294967296;
goog.string.hashCode = function(str) {
  var result = 0;
  for (var i = 0;i < str.length;++i) {
    result = 31 * result + str.charCodeAt(i);
    result %= goog.string.HASHCODE_MAX_;
  }
  return result;
};
goog.string.uniqueStringCounter_ = Math.random() * 2147483648 | 0;
goog.string.createUniqueString = function() {
  return "goog_" + goog.string.uniqueStringCounter_++;
};
goog.string.toNumber = function(str) {
  var num = Number(str);
  if (num == 0 && goog.string.isEmpty(str)) {
    return NaN;
  }
  return num;
};
goog.string.isLowerCamelCase = function(str) {
  return/^[a-z]+([A-Z][a-z]*)*$/.test(str);
};
goog.string.isUpperCamelCase = function(str) {
  return/^([A-Z][a-z]*)+$/.test(str);
};
goog.string.toCamelCase = function(str) {
  return String(str).replace(/\-([a-z])/g, function(all, match) {
    return match.toUpperCase();
  });
};
goog.string.toSelectorCase = function(str) {
  return String(str).replace(/([A-Z])/g, "-$1").toLowerCase();
};
goog.string.toTitleCase = function(str, opt_delimiters) {
  var delimiters = goog.isString(opt_delimiters) ? goog.string.regExpEscape(opt_delimiters) : "\\s";
  delimiters = delimiters ? "|[" + delimiters + "]+" : "";
  var regexp = new RegExp("(^" + delimiters + ")([a-z])", "g");
  return str.replace(regexp, function(all, p1, p2) {
    return p1 + p2.toUpperCase();
  });
};
goog.string.parseInt = function(value) {
  if (isFinite(value)) {
    value = String(value);
  }
  if (goog.isString(value)) {
    return/^\s*-?0x/i.test(value) ? parseInt(value, 16) : parseInt(value, 10);
  }
  return NaN;
};
goog.string.splitLimit = function(str, separator, limit) {
  var parts = str.split(separator);
  var returnVal = [];
  while (limit > 0 && parts.length) {
    returnVal.push(parts.shift());
    limit--;
  }
  if (parts.length) {
    returnVal.push(parts.join(separator));
  }
  return returnVal;
};
goog.provide("goog.object");
goog.object.forEach = function(obj, f, opt_obj) {
  for (var key in obj) {
    f.call(opt_obj, obj[key], key, obj);
  }
};
goog.object.filter = function(obj, f, opt_obj) {
  var res = {};
  for (var key in obj) {
    if (f.call(opt_obj, obj[key], key, obj)) {
      res[key] = obj[key];
    }
  }
  return res;
};
goog.object.map = function(obj, f, opt_obj) {
  var res = {};
  for (var key in obj) {
    res[key] = f.call(opt_obj, obj[key], key, obj);
  }
  return res;
};
goog.object.some = function(obj, f, opt_obj) {
  for (var key in obj) {
    if (f.call(opt_obj, obj[key], key, obj)) {
      return true;
    }
  }
  return false;
};
goog.object.every = function(obj, f, opt_obj) {
  for (var key in obj) {
    if (!f.call(opt_obj, obj[key], key, obj)) {
      return false;
    }
  }
  return true;
};
goog.object.getCount = function(obj) {
  var rv = 0;
  for (var key in obj) {
    rv++;
  }
  return rv;
};
goog.object.getAnyKey = function(obj) {
  for (var key in obj) {
    return key;
  }
};
goog.object.getAnyValue = function(obj) {
  for (var key in obj) {
    return obj[key];
  }
};
goog.object.contains = function(obj, val) {
  return goog.object.containsValue(obj, val);
};
goog.object.getValues = function(obj) {
  var res = [];
  var i = 0;
  for (var key in obj) {
    res[i++] = obj[key];
  }
  return res;
};
goog.object.getKeys = function(obj) {
  var res = [];
  var i = 0;
  for (var key in obj) {
    res[i++] = key;
  }
  return res;
};
goog.object.getValueByKeys = function(obj, var_args) {
  var isArrayLike = goog.isArrayLike(var_args);
  var keys = isArrayLike ? var_args : arguments;
  for (var i = isArrayLike ? 0 : 1;i < keys.length;i++) {
    obj = obj[keys[i]];
    if (!goog.isDef(obj)) {
      break;
    }
  }
  return obj;
};
goog.object.containsKey = function(obj, key) {
  return key in obj;
};
goog.object.containsValue = function(obj, val) {
  for (var key in obj) {
    if (obj[key] == val) {
      return true;
    }
  }
  return false;
};
goog.object.findKey = function(obj, f, opt_this) {
  for (var key in obj) {
    if (f.call(opt_this, obj[key], key, obj)) {
      return key;
    }
  }
  return undefined;
};
goog.object.findValue = function(obj, f, opt_this) {
  var key = goog.object.findKey(obj, f, opt_this);
  return key && obj[key];
};
goog.object.isEmpty = function(obj) {
  for (var key in obj) {
    return false;
  }
  return true;
};
goog.object.clear = function(obj) {
  for (var i in obj) {
    delete obj[i];
  }
};
goog.object.remove = function(obj, key) {
  var rv;
  if (rv = key in obj) {
    delete obj[key];
  }
  return rv;
};
goog.object.add = function(obj, key, val) {
  if (key in obj) {
    throw Error('The object already contains the key "' + key + '"');
  }
  goog.object.set(obj, key, val);
};
goog.object.get = function(obj, key, opt_val) {
  if (key in obj) {
    return obj[key];
  }
  return opt_val;
};
goog.object.set = function(obj, key, value) {
  obj[key] = value;
};
goog.object.setIfUndefined = function(obj, key, value) {
  return key in obj ? obj[key] : obj[key] = value;
};
goog.object.clone = function(obj) {
  var res = {};
  for (var key in obj) {
    res[key] = obj[key];
  }
  return res;
};
goog.object.unsafeClone = function(obj) {
  var type = goog.typeOf(obj);
  if (type == "object" || type == "array") {
    if (obj.clone) {
      return obj.clone();
    }
    var clone = type == "array" ? [] : {};
    for (var key in obj) {
      clone[key] = goog.object.unsafeClone(obj[key]);
    }
    return clone;
  }
  return obj;
};
goog.object.transpose = function(obj) {
  var transposed = {};
  for (var key in obj) {
    transposed[obj[key]] = key;
  }
  return transposed;
};
goog.object.PROTOTYPE_FIELDS_ = ["constructor", "hasOwnProperty", "isPrototypeOf", "propertyIsEnumerable", "toLocaleString", "toString", "valueOf"];
goog.object.extend = function(target, var_args) {
  var key, source;
  for (var i = 1;i < arguments.length;i++) {
    source = arguments[i];
    for (key in source) {
      target[key] = source[key];
    }
    for (var j = 0;j < goog.object.PROTOTYPE_FIELDS_.length;j++) {
      key = goog.object.PROTOTYPE_FIELDS_[j];
      if (Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key];
      }
    }
  }
};
goog.object.create = function(var_args) {
  var argLength = arguments.length;
  if (argLength == 1 && goog.isArray(arguments[0])) {
    return goog.object.create.apply(null, arguments[0]);
  }
  if (argLength % 2) {
    throw Error("Uneven number of arguments");
  }
  var rv = {};
  for (var i = 0;i < argLength;i += 2) {
    rv[arguments[i]] = arguments[i + 1];
  }
  return rv;
};
goog.object.createSet = function(var_args) {
  var argLength = arguments.length;
  if (argLength == 1 && goog.isArray(arguments[0])) {
    return goog.object.createSet.apply(null, arguments[0]);
  }
  var rv = {};
  for (var i = 0;i < argLength;i++) {
    rv[arguments[i]] = true;
  }
  return rv;
};
goog.object.createImmutableView = function(obj) {
  var result = obj;
  if (Object.isFrozen && !Object.isFrozen(obj)) {
    result = Object.create(obj);
    Object.freeze(result);
  }
  return result;
};
goog.object.isImmutableView = function(obj) {
  return!!Object.isFrozen && Object.isFrozen(obj);
};
goog.provide("goog.string.StringBuffer");
goog.string.StringBuffer = function(opt_a1, var_args) {
  if (opt_a1 != null) {
    this.append.apply(this, arguments);
  }
};
goog.string.StringBuffer.prototype.buffer_ = "";
goog.string.StringBuffer.prototype.set = function(s) {
  this.buffer_ = "" + s;
};
goog.string.StringBuffer.prototype.append = function(a1, opt_a2, var_args) {
  this.buffer_ += a1;
  if (opt_a2 != null) {
    for (var i = 1;i < arguments.length;i++) {
      this.buffer_ += arguments[i];
    }
  }
  return this;
};
goog.string.StringBuffer.prototype.clear = function() {
  this.buffer_ = "";
};
goog.string.StringBuffer.prototype.getLength = function() {
  return this.buffer_.length;
};
goog.string.StringBuffer.prototype.toString = function() {
  return this.buffer_;
};
goog.provide("goog.debug.Error");
goog.debug.Error = function(opt_msg) {
  if (Error.captureStackTrace) {
    Error.captureStackTrace(this, goog.debug.Error);
  } else {
    var stack = (new Error).stack;
    if (stack) {
      this.stack = stack;
    }
  }
  if (opt_msg) {
    this.message = String(opt_msg);
  }
};
goog.inherits(goog.debug.Error, Error);
goog.debug.Error.prototype.name = "CustomError";
goog.provide("goog.dom.NodeType");
goog.dom.NodeType = {ELEMENT:1, ATTRIBUTE:2, TEXT:3, CDATA_SECTION:4, ENTITY_REFERENCE:5, ENTITY:6, PROCESSING_INSTRUCTION:7, COMMENT:8, DOCUMENT:9, DOCUMENT_TYPE:10, DOCUMENT_FRAGMENT:11, NOTATION:12};
goog.provide("goog.asserts");
goog.provide("goog.asserts.AssertionError");
goog.require("goog.debug.Error");
goog.require("goog.dom.NodeType");
goog.require("goog.string");
goog.define("goog.asserts.ENABLE_ASSERTS", goog.DEBUG);
goog.asserts.AssertionError = function(messagePattern, messageArgs) {
  messageArgs.unshift(messagePattern);
  goog.debug.Error.call(this, goog.string.subs.apply(null, messageArgs));
  messageArgs.shift();
  this.messagePattern = messagePattern;
};
goog.inherits(goog.asserts.AssertionError, goog.debug.Error);
goog.asserts.AssertionError.prototype.name = "AssertionError";
goog.asserts.DEFAULT_ERROR_HANDLER = function(e) {
  throw e;
};
goog.asserts.errorHandler_ = goog.asserts.DEFAULT_ERROR_HANDLER;
goog.asserts.doAssertFailure_ = function(defaultMessage, defaultArgs, givenMessage, givenArgs) {
  var message = "Assertion failed";
  if (givenMessage) {
    message += ": " + givenMessage;
    var args = givenArgs;
  } else {
    if (defaultMessage) {
      message += ": " + defaultMessage;
      args = defaultArgs;
    }
  }
  var e = new goog.asserts.AssertionError("" + message, args || []);
  goog.asserts.errorHandler_(e);
};
goog.asserts.setErrorHandler = function(errorHandler) {
  if (goog.asserts.ENABLE_ASSERTS) {
    goog.asserts.errorHandler_ = errorHandler;
  }
};
goog.asserts.assert = function(condition, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !condition) {
    goog.asserts.doAssertFailure_("", null, opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return condition;
};
goog.asserts.fail = function(opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS) {
    goog.asserts.errorHandler_(new goog.asserts.AssertionError("Failure" + (opt_message ? ": " + opt_message : ""), Array.prototype.slice.call(arguments, 1)));
  }
};
goog.asserts.assertNumber = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isNumber(value)) {
    goog.asserts.doAssertFailure_("Expected number but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertString = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isString(value)) {
    goog.asserts.doAssertFailure_("Expected string but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertFunction = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isFunction(value)) {
    goog.asserts.doAssertFailure_("Expected function but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertObject = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isObject(value)) {
    goog.asserts.doAssertFailure_("Expected object but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertArray = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isArray(value)) {
    goog.asserts.doAssertFailure_("Expected array but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertBoolean = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isBoolean(value)) {
    goog.asserts.doAssertFailure_("Expected boolean but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertElement = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && (!goog.isObject(value) || value.nodeType != goog.dom.NodeType.ELEMENT)) {
    goog.asserts.doAssertFailure_("Expected Element but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertInstanceof = function(value, type, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !(value instanceof type)) {
    goog.asserts.doAssertFailure_("instanceof check failed.", null, opt_message, Array.prototype.slice.call(arguments, 3));
  }
  return value;
};
goog.asserts.assertObjectPrototypeIsIntact = function() {
  for (var key in Object.prototype) {
    goog.asserts.fail(key + " should not be enumerable in Object.prototype.");
  }
};
goog.provide("goog.array");
goog.provide("goog.array.ArrayLike");
goog.require("goog.asserts");
goog.define("goog.NATIVE_ARRAY_PROTOTYPES", goog.TRUSTED_SITE);
goog.define("goog.array.ASSUME_NATIVE_FUNCTIONS", false);
goog.array.ArrayLike;
goog.array.peek = function(array) {
  return array[array.length - 1];
};
goog.array.last = goog.array.peek;
goog.array.ARRAY_PROTOTYPE_ = Array.prototype;
goog.array.indexOf = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.indexOf) ? function(arr, obj, opt_fromIndex) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.indexOf.call(arr, obj, opt_fromIndex);
} : function(arr, obj, opt_fromIndex) {
  var fromIndex = opt_fromIndex == null ? 0 : opt_fromIndex < 0 ? Math.max(0, arr.length + opt_fromIndex) : opt_fromIndex;
  if (goog.isString(arr)) {
    if (!goog.isString(obj) || obj.length != 1) {
      return-1;
    }
    return arr.indexOf(obj, fromIndex);
  }
  for (var i = fromIndex;i < arr.length;i++) {
    if (i in arr && arr[i] === obj) {
      return i;
    }
  }
  return-1;
};
goog.array.lastIndexOf = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.lastIndexOf) ? function(arr, obj, opt_fromIndex) {
  goog.asserts.assert(arr.length != null);
  var fromIndex = opt_fromIndex == null ? arr.length - 1 : opt_fromIndex;
  return goog.array.ARRAY_PROTOTYPE_.lastIndexOf.call(arr, obj, fromIndex);
} : function(arr, obj, opt_fromIndex) {
  var fromIndex = opt_fromIndex == null ? arr.length - 1 : opt_fromIndex;
  if (fromIndex < 0) {
    fromIndex = Math.max(0, arr.length + fromIndex);
  }
  if (goog.isString(arr)) {
    if (!goog.isString(obj) || obj.length != 1) {
      return-1;
    }
    return arr.lastIndexOf(obj, fromIndex);
  }
  for (var i = fromIndex;i >= 0;i--) {
    if (i in arr && arr[i] === obj) {
      return i;
    }
  }
  return-1;
};
goog.array.forEach = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.forEach) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  goog.array.ARRAY_PROTOTYPE_.forEach.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2) {
      f.call(opt_obj, arr2[i], i, arr);
    }
  }
};
goog.array.forEachRight = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = l - 1;i >= 0;--i) {
    if (i in arr2) {
      f.call(opt_obj, arr2[i], i, arr);
    }
  }
};
goog.array.filter = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.filter) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.filter.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var res = [];
  var resLength = 0;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2) {
      var val = arr2[i];
      if (f.call(opt_obj, val, i, arr)) {
        res[resLength++] = val;
      }
    }
  }
  return res;
};
goog.array.map = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.map) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.map.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var res = new Array(l);
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2) {
      res[i] = f.call(opt_obj, arr2[i], i, arr);
    }
  }
  return res;
};
goog.array.reduce = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.reduce) ? function(arr, f, val, opt_obj) {
  goog.asserts.assert(arr.length != null);
  if (opt_obj) {
    f = goog.bind(f, opt_obj);
  }
  return goog.array.ARRAY_PROTOTYPE_.reduce.call(arr, f, val);
} : function(arr, f, val, opt_obj) {
  var rval = val;
  goog.array.forEach(arr, function(val, index) {
    rval = f.call(opt_obj, rval, val, index, arr);
  });
  return rval;
};
goog.array.reduceRight = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.reduceRight) ? function(arr, f, val, opt_obj) {
  goog.asserts.assert(arr.length != null);
  if (opt_obj) {
    f = goog.bind(f, opt_obj);
  }
  return goog.array.ARRAY_PROTOTYPE_.reduceRight.call(arr, f, val);
} : function(arr, f, val, opt_obj) {
  var rval = val;
  goog.array.forEachRight(arr, function(val, index) {
    rval = f.call(opt_obj, rval, val, index, arr);
  });
  return rval;
};
goog.array.some = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.some) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.some.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return true;
    }
  }
  return false;
};
goog.array.every = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.every) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.every.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2 && !f.call(opt_obj, arr2[i], i, arr)) {
      return false;
    }
  }
  return true;
};
goog.array.count = function(arr, f, opt_obj) {
  var count = 0;
  goog.array.forEach(arr, function(element, index, arr) {
    if (f.call(opt_obj, element, index, arr)) {
      ++count;
    }
  }, opt_obj);
  return count;
};
goog.array.find = function(arr, f, opt_obj) {
  var i = goog.array.findIndex(arr, f, opt_obj);
  return i < 0 ? null : goog.isString(arr) ? arr.charAt(i) : arr[i];
};
goog.array.findIndex = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return i;
    }
  }
  return-1;
};
goog.array.findRight = function(arr, f, opt_obj) {
  var i = goog.array.findIndexRight(arr, f, opt_obj);
  return i < 0 ? null : goog.isString(arr) ? arr.charAt(i) : arr[i];
};
goog.array.findIndexRight = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = l - 1;i >= 0;i--) {
    if (i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return i;
    }
  }
  return-1;
};
goog.array.contains = function(arr, obj) {
  return goog.array.indexOf(arr, obj) >= 0;
};
goog.array.isEmpty = function(arr) {
  return arr.length == 0;
};
goog.array.clear = function(arr) {
  if (!goog.isArray(arr)) {
    for (var i = arr.length - 1;i >= 0;i--) {
      delete arr[i];
    }
  }
  arr.length = 0;
};
goog.array.insert = function(arr, obj) {
  if (!goog.array.contains(arr, obj)) {
    arr.push(obj);
  }
};
goog.array.insertAt = function(arr, obj, opt_i) {
  goog.array.splice(arr, opt_i, 0, obj);
};
goog.array.insertArrayAt = function(arr, elementsToAdd, opt_i) {
  goog.partial(goog.array.splice, arr, opt_i, 0).apply(null, elementsToAdd);
};
goog.array.insertBefore = function(arr, obj, opt_obj2) {
  var i;
  if (arguments.length == 2 || (i = goog.array.indexOf(arr, opt_obj2)) < 0) {
    arr.push(obj);
  } else {
    goog.array.insertAt(arr, obj, i);
  }
};
goog.array.remove = function(arr, obj) {
  var i = goog.array.indexOf(arr, obj);
  var rv;
  if (rv = i >= 0) {
    goog.array.removeAt(arr, i);
  }
  return rv;
};
goog.array.removeAt = function(arr, i) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.splice.call(arr, i, 1).length == 1;
};
goog.array.removeIf = function(arr, f, opt_obj) {
  var i = goog.array.findIndex(arr, f, opt_obj);
  if (i >= 0) {
    goog.array.removeAt(arr, i);
    return true;
  }
  return false;
};
goog.array.concat = function(var_args) {
  return goog.array.ARRAY_PROTOTYPE_.concat.apply(goog.array.ARRAY_PROTOTYPE_, arguments);
};
goog.array.join = function(var_args) {
  return goog.array.ARRAY_PROTOTYPE_.concat.apply(goog.array.ARRAY_PROTOTYPE_, arguments);
};
goog.array.toArray = function(object) {
  var length = object.length;
  if (length > 0) {
    var rv = new Array(length);
    for (var i = 0;i < length;i++) {
      rv[i] = object[i];
    }
    return rv;
  }
  return[];
};
goog.array.clone = goog.array.toArray;
goog.array.extend = function(arr1, var_args) {
  for (var i = 1;i < arguments.length;i++) {
    var arr2 = arguments[i];
    var isArrayLike;
    if (goog.isArray(arr2) || (isArrayLike = goog.isArrayLike(arr2)) && Object.prototype.hasOwnProperty.call(arr2, "callee")) {
      arr1.push.apply(arr1, arr2);
    } else {
      if (isArrayLike) {
        var len1 = arr1.length;
        var len2 = arr2.length;
        for (var j = 0;j < len2;j++) {
          arr1[len1 + j] = arr2[j];
        }
      } else {
        arr1.push(arr2);
      }
    }
  }
};
goog.array.splice = function(arr, index, howMany, var_args) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.splice.apply(arr, goog.array.slice(arguments, 1));
};
goog.array.slice = function(arr, start, opt_end) {
  goog.asserts.assert(arr.length != null);
  if (arguments.length <= 2) {
    return goog.array.ARRAY_PROTOTYPE_.slice.call(arr, start);
  } else {
    return goog.array.ARRAY_PROTOTYPE_.slice.call(arr, start, opt_end);
  }
};
goog.array.removeDuplicates = function(arr, opt_rv, opt_hashFn) {
  var returnArray = opt_rv || arr;
  var defaultHashFn = function(item) {
    return goog.isObject(current) ? "o" + goog.getUid(current) : (typeof current).charAt(0) + current;
  };
  var hashFn = opt_hashFn || defaultHashFn;
  var seen = {}, cursorInsert = 0, cursorRead = 0;
  while (cursorRead < arr.length) {
    var current = arr[cursorRead++];
    var key = hashFn(current);
    if (!Object.prototype.hasOwnProperty.call(seen, key)) {
      seen[key] = true;
      returnArray[cursorInsert++] = current;
    }
  }
  returnArray.length = cursorInsert;
};
goog.array.binarySearch = function(arr, target, opt_compareFn) {
  return goog.array.binarySearch_(arr, opt_compareFn || goog.array.defaultCompare, false, target);
};
goog.array.binarySelect = function(arr, evaluator, opt_obj) {
  return goog.array.binarySearch_(arr, evaluator, true, undefined, opt_obj);
};
goog.array.binarySearch_ = function(arr, compareFn, isEvaluator, opt_target, opt_selfObj) {
  var left = 0;
  var right = arr.length;
  var found;
  while (left < right) {
    var middle = left + right >> 1;
    var compareResult;
    if (isEvaluator) {
      compareResult = compareFn.call(opt_selfObj, arr[middle], middle, arr);
    } else {
      compareResult = compareFn(opt_target, arr[middle]);
    }
    if (compareResult > 0) {
      left = middle + 1;
    } else {
      right = middle;
      found = !compareResult;
    }
  }
  return found ? left : ~left;
};
goog.array.sort = function(arr, opt_compareFn) {
  arr.sort(opt_compareFn || goog.array.defaultCompare);
};
goog.array.stableSort = function(arr, opt_compareFn) {
  for (var i = 0;i < arr.length;i++) {
    arr[i] = {index:i, value:arr[i]};
  }
  var valueCompareFn = opt_compareFn || goog.array.defaultCompare;
  function stableCompareFn(obj1, obj2) {
    return valueCompareFn(obj1.value, obj2.value) || obj1.index - obj2.index;
  }
  goog.array.sort(arr, stableCompareFn);
  for (var i = 0;i < arr.length;i++) {
    arr[i] = arr[i].value;
  }
};
goog.array.sortObjectsByKey = function(arr, key, opt_compareFn) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  goog.array.sort(arr, function(a, b) {
    return compare(a[key], b[key]);
  });
};
goog.array.isSorted = function(arr, opt_compareFn, opt_strict) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  for (var i = 1;i < arr.length;i++) {
    var compareResult = compare(arr[i - 1], arr[i]);
    if (compareResult > 0 || compareResult == 0 && opt_strict) {
      return false;
    }
  }
  return true;
};
goog.array.equals = function(arr1, arr2, opt_equalsFn) {
  if (!goog.isArrayLike(arr1) || !goog.isArrayLike(arr2) || arr1.length != arr2.length) {
    return false;
  }
  var l = arr1.length;
  var equalsFn = opt_equalsFn || goog.array.defaultCompareEquality;
  for (var i = 0;i < l;i++) {
    if (!equalsFn(arr1[i], arr2[i])) {
      return false;
    }
  }
  return true;
};
goog.array.compare3 = function(arr1, arr2, opt_compareFn) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  var l = Math.min(arr1.length, arr2.length);
  for (var i = 0;i < l;i++) {
    var result = compare(arr1[i], arr2[i]);
    if (result != 0) {
      return result;
    }
  }
  return goog.array.defaultCompare(arr1.length, arr2.length);
};
goog.array.defaultCompare = function(a, b) {
  return a > b ? 1 : a < b ? -1 : 0;
};
goog.array.defaultCompareEquality = function(a, b) {
  return a === b;
};
goog.array.binaryInsert = function(array, value, opt_compareFn) {
  var index = goog.array.binarySearch(array, value, opt_compareFn);
  if (index < 0) {
    goog.array.insertAt(array, value, -(index + 1));
    return true;
  }
  return false;
};
goog.array.binaryRemove = function(array, value, opt_compareFn) {
  var index = goog.array.binarySearch(array, value, opt_compareFn);
  return index >= 0 ? goog.array.removeAt(array, index) : false;
};
goog.array.bucket = function(array, sorter, opt_obj) {
  var buckets = {};
  for (var i = 0;i < array.length;i++) {
    var value = array[i];
    var key = sorter.call(opt_obj, value, i, array);
    if (goog.isDef(key)) {
      var bucket = buckets[key] || (buckets[key] = []);
      bucket.push(value);
    }
  }
  return buckets;
};
goog.array.toObject = function(arr, keyFunc, opt_obj) {
  var ret = {};
  goog.array.forEach(arr, function(element, index) {
    ret[keyFunc.call(opt_obj, element, index, arr)] = element;
  });
  return ret;
};
goog.array.range = function(startOrEnd, opt_end, opt_step) {
  var array = [];
  var start = 0;
  var end = startOrEnd;
  var step = opt_step || 1;
  if (opt_end !== undefined) {
    start = startOrEnd;
    end = opt_end;
  }
  if (step * (end - start) < 0) {
    return[];
  }
  if (step > 0) {
    for (var i = start;i < end;i += step) {
      array.push(i);
    }
  } else {
    for (var i = start;i > end;i += step) {
      array.push(i);
    }
  }
  return array;
};
goog.array.repeat = function(value, n) {
  var array = [];
  for (var i = 0;i < n;i++) {
    array[i] = value;
  }
  return array;
};
goog.array.flatten = function(var_args) {
  var result = [];
  for (var i = 0;i < arguments.length;i++) {
    var element = arguments[i];
    if (goog.isArray(element)) {
      result.push.apply(result, goog.array.flatten.apply(null, element));
    } else {
      result.push(element);
    }
  }
  return result;
};
goog.array.rotate = function(array, n) {
  goog.asserts.assert(array.length != null);
  if (array.length) {
    n %= array.length;
    if (n > 0) {
      goog.array.ARRAY_PROTOTYPE_.unshift.apply(array, array.splice(-n, n));
    } else {
      if (n < 0) {
        goog.array.ARRAY_PROTOTYPE_.push.apply(array, array.splice(0, -n));
      }
    }
  }
  return array;
};
goog.array.moveItem = function(arr, fromIndex, toIndex) {
  goog.asserts.assert(fromIndex >= 0 && fromIndex < arr.length);
  goog.asserts.assert(toIndex >= 0 && toIndex < arr.length);
  var removedItems = goog.array.ARRAY_PROTOTYPE_.splice.call(arr, fromIndex, 1);
  goog.array.ARRAY_PROTOTYPE_.splice.call(arr, toIndex, 0, removedItems[0]);
};
goog.array.zip = function(var_args) {
  if (!arguments.length) {
    return[];
  }
  var result = [];
  for (var i = 0;true;i++) {
    var value = [];
    for (var j = 0;j < arguments.length;j++) {
      var arr = arguments[j];
      if (i >= arr.length) {
        return result;
      }
      value.push(arr[i]);
    }
    result.push(value);
  }
};
goog.array.shuffle = function(arr, opt_randFn) {
  var randFn = opt_randFn || Math.random;
  for (var i = arr.length - 1;i > 0;i--) {
    var j = Math.floor(randFn() * (i + 1));
    var tmp = arr[i];
    arr[i] = arr[j];
    arr[j] = tmp;
  }
};
goog.provide("cljs.core");
goog.require("goog.string.StringBuffer");
goog.require("goog.array");
goog.require("goog.object");
goog.require("goog.string");
cljs.core._STAR_clojurescript_version_STAR_ = "0.0-2850";
cljs.core._STAR_unchecked_if_STAR_ = false;
if (typeof cljs.core._STAR_print_fn_STAR_ !== "undefined") {
} else {
  cljs.core._STAR_print_fn_STAR_ = function _STAR_print_fn_STAR_(_) {
    throw new Error("No *print-fn* fn set for evaluation environment");
  };
}
cljs.core.set_print_fn_BANG_ = function set_print_fn_BANG_(f) {
  return cljs.core._STAR_print_fn_STAR_ = f;
};
cljs.core._STAR_flush_on_newline_STAR_ = true;
cljs.core._STAR_print_newline_STAR_ = true;
cljs.core._STAR_print_readably_STAR_ = true;
cljs.core._STAR_print_meta_STAR_ = false;
cljs.core._STAR_print_dup_STAR_ = false;
cljs.core._STAR_print_length_STAR_ = null;
cljs.core._STAR_print_level_STAR_ = null;
if (typeof cljs.core._STAR_loaded_libs_STAR_ !== "undefined") {
} else {
  cljs.core._STAR_loaded_libs_STAR_ = null;
}
cljs.core.pr_opts = function pr_opts() {
  return new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "flush-on-newline", "flush-on-newline", -151457939), cljs.core._STAR_flush_on_newline_STAR_, new cljs.core.Keyword(null, "readably", "readably", 1129599760), cljs.core._STAR_print_readably_STAR_, new cljs.core.Keyword(null, "meta", "meta", 1499536964), cljs.core._STAR_print_meta_STAR_, new cljs.core.Keyword(null, "dup", "dup", 556298533), cljs.core._STAR_print_dup_STAR_, new cljs.core.Keyword(null, "print-length", "print-length", 
  1931866356), cljs.core._STAR_print_length_STAR_], null);
};
cljs.core.enable_console_print_BANG_ = function enable_console_print_BANG_() {
  cljs.core._STAR_print_newline_STAR_ = false;
  return cljs.core._STAR_print_fn_STAR_ = function() {
    var G__17522__delegate = function(args) {
      return console.log.apply(console, function() {
        var G__17521 = args;
        return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(G__17521) : cljs.core.into_array.call(null, G__17521);
      }());
    };
    var G__17522 = function(var_args) {
      var args = null;
      if (arguments.length > 0) {
        var G__17523__i = 0, G__17523__a = new Array(arguments.length - 0);
        while (G__17523__i < G__17523__a.length) {
          G__17523__a[G__17523__i] = arguments[G__17523__i + 0];
          ++G__17523__i;
        }
        args = new cljs.core.IndexedSeq(G__17523__a, 0);
      }
      return G__17522__delegate.call(this, args);
    };
    G__17522.cljs$lang$maxFixedArity = 0;
    G__17522.cljs$lang$applyTo = function(arglist__17524) {
      var args = cljs.core.seq(arglist__17524);
      return G__17522__delegate(args);
    };
    G__17522.cljs$core$IFn$_invoke$arity$variadic = G__17522__delegate;
    return G__17522;
  }();
};
cljs.core.truth_ = function truth_(x) {
  return x != null && x !== false;
};
cljs.core.not_native = null;
cljs.core.identical_QMARK_ = function identical_QMARK_(x, y) {
  return x === y;
};
cljs.core.nil_QMARK_ = function nil_QMARK_(x) {
  return x == null;
};
cljs.core.array_QMARK_ = function array_QMARK_(x) {
  return x instanceof Array;
};
cljs.core.number_QMARK_ = function number_QMARK_(n) {
  return typeof n === "number";
};
cljs.core.not = function not(x) {
  if (cljs.core.truth_(x)) {
    return false;
  } else {
    return true;
  }
};
cljs.core.some_QMARK_ = function some_QMARK_(x) {
  return!(x == null);
};
cljs.core.object_QMARK_ = function object_QMARK_(x) {
  if (!(x == null)) {
    return x.constructor === Object;
  } else {
    return false;
  }
};
cljs.core.string_QMARK_ = function string_QMARK_(x) {
  var G__17526 = x;
  return goog.isString(G__17526);
};
cljs.core.native_satisfies_QMARK_ = function native_satisfies_QMARK_(p, x) {
  var x__$1 = x == null ? null : x;
  if (p[function() {
    var G__17528 = x__$1;
    return goog.typeOf(G__17528);
  }()]) {
    return true;
  } else {
    if (p["_"]) {
      return true;
    } else {
      return false;
    }
  }
};
cljs.core.is_proto_ = function is_proto_(x) {
  return x.constructor.prototype === x;
};
cljs.core._STAR_main_cli_fn_STAR_ = null;
cljs.core.type = function type(x) {
  if (x == null) {
    return null;
  } else {
    return x.constructor;
  }
};
cljs.core.missing_protocol = function missing_protocol(proto, obj) {
  var ty = cljs.core.type(obj);
  var ty__$1 = cljs.core.truth_(function() {
    var and__7492__auto__ = ty;
    if (cljs.core.truth_(and__7492__auto__)) {
      return ty.cljs$lang$type;
    } else {
      return and__7492__auto__;
    }
  }()) ? ty.cljs$lang$ctorStr : function() {
    var G__17530 = obj;
    return goog.typeOf(G__17530);
  }();
  return new Error(["No protocol method ", proto, " defined for type ", ty__$1, ": ", obj].join(""));
};
cljs.core.type__GT_str = function type__GT_str(ty) {
  var temp__4124__auto__ = ty.cljs$lang$ctorStr;
  if (cljs.core.truth_(temp__4124__auto__)) {
    var s = temp__4124__auto__;
    return s;
  } else {
    return[cljs.core.str(ty)].join("");
  }
};
cljs.core.load_file = function load_file(file) {
  if (cljs.core.truth_(COMPILED)) {
    return null;
  } else {
    return goog.importScript_(file);
  }
};
if (typeof Symbol !== "undefined" && function() {
  var G__17532 = Symbol;
  return goog.typeOf(G__17532);
}() === "function") {
  cljs.core.ITER_SYMBOL = Symbol.iterator;
} else {
  cljs.core.ITER_SYMBOL = "@@iterator";
}
cljs.core.make_array = function() {
  var make_array = null;
  var make_array__1 = function(size) {
    return new Array(size);
  };
  var make_array__2 = function(type, size) {
    return make_array.cljs$core$IFn$_invoke$arity$1(size);
  };
  make_array = function(type, size) {
    switch(arguments.length) {
      case 1:
        return make_array__1.call(this, type);
      case 2:
        return make_array__2.call(this, type, size);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  make_array.cljs$core$IFn$_invoke$arity$1 = make_array__1;
  make_array.cljs$core$IFn$_invoke$arity$2 = make_array__2;
  return make_array;
}();
cljs.core.aclone = function aclone(arr) {
  var len = arr.length;
  var new_arr = new Array(len);
  var n__8391__auto___17534 = len;
  var i_17535 = 0;
  while (true) {
    if (i_17535 < n__8391__auto___17534) {
      new_arr[i_17535] = arr[i_17535];
      var G__17536 = i_17535 + 1;
      i_17535 = G__17536;
      continue;
    } else {
    }
    break;
  }
  return new_arr;
};
cljs.core.array = function array(var_args) {
  var a = new Array(arguments.length);
  var i = 0;
  while (true) {
    if (i < a.length) {
      a[i] = arguments[i];
      var G__17537 = i + 1;
      i = G__17537;
      continue;
    } else {
      return a;
    }
    break;
  }
};
cljs.core.aget = function() {
  var aget = null;
  var aget__2 = function(array, i) {
    return array[i];
  };
  var aget__3 = function() {
    var G__17546__delegate = function(array, i, idxs) {
      var G__17543 = aget;
      var G__17544 = aget.cljs$core$IFn$_invoke$arity$2(array, i);
      var G__17545 = idxs;
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$3 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$3(G__17543, G__17544, G__17545) : cljs.core.apply.call(null, G__17543, G__17544, G__17545);
    };
    var G__17546 = function(array, i, var_args) {
      var idxs = null;
      if (arguments.length > 2) {
        var G__17547__i = 0, G__17547__a = new Array(arguments.length - 2);
        while (G__17547__i < G__17547__a.length) {
          G__17547__a[G__17547__i] = arguments[G__17547__i + 2];
          ++G__17547__i;
        }
        idxs = new cljs.core.IndexedSeq(G__17547__a, 0);
      }
      return G__17546__delegate.call(this, array, i, idxs);
    };
    G__17546.cljs$lang$maxFixedArity = 2;
    G__17546.cljs$lang$applyTo = function(arglist__17548) {
      var array = cljs.core.first(arglist__17548);
      arglist__17548 = cljs.core.next(arglist__17548);
      var i = cljs.core.first(arglist__17548);
      var idxs = cljs.core.rest(arglist__17548);
      return G__17546__delegate(array, i, idxs);
    };
    G__17546.cljs$core$IFn$_invoke$arity$variadic = G__17546__delegate;
    return G__17546;
  }();
  aget = function(array, i, var_args) {
    var idxs = var_args;
    switch(arguments.length) {
      case 2:
        return aget__2.call(this, array, i);
      default:
        var G__17549 = null;
        if (arguments.length > 2) {
          var G__17550__i = 0, G__17550__a = new Array(arguments.length - 2);
          while (G__17550__i < G__17550__a.length) {
            G__17550__a[G__17550__i] = arguments[G__17550__i + 2];
            ++G__17550__i;
          }
          G__17549 = new cljs.core.IndexedSeq(G__17550__a, 0);
        }
        return aget__3.cljs$core$IFn$_invoke$arity$variadic(array, i, G__17549);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  aget.cljs$lang$maxFixedArity = 2;
  aget.cljs$lang$applyTo = aget__3.cljs$lang$applyTo;
  aget.cljs$core$IFn$_invoke$arity$2 = aget__2;
  aget.cljs$core$IFn$_invoke$arity$variadic = aget__3.cljs$core$IFn$_invoke$arity$variadic;
  return aget;
}();
cljs.core.aset = function() {
  var aset = null;
  var aset__3 = function(array, i, val) {
    return array[i] = val;
  };
  var aset__4 = function() {
    var G__17559__delegate = function(array, idx, idx2, idxv) {
      var G__17555 = aset;
      var G__17556 = array[idx];
      var G__17557 = idx2;
      var G__17558 = idxv;
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$4 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$4(G__17555, G__17556, G__17557, G__17558) : cljs.core.apply.call(null, G__17555, G__17556, G__17557, G__17558);
    };
    var G__17559 = function(array, idx, idx2, var_args) {
      var idxv = null;
      if (arguments.length > 3) {
        var G__17560__i = 0, G__17560__a = new Array(arguments.length - 3);
        while (G__17560__i < G__17560__a.length) {
          G__17560__a[G__17560__i] = arguments[G__17560__i + 3];
          ++G__17560__i;
        }
        idxv = new cljs.core.IndexedSeq(G__17560__a, 0);
      }
      return G__17559__delegate.call(this, array, idx, idx2, idxv);
    };
    G__17559.cljs$lang$maxFixedArity = 3;
    G__17559.cljs$lang$applyTo = function(arglist__17561) {
      var array = cljs.core.first(arglist__17561);
      arglist__17561 = cljs.core.next(arglist__17561);
      var idx = cljs.core.first(arglist__17561);
      arglist__17561 = cljs.core.next(arglist__17561);
      var idx2 = cljs.core.first(arglist__17561);
      var idxv = cljs.core.rest(arglist__17561);
      return G__17559__delegate(array, idx, idx2, idxv);
    };
    G__17559.cljs$core$IFn$_invoke$arity$variadic = G__17559__delegate;
    return G__17559;
  }();
  aset = function(array, idx, idx2, var_args) {
    var idxv = var_args;
    switch(arguments.length) {
      case 3:
        return aset__3.call(this, array, idx, idx2);
      default:
        var G__17562 = null;
        if (arguments.length > 3) {
          var G__17563__i = 0, G__17563__a = new Array(arguments.length - 3);
          while (G__17563__i < G__17563__a.length) {
            G__17563__a[G__17563__i] = arguments[G__17563__i + 3];
            ++G__17563__i;
          }
          G__17562 = new cljs.core.IndexedSeq(G__17563__a, 0);
        }
        return aset__4.cljs$core$IFn$_invoke$arity$variadic(array, idx, idx2, G__17562);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  aset.cljs$lang$maxFixedArity = 3;
  aset.cljs$lang$applyTo = aset__4.cljs$lang$applyTo;
  aset.cljs$core$IFn$_invoke$arity$3 = aset__3;
  aset.cljs$core$IFn$_invoke$arity$variadic = aset__4.cljs$core$IFn$_invoke$arity$variadic;
  return aset;
}();
cljs.core.alength = function alength(array) {
  return array.length;
};
cljs.core.into_array = function() {
  var into_array = null;
  var into_array__1 = function(aseq) {
    return into_array.cljs$core$IFn$_invoke$arity$2(null, aseq);
  };
  var into_array__2 = function(type, aseq) {
    var G__17569 = function(a, x) {
      a.push(x);
      return a;
    };
    var G__17570 = [];
    var G__17571 = aseq;
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(G__17569, G__17570, G__17571) : cljs.core.reduce.call(null, G__17569, G__17570, G__17571);
  };
  into_array = function(type, aseq) {
    switch(arguments.length) {
      case 1:
        return into_array__1.call(this, type);
      case 2:
        return into_array__2.call(this, type, aseq);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  into_array.cljs$core$IFn$_invoke$arity$1 = into_array__1;
  into_array.cljs$core$IFn$_invoke$arity$2 = into_array__2;
  return into_array;
}();
cljs.core.js_invoke = function() {
  var js_invoke__delegate = function(obj, s, args) {
    return obj[s].apply(obj, cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(args));
  };
  var js_invoke = function(obj, s, var_args) {
    var args = null;
    if (arguments.length > 2) {
      var G__17572__i = 0, G__17572__a = new Array(arguments.length - 2);
      while (G__17572__i < G__17572__a.length) {
        G__17572__a[G__17572__i] = arguments[G__17572__i + 2];
        ++G__17572__i;
      }
      args = new cljs.core.IndexedSeq(G__17572__a, 0);
    }
    return js_invoke__delegate.call(this, obj, s, args);
  };
  js_invoke.cljs$lang$maxFixedArity = 2;
  js_invoke.cljs$lang$applyTo = function(arglist__17573) {
    var obj = cljs.core.first(arglist__17573);
    arglist__17573 = cljs.core.next(arglist__17573);
    var s = cljs.core.first(arglist__17573);
    var args = cljs.core.rest(arglist__17573);
    return js_invoke__delegate(obj, s, args);
  };
  js_invoke.cljs$core$IFn$_invoke$arity$variadic = js_invoke__delegate;
  return js_invoke;
}();
cljs.core.Fn = function() {
  var obj17575 = {};
  return obj17575;
}();
cljs.core.IFn = function() {
  var obj17577 = {};
  return obj17577;
}();
cljs.core._invoke = function() {
  var _invoke = null;
  var _invoke__1 = function(this$) {
    if (function() {
      var and__7492__auto__ = this$;
      if (and__7492__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$1;
      } else {
        return and__7492__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$1(this$);
    } else {
      var x__8148__auto__ = this$ == null ? null : this$;
      return function() {
        var or__7504__auto__ = cljs.core._invoke[function() {
          var G__17623 = x__8148__auto__;
          return goog.typeOf(G__17623);
        }()];
        if (or__7504__auto__) {
          return or__7504__auto__;
        } else {
          var or__7504__auto____$1 = cljs.core._invoke["_"];
          if (or__7504__auto____$1) {
            return or__7504__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$);
    }
  };
  var _invoke__2 = function(this$, a) {
    if (function() {
      var and__7492__auto__ = this$;
      if (and__7492__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$2;
      } else {
        return and__7492__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$2(this$, a);
    } else {
      var x__8148__auto__ = this$ == null ? null : this$;
      return function() {
        var or__7504__auto__ = cljs.core._invoke[function() {
          var G__17625 = x__8148__auto__;
          return goog.typeOf(G__17625);
        }()];
        if (or__7504__auto__) {
          return or__7504__auto__;
        } else {
          var or__7504__auto____$1 = cljs.core._invoke["_"];
          if (or__7504__auto____$1) {
            return or__7504__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a);
    }
  };
  var _invoke__3 = function(this$, a, b) {
    if (function() {
      var and__7492__auto__ = this$;
      if (and__7492__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$3;
      } else {
        return and__7492__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$3(this$, a, b);
    } else {
      var x__8148__auto__ = this$ == null ? null : this$;
      return function() {
        var or__7504__auto__ = cljs.core._invoke[function() {
          var G__17627 = x__8148__auto__;
          return goog.typeOf(G__17627);
        }()];
        if (or__7504__auto__) {
          return or__7504__auto__;
        } else {
          var or__7504__auto____$1 = cljs.core._invoke["_"];
          if (or__7504__auto____$1) {
            return or__7504__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b);
    }
  };
  var _invoke__4 = function(this$, a, b, c) {
    if (function() {
      var and__7492__auto__ = this$;
      if (and__7492__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$4;
      } else {
        return and__7492__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$4(this$, a, b, c);
    } else {
      var x__8148__auto__ = this$ == null ? null : this$;
      return function() {
        var or__7504__auto__ = cljs.core._invoke[function() {
          var G__17629 = x__8148__auto__;
          return goog.typeOf(G__17629);
        }()];
        if (or__7504__auto__) {
          return or__7504__auto__;
        } else {
          var or__7504__auto____$1 = cljs.core._invoke["_"];
          if (or__7504__auto____$1) {
            return or__7504__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c);
    }
  };
  var _invoke__5 = function(this$, a, b, c, d) {
    if (function() {
      var and__7492__auto__ = this$;
      if (and__7492__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$5;
      } else {
        return and__7492__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$5(this$, a, b, c, d);
    } else {
      var x__8148__auto__ = this$ == null ? null : this$;
      return function() {
        var or__7504__auto__ = cljs.core._invoke[function() {
          var G__17631 = x__8148__auto__;
          return goog.typeOf(G__17631);
        }()];
        if (or__7504__auto__) {
          return or__7504__auto__;
        } else {
          var or__7504__auto____$1 = cljs.core._invoke["_"];
          if (or__7504__auto____$1) {
            return or__7504__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d);
    }
  };
  var _invoke__6 = function(this$, a, b, c, d, e) {
    if (function() {
      var and__7492__auto__ = this$;
      if (and__7492__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$6;
      } else {
        return and__7492__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$6(this$, a, b, c, d, e);
    } else {
      var x__8148__auto__ = this$ == null ? null : this$;
      return function() {
        var or__7504__auto__ = cljs.core._invoke[function() {
          var G__17633 = x__8148__auto__;
          return goog.typeOf(G__17633);
        }()];
        if (or__7504__auto__) {
          return or__7504__auto__;
        } else {
          var or__7504__auto____$1 = cljs.core._invoke["_"];
          if (or__7504__auto____$1) {
            return or__7504__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e);
    }
  };
  var _invoke__7 = function(this$, a, b, c, d, e, f) {
    if (function() {
      var and__7492__auto__ = this$;
      if (and__7492__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$7;
      } else {
        return and__7492__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$7(this$, a, b, c, d, e, f);
    } else {
      var x__8148__auto__ = this$ == null ? null : this$;
      return function() {
        var or__7504__auto__ = cljs.core._invoke[function() {
          var G__17635 = x__8148__auto__;
          return goog.typeOf(G__17635);
        }()];
        if (or__7504__auto__) {
          return or__7504__auto__;
        } else {
          var or__7504__auto____$1 = cljs.core._invoke["_"];
          if (or__7504__auto____$1) {
            return or__7504__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f);
    }
  };
  var _invoke__8 = function(this$, a, b, c, d, e, f, g) {
    if (function() {
      var and__7492__auto__ = this$;
      if (and__7492__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$8;
      } else {
        return and__7492__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$8(this$, a, b, c, d, e, f, g);
    } else {
      var x__8148__auto__ = this$ == null ? null : this$;
      return function() {
        var or__7504__auto__ = cljs.core._invoke[function() {
          var G__17637 = x__8148__auto__;
          return goog.typeOf(G__17637);
        }()];
        if (or__7504__auto__) {
          return or__7504__auto__;
        } else {
          var or__7504__auto____$1 = cljs.core._invoke["_"];
          if (or__7504__auto____$1) {
            return or__7504__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g);
    }
  };
  var _invoke__9 = function(this$, a, b, c, d, e, f, g, h) {
    if (function() {
      var and__7492__auto__ = this$;
      if (and__7492__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$9;
      } else {
        return and__7492__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$9(this$, a, b, c, d, e, f, g, h);
    } else {
      var x__8148__auto__ = this$ == null ? null : this$;
      return function() {
        var or__7504__auto__ = cljs.core._invoke[function() {
          var G__17639 = x__8148__auto__;
          return goog.typeOf(G__17639);
        }()];
        if (or__7504__auto__) {
          return or__7504__auto__;
        } else {
          var or__7504__auto____$1 = cljs.core._invoke["_"];
          if (or__7504__auto____$1) {
            return or__7504__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h);
    }
  };
  var _invoke__10 = function(this$, a, b, c, d, e, f, g, h, i) {
    if (function() {
      var and__7492__auto__ = this$;
      if (and__7492__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$10;
      } else {
        return and__7492__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$10(this$, a, b, c, d, e, f, g, h, i);
    } else {
      var x__8148__auto__ = this$ == null ? null : this$;
      return function() {
        var or__7504__auto__ = cljs.core._invoke[function() {
          var G__17641 = x__8148__auto__;
          return goog.typeOf(G__17641);
        }()];
        if (or__7504__auto__) {
          return or__7504__auto__;
        } else {
          var or__7504__auto____$1 = cljs.core._invoke["_"];
          if (or__7504__auto____$1) {
            return or__7504__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i);
    }
  };
  var _invoke__11 = function(this$, a, b, c, d, e, f, g, h, i, j) {
    if (function() {
      var and__7492__auto__ = this$;
      if (and__7492__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$11;
      } else {
        return and__7492__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$11(this$, a, b, c, d, e, f, g, h, i, j);
    } else {
      var x__8148__auto__ = this$ == null ? null : this$;
      return function() {
        var or__7504__auto__ = cljs.core._invoke[function() {
          var G__17643 = x__8148__auto__;
          return goog.typeOf(G__17643);
        }()];
        if (or__7504__auto__) {
          return or__7504__auto__;
        } else {
          var or__7504__auto____$1 = cljs.core._invoke["_"];
          if (or__7504__auto____$1) {
            return or__7504__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j);
    }
  };
  var _invoke__12 = function(this$, a, b, c, d, e, f, g, h, i, j, k) {
    if (function() {
      var and__7492__auto__ = this$;
      if (and__7492__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$12;
      } else {
        return and__7492__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$12(this$, a, b, c, d, e, f, g, h, i, j, k);
    } else {
      var x__8148__auto__ = this$ == null ? null : this$;
      return function() {
        var or__7504__auto__ = cljs.core._invoke[function() {
          var G__17645 = x__8148__auto__;
          return goog.typeOf(G__17645);
        }()];
        if (or__7504__auto__) {
          return or__7504__auto__;
        } else {
          var or__7504__auto____$1 = cljs.core._invoke["_"];
          if (or__7504__auto____$1) {
            return or__7504__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k);
    }
  };
  var _invoke__13 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l) {
    if (function() {
      var and__7492__auto__ = this$;
      if (and__7492__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$13;
      } else {
        return and__7492__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$13(this$, a, b, c, d, e, f, g, h, i, j, k, l);
    } else {
      var x__8148__auto__ = this$ == null ? null : this$;
      return function() {
        var or__7504__auto__ = cljs.core._invoke[function() {
          var G__17647 = x__8148__auto__;
          return goog.typeOf(G__17647);
        }()];
        if (or__7504__auto__) {
          return or__7504__auto__;
        } else {
          var or__7504__auto____$1 = cljs.core._invoke["_"];
          if (or__7504__auto____$1) {
            return or__7504__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l);
    }
  };
  var _invoke__14 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m) {
    if (function() {
      var and__7492__auto__ = this$;
      if (and__7492__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$14;
      } else {
        return and__7492__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$14(this$, a, b, c, d, e, f, g, h, i, j, k, l, m);
    } else {
      var x__8148__auto__ = this$ == null ? null : this$;
      return function() {
        var or__7504__auto__ = cljs.core._invoke[function() {
          var G__17649 = x__8148__auto__;
          return goog.typeOf(G__17649);
        }()];
        if (or__7504__auto__) {
          return or__7504__auto__;
        } else {
          var or__7504__auto____$1 = cljs.core._invoke["_"];
          if (or__7504__auto____$1) {
            return or__7504__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m);
    }
  };
  var _invoke__15 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
    if (function() {
      var and__7492__auto__ = this$;
      if (and__7492__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$15;
      } else {
        return and__7492__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$15(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
    } else {
      var x__8148__auto__ = this$ == null ? null : this$;
      return function() {
        var or__7504__auto__ = cljs.core._invoke[function() {
          var G__17651 = x__8148__auto__;
          return goog.typeOf(G__17651);
        }()];
        if (or__7504__auto__) {
          return or__7504__auto__;
        } else {
          var or__7504__auto____$1 = cljs.core._invoke["_"];
          if (or__7504__auto____$1) {
            return or__7504__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
    }
  };
  var _invoke__16 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
    if (function() {
      var and__7492__auto__ = this$;
      if (and__7492__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$16;
      } else {
        return and__7492__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$16(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
    } else {
      var x__8148__auto__ = this$ == null ? null : this$;
      return function() {
        var or__7504__auto__ = cljs.core._invoke[function() {
          var G__17653 = x__8148__auto__;
          return goog.typeOf(G__17653);
        }()];
        if (or__7504__auto__) {
          return or__7504__auto__;
        } else {
          var or__7504__auto____$1 = cljs.core._invoke["_"];
          if (or__7504__auto____$1) {
            return or__7504__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
    }
  };
  var _invoke__17 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
    if (function() {
      var and__7492__auto__ = this$;
      if (and__7492__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$17;
      } else {
        return and__7492__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$17(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
    } else {
      var x__8148__auto__ = this$ == null ? null : this$;
      return function() {
        var or__7504__auto__ = cljs.core._invoke[function() {
          var G__17655 = x__8148__auto__;
          return goog.typeOf(G__17655);
        }()];
        if (or__7504__auto__) {
          return or__7504__auto__;
        } else {
          var or__7504__auto____$1 = cljs.core._invoke["_"];
          if (or__7504__auto____$1) {
            return or__7504__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
    }
  };
  var _invoke__18 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
    if (function() {
      var and__7492__auto__ = this$;
      if (and__7492__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$18;
      } else {
        return and__7492__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$18(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
    } else {
      var x__8148__auto__ = this$ == null ? null : this$;
      return function() {
        var or__7504__auto__ = cljs.core._invoke[function() {
          var G__17657 = x__8148__auto__;
          return goog.typeOf(G__17657);
        }()];
        if (or__7504__auto__) {
          return or__7504__auto__;
        } else {
          var or__7504__auto____$1 = cljs.core._invoke["_"];
          if (or__7504__auto____$1) {
            return or__7504__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
    }
  };
  var _invoke__19 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
    if (function() {
      var and__7492__auto__ = this$;
      if (and__7492__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$19;
      } else {
        return and__7492__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$19(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
    } else {
      var x__8148__auto__ = this$ == null ? null : this$;
      return function() {
        var or__7504__auto__ = cljs.core._invoke[function() {
          var G__17659 = x__8148__auto__;
          return goog.typeOf(G__17659);
        }()];
        if (or__7504__auto__) {
          return or__7504__auto__;
        } else {
          var or__7504__auto____$1 = cljs.core._invoke["_"];
          if (or__7504__auto____$1) {
            return or__7504__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
    }
  };
  var _invoke__20 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
    if (function() {
      var and__7492__auto__ = this$;
      if (and__7492__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$20;
      } else {
        return and__7492__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$20(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
    } else {
      var x__8148__auto__ = this$ == null ? null : this$;
      return function() {
        var or__7504__auto__ = cljs.core._invoke[function() {
          var G__17661 = x__8148__auto__;
          return goog.typeOf(G__17661);
        }()];
        if (or__7504__auto__) {
          return or__7504__auto__;
        } else {
          var or__7504__auto____$1 = cljs.core._invoke["_"];
          if (or__7504__auto____$1) {
            return or__7504__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
    }
  };
  var _invoke__21 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
    if (function() {
      var and__7492__auto__ = this$;
      if (and__7492__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$21;
      } else {
        return and__7492__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$21(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
    } else {
      var x__8148__auto__ = this$ == null ? null : this$;
      return function() {
        var or__7504__auto__ = cljs.core._invoke[function() {
          var G__17663 = x__8148__auto__;
          return goog.typeOf(G__17663);
        }()];
        if (or__7504__auto__) {
          return or__7504__auto__;
        } else {
          var or__7504__auto____$1 = cljs.core._invoke["_"];
          if (or__7504__auto____$1) {
            return or__7504__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
    }
  };
  var _invoke__22 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    if (function() {
      var and__7492__auto__ = this$;
      if (and__7492__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$22;
      } else {
        return and__7492__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$22(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
    } else {
      var x__8148__auto__ = this$ == null ? null : this$;
      return function() {
        var or__7504__auto__ = cljs.core._invoke[function() {
          var G__17665 = x__8148__auto__;
          return goog.typeOf(G__17665);
        }()];
        if (or__7504__auto__) {
          return or__7504__auto__;
        } else {
          var or__7504__auto____$1 = cljs.core._invoke["_"];
          if (or__7504__auto____$1) {
            return or__7504__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
    }
  };
  _invoke = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    switch(arguments.length) {
      case 1:
        return _invoke__1.call(this, this$);
      case 2:
        return _invoke__2.call(this, this$, a);
      case 3:
        return _invoke__3.call(this, this$, a, b);
      case 4:
        return _invoke__4.call(this, this$, a, b, c);
      case 5:
        return _invoke__5.call(this, this$, a, b, c, d);
      case 6:
        return _invoke__6.call(this, this$, a, b, c, d, e);
      case 7:
        return _invoke__7.call(this, this$, a, b, c, d, e, f);
      case 8:
        return _invoke__8.call(this, this$, a, b, c, d, e, f, g);
      case 9:
        return _invoke__9.call(this, this$, a, b, c, d, e, f, g, h);
      case 10:
        return _invoke__10.call(this, this$, a, b, c, d, e, f, g, h, i);
      case 11:
        return _invoke__11.call(this, this$, a, b, c, d, e, f, g, h, i, j);
      case 12:
        return _invoke__12.call(this, this$, a, b, c, d, e, f, g, h, i, j, k);
      case 13:
        return _invoke__13.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l);
      case 14:
        return _invoke__14.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m);
      case 15:
        return _invoke__15.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
      case 16:
        return _invoke__16.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
      case 17:
        return _invoke__17.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
      case 18:
        return _invoke__18.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
      case 19:
        return _invoke__19.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
      case 20:
        return _invoke__20.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
      case 21:
        return _invoke__21.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
      case 22:
        return _invoke__22.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _invoke.cljs$core$IFn$_invoke$arity$1 = _invoke__1;
  _invoke.cljs$core$IFn$_invoke$arity$2 = _invoke__2;
  _invoke.cljs$core$IFn$_invoke$arity$3 = _invoke__3;
  _invoke.cljs$core$IFn$_invoke$arity$4 = _invoke__4;
  _invoke.cljs$core$IFn$_invoke$arity$5 = _invoke__5;
  _invoke.cljs$core$IFn$_invoke$arity$6 = _invoke__6;
  _invoke.cljs$core$IFn$_invoke$arity$7 = _invoke__7;
  _invoke.cljs$core$IFn$_invoke$arity$8 = _invoke__8;
  _invoke.cljs$core$IFn$_invoke$arity$9 = _invoke__9;
  _invoke.cljs$core$IFn$_invoke$arity$10 = _invoke__10;
  _invoke.cljs$core$IFn$_invoke$arity$11 = _invoke__11;
  _invoke.cljs$core$IFn$_invoke$arity$12 = _invoke__12;
  _invoke.cljs$core$IFn$_invoke$arity$13 = _invoke__13;
  _invoke.cljs$core$IFn$_invoke$arity$14 = _invoke__14;
  _invoke.cljs$core$IFn$_invoke$arity$15 = _invoke__15;
  _invoke.cljs$core$IFn$_invoke$arity$16 = _invoke__16;
  _invoke.cljs$core$IFn$_invoke$arity$17 = _invoke__17;
  _invoke.cljs$core$IFn$_invoke$arity$18 = _invoke__18;
  _invoke.cljs$core$IFn$_invoke$arity$19 = _invoke__19;
  _invoke.cljs$core$IFn$_invoke$arity$20 = _invoke__20;
  _invoke.cljs$core$IFn$_invoke$arity$21 = _invoke__21;
  _invoke.cljs$core$IFn$_invoke$arity$22 = _invoke__22;
  return _invoke;
}();
cljs.core.ICloneable = function() {
  var obj17667 = {};
  return obj17667;
}();
cljs.core._clone = function _clone(value) {
  if (function() {
    var and__7492__auto__ = value;
    if (and__7492__auto__) {
      return value.cljs$core$ICloneable$_clone$arity$1;
    } else {
      return and__7492__auto__;
    }
  }()) {
    return value.cljs$core$ICloneable$_clone$arity$1(value);
  } else {
    var x__8148__auto__ = value == null ? null : value;
    return function() {
      var or__7504__auto__ = cljs.core._clone[function() {
        var G__17671 = x__8148__auto__;
        return goog.typeOf(G__17671);
      }()];
      if (or__7504__auto__) {
        return or__7504__auto__;
      } else {
        var or__7504__auto____$1 = cljs.core._clone["_"];
        if (or__7504__auto____$1) {
          return or__7504__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ICloneable.-clone", value);
        }
      }
    }().call(null, value);
  }
};
cljs.core.ICounted = function() {
  var obj17673 = {};
  return obj17673;
}();
cljs.core._count = function _count(coll) {
  if (function() {
    var and__7492__auto__ = coll;
    if (and__7492__auto__) {
      return coll.cljs$core$ICounted$_count$arity$1;
    } else {
      return and__7492__auto__;
    }
  }()) {
    return coll.cljs$core$ICounted$_count$arity$1(coll);
  } else {
    var x__8148__auto__ = coll == null ? null : coll;
    return function() {
      var or__7504__auto__ = cljs.core._count[function() {
        var G__17677 = x__8148__auto__;
        return goog.typeOf(G__17677);
      }()];
      if (or__7504__auto__) {
        return or__7504__auto__;
      } else {
        var or__7504__auto____$1 = cljs.core._count["_"];
        if (or__7504__auto____$1) {
          return or__7504__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ICounted.-count", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.IEmptyableCollection = function() {
  var obj17679 = {};
  return obj17679;
}();
cljs.core._empty = function _empty(coll) {
  if (function() {
    var and__7492__auto__ = coll;
    if (and__7492__auto__) {
      return coll.cljs$core$IEmptyableCollection$_empty$arity$1;
    } else {
      return and__7492__auto__;
    }
  }()) {
    return coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll);
  } else {
    var x__8148__auto__ = coll == null ? null : coll;
    return function() {
      var or__7504__auto__ = cljs.core._empty[function() {
        var G__17683 = x__8148__auto__;
        return goog.typeOf(G__17683);
      }()];
      if (or__7504__auto__) {
        return or__7504__auto__;
      } else {
        var or__7504__auto____$1 = cljs.core._empty["_"];
        if (or__7504__auto____$1) {
          return or__7504__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IEmptyableCollection.-empty", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.ICollection = function() {
  var obj17685 = {};
  return obj17685;
}();
cljs.core._conj = function _conj(coll, o) {
  if (function() {
    var and__7492__auto__ = coll;
    if (and__7492__auto__) {
      return coll.cljs$core$ICollection$_conj$arity$2;
    } else {
      return and__7492__auto__;
    }
  }()) {
    return coll.cljs$core$ICollection$_conj$arity$2(coll, o);
  } else {
    var x__8148__auto__ = coll == null ? null : coll;
    return function() {
      var or__7504__auto__ = cljs.core._conj[function() {
        var G__17689 = x__8148__auto__;
        return goog.typeOf(G__17689);
      }()];
      if (or__7504__auto__) {
        return or__7504__auto__;
      } else {
        var or__7504__auto____$1 = cljs.core._conj["_"];
        if (or__7504__auto____$1) {
          return or__7504__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ICollection.-conj", coll);
        }
      }
    }().call(null, coll, o);
  }
};
cljs.core.IIndexed = function() {
  var obj17691 = {};
  return obj17691;
}();
cljs.core._nth = function() {
  var _nth = null;
  var _nth__2 = function(coll, n) {
    if (function() {
      var and__7492__auto__ = coll;
      if (and__7492__auto__) {
        return coll.cljs$core$IIndexed$_nth$arity$2;
      } else {
        return and__7492__auto__;
      }
    }()) {
      return coll.cljs$core$IIndexed$_nth$arity$2(coll, n);
    } else {
      var x__8148__auto__ = coll == null ? null : coll;
      return function() {
        var or__7504__auto__ = cljs.core._nth[function() {
          var G__17697 = x__8148__auto__;
          return goog.typeOf(G__17697);
        }()];
        if (or__7504__auto__) {
          return or__7504__auto__;
        } else {
          var or__7504__auto____$1 = cljs.core._nth["_"];
          if (or__7504__auto____$1) {
            return or__7504__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IIndexed.-nth", coll);
          }
        }
      }().call(null, coll, n);
    }
  };
  var _nth__3 = function(coll, n, not_found) {
    if (function() {
      var and__7492__auto__ = coll;
      if (and__7492__auto__) {
        return coll.cljs$core$IIndexed$_nth$arity$3;
      } else {
        return and__7492__auto__;
      }
    }()) {
      return coll.cljs$core$IIndexed$_nth$arity$3(coll, n, not_found);
    } else {
      var x__8148__auto__ = coll == null ? null : coll;
      return function() {
        var or__7504__auto__ = cljs.core._nth[function() {
          var G__17699 = x__8148__auto__;
          return goog.typeOf(G__17699);
        }()];
        if (or__7504__auto__) {
          return or__7504__auto__;
        } else {
          var or__7504__auto____$1 = cljs.core._nth["_"];
          if (or__7504__auto____$1) {
            return or__7504__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IIndexed.-nth", coll);
          }
        }
      }().call(null, coll, n, not_found);
    }
  };
  _nth = function(coll, n, not_found) {
    switch(arguments.length) {
      case 2:
        return _nth__2.call(this, coll, n);
      case 3:
        return _nth__3.call(this, coll, n, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _nth.cljs$core$IFn$_invoke$arity$2 = _nth__2;
  _nth.cljs$core$IFn$_invoke$arity$3 = _nth__3;
  return _nth;
}();
cljs.core.ASeq = function() {
  var obj17701 = {};
  return obj17701;
}();
cljs.core.ISeq = function() {
  var obj17703 = {};
  return obj17703;
}();
cljs.core._first = function _first(coll) {
  if (function() {
    var and__7492__auto__ = coll;
    if (and__7492__auto__) {
      return coll.cljs$core$ISeq$_first$arity$1;
    } else {
      return and__7492__auto__;
    }
  }()) {
    return coll.cljs$core$ISeq$_first$arity$1(coll);
  } else {
    var x__8148__auto__ = coll == null ? null : coll;
    return function() {
      var or__7504__auto__ = cljs.core._first[function() {
        var G__17707 = x__8148__auto__;
        return goog.typeOf(G__17707);
      }()];
      if (or__7504__auto__) {
        return or__7504__auto__;
      } else {
        var or__7504__auto____$1 = cljs.core._first["_"];
        if (or__7504__auto____$1) {
          return or__7504__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ISeq.-first", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core._rest = function _rest(coll) {
  if (function() {
    var and__7492__auto__ = coll;
    if (and__7492__auto__) {
      return coll.cljs$core$ISeq$_rest$arity$1;
    } else {
      return and__7492__auto__;
    }
  }()) {
    return coll.cljs$core$ISeq$_rest$arity$1(coll);
  } else {
    var x__8148__auto__ = coll == null ? null : coll;
    return function() {
      var or__7504__auto__ = cljs.core._rest[function() {
        var G__17711 = x__8148__auto__;
        return goog.typeOf(G__17711);
      }()];
      if (or__7504__auto__) {
        return or__7504__auto__;
      } else {
        var or__7504__auto____$1 = cljs.core._rest["_"];
        if (or__7504__auto____$1) {
          return or__7504__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ISeq.-rest", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.INext = function() {
  var obj17713 = {};
  return obj17713;
}();
cljs.core._next = function _next(coll) {
  if (function() {
    var and__7492__auto__ = coll;
    if (and__7492__auto__) {
      return coll.cljs$core$INext$_next$arity$1;
    } else {
      return and__7492__auto__;
    }
  }()) {
    return coll.cljs$core$INext$_next$arity$1(coll);
  } else {
    var x__8148__auto__ = coll == null ? null : coll;
    return function() {
      var or__7504__auto__ = cljs.core._next[function() {
        var G__17717 = x__8148__auto__;
        return goog.typeOf(G__17717);
      }()];
      if (or__7504__auto__) {
        return or__7504__auto__;
      } else {
        var or__7504__auto____$1 = cljs.core._next["_"];
        if (or__7504__auto____$1) {
          return or__7504__auto____$1;
        } else {
          throw cljs.core.missing_protocol("INext.-next", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.ILookup = function() {
  var obj17719 = {};
  return obj17719;
}();
cljs.core._lookup = function() {
  var _lookup = null;
  var _lookup__2 = function(o, k) {
    if (function() {
      var and__7492__auto__ = o;
      if (and__7492__auto__) {
        return o.cljs$core$ILookup$_lookup$arity$2;
      } else {
        return and__7492__auto__;
      }
    }()) {
      return o.cljs$core$ILookup$_lookup$arity$2(o, k);
    } else {
      var x__8148__auto__ = o == null ? null : o;
      return function() {
        var or__7504__auto__ = cljs.core._lookup[function() {
          var G__17725 = x__8148__auto__;
          return goog.typeOf(G__17725);
        }()];
        if (or__7504__auto__) {
          return or__7504__auto__;
        } else {
          var or__7504__auto____$1 = cljs.core._lookup["_"];
          if (or__7504__auto____$1) {
            return or__7504__auto____$1;
          } else {
            throw cljs.core.missing_protocol("ILookup.-lookup", o);
          }
        }
      }().call(null, o, k);
    }
  };
  var _lookup__3 = function(o, k, not_found) {
    if (function() {
      var and__7492__auto__ = o;
      if (and__7492__auto__) {
        return o.cljs$core$ILookup$_lookup$arity$3;
      } else {
        return and__7492__auto__;
      }
    }()) {
      return o.cljs$core$ILookup$_lookup$arity$3(o, k, not_found);
    } else {
      var x__8148__auto__ = o == null ? null : o;
      return function() {
        var or__7504__auto__ = cljs.core._lookup[function() {
          var G__17727 = x__8148__auto__;
          return goog.typeOf(G__17727);
        }()];
        if (or__7504__auto__) {
          return or__7504__auto__;
        } else {
          var or__7504__auto____$1 = cljs.core._lookup["_"];
          if (or__7504__auto____$1) {
            return or__7504__auto____$1;
          } else {
            throw cljs.core.missing_protocol("ILookup.-lookup", o);
          }
        }
      }().call(null, o, k, not_found);
    }
  };
  _lookup = function(o, k, not_found) {
    switch(arguments.length) {
      case 2:
        return _lookup__2.call(this, o, k);
      case 3:
        return _lookup__3.call(this, o, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _lookup.cljs$core$IFn$_invoke$arity$2 = _lookup__2;
  _lookup.cljs$core$IFn$_invoke$arity$3 = _lookup__3;
  return _lookup;
}();
cljs.core.IAssociative = function() {
  var obj17729 = {};
  return obj17729;
}();
cljs.core._contains_key_QMARK_ = function _contains_key_QMARK_(coll, k) {
  if (function() {
    var and__7492__auto__ = coll;
    if (and__7492__auto__) {
      return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2;
    } else {
      return and__7492__auto__;
    }
  }()) {
    return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2(coll, k);
  } else {
    var x__8148__auto__ = coll == null ? null : coll;
    return function() {
      var or__7504__auto__ = cljs.core._contains_key_QMARK_[function() {
        var G__17733 = x__8148__auto__;
        return goog.typeOf(G__17733);
      }()];
      if (or__7504__auto__) {
        return or__7504__auto__;
      } else {
        var or__7504__auto____$1 = cljs.core._contains_key_QMARK_["_"];
        if (or__7504__auto____$1) {
          return or__7504__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IAssociative.-contains-key?", coll);
        }
      }
    }().call(null, coll, k);
  }
};
cljs.core._assoc = function _assoc(coll, k, v) {
  if (function() {
    var and__7492__auto__ = coll;
    if (and__7492__auto__) {
      return coll.cljs$core$IAssociative$_assoc$arity$3;
    } else {
      return and__7492__auto__;
    }
  }()) {
    return coll.cljs$core$IAssociative$_assoc$arity$3(coll, k, v);
  } else {
    var x__8148__auto__ = coll == null ? null : coll;
    return function() {
      var or__7504__auto__ = cljs.core._assoc[function() {
        var G__17737 = x__8148__auto__;
        return goog.typeOf(G__17737);
      }()];
      if (or__7504__auto__) {
        return or__7504__auto__;
      } else {
        var or__7504__auto____$1 = cljs.core._assoc["_"];
        if (or__7504__auto____$1) {
          return or__7504__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IAssociative.-assoc", coll);
        }
      }
    }().call(null, coll, k, v);
  }
};
cljs.core.IMap = function() {
  var obj17739 = {};
  return obj17739;
}();
cljs.core._dissoc = function _dissoc(coll, k) {
  if (function() {
    var and__7492__auto__ = coll;
    if (and__7492__auto__) {
      return coll.cljs$core$IMap$_dissoc$arity$2;
    } else {
      return and__7492__auto__;
    }
  }()) {
    return coll.cljs$core$IMap$_dissoc$arity$2(coll, k);
  } else {
    var x__8148__auto__ = coll == null ? null : coll;
    return function() {
      var or__7504__auto__ = cljs.core._dissoc[function() {
        var G__17743 = x__8148__auto__;
        return goog.typeOf(G__17743);
      }()];
      if (or__7504__auto__) {
        return or__7504__auto__;
      } else {
        var or__7504__auto____$1 = cljs.core._dissoc["_"];
        if (or__7504__auto____$1) {
          return or__7504__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IMap.-dissoc", coll);
        }
      }
    }().call(null, coll, k);
  }
};
cljs.core.IMapEntry = function() {
  var obj17745 = {};
  return obj17745;
}();
cljs.core._key = function _key(coll) {
  if (function() {
    var and__7492__auto__ = coll;
    if (and__7492__auto__) {
      return coll.cljs$core$IMapEntry$_key$arity$1;
    } else {
      return and__7492__auto__;
    }
  }()) {
    return coll.cljs$core$IMapEntry$_key$arity$1(coll);
  } else {
    var x__8148__auto__ = coll == null ? null : coll;
    return function() {
      var or__7504__auto__ = cljs.core._key[function() {
        var G__17749 = x__8148__auto__;
        return goog.typeOf(G__17749);
      }()];
      if (or__7504__auto__) {
        return or__7504__auto__;
      } else {
        var or__7504__auto____$1 = cljs.core._key["_"];
        if (or__7504__auto____$1) {
          return or__7504__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IMapEntry.-key", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core._val = function _val(coll) {
  if (function() {
    var and__7492__auto__ = coll;
    if (and__7492__auto__) {
      return coll.cljs$core$IMapEntry$_val$arity$1;
    } else {
      return and__7492__auto__;
    }
  }()) {
    return coll.cljs$core$IMapEntry$_val$arity$1(coll);
  } else {
    var x__8148__auto__ = coll == null ? null : coll;
    return function() {
      var or__7504__auto__ = cljs.core._val[function() {
        var G__17753 = x__8148__auto__;
        return goog.typeOf(G__17753);
      }()];
      if (or__7504__auto__) {
        return or__7504__auto__;
      } else {
        var or__7504__auto____$1 = cljs.core._val["_"];
        if (or__7504__auto____$1) {
          return or__7504__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IMapEntry.-val", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.ISet = function() {
  var obj17755 = {};
  return obj17755;
}();
cljs.core._disjoin = function _disjoin(coll, v) {
  if (function() {
    var and__7492__auto__ = coll;
    if (and__7492__auto__) {
      return coll.cljs$core$ISet$_disjoin$arity$2;
    } else {
      return and__7492__auto__;
    }
  }()) {
    return coll.cljs$core$ISet$_disjoin$arity$2(coll, v);
  } else {
    var x__8148__auto__ = coll == null ? null : coll;
    return function() {
      var or__7504__auto__ = cljs.core._disjoin[function() {
        var G__17759 = x__8148__auto__;
        return goog.typeOf(G__17759);
      }()];
      if (or__7504__auto__) {
        return or__7504__auto__;
      } else {
        var or__7504__auto____$1 = cljs.core._disjoin["_"];
        if (or__7504__auto____$1) {
          return or__7504__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ISet.-disjoin", coll);
        }
      }
    }().call(null, coll, v);
  }
};
cljs.core.IStack = function() {
  var obj17761 = {};
  return obj17761;
}();
cljs.core._peek = function _peek(coll) {
  if (function() {
    var and__7492__auto__ = coll;
    if (and__7492__auto__) {
      return coll.cljs$core$IStack$_peek$arity$1;
    } else {
      return and__7492__auto__;
    }
  }()) {
    return coll.cljs$core$IStack$_peek$arity$1(coll);
  } else {
    var x__8148__auto__ = coll == null ? null : coll;
    return function() {
      var or__7504__auto__ = cljs.core._peek[function() {
        var G__17765 = x__8148__auto__;
        return goog.typeOf(G__17765);
      }()];
      if (or__7504__auto__) {
        return or__7504__auto__;
      } else {
        var or__7504__auto____$1 = cljs.core._peek["_"];
        if (or__7504__auto____$1) {
          return or__7504__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IStack.-peek", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core._pop = function _pop(coll) {
  if (function() {
    var and__7492__auto__ = coll;
    if (and__7492__auto__) {
      return coll.cljs$core$IStack$_pop$arity$1;
    } else {
      return and__7492__auto__;
    }
  }()) {
    return coll.cljs$core$IStack$_pop$arity$1(coll);
  } else {
    var x__8148__auto__ = coll == null ? null : coll;
    return function() {
      var or__7504__auto__ = cljs.core._pop[function() {
        var G__17769 = x__8148__auto__;
        return goog.typeOf(G__17769);
      }()];
      if (or__7504__auto__) {
        return or__7504__auto__;
      } else {
        var or__7504__auto____$1 = cljs.core._pop["_"];
        if (or__7504__auto____$1) {
          return or__7504__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IStack.-pop", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.IVector = function() {
  var obj17771 = {};
  return obj17771;
}();
cljs.core._assoc_n = function _assoc_n(coll, n, val) {
  if (function() {
    var and__7492__auto__ = coll;
    if (and__7492__auto__) {
      return coll.cljs$core$IVector$_assoc_n$arity$3;
    } else {
      return and__7492__auto__;
    }
  }()) {
    return coll.cljs$core$IVector$_assoc_n$arity$3(coll, n, val);
  } else {
    var x__8148__auto__ = coll == null ? null : coll;
    return function() {
      var or__7504__auto__ = cljs.core._assoc_n[function() {
        var G__17775 = x__8148__auto__;
        return goog.typeOf(G__17775);
      }()];
      if (or__7504__auto__) {
        return or__7504__auto__;
      } else {
        var or__7504__auto____$1 = cljs.core._assoc_n["_"];
        if (or__7504__auto____$1) {
          return or__7504__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IVector.-assoc-n", coll);
        }
      }
    }().call(null, coll, n, val);
  }
};
cljs.core.IDeref = function() {
  var obj17777 = {};
  return obj17777;
}();
cljs.core._deref = function _deref(o) {
  if (function() {
    var and__7492__auto__ = o;
    if (and__7492__auto__) {
      return o.cljs$core$IDeref$_deref$arity$1;
    } else {
      return and__7492__auto__;
    }
  }()) {
    return o.cljs$core$IDeref$_deref$arity$1(o);
  } else {
    var x__8148__auto__ = o == null ? null : o;
    return function() {
      var or__7504__auto__ = cljs.core._deref[function() {
        var G__17781 = x__8148__auto__;
        return goog.typeOf(G__17781);
      }()];
      if (or__7504__auto__) {
        return or__7504__auto__;
      } else {
        var or__7504__auto____$1 = cljs.core._deref["_"];
        if (or__7504__auto____$1) {
          return or__7504__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IDeref.-deref", o);
        }
      }
    }().call(null, o);
  }
};
cljs.core.IDerefWithTimeout = function() {
  var obj17783 = {};
  return obj17783;
}();
cljs.core._deref_with_timeout = function _deref_with_timeout(o, msec, timeout_val) {
  if (function() {
    var and__7492__auto__ = o;
    if (and__7492__auto__) {
      return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3;
    } else {
      return and__7492__auto__;
    }
  }()) {
    return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3(o, msec, timeout_val);
  } else {
    var x__8148__auto__ = o == null ? null : o;
    return function() {
      var or__7504__auto__ = cljs.core._deref_with_timeout[function() {
        var G__17787 = x__8148__auto__;
        return goog.typeOf(G__17787);
      }()];
      if (or__7504__auto__) {
        return or__7504__auto__;
      } else {
        var or__7504__auto____$1 = cljs.core._deref_with_timeout["_"];
        if (or__7504__auto____$1) {
          return or__7504__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IDerefWithTimeout.-deref-with-timeout", o);
        }
      }
    }().call(null, o, msec, timeout_val);
  }
};
cljs.core.IMeta = function() {
  var obj17789 = {};
  return obj17789;
}();
cljs.core._meta = function _meta(o) {
  if (function() {
    var and__7492__auto__ = o;
    if (and__7492__auto__) {
      return o.cljs$core$IMeta$_meta$arity$1;
    } else {
      return and__7492__auto__;
    }
  }()) {
    return o.cljs$core$IMeta$_meta$arity$1(o);
  } else {
    var x__8148__auto__ = o == null ? null : o;
    return function() {
      var or__7504__auto__ = cljs.core._meta[function() {
        var G__17793 = x__8148__auto__;
        return goog.typeOf(G__17793);
      }()];
      if (or__7504__auto__) {
        return or__7504__auto__;
      } else {
        var or__7504__auto____$1 = cljs.core._meta["_"];
        if (or__7504__auto____$1) {
          return or__7504__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IMeta.-meta", o);
        }
      }
    }().call(null, o);
  }
};
cljs.core.IWithMeta = function() {
  var obj17795 = {};
  return obj17795;
}();
cljs.core._with_meta = function _with_meta(o, meta) {
  if (function() {
    var and__7492__auto__ = o;
    if (and__7492__auto__) {
      return o.cljs$core$IWithMeta$_with_meta$arity$2;
    } else {
      return and__7492__auto__;
    }
  }()) {
    return o.cljs$core$IWithMeta$_with_meta$arity$2(o, meta);
  } else {
    var x__8148__auto__ = o == null ? null : o;
    return function() {
      var or__7504__auto__ = cljs.core._with_meta[function() {
        var G__17799 = x__8148__auto__;
        return goog.typeOf(G__17799);
      }()];
      if (or__7504__auto__) {
        return or__7504__auto__;
      } else {
        var or__7504__auto____$1 = cljs.core._with_meta["_"];
        if (or__7504__auto____$1) {
          return or__7504__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IWithMeta.-with-meta", o);
        }
      }
    }().call(null, o, meta);
  }
};
cljs.core.IReduce = function() {
  var obj17801 = {};
  return obj17801;
}();
cljs.core._reduce = function() {
  var _reduce = null;
  var _reduce__2 = function(coll, f) {
    if (function() {
      var and__7492__auto__ = coll;
      if (and__7492__auto__) {
        return coll.cljs$core$IReduce$_reduce$arity$2;
      } else {
        return and__7492__auto__;
      }
    }()) {
      return coll.cljs$core$IReduce$_reduce$arity$2(coll, f);
    } else {
      var x__8148__auto__ = coll == null ? null : coll;
      return function() {
        var or__7504__auto__ = cljs.core._reduce[function() {
          var G__17807 = x__8148__auto__;
          return goog.typeOf(G__17807);
        }()];
        if (or__7504__auto__) {
          return or__7504__auto__;
        } else {
          var or__7504__auto____$1 = cljs.core._reduce["_"];
          if (or__7504__auto____$1) {
            return or__7504__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IReduce.-reduce", coll);
          }
        }
      }().call(null, coll, f);
    }
  };
  var _reduce__3 = function(coll, f, start) {
    if (function() {
      var and__7492__auto__ = coll;
      if (and__7492__auto__) {
        return coll.cljs$core$IReduce$_reduce$arity$3;
      } else {
        return and__7492__auto__;
      }
    }()) {
      return coll.cljs$core$IReduce$_reduce$arity$3(coll, f, start);
    } else {
      var x__8148__auto__ = coll == null ? null : coll;
      return function() {
        var or__7504__auto__ = cljs.core._reduce[function() {
          var G__17809 = x__8148__auto__;
          return goog.typeOf(G__17809);
        }()];
        if (or__7504__auto__) {
          return or__7504__auto__;
        } else {
          var or__7504__auto____$1 = cljs.core._reduce["_"];
          if (or__7504__auto____$1) {
            return or__7504__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IReduce.-reduce", coll);
          }
        }
      }().call(null, coll, f, start);
    }
  };
  _reduce = function(coll, f, start) {
    switch(arguments.length) {
      case 2:
        return _reduce__2.call(this, coll, f);
      case 3:
        return _reduce__3.call(this, coll, f, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _reduce.cljs$core$IFn$_invoke$arity$2 = _reduce__2;
  _reduce.cljs$core$IFn$_invoke$arity$3 = _reduce__3;
  return _reduce;
}();
cljs.core.IKVReduce = function() {
  var obj17811 = {};
  return obj17811;
}();
cljs.core._kv_reduce = function _kv_reduce(coll, f, init) {
  if (function() {
    var and__7492__auto__ = coll;
    if (and__7492__auto__) {
      return coll.cljs$core$IKVReduce$_kv_reduce$arity$3;
    } else {
      return and__7492__auto__;
    }
  }()) {
    return coll.cljs$core$IKVReduce$_kv_reduce$arity$3(coll, f, init);
  } else {
    var x__8148__auto__ = coll == null ? null : coll;
    return function() {
      var or__7504__auto__ = cljs.core._kv_reduce[function() {
        var G__17815 = x__8148__auto__;
        return goog.typeOf(G__17815);
      }()];
      if (or__7504__auto__) {
        return or__7504__auto__;
      } else {
        var or__7504__auto____$1 = cljs.core._kv_reduce["_"];
        if (or__7504__auto____$1) {
          return or__7504__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IKVReduce.-kv-reduce", coll);
        }
      }
    }().call(null, coll, f, init);
  }
};
cljs.core.IEquiv = function() {
  var obj17817 = {};
  return obj17817;
}();
cljs.core._equiv = function _equiv(o, other) {
  if (function() {
    var and__7492__auto__ = o;
    if (and__7492__auto__) {
      return o.cljs$core$IEquiv$_equiv$arity$2;
    } else {
      return and__7492__auto__;
    }
  }()) {
    return o.cljs$core$IEquiv$_equiv$arity$2(o, other);
  } else {
    var x__8148__auto__ = o == null ? null : o;
    return function() {
      var or__7504__auto__ = cljs.core._equiv[function() {
        var G__17821 = x__8148__auto__;
        return goog.typeOf(G__17821);
      }()];
      if (or__7504__auto__) {
        return or__7504__auto__;
      } else {
        var or__7504__auto____$1 = cljs.core._equiv["_"];
        if (or__7504__auto____$1) {
          return or__7504__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IEquiv.-equiv", o);
        }
      }
    }().call(null, o, other);
  }
};
cljs.core.IHash = function() {
  var obj17823 = {};
  return obj17823;
}();
cljs.core._hash = function _hash(o) {
  if (function() {
    var and__7492__auto__ = o;
    if (and__7492__auto__) {
      return o.cljs$core$IHash$_hash$arity$1;
    } else {
      return and__7492__auto__;
    }
  }()) {
    return o.cljs$core$IHash$_hash$arity$1(o);
  } else {
    var x__8148__auto__ = o == null ? null : o;
    return function() {
      var or__7504__auto__ = cljs.core._hash[function() {
        var G__17827 = x__8148__auto__;
        return goog.typeOf(G__17827);
      }()];
      if (or__7504__auto__) {
        return or__7504__auto__;
      } else {
        var or__7504__auto____$1 = cljs.core._hash["_"];
        if (or__7504__auto____$1) {
          return or__7504__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IHash.-hash", o);
        }
      }
    }().call(null, o);
  }
};
cljs.core.ISeqable = function() {
  var obj17829 = {};
  return obj17829;
}();
cljs.core._seq = function _seq(o) {
  if (function() {
    var and__7492__auto__ = o;
    if (and__7492__auto__) {
      return o.cljs$core$ISeqable$_seq$arity$1;
    } else {
      return and__7492__auto__;
    }
  }()) {
    return o.cljs$core$ISeqable$_seq$arity$1(o);
  } else {
    var x__8148__auto__ = o == null ? null : o;
    return function() {
      var or__7504__auto__ = cljs.core._seq[function() {
        var G__17833 = x__8148__auto__;
        return goog.typeOf(G__17833);
      }()];
      if (or__7504__auto__) {
        return or__7504__auto__;
      } else {
        var or__7504__auto____$1 = cljs.core._seq["_"];
        if (or__7504__auto____$1) {
          return or__7504__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ISeqable.-seq", o);
        }
      }
    }().call(null, o);
  }
};
cljs.core.ISequential = function() {
  var obj17835 = {};
  return obj17835;
}();
cljs.core.IList = function() {
  var obj17837 = {};
  return obj17837;
}();
cljs.core.IRecord = function() {
  var obj17839 = {};
  return obj17839;
}();
cljs.core.IReversible = function() {
  var obj17841 = {};
  return obj17841;
}();
cljs.core._rseq = function _rseq(coll) {
  if (function() {
    var and__7492__auto__ = coll;
    if (and__7492__auto__) {
      return coll.cljs$core$IReversible$_rseq$arity$1;
    } else {
      return and__7492__auto__;
    }
  }()) {
    return coll.cljs$core$IReversible$_rseq$arity$1(coll);
  } else {
    var x__8148__auto__ = coll == null ? null : coll;
    return function() {
      var or__7504__auto__ = cljs.core._rseq[function() {
        var G__17845 = x__8148__auto__;
        return goog.typeOf(G__17845);
      }()];
      if (or__7504__auto__) {
        return or__7504__auto__;
      } else {
        var or__7504__auto____$1 = cljs.core._rseq["_"];
        if (or__7504__auto____$1) {
          return or__7504__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IReversible.-rseq", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.ISorted = function() {
  var obj17847 = {};
  return obj17847;
}();
cljs.core._sorted_seq = function _sorted_seq(coll, ascending_QMARK_) {
  if (function() {
    var and__7492__auto__ = coll;
    if (and__7492__auto__) {
      return coll.cljs$core$ISorted$_sorted_seq$arity$2;
    } else {
      return and__7492__auto__;
    }
  }()) {
    return coll.cljs$core$ISorted$_sorted_seq$arity$2(coll, ascending_QMARK_);
  } else {
    var x__8148__auto__ = coll == null ? null : coll;
    return function() {
      var or__7504__auto__ = cljs.core._sorted_seq[function() {
        var G__17851 = x__8148__auto__;
        return goog.typeOf(G__17851);
      }()];
      if (or__7504__auto__) {
        return or__7504__auto__;
      } else {
        var or__7504__auto____$1 = cljs.core._sorted_seq["_"];
        if (or__7504__auto____$1) {
          return or__7504__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ISorted.-sorted-seq", coll);
        }
      }
    }().call(null, coll, ascending_QMARK_);
  }
};
cljs.core._sorted_seq_from = function _sorted_seq_from(coll, k, ascending_QMARK_) {
  if (function() {
    var and__7492__auto__ = coll;
    if (and__7492__auto__) {
      return coll.cljs$core$ISorted$_sorted_seq_from$arity$3;
    } else {
      return and__7492__auto__;
    }
  }()) {
    return coll.cljs$core$ISorted$_sorted_seq_from$arity$3(coll, k, ascending_QMARK_);
  } else {
    var x__8148__auto__ = coll == null ? null : coll;
    return function() {
      var or__7504__auto__ = cljs.core._sorted_seq_from[function() {
        var G__17855 = x__8148__auto__;
        return goog.typeOf(G__17855);
      }()];
      if (or__7504__auto__) {
        return or__7504__auto__;
      } else {
        var or__7504__auto____$1 = cljs.core._sorted_seq_from["_"];
        if (or__7504__auto____$1) {
          return or__7504__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ISorted.-sorted-seq-from", coll);
        }
      }
    }().call(null, coll, k, ascending_QMARK_);
  }
};
cljs.core._entry_key = function _entry_key(coll, entry) {
  if (function() {
    var and__7492__auto__ = coll;
    if (and__7492__auto__) {
      return coll.cljs$core$ISorted$_entry_key$arity$2;
    } else {
      return and__7492__auto__;
    }
  }()) {
    return coll.cljs$core$ISorted$_entry_key$arity$2(coll, entry);
  } else {
    var x__8148__auto__ = coll == null ? null : coll;
    return function() {
      var or__7504__auto__ = cljs.core._entry_key[function() {
        var G__17859 = x__8148__auto__;
        return goog.typeOf(G__17859);
      }()];
      if (or__7504__auto__) {
        return or__7504__auto__;
      } else {
        var or__7504__auto____$1 = cljs.core._entry_key["_"];
        if (or__7504__auto____$1) {
          return or__7504__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ISorted.-entry-key", coll);
        }
      }
    }().call(null, coll, entry);
  }
};
cljs.core._comparator = function _comparator(coll) {
  if (function() {
    var and__7492__auto__ = coll;
    if (and__7492__auto__) {
      return coll.cljs$core$ISorted$_comparator$arity$1;
    } else {
      return and__7492__auto__;
    }
  }()) {
    return coll.cljs$core$ISorted$_comparator$arity$1(coll);
  } else {
    var x__8148__auto__ = coll == null ? null : coll;
    return function() {
      var or__7504__auto__ = cljs.core._comparator[function() {
        var G__17863 = x__8148__auto__;
        return goog.typeOf(G__17863);
      }()];
      if (or__7504__auto__) {
        return or__7504__auto__;
      } else {
        var or__7504__auto____$1 = cljs.core._comparator["_"];
        if (or__7504__auto____$1) {
          return or__7504__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ISorted.-comparator", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.IWriter = function() {
  var obj17865 = {};
  return obj17865;
}();
cljs.core._write = function _write(writer, s) {
  if (function() {
    var and__7492__auto__ = writer;
    if (and__7492__auto__) {
      return writer.cljs$core$IWriter$_write$arity$2;
    } else {
      return and__7492__auto__;
    }
  }()) {
    return writer.cljs$core$IWriter$_write$arity$2(writer, s);
  } else {
    var x__8148__auto__ = writer == null ? null : writer;
    return function() {
      var or__7504__auto__ = cljs.core._write[function() {
        var G__17869 = x__8148__auto__;
        return goog.typeOf(G__17869);
      }()];
      if (or__7504__auto__) {
        return or__7504__auto__;
      } else {
        var or__7504__auto____$1 = cljs.core._write["_"];
        if (or__7504__auto____$1) {
          return or__7504__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IWriter.-write", writer);
        }
      }
    }().call(null, writer, s);
  }
};
cljs.core._flush = function _flush(writer) {
  if (function() {
    var and__7492__auto__ = writer;
    if (and__7492__auto__) {
      return writer.cljs$core$IWriter$_flush$arity$1;
    } else {
      return and__7492__auto__;
    }
  }()) {
    return writer.cljs$core$IWriter$_flush$arity$1(writer);
  } else {
    var x__8148__auto__ = writer == null ? null : writer;
    return function() {
      var or__7504__auto__ = cljs.core._flush[function() {
        var G__17873 = x__8148__auto__;
        return goog.typeOf(G__17873);
      }()];
      if (or__7504__auto__) {
        return or__7504__auto__;
      } else {
        var or__7504__auto____$1 = cljs.core._flush["_"];
        if (or__7504__auto____$1) {
          return or__7504__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IWriter.-flush", writer);
        }
      }
    }().call(null, writer);
  }
};
cljs.core.IPrintWithWriter = function() {
  var obj17875 = {};
  return obj17875;
}();
cljs.core._pr_writer = function _pr_writer(o, writer, opts) {
  if (function() {
    var and__7492__auto__ = o;
    if (and__7492__auto__) {
      return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3;
    } else {
      return and__7492__auto__;
    }
  }()) {
    return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3(o, writer, opts);
  } else {
    var x__8148__auto__ = o == null ? null : o;
    return function() {
      var or__7504__auto__ = cljs.core._pr_writer[function() {
        var G__17879 = x__8148__auto__;
        return goog.typeOf(G__17879);
      }()];
      if (or__7504__auto__) {
        return or__7504__auto__;
      } else {
        var or__7504__auto____$1 = cljs.core._pr_writer["_"];
        if (or__7504__auto____$1) {
          return or__7504__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IPrintWithWriter.-pr-writer", o);
        }
      }
    }().call(null, o, writer, opts);
  }
};
cljs.core.IPending = function() {
  var obj17881 = {};
  return obj17881;
}();
cljs.core._realized_QMARK_ = function _realized_QMARK_(d) {
  if (function() {
    var and__7492__auto__ = d;
    if (and__7492__auto__) {
      return d.cljs$core$IPending$_realized_QMARK_$arity$1;
    } else {
      return and__7492__auto__;
    }
  }()) {
    return d.cljs$core$IPending$_realized_QMARK_$arity$1(d);
  } else {
    var x__8148__auto__ = d == null ? null : d;
    return function() {
      var or__7504__auto__ = cljs.core._realized_QMARK_[function() {
        var G__17885 = x__8148__auto__;
        return goog.typeOf(G__17885);
      }()];
      if (or__7504__auto__) {
        return or__7504__auto__;
      } else {
        var or__7504__auto____$1 = cljs.core._realized_QMARK_["_"];
        if (or__7504__auto____$1) {
          return or__7504__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IPending.-realized?", d);
        }
      }
    }().call(null, d);
  }
};
cljs.core.IWatchable = function() {
  var obj17887 = {};
  return obj17887;
}();
cljs.core._notify_watches = function _notify_watches(this$, oldval, newval) {
  if (function() {
    var and__7492__auto__ = this$;
    if (and__7492__auto__) {
      return this$.cljs$core$IWatchable$_notify_watches$arity$3;
    } else {
      return and__7492__auto__;
    }
  }()) {
    return this$.cljs$core$IWatchable$_notify_watches$arity$3(this$, oldval, newval);
  } else {
    var x__8148__auto__ = this$ == null ? null : this$;
    return function() {
      var or__7504__auto__ = cljs.core._notify_watches[function() {
        var G__17891 = x__8148__auto__;
        return goog.typeOf(G__17891);
      }()];
      if (or__7504__auto__) {
        return or__7504__auto__;
      } else {
        var or__7504__auto____$1 = cljs.core._notify_watches["_"];
        if (or__7504__auto____$1) {
          return or__7504__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IWatchable.-notify-watches", this$);
        }
      }
    }().call(null, this$, oldval, newval);
  }
};
cljs.core._add_watch = function _add_watch(this$, key, f) {
  if (function() {
    var and__7492__auto__ = this$;
    if (and__7492__auto__) {
      return this$.cljs$core$IWatchable$_add_watch$arity$3;
    } else {
      return and__7492__auto__;
    }
  }()) {
    return this$.cljs$core$IWatchable$_add_watch$arity$3(this$, key, f);
  } else {
    var x__8148__auto__ = this$ == null ? null : this$;
    return function() {
      var or__7504__auto__ = cljs.core._add_watch[function() {
        var G__17895 = x__8148__auto__;
        return goog.typeOf(G__17895);
      }()];
      if (or__7504__auto__) {
        return or__7504__auto__;
      } else {
        var or__7504__auto____$1 = cljs.core._add_watch["_"];
        if (or__7504__auto____$1) {
          return or__7504__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IWatchable.-add-watch", this$);
        }
      }
    }().call(null, this$, key, f);
  }
};
cljs.core._remove_watch = function _remove_watch(this$, key) {
  if (function() {
    var and__7492__auto__ = this$;
    if (and__7492__auto__) {
      return this$.cljs$core$IWatchable$_remove_watch$arity$2;
    } else {
      return and__7492__auto__;
    }
  }()) {
    return this$.cljs$core$IWatchable$_remove_watch$arity$2(this$, key);
  } else {
    var x__8148__auto__ = this$ == null ? null : this$;
    return function() {
      var or__7504__auto__ = cljs.core._remove_watch[function() {
        var G__17899 = x__8148__auto__;
        return goog.typeOf(G__17899);
      }()];
      if (or__7504__auto__) {
        return or__7504__auto__;
      } else {
        var or__7504__auto____$1 = cljs.core._remove_watch["_"];
        if (or__7504__auto____$1) {
          return or__7504__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IWatchable.-remove-watch", this$);
        }
      }
    }().call(null, this$, key);
  }
};
cljs.core.IEditableCollection = function() {
  var obj17901 = {};
  return obj17901;
}();
cljs.core._as_transient = function _as_transient(coll) {
  if (function() {
    var and__7492__auto__ = coll;
    if (and__7492__auto__) {
      return coll.cljs$core$IEditableCollection$_as_transient$arity$1;
    } else {
      return and__7492__auto__;
    }
  }()) {
    return coll.cljs$core$IEditableCollection$_as_transient$arity$1(coll);
  } else {
    var x__8148__auto__ = coll == null ? null : coll;
    return function() {
      var or__7504__auto__ = cljs.core._as_transient[function() {
        var G__17905 = x__8148__auto__;
        return goog.typeOf(G__17905);
      }()];
      if (or__7504__auto__) {
        return or__7504__auto__;
      } else {
        var or__7504__auto____$1 = cljs.core._as_transient["_"];
        if (or__7504__auto____$1) {
          return or__7504__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IEditableCollection.-as-transient", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.ITransientCollection = function() {
  var obj17907 = {};
  return obj17907;
}();
cljs.core._conj_BANG_ = function _conj_BANG_(tcoll, val) {
  if (function() {
    var and__7492__auto__ = tcoll;
    if (and__7492__auto__) {
      return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2;
    } else {
      return and__7492__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2(tcoll, val);
  } else {
    var x__8148__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__7504__auto__ = cljs.core._conj_BANG_[function() {
        var G__17911 = x__8148__auto__;
        return goog.typeOf(G__17911);
      }()];
      if (or__7504__auto__) {
        return or__7504__auto__;
      } else {
        var or__7504__auto____$1 = cljs.core._conj_BANG_["_"];
        if (or__7504__auto____$1) {
          return or__7504__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ITransientCollection.-conj!", tcoll);
        }
      }
    }().call(null, tcoll, val);
  }
};
cljs.core._persistent_BANG_ = function _persistent_BANG_(tcoll) {
  if (function() {
    var and__7492__auto__ = tcoll;
    if (and__7492__auto__) {
      return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1;
    } else {
      return and__7492__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(tcoll);
  } else {
    var x__8148__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__7504__auto__ = cljs.core._persistent_BANG_[function() {
        var G__17915 = x__8148__auto__;
        return goog.typeOf(G__17915);
      }()];
      if (or__7504__auto__) {
        return or__7504__auto__;
      } else {
        var or__7504__auto____$1 = cljs.core._persistent_BANG_["_"];
        if (or__7504__auto____$1) {
          return or__7504__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ITransientCollection.-persistent!", tcoll);
        }
      }
    }().call(null, tcoll);
  }
};
cljs.core.ITransientAssociative = function() {
  var obj17917 = {};
  return obj17917;
}();
cljs.core._assoc_BANG_ = function _assoc_BANG_(tcoll, key, val) {
  if (function() {
    var and__7492__auto__ = tcoll;
    if (and__7492__auto__) {
      return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3;
    } else {
      return and__7492__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll, key, val);
  } else {
    var x__8148__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__7504__auto__ = cljs.core._assoc_BANG_[function() {
        var G__17921 = x__8148__auto__;
        return goog.typeOf(G__17921);
      }()];
      if (or__7504__auto__) {
        return or__7504__auto__;
      } else {
        var or__7504__auto____$1 = cljs.core._assoc_BANG_["_"];
        if (or__7504__auto____$1) {
          return or__7504__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ITransientAssociative.-assoc!", tcoll);
        }
      }
    }().call(null, tcoll, key, val);
  }
};
cljs.core.ITransientMap = function() {
  var obj17923 = {};
  return obj17923;
}();
cljs.core._dissoc_BANG_ = function _dissoc_BANG_(tcoll, key) {
  if (function() {
    var and__7492__auto__ = tcoll;
    if (and__7492__auto__) {
      return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2;
    } else {
      return and__7492__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2(tcoll, key);
  } else {
    var x__8148__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__7504__auto__ = cljs.core._dissoc_BANG_[function() {
        var G__17927 = x__8148__auto__;
        return goog.typeOf(G__17927);
      }()];
      if (or__7504__auto__) {
        return or__7504__auto__;
      } else {
        var or__7504__auto____$1 = cljs.core._dissoc_BANG_["_"];
        if (or__7504__auto____$1) {
          return or__7504__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ITransientMap.-dissoc!", tcoll);
        }
      }
    }().call(null, tcoll, key);
  }
};
cljs.core.ITransientVector = function() {
  var obj17929 = {};
  return obj17929;
}();
cljs.core._assoc_n_BANG_ = function _assoc_n_BANG_(tcoll, n, val) {
  if (function() {
    var and__7492__auto__ = tcoll;
    if (and__7492__auto__) {
      return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3;
    } else {
      return and__7492__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3(tcoll, n, val);
  } else {
    var x__8148__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__7504__auto__ = cljs.core._assoc_n_BANG_[function() {
        var G__17933 = x__8148__auto__;
        return goog.typeOf(G__17933);
      }()];
      if (or__7504__auto__) {
        return or__7504__auto__;
      } else {
        var or__7504__auto____$1 = cljs.core._assoc_n_BANG_["_"];
        if (or__7504__auto____$1) {
          return or__7504__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ITransientVector.-assoc-n!", tcoll);
        }
      }
    }().call(null, tcoll, n, val);
  }
};
cljs.core._pop_BANG_ = function _pop_BANG_(tcoll) {
  if (function() {
    var and__7492__auto__ = tcoll;
    if (and__7492__auto__) {
      return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1;
    } else {
      return and__7492__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1(tcoll);
  } else {
    var x__8148__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__7504__auto__ = cljs.core._pop_BANG_[function() {
        var G__17937 = x__8148__auto__;
        return goog.typeOf(G__17937);
      }()];
      if (or__7504__auto__) {
        return or__7504__auto__;
      } else {
        var or__7504__auto____$1 = cljs.core._pop_BANG_["_"];
        if (or__7504__auto____$1) {
          return or__7504__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ITransientVector.-pop!", tcoll);
        }
      }
    }().call(null, tcoll);
  }
};
cljs.core.ITransientSet = function() {
  var obj17939 = {};
  return obj17939;
}();
cljs.core._disjoin_BANG_ = function _disjoin_BANG_(tcoll, v) {
  if (function() {
    var and__7492__auto__ = tcoll;
    if (and__7492__auto__) {
      return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2;
    } else {
      return and__7492__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2(tcoll, v);
  } else {
    var x__8148__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__7504__auto__ = cljs.core._disjoin_BANG_[function() {
        var G__17943 = x__8148__auto__;
        return goog.typeOf(G__17943);
      }()];
      if (or__7504__auto__) {
        return or__7504__auto__;
      } else {
        var or__7504__auto____$1 = cljs.core._disjoin_BANG_["_"];
        if (or__7504__auto____$1) {
          return or__7504__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ITransientSet.-disjoin!", tcoll);
        }
      }
    }().call(null, tcoll, v);
  }
};
cljs.core.IComparable = function() {
  var obj17945 = {};
  return obj17945;
}();
cljs.core._compare = function _compare(x, y) {
  if (function() {
    var and__7492__auto__ = x;
    if (and__7492__auto__) {
      return x.cljs$core$IComparable$_compare$arity$2;
    } else {
      return and__7492__auto__;
    }
  }()) {
    return x.cljs$core$IComparable$_compare$arity$2(x, y);
  } else {
    var x__8148__auto__ = x == null ? null : x;
    return function() {
      var or__7504__auto__ = cljs.core._compare[function() {
        var G__17949 = x__8148__auto__;
        return goog.typeOf(G__17949);
      }()];
      if (or__7504__auto__) {
        return or__7504__auto__;
      } else {
        var or__7504__auto____$1 = cljs.core._compare["_"];
        if (or__7504__auto____$1) {
          return or__7504__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IComparable.-compare", x);
        }
      }
    }().call(null, x, y);
  }
};
cljs.core.IChunk = function() {
  var obj17951 = {};
  return obj17951;
}();
cljs.core._drop_first = function _drop_first(coll) {
  if (function() {
    var and__7492__auto__ = coll;
    if (and__7492__auto__) {
      return coll.cljs$core$IChunk$_drop_first$arity$1;
    } else {
      return and__7492__auto__;
    }
  }()) {
    return coll.cljs$core$IChunk$_drop_first$arity$1(coll);
  } else {
    var x__8148__auto__ = coll == null ? null : coll;
    return function() {
      var or__7504__auto__ = cljs.core._drop_first[function() {
        var G__17955 = x__8148__auto__;
        return goog.typeOf(G__17955);
      }()];
      if (or__7504__auto__) {
        return or__7504__auto__;
      } else {
        var or__7504__auto____$1 = cljs.core._drop_first["_"];
        if (or__7504__auto____$1) {
          return or__7504__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IChunk.-drop-first", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.IChunkedSeq = function() {
  var obj17957 = {};
  return obj17957;
}();
cljs.core._chunked_first = function _chunked_first(coll) {
  if (function() {
    var and__7492__auto__ = coll;
    if (and__7492__auto__) {
      return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1;
    } else {
      return and__7492__auto__;
    }
  }()) {
    return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1(coll);
  } else {
    var x__8148__auto__ = coll == null ? null : coll;
    return function() {
      var or__7504__auto__ = cljs.core._chunked_first[function() {
        var G__17961 = x__8148__auto__;
        return goog.typeOf(G__17961);
      }()];
      if (or__7504__auto__) {
        return or__7504__auto__;
      } else {
        var or__7504__auto____$1 = cljs.core._chunked_first["_"];
        if (or__7504__auto____$1) {
          return or__7504__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IChunkedSeq.-chunked-first", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core._chunked_rest = function _chunked_rest(coll) {
  if (function() {
    var and__7492__auto__ = coll;
    if (and__7492__auto__) {
      return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1;
    } else {
      return and__7492__auto__;
    }
  }()) {
    return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1(coll);
  } else {
    var x__8148__auto__ = coll == null ? null : coll;
    return function() {
      var or__7504__auto__ = cljs.core._chunked_rest[function() {
        var G__17965 = x__8148__auto__;
        return goog.typeOf(G__17965);
      }()];
      if (or__7504__auto__) {
        return or__7504__auto__;
      } else {
        var or__7504__auto____$1 = cljs.core._chunked_rest["_"];
        if (or__7504__auto____$1) {
          return or__7504__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IChunkedSeq.-chunked-rest", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.IChunkedNext = function() {
  var obj17967 = {};
  return obj17967;
}();
cljs.core._chunked_next = function _chunked_next(coll) {
  if (function() {
    var and__7492__auto__ = coll;
    if (and__7492__auto__) {
      return coll.cljs$core$IChunkedNext$_chunked_next$arity$1;
    } else {
      return and__7492__auto__;
    }
  }()) {
    return coll.cljs$core$IChunkedNext$_chunked_next$arity$1(coll);
  } else {
    var x__8148__auto__ = coll == null ? null : coll;
    return function() {
      var or__7504__auto__ = cljs.core._chunked_next[function() {
        var G__17971 = x__8148__auto__;
        return goog.typeOf(G__17971);
      }()];
      if (or__7504__auto__) {
        return or__7504__auto__;
      } else {
        var or__7504__auto____$1 = cljs.core._chunked_next["_"];
        if (or__7504__auto____$1) {
          return or__7504__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IChunkedNext.-chunked-next", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.INamed = function() {
  var obj17973 = {};
  return obj17973;
}();
cljs.core._name = function _name(x) {
  if (function() {
    var and__7492__auto__ = x;
    if (and__7492__auto__) {
      return x.cljs$core$INamed$_name$arity$1;
    } else {
      return and__7492__auto__;
    }
  }()) {
    return x.cljs$core$INamed$_name$arity$1(x);
  } else {
    var x__8148__auto__ = x == null ? null : x;
    return function() {
      var or__7504__auto__ = cljs.core._name[function() {
        var G__17977 = x__8148__auto__;
        return goog.typeOf(G__17977);
      }()];
      if (or__7504__auto__) {
        return or__7504__auto__;
      } else {
        var or__7504__auto____$1 = cljs.core._name["_"];
        if (or__7504__auto____$1) {
          return or__7504__auto____$1;
        } else {
          throw cljs.core.missing_protocol("INamed.-name", x);
        }
      }
    }().call(null, x);
  }
};
cljs.core._namespace = function _namespace(x) {
  if (function() {
    var and__7492__auto__ = x;
    if (and__7492__auto__) {
      return x.cljs$core$INamed$_namespace$arity$1;
    } else {
      return and__7492__auto__;
    }
  }()) {
    return x.cljs$core$INamed$_namespace$arity$1(x);
  } else {
    var x__8148__auto__ = x == null ? null : x;
    return function() {
      var or__7504__auto__ = cljs.core._namespace[function() {
        var G__17981 = x__8148__auto__;
        return goog.typeOf(G__17981);
      }()];
      if (or__7504__auto__) {
        return or__7504__auto__;
      } else {
        var or__7504__auto____$1 = cljs.core._namespace["_"];
        if (or__7504__auto____$1) {
          return or__7504__auto____$1;
        } else {
          throw cljs.core.missing_protocol("INamed.-namespace", x);
        }
      }
    }().call(null, x);
  }
};
cljs.core.IAtom = function() {
  var obj17983 = {};
  return obj17983;
}();
cljs.core.IReset = function() {
  var obj17985 = {};
  return obj17985;
}();
cljs.core._reset_BANG_ = function _reset_BANG_(o, new_value) {
  if (function() {
    var and__7492__auto__ = o;
    if (and__7492__auto__) {
      return o.cljs$core$IReset$_reset_BANG_$arity$2;
    } else {
      return and__7492__auto__;
    }
  }()) {
    return o.cljs$core$IReset$_reset_BANG_$arity$2(o, new_value);
  } else {
    var x__8148__auto__ = o == null ? null : o;
    return function() {
      var or__7504__auto__ = cljs.core._reset_BANG_[function() {
        var G__17989 = x__8148__auto__;
        return goog.typeOf(G__17989);
      }()];
      if (or__7504__auto__) {
        return or__7504__auto__;
      } else {
        var or__7504__auto____$1 = cljs.core._reset_BANG_["_"];
        if (or__7504__auto____$1) {
          return or__7504__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IReset.-reset!", o);
        }
      }
    }().call(null, o, new_value);
  }
};
cljs.core.ISwap = function() {
  var obj17991 = {};
  return obj17991;
}();
cljs.core._swap_BANG_ = function() {
  var _swap_BANG_ = null;
  var _swap_BANG___2 = function(o, f) {
    if (function() {
      var and__7492__auto__ = o;
      if (and__7492__auto__) {
        return o.cljs$core$ISwap$_swap_BANG_$arity$2;
      } else {
        return and__7492__auto__;
      }
    }()) {
      return o.cljs$core$ISwap$_swap_BANG_$arity$2(o, f);
    } else {
      var x__8148__auto__ = o == null ? null : o;
      return function() {
        var or__7504__auto__ = cljs.core._swap_BANG_[function() {
          var G__18001 = x__8148__auto__;
          return goog.typeOf(G__18001);
        }()];
        if (or__7504__auto__) {
          return or__7504__auto__;
        } else {
          var or__7504__auto____$1 = cljs.core._swap_BANG_["_"];
          if (or__7504__auto____$1) {
            return or__7504__auto____$1;
          } else {
            throw cljs.core.missing_protocol("ISwap.-swap!", o);
          }
        }
      }().call(null, o, f);
    }
  };
  var _swap_BANG___3 = function(o, f, a) {
    if (function() {
      var and__7492__auto__ = o;
      if (and__7492__auto__) {
        return o.cljs$core$ISwap$_swap_BANG_$arity$3;
      } else {
        return and__7492__auto__;
      }
    }()) {
      return o.cljs$core$ISwap$_swap_BANG_$arity$3(o, f, a);
    } else {
      var x__8148__auto__ = o == null ? null : o;
      return function() {
        var or__7504__auto__ = cljs.core._swap_BANG_[function() {
          var G__18003 = x__8148__auto__;
          return goog.typeOf(G__18003);
        }()];
        if (or__7504__auto__) {
          return or__7504__auto__;
        } else {
          var or__7504__auto____$1 = cljs.core._swap_BANG_["_"];
          if (or__7504__auto____$1) {
            return or__7504__auto____$1;
          } else {
            throw cljs.core.missing_protocol("ISwap.-swap!", o);
          }
        }
      }().call(null, o, f, a);
    }
  };
  var _swap_BANG___4 = function(o, f, a, b) {
    if (function() {
      var and__7492__auto__ = o;
      if (and__7492__auto__) {
        return o.cljs$core$ISwap$_swap_BANG_$arity$4;
      } else {
        return and__7492__auto__;
      }
    }()) {
      return o.cljs$core$ISwap$_swap_BANG_$arity$4(o, f, a, b);
    } else {
      var x__8148__auto__ = o == null ? null : o;
      return function() {
        var or__7504__auto__ = cljs.core._swap_BANG_[function() {
          var G__18005 = x__8148__auto__;
          return goog.typeOf(G__18005);
        }()];
        if (or__7504__auto__) {
          return or__7504__auto__;
        } else {
          var or__7504__auto____$1 = cljs.core._swap_BANG_["_"];
          if (or__7504__auto____$1) {
            return or__7504__auto____$1;
          } else {
            throw cljs.core.missing_protocol("ISwap.-swap!", o);
          }
        }
      }().call(null, o, f, a, b);
    }
  };
  var _swap_BANG___5 = function(o, f, a, b, xs) {
    if (function() {
      var and__7492__auto__ = o;
      if (and__7492__auto__) {
        return o.cljs$core$ISwap$_swap_BANG_$arity$5;
      } else {
        return and__7492__auto__;
      }
    }()) {
      return o.cljs$core$ISwap$_swap_BANG_$arity$5(o, f, a, b, xs);
    } else {
      var x__8148__auto__ = o == null ? null : o;
      return function() {
        var or__7504__auto__ = cljs.core._swap_BANG_[function() {
          var G__18007 = x__8148__auto__;
          return goog.typeOf(G__18007);
        }()];
        if (or__7504__auto__) {
          return or__7504__auto__;
        } else {
          var or__7504__auto____$1 = cljs.core._swap_BANG_["_"];
          if (or__7504__auto____$1) {
            return or__7504__auto____$1;
          } else {
            throw cljs.core.missing_protocol("ISwap.-swap!", o);
          }
        }
      }().call(null, o, f, a, b, xs);
    }
  };
  _swap_BANG_ = function(o, f, a, b, xs) {
    switch(arguments.length) {
      case 2:
        return _swap_BANG___2.call(this, o, f);
      case 3:
        return _swap_BANG___3.call(this, o, f, a);
      case 4:
        return _swap_BANG___4.call(this, o, f, a, b);
      case 5:
        return _swap_BANG___5.call(this, o, f, a, b, xs);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _swap_BANG_.cljs$core$IFn$_invoke$arity$2 = _swap_BANG___2;
  _swap_BANG_.cljs$core$IFn$_invoke$arity$3 = _swap_BANG___3;
  _swap_BANG_.cljs$core$IFn$_invoke$arity$4 = _swap_BANG___4;
  _swap_BANG_.cljs$core$IFn$_invoke$arity$5 = _swap_BANG___5;
  return _swap_BANG_;
}();
cljs.core.IVolatile = function() {
  var obj18009 = {};
  return obj18009;
}();
cljs.core._vreset_BANG_ = function _vreset_BANG_(o, new_value) {
  if (function() {
    var and__7492__auto__ = o;
    if (and__7492__auto__) {
      return o.cljs$core$IVolatile$_vreset_BANG_$arity$2;
    } else {
      return and__7492__auto__;
    }
  }()) {
    return o.cljs$core$IVolatile$_vreset_BANG_$arity$2(o, new_value);
  } else {
    var x__8148__auto__ = o == null ? null : o;
    return function() {
      var or__7504__auto__ = cljs.core._vreset_BANG_[function() {
        var G__18013 = x__8148__auto__;
        return goog.typeOf(G__18013);
      }()];
      if (or__7504__auto__) {
        return or__7504__auto__;
      } else {
        var or__7504__auto____$1 = cljs.core._vreset_BANG_["_"];
        if (or__7504__auto____$1) {
          return or__7504__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IVolatile.-vreset!", o);
        }
      }
    }().call(null, o, new_value);
  }
};
cljs.core.IIterable = function() {
  var obj18015 = {};
  return obj18015;
}();
cljs.core._iterator = function _iterator(coll) {
  if (function() {
    var and__7492__auto__ = coll;
    if (and__7492__auto__) {
      return coll.cljs$core$IIterable$_iterator$arity$1;
    } else {
      return and__7492__auto__;
    }
  }()) {
    return coll.cljs$core$IIterable$_iterator$arity$1(coll);
  } else {
    var x__8148__auto__ = coll == null ? null : coll;
    return function() {
      var or__7504__auto__ = cljs.core._iterator[function() {
        var G__18019 = x__8148__auto__;
        return goog.typeOf(G__18019);
      }()];
      if (or__7504__auto__) {
        return or__7504__auto__;
      } else {
        var or__7504__auto____$1 = cljs.core._iterator["_"];
        if (or__7504__auto____$1) {
          return or__7504__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IIterable.-iterator", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.StringBufferWriter = function(sb) {
  this.sb = sb;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 1073741824;
};
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_write$arity$2 = function(_, s) {
  var self__ = this;
  var ___$1 = this;
  return self__.sb.append(s);
};
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_flush$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return null;
};
cljs.core.StringBufferWriter.cljs$lang$type = true;
cljs.core.StringBufferWriter.cljs$lang$ctorStr = "cljs.core/StringBufferWriter";
cljs.core.StringBufferWriter.cljs$lang$ctorPrWriter = function(this__8091__auto__, writer__8092__auto__, opt__8093__auto__) {
  return cljs.core._write(writer__8092__auto__, "cljs.core/StringBufferWriter");
};
cljs.core.__GT_StringBufferWriter = function __GT_StringBufferWriter(sb) {
  return new cljs.core.StringBufferWriter(sb);
};
cljs.core.pr_str_STAR_ = function pr_str_STAR_(obj) {
  var sb = new goog.string.StringBuffer;
  var writer = new cljs.core.StringBufferWriter(sb);
  obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null, writer, cljs.core.pr_opts());
  writer.cljs$core$IWriter$_flush$arity$1(null);
  return[cljs.core.str(sb)].join("");
};
cljs.core.int_rotate_left = function int_rotate_left(x, n) {
  return x << n | x >>> -n;
};
if (typeof Math.imul !== "undefined" && !(function() {
  var G__18022 = 4294967295;
  var G__18023 = 5;
  return Math.imul.cljs$core$IFn$_invoke$arity$2 ? Math.imul.cljs$core$IFn$_invoke$arity$2(G__18022, G__18023) : Math.imul.call(null, G__18022, G__18023);
}() === 0)) {
  cljs.core.imul = function imul(a, b) {
    var G__18026 = a;
    var G__18027 = b;
    return Math.imul.cljs$core$IFn$_invoke$arity$2 ? Math.imul.cljs$core$IFn$_invoke$arity$2(G__18026, G__18027) : Math.imul.call(null, G__18026, G__18027);
  };
} else {
  cljs.core.imul = function imul(a, b) {
    var ah = a >>> 16 & 65535;
    var al = a & 65535;
    var bh = b >>> 16 & 65535;
    var bl = b & 65535;
    return al * bl + (ah * bl + al * bh << 16 >>> 0) | 0;
  };
}
cljs.core.m3_seed = 0;
cljs.core.m3_C1 = 3432918353;
cljs.core.m3_C2 = 461845907;
cljs.core.m3_mix_K1 = function m3_mix_K1(k1) {
  return cljs.core.imul(cljs.core.int_rotate_left(cljs.core.imul(k1, cljs.core.m3_C1), 15), cljs.core.m3_C2);
};
cljs.core.m3_mix_H1 = function m3_mix_H1(h1, k1) {
  return cljs.core.imul(cljs.core.int_rotate_left(h1 ^ k1, 13), 5) + 3864292196;
};
cljs.core.m3_fmix = function m3_fmix(h1, len) {
  var h1__$1 = h1;
  var h1__$2 = h1__$1 ^ len;
  var h1__$3 = h1__$2 ^ h1__$2 >>> 16;
  var h1__$4 = cljs.core.imul(h1__$3, 2246822507);
  var h1__$5 = h1__$4 ^ h1__$4 >>> 13;
  var h1__$6 = cljs.core.imul(h1__$5, 3266489909);
  var h1__$7 = h1__$6 ^ h1__$6 >>> 16;
  return h1__$7;
};
cljs.core.m3_hash_int = function m3_hash_int(in$) {
  if (in$ === 0) {
    return in$;
  } else {
    var k1 = cljs.core.m3_mix_K1(in$);
    var h1 = cljs.core.m3_mix_H1(cljs.core.m3_seed, k1);
    return cljs.core.m3_fmix(h1, 4);
  }
};
cljs.core.m3_hash_unencoded_chars = function m3_hash_unencoded_chars(in$) {
  var h1 = function() {
    var i = 1;
    var h1 = cljs.core.m3_seed;
    while (true) {
      if (i < in$.length) {
        var G__18028 = i + 2;
        var G__18029 = cljs.core.m3_mix_H1(h1, cljs.core.m3_mix_K1(in$.charCodeAt(i - 1) | in$.charCodeAt(i) << 16));
        i = G__18028;
        h1 = G__18029;
        continue;
      } else {
        return h1;
      }
      break;
    }
  }();
  var h1__$1 = (in$.length & 1) === 1 ? h1 ^ cljs.core.m3_mix_K1(in$.charCodeAt(in$.length - 1)) : h1;
  return cljs.core.m3_fmix(h1__$1, cljs.core.imul(2, in$.length));
};
cljs.core.string_hash_cache = function() {
  var obj18031 = {};
  return obj18031;
}();
cljs.core.string_hash_cache_count = 0;
cljs.core.hash_string_STAR_ = function hash_string_STAR_(s) {
  if (!(s == null)) {
    var len = s.length;
    if (len > 0) {
      var i = 0;
      var hash = 0;
      while (true) {
        if (i < len) {
          var G__18032 = i + 1;
          var G__18033 = cljs.core.imul(31, hash) + s.charCodeAt(i);
          i = G__18032;
          hash = G__18033;
          continue;
        } else {
          return hash;
        }
        break;
      }
    } else {
      return 0;
    }
  } else {
    return 0;
  }
};
cljs.core.add_to_string_hash_cache = function add_to_string_hash_cache(k) {
  var h = cljs.core.hash_string_STAR_(k);
  cljs.core.string_hash_cache[k] = h;
  cljs.core.string_hash_cache_count = cljs.core.string_hash_cache_count + 1;
  return h;
};
cljs.core.hash_string = function hash_string(k) {
  if (cljs.core.string_hash_cache_count > 255) {
    cljs.core.string_hash_cache = function() {
      var obj18037 = {};
      return obj18037;
    }();
    cljs.core.string_hash_cache_count = 0;
  } else {
  }
  var h = cljs.core.string_hash_cache[k];
  if (typeof h === "number") {
    return h;
  } else {
    return cljs.core.add_to_string_hash_cache(k);
  }
};
cljs.core.hash = function hash(o) {
  if (function() {
    var G__18040 = o;
    if (G__18040) {
      var bit__8178__auto__ = G__18040.cljs$lang$protocol_mask$partition0$ & 4194304;
      if (bit__8178__auto__ || G__18040.cljs$core$IHash$) {
        return true;
      } else {
        return false;
      }
    } else {
      return false;
    }
  }()) {
    return o.cljs$core$IHash$_hash$arity$1(null);
  } else {
    if (typeof o === "number") {
      return function() {
        var G__18041 = o;
        return Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__18041) : Math.floor.call(null, G__18041);
      }() % 2147483647;
    } else {
      if (o === true) {
        return 1;
      } else {
        if (o === false) {
          return 0;
        } else {
          if (typeof o === "string") {
            return cljs.core.m3_hash_int(cljs.core.hash_string(o));
          } else {
            if (o instanceof Date) {
              return o.valueOf();
            } else {
              if (o == null) {
                return 0;
              } else {
                return cljs.core._hash(o);
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.hash_combine = function hash_combine(seed, hash) {
  return seed ^ hash + 2654435769 + (seed << 6) + (seed >> 2);
};
cljs.core.instance_QMARK_ = function instance_QMARK_(t, o) {
  return o instanceof t;
};
cljs.core.symbol_QMARK_ = function symbol_QMARK_(x) {
  return x instanceof cljs.core.Symbol;
};
cljs.core.hash_symbol = function hash_symbol(sym) {
  return cljs.core.hash_combine(cljs.core.m3_hash_unencoded_chars(sym.name), cljs.core.hash_string(sym.ns));
};
cljs.core.compare_symbols = function compare_symbols(a, b) {
  if (a.str === b.str) {
    return 0;
  } else {
    if (cljs.core.truth_(function() {
      var and__7492__auto__ = cljs.core.not(a.ns);
      if (and__7492__auto__) {
        return b.ns;
      } else {
        return and__7492__auto__;
      }
    }())) {
      return-1;
    } else {
      if (cljs.core.truth_(a.ns)) {
        if (cljs.core.not(b.ns)) {
          return 1;
        } else {
          var nsc = function() {
            var G__18048 = a.ns;
            var G__18049 = b.ns;
            return goog.array.defaultCompare(G__18048, G__18049);
          }();
          if (0 === nsc) {
            var G__18050 = a.name;
            var G__18051 = b.name;
            return goog.array.defaultCompare(G__18050, G__18051);
          } else {
            return nsc;
          }
        }
      } else {
        var G__18052 = a.name;
        var G__18053 = b.name;
        return goog.array.defaultCompare(G__18052, G__18053);
      }
    }
  }
};
cljs.core.Symbol = function(ns, name, str, _hash, _meta) {
  this.ns = ns;
  this.name = name;
  this.str = str;
  this._hash = _hash;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition0$ = 2154168321;
  this.cljs$lang$protocol_mask$partition1$ = 4096;
};
cljs.core.Symbol.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(o, writer, _) {
  var self__ = this;
  var o__$1 = this;
  return cljs.core._write(writer, self__.str);
};
cljs.core.Symbol.prototype.cljs$core$INamed$_name$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.name;
};
cljs.core.Symbol.prototype.cljs$core$INamed$_namespace$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.ns;
};
cljs.core.Symbol.prototype.cljs$core$IHash$_hash$arity$1 = function(sym) {
  var self__ = this;
  var sym__$1 = this;
  var h__7925__auto__ = self__._hash;
  if (!(h__7925__auto__ == null)) {
    return h__7925__auto__;
  } else {
    var h__7925__auto____$1 = cljs.core.hash_symbol(sym__$1);
    self__._hash = h__7925__auto____$1;
    return h__7925__auto____$1;
  }
};
cljs.core.Symbol.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_, new_meta) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Symbol(self__.ns, self__.name, self__.str, self__._hash, new_meta);
};
cljs.core.Symbol.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__._meta;
};
cljs.core.Symbol.prototype.call = function() {
  var G__18055 = null;
  var G__18055__2 = function(self__, coll) {
    var self__ = this;
    var self____$1 = this;
    var sym = self____$1;
    return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll, sym, null);
  };
  var G__18055__3 = function(self__, coll, not_found) {
    var self__ = this;
    var self____$1 = this;
    var sym = self____$1;
    return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll, sym, not_found);
  };
  G__18055 = function(self__, coll, not_found) {
    switch(arguments.length) {
      case 2:
        return G__18055__2.call(this, self__, coll);
      case 3:
        return G__18055__3.call(this, self__, coll, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__18055.cljs$core$IFn$_invoke$arity$2 = G__18055__2;
  G__18055.cljs$core$IFn$_invoke$arity$3 = G__18055__3;
  return G__18055;
}();
cljs.core.Symbol.prototype.apply = function(self__, args18054) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args18054)));
};
cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  var self__ = this;
  var sym = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll, sym, null);
};
cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$2 = function(coll, not_found) {
  var self__ = this;
  var sym = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll, sym, not_found);
};
cljs.core.Symbol.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  if (other instanceof cljs.core.Symbol) {
    return self__.str === other.str;
  } else {
    return false;
  }
};
cljs.core.Symbol.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return self__.str;
};
cljs.core.Symbol.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Symbol.cljs$lang$type = true;
cljs.core.Symbol.cljs$lang$ctorStr = "cljs.core/Symbol";
cljs.core.Symbol.cljs$lang$ctorPrWriter = function(this__8091__auto__, writer__8092__auto__, opt__8093__auto__) {
  return cljs.core._write(writer__8092__auto__, "cljs.core/Symbol");
};
cljs.core.__GT_Symbol = function __GT_Symbol(ns, name, str, _hash, _meta) {
  return new cljs.core.Symbol(ns, name, str, _hash, _meta);
};
cljs.core.symbol = function() {
  var symbol = null;
  var symbol__1 = function(name) {
    if (name instanceof cljs.core.Symbol) {
      return name;
    } else {
      return symbol.cljs$core$IFn$_invoke$arity$2(null, name);
    }
  };
  var symbol__2 = function(ns, name) {
    var sym_str = !(ns == null) ? [cljs.core.str(ns), cljs.core.str("/"), cljs.core.str(name)].join("") : name;
    return new cljs.core.Symbol(ns, name, sym_str, null, null);
  };
  symbol = function(ns, name) {
    switch(arguments.length) {
      case 1:
        return symbol__1.call(this, ns);
      case 2:
        return symbol__2.call(this, ns, name);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  symbol.cljs$core$IFn$_invoke$arity$1 = symbol__1;
  symbol.cljs$core$IFn$_invoke$arity$2 = symbol__2;
  return symbol;
}();
cljs.core.Var = function(val, sym, _meta) {
  this.val = val;
  this.sym = sym;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 163841;
};
cljs.core.Var.prototype.call = function() {
  var G__18103 = null;
  var G__18103__1 = function(self__) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null);
  };
  var G__18103__2 = function(self__, a) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a);
  };
  var G__18103__3 = function(self__, a, b) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b);
  };
  var G__18103__4 = function(self__, a, b, c) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c);
  };
  var G__18103__5 = function(self__, a, b, c, d) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d);
  };
  var G__18103__6 = function(self__, a, b, c, d, e) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e);
  };
  var G__18103__7 = function(self__, a, b, c, d, e, f) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f);
  };
  var G__18103__8 = function(self__, a, b, c, d, e, f, g) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f, g);
  };
  var G__18103__9 = function(self__, a, b, c, d, e, f, g, h) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f, g, h);
  };
  var G__18103__10 = function(self__, a, b, c, d, e, f, g, h, i) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f, g, h, i);
  };
  var G__18103__11 = function(self__, a, b, c, d, e, f, g, h, i, j) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f, g, h, i, j);
  };
  var G__18103__12 = function(self__, a, b, c, d, e, f, g, h, i, j, k) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f, g, h, i, j, k);
  };
  var G__18103__13 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f, g, h, i, j, k, l);
  };
  var G__18103__14 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
  };
  var G__18103__15 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
  };
  var G__18103__16 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
  };
  var G__18103__17 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
  };
  var G__18103__18 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
  };
  var G__18103__19 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
  };
  var G__18103__20 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
  };
  var G__18103__21 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
  };
  var G__18103__22 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__18059 = function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }();
    var G__18060 = a;
    var G__18061 = b;
    var G__18062 = c;
    var G__18063 = d;
    var G__18064 = e;
    var G__18065 = f;
    var G__18066 = g;
    var G__18067 = h;
    var G__18068 = i;
    var G__18069 = j;
    var G__18070 = k;
    var G__18071 = l;
    var G__18072 = m;
    var G__18073 = n;
    var G__18074 = o;
    var G__18075 = p;
    var G__18076 = q;
    var G__18077 = r;
    var G__18078 = s;
    var G__18079 = t;
    var G__18080 = rest;
    return cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__18059, G__18060, G__18061, G__18062, G__18063, G__18064, G__18065, G__18066, G__18067, G__18068, G__18069, G__18070, G__18071, G__18072, G__18073, G__18074, G__18075, G__18076, G__18077, G__18078, G__18079, G__18080) : cljs.core.apply.call(null, G__18059, G__18060, G__18061, G__18062, G__18063, G__18064, G__18065, G__18066, G__18067, G__18068, G__18069, G__18070, G__18071, G__18072, G__18073, 
    G__18074, G__18075, G__18076, G__18077, G__18078, G__18079, G__18080);
  };
  G__18103 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    switch(arguments.length) {
      case 1:
        return G__18103__1.call(this, self__);
      case 2:
        return G__18103__2.call(this, self__, a);
      case 3:
        return G__18103__3.call(this, self__, a, b);
      case 4:
        return G__18103__4.call(this, self__, a, b, c);
      case 5:
        return G__18103__5.call(this, self__, a, b, c, d);
      case 6:
        return G__18103__6.call(this, self__, a, b, c, d, e);
      case 7:
        return G__18103__7.call(this, self__, a, b, c, d, e, f);
      case 8:
        return G__18103__8.call(this, self__, a, b, c, d, e, f, g);
      case 9:
        return G__18103__9.call(this, self__, a, b, c, d, e, f, g, h);
      case 10:
        return G__18103__10.call(this, self__, a, b, c, d, e, f, g, h, i);
      case 11:
        return G__18103__11.call(this, self__, a, b, c, d, e, f, g, h, i, j);
      case 12:
        return G__18103__12.call(this, self__, a, b, c, d, e, f, g, h, i, j, k);
      case 13:
        return G__18103__13.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l);
      case 14:
        return G__18103__14.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m);
      case 15:
        return G__18103__15.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
      case 16:
        return G__18103__16.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
      case 17:
        return G__18103__17.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
      case 18:
        return G__18103__18.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
      case 19:
        return G__18103__19.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
      case 20:
        return G__18103__20.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
      case 21:
        return G__18103__21.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
      case 22:
        return G__18103__22.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__18103.cljs$core$IFn$_invoke$arity$1 = G__18103__1;
  G__18103.cljs$core$IFn$_invoke$arity$2 = G__18103__2;
  G__18103.cljs$core$IFn$_invoke$arity$3 = G__18103__3;
  G__18103.cljs$core$IFn$_invoke$arity$4 = G__18103__4;
  G__18103.cljs$core$IFn$_invoke$arity$5 = G__18103__5;
  G__18103.cljs$core$IFn$_invoke$arity$6 = G__18103__6;
  G__18103.cljs$core$IFn$_invoke$arity$7 = G__18103__7;
  G__18103.cljs$core$IFn$_invoke$arity$8 = G__18103__8;
  G__18103.cljs$core$IFn$_invoke$arity$9 = G__18103__9;
  G__18103.cljs$core$IFn$_invoke$arity$10 = G__18103__10;
  G__18103.cljs$core$IFn$_invoke$arity$11 = G__18103__11;
  G__18103.cljs$core$IFn$_invoke$arity$12 = G__18103__12;
  G__18103.cljs$core$IFn$_invoke$arity$13 = G__18103__13;
  G__18103.cljs$core$IFn$_invoke$arity$14 = G__18103__14;
  G__18103.cljs$core$IFn$_invoke$arity$15 = G__18103__15;
  G__18103.cljs$core$IFn$_invoke$arity$16 = G__18103__16;
  G__18103.cljs$core$IFn$_invoke$arity$17 = G__18103__17;
  G__18103.cljs$core$IFn$_invoke$arity$18 = G__18103__18;
  G__18103.cljs$core$IFn$_invoke$arity$19 = G__18103__19;
  G__18103.cljs$core$IFn$_invoke$arity$20 = G__18103__20;
  G__18103.cljs$core$IFn$_invoke$arity$21 = G__18103__21;
  G__18103.cljs$core$IFn$_invoke$arity$22 = G__18103__22;
  return G__18103;
}();
cljs.core.Var.prototype.apply = function(self__, args18058) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args18058)));
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$0 = function() {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$1 = function(a) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$5 = function(a, b, c, d, e) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$6 = function(a, b, c, d, e, f) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$7 = function(a, b, c, d, e, f, g) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f, g);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$8 = function(a, b, c, d, e, f, g, h) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f, g, h);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$9 = function(a, b, c, d, e, f, g, h, i) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f, g, h, i);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$10 = function(a, b, c, d, e, f, g, h, i, j) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f, g, h, i, j);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$11 = function(a, b, c, d, e, f, g, h, i, j, k) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f, g, h, i, j, k);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$12 = function(a, b, c, d, e, f, g, h, i, j, k, l) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f, g, h, i, j, k, l);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$13 = function(a, b, c, d, e, f, g, h, i, j, k, l, m) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$14 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$15 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$16 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$17 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$18 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$19 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$20 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$21 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
  var self__ = this;
  var _ = this;
  var G__18081 = function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }();
  var G__18082 = a;
  var G__18083 = b;
  var G__18084 = c;
  var G__18085 = d;
  var G__18086 = e;
  var G__18087 = f;
  var G__18088 = g;
  var G__18089 = h;
  var G__18090 = i;
  var G__18091 = j;
  var G__18092 = k;
  var G__18093 = l;
  var G__18094 = m;
  var G__18095 = n;
  var G__18096 = o;
  var G__18097 = p;
  var G__18098 = q;
  var G__18099 = r;
  var G__18100 = s;
  var G__18101 = t;
  var G__18102 = rest;
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__18081, G__18082, G__18083, G__18084, G__18085, G__18086, G__18087, G__18088, G__18089, G__18090, G__18091, G__18092, G__18093, G__18094, G__18095, G__18096, G__18097, G__18098, G__18099, G__18100, G__18101, G__18102) : cljs.core.apply.call(null, G__18081, G__18082, G__18083, G__18084, G__18085, G__18086, G__18087, G__18088, G__18089, G__18090, G__18091, G__18092, G__18093, G__18094, G__18095, 
  G__18096, G__18097, G__18098, G__18099, G__18100, G__18101, G__18102);
};
cljs.core.Var.prototype.cljs$core$Fn$ = true;
cljs.core.Var.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__._meta;
};
cljs.core.Var.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
};
cljs.core.Var.cljs$lang$type = true;
cljs.core.Var.cljs$lang$ctorStr = "cljs.core/Var";
cljs.core.Var.cljs$lang$ctorPrWriter = function(this__8091__auto__, writer__8092__auto__, opt__8093__auto__) {
  return cljs.core._write(writer__8092__auto__, "cljs.core/Var");
};
cljs.core.__GT_Var = function __GT_Var(val, sym, _meta) {
  return new cljs.core.Var(val, sym, _meta);
};
cljs.core.iterable_QMARK_ = function iterable_QMARK_(x) {
  var G__18105 = x;
  if (G__18105) {
    var bit__8185__auto__ = null;
    if (cljs.core.truth_(function() {
      var or__7504__auto__ = bit__8185__auto__;
      if (cljs.core.truth_(or__7504__auto__)) {
        return or__7504__auto__;
      } else {
        return G__18105.cljs$core$IIterable$;
      }
    }())) {
      return true;
    } else {
      if (!G__18105.cljs$lang$protocol_mask$partition$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable, G__18105);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable, G__18105);
  }
};
cljs.core.clone = function clone(value) {
  return cljs.core._clone(value);
};
cljs.core.cloneable_QMARK_ = function cloneable_QMARK_(value) {
  var G__18107 = value;
  if (G__18107) {
    var bit__8185__auto__ = G__18107.cljs$lang$protocol_mask$partition1$ & 8192;
    if (bit__8185__auto__ || G__18107.cljs$core$ICloneable$) {
      return true;
    } else {
      if (!G__18107.cljs$lang$protocol_mask$partition1$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable, G__18107);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable, G__18107);
  }
};
cljs.core.seq = function seq(coll) {
  if (coll == null) {
    return null;
  } else {
    if (function() {
      var G__18109 = coll;
      if (G__18109) {
        var bit__8178__auto__ = G__18109.cljs$lang$protocol_mask$partition0$ & 8388608;
        if (bit__8178__auto__ || G__18109.cljs$core$ISeqable$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return coll.cljs$core$ISeqable$_seq$arity$1(null);
    } else {
      if (coll instanceof Array) {
        if (coll.length === 0) {
          return null;
        } else {
          return new cljs.core.IndexedSeq(coll, 0);
        }
      } else {
        if (typeof coll === "string") {
          if (coll.length === 0) {
            return null;
          } else {
            return new cljs.core.IndexedSeq(coll, 0);
          }
        } else {
          if (cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable, coll)) {
            return cljs.core._seq(coll);
          } else {
            throw new Error([cljs.core.str(coll), cljs.core.str(" is not ISeqable")].join(""));
          }
        }
      }
    }
  }
};
cljs.core.first = function first(coll) {
  if (coll == null) {
    return null;
  } else {
    if (function() {
      var G__18111 = coll;
      if (G__18111) {
        var bit__8178__auto__ = G__18111.cljs$lang$protocol_mask$partition0$ & 64;
        if (bit__8178__auto__ || G__18111.cljs$core$ISeq$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return coll.cljs$core$ISeq$_first$arity$1(null);
    } else {
      var s = cljs.core.seq(coll);
      if (s == null) {
        return null;
      } else {
        return cljs.core._first(s);
      }
    }
  }
};
cljs.core.rest = function rest(coll) {
  if (!(coll == null)) {
    if (function() {
      var G__18113 = coll;
      if (G__18113) {
        var bit__8178__auto__ = G__18113.cljs$lang$protocol_mask$partition0$ & 64;
        if (bit__8178__auto__ || G__18113.cljs$core$ISeq$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return coll.cljs$core$ISeq$_rest$arity$1(null);
    } else {
      var s = cljs.core.seq(coll);
      if (s) {
        return cljs.core._rest(s);
      } else {
        return cljs.core.List.EMPTY;
      }
    }
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.next = function next(coll) {
  if (coll == null) {
    return null;
  } else {
    if (function() {
      var G__18115 = coll;
      if (G__18115) {
        var bit__8178__auto__ = G__18115.cljs$lang$protocol_mask$partition0$ & 128;
        if (bit__8178__auto__ || G__18115.cljs$core$INext$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return coll.cljs$core$INext$_next$arity$1(null);
    } else {
      return cljs.core.seq(cljs.core.rest(coll));
    }
  }
};
cljs.core._EQ_ = function() {
  var _EQ_ = null;
  var _EQ___1 = function(x) {
    return true;
  };
  var _EQ___2 = function(x, y) {
    if (x == null) {
      return y == null;
    } else {
      return x === y || cljs.core._equiv(x, y);
    }
  };
  var _EQ___3 = function() {
    var G__18120__delegate = function(x, y, more) {
      while (true) {
        if (_EQ_.cljs$core$IFn$_invoke$arity$2(x, y)) {
          if (cljs.core.next(more)) {
            var G__18121 = y;
            var G__18122 = cljs.core.first(more);
            var G__18123 = cljs.core.next(more);
            x = G__18121;
            y = G__18122;
            more = G__18123;
            continue;
          } else {
            return _EQ_.cljs$core$IFn$_invoke$arity$2(y, cljs.core.first(more));
          }
        } else {
          return false;
        }
        break;
      }
    };
    var G__18120 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__18124__i = 0, G__18124__a = new Array(arguments.length - 2);
        while (G__18124__i < G__18124__a.length) {
          G__18124__a[G__18124__i] = arguments[G__18124__i + 2];
          ++G__18124__i;
        }
        more = new cljs.core.IndexedSeq(G__18124__a, 0);
      }
      return G__18120__delegate.call(this, x, y, more);
    };
    G__18120.cljs$lang$maxFixedArity = 2;
    G__18120.cljs$lang$applyTo = function(arglist__18125) {
      var x = cljs.core.first(arglist__18125);
      arglist__18125 = cljs.core.next(arglist__18125);
      var y = cljs.core.first(arglist__18125);
      var more = cljs.core.rest(arglist__18125);
      return G__18120__delegate(x, y, more);
    };
    G__18120.cljs$core$IFn$_invoke$arity$variadic = G__18120__delegate;
    return G__18120;
  }();
  _EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _EQ___1.call(this, x);
      case 2:
        return _EQ___2.call(this, x, y);
      default:
        var G__18126 = null;
        if (arguments.length > 2) {
          var G__18127__i = 0, G__18127__a = new Array(arguments.length - 2);
          while (G__18127__i < G__18127__a.length) {
            G__18127__a[G__18127__i] = arguments[G__18127__i + 2];
            ++G__18127__i;
          }
          G__18126 = new cljs.core.IndexedSeq(G__18127__a, 0);
        }
        return _EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__18126);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _EQ_.cljs$lang$maxFixedArity = 2;
  _EQ_.cljs$lang$applyTo = _EQ___3.cljs$lang$applyTo;
  _EQ_.cljs$core$IFn$_invoke$arity$1 = _EQ___1;
  _EQ_.cljs$core$IFn$_invoke$arity$2 = _EQ___2;
  _EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return _EQ_;
}();
cljs.core.ES6Iterator = function(s) {
  this.s = s;
};
cljs.core.ES6Iterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  if (!(self__.s == null)) {
    var x = cljs.core.first(self__.s);
    self__.s = cljs.core.next(self__.s);
    return{"done":false, "value":x};
  } else {
    return{"done":true, "value":null};
  }
};
cljs.core.ES6Iterator.cljs$lang$type = true;
cljs.core.ES6Iterator.cljs$lang$ctorStr = "cljs.core/ES6Iterator";
cljs.core.ES6Iterator.cljs$lang$ctorPrWriter = function(this__8091__auto__, writer__8092__auto__, opt__8093__auto__) {
  return cljs.core._write(writer__8092__auto__, "cljs.core/ES6Iterator");
};
cljs.core.__GT_ES6Iterator = function __GT_ES6Iterator(s) {
  return new cljs.core.ES6Iterator(s);
};
cljs.core.es6_iterator = function es6_iterator(coll) {
  return new cljs.core.ES6Iterator(cljs.core.seq(coll));
};
cljs.core.ES6IteratorSeq = function(value, iter, _rest) {
  this.value = value;
  this.iter = iter;
  this._rest = _rest;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 8388672;
};
cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.value;
};
cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (self__._rest == null) {
    self__._rest = function() {
      var G__18128 = self__.iter;
      return cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1(G__18128) : cljs.core.es6_iterator_seq.call(null, G__18128);
    }();
  } else {
  }
  return self__._rest;
};
cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.ES6IteratorSeq.cljs$lang$type = true;
cljs.core.ES6IteratorSeq.cljs$lang$ctorStr = "cljs.core/ES6IteratorSeq";
cljs.core.ES6IteratorSeq.cljs$lang$ctorPrWriter = function(this__8091__auto__, writer__8092__auto__, opt__8093__auto__) {
  return cljs.core._write(writer__8092__auto__, "cljs.core/ES6IteratorSeq");
};
cljs.core.__GT_ES6IteratorSeq = function __GT_ES6IteratorSeq(value, iter, _rest) {
  return new cljs.core.ES6IteratorSeq(value, iter, _rest);
};
cljs.core.es6_iterator_seq = function es6_iterator_seq(iter) {
  var v = iter.next();
  if (cljs.core.truth_(v.done)) {
    return cljs.core.List.EMPTY;
  } else {
    return new cljs.core.ES6IteratorSeq(v.value, iter, null);
  }
};
cljs.core.mix_collection_hash = function mix_collection_hash(hash_basis, count) {
  var h1 = cljs.core.m3_seed;
  var k1 = cljs.core.m3_mix_K1(hash_basis);
  var h1__$1 = cljs.core.m3_mix_H1(h1, k1);
  return cljs.core.m3_fmix(h1__$1, count);
};
cljs.core.hash_ordered_coll = function hash_ordered_coll(coll) {
  var n = 0;
  var hash_code = 1;
  var coll__$1 = cljs.core.seq(coll);
  while (true) {
    if (!(coll__$1 == null)) {
      var G__18129 = n + 1;
      var G__18130 = cljs.core.imul(31, hash_code) + cljs.core.hash(cljs.core.first(coll__$1)) | 0;
      var G__18131 = cljs.core.next(coll__$1);
      n = G__18129;
      hash_code = G__18130;
      coll__$1 = G__18131;
      continue;
    } else {
      return cljs.core.mix_collection_hash(hash_code, n);
    }
    break;
  }
};
cljs.core.empty_ordered_hash = cljs.core.mix_collection_hash(1, 0);
cljs.core.hash_unordered_coll = function hash_unordered_coll(coll) {
  var n = 0;
  var hash_code = 0;
  var coll__$1 = cljs.core.seq(coll);
  while (true) {
    if (!(coll__$1 == null)) {
      var G__18132 = n + 1;
      var G__18133 = hash_code + cljs.core.hash(cljs.core.first(coll__$1)) | 0;
      var G__18134 = cljs.core.next(coll__$1);
      n = G__18132;
      hash_code = G__18133;
      coll__$1 = G__18134;
      continue;
    } else {
      return cljs.core.mix_collection_hash(hash_code, n);
    }
    break;
  }
};
cljs.core.empty_unordered_hash = cljs.core.mix_collection_hash(0, 0);
cljs.core.ICounted["null"] = true;
cljs.core._count["null"] = function(_) {
  return 0;
};
Date.prototype.cljs$core$IEquiv$ = true;
Date.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var o__$1 = this;
  return other instanceof Date && o__$1.toString() === other.toString();
};
cljs.core.IEquiv["number"] = true;
cljs.core._equiv["number"] = function(x, o) {
  return x === o;
};
cljs.core.IMeta["function"] = true;
cljs.core._meta["function"] = function(_) {
  return null;
};
cljs.core.Fn["function"] = true;
cljs.core.IHash["_"] = true;
cljs.core._hash["_"] = function(o) {
  var G__18135 = o;
  return goog.getUid(G__18135);
};
cljs.core.inc = function inc(x) {
  return x + 1;
};
cljs.core.Reduced = function(val) {
  this.val = val;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32768;
};
cljs.core.Reduced.prototype.cljs$core$IDeref$_deref$arity$1 = function(o) {
  var self__ = this;
  var o__$1 = this;
  return self__.val;
};
cljs.core.Reduced.cljs$lang$type = true;
cljs.core.Reduced.cljs$lang$ctorStr = "cljs.core/Reduced";
cljs.core.Reduced.cljs$lang$ctorPrWriter = function(this__8091__auto__, writer__8092__auto__, opt__8093__auto__) {
  return cljs.core._write(writer__8092__auto__, "cljs.core/Reduced");
};
cljs.core.__GT_Reduced = function __GT_Reduced(val) {
  return new cljs.core.Reduced(val);
};
cljs.core.reduced = function reduced(x) {
  return new cljs.core.Reduced(x);
};
cljs.core.reduced_QMARK_ = function reduced_QMARK_(r) {
  return r instanceof cljs.core.Reduced;
};
cljs.core.ensure_reduced = function ensure_reduced(x) {
  if (cljs.core.reduced_QMARK_(x)) {
    return x;
  } else {
    return cljs.core.reduced(x);
  }
};
cljs.core.unreduced = function unreduced(x) {
  if (cljs.core.reduced_QMARK_(x)) {
    var G__18137 = x;
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__18137) : cljs.core.deref.call(null, G__18137);
  } else {
    return x;
  }
};
cljs.core.deref = function deref(o) {
  return cljs.core._deref(o);
};
cljs.core.ci_reduce = function() {
  var ci_reduce = null;
  var ci_reduce__2 = function(cicoll, f) {
    var cnt = cljs.core._count(cicoll);
    if (cnt === 0) {
      return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
    } else {
      var val = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll, 0);
      var n = 1;
      while (true) {
        if (n < cnt) {
          var nval = function() {
            var G__18144 = val;
            var G__18145 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll, n);
            return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__18144, G__18145) : f.call(null, G__18144, G__18145);
          }();
          if (cljs.core.reduced_QMARK_(nval)) {
            return cljs.core.deref(nval);
          } else {
            var G__18150 = nval;
            var G__18151 = n + 1;
            val = G__18150;
            n = G__18151;
            continue;
          }
        } else {
          return val;
        }
        break;
      }
    }
  };
  var ci_reduce__3 = function(cicoll, f, val) {
    var cnt = cljs.core._count(cicoll);
    var val__$1 = val;
    var n = 0;
    while (true) {
      if (n < cnt) {
        var nval = function() {
          var G__18146 = val__$1;
          var G__18147 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll, n);
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__18146, G__18147) : f.call(null, G__18146, G__18147);
        }();
        if (cljs.core.reduced_QMARK_(nval)) {
          return cljs.core.deref(nval);
        } else {
          var G__18152 = nval;
          var G__18153 = n + 1;
          val__$1 = G__18152;
          n = G__18153;
          continue;
        }
      } else {
        return val__$1;
      }
      break;
    }
  };
  var ci_reduce__4 = function(cicoll, f, val, idx) {
    var cnt = cljs.core._count(cicoll);
    var val__$1 = val;
    var n = idx;
    while (true) {
      if (n < cnt) {
        var nval = function() {
          var G__18148 = val__$1;
          var G__18149 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll, n);
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__18148, G__18149) : f.call(null, G__18148, G__18149);
        }();
        if (cljs.core.reduced_QMARK_(nval)) {
          return cljs.core.deref(nval);
        } else {
          var G__18154 = nval;
          var G__18155 = n + 1;
          val__$1 = G__18154;
          n = G__18155;
          continue;
        }
      } else {
        return val__$1;
      }
      break;
    }
  };
  ci_reduce = function(cicoll, f, val, idx) {
    switch(arguments.length) {
      case 2:
        return ci_reduce__2.call(this, cicoll, f);
      case 3:
        return ci_reduce__3.call(this, cicoll, f, val);
      case 4:
        return ci_reduce__4.call(this, cicoll, f, val, idx);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  ci_reduce.cljs$core$IFn$_invoke$arity$2 = ci_reduce__2;
  ci_reduce.cljs$core$IFn$_invoke$arity$3 = ci_reduce__3;
  ci_reduce.cljs$core$IFn$_invoke$arity$4 = ci_reduce__4;
  return ci_reduce;
}();
cljs.core.array_reduce = function() {
  var array_reduce = null;
  var array_reduce__2 = function(arr, f) {
    var cnt = arr.length;
    if (arr.length === 0) {
      return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
    } else {
      var val = arr[0];
      var n = 1;
      while (true) {
        if (n < cnt) {
          var nval = function() {
            var G__18162 = val;
            var G__18163 = arr[n];
            return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__18162, G__18163) : f.call(null, G__18162, G__18163);
          }();
          if (cljs.core.reduced_QMARK_(nval)) {
            return cljs.core.deref(nval);
          } else {
            var G__18168 = nval;
            var G__18169 = n + 1;
            val = G__18168;
            n = G__18169;
            continue;
          }
        } else {
          return val;
        }
        break;
      }
    }
  };
  var array_reduce__3 = function(arr, f, val) {
    var cnt = arr.length;
    var val__$1 = val;
    var n = 0;
    while (true) {
      if (n < cnt) {
        var nval = function() {
          var G__18164 = val__$1;
          var G__18165 = arr[n];
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__18164, G__18165) : f.call(null, G__18164, G__18165);
        }();
        if (cljs.core.reduced_QMARK_(nval)) {
          return cljs.core.deref(nval);
        } else {
          var G__18170 = nval;
          var G__18171 = n + 1;
          val__$1 = G__18170;
          n = G__18171;
          continue;
        }
      } else {
        return val__$1;
      }
      break;
    }
  };
  var array_reduce__4 = function(arr, f, val, idx) {
    var cnt = arr.length;
    var val__$1 = val;
    var n = idx;
    while (true) {
      if (n < cnt) {
        var nval = function() {
          var G__18166 = val__$1;
          var G__18167 = arr[n];
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__18166, G__18167) : f.call(null, G__18166, G__18167);
        }();
        if (cljs.core.reduced_QMARK_(nval)) {
          return cljs.core.deref(nval);
        } else {
          var G__18172 = nval;
          var G__18173 = n + 1;
          val__$1 = G__18172;
          n = G__18173;
          continue;
        }
      } else {
        return val__$1;
      }
      break;
    }
  };
  array_reduce = function(arr, f, val, idx) {
    switch(arguments.length) {
      case 2:
        return array_reduce__2.call(this, arr, f);
      case 3:
        return array_reduce__3.call(this, arr, f, val);
      case 4:
        return array_reduce__4.call(this, arr, f, val, idx);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  array_reduce.cljs$core$IFn$_invoke$arity$2 = array_reduce__2;
  array_reduce.cljs$core$IFn$_invoke$arity$3 = array_reduce__3;
  array_reduce.cljs$core$IFn$_invoke$arity$4 = array_reduce__4;
  return array_reduce;
}();
cljs.core.counted_QMARK_ = function counted_QMARK_(x) {
  var G__18175 = x;
  if (G__18175) {
    var bit__8185__auto__ = G__18175.cljs$lang$protocol_mask$partition0$ & 2;
    if (bit__8185__auto__ || G__18175.cljs$core$ICounted$) {
      return true;
    } else {
      if (!G__18175.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted, G__18175);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted, G__18175);
  }
};
cljs.core.indexed_QMARK_ = function indexed_QMARK_(x) {
  var G__18177 = x;
  if (G__18177) {
    var bit__8185__auto__ = G__18177.cljs$lang$protocol_mask$partition0$ & 16;
    if (bit__8185__auto__ || G__18177.cljs$core$IIndexed$) {
      return true;
    } else {
      if (!G__18177.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed, G__18177);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed, G__18177);
  }
};
cljs.core.IndexedSeqIterator = function(arr, i) {
  this.arr = arr;
  this.i = i;
};
cljs.core.IndexedSeqIterator.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  return self__.i < self__.arr.length;
};
cljs.core.IndexedSeqIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var ret = self__.arr[self__.i];
  self__.i = self__.i + 1;
  return ret;
};
cljs.core.IndexedSeqIterator.cljs$lang$type = true;
cljs.core.IndexedSeqIterator.cljs$lang$ctorStr = "cljs.core/IndexedSeqIterator";
cljs.core.IndexedSeqIterator.cljs$lang$ctorPrWriter = function(this__8091__auto__, writer__8092__auto__, opt__8093__auto__) {
  return cljs.core._write(writer__8092__auto__, "cljs.core/IndexedSeqIterator");
};
cljs.core.__GT_IndexedSeqIterator = function __GT_IndexedSeqIterator(arr, i) {
  return new cljs.core.IndexedSeqIterator(arr, i);
};
cljs.core.IndexedSeq = function(arr, i) {
  this.arr = arr;
  this.i = i;
  this.cljs$lang$protocol_mask$partition0$ = 166199550;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.IndexedSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.IndexedSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  var i__$1 = n + self__.i;
  if (i__$1 < self__.arr.length) {
    return self__.arr[i__$1];
  } else {
    return null;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var i__$1 = n + self__.i;
  if (i__$1 < self__.arr.length) {
    return self__.arr[i__$1];
  } else {
    return not_found;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IIterable$ = true;
cljs.core.IndexedSeq.prototype.cljs$core$IIterable$_iterator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.IndexedSeqIterator(self__.arr, self__.i);
};
cljs.core.IndexedSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.IndexedSeq(self__.arr, self__.i);
};
cljs.core.IndexedSeq.prototype.cljs$core$INext$_next$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (self__.i + 1 < self__.arr.length) {
    return new cljs.core.IndexedSeq(self__.arr, self__.i + 1);
  } else {
    return null;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.arr.length - self__.i;
};
cljs.core.IndexedSeq.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var c = cljs.core._count(coll__$1);
  if (c > 0) {
    return new cljs.core.RSeq(coll__$1, c - 1, null);
  } else {
    return null;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll(coll__$1);
};
cljs.core.IndexedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  var G__18178 = coll__$1;
  var G__18179 = other;
  return cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(G__18178, G__18179) : cljs.core.equiv_sequential.call(null, G__18178, G__18179);
};
cljs.core.IndexedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr, f, self__.arr[self__.i], self__.i + 1);
};
cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr, f, start, self__.i);
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.arr[self__.i];
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (self__.i + 1 < self__.arr.length) {
    return new cljs.core.IndexedSeq(self__.arr, self__.i + 1);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.IndexedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  var G__18180 = o;
  var G__18181 = coll__$1;
  return cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(G__18180, G__18181) : cljs.core.cons.call(null, G__18180, G__18181);
};
cljs.core.IndexedSeq.cljs$lang$type = true;
cljs.core.IndexedSeq.cljs$lang$ctorStr = "cljs.core/IndexedSeq";
cljs.core.IndexedSeq.cljs$lang$ctorPrWriter = function(this__8091__auto__, writer__8092__auto__, opt__8093__auto__) {
  return cljs.core._write(writer__8092__auto__, "cljs.core/IndexedSeq");
};
cljs.core.__GT_IndexedSeq = function __GT_IndexedSeq(arr, i) {
  return new cljs.core.IndexedSeq(arr, i);
};
cljs.core.IndexedSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__8482__auto__ = this;
  return cljs.core.es6_iterator(this__8482__auto__);
};
cljs.core.prim_seq = function() {
  var prim_seq = null;
  var prim_seq__1 = function(prim) {
    return prim_seq.cljs$core$IFn$_invoke$arity$2(prim, 0);
  };
  var prim_seq__2 = function(prim, i) {
    if (i < prim.length) {
      return new cljs.core.IndexedSeq(prim, i);
    } else {
      return null;
    }
  };
  prim_seq = function(prim, i) {
    switch(arguments.length) {
      case 1:
        return prim_seq__1.call(this, prim);
      case 2:
        return prim_seq__2.call(this, prim, i);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  prim_seq.cljs$core$IFn$_invoke$arity$1 = prim_seq__1;
  prim_seq.cljs$core$IFn$_invoke$arity$2 = prim_seq__2;
  return prim_seq;
}();
cljs.core.array_seq = function() {
  var array_seq = null;
  var array_seq__1 = function(array) {
    return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array, 0);
  };
  var array_seq__2 = function(array, i) {
    return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array, i);
  };
  array_seq = function(array, i) {
    switch(arguments.length) {
      case 1:
        return array_seq__1.call(this, array);
      case 2:
        return array_seq__2.call(this, array, i);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  array_seq.cljs$core$IFn$_invoke$arity$1 = array_seq__1;
  array_seq.cljs$core$IFn$_invoke$arity$2 = array_seq__2;
  return array_seq;
}();
cljs.core.RSeq = function(ci, i, meta) {
  this.ci = ci;
  this.i = i;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition0$ = 32374990;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.RSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.RSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.RSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.RSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.RSeq(self__.ci, self__.i, self__.meta);
};
cljs.core.RSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i > 0) {
    return new cljs.core.RSeq(self__.ci, self__.i - 1, null);
  } else {
    return null;
  }
};
cljs.core.RSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.i + 1;
};
cljs.core.RSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll(coll__$1);
};
cljs.core.RSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  var G__18184 = coll__$1;
  var G__18185 = other;
  return cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(G__18184, G__18185) : cljs.core.equiv_sequential.call(null, G__18184, G__18185);
};
cljs.core.RSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var G__18186 = cljs.core.List.EMPTY;
  var G__18187 = self__.meta;
  return cljs.core.with_meta.cljs$core$IFn$_invoke$arity$2 ? cljs.core.with_meta.cljs$core$IFn$_invoke$arity$2(G__18186, G__18187) : cljs.core.with_meta.call(null, G__18186, G__18187);
};
cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(col, f) {
  var self__ = this;
  var col__$1 = this;
  var G__18188 = f;
  var G__18189 = col__$1;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(G__18188, G__18189) : cljs.core.seq_reduce.call(null, G__18188, G__18189);
};
cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(col, f, start) {
  var self__ = this;
  var col__$1 = this;
  var G__18190 = f;
  var G__18191 = start;
  var G__18192 = col__$1;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(G__18190, G__18191, G__18192) : cljs.core.seq_reduce.call(null, G__18190, G__18191, G__18192);
};
cljs.core.RSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.ci, self__.i);
};
cljs.core.RSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i > 0) {
    return new cljs.core.RSeq(self__.ci, self__.i - 1, null);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.RSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.RSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.RSeq(self__.ci, self__.i, new_meta);
};
cljs.core.RSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  var G__18193 = o;
  var G__18194 = coll__$1;
  return cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(G__18193, G__18194) : cljs.core.cons.call(null, G__18193, G__18194);
};
cljs.core.RSeq.cljs$lang$type = true;
cljs.core.RSeq.cljs$lang$ctorStr = "cljs.core/RSeq";
cljs.core.RSeq.cljs$lang$ctorPrWriter = function(this__8091__auto__, writer__8092__auto__, opt__8093__auto__) {
  return cljs.core._write(writer__8092__auto__, "cljs.core/RSeq");
};
cljs.core.__GT_RSeq = function __GT_RSeq(ci, i, meta) {
  return new cljs.core.RSeq(ci, i, meta);
};
cljs.core.RSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__8482__auto__ = this;
  return cljs.core.es6_iterator(this__8482__auto__);
};
cljs.core.second = function second(coll) {
  return cljs.core.first(cljs.core.next(coll));
};
cljs.core.ffirst = function ffirst(coll) {
  return cljs.core.first(cljs.core.first(coll));
};
cljs.core.nfirst = function nfirst(coll) {
  return cljs.core.next(cljs.core.first(coll));
};
cljs.core.fnext = function fnext(coll) {
  return cljs.core.first(cljs.core.next(coll));
};
cljs.core.nnext = function nnext(coll) {
  return cljs.core.next(cljs.core.next(coll));
};
cljs.core.last = function last(s) {
  while (true) {
    var sn = cljs.core.next(s);
    if (!(sn == null)) {
      var G__18195 = sn;
      s = G__18195;
      continue;
    } else {
      return cljs.core.first(s);
    }
    break;
  }
};
cljs.core.IEquiv["_"] = true;
cljs.core._equiv["_"] = function(x, o) {
  return x === o;
};
cljs.core.conj = function() {
  var conj = null;
  var conj__0 = function() {
    return cljs.core.PersistentVector.EMPTY;
  };
  var conj__1 = function(coll) {
    return coll;
  };
  var conj__2 = function(coll, x) {
    if (!(coll == null)) {
      return cljs.core._conj(coll, x);
    } else {
      return cljs.core._conj(cljs.core.List.EMPTY, x);
    }
  };
  var conj__3 = function() {
    var G__18200__delegate = function(coll, x, xs) {
      while (true) {
        if (cljs.core.truth_(xs)) {
          var G__18201 = conj.cljs$core$IFn$_invoke$arity$2(coll, x);
          var G__18202 = cljs.core.first(xs);
          var G__18203 = cljs.core.next(xs);
          coll = G__18201;
          x = G__18202;
          xs = G__18203;
          continue;
        } else {
          return conj.cljs$core$IFn$_invoke$arity$2(coll, x);
        }
        break;
      }
    };
    var G__18200 = function(coll, x, var_args) {
      var xs = null;
      if (arguments.length > 2) {
        var G__18204__i = 0, G__18204__a = new Array(arguments.length - 2);
        while (G__18204__i < G__18204__a.length) {
          G__18204__a[G__18204__i] = arguments[G__18204__i + 2];
          ++G__18204__i;
        }
        xs = new cljs.core.IndexedSeq(G__18204__a, 0);
      }
      return G__18200__delegate.call(this, coll, x, xs);
    };
    G__18200.cljs$lang$maxFixedArity = 2;
    G__18200.cljs$lang$applyTo = function(arglist__18205) {
      var coll = cljs.core.first(arglist__18205);
      arglist__18205 = cljs.core.next(arglist__18205);
      var x = cljs.core.first(arglist__18205);
      var xs = cljs.core.rest(arglist__18205);
      return G__18200__delegate(coll, x, xs);
    };
    G__18200.cljs$core$IFn$_invoke$arity$variadic = G__18200__delegate;
    return G__18200;
  }();
  conj = function(coll, x, var_args) {
    var xs = var_args;
    switch(arguments.length) {
      case 0:
        return conj__0.call(this);
      case 1:
        return conj__1.call(this, coll);
      case 2:
        return conj__2.call(this, coll, x);
      default:
        var G__18206 = null;
        if (arguments.length > 2) {
          var G__18207__i = 0, G__18207__a = new Array(arguments.length - 2);
          while (G__18207__i < G__18207__a.length) {
            G__18207__a[G__18207__i] = arguments[G__18207__i + 2];
            ++G__18207__i;
          }
          G__18206 = new cljs.core.IndexedSeq(G__18207__a, 0);
        }
        return conj__3.cljs$core$IFn$_invoke$arity$variadic(coll, x, G__18206);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  conj.cljs$lang$maxFixedArity = 2;
  conj.cljs$lang$applyTo = conj__3.cljs$lang$applyTo;
  conj.cljs$core$IFn$_invoke$arity$0 = conj__0;
  conj.cljs$core$IFn$_invoke$arity$1 = conj__1;
  conj.cljs$core$IFn$_invoke$arity$2 = conj__2;
  conj.cljs$core$IFn$_invoke$arity$variadic = conj__3.cljs$core$IFn$_invoke$arity$variadic;
  return conj;
}();
cljs.core.empty = function empty(coll) {
  if (coll == null) {
    return null;
  } else {
    return cljs.core._empty(coll);
  }
};
cljs.core.accumulating_seq_count = function accumulating_seq_count(coll) {
  var s = cljs.core.seq(coll);
  var acc = 0;
  while (true) {
    if (cljs.core.counted_QMARK_(s)) {
      return acc + cljs.core._count(s);
    } else {
      var G__18208 = cljs.core.next(s);
      var G__18209 = acc + 1;
      s = G__18208;
      acc = G__18209;
      continue;
    }
    break;
  }
};
cljs.core.count = function count(coll) {
  if (!(coll == null)) {
    if (function() {
      var G__18211 = coll;
      if (G__18211) {
        var bit__8178__auto__ = G__18211.cljs$lang$protocol_mask$partition0$ & 2;
        if (bit__8178__auto__ || G__18211.cljs$core$ICounted$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return coll.cljs$core$ICounted$_count$arity$1(null);
    } else {
      if (coll instanceof Array) {
        return coll.length;
      } else {
        if (typeof coll === "string") {
          return coll.length;
        } else {
          if (cljs.core.native_satisfies_QMARK_(cljs.core.ICounted, coll)) {
            return cljs.core._count(coll);
          } else {
            return cljs.core.accumulating_seq_count(coll);
          }
        }
      }
    }
  } else {
    return 0;
  }
};
cljs.core.linear_traversal_nth = function() {
  var linear_traversal_nth = null;
  var linear_traversal_nth__2 = function(coll, n) {
    while (true) {
      if (coll == null) {
        throw new Error("Index out of bounds");
      } else {
        if (n === 0) {
          if (cljs.core.seq(coll)) {
            return cljs.core.first(coll);
          } else {
            throw new Error("Index out of bounds");
          }
        } else {
          if (cljs.core.indexed_QMARK_(coll)) {
            return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll, n);
          } else {
            if (cljs.core.seq(coll)) {
              var G__18212 = cljs.core.next(coll);
              var G__18213 = n - 1;
              coll = G__18212;
              n = G__18213;
              continue;
            } else {
              throw new Error("Index out of bounds");
            }
          }
        }
      }
      break;
    }
  };
  var linear_traversal_nth__3 = function(coll, n, not_found) {
    while (true) {
      if (coll == null) {
        return not_found;
      } else {
        if (n === 0) {
          if (cljs.core.seq(coll)) {
            return cljs.core.first(coll);
          } else {
            return not_found;
          }
        } else {
          if (cljs.core.indexed_QMARK_(coll)) {
            return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll, n, not_found);
          } else {
            if (cljs.core.seq(coll)) {
              var G__18214 = cljs.core.next(coll);
              var G__18215 = n - 1;
              var G__18216 = not_found;
              coll = G__18214;
              n = G__18215;
              not_found = G__18216;
              continue;
            } else {
              return not_found;
            }
          }
        }
      }
      break;
    }
  };
  linear_traversal_nth = function(coll, n, not_found) {
    switch(arguments.length) {
      case 2:
        return linear_traversal_nth__2.call(this, coll, n);
      case 3:
        return linear_traversal_nth__3.call(this, coll, n, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  linear_traversal_nth.cljs$core$IFn$_invoke$arity$2 = linear_traversal_nth__2;
  linear_traversal_nth.cljs$core$IFn$_invoke$arity$3 = linear_traversal_nth__3;
  return linear_traversal_nth;
}();
cljs.core.nth = function() {
  var nth = null;
  var nth__2 = function(coll, n) {
    if (!(typeof n === "number")) {
      throw new Error("index argument to nth must be a number");
    } else {
      if (coll == null) {
        return coll;
      } else {
        if (function() {
          var G__18221 = coll;
          if (G__18221) {
            var bit__8178__auto__ = G__18221.cljs$lang$protocol_mask$partition0$ & 16;
            if (bit__8178__auto__ || G__18221.cljs$core$IIndexed$) {
              return true;
            } else {
              return false;
            }
          } else {
            return false;
          }
        }()) {
          return coll.cljs$core$IIndexed$_nth$arity$2(null, n);
        } else {
          if (coll instanceof Array) {
            if (n < coll.length) {
              return coll[n];
            } else {
              return null;
            }
          } else {
            if (typeof coll === "string") {
              if (n < coll.length) {
                return coll[n];
              } else {
                return null;
              }
            } else {
              if (cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed, coll)) {
                return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll, n);
              } else {
                if (function() {
                  var G__18222 = coll;
                  if (G__18222) {
                    var bit__8185__auto__ = G__18222.cljs$lang$protocol_mask$partition0$ & 64;
                    if (bit__8185__auto__ || G__18222.cljs$core$ISeq$) {
                      return true;
                    } else {
                      if (!G__18222.cljs$lang$protocol_mask$partition0$) {
                        return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq, G__18222);
                      } else {
                        return false;
                      }
                    }
                  } else {
                    return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq, G__18222);
                  }
                }()) {
                  return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$2(coll, n);
                } else {
                  throw new Error([cljs.core.str("nth not supported on this type "), cljs.core.str(cljs.core.type__GT_str(cljs.core.type(coll)))].join(""));
                }
              }
            }
          }
        }
      }
    }
  };
  var nth__3 = function(coll, n, not_found) {
    if (!(typeof n === "number")) {
      throw new Error("index argument to nth must be a number.");
    } else {
      if (coll == null) {
        return not_found;
      } else {
        if (function() {
          var G__18223 = coll;
          if (G__18223) {
            var bit__8178__auto__ = G__18223.cljs$lang$protocol_mask$partition0$ & 16;
            if (bit__8178__auto__ || G__18223.cljs$core$IIndexed$) {
              return true;
            } else {
              return false;
            }
          } else {
            return false;
          }
        }()) {
          return coll.cljs$core$IIndexed$_nth$arity$3(null, n, not_found);
        } else {
          if (coll instanceof Array) {
            if (n < coll.length) {
              return coll[n];
            } else {
              return not_found;
            }
          } else {
            if (typeof coll === "string") {
              if (n < coll.length) {
                return coll[n];
              } else {
                return not_found;
              }
            } else {
              if (cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed, coll)) {
                return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll, n);
              } else {
                if (function() {
                  var G__18224 = coll;
                  if (G__18224) {
                    var bit__8185__auto__ = G__18224.cljs$lang$protocol_mask$partition0$ & 64;
                    if (bit__8185__auto__ || G__18224.cljs$core$ISeq$) {
                      return true;
                    } else {
                      if (!G__18224.cljs$lang$protocol_mask$partition0$) {
                        return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq, G__18224);
                      } else {
                        return false;
                      }
                    }
                  } else {
                    return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq, G__18224);
                  }
                }()) {
                  return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$3(coll, n, not_found);
                } else {
                  throw new Error([cljs.core.str("nth not supported on this type "), cljs.core.str(cljs.core.type__GT_str(cljs.core.type(coll)))].join(""));
                }
              }
            }
          }
        }
      }
    }
  };
  nth = function(coll, n, not_found) {
    switch(arguments.length) {
      case 2:
        return nth__2.call(this, coll, n);
      case 3:
        return nth__3.call(this, coll, n, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  nth.cljs$core$IFn$_invoke$arity$2 = nth__2;
  nth.cljs$core$IFn$_invoke$arity$3 = nth__3;
  return nth;
}();
cljs.core.nthrest = function nthrest(coll, n) {
  var n__$1 = n;
  var xs = coll;
  while (true) {
    if (n__$1 > 0 && cljs.core.seq(xs)) {
      var G__18225 = n__$1 - 1;
      var G__18226 = cljs.core.rest(xs);
      n__$1 = G__18225;
      xs = G__18226;
      continue;
    } else {
      return xs;
    }
    break;
  }
};
cljs.core.get = function() {
  var get = null;
  var get__2 = function(o, k) {
    if (o == null) {
      return null;
    } else {
      if (function() {
        var G__18229 = o;
        if (G__18229) {
          var bit__8178__auto__ = G__18229.cljs$lang$protocol_mask$partition0$ & 256;
          if (bit__8178__auto__ || G__18229.cljs$core$ILookup$) {
            return true;
          } else {
            return false;
          }
        } else {
          return false;
        }
      }()) {
        return o.cljs$core$ILookup$_lookup$arity$2(null, k);
      } else {
        if (o instanceof Array) {
          if (k < o.length) {
            return o[k];
          } else {
            return null;
          }
        } else {
          if (typeof o === "string") {
            if (k < o.length) {
              return o[k];
            } else {
              return null;
            }
          } else {
            if (cljs.core.native_satisfies_QMARK_(cljs.core.ILookup, o)) {
              return cljs.core._lookup.cljs$core$IFn$_invoke$arity$2(o, k);
            } else {
              return null;
            }
          }
        }
      }
    }
  };
  var get__3 = function(o, k, not_found) {
    if (!(o == null)) {
      if (function() {
        var G__18230 = o;
        if (G__18230) {
          var bit__8178__auto__ = G__18230.cljs$lang$protocol_mask$partition0$ & 256;
          if (bit__8178__auto__ || G__18230.cljs$core$ILookup$) {
            return true;
          } else {
            return false;
          }
        } else {
          return false;
        }
      }()) {
        return o.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
      } else {
        if (o instanceof Array) {
          if (k < o.length) {
            return o[k];
          } else {
            return not_found;
          }
        } else {
          if (typeof o === "string") {
            if (k < o.length) {
              return o[k];
            } else {
              return not_found;
            }
          } else {
            if (cljs.core.native_satisfies_QMARK_(cljs.core.ILookup, o)) {
              return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(o, k, not_found);
            } else {
              return not_found;
            }
          }
        }
      }
    } else {
      return not_found;
    }
  };
  get = function(o, k, not_found) {
    switch(arguments.length) {
      case 2:
        return get__2.call(this, o, k);
      case 3:
        return get__3.call(this, o, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  get.cljs$core$IFn$_invoke$arity$2 = get__2;
  get.cljs$core$IFn$_invoke$arity$3 = get__3;
  return get;
}();
cljs.core.assoc = function() {
  var assoc = null;
  var assoc__3 = function(coll, k, v) {
    if (!(coll == null)) {
      return cljs.core._assoc(coll, k, v);
    } else {
      return cljs.core.PersistentHashMap.fromArrays([k], [v]);
    }
  };
  var assoc__4 = function() {
    var G__18234__delegate = function(coll, k, v, kvs) {
      while (true) {
        var ret = assoc.cljs$core$IFn$_invoke$arity$3(coll, k, v);
        if (cljs.core.truth_(kvs)) {
          var G__18235 = ret;
          var G__18236 = cljs.core.first(kvs);
          var G__18237 = cljs.core.second(kvs);
          var G__18238 = cljs.core.nnext(kvs);
          coll = G__18235;
          k = G__18236;
          v = G__18237;
          kvs = G__18238;
          continue;
        } else {
          return ret;
        }
        break;
      }
    };
    var G__18234 = function(coll, k, v, var_args) {
      var kvs = null;
      if (arguments.length > 3) {
        var G__18239__i = 0, G__18239__a = new Array(arguments.length - 3);
        while (G__18239__i < G__18239__a.length) {
          G__18239__a[G__18239__i] = arguments[G__18239__i + 3];
          ++G__18239__i;
        }
        kvs = new cljs.core.IndexedSeq(G__18239__a, 0);
      }
      return G__18234__delegate.call(this, coll, k, v, kvs);
    };
    G__18234.cljs$lang$maxFixedArity = 3;
    G__18234.cljs$lang$applyTo = function(arglist__18240) {
      var coll = cljs.core.first(arglist__18240);
      arglist__18240 = cljs.core.next(arglist__18240);
      var k = cljs.core.first(arglist__18240);
      arglist__18240 = cljs.core.next(arglist__18240);
      var v = cljs.core.first(arglist__18240);
      var kvs = cljs.core.rest(arglist__18240);
      return G__18234__delegate(coll, k, v, kvs);
    };
    G__18234.cljs$core$IFn$_invoke$arity$variadic = G__18234__delegate;
    return G__18234;
  }();
  assoc = function(coll, k, v, var_args) {
    var kvs = var_args;
    switch(arguments.length) {
      case 3:
        return assoc__3.call(this, coll, k, v);
      default:
        var G__18241 = null;
        if (arguments.length > 3) {
          var G__18242__i = 0, G__18242__a = new Array(arguments.length - 3);
          while (G__18242__i < G__18242__a.length) {
            G__18242__a[G__18242__i] = arguments[G__18242__i + 3];
            ++G__18242__i;
          }
          G__18241 = new cljs.core.IndexedSeq(G__18242__a, 0);
        }
        return assoc__4.cljs$core$IFn$_invoke$arity$variadic(coll, k, v, G__18241);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  assoc.cljs$lang$maxFixedArity = 3;
  assoc.cljs$lang$applyTo = assoc__4.cljs$lang$applyTo;
  assoc.cljs$core$IFn$_invoke$arity$3 = assoc__3;
  assoc.cljs$core$IFn$_invoke$arity$variadic = assoc__4.cljs$core$IFn$_invoke$arity$variadic;
  return assoc;
}();
cljs.core.dissoc = function() {
  var dissoc = null;
  var dissoc__1 = function(coll) {
    return coll;
  };
  var dissoc__2 = function(coll, k) {
    if (coll == null) {
      return null;
    } else {
      return cljs.core._dissoc(coll, k);
    }
  };
  var dissoc__3 = function() {
    var G__18245__delegate = function(coll, k, ks) {
      while (true) {
        if (coll == null) {
          return null;
        } else {
          var ret = dissoc.cljs$core$IFn$_invoke$arity$2(coll, k);
          if (cljs.core.truth_(ks)) {
            var G__18246 = ret;
            var G__18247 = cljs.core.first(ks);
            var G__18248 = cljs.core.next(ks);
            coll = G__18246;
            k = G__18247;
            ks = G__18248;
            continue;
          } else {
            return ret;
          }
        }
        break;
      }
    };
    var G__18245 = function(coll, k, var_args) {
      var ks = null;
      if (arguments.length > 2) {
        var G__18249__i = 0, G__18249__a = new Array(arguments.length - 2);
        while (G__18249__i < G__18249__a.length) {
          G__18249__a[G__18249__i] = arguments[G__18249__i + 2];
          ++G__18249__i;
        }
        ks = new cljs.core.IndexedSeq(G__18249__a, 0);
      }
      return G__18245__delegate.call(this, coll, k, ks);
    };
    G__18245.cljs$lang$maxFixedArity = 2;
    G__18245.cljs$lang$applyTo = function(arglist__18250) {
      var coll = cljs.core.first(arglist__18250);
      arglist__18250 = cljs.core.next(arglist__18250);
      var k = cljs.core.first(arglist__18250);
      var ks = cljs.core.rest(arglist__18250);
      return G__18245__delegate(coll, k, ks);
    };
    G__18245.cljs$core$IFn$_invoke$arity$variadic = G__18245__delegate;
    return G__18245;
  }();
  dissoc = function(coll, k, var_args) {
    var ks = var_args;
    switch(arguments.length) {
      case 1:
        return dissoc__1.call(this, coll);
      case 2:
        return dissoc__2.call(this, coll, k);
      default:
        var G__18251 = null;
        if (arguments.length > 2) {
          var G__18252__i = 0, G__18252__a = new Array(arguments.length - 2);
          while (G__18252__i < G__18252__a.length) {
            G__18252__a[G__18252__i] = arguments[G__18252__i + 2];
            ++G__18252__i;
          }
          G__18251 = new cljs.core.IndexedSeq(G__18252__a, 0);
        }
        return dissoc__3.cljs$core$IFn$_invoke$arity$variadic(coll, k, G__18251);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  dissoc.cljs$lang$maxFixedArity = 2;
  dissoc.cljs$lang$applyTo = dissoc__3.cljs$lang$applyTo;
  dissoc.cljs$core$IFn$_invoke$arity$1 = dissoc__1;
  dissoc.cljs$core$IFn$_invoke$arity$2 = dissoc__2;
  dissoc.cljs$core$IFn$_invoke$arity$variadic = dissoc__3.cljs$core$IFn$_invoke$arity$variadic;
  return dissoc;
}();
cljs.core.fn_QMARK_ = function fn_QMARK_(f) {
  var or__7504__auto__ = function() {
    var G__18257 = f;
    return goog.isFunction(G__18257);
  }();
  if (cljs.core.truth_(or__7504__auto__)) {
    return or__7504__auto__;
  } else {
    var G__18258 = f;
    if (G__18258) {
      var bit__8185__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__7504__auto____$1 = bit__8185__auto__;
        if (cljs.core.truth_(or__7504__auto____$1)) {
          return or__7504__auto____$1;
        } else {
          return G__18258.cljs$core$Fn$;
        }
      }())) {
        return true;
      } else {
        if (!G__18258.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.Fn, G__18258);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.Fn, G__18258);
    }
  }
};
cljs.core.MetaFn = function(afn, meta) {
  this.afn = afn;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 393217;
};
cljs.core.MetaFn.prototype.call = function() {
  var G__18724 = null;
  var G__18724__1 = function(self__) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null);
  };
  var G__18724__2 = function(self__, a) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__18260 = a;
    return self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(G__18260) : self__.afn.call(null, G__18260);
  };
  var G__18724__3 = function(self__, a, b) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__18261 = a;
    var G__18262 = b;
    return self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(G__18261, G__18262) : self__.afn.call(null, G__18261, G__18262);
  };
  var G__18724__4 = function(self__, a, b, c) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__18263 = a;
    var G__18264 = b;
    var G__18265 = c;
    return self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(G__18263, G__18264, G__18265) : self__.afn.call(null, G__18263, G__18264, G__18265);
  };
  var G__18724__5 = function(self__, a, b, c, d) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__18266 = a;
    var G__18267 = b;
    var G__18268 = c;
    var G__18269 = d;
    return self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(G__18266, G__18267, G__18268, G__18269) : self__.afn.call(null, G__18266, G__18267, G__18268, G__18269);
  };
  var G__18724__6 = function(self__, a, b, c, d, e) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__18270 = a;
    var G__18271 = b;
    var G__18272 = c;
    var G__18273 = d;
    var G__18274 = e;
    return self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(G__18270, G__18271, G__18272, G__18273, G__18274) : self__.afn.call(null, G__18270, G__18271, G__18272, G__18273, G__18274);
  };
  var G__18724__7 = function(self__, a, b, c, d, e, f) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__18275 = a;
    var G__18276 = b;
    var G__18277 = c;
    var G__18278 = d;
    var G__18279 = e;
    var G__18280 = f;
    return self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(G__18275, G__18276, G__18277, G__18278, G__18279, G__18280) : self__.afn.call(null, G__18275, G__18276, G__18277, G__18278, G__18279, G__18280);
  };
  var G__18724__8 = function(self__, a, b, c, d, e, f, g) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__18281 = a;
    var G__18282 = b;
    var G__18283 = c;
    var G__18284 = d;
    var G__18285 = e;
    var G__18286 = f;
    var G__18287 = g;
    return self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(G__18281, G__18282, G__18283, G__18284, G__18285, G__18286, G__18287) : self__.afn.call(null, G__18281, G__18282, G__18283, G__18284, G__18285, G__18286, G__18287);
  };
  var G__18724__9 = function(self__, a, b, c, d, e, f, g, h) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__18288 = a;
    var G__18289 = b;
    var G__18290 = c;
    var G__18291 = d;
    var G__18292 = e;
    var G__18293 = f;
    var G__18294 = g;
    var G__18295 = h;
    return self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(G__18288, G__18289, G__18290, G__18291, G__18292, G__18293, G__18294, G__18295) : self__.afn.call(null, G__18288, G__18289, G__18290, G__18291, G__18292, G__18293, G__18294, G__18295);
  };
  var G__18724__10 = function(self__, a, b, c, d, e, f, g, h, i) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__18296 = a;
    var G__18297 = b;
    var G__18298 = c;
    var G__18299 = d;
    var G__18300 = e;
    var G__18301 = f;
    var G__18302 = g;
    var G__18303 = h;
    var G__18304 = i;
    return self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(G__18296, G__18297, G__18298, G__18299, G__18300, G__18301, G__18302, G__18303, G__18304) : self__.afn.call(null, G__18296, G__18297, G__18298, G__18299, G__18300, G__18301, G__18302, G__18303, G__18304);
  };
  var G__18724__11 = function(self__, a, b, c, d, e, f, g, h, i, j) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__18305 = a;
    var G__18306 = b;
    var G__18307 = c;
    var G__18308 = d;
    var G__18309 = e;
    var G__18310 = f;
    var G__18311 = g;
    var G__18312 = h;
    var G__18313 = i;
    var G__18314 = j;
    return self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(G__18305, G__18306, G__18307, G__18308, G__18309, G__18310, G__18311, G__18312, G__18313, G__18314) : self__.afn.call(null, G__18305, G__18306, G__18307, G__18308, G__18309, G__18310, G__18311, G__18312, G__18313, G__18314);
  };
  var G__18724__12 = function(self__, a, b, c, d, e, f, g, h, i, j, k) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__18315 = a;
    var G__18316 = b;
    var G__18317 = c;
    var G__18318 = d;
    var G__18319 = e;
    var G__18320 = f;
    var G__18321 = g;
    var G__18322 = h;
    var G__18323 = i;
    var G__18324 = j;
    var G__18325 = k;
    return self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(G__18315, G__18316, G__18317, G__18318, G__18319, G__18320, G__18321, G__18322, G__18323, G__18324, G__18325) : self__.afn.call(null, G__18315, G__18316, G__18317, G__18318, G__18319, G__18320, G__18321, G__18322, G__18323, G__18324, G__18325);
  };
  var G__18724__13 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__18326 = a;
    var G__18327 = b;
    var G__18328 = c;
    var G__18329 = d;
    var G__18330 = e;
    var G__18331 = f;
    var G__18332 = g;
    var G__18333 = h;
    var G__18334 = i;
    var G__18335 = j;
    var G__18336 = k;
    var G__18337 = l;
    return self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(G__18326, G__18327, G__18328, G__18329, G__18330, G__18331, G__18332, G__18333, G__18334, G__18335, G__18336, G__18337) : self__.afn.call(null, G__18326, G__18327, G__18328, G__18329, G__18330, G__18331, G__18332, G__18333, G__18334, G__18335, G__18336, G__18337);
  };
  var G__18724__14 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__18338 = a;
    var G__18339 = b;
    var G__18340 = c;
    var G__18341 = d;
    var G__18342 = e;
    var G__18343 = f;
    var G__18344 = g;
    var G__18345 = h;
    var G__18346 = i;
    var G__18347 = j;
    var G__18348 = k;
    var G__18349 = l;
    var G__18350 = m;
    return self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(G__18338, G__18339, G__18340, G__18341, G__18342, G__18343, G__18344, G__18345, G__18346, G__18347, G__18348, G__18349, G__18350) : self__.afn.call(null, G__18338, G__18339, G__18340, G__18341, G__18342, G__18343, G__18344, G__18345, G__18346, G__18347, G__18348, G__18349, G__18350);
  };
  var G__18724__15 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__18351 = a;
    var G__18352 = b;
    var G__18353 = c;
    var G__18354 = d;
    var G__18355 = e;
    var G__18356 = f;
    var G__18357 = g;
    var G__18358 = h;
    var G__18359 = i;
    var G__18360 = j;
    var G__18361 = k;
    var G__18362 = l;
    var G__18363 = m;
    var G__18364 = n;
    return self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(G__18351, G__18352, G__18353, G__18354, G__18355, G__18356, G__18357, G__18358, G__18359, G__18360, G__18361, G__18362, G__18363, G__18364) : self__.afn.call(null, G__18351, G__18352, G__18353, G__18354, G__18355, G__18356, G__18357, G__18358, G__18359, G__18360, G__18361, G__18362, G__18363, G__18364);
  };
  var G__18724__16 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__18365 = a;
    var G__18366 = b;
    var G__18367 = c;
    var G__18368 = d;
    var G__18369 = e;
    var G__18370 = f;
    var G__18371 = g;
    var G__18372 = h;
    var G__18373 = i;
    var G__18374 = j;
    var G__18375 = k;
    var G__18376 = l;
    var G__18377 = m;
    var G__18378 = n;
    var G__18379 = o;
    return self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(G__18365, G__18366, G__18367, G__18368, G__18369, G__18370, G__18371, G__18372, G__18373, G__18374, G__18375, G__18376, G__18377, G__18378, G__18379) : self__.afn.call(null, G__18365, G__18366, G__18367, G__18368, G__18369, G__18370, G__18371, G__18372, G__18373, G__18374, G__18375, G__18376, G__18377, G__18378, G__18379);
  };
  var G__18724__17 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__18380 = a;
    var G__18381 = b;
    var G__18382 = c;
    var G__18383 = d;
    var G__18384 = e;
    var G__18385 = f;
    var G__18386 = g;
    var G__18387 = h;
    var G__18388 = i;
    var G__18389 = j;
    var G__18390 = k;
    var G__18391 = l;
    var G__18392 = m;
    var G__18393 = n;
    var G__18394 = o;
    var G__18395 = p;
    return self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(G__18380, G__18381, G__18382, G__18383, G__18384, G__18385, G__18386, G__18387, G__18388, G__18389, G__18390, G__18391, G__18392, G__18393, G__18394, G__18395) : self__.afn.call(null, G__18380, G__18381, G__18382, G__18383, G__18384, G__18385, G__18386, G__18387, G__18388, G__18389, G__18390, G__18391, G__18392, G__18393, G__18394, G__18395);
  };
  var G__18724__18 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__18396 = a;
    var G__18397 = b;
    var G__18398 = c;
    var G__18399 = d;
    var G__18400 = e;
    var G__18401 = f;
    var G__18402 = g;
    var G__18403 = h;
    var G__18404 = i;
    var G__18405 = j;
    var G__18406 = k;
    var G__18407 = l;
    var G__18408 = m;
    var G__18409 = n;
    var G__18410 = o;
    var G__18411 = p;
    var G__18412 = q;
    return self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(G__18396, G__18397, G__18398, G__18399, G__18400, G__18401, G__18402, G__18403, G__18404, G__18405, G__18406, G__18407, G__18408, G__18409, G__18410, G__18411, G__18412) : self__.afn.call(null, G__18396, G__18397, G__18398, G__18399, G__18400, G__18401, G__18402, G__18403, G__18404, G__18405, G__18406, G__18407, G__18408, G__18409, G__18410, G__18411, G__18412);
  };
  var G__18724__19 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__18413 = a;
    var G__18414 = b;
    var G__18415 = c;
    var G__18416 = d;
    var G__18417 = e;
    var G__18418 = f;
    var G__18419 = g;
    var G__18420 = h;
    var G__18421 = i;
    var G__18422 = j;
    var G__18423 = k;
    var G__18424 = l;
    var G__18425 = m;
    var G__18426 = n;
    var G__18427 = o;
    var G__18428 = p;
    var G__18429 = q;
    var G__18430 = r;
    return self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(G__18413, G__18414, G__18415, G__18416, G__18417, G__18418, G__18419, G__18420, G__18421, G__18422, G__18423, G__18424, G__18425, G__18426, G__18427, G__18428, G__18429, G__18430) : self__.afn.call(null, G__18413, G__18414, G__18415, G__18416, G__18417, G__18418, G__18419, G__18420, G__18421, G__18422, G__18423, G__18424, G__18425, G__18426, G__18427, G__18428, G__18429, G__18430);
  };
  var G__18724__20 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__18431 = a;
    var G__18432 = b;
    var G__18433 = c;
    var G__18434 = d;
    var G__18435 = e;
    var G__18436 = f;
    var G__18437 = g;
    var G__18438 = h;
    var G__18439 = i;
    var G__18440 = j;
    var G__18441 = k;
    var G__18442 = l;
    var G__18443 = m;
    var G__18444 = n;
    var G__18445 = o;
    var G__18446 = p;
    var G__18447 = q;
    var G__18448 = r;
    var G__18449 = s;
    return self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(G__18431, G__18432, G__18433, G__18434, G__18435, G__18436, G__18437, G__18438, G__18439, G__18440, G__18441, G__18442, G__18443, G__18444, G__18445, G__18446, G__18447, G__18448, G__18449) : self__.afn.call(null, G__18431, G__18432, G__18433, G__18434, G__18435, G__18436, G__18437, G__18438, G__18439, G__18440, G__18441, G__18442, G__18443, G__18444, G__18445, G__18446, G__18447, G__18448, G__18449);
  };
  var G__18724__21 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__18450 = a;
    var G__18451 = b;
    var G__18452 = c;
    var G__18453 = d;
    var G__18454 = e;
    var G__18455 = f;
    var G__18456 = g;
    var G__18457 = h;
    var G__18458 = i;
    var G__18459 = j;
    var G__18460 = k;
    var G__18461 = l;
    var G__18462 = m;
    var G__18463 = n;
    var G__18464 = o;
    var G__18465 = p;
    var G__18466 = q;
    var G__18467 = r;
    var G__18468 = s;
    var G__18469 = t;
    return self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(G__18450, G__18451, G__18452, G__18453, G__18454, G__18455, G__18456, G__18457, G__18458, G__18459, G__18460, G__18461, G__18462, G__18463, G__18464, G__18465, G__18466, G__18467, G__18468, G__18469) : self__.afn.call(null, G__18450, G__18451, G__18452, G__18453, G__18454, G__18455, G__18456, G__18457, G__18458, G__18459, G__18460, G__18461, G__18462, G__18463, G__18464, G__18465, G__18466, G__18467, 
    G__18468, G__18469);
  };
  var G__18724__22 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__18470 = self__.afn;
    var G__18471 = a;
    var G__18472 = b;
    var G__18473 = c;
    var G__18474 = d;
    var G__18475 = e;
    var G__18476 = f;
    var G__18477 = g;
    var G__18478 = h;
    var G__18479 = i;
    var G__18480 = j;
    var G__18481 = k;
    var G__18482 = l;
    var G__18483 = m;
    var G__18484 = n;
    var G__18485 = o;
    var G__18486 = p;
    var G__18487 = q;
    var G__18488 = r;
    var G__18489 = s;
    var G__18490 = t;
    var G__18491 = rest;
    return cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__18470, G__18471, G__18472, G__18473, G__18474, G__18475, G__18476, G__18477, G__18478, G__18479, G__18480, G__18481, G__18482, G__18483, G__18484, G__18485, G__18486, G__18487, G__18488, G__18489, G__18490, G__18491) : cljs.core.apply.call(null, G__18470, G__18471, G__18472, G__18473, G__18474, G__18475, G__18476, G__18477, G__18478, G__18479, G__18480, G__18481, G__18482, G__18483, G__18484, 
    G__18485, G__18486, G__18487, G__18488, G__18489, G__18490, G__18491);
  };
  G__18724 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    switch(arguments.length) {
      case 1:
        return G__18724__1.call(this, self__);
      case 2:
        return G__18724__2.call(this, self__, a);
      case 3:
        return G__18724__3.call(this, self__, a, b);
      case 4:
        return G__18724__4.call(this, self__, a, b, c);
      case 5:
        return G__18724__5.call(this, self__, a, b, c, d);
      case 6:
        return G__18724__6.call(this, self__, a, b, c, d, e);
      case 7:
        return G__18724__7.call(this, self__, a, b, c, d, e, f);
      case 8:
        return G__18724__8.call(this, self__, a, b, c, d, e, f, g);
      case 9:
        return G__18724__9.call(this, self__, a, b, c, d, e, f, g, h);
      case 10:
        return G__18724__10.call(this, self__, a, b, c, d, e, f, g, h, i);
      case 11:
        return G__18724__11.call(this, self__, a, b, c, d, e, f, g, h, i, j);
      case 12:
        return G__18724__12.call(this, self__, a, b, c, d, e, f, g, h, i, j, k);
      case 13:
        return G__18724__13.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l);
      case 14:
        return G__18724__14.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m);
      case 15:
        return G__18724__15.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
      case 16:
        return G__18724__16.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
      case 17:
        return G__18724__17.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
      case 18:
        return G__18724__18.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
      case 19:
        return G__18724__19.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
      case 20:
        return G__18724__20.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
      case 21:
        return G__18724__21.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
      case 22:
        return G__18724__22.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__18724.cljs$core$IFn$_invoke$arity$1 = G__18724__1;
  G__18724.cljs$core$IFn$_invoke$arity$2 = G__18724__2;
  G__18724.cljs$core$IFn$_invoke$arity$3 = G__18724__3;
  G__18724.cljs$core$IFn$_invoke$arity$4 = G__18724__4;
  G__18724.cljs$core$IFn$_invoke$arity$5 = G__18724__5;
  G__18724.cljs$core$IFn$_invoke$arity$6 = G__18724__6;
  G__18724.cljs$core$IFn$_invoke$arity$7 = G__18724__7;
  G__18724.cljs$core$IFn$_invoke$arity$8 = G__18724__8;
  G__18724.cljs$core$IFn$_invoke$arity$9 = G__18724__9;
  G__18724.cljs$core$IFn$_invoke$arity$10 = G__18724__10;
  G__18724.cljs$core$IFn$_invoke$arity$11 = G__18724__11;
  G__18724.cljs$core$IFn$_invoke$arity$12 = G__18724__12;
  G__18724.cljs$core$IFn$_invoke$arity$13 = G__18724__13;
  G__18724.cljs$core$IFn$_invoke$arity$14 = G__18724__14;
  G__18724.cljs$core$IFn$_invoke$arity$15 = G__18724__15;
  G__18724.cljs$core$IFn$_invoke$arity$16 = G__18724__16;
  G__18724.cljs$core$IFn$_invoke$arity$17 = G__18724__17;
  G__18724.cljs$core$IFn$_invoke$arity$18 = G__18724__18;
  G__18724.cljs$core$IFn$_invoke$arity$19 = G__18724__19;
  G__18724.cljs$core$IFn$_invoke$arity$20 = G__18724__20;
  G__18724.cljs$core$IFn$_invoke$arity$21 = G__18724__21;
  G__18724.cljs$core$IFn$_invoke$arity$22 = G__18724__22;
  return G__18724;
}();
cljs.core.MetaFn.prototype.apply = function(self__, args18259) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args18259)));
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$0 = function() {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$1 = function(a) {
  var self__ = this;
  var _ = this;
  var G__18492 = a;
  return self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(G__18492) : self__.afn.call(null, G__18492);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  var self__ = this;
  var _ = this;
  var G__18493 = a;
  var G__18494 = b;
  return self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(G__18493, G__18494) : self__.afn.call(null, G__18493, G__18494);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  var self__ = this;
  var _ = this;
  var G__18495 = a;
  var G__18496 = b;
  var G__18497 = c;
  return self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(G__18495, G__18496, G__18497) : self__.afn.call(null, G__18495, G__18496, G__18497);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  var self__ = this;
  var _ = this;
  var G__18498 = a;
  var G__18499 = b;
  var G__18500 = c;
  var G__18501 = d;
  return self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(G__18498, G__18499, G__18500, G__18501) : self__.afn.call(null, G__18498, G__18499, G__18500, G__18501);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$5 = function(a, b, c, d, e) {
  var self__ = this;
  var _ = this;
  var G__18502 = a;
  var G__18503 = b;
  var G__18504 = c;
  var G__18505 = d;
  var G__18506 = e;
  return self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(G__18502, G__18503, G__18504, G__18505, G__18506) : self__.afn.call(null, G__18502, G__18503, G__18504, G__18505, G__18506);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$6 = function(a, b, c, d, e, f) {
  var self__ = this;
  var _ = this;
  var G__18507 = a;
  var G__18508 = b;
  var G__18509 = c;
  var G__18510 = d;
  var G__18511 = e;
  var G__18512 = f;
  return self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(G__18507, G__18508, G__18509, G__18510, G__18511, G__18512) : self__.afn.call(null, G__18507, G__18508, G__18509, G__18510, G__18511, G__18512);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$7 = function(a, b, c, d, e, f, g) {
  var self__ = this;
  var _ = this;
  var G__18513 = a;
  var G__18514 = b;
  var G__18515 = c;
  var G__18516 = d;
  var G__18517 = e;
  var G__18518 = f;
  var G__18519 = g;
  return self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(G__18513, G__18514, G__18515, G__18516, G__18517, G__18518, G__18519) : self__.afn.call(null, G__18513, G__18514, G__18515, G__18516, G__18517, G__18518, G__18519);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$8 = function(a, b, c, d, e, f, g, h) {
  var self__ = this;
  var _ = this;
  var G__18520 = a;
  var G__18521 = b;
  var G__18522 = c;
  var G__18523 = d;
  var G__18524 = e;
  var G__18525 = f;
  var G__18526 = g;
  var G__18527 = h;
  return self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(G__18520, G__18521, G__18522, G__18523, G__18524, G__18525, G__18526, G__18527) : self__.afn.call(null, G__18520, G__18521, G__18522, G__18523, G__18524, G__18525, G__18526, G__18527);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$9 = function(a, b, c, d, e, f, g, h, i) {
  var self__ = this;
  var _ = this;
  var G__18528 = a;
  var G__18529 = b;
  var G__18530 = c;
  var G__18531 = d;
  var G__18532 = e;
  var G__18533 = f;
  var G__18534 = g;
  var G__18535 = h;
  var G__18536 = i;
  return self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(G__18528, G__18529, G__18530, G__18531, G__18532, G__18533, G__18534, G__18535, G__18536) : self__.afn.call(null, G__18528, G__18529, G__18530, G__18531, G__18532, G__18533, G__18534, G__18535, G__18536);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$10 = function(a, b, c, d, e, f, g, h, i, j) {
  var self__ = this;
  var _ = this;
  var G__18537 = a;
  var G__18538 = b;
  var G__18539 = c;
  var G__18540 = d;
  var G__18541 = e;
  var G__18542 = f;
  var G__18543 = g;
  var G__18544 = h;
  var G__18545 = i;
  var G__18546 = j;
  return self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(G__18537, G__18538, G__18539, G__18540, G__18541, G__18542, G__18543, G__18544, G__18545, G__18546) : self__.afn.call(null, G__18537, G__18538, G__18539, G__18540, G__18541, G__18542, G__18543, G__18544, G__18545, G__18546);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$11 = function(a, b, c, d, e, f, g, h, i, j, k) {
  var self__ = this;
  var _ = this;
  var G__18547 = a;
  var G__18548 = b;
  var G__18549 = c;
  var G__18550 = d;
  var G__18551 = e;
  var G__18552 = f;
  var G__18553 = g;
  var G__18554 = h;
  var G__18555 = i;
  var G__18556 = j;
  var G__18557 = k;
  return self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(G__18547, G__18548, G__18549, G__18550, G__18551, G__18552, G__18553, G__18554, G__18555, G__18556, G__18557) : self__.afn.call(null, G__18547, G__18548, G__18549, G__18550, G__18551, G__18552, G__18553, G__18554, G__18555, G__18556, G__18557);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$12 = function(a, b, c, d, e, f, g, h, i, j, k, l) {
  var self__ = this;
  var _ = this;
  var G__18558 = a;
  var G__18559 = b;
  var G__18560 = c;
  var G__18561 = d;
  var G__18562 = e;
  var G__18563 = f;
  var G__18564 = g;
  var G__18565 = h;
  var G__18566 = i;
  var G__18567 = j;
  var G__18568 = k;
  var G__18569 = l;
  return self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(G__18558, G__18559, G__18560, G__18561, G__18562, G__18563, G__18564, G__18565, G__18566, G__18567, G__18568, G__18569) : self__.afn.call(null, G__18558, G__18559, G__18560, G__18561, G__18562, G__18563, G__18564, G__18565, G__18566, G__18567, G__18568, G__18569);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$13 = function(a, b, c, d, e, f, g, h, i, j, k, l, m) {
  var self__ = this;
  var _ = this;
  var G__18570 = a;
  var G__18571 = b;
  var G__18572 = c;
  var G__18573 = d;
  var G__18574 = e;
  var G__18575 = f;
  var G__18576 = g;
  var G__18577 = h;
  var G__18578 = i;
  var G__18579 = j;
  var G__18580 = k;
  var G__18581 = l;
  var G__18582 = m;
  return self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(G__18570, G__18571, G__18572, G__18573, G__18574, G__18575, G__18576, G__18577, G__18578, G__18579, G__18580, G__18581, G__18582) : self__.afn.call(null, G__18570, G__18571, G__18572, G__18573, G__18574, G__18575, G__18576, G__18577, G__18578, G__18579, G__18580, G__18581, G__18582);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$14 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
  var self__ = this;
  var _ = this;
  var G__18583 = a;
  var G__18584 = b;
  var G__18585 = c;
  var G__18586 = d;
  var G__18587 = e;
  var G__18588 = f;
  var G__18589 = g;
  var G__18590 = h;
  var G__18591 = i;
  var G__18592 = j;
  var G__18593 = k;
  var G__18594 = l;
  var G__18595 = m;
  var G__18596 = n;
  return self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(G__18583, G__18584, G__18585, G__18586, G__18587, G__18588, G__18589, G__18590, G__18591, G__18592, G__18593, G__18594, G__18595, G__18596) : self__.afn.call(null, G__18583, G__18584, G__18585, G__18586, G__18587, G__18588, G__18589, G__18590, G__18591, G__18592, G__18593, G__18594, G__18595, G__18596);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$15 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
  var self__ = this;
  var _ = this;
  var G__18597 = a;
  var G__18598 = b;
  var G__18599 = c;
  var G__18600 = d;
  var G__18601 = e;
  var G__18602 = f;
  var G__18603 = g;
  var G__18604 = h;
  var G__18605 = i;
  var G__18606 = j;
  var G__18607 = k;
  var G__18608 = l;
  var G__18609 = m;
  var G__18610 = n;
  var G__18611 = o;
  return self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(G__18597, G__18598, G__18599, G__18600, G__18601, G__18602, G__18603, G__18604, G__18605, G__18606, G__18607, G__18608, G__18609, G__18610, G__18611) : self__.afn.call(null, G__18597, G__18598, G__18599, G__18600, G__18601, G__18602, G__18603, G__18604, G__18605, G__18606, G__18607, G__18608, G__18609, G__18610, G__18611);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$16 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
  var self__ = this;
  var _ = this;
  var G__18612 = a;
  var G__18613 = b;
  var G__18614 = c;
  var G__18615 = d;
  var G__18616 = e;
  var G__18617 = f;
  var G__18618 = g;
  var G__18619 = h;
  var G__18620 = i;
  var G__18621 = j;
  var G__18622 = k;
  var G__18623 = l;
  var G__18624 = m;
  var G__18625 = n;
  var G__18626 = o;
  var G__18627 = p;
  return self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(G__18612, G__18613, G__18614, G__18615, G__18616, G__18617, G__18618, G__18619, G__18620, G__18621, G__18622, G__18623, G__18624, G__18625, G__18626, G__18627) : self__.afn.call(null, G__18612, G__18613, G__18614, G__18615, G__18616, G__18617, G__18618, G__18619, G__18620, G__18621, G__18622, G__18623, G__18624, G__18625, G__18626, G__18627);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$17 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
  var self__ = this;
  var _ = this;
  var G__18628 = a;
  var G__18629 = b;
  var G__18630 = c;
  var G__18631 = d;
  var G__18632 = e;
  var G__18633 = f;
  var G__18634 = g;
  var G__18635 = h;
  var G__18636 = i;
  var G__18637 = j;
  var G__18638 = k;
  var G__18639 = l;
  var G__18640 = m;
  var G__18641 = n;
  var G__18642 = o;
  var G__18643 = p;
  var G__18644 = q;
  return self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(G__18628, G__18629, G__18630, G__18631, G__18632, G__18633, G__18634, G__18635, G__18636, G__18637, G__18638, G__18639, G__18640, G__18641, G__18642, G__18643, G__18644) : self__.afn.call(null, G__18628, G__18629, G__18630, G__18631, G__18632, G__18633, G__18634, G__18635, G__18636, G__18637, G__18638, G__18639, G__18640, G__18641, G__18642, G__18643, G__18644);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$18 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
  var self__ = this;
  var _ = this;
  var G__18645 = a;
  var G__18646 = b;
  var G__18647 = c;
  var G__18648 = d;
  var G__18649 = e;
  var G__18650 = f;
  var G__18651 = g;
  var G__18652 = h;
  var G__18653 = i;
  var G__18654 = j;
  var G__18655 = k;
  var G__18656 = l;
  var G__18657 = m;
  var G__18658 = n;
  var G__18659 = o;
  var G__18660 = p;
  var G__18661 = q;
  var G__18662 = r;
  return self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(G__18645, G__18646, G__18647, G__18648, G__18649, G__18650, G__18651, G__18652, G__18653, G__18654, G__18655, G__18656, G__18657, G__18658, G__18659, G__18660, G__18661, G__18662) : self__.afn.call(null, G__18645, G__18646, G__18647, G__18648, G__18649, G__18650, G__18651, G__18652, G__18653, G__18654, G__18655, G__18656, G__18657, G__18658, G__18659, G__18660, G__18661, G__18662);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$19 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
  var self__ = this;
  var _ = this;
  var G__18663 = a;
  var G__18664 = b;
  var G__18665 = c;
  var G__18666 = d;
  var G__18667 = e;
  var G__18668 = f;
  var G__18669 = g;
  var G__18670 = h;
  var G__18671 = i;
  var G__18672 = j;
  var G__18673 = k;
  var G__18674 = l;
  var G__18675 = m;
  var G__18676 = n;
  var G__18677 = o;
  var G__18678 = p;
  var G__18679 = q;
  var G__18680 = r;
  var G__18681 = s;
  return self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(G__18663, G__18664, G__18665, G__18666, G__18667, G__18668, G__18669, G__18670, G__18671, G__18672, G__18673, G__18674, G__18675, G__18676, G__18677, G__18678, G__18679, G__18680, G__18681) : self__.afn.call(null, G__18663, G__18664, G__18665, G__18666, G__18667, G__18668, G__18669, G__18670, G__18671, G__18672, G__18673, G__18674, G__18675, G__18676, G__18677, G__18678, G__18679, G__18680, G__18681);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$20 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
  var self__ = this;
  var _ = this;
  var G__18682 = a;
  var G__18683 = b;
  var G__18684 = c;
  var G__18685 = d;
  var G__18686 = e;
  var G__18687 = f;
  var G__18688 = g;
  var G__18689 = h;
  var G__18690 = i;
  var G__18691 = j;
  var G__18692 = k;
  var G__18693 = l;
  var G__18694 = m;
  var G__18695 = n;
  var G__18696 = o;
  var G__18697 = p;
  var G__18698 = q;
  var G__18699 = r;
  var G__18700 = s;
  var G__18701 = t;
  return self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(G__18682, G__18683, G__18684, G__18685, G__18686, G__18687, G__18688, G__18689, G__18690, G__18691, G__18692, G__18693, G__18694, G__18695, G__18696, G__18697, G__18698, G__18699, G__18700, G__18701) : self__.afn.call(null, G__18682, G__18683, G__18684, G__18685, G__18686, G__18687, G__18688, G__18689, G__18690, G__18691, G__18692, G__18693, G__18694, G__18695, G__18696, G__18697, G__18698, G__18699, G__18700, 
  G__18701);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$21 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
  var self__ = this;
  var _ = this;
  var G__18702 = self__.afn;
  var G__18703 = a;
  var G__18704 = b;
  var G__18705 = c;
  var G__18706 = d;
  var G__18707 = e;
  var G__18708 = f;
  var G__18709 = g;
  var G__18710 = h;
  var G__18711 = i;
  var G__18712 = j;
  var G__18713 = k;
  var G__18714 = l;
  var G__18715 = m;
  var G__18716 = n;
  var G__18717 = o;
  var G__18718 = p;
  var G__18719 = q;
  var G__18720 = r;
  var G__18721 = s;
  var G__18722 = t;
  var G__18723 = rest;
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__18702, G__18703, G__18704, G__18705, G__18706, G__18707, G__18708, G__18709, G__18710, G__18711, G__18712, G__18713, G__18714, G__18715, G__18716, G__18717, G__18718, G__18719, G__18720, G__18721, G__18722, G__18723) : cljs.core.apply.call(null, G__18702, G__18703, G__18704, G__18705, G__18706, G__18707, G__18708, G__18709, G__18710, G__18711, G__18712, G__18713, G__18714, G__18715, G__18716, 
  G__18717, G__18718, G__18719, G__18720, G__18721, G__18722, G__18723);
};
cljs.core.MetaFn.prototype.cljs$core$Fn$ = true;
cljs.core.MetaFn.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_, new_meta) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.MetaFn(self__.afn, new_meta);
};
cljs.core.MetaFn.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.meta;
};
cljs.core.MetaFn.cljs$lang$type = true;
cljs.core.MetaFn.cljs$lang$ctorStr = "cljs.core/MetaFn";
cljs.core.MetaFn.cljs$lang$ctorPrWriter = function(this__8091__auto__, writer__8092__auto__, opt__8093__auto__) {
  return cljs.core._write(writer__8092__auto__, "cljs.core/MetaFn");
};
cljs.core.__GT_MetaFn = function __GT_MetaFn(afn, meta) {
  return new cljs.core.MetaFn(afn, meta);
};
cljs.core.with_meta = function with_meta(o, meta) {
  if (cljs.core.fn_QMARK_(o) && !function() {
    var G__18728 = o;
    if (G__18728) {
      var bit__8185__auto__ = G__18728.cljs$lang$protocol_mask$partition0$ & 262144;
      if (bit__8185__auto__ || G__18728.cljs$core$IWithMeta$) {
        return true;
      } else {
        if (!G__18728.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.IWithMeta, G__18728);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.IWithMeta, G__18728);
    }
  }()) {
    return new cljs.core.MetaFn(o, meta);
  } else {
    if (o == null) {
      return null;
    } else {
      return cljs.core._with_meta(o, meta);
    }
  }
};
cljs.core.meta = function meta(o) {
  if (function() {
    var and__7492__auto__ = !(o == null);
    if (and__7492__auto__) {
      var G__18732 = o;
      if (G__18732) {
        var bit__8185__auto__ = G__18732.cljs$lang$protocol_mask$partition0$ & 131072;
        if (bit__8185__auto__ || G__18732.cljs$core$IMeta$) {
          return true;
        } else {
          if (!G__18732.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta, G__18732);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta, G__18732);
      }
    } else {
      return and__7492__auto__;
    }
  }()) {
    return cljs.core._meta(o);
  } else {
    return null;
  }
};
cljs.core.peek = function peek(coll) {
  if (coll == null) {
    return null;
  } else {
    return cljs.core._peek(coll);
  }
};
cljs.core.pop = function pop(coll) {
  if (coll == null) {
    return null;
  } else {
    return cljs.core._pop(coll);
  }
};
cljs.core.disj = function() {
  var disj = null;
  var disj__1 = function(coll) {
    return coll;
  };
  var disj__2 = function(coll, k) {
    if (coll == null) {
      return null;
    } else {
      return cljs.core._disjoin(coll, k);
    }
  };
  var disj__3 = function() {
    var G__18735__delegate = function(coll, k, ks) {
      while (true) {
        if (coll == null) {
          return null;
        } else {
          var ret = disj.cljs$core$IFn$_invoke$arity$2(coll, k);
          if (cljs.core.truth_(ks)) {
            var G__18736 = ret;
            var G__18737 = cljs.core.first(ks);
            var G__18738 = cljs.core.next(ks);
            coll = G__18736;
            k = G__18737;
            ks = G__18738;
            continue;
          } else {
            return ret;
          }
        }
        break;
      }
    };
    var G__18735 = function(coll, k, var_args) {
      var ks = null;
      if (arguments.length > 2) {
        var G__18739__i = 0, G__18739__a = new Array(arguments.length - 2);
        while (G__18739__i < G__18739__a.length) {
          G__18739__a[G__18739__i] = arguments[G__18739__i + 2];
          ++G__18739__i;
        }
        ks = new cljs.core.IndexedSeq(G__18739__a, 0);
      }
      return G__18735__delegate.call(this, coll, k, ks);
    };
    G__18735.cljs$lang$maxFixedArity = 2;
    G__18735.cljs$lang$applyTo = function(arglist__18740) {
      var coll = cljs.core.first(arglist__18740);
      arglist__18740 = cljs.core.next(arglist__18740);
      var k = cljs.core.first(arglist__18740);
      var ks = cljs.core.rest(arglist__18740);
      return G__18735__delegate(coll, k, ks);
    };
    G__18735.cljs$core$IFn$_invoke$arity$variadic = G__18735__delegate;
    return G__18735;
  }();
  disj = function(coll, k, var_args) {
    var ks = var_args;
    switch(arguments.length) {
      case 1:
        return disj__1.call(this, coll);
      case 2:
        return disj__2.call(this, coll, k);
      default:
        var G__18741 = null;
        if (arguments.length > 2) {
          var G__18742__i = 0, G__18742__a = new Array(arguments.length - 2);
          while (G__18742__i < G__18742__a.length) {
            G__18742__a[G__18742__i] = arguments[G__18742__i + 2];
            ++G__18742__i;
          }
          G__18741 = new cljs.core.IndexedSeq(G__18742__a, 0);
        }
        return disj__3.cljs$core$IFn$_invoke$arity$variadic(coll, k, G__18741);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  disj.cljs$lang$maxFixedArity = 2;
  disj.cljs$lang$applyTo = disj__3.cljs$lang$applyTo;
  disj.cljs$core$IFn$_invoke$arity$1 = disj__1;
  disj.cljs$core$IFn$_invoke$arity$2 = disj__2;
  disj.cljs$core$IFn$_invoke$arity$variadic = disj__3.cljs$core$IFn$_invoke$arity$variadic;
  return disj;
}();
cljs.core.empty_QMARK_ = function empty_QMARK_(coll) {
  return coll == null || cljs.core.not(cljs.core.seq(coll));
};
cljs.core.coll_QMARK_ = function coll_QMARK_(x) {
  if (x == null) {
    return false;
  } else {
    var G__18744 = x;
    if (G__18744) {
      var bit__8185__auto__ = G__18744.cljs$lang$protocol_mask$partition0$ & 8;
      if (bit__8185__auto__ || G__18744.cljs$core$ICollection$) {
        return true;
      } else {
        if (!G__18744.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection, G__18744);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection, G__18744);
    }
  }
};
cljs.core.set_QMARK_ = function set_QMARK_(x) {
  if (x == null) {
    return false;
  } else {
    var G__18746 = x;
    if (G__18746) {
      var bit__8185__auto__ = G__18746.cljs$lang$protocol_mask$partition0$ & 4096;
      if (bit__8185__auto__ || G__18746.cljs$core$ISet$) {
        return true;
      } else {
        if (!G__18746.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.ISet, G__18746);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.ISet, G__18746);
    }
  }
};
cljs.core.associative_QMARK_ = function associative_QMARK_(x) {
  var G__18748 = x;
  if (G__18748) {
    var bit__8185__auto__ = G__18748.cljs$lang$protocol_mask$partition0$ & 512;
    if (bit__8185__auto__ || G__18748.cljs$core$IAssociative$) {
      return true;
    } else {
      if (!G__18748.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative, G__18748);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative, G__18748);
  }
};
cljs.core.sequential_QMARK_ = function sequential_QMARK_(x) {
  var G__18750 = x;
  if (G__18750) {
    var bit__8185__auto__ = G__18750.cljs$lang$protocol_mask$partition0$ & 16777216;
    if (bit__8185__auto__ || G__18750.cljs$core$ISequential$) {
      return true;
    } else {
      if (!G__18750.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential, G__18750);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential, G__18750);
  }
};
cljs.core.sorted_QMARK_ = function sorted_QMARK_(x) {
  var G__18752 = x;
  if (G__18752) {
    var bit__8185__auto__ = G__18752.cljs$lang$protocol_mask$partition0$ & 268435456;
    if (bit__8185__auto__ || G__18752.cljs$core$ISorted$) {
      return true;
    } else {
      if (!G__18752.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted, G__18752);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted, G__18752);
  }
};
cljs.core.reduceable_QMARK_ = function reduceable_QMARK_(x) {
  var G__18754 = x;
  if (G__18754) {
    var bit__8185__auto__ = G__18754.cljs$lang$protocol_mask$partition0$ & 524288;
    if (bit__8185__auto__ || G__18754.cljs$core$IReduce$) {
      return true;
    } else {
      if (!G__18754.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce, G__18754);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce, G__18754);
  }
};
cljs.core.map_QMARK_ = function map_QMARK_(x) {
  if (x == null) {
    return false;
  } else {
    var G__18756 = x;
    if (G__18756) {
      var bit__8185__auto__ = G__18756.cljs$lang$protocol_mask$partition0$ & 1024;
      if (bit__8185__auto__ || G__18756.cljs$core$IMap$) {
        return true;
      } else {
        if (!G__18756.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.IMap, G__18756);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.IMap, G__18756);
    }
  }
};
cljs.core.vector_QMARK_ = function vector_QMARK_(x) {
  var G__18758 = x;
  if (G__18758) {
    var bit__8185__auto__ = G__18758.cljs$lang$protocol_mask$partition0$ & 16384;
    if (bit__8185__auto__ || G__18758.cljs$core$IVector$) {
      return true;
    } else {
      if (!G__18758.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IVector, G__18758);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IVector, G__18758);
  }
};
cljs.core.chunked_seq_QMARK_ = function chunked_seq_QMARK_(x) {
  var G__18760 = x;
  if (G__18760) {
    var bit__8178__auto__ = G__18760.cljs$lang$protocol_mask$partition1$ & 512;
    if (bit__8178__auto__ || G__18760.cljs$core$IChunkedSeq$) {
      return true;
    } else {
      return false;
    }
  } else {
    return false;
  }
};
cljs.core.js_obj = function() {
  var js_obj = null;
  var js_obj__0 = function() {
    var obj18766 = {};
    return obj18766;
  };
  var js_obj__1 = function() {
    var G__18769__delegate = function(keyvals) {
      var G__18767 = goog.object.create;
      var G__18768 = keyvals;
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$2 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(G__18767, G__18768) : cljs.core.apply.call(null, G__18767, G__18768);
    };
    var G__18769 = function(var_args) {
      var keyvals = null;
      if (arguments.length > 0) {
        var G__18770__i = 0, G__18770__a = new Array(arguments.length - 0);
        while (G__18770__i < G__18770__a.length) {
          G__18770__a[G__18770__i] = arguments[G__18770__i + 0];
          ++G__18770__i;
        }
        keyvals = new cljs.core.IndexedSeq(G__18770__a, 0);
      }
      return G__18769__delegate.call(this, keyvals);
    };
    G__18769.cljs$lang$maxFixedArity = 0;
    G__18769.cljs$lang$applyTo = function(arglist__18771) {
      var keyvals = cljs.core.seq(arglist__18771);
      return G__18769__delegate(keyvals);
    };
    G__18769.cljs$core$IFn$_invoke$arity$variadic = G__18769__delegate;
    return G__18769;
  }();
  js_obj = function(var_args) {
    var keyvals = var_args;
    switch(arguments.length) {
      case 0:
        return js_obj__0.call(this);
      default:
        var G__18772 = null;
        if (arguments.length > 0) {
          var G__18773__i = 0, G__18773__a = new Array(arguments.length - 0);
          while (G__18773__i < G__18773__a.length) {
            G__18773__a[G__18773__i] = arguments[G__18773__i + 0];
            ++G__18773__i;
          }
          G__18772 = new cljs.core.IndexedSeq(G__18773__a, 0);
        }
        return js_obj__1.cljs$core$IFn$_invoke$arity$variadic(G__18772);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  js_obj.cljs$lang$maxFixedArity = 0;
  js_obj.cljs$lang$applyTo = js_obj__1.cljs$lang$applyTo;
  js_obj.cljs$core$IFn$_invoke$arity$0 = js_obj__0;
  js_obj.cljs$core$IFn$_invoke$arity$variadic = js_obj__1.cljs$core$IFn$_invoke$arity$variadic;
  return js_obj;
}();
cljs.core.js_keys = function js_keys(obj) {
  var keys = [];
  var G__18776_18778 = obj;
  var G__18777_18779 = function(G__18776_18778, keys) {
    return function(val, key, obj__$1) {
      return keys.push(key);
    };
  }(G__18776_18778, keys);
  goog.object.forEach(G__18776_18778, G__18777_18779);
  return keys;
};
cljs.core.js_delete = function js_delete(obj, key) {
  return delete obj[key];
};
cljs.core.array_copy = function array_copy(from, i, to, j, len) {
  var i__$1 = i;
  var j__$1 = j;
  var len__$1 = len;
  while (true) {
    if (len__$1 === 0) {
      return to;
    } else {
      to[j__$1] = from[i__$1];
      var G__18780 = i__$1 + 1;
      var G__18781 = j__$1 + 1;
      var G__18782 = len__$1 - 1;
      i__$1 = G__18780;
      j__$1 = G__18781;
      len__$1 = G__18782;
      continue;
    }
    break;
  }
};
cljs.core.array_copy_downward = function array_copy_downward(from, i, to, j, len) {
  var i__$1 = i + (len - 1);
  var j__$1 = j + (len - 1);
  var len__$1 = len;
  while (true) {
    if (len__$1 === 0) {
      return to;
    } else {
      to[j__$1] = from[i__$1];
      var G__18783 = i__$1 - 1;
      var G__18784 = j__$1 - 1;
      var G__18785 = len__$1 - 1;
      i__$1 = G__18783;
      j__$1 = G__18784;
      len__$1 = G__18785;
      continue;
    }
    break;
  }
};
cljs.core.lookup_sentinel = function() {
  var obj18787 = {};
  return obj18787;
}();
cljs.core.false_QMARK_ = function false_QMARK_(x) {
  return x === false;
};
cljs.core.true_QMARK_ = function true_QMARK_(x) {
  return x === true;
};
cljs.core.undefined_QMARK_ = function undefined_QMARK_(x) {
  return void 0 === x;
};
cljs.core.seq_QMARK_ = function seq_QMARK_(s) {
  if (s == null) {
    return false;
  } else {
    var G__18789 = s;
    if (G__18789) {
      var bit__8185__auto__ = G__18789.cljs$lang$protocol_mask$partition0$ & 64;
      if (bit__8185__auto__ || G__18789.cljs$core$ISeq$) {
        return true;
      } else {
        if (!G__18789.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq, G__18789);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq, G__18789);
    }
  }
};
cljs.core.seqable_QMARK_ = function seqable_QMARK_(s) {
  var G__18791 = s;
  if (G__18791) {
    var bit__8185__auto__ = G__18791.cljs$lang$protocol_mask$partition0$ & 8388608;
    if (bit__8185__auto__ || G__18791.cljs$core$ISeqable$) {
      return true;
    } else {
      if (!G__18791.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable, G__18791);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable, G__18791);
  }
};
cljs.core.boolean$ = function boolean$(x) {
  if (cljs.core.truth_(x)) {
    return true;
  } else {
    return false;
  }
};
cljs.core.ifn_QMARK_ = function ifn_QMARK_(f) {
  var or__7504__auto__ = cljs.core.fn_QMARK_(f);
  if (or__7504__auto__) {
    return or__7504__auto__;
  } else {
    var G__18795 = f;
    if (G__18795) {
      var bit__8185__auto__ = G__18795.cljs$lang$protocol_mask$partition0$ & 1;
      if (bit__8185__auto__ || G__18795.cljs$core$IFn$) {
        return true;
      } else {
        if (!G__18795.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.IFn, G__18795);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.IFn, G__18795);
    }
  }
};
cljs.core.integer_QMARK_ = function integer_QMARK_(n) {
  return typeof n === "number" && cljs.core.not(function() {
    var G__18808 = n;
    return isNaN(G__18808);
  }()) && !(n === Infinity) && function() {
    var G__18809 = n;
    return parseFloat(G__18809);
  }() === function() {
    var G__18810 = n;
    var G__18811 = 10;
    return parseInt(G__18810, G__18811);
  }();
};
cljs.core.contains_QMARK_ = function contains_QMARK_(coll, v) {
  if (cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll, v, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return false;
  } else {
    return true;
  }
};
cljs.core.find = function find(coll, k) {
  if (!(coll == null) && cljs.core.associative_QMARK_(coll) && cljs.core.contains_QMARK_(coll, k)) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll, k)], null);
  } else {
    return null;
  }
};
cljs.core.distinct_QMARK_ = function() {
  var distinct_QMARK_ = null;
  var distinct_QMARK___1 = function(x) {
    return true;
  };
  var distinct_QMARK___2 = function(x, y) {
    return!cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x, y);
  };
  var distinct_QMARK___3 = function() {
    var G__18812__delegate = function(x, y, more) {
      if (!cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x, y)) {
        var s = cljs.core.PersistentHashSet.fromArray([x, y], true);
        var xs = more;
        while (true) {
          var x__$1 = cljs.core.first(xs);
          var etc = cljs.core.next(xs);
          if (cljs.core.truth_(xs)) {
            if (cljs.core.contains_QMARK_(s, x__$1)) {
              return false;
            } else {
              var G__18813 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(s, x__$1);
              var G__18814 = etc;
              s = G__18813;
              xs = G__18814;
              continue;
            }
          } else {
            return true;
          }
          break;
        }
      } else {
        return false;
      }
    };
    var G__18812 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__18815__i = 0, G__18815__a = new Array(arguments.length - 2);
        while (G__18815__i < G__18815__a.length) {
          G__18815__a[G__18815__i] = arguments[G__18815__i + 2];
          ++G__18815__i;
        }
        more = new cljs.core.IndexedSeq(G__18815__a, 0);
      }
      return G__18812__delegate.call(this, x, y, more);
    };
    G__18812.cljs$lang$maxFixedArity = 2;
    G__18812.cljs$lang$applyTo = function(arglist__18816) {
      var x = cljs.core.first(arglist__18816);
      arglist__18816 = cljs.core.next(arglist__18816);
      var y = cljs.core.first(arglist__18816);
      var more = cljs.core.rest(arglist__18816);
      return G__18812__delegate(x, y, more);
    };
    G__18812.cljs$core$IFn$_invoke$arity$variadic = G__18812__delegate;
    return G__18812;
  }();
  distinct_QMARK_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return distinct_QMARK___1.call(this, x);
      case 2:
        return distinct_QMARK___2.call(this, x, y);
      default:
        var G__18817 = null;
        if (arguments.length > 2) {
          var G__18818__i = 0, G__18818__a = new Array(arguments.length - 2);
          while (G__18818__i < G__18818__a.length) {
            G__18818__a[G__18818__i] = arguments[G__18818__i + 2];
            ++G__18818__i;
          }
          G__18817 = new cljs.core.IndexedSeq(G__18818__a, 0);
        }
        return distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__18817);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  distinct_QMARK_.cljs$lang$maxFixedArity = 2;
  distinct_QMARK_.cljs$lang$applyTo = distinct_QMARK___3.cljs$lang$applyTo;
  distinct_QMARK_.cljs$core$IFn$_invoke$arity$1 = distinct_QMARK___1;
  distinct_QMARK_.cljs$core$IFn$_invoke$arity$2 = distinct_QMARK___2;
  distinct_QMARK_.cljs$core$IFn$_invoke$arity$variadic = distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic;
  return distinct_QMARK_;
}();
cljs.core.compare = function compare(x, y) {
  if (x === y) {
    return 0;
  } else {
    if (x == null) {
      return-1;
    } else {
      if (y == null) {
        return 1;
      } else {
        if (cljs.core.type(x) === cljs.core.type(y)) {
          if (function() {
            var G__18822 = x;
            if (G__18822) {
              var bit__8178__auto__ = G__18822.cljs$lang$protocol_mask$partition1$ & 2048;
              if (bit__8178__auto__ || G__18822.cljs$core$IComparable$) {
                return true;
              } else {
                return false;
              }
            } else {
              return false;
            }
          }()) {
            return x.cljs$core$IComparable$_compare$arity$2(null, y);
          } else {
            var G__18823 = x;
            var G__18824 = y;
            return goog.array.defaultCompare(G__18823, G__18824);
          }
        } else {
          throw new Error("compare on non-nil objects of different types");
        }
      }
    }
  }
};
cljs.core.compare_indexed = function() {
  var compare_indexed = null;
  var compare_indexed__2 = function(xs, ys) {
    var xl = cljs.core.count(xs);
    var yl = cljs.core.count(ys);
    if (xl < yl) {
      return-1;
    } else {
      if (xl > yl) {
        return 1;
      } else {
        return compare_indexed.cljs$core$IFn$_invoke$arity$4(xs, ys, xl, 0);
      }
    }
  };
  var compare_indexed__4 = function(xs, ys, len, n) {
    while (true) {
      var d = cljs.core.compare(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(xs, n), cljs.core.nth.cljs$core$IFn$_invoke$arity$2(ys, n));
      if (d === 0 && n + 1 < len) {
        var G__18829 = xs;
        var G__18830 = ys;
        var G__18831 = len;
        var G__18832 = n + 1;
        xs = G__18829;
        ys = G__18830;
        len = G__18831;
        n = G__18832;
        continue;
      } else {
        return d;
      }
      break;
    }
  };
  compare_indexed = function(xs, ys, len, n) {
    switch(arguments.length) {
      case 2:
        return compare_indexed__2.call(this, xs, ys);
      case 4:
        return compare_indexed__4.call(this, xs, ys, len, n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  compare_indexed.cljs$core$IFn$_invoke$arity$2 = compare_indexed__2;
  compare_indexed.cljs$core$IFn$_invoke$arity$4 = compare_indexed__4;
  return compare_indexed;
}();
cljs.core.fn__GT_comparator = function fn__GT_comparator(f) {
  if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(f, cljs.core.compare)) {
    return cljs.core.compare;
  } else {
    return function(x, y) {
      var r = function() {
        var G__18837 = x;
        var G__18838 = y;
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__18837, G__18838) : f.call(null, G__18837, G__18838);
      }();
      if (typeof r === "number") {
        return r;
      } else {
        if (cljs.core.truth_(r)) {
          return-1;
        } else {
          if (cljs.core.truth_(function() {
            var G__18839 = y;
            var G__18840 = x;
            return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__18839, G__18840) : f.call(null, G__18839, G__18840);
          }())) {
            return 1;
          } else {
            return 0;
          }
        }
      }
    };
  }
};
cljs.core.sort = function() {
  var sort = null;
  var sort__1 = function(coll) {
    return sort.cljs$core$IFn$_invoke$arity$2(cljs.core.compare, coll);
  };
  var sort__2 = function(comp, coll) {
    if (cljs.core.seq(coll)) {
      var a = function() {
        var G__18846 = coll;
        return cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(G__18846) : cljs.core.to_array.call(null, G__18846);
      }();
      var G__18847_18849 = a;
      var G__18848_18850 = cljs.core.fn__GT_comparator(comp);
      goog.array.stableSort(G__18847_18849, G__18848_18850);
      return cljs.core.seq(a);
    } else {
      return cljs.core.List.EMPTY;
    }
  };
  sort = function(comp, coll) {
    switch(arguments.length) {
      case 1:
        return sort__1.call(this, comp);
      case 2:
        return sort__2.call(this, comp, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  sort.cljs$core$IFn$_invoke$arity$1 = sort__1;
  sort.cljs$core$IFn$_invoke$arity$2 = sort__2;
  return sort;
}();
cljs.core.sort_by = function() {
  var sort_by = null;
  var sort_by__2 = function(keyfn, coll) {
    return sort_by.cljs$core$IFn$_invoke$arity$3(keyfn, cljs.core.compare, coll);
  };
  var sort_by__3 = function(keyfn, comp, coll) {
    return cljs.core.sort.cljs$core$IFn$_invoke$arity$2(function(x, y) {
      return cljs.core.fn__GT_comparator(comp).call(null, function() {
        var G__18856 = x;
        return keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__18856) : keyfn.call(null, G__18856);
      }(), function() {
        var G__18857 = y;
        return keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__18857) : keyfn.call(null, G__18857);
      }());
    }, coll);
  };
  sort_by = function(keyfn, comp, coll) {
    switch(arguments.length) {
      case 2:
        return sort_by__2.call(this, keyfn, comp);
      case 3:
        return sort_by__3.call(this, keyfn, comp, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  sort_by.cljs$core$IFn$_invoke$arity$2 = sort_by__2;
  sort_by.cljs$core$IFn$_invoke$arity$3 = sort_by__3;
  return sort_by;
}();
cljs.core.seq_reduce = function() {
  var seq_reduce = null;
  var seq_reduce__2 = function(f, coll) {
    var temp__4124__auto__ = cljs.core.seq(coll);
    if (temp__4124__auto__) {
      var s = temp__4124__auto__;
      var G__18863 = f;
      var G__18864 = cljs.core.first(s);
      var G__18865 = cljs.core.next(s);
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(G__18863, G__18864, G__18865) : cljs.core.reduce.call(null, G__18863, G__18864, G__18865);
    } else {
      return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
    }
  };
  var seq_reduce__3 = function(f, val, coll) {
    var val__$1 = val;
    var coll__$1 = cljs.core.seq(coll);
    while (true) {
      if (coll__$1) {
        var nval = function() {
          var G__18866 = val__$1;
          var G__18867 = cljs.core.first(coll__$1);
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__18866, G__18867) : f.call(null, G__18866, G__18867);
        }();
        if (cljs.core.reduced_QMARK_(nval)) {
          return cljs.core.deref(nval);
        } else {
          var G__18868 = nval;
          var G__18869 = cljs.core.next(coll__$1);
          val__$1 = G__18868;
          coll__$1 = G__18869;
          continue;
        }
      } else {
        return val__$1;
      }
      break;
    }
  };
  seq_reduce = function(f, val, coll) {
    switch(arguments.length) {
      case 2:
        return seq_reduce__2.call(this, f, val);
      case 3:
        return seq_reduce__3.call(this, f, val, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  seq_reduce.cljs$core$IFn$_invoke$arity$2 = seq_reduce__2;
  seq_reduce.cljs$core$IFn$_invoke$arity$3 = seq_reduce__3;
  return seq_reduce;
}();
cljs.core.shuffle = function shuffle(coll) {
  var a = function() {
    var G__18873 = coll;
    return cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(G__18873) : cljs.core.to_array.call(null, G__18873);
  }();
  var G__18874_18876 = a;
  goog.array.shuffle(G__18874_18876);
  var G__18875 = a;
  return cljs.core.vec.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vec.cljs$core$IFn$_invoke$arity$1(G__18875) : cljs.core.vec.call(null, G__18875);
};
cljs.core.reduce = function() {
  var reduce = null;
  var reduce__2 = function(f, coll) {
    if (function() {
      var G__18879 = coll;
      if (G__18879) {
        var bit__8178__auto__ = G__18879.cljs$lang$protocol_mask$partition0$ & 524288;
        if (bit__8178__auto__ || G__18879.cljs$core$IReduce$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return coll.cljs$core$IReduce$_reduce$arity$2(null, f);
    } else {
      if (coll instanceof Array) {
        return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll, f);
      } else {
        if (typeof coll === "string") {
          return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll, f);
        } else {
          if (cljs.core.native_satisfies_QMARK_(cljs.core.IReduce, coll)) {
            return cljs.core._reduce.cljs$core$IFn$_invoke$arity$2(coll, f);
          } else {
            return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll);
          }
        }
      }
    }
  };
  var reduce__3 = function(f, val, coll) {
    if (function() {
      var G__18880 = coll;
      if (G__18880) {
        var bit__8178__auto__ = G__18880.cljs$lang$protocol_mask$partition0$ & 524288;
        if (bit__8178__auto__ || G__18880.cljs$core$IReduce$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return coll.cljs$core$IReduce$_reduce$arity$3(null, f, val);
    } else {
      if (coll instanceof Array) {
        return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll, f, val);
      } else {
        if (typeof coll === "string") {
          return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll, f, val);
        } else {
          if (cljs.core.native_satisfies_QMARK_(cljs.core.IReduce, coll)) {
            return cljs.core._reduce.cljs$core$IFn$_invoke$arity$3(coll, f, val);
          } else {
            return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, val, coll);
          }
        }
      }
    }
  };
  reduce = function(f, val, coll) {
    switch(arguments.length) {
      case 2:
        return reduce__2.call(this, f, val);
      case 3:
        return reduce__3.call(this, f, val, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  reduce.cljs$core$IFn$_invoke$arity$2 = reduce__2;
  reduce.cljs$core$IFn$_invoke$arity$3 = reduce__3;
  return reduce;
}();
cljs.core.reduce_kv = function reduce_kv(f, init, coll) {
  if (!(coll == null)) {
    return cljs.core._kv_reduce(coll, f, init);
  } else {
    return init;
  }
};
cljs.core.identity = function identity(x) {
  return x;
};
cljs.core.completing = function() {
  var completing = null;
  var completing__1 = function(f) {
    return completing.cljs$core$IFn$_invoke$arity$2(f, cljs.core.identity);
  };
  var completing__2 = function(f, cf) {
    return function() {
      var G__18889 = null;
      var G__18889__0 = function() {
        return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
      };
      var G__18889__1 = function(x) {
        var G__18886 = x;
        return cf.cljs$core$IFn$_invoke$arity$1 ? cf.cljs$core$IFn$_invoke$arity$1(G__18886) : cf.call(null, G__18886);
      };
      var G__18889__2 = function(x, y) {
        var G__18887 = x;
        var G__18888 = y;
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__18887, G__18888) : f.call(null, G__18887, G__18888);
      };
      G__18889 = function(x, y) {
        switch(arguments.length) {
          case 0:
            return G__18889__0.call(this);
          case 1:
            return G__18889__1.call(this, x);
          case 2:
            return G__18889__2.call(this, x, y);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__18889.cljs$core$IFn$_invoke$arity$0 = G__18889__0;
      G__18889.cljs$core$IFn$_invoke$arity$1 = G__18889__1;
      G__18889.cljs$core$IFn$_invoke$arity$2 = G__18889__2;
      return G__18889;
    }();
  };
  completing = function(f, cf) {
    switch(arguments.length) {
      case 1:
        return completing__1.call(this, f);
      case 2:
        return completing__2.call(this, f, cf);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  completing.cljs$core$IFn$_invoke$arity$1 = completing__1;
  completing.cljs$core$IFn$_invoke$arity$2 = completing__2;
  return completing;
}();
cljs.core.transduce = function() {
  var transduce = null;
  var transduce__3 = function(xform, f, coll) {
    return transduce.cljs$core$IFn$_invoke$arity$4(xform, f, function() {
      return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
    }(), coll);
  };
  var transduce__4 = function(xform, f, init, coll) {
    var f__$1 = function() {
      var G__18896 = f;
      return xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__18896) : xform.call(null, G__18896);
    }();
    var ret = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(f__$1, init, coll);
    var G__18897 = ret;
    return f__$1.cljs$core$IFn$_invoke$arity$1 ? f__$1.cljs$core$IFn$_invoke$arity$1(G__18897) : f__$1.call(null, G__18897);
  };
  transduce = function(xform, f, init, coll) {
    switch(arguments.length) {
      case 3:
        return transduce__3.call(this, xform, f, init);
      case 4:
        return transduce__4.call(this, xform, f, init, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  transduce.cljs$core$IFn$_invoke$arity$3 = transduce__3;
  transduce.cljs$core$IFn$_invoke$arity$4 = transduce__4;
  return transduce;
}();
cljs.core._PLUS_ = function() {
  var _PLUS_ = null;
  var _PLUS___0 = function() {
    return 0;
  };
  var _PLUS___1 = function(x) {
    return x;
  };
  var _PLUS___2 = function(x, y) {
    return x + y;
  };
  var _PLUS___3 = function() {
    var G__18898__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_PLUS_, x + y, more);
    };
    var G__18898 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__18899__i = 0, G__18899__a = new Array(arguments.length - 2);
        while (G__18899__i < G__18899__a.length) {
          G__18899__a[G__18899__i] = arguments[G__18899__i + 2];
          ++G__18899__i;
        }
        more = new cljs.core.IndexedSeq(G__18899__a, 0);
      }
      return G__18898__delegate.call(this, x, y, more);
    };
    G__18898.cljs$lang$maxFixedArity = 2;
    G__18898.cljs$lang$applyTo = function(arglist__18900) {
      var x = cljs.core.first(arglist__18900);
      arglist__18900 = cljs.core.next(arglist__18900);
      var y = cljs.core.first(arglist__18900);
      var more = cljs.core.rest(arglist__18900);
      return G__18898__delegate(x, y, more);
    };
    G__18898.cljs$core$IFn$_invoke$arity$variadic = G__18898__delegate;
    return G__18898;
  }();
  _PLUS_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return _PLUS___0.call(this);
      case 1:
        return _PLUS___1.call(this, x);
      case 2:
        return _PLUS___2.call(this, x, y);
      default:
        var G__18901 = null;
        if (arguments.length > 2) {
          var G__18902__i = 0, G__18902__a = new Array(arguments.length - 2);
          while (G__18902__i < G__18902__a.length) {
            G__18902__a[G__18902__i] = arguments[G__18902__i + 2];
            ++G__18902__i;
          }
          G__18901 = new cljs.core.IndexedSeq(G__18902__a, 0);
        }
        return _PLUS___3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__18901);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _PLUS_.cljs$lang$maxFixedArity = 2;
  _PLUS_.cljs$lang$applyTo = _PLUS___3.cljs$lang$applyTo;
  _PLUS_.cljs$core$IFn$_invoke$arity$0 = _PLUS___0;
  _PLUS_.cljs$core$IFn$_invoke$arity$1 = _PLUS___1;
  _PLUS_.cljs$core$IFn$_invoke$arity$2 = _PLUS___2;
  _PLUS_.cljs$core$IFn$_invoke$arity$variadic = _PLUS___3.cljs$core$IFn$_invoke$arity$variadic;
  return _PLUS_;
}();
cljs.core._ = function() {
  var _ = null;
  var ___1 = function(x) {
    return-x;
  };
  var ___2 = function(x, y) {
    return x - y;
  };
  var ___3 = function() {
    var G__18903__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_, x - y, more);
    };
    var G__18903 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__18904__i = 0, G__18904__a = new Array(arguments.length - 2);
        while (G__18904__i < G__18904__a.length) {
          G__18904__a[G__18904__i] = arguments[G__18904__i + 2];
          ++G__18904__i;
        }
        more = new cljs.core.IndexedSeq(G__18904__a, 0);
      }
      return G__18903__delegate.call(this, x, y, more);
    };
    G__18903.cljs$lang$maxFixedArity = 2;
    G__18903.cljs$lang$applyTo = function(arglist__18905) {
      var x = cljs.core.first(arglist__18905);
      arglist__18905 = cljs.core.next(arglist__18905);
      var y = cljs.core.first(arglist__18905);
      var more = cljs.core.rest(arglist__18905);
      return G__18903__delegate(x, y, more);
    };
    G__18903.cljs$core$IFn$_invoke$arity$variadic = G__18903__delegate;
    return G__18903;
  }();
  _ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return ___1.call(this, x);
      case 2:
        return ___2.call(this, x, y);
      default:
        var G__18906 = null;
        if (arguments.length > 2) {
          var G__18907__i = 0, G__18907__a = new Array(arguments.length - 2);
          while (G__18907__i < G__18907__a.length) {
            G__18907__a[G__18907__i] = arguments[G__18907__i + 2];
            ++G__18907__i;
          }
          G__18906 = new cljs.core.IndexedSeq(G__18907__a, 0);
        }
        return ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__18906);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _.cljs$lang$maxFixedArity = 2;
  _.cljs$lang$applyTo = ___3.cljs$lang$applyTo;
  _.cljs$core$IFn$_invoke$arity$1 = ___1;
  _.cljs$core$IFn$_invoke$arity$2 = ___2;
  _.cljs$core$IFn$_invoke$arity$variadic = ___3.cljs$core$IFn$_invoke$arity$variadic;
  return _;
}();
cljs.core._STAR_ = function() {
  var _STAR_ = null;
  var _STAR___0 = function() {
    return 1;
  };
  var _STAR___1 = function(x) {
    return x;
  };
  var _STAR___2 = function(x, y) {
    return x * y;
  };
  var _STAR___3 = function() {
    var G__18908__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_STAR_, x * y, more);
    };
    var G__18908 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__18909__i = 0, G__18909__a = new Array(arguments.length - 2);
        while (G__18909__i < G__18909__a.length) {
          G__18909__a[G__18909__i] = arguments[G__18909__i + 2];
          ++G__18909__i;
        }
        more = new cljs.core.IndexedSeq(G__18909__a, 0);
      }
      return G__18908__delegate.call(this, x, y, more);
    };
    G__18908.cljs$lang$maxFixedArity = 2;
    G__18908.cljs$lang$applyTo = function(arglist__18910) {
      var x = cljs.core.first(arglist__18910);
      arglist__18910 = cljs.core.next(arglist__18910);
      var y = cljs.core.first(arglist__18910);
      var more = cljs.core.rest(arglist__18910);
      return G__18908__delegate(x, y, more);
    };
    G__18908.cljs$core$IFn$_invoke$arity$variadic = G__18908__delegate;
    return G__18908;
  }();
  _STAR_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return _STAR___0.call(this);
      case 1:
        return _STAR___1.call(this, x);
      case 2:
        return _STAR___2.call(this, x, y);
      default:
        var G__18911 = null;
        if (arguments.length > 2) {
          var G__18912__i = 0, G__18912__a = new Array(arguments.length - 2);
          while (G__18912__i < G__18912__a.length) {
            G__18912__a[G__18912__i] = arguments[G__18912__i + 2];
            ++G__18912__i;
          }
          G__18911 = new cljs.core.IndexedSeq(G__18912__a, 0);
        }
        return _STAR___3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__18911);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _STAR_.cljs$lang$maxFixedArity = 2;
  _STAR_.cljs$lang$applyTo = _STAR___3.cljs$lang$applyTo;
  _STAR_.cljs$core$IFn$_invoke$arity$0 = _STAR___0;
  _STAR_.cljs$core$IFn$_invoke$arity$1 = _STAR___1;
  _STAR_.cljs$core$IFn$_invoke$arity$2 = _STAR___2;
  _STAR_.cljs$core$IFn$_invoke$arity$variadic = _STAR___3.cljs$core$IFn$_invoke$arity$variadic;
  return _STAR_;
}();
cljs.core._SLASH_ = function() {
  var _SLASH_ = null;
  var _SLASH___1 = function(x) {
    return _SLASH_.cljs$core$IFn$_invoke$arity$2(1, x);
  };
  var _SLASH___2 = function(x, y) {
    return x / y;
  };
  var _SLASH___3 = function() {
    var G__18917__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_SLASH_, _SLASH_.cljs$core$IFn$_invoke$arity$2(x, y), more);
    };
    var G__18917 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__18918__i = 0, G__18918__a = new Array(arguments.length - 2);
        while (G__18918__i < G__18918__a.length) {
          G__18918__a[G__18918__i] = arguments[G__18918__i + 2];
          ++G__18918__i;
        }
        more = new cljs.core.IndexedSeq(G__18918__a, 0);
      }
      return G__18917__delegate.call(this, x, y, more);
    };
    G__18917.cljs$lang$maxFixedArity = 2;
    G__18917.cljs$lang$applyTo = function(arglist__18919) {
      var x = cljs.core.first(arglist__18919);
      arglist__18919 = cljs.core.next(arglist__18919);
      var y = cljs.core.first(arglist__18919);
      var more = cljs.core.rest(arglist__18919);
      return G__18917__delegate(x, y, more);
    };
    G__18917.cljs$core$IFn$_invoke$arity$variadic = G__18917__delegate;
    return G__18917;
  }();
  _SLASH_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _SLASH___1.call(this, x);
      case 2:
        return _SLASH___2.call(this, x, y);
      default:
        var G__18920 = null;
        if (arguments.length > 2) {
          var G__18921__i = 0, G__18921__a = new Array(arguments.length - 2);
          while (G__18921__i < G__18921__a.length) {
            G__18921__a[G__18921__i] = arguments[G__18921__i + 2];
            ++G__18921__i;
          }
          G__18920 = new cljs.core.IndexedSeq(G__18921__a, 0);
        }
        return _SLASH___3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__18920);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _SLASH_.cljs$lang$maxFixedArity = 2;
  _SLASH_.cljs$lang$applyTo = _SLASH___3.cljs$lang$applyTo;
  _SLASH_.cljs$core$IFn$_invoke$arity$1 = _SLASH___1;
  _SLASH_.cljs$core$IFn$_invoke$arity$2 = _SLASH___2;
  _SLASH_.cljs$core$IFn$_invoke$arity$variadic = _SLASH___3.cljs$core$IFn$_invoke$arity$variadic;
  return _SLASH_;
}();
cljs.core._LT_ = function() {
  var _LT_ = null;
  var _LT___1 = function(x) {
    return true;
  };
  var _LT___2 = function(x, y) {
    return x < y;
  };
  var _LT___3 = function() {
    var G__18922__delegate = function(x, y, more) {
      while (true) {
        if (x < y) {
          if (cljs.core.next(more)) {
            var G__18923 = y;
            var G__18924 = cljs.core.first(more);
            var G__18925 = cljs.core.next(more);
            x = G__18923;
            y = G__18924;
            more = G__18925;
            continue;
          } else {
            return y < cljs.core.first(more);
          }
        } else {
          return false;
        }
        break;
      }
    };
    var G__18922 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__18926__i = 0, G__18926__a = new Array(arguments.length - 2);
        while (G__18926__i < G__18926__a.length) {
          G__18926__a[G__18926__i] = arguments[G__18926__i + 2];
          ++G__18926__i;
        }
        more = new cljs.core.IndexedSeq(G__18926__a, 0);
      }
      return G__18922__delegate.call(this, x, y, more);
    };
    G__18922.cljs$lang$maxFixedArity = 2;
    G__18922.cljs$lang$applyTo = function(arglist__18927) {
      var x = cljs.core.first(arglist__18927);
      arglist__18927 = cljs.core.next(arglist__18927);
      var y = cljs.core.first(arglist__18927);
      var more = cljs.core.rest(arglist__18927);
      return G__18922__delegate(x, y, more);
    };
    G__18922.cljs$core$IFn$_invoke$arity$variadic = G__18922__delegate;
    return G__18922;
  }();
  _LT_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _LT___1.call(this, x);
      case 2:
        return _LT___2.call(this, x, y);
      default:
        var G__18928 = null;
        if (arguments.length > 2) {
          var G__18929__i = 0, G__18929__a = new Array(arguments.length - 2);
          while (G__18929__i < G__18929__a.length) {
            G__18929__a[G__18929__i] = arguments[G__18929__i + 2];
            ++G__18929__i;
          }
          G__18928 = new cljs.core.IndexedSeq(G__18929__a, 0);
        }
        return _LT___3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__18928);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _LT_.cljs$lang$maxFixedArity = 2;
  _LT_.cljs$lang$applyTo = _LT___3.cljs$lang$applyTo;
  _LT_.cljs$core$IFn$_invoke$arity$1 = _LT___1;
  _LT_.cljs$core$IFn$_invoke$arity$2 = _LT___2;
  _LT_.cljs$core$IFn$_invoke$arity$variadic = _LT___3.cljs$core$IFn$_invoke$arity$variadic;
  return _LT_;
}();
cljs.core._LT__EQ_ = function() {
  var _LT__EQ_ = null;
  var _LT__EQ___1 = function(x) {
    return true;
  };
  var _LT__EQ___2 = function(x, y) {
    return x <= y;
  };
  var _LT__EQ___3 = function() {
    var G__18930__delegate = function(x, y, more) {
      while (true) {
        if (x <= y) {
          if (cljs.core.next(more)) {
            var G__18931 = y;
            var G__18932 = cljs.core.first(more);
            var G__18933 = cljs.core.next(more);
            x = G__18931;
            y = G__18932;
            more = G__18933;
            continue;
          } else {
            return y <= cljs.core.first(more);
          }
        } else {
          return false;
        }
        break;
      }
    };
    var G__18930 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__18934__i = 0, G__18934__a = new Array(arguments.length - 2);
        while (G__18934__i < G__18934__a.length) {
          G__18934__a[G__18934__i] = arguments[G__18934__i + 2];
          ++G__18934__i;
        }
        more = new cljs.core.IndexedSeq(G__18934__a, 0);
      }
      return G__18930__delegate.call(this, x, y, more);
    };
    G__18930.cljs$lang$maxFixedArity = 2;
    G__18930.cljs$lang$applyTo = function(arglist__18935) {
      var x = cljs.core.first(arglist__18935);
      arglist__18935 = cljs.core.next(arglist__18935);
      var y = cljs.core.first(arglist__18935);
      var more = cljs.core.rest(arglist__18935);
      return G__18930__delegate(x, y, more);
    };
    G__18930.cljs$core$IFn$_invoke$arity$variadic = G__18930__delegate;
    return G__18930;
  }();
  _LT__EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _LT__EQ___1.call(this, x);
      case 2:
        return _LT__EQ___2.call(this, x, y);
      default:
        var G__18936 = null;
        if (arguments.length > 2) {
          var G__18937__i = 0, G__18937__a = new Array(arguments.length - 2);
          while (G__18937__i < G__18937__a.length) {
            G__18937__a[G__18937__i] = arguments[G__18937__i + 2];
            ++G__18937__i;
          }
          G__18936 = new cljs.core.IndexedSeq(G__18937__a, 0);
        }
        return _LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__18936);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _LT__EQ_.cljs$lang$maxFixedArity = 2;
  _LT__EQ_.cljs$lang$applyTo = _LT__EQ___3.cljs$lang$applyTo;
  _LT__EQ_.cljs$core$IFn$_invoke$arity$1 = _LT__EQ___1;
  _LT__EQ_.cljs$core$IFn$_invoke$arity$2 = _LT__EQ___2;
  _LT__EQ_.cljs$core$IFn$_invoke$arity$variadic = _LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return _LT__EQ_;
}();
cljs.core._GT_ = function() {
  var _GT_ = null;
  var _GT___1 = function(x) {
    return true;
  };
  var _GT___2 = function(x, y) {
    return x > y;
  };
  var _GT___3 = function() {
    var G__18938__delegate = function(x, y, more) {
      while (true) {
        if (x > y) {
          if (cljs.core.next(more)) {
            var G__18939 = y;
            var G__18940 = cljs.core.first(more);
            var G__18941 = cljs.core.next(more);
            x = G__18939;
            y = G__18940;
            more = G__18941;
            continue;
          } else {
            return y > cljs.core.first(more);
          }
        } else {
          return false;
        }
        break;
      }
    };
    var G__18938 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__18942__i = 0, G__18942__a = new Array(arguments.length - 2);
        while (G__18942__i < G__18942__a.length) {
          G__18942__a[G__18942__i] = arguments[G__18942__i + 2];
          ++G__18942__i;
        }
        more = new cljs.core.IndexedSeq(G__18942__a, 0);
      }
      return G__18938__delegate.call(this, x, y, more);
    };
    G__18938.cljs$lang$maxFixedArity = 2;
    G__18938.cljs$lang$applyTo = function(arglist__18943) {
      var x = cljs.core.first(arglist__18943);
      arglist__18943 = cljs.core.next(arglist__18943);
      var y = cljs.core.first(arglist__18943);
      var more = cljs.core.rest(arglist__18943);
      return G__18938__delegate(x, y, more);
    };
    G__18938.cljs$core$IFn$_invoke$arity$variadic = G__18938__delegate;
    return G__18938;
  }();
  _GT_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _GT___1.call(this, x);
      case 2:
        return _GT___2.call(this, x, y);
      default:
        var G__18944 = null;
        if (arguments.length > 2) {
          var G__18945__i = 0, G__18945__a = new Array(arguments.length - 2);
          while (G__18945__i < G__18945__a.length) {
            G__18945__a[G__18945__i] = arguments[G__18945__i + 2];
            ++G__18945__i;
          }
          G__18944 = new cljs.core.IndexedSeq(G__18945__a, 0);
        }
        return _GT___3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__18944);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _GT_.cljs$lang$maxFixedArity = 2;
  _GT_.cljs$lang$applyTo = _GT___3.cljs$lang$applyTo;
  _GT_.cljs$core$IFn$_invoke$arity$1 = _GT___1;
  _GT_.cljs$core$IFn$_invoke$arity$2 = _GT___2;
  _GT_.cljs$core$IFn$_invoke$arity$variadic = _GT___3.cljs$core$IFn$_invoke$arity$variadic;
  return _GT_;
}();
cljs.core._GT__EQ_ = function() {
  var _GT__EQ_ = null;
  var _GT__EQ___1 = function(x) {
    return true;
  };
  var _GT__EQ___2 = function(x, y) {
    return x >= y;
  };
  var _GT__EQ___3 = function() {
    var G__18946__delegate = function(x, y, more) {
      while (true) {
        if (x >= y) {
          if (cljs.core.next(more)) {
            var G__18947 = y;
            var G__18948 = cljs.core.first(more);
            var G__18949 = cljs.core.next(more);
            x = G__18947;
            y = G__18948;
            more = G__18949;
            continue;
          } else {
            return y >= cljs.core.first(more);
          }
        } else {
          return false;
        }
        break;
      }
    };
    var G__18946 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__18950__i = 0, G__18950__a = new Array(arguments.length - 2);
        while (G__18950__i < G__18950__a.length) {
          G__18950__a[G__18950__i] = arguments[G__18950__i + 2];
          ++G__18950__i;
        }
        more = new cljs.core.IndexedSeq(G__18950__a, 0);
      }
      return G__18946__delegate.call(this, x, y, more);
    };
    G__18946.cljs$lang$maxFixedArity = 2;
    G__18946.cljs$lang$applyTo = function(arglist__18951) {
      var x = cljs.core.first(arglist__18951);
      arglist__18951 = cljs.core.next(arglist__18951);
      var y = cljs.core.first(arglist__18951);
      var more = cljs.core.rest(arglist__18951);
      return G__18946__delegate(x, y, more);
    };
    G__18946.cljs$core$IFn$_invoke$arity$variadic = G__18946__delegate;
    return G__18946;
  }();
  _GT__EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _GT__EQ___1.call(this, x);
      case 2:
        return _GT__EQ___2.call(this, x, y);
      default:
        var G__18952 = null;
        if (arguments.length > 2) {
          var G__18953__i = 0, G__18953__a = new Array(arguments.length - 2);
          while (G__18953__i < G__18953__a.length) {
            G__18953__a[G__18953__i] = arguments[G__18953__i + 2];
            ++G__18953__i;
          }
          G__18952 = new cljs.core.IndexedSeq(G__18953__a, 0);
        }
        return _GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__18952);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _GT__EQ_.cljs$lang$maxFixedArity = 2;
  _GT__EQ_.cljs$lang$applyTo = _GT__EQ___3.cljs$lang$applyTo;
  _GT__EQ_.cljs$core$IFn$_invoke$arity$1 = _GT__EQ___1;
  _GT__EQ_.cljs$core$IFn$_invoke$arity$2 = _GT__EQ___2;
  _GT__EQ_.cljs$core$IFn$_invoke$arity$variadic = _GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return _GT__EQ_;
}();
cljs.core.dec = function dec(x) {
  return x - 1;
};
cljs.core.max = function() {
  var max = null;
  var max__1 = function(x) {
    return x;
  };
  var max__2 = function(x, y) {
    var x__7821__auto__ = x;
    var y__7822__auto__ = y;
    return x__7821__auto__ > y__7822__auto__ ? x__7821__auto__ : y__7822__auto__;
  };
  var max__3 = function() {
    var G__18954__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(max, function() {
        var x__7821__auto__ = x;
        var y__7822__auto__ = y;
        return x__7821__auto__ > y__7822__auto__ ? x__7821__auto__ : y__7822__auto__;
      }(), more);
    };
    var G__18954 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__18955__i = 0, G__18955__a = new Array(arguments.length - 2);
        while (G__18955__i < G__18955__a.length) {
          G__18955__a[G__18955__i] = arguments[G__18955__i + 2];
          ++G__18955__i;
        }
        more = new cljs.core.IndexedSeq(G__18955__a, 0);
      }
      return G__18954__delegate.call(this, x, y, more);
    };
    G__18954.cljs$lang$maxFixedArity = 2;
    G__18954.cljs$lang$applyTo = function(arglist__18956) {
      var x = cljs.core.first(arglist__18956);
      arglist__18956 = cljs.core.next(arglist__18956);
      var y = cljs.core.first(arglist__18956);
      var more = cljs.core.rest(arglist__18956);
      return G__18954__delegate(x, y, more);
    };
    G__18954.cljs$core$IFn$_invoke$arity$variadic = G__18954__delegate;
    return G__18954;
  }();
  max = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return max__1.call(this, x);
      case 2:
        return max__2.call(this, x, y);
      default:
        var G__18957 = null;
        if (arguments.length > 2) {
          var G__18958__i = 0, G__18958__a = new Array(arguments.length - 2);
          while (G__18958__i < G__18958__a.length) {
            G__18958__a[G__18958__i] = arguments[G__18958__i + 2];
            ++G__18958__i;
          }
          G__18957 = new cljs.core.IndexedSeq(G__18958__a, 0);
        }
        return max__3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__18957);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  max.cljs$lang$maxFixedArity = 2;
  max.cljs$lang$applyTo = max__3.cljs$lang$applyTo;
  max.cljs$core$IFn$_invoke$arity$1 = max__1;
  max.cljs$core$IFn$_invoke$arity$2 = max__2;
  max.cljs$core$IFn$_invoke$arity$variadic = max__3.cljs$core$IFn$_invoke$arity$variadic;
  return max;
}();
cljs.core.min = function() {
  var min = null;
  var min__1 = function(x) {
    return x;
  };
  var min__2 = function(x, y) {
    var x__7828__auto__ = x;
    var y__7829__auto__ = y;
    return x__7828__auto__ < y__7829__auto__ ? x__7828__auto__ : y__7829__auto__;
  };
  var min__3 = function() {
    var G__18959__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(min, function() {
        var x__7828__auto__ = x;
        var y__7829__auto__ = y;
        return x__7828__auto__ < y__7829__auto__ ? x__7828__auto__ : y__7829__auto__;
      }(), more);
    };
    var G__18959 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__18960__i = 0, G__18960__a = new Array(arguments.length - 2);
        while (G__18960__i < G__18960__a.length) {
          G__18960__a[G__18960__i] = arguments[G__18960__i + 2];
          ++G__18960__i;
        }
        more = new cljs.core.IndexedSeq(G__18960__a, 0);
      }
      return G__18959__delegate.call(this, x, y, more);
    };
    G__18959.cljs$lang$maxFixedArity = 2;
    G__18959.cljs$lang$applyTo = function(arglist__18961) {
      var x = cljs.core.first(arglist__18961);
      arglist__18961 = cljs.core.next(arglist__18961);
      var y = cljs.core.first(arglist__18961);
      var more = cljs.core.rest(arglist__18961);
      return G__18959__delegate(x, y, more);
    };
    G__18959.cljs$core$IFn$_invoke$arity$variadic = G__18959__delegate;
    return G__18959;
  }();
  min = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return min__1.call(this, x);
      case 2:
        return min__2.call(this, x, y);
      default:
        var G__18962 = null;
        if (arguments.length > 2) {
          var G__18963__i = 0, G__18963__a = new Array(arguments.length - 2);
          while (G__18963__i < G__18963__a.length) {
            G__18963__a[G__18963__i] = arguments[G__18963__i + 2];
            ++G__18963__i;
          }
          G__18962 = new cljs.core.IndexedSeq(G__18963__a, 0);
        }
        return min__3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__18962);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  min.cljs$lang$maxFixedArity = 2;
  min.cljs$lang$applyTo = min__3.cljs$lang$applyTo;
  min.cljs$core$IFn$_invoke$arity$1 = min__1;
  min.cljs$core$IFn$_invoke$arity$2 = min__2;
  min.cljs$core$IFn$_invoke$arity$variadic = min__3.cljs$core$IFn$_invoke$arity$variadic;
  return min;
}();
cljs.core.byte$ = function byte$(x) {
  return x;
};
cljs.core.char$ = function char$(x) {
  if (typeof x === "number") {
    return String.fromCharCode(x);
  } else {
    if (typeof x === "string" && x.length === 1) {
      return x;
    } else {
      throw new Error("Argument to char must be a character or number");
    }
  }
};
cljs.core.short$ = function short$(x) {
  return x;
};
cljs.core.float$ = function float$(x) {
  return x;
};
cljs.core.double$ = function double$(x) {
  return x;
};
cljs.core.unchecked_byte = function unchecked_byte(x) {
  return x;
};
cljs.core.unchecked_char = function unchecked_char(x) {
  return x;
};
cljs.core.unchecked_short = function unchecked_short(x) {
  return x;
};
cljs.core.unchecked_float = function unchecked_float(x) {
  return x;
};
cljs.core.unchecked_double = function unchecked_double(x) {
  return x;
};
cljs.core.unchecked_add = function() {
  var unchecked_add = null;
  var unchecked_add__0 = function() {
    return 0;
  };
  var unchecked_add__1 = function(x) {
    return x;
  };
  var unchecked_add__2 = function(x, y) {
    return x + y;
  };
  var unchecked_add__3 = function() {
    var G__18964__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_add, x + y, more);
    };
    var G__18964 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__18965__i = 0, G__18965__a = new Array(arguments.length - 2);
        while (G__18965__i < G__18965__a.length) {
          G__18965__a[G__18965__i] = arguments[G__18965__i + 2];
          ++G__18965__i;
        }
        more = new cljs.core.IndexedSeq(G__18965__a, 0);
      }
      return G__18964__delegate.call(this, x, y, more);
    };
    G__18964.cljs$lang$maxFixedArity = 2;
    G__18964.cljs$lang$applyTo = function(arglist__18966) {
      var x = cljs.core.first(arglist__18966);
      arglist__18966 = cljs.core.next(arglist__18966);
      var y = cljs.core.first(arglist__18966);
      var more = cljs.core.rest(arglist__18966);
      return G__18964__delegate(x, y, more);
    };
    G__18964.cljs$core$IFn$_invoke$arity$variadic = G__18964__delegate;
    return G__18964;
  }();
  unchecked_add = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return unchecked_add__0.call(this);
      case 1:
        return unchecked_add__1.call(this, x);
      case 2:
        return unchecked_add__2.call(this, x, y);
      default:
        var G__18967 = null;
        if (arguments.length > 2) {
          var G__18968__i = 0, G__18968__a = new Array(arguments.length - 2);
          while (G__18968__i < G__18968__a.length) {
            G__18968__a[G__18968__i] = arguments[G__18968__i + 2];
            ++G__18968__i;
          }
          G__18967 = new cljs.core.IndexedSeq(G__18968__a, 0);
        }
        return unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__18967);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_add.cljs$lang$maxFixedArity = 2;
  unchecked_add.cljs$lang$applyTo = unchecked_add__3.cljs$lang$applyTo;
  unchecked_add.cljs$core$IFn$_invoke$arity$0 = unchecked_add__0;
  unchecked_add.cljs$core$IFn$_invoke$arity$1 = unchecked_add__1;
  unchecked_add.cljs$core$IFn$_invoke$arity$2 = unchecked_add__2;
  unchecked_add.cljs$core$IFn$_invoke$arity$variadic = unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_add;
}();
cljs.core.unchecked_add_int = function() {
  var unchecked_add_int = null;
  var unchecked_add_int__0 = function() {
    return 0;
  };
  var unchecked_add_int__1 = function(x) {
    return x;
  };
  var unchecked_add_int__2 = function(x, y) {
    return x + y;
  };
  var unchecked_add_int__3 = function() {
    var G__18969__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_add_int, x + y, more);
    };
    var G__18969 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__18970__i = 0, G__18970__a = new Array(arguments.length - 2);
        while (G__18970__i < G__18970__a.length) {
          G__18970__a[G__18970__i] = arguments[G__18970__i + 2];
          ++G__18970__i;
        }
        more = new cljs.core.IndexedSeq(G__18970__a, 0);
      }
      return G__18969__delegate.call(this, x, y, more);
    };
    G__18969.cljs$lang$maxFixedArity = 2;
    G__18969.cljs$lang$applyTo = function(arglist__18971) {
      var x = cljs.core.first(arglist__18971);
      arglist__18971 = cljs.core.next(arglist__18971);
      var y = cljs.core.first(arglist__18971);
      var more = cljs.core.rest(arglist__18971);
      return G__18969__delegate(x, y, more);
    };
    G__18969.cljs$core$IFn$_invoke$arity$variadic = G__18969__delegate;
    return G__18969;
  }();
  unchecked_add_int = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return unchecked_add_int__0.call(this);
      case 1:
        return unchecked_add_int__1.call(this, x);
      case 2:
        return unchecked_add_int__2.call(this, x, y);
      default:
        var G__18972 = null;
        if (arguments.length > 2) {
          var G__18973__i = 0, G__18973__a = new Array(arguments.length - 2);
          while (G__18973__i < G__18973__a.length) {
            G__18973__a[G__18973__i] = arguments[G__18973__i + 2];
            ++G__18973__i;
          }
          G__18972 = new cljs.core.IndexedSeq(G__18973__a, 0);
        }
        return unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__18972);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_add_int.cljs$lang$maxFixedArity = 2;
  unchecked_add_int.cljs$lang$applyTo = unchecked_add_int__3.cljs$lang$applyTo;
  unchecked_add_int.cljs$core$IFn$_invoke$arity$0 = unchecked_add_int__0;
  unchecked_add_int.cljs$core$IFn$_invoke$arity$1 = unchecked_add_int__1;
  unchecked_add_int.cljs$core$IFn$_invoke$arity$2 = unchecked_add_int__2;
  unchecked_add_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_add_int;
}();
cljs.core.unchecked_dec = function unchecked_dec(x) {
  return x - 1;
};
cljs.core.unchecked_dec_int = function unchecked_dec_int(x) {
  return x - 1;
};
cljs.core.unchecked_divide_int = function() {
  var unchecked_divide_int = null;
  var unchecked_divide_int__1 = function(x) {
    return unchecked_divide_int.cljs$core$IFn$_invoke$arity$2(1, x);
  };
  var unchecked_divide_int__2 = function(x, y) {
    return x / y;
  };
  var unchecked_divide_int__3 = function() {
    var G__18978__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_divide_int, unchecked_divide_int.cljs$core$IFn$_invoke$arity$2(x, y), more);
    };
    var G__18978 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__18979__i = 0, G__18979__a = new Array(arguments.length - 2);
        while (G__18979__i < G__18979__a.length) {
          G__18979__a[G__18979__i] = arguments[G__18979__i + 2];
          ++G__18979__i;
        }
        more = new cljs.core.IndexedSeq(G__18979__a, 0);
      }
      return G__18978__delegate.call(this, x, y, more);
    };
    G__18978.cljs$lang$maxFixedArity = 2;
    G__18978.cljs$lang$applyTo = function(arglist__18980) {
      var x = cljs.core.first(arglist__18980);
      arglist__18980 = cljs.core.next(arglist__18980);
      var y = cljs.core.first(arglist__18980);
      var more = cljs.core.rest(arglist__18980);
      return G__18978__delegate(x, y, more);
    };
    G__18978.cljs$core$IFn$_invoke$arity$variadic = G__18978__delegate;
    return G__18978;
  }();
  unchecked_divide_int = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return unchecked_divide_int__1.call(this, x);
      case 2:
        return unchecked_divide_int__2.call(this, x, y);
      default:
        var G__18981 = null;
        if (arguments.length > 2) {
          var G__18982__i = 0, G__18982__a = new Array(arguments.length - 2);
          while (G__18982__i < G__18982__a.length) {
            G__18982__a[G__18982__i] = arguments[G__18982__i + 2];
            ++G__18982__i;
          }
          G__18981 = new cljs.core.IndexedSeq(G__18982__a, 0);
        }
        return unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__18981);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_divide_int.cljs$lang$maxFixedArity = 2;
  unchecked_divide_int.cljs$lang$applyTo = unchecked_divide_int__3.cljs$lang$applyTo;
  unchecked_divide_int.cljs$core$IFn$_invoke$arity$1 = unchecked_divide_int__1;
  unchecked_divide_int.cljs$core$IFn$_invoke$arity$2 = unchecked_divide_int__2;
  unchecked_divide_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_divide_int;
}();
cljs.core.unchecked_inc = function unchecked_inc(x) {
  return x + 1;
};
cljs.core.unchecked_inc_int = function unchecked_inc_int(x) {
  return x + 1;
};
cljs.core.unchecked_multiply = function() {
  var unchecked_multiply = null;
  var unchecked_multiply__0 = function() {
    return 1;
  };
  var unchecked_multiply__1 = function(x) {
    return x;
  };
  var unchecked_multiply__2 = function(x, y) {
    return x * y;
  };
  var unchecked_multiply__3 = function() {
    var G__18983__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_multiply, x * y, more);
    };
    var G__18983 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__18984__i = 0, G__18984__a = new Array(arguments.length - 2);
        while (G__18984__i < G__18984__a.length) {
          G__18984__a[G__18984__i] = arguments[G__18984__i + 2];
          ++G__18984__i;
        }
        more = new cljs.core.IndexedSeq(G__18984__a, 0);
      }
      return G__18983__delegate.call(this, x, y, more);
    };
    G__18983.cljs$lang$maxFixedArity = 2;
    G__18983.cljs$lang$applyTo = function(arglist__18985) {
      var x = cljs.core.first(arglist__18985);
      arglist__18985 = cljs.core.next(arglist__18985);
      var y = cljs.core.first(arglist__18985);
      var more = cljs.core.rest(arglist__18985);
      return G__18983__delegate(x, y, more);
    };
    G__18983.cljs$core$IFn$_invoke$arity$variadic = G__18983__delegate;
    return G__18983;
  }();
  unchecked_multiply = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return unchecked_multiply__0.call(this);
      case 1:
        return unchecked_multiply__1.call(this, x);
      case 2:
        return unchecked_multiply__2.call(this, x, y);
      default:
        var G__18986 = null;
        if (arguments.length > 2) {
          var G__18987__i = 0, G__18987__a = new Array(arguments.length - 2);
          while (G__18987__i < G__18987__a.length) {
            G__18987__a[G__18987__i] = arguments[G__18987__i + 2];
            ++G__18987__i;
          }
          G__18986 = new cljs.core.IndexedSeq(G__18987__a, 0);
        }
        return unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__18986);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_multiply.cljs$lang$maxFixedArity = 2;
  unchecked_multiply.cljs$lang$applyTo = unchecked_multiply__3.cljs$lang$applyTo;
  unchecked_multiply.cljs$core$IFn$_invoke$arity$0 = unchecked_multiply__0;
  unchecked_multiply.cljs$core$IFn$_invoke$arity$1 = unchecked_multiply__1;
  unchecked_multiply.cljs$core$IFn$_invoke$arity$2 = unchecked_multiply__2;
  unchecked_multiply.cljs$core$IFn$_invoke$arity$variadic = unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_multiply;
}();
cljs.core.unchecked_multiply_int = function() {
  var unchecked_multiply_int = null;
  var unchecked_multiply_int__0 = function() {
    return 1;
  };
  var unchecked_multiply_int__1 = function(x) {
    return x;
  };
  var unchecked_multiply_int__2 = function(x, y) {
    return x * y;
  };
  var unchecked_multiply_int__3 = function() {
    var G__18988__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_multiply_int, x * y, more);
    };
    var G__18988 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__18989__i = 0, G__18989__a = new Array(arguments.length - 2);
        while (G__18989__i < G__18989__a.length) {
          G__18989__a[G__18989__i] = arguments[G__18989__i + 2];
          ++G__18989__i;
        }
        more = new cljs.core.IndexedSeq(G__18989__a, 0);
      }
      return G__18988__delegate.call(this, x, y, more);
    };
    G__18988.cljs$lang$maxFixedArity = 2;
    G__18988.cljs$lang$applyTo = function(arglist__18990) {
      var x = cljs.core.first(arglist__18990);
      arglist__18990 = cljs.core.next(arglist__18990);
      var y = cljs.core.first(arglist__18990);
      var more = cljs.core.rest(arglist__18990);
      return G__18988__delegate(x, y, more);
    };
    G__18988.cljs$core$IFn$_invoke$arity$variadic = G__18988__delegate;
    return G__18988;
  }();
  unchecked_multiply_int = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return unchecked_multiply_int__0.call(this);
      case 1:
        return unchecked_multiply_int__1.call(this, x);
      case 2:
        return unchecked_multiply_int__2.call(this, x, y);
      default:
        var G__18991 = null;
        if (arguments.length > 2) {
          var G__18992__i = 0, G__18992__a = new Array(arguments.length - 2);
          while (G__18992__i < G__18992__a.length) {
            G__18992__a[G__18992__i] = arguments[G__18992__i + 2];
            ++G__18992__i;
          }
          G__18991 = new cljs.core.IndexedSeq(G__18992__a, 0);
        }
        return unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__18991);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_multiply_int.cljs$lang$maxFixedArity = 2;
  unchecked_multiply_int.cljs$lang$applyTo = unchecked_multiply_int__3.cljs$lang$applyTo;
  unchecked_multiply_int.cljs$core$IFn$_invoke$arity$0 = unchecked_multiply_int__0;
  unchecked_multiply_int.cljs$core$IFn$_invoke$arity$1 = unchecked_multiply_int__1;
  unchecked_multiply_int.cljs$core$IFn$_invoke$arity$2 = unchecked_multiply_int__2;
  unchecked_multiply_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_multiply_int;
}();
cljs.core.unchecked_negate = function unchecked_negate(x) {
  return-x;
};
cljs.core.unchecked_negate_int = function unchecked_negate_int(x) {
  return-x;
};
cljs.core.unchecked_remainder_int = function unchecked_remainder_int(x, n) {
  var G__18995 = x;
  var G__18996 = n;
  return cljs.core.mod.cljs$core$IFn$_invoke$arity$2 ? cljs.core.mod.cljs$core$IFn$_invoke$arity$2(G__18995, G__18996) : cljs.core.mod.call(null, G__18995, G__18996);
};
cljs.core.unchecked_subtract = function() {
  var unchecked_subtract = null;
  var unchecked_subtract__1 = function(x) {
    return-x;
  };
  var unchecked_subtract__2 = function(x, y) {
    return x - y;
  };
  var unchecked_subtract__3 = function() {
    var G__18997__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_subtract, x - y, more);
    };
    var G__18997 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__18998__i = 0, G__18998__a = new Array(arguments.length - 2);
        while (G__18998__i < G__18998__a.length) {
          G__18998__a[G__18998__i] = arguments[G__18998__i + 2];
          ++G__18998__i;
        }
        more = new cljs.core.IndexedSeq(G__18998__a, 0);
      }
      return G__18997__delegate.call(this, x, y, more);
    };
    G__18997.cljs$lang$maxFixedArity = 2;
    G__18997.cljs$lang$applyTo = function(arglist__18999) {
      var x = cljs.core.first(arglist__18999);
      arglist__18999 = cljs.core.next(arglist__18999);
      var y = cljs.core.first(arglist__18999);
      var more = cljs.core.rest(arglist__18999);
      return G__18997__delegate(x, y, more);
    };
    G__18997.cljs$core$IFn$_invoke$arity$variadic = G__18997__delegate;
    return G__18997;
  }();
  unchecked_subtract = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return unchecked_subtract__1.call(this, x);
      case 2:
        return unchecked_subtract__2.call(this, x, y);
      default:
        var G__19000 = null;
        if (arguments.length > 2) {
          var G__19001__i = 0, G__19001__a = new Array(arguments.length - 2);
          while (G__19001__i < G__19001__a.length) {
            G__19001__a[G__19001__i] = arguments[G__19001__i + 2];
            ++G__19001__i;
          }
          G__19000 = new cljs.core.IndexedSeq(G__19001__a, 0);
        }
        return unchecked_subtract__3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__19000);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_subtract.cljs$lang$maxFixedArity = 2;
  unchecked_subtract.cljs$lang$applyTo = unchecked_subtract__3.cljs$lang$applyTo;
  unchecked_subtract.cljs$core$IFn$_invoke$arity$1 = unchecked_subtract__1;
  unchecked_subtract.cljs$core$IFn$_invoke$arity$2 = unchecked_subtract__2;
  unchecked_subtract.cljs$core$IFn$_invoke$arity$variadic = unchecked_subtract__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_subtract;
}();
cljs.core.unchecked_subtract_int = function() {
  var unchecked_subtract_int = null;
  var unchecked_subtract_int__1 = function(x) {
    return-x;
  };
  var unchecked_subtract_int__2 = function(x, y) {
    return x - y;
  };
  var unchecked_subtract_int__3 = function() {
    var G__19002__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_subtract_int, x - y, more);
    };
    var G__19002 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__19003__i = 0, G__19003__a = new Array(arguments.length - 2);
        while (G__19003__i < G__19003__a.length) {
          G__19003__a[G__19003__i] = arguments[G__19003__i + 2];
          ++G__19003__i;
        }
        more = new cljs.core.IndexedSeq(G__19003__a, 0);
      }
      return G__19002__delegate.call(this, x, y, more);
    };
    G__19002.cljs$lang$maxFixedArity = 2;
    G__19002.cljs$lang$applyTo = function(arglist__19004) {
      var x = cljs.core.first(arglist__19004);
      arglist__19004 = cljs.core.next(arglist__19004);
      var y = cljs.core.first(arglist__19004);
      var more = cljs.core.rest(arglist__19004);
      return G__19002__delegate(x, y, more);
    };
    G__19002.cljs$core$IFn$_invoke$arity$variadic = G__19002__delegate;
    return G__19002;
  }();
  unchecked_subtract_int = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return unchecked_subtract_int__1.call(this, x);
      case 2:
        return unchecked_subtract_int__2.call(this, x, y);
      default:
        var G__19005 = null;
        if (arguments.length > 2) {
          var G__19006__i = 0, G__19006__a = new Array(arguments.length - 2);
          while (G__19006__i < G__19006__a.length) {
            G__19006__a[G__19006__i] = arguments[G__19006__i + 2];
            ++G__19006__i;
          }
          G__19005 = new cljs.core.IndexedSeq(G__19006__a, 0);
        }
        return unchecked_subtract_int__3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__19005);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_subtract_int.cljs$lang$maxFixedArity = 2;
  unchecked_subtract_int.cljs$lang$applyTo = unchecked_subtract_int__3.cljs$lang$applyTo;
  unchecked_subtract_int.cljs$core$IFn$_invoke$arity$1 = unchecked_subtract_int__1;
  unchecked_subtract_int.cljs$core$IFn$_invoke$arity$2 = unchecked_subtract_int__2;
  unchecked_subtract_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_subtract_int__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_subtract_int;
}();
cljs.core.fix = function fix(q) {
  if (q >= 0) {
    var G__19009 = q;
    return Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__19009) : Math.floor.call(null, G__19009);
  } else {
    var G__19010 = q;
    return Math.ceil.cljs$core$IFn$_invoke$arity$1 ? Math.ceil.cljs$core$IFn$_invoke$arity$1(G__19010) : Math.ceil.call(null, G__19010);
  }
};
cljs.core.int$ = function int$(x) {
  return x | 0;
};
cljs.core.unchecked_int = function unchecked_int(x) {
  return cljs.core.fix(x);
};
cljs.core.long$ = function long$(x) {
  return cljs.core.fix(x);
};
cljs.core.unchecked_long = function unchecked_long(x) {
  return cljs.core.fix(x);
};
cljs.core.booleans = function booleans(x) {
  return x;
};
cljs.core.bytes = function bytes(x) {
  return x;
};
cljs.core.chars = function chars(x) {
  return x;
};
cljs.core.shorts = function shorts(x) {
  return x;
};
cljs.core.ints = function ints(x) {
  return x;
};
cljs.core.floats = function floats(x) {
  return x;
};
cljs.core.doubles = function doubles(x) {
  return x;
};
cljs.core.longs = function longs(x) {
  return x;
};
cljs.core.js_mod = function js_mod(n, d) {
  return n % d;
};
cljs.core.mod = function mod(n, d) {
  return(n % d + d) % d;
};
cljs.core.quot = function quot(n, d) {
  var rem = n % d;
  return cljs.core.fix((n - rem) / d);
};
cljs.core.rem = function rem(n, d) {
  var q = cljs.core.quot(n, d);
  return n - d * q;
};
cljs.core.bit_xor = function() {
  var bit_xor = null;
  var bit_xor__2 = function(x, y) {
    return x ^ y;
  };
  var bit_xor__3 = function() {
    var G__19011__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_xor, x ^ y, more);
    };
    var G__19011 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__19012__i = 0, G__19012__a = new Array(arguments.length - 2);
        while (G__19012__i < G__19012__a.length) {
          G__19012__a[G__19012__i] = arguments[G__19012__i + 2];
          ++G__19012__i;
        }
        more = new cljs.core.IndexedSeq(G__19012__a, 0);
      }
      return G__19011__delegate.call(this, x, y, more);
    };
    G__19011.cljs$lang$maxFixedArity = 2;
    G__19011.cljs$lang$applyTo = function(arglist__19013) {
      var x = cljs.core.first(arglist__19013);
      arglist__19013 = cljs.core.next(arglist__19013);
      var y = cljs.core.first(arglist__19013);
      var more = cljs.core.rest(arglist__19013);
      return G__19011__delegate(x, y, more);
    };
    G__19011.cljs$core$IFn$_invoke$arity$variadic = G__19011__delegate;
    return G__19011;
  }();
  bit_xor = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return bit_xor__2.call(this, x, y);
      default:
        var G__19014 = null;
        if (arguments.length > 2) {
          var G__19015__i = 0, G__19015__a = new Array(arguments.length - 2);
          while (G__19015__i < G__19015__a.length) {
            G__19015__a[G__19015__i] = arguments[G__19015__i + 2];
            ++G__19015__i;
          }
          G__19014 = new cljs.core.IndexedSeq(G__19015__a, 0);
        }
        return bit_xor__3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__19014);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  bit_xor.cljs$lang$maxFixedArity = 2;
  bit_xor.cljs$lang$applyTo = bit_xor__3.cljs$lang$applyTo;
  bit_xor.cljs$core$IFn$_invoke$arity$2 = bit_xor__2;
  bit_xor.cljs$core$IFn$_invoke$arity$variadic = bit_xor__3.cljs$core$IFn$_invoke$arity$variadic;
  return bit_xor;
}();
cljs.core.bit_and = function() {
  var bit_and = null;
  var bit_and__2 = function(x, y) {
    return x & y;
  };
  var bit_and__3 = function() {
    var G__19016__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_and, x & y, more);
    };
    var G__19016 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__19017__i = 0, G__19017__a = new Array(arguments.length - 2);
        while (G__19017__i < G__19017__a.length) {
          G__19017__a[G__19017__i] = arguments[G__19017__i + 2];
          ++G__19017__i;
        }
        more = new cljs.core.IndexedSeq(G__19017__a, 0);
      }
      return G__19016__delegate.call(this, x, y, more);
    };
    G__19016.cljs$lang$maxFixedArity = 2;
    G__19016.cljs$lang$applyTo = function(arglist__19018) {
      var x = cljs.core.first(arglist__19018);
      arglist__19018 = cljs.core.next(arglist__19018);
      var y = cljs.core.first(arglist__19018);
      var more = cljs.core.rest(arglist__19018);
      return G__19016__delegate(x, y, more);
    };
    G__19016.cljs$core$IFn$_invoke$arity$variadic = G__19016__delegate;
    return G__19016;
  }();
  bit_and = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return bit_and__2.call(this, x, y);
      default:
        var G__19019 = null;
        if (arguments.length > 2) {
          var G__19020__i = 0, G__19020__a = new Array(arguments.length - 2);
          while (G__19020__i < G__19020__a.length) {
            G__19020__a[G__19020__i] = arguments[G__19020__i + 2];
            ++G__19020__i;
          }
          G__19019 = new cljs.core.IndexedSeq(G__19020__a, 0);
        }
        return bit_and__3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__19019);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  bit_and.cljs$lang$maxFixedArity = 2;
  bit_and.cljs$lang$applyTo = bit_and__3.cljs$lang$applyTo;
  bit_and.cljs$core$IFn$_invoke$arity$2 = bit_and__2;
  bit_and.cljs$core$IFn$_invoke$arity$variadic = bit_and__3.cljs$core$IFn$_invoke$arity$variadic;
  return bit_and;
}();
cljs.core.bit_or = function() {
  var bit_or = null;
  var bit_or__2 = function(x, y) {
    return x | y;
  };
  var bit_or__3 = function() {
    var G__19021__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_or, x | y, more);
    };
    var G__19021 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__19022__i = 0, G__19022__a = new Array(arguments.length - 2);
        while (G__19022__i < G__19022__a.length) {
          G__19022__a[G__19022__i] = arguments[G__19022__i + 2];
          ++G__19022__i;
        }
        more = new cljs.core.IndexedSeq(G__19022__a, 0);
      }
      return G__19021__delegate.call(this, x, y, more);
    };
    G__19021.cljs$lang$maxFixedArity = 2;
    G__19021.cljs$lang$applyTo = function(arglist__19023) {
      var x = cljs.core.first(arglist__19023);
      arglist__19023 = cljs.core.next(arglist__19023);
      var y = cljs.core.first(arglist__19023);
      var more = cljs.core.rest(arglist__19023);
      return G__19021__delegate(x, y, more);
    };
    G__19021.cljs$core$IFn$_invoke$arity$variadic = G__19021__delegate;
    return G__19021;
  }();
  bit_or = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return bit_or__2.call(this, x, y);
      default:
        var G__19024 = null;
        if (arguments.length > 2) {
          var G__19025__i = 0, G__19025__a = new Array(arguments.length - 2);
          while (G__19025__i < G__19025__a.length) {
            G__19025__a[G__19025__i] = arguments[G__19025__i + 2];
            ++G__19025__i;
          }
          G__19024 = new cljs.core.IndexedSeq(G__19025__a, 0);
        }
        return bit_or__3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__19024);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  bit_or.cljs$lang$maxFixedArity = 2;
  bit_or.cljs$lang$applyTo = bit_or__3.cljs$lang$applyTo;
  bit_or.cljs$core$IFn$_invoke$arity$2 = bit_or__2;
  bit_or.cljs$core$IFn$_invoke$arity$variadic = bit_or__3.cljs$core$IFn$_invoke$arity$variadic;
  return bit_or;
}();
cljs.core.bit_and_not = function() {
  var bit_and_not = null;
  var bit_and_not__2 = function(x, y) {
    return x & ~y;
  };
  var bit_and_not__3 = function() {
    var G__19026__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_and_not, x & ~y, more);
    };
    var G__19026 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__19027__i = 0, G__19027__a = new Array(arguments.length - 2);
        while (G__19027__i < G__19027__a.length) {
          G__19027__a[G__19027__i] = arguments[G__19027__i + 2];
          ++G__19027__i;
        }
        more = new cljs.core.IndexedSeq(G__19027__a, 0);
      }
      return G__19026__delegate.call(this, x, y, more);
    };
    G__19026.cljs$lang$maxFixedArity = 2;
    G__19026.cljs$lang$applyTo = function(arglist__19028) {
      var x = cljs.core.first(arglist__19028);
      arglist__19028 = cljs.core.next(arglist__19028);
      var y = cljs.core.first(arglist__19028);
      var more = cljs.core.rest(arglist__19028);
      return G__19026__delegate(x, y, more);
    };
    G__19026.cljs$core$IFn$_invoke$arity$variadic = G__19026__delegate;
    return G__19026;
  }();
  bit_and_not = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return bit_and_not__2.call(this, x, y);
      default:
        var G__19029 = null;
        if (arguments.length > 2) {
          var G__19030__i = 0, G__19030__a = new Array(arguments.length - 2);
          while (G__19030__i < G__19030__a.length) {
            G__19030__a[G__19030__i] = arguments[G__19030__i + 2];
            ++G__19030__i;
          }
          G__19029 = new cljs.core.IndexedSeq(G__19030__a, 0);
        }
        return bit_and_not__3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__19029);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  bit_and_not.cljs$lang$maxFixedArity = 2;
  bit_and_not.cljs$lang$applyTo = bit_and_not__3.cljs$lang$applyTo;
  bit_and_not.cljs$core$IFn$_invoke$arity$2 = bit_and_not__2;
  bit_and_not.cljs$core$IFn$_invoke$arity$variadic = bit_and_not__3.cljs$core$IFn$_invoke$arity$variadic;
  return bit_and_not;
}();
cljs.core.bit_clear = function bit_clear(x, n) {
  return x & ~(1 << n);
};
cljs.core.bit_flip = function bit_flip(x, n) {
  return x ^ 1 << n;
};
cljs.core.bit_not = function bit_not(x) {
  return~x;
};
cljs.core.bit_set = function bit_set(x, n) {
  return x | 1 << n;
};
cljs.core.bit_test = function bit_test(x, n) {
  return(x & 1 << n) != 0;
};
cljs.core.bit_shift_left = function bit_shift_left(x, n) {
  return x << n;
};
cljs.core.bit_shift_right = function bit_shift_right(x, n) {
  return x >> n;
};
cljs.core.bit_shift_right_zero_fill = function bit_shift_right_zero_fill(x, n) {
  return x >>> n;
};
cljs.core.unsigned_bit_shift_right = function unsigned_bit_shift_right(x, n) {
  return x >>> n;
};
cljs.core.bit_count = function bit_count(v) {
  var v__$1 = v - (v >> 1 & 1431655765);
  var v__$2 = (v__$1 & 858993459) + (v__$1 >> 2 & 858993459);
  return(v__$2 + (v__$2 >> 4) & 252645135) * 16843009 >> 24;
};
cljs.core._EQ__EQ_ = function() {
  var _EQ__EQ_ = null;
  var _EQ__EQ___1 = function(x) {
    return true;
  };
  var _EQ__EQ___2 = function(x, y) {
    return cljs.core._equiv(x, y);
  };
  var _EQ__EQ___3 = function() {
    var G__19035__delegate = function(x, y, more) {
      while (true) {
        if (_EQ__EQ_.cljs$core$IFn$_invoke$arity$2(x, y)) {
          if (cljs.core.next(more)) {
            var G__19036 = y;
            var G__19037 = cljs.core.first(more);
            var G__19038 = cljs.core.next(more);
            x = G__19036;
            y = G__19037;
            more = G__19038;
            continue;
          } else {
            return _EQ__EQ_.cljs$core$IFn$_invoke$arity$2(y, cljs.core.first(more));
          }
        } else {
          return false;
        }
        break;
      }
    };
    var G__19035 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__19039__i = 0, G__19039__a = new Array(arguments.length - 2);
        while (G__19039__i < G__19039__a.length) {
          G__19039__a[G__19039__i] = arguments[G__19039__i + 2];
          ++G__19039__i;
        }
        more = new cljs.core.IndexedSeq(G__19039__a, 0);
      }
      return G__19035__delegate.call(this, x, y, more);
    };
    G__19035.cljs$lang$maxFixedArity = 2;
    G__19035.cljs$lang$applyTo = function(arglist__19040) {
      var x = cljs.core.first(arglist__19040);
      arglist__19040 = cljs.core.next(arglist__19040);
      var y = cljs.core.first(arglist__19040);
      var more = cljs.core.rest(arglist__19040);
      return G__19035__delegate(x, y, more);
    };
    G__19035.cljs$core$IFn$_invoke$arity$variadic = G__19035__delegate;
    return G__19035;
  }();
  _EQ__EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _EQ__EQ___1.call(this, x);
      case 2:
        return _EQ__EQ___2.call(this, x, y);
      default:
        var G__19041 = null;
        if (arguments.length > 2) {
          var G__19042__i = 0, G__19042__a = new Array(arguments.length - 2);
          while (G__19042__i < G__19042__a.length) {
            G__19042__a[G__19042__i] = arguments[G__19042__i + 2];
            ++G__19042__i;
          }
          G__19041 = new cljs.core.IndexedSeq(G__19042__a, 0);
        }
        return _EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__19041);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _EQ__EQ_.cljs$lang$maxFixedArity = 2;
  _EQ__EQ_.cljs$lang$applyTo = _EQ__EQ___3.cljs$lang$applyTo;
  _EQ__EQ_.cljs$core$IFn$_invoke$arity$1 = _EQ__EQ___1;
  _EQ__EQ_.cljs$core$IFn$_invoke$arity$2 = _EQ__EQ___2;
  _EQ__EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return _EQ__EQ_;
}();
cljs.core.pos_QMARK_ = function pos_QMARK_(n) {
  return n > 0;
};
cljs.core.zero_QMARK_ = function zero_QMARK_(n) {
  return n === 0;
};
cljs.core.neg_QMARK_ = function neg_QMARK_(x) {
  return x < 0;
};
cljs.core.nthnext = function nthnext(coll, n) {
  var n__$1 = n;
  var xs = cljs.core.seq(coll);
  while (true) {
    if (xs && n__$1 > 0) {
      var G__19043 = n__$1 - 1;
      var G__19044 = cljs.core.next(xs);
      n__$1 = G__19043;
      xs = G__19044;
      continue;
    } else {
      return xs;
    }
    break;
  }
};
cljs.core.str = function() {
  var str = null;
  var str__0 = function() {
    return "";
  };
  var str__1 = function(x) {
    if (x == null) {
      return "";
    } else {
      var G__19048 = x;
      return goog.string.buildString(G__19048);
    }
  };
  var str__2 = function() {
    var G__19049__delegate = function(x, ys) {
      var sb = new goog.string.StringBuffer(str.cljs$core$IFn$_invoke$arity$1(x));
      var more = ys;
      while (true) {
        if (cljs.core.truth_(more)) {
          var G__19050 = sb.append(str.cljs$core$IFn$_invoke$arity$1(cljs.core.first(more)));
          var G__19051 = cljs.core.next(more);
          sb = G__19050;
          more = G__19051;
          continue;
        } else {
          return sb.toString();
        }
        break;
      }
    };
    var G__19049 = function(x, var_args) {
      var ys = null;
      if (arguments.length > 1) {
        var G__19052__i = 0, G__19052__a = new Array(arguments.length - 1);
        while (G__19052__i < G__19052__a.length) {
          G__19052__a[G__19052__i] = arguments[G__19052__i + 1];
          ++G__19052__i;
        }
        ys = new cljs.core.IndexedSeq(G__19052__a, 0);
      }
      return G__19049__delegate.call(this, x, ys);
    };
    G__19049.cljs$lang$maxFixedArity = 1;
    G__19049.cljs$lang$applyTo = function(arglist__19053) {
      var x = cljs.core.first(arglist__19053);
      var ys = cljs.core.rest(arglist__19053);
      return G__19049__delegate(x, ys);
    };
    G__19049.cljs$core$IFn$_invoke$arity$variadic = G__19049__delegate;
    return G__19049;
  }();
  str = function(x, var_args) {
    var ys = var_args;
    switch(arguments.length) {
      case 0:
        return str__0.call(this);
      case 1:
        return str__1.call(this, x);
      default:
        var G__19054 = null;
        if (arguments.length > 1) {
          var G__19055__i = 0, G__19055__a = new Array(arguments.length - 1);
          while (G__19055__i < G__19055__a.length) {
            G__19055__a[G__19055__i] = arguments[G__19055__i + 1];
            ++G__19055__i;
          }
          G__19054 = new cljs.core.IndexedSeq(G__19055__a, 0);
        }
        return str__2.cljs$core$IFn$_invoke$arity$variadic(x, G__19054);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  str.cljs$lang$maxFixedArity = 1;
  str.cljs$lang$applyTo = str__2.cljs$lang$applyTo;
  str.cljs$core$IFn$_invoke$arity$0 = str__0;
  str.cljs$core$IFn$_invoke$arity$1 = str__1;
  str.cljs$core$IFn$_invoke$arity$variadic = str__2.cljs$core$IFn$_invoke$arity$variadic;
  return str;
}();
cljs.core.subs = function() {
  var subs = null;
  var subs__2 = function(s, start) {
    return s.substring(start);
  };
  var subs__3 = function(s, start, end) {
    return s.substring(start, end);
  };
  subs = function(s, start, end) {
    switch(arguments.length) {
      case 2:
        return subs__2.call(this, s, start);
      case 3:
        return subs__3.call(this, s, start, end);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  subs.cljs$core$IFn$_invoke$arity$2 = subs__2;
  subs.cljs$core$IFn$_invoke$arity$3 = subs__3;
  return subs;
}();
cljs.core.equiv_sequential = function equiv_sequential(x, y) {
  return cljs.core.boolean$(cljs.core.sequential_QMARK_(y) ? cljs.core.counted_QMARK_(x) && cljs.core.counted_QMARK_(y) && !(cljs.core.count(x) === cljs.core.count(y)) ? false : function() {
    var xs = cljs.core.seq(x);
    var ys = cljs.core.seq(y);
    while (true) {
      if (xs == null) {
        return ys == null;
      } else {
        if (ys == null) {
          return false;
        } else {
          if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(xs), cljs.core.first(ys))) {
            var G__19056 = cljs.core.next(xs);
            var G__19057 = cljs.core.next(ys);
            xs = G__19056;
            ys = G__19057;
            continue;
          } else {
            return false;
          }
        }
      }
      break;
    }
  }() : null);
};
cljs.core.hash_coll = function hash_coll(coll) {
  if (cljs.core.seq(coll)) {
    var res = cljs.core.hash(cljs.core.first(coll));
    var s = cljs.core.next(coll);
    while (true) {
      if (s == null) {
        return res;
      } else {
        var G__19058 = cljs.core.hash_combine(res, cljs.core.hash(cljs.core.first(s)));
        var G__19059 = cljs.core.next(s);
        res = G__19058;
        s = G__19059;
        continue;
      }
      break;
    }
  } else {
    return 0;
  }
};
cljs.core.hash_imap = function hash_imap(m) {
  var h = 0;
  var s = cljs.core.seq(m);
  while (true) {
    if (s) {
      var e = cljs.core.first(s);
      var G__19064 = (h + (cljs.core.hash(function() {
        var G__19062 = e;
        return cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__19062) : cljs.core.key.call(null, G__19062);
      }()) ^ cljs.core.hash(function() {
        var G__19063 = e;
        return cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__19063) : cljs.core.val.call(null, G__19063);
      }()))) % 4503599627370496;
      var G__19065 = cljs.core.next(s);
      h = G__19064;
      s = G__19065;
      continue;
    } else {
      return h;
    }
    break;
  }
};
cljs.core.hash_iset = function hash_iset(s) {
  var h = 0;
  var s__$1 = cljs.core.seq(s);
  while (true) {
    if (s__$1) {
      var e = cljs.core.first(s__$1);
      var G__19066 = (h + cljs.core.hash(e)) % 4503599627370496;
      var G__19067 = cljs.core.next(s__$1);
      h = G__19066;
      s__$1 = G__19067;
      continue;
    } else {
      return h;
    }
    break;
  }
};
cljs.core.extend_object_BANG_ = function extend_object_BANG_(obj, fn_map) {
  var seq__19078_19088 = cljs.core.seq(fn_map);
  var chunk__19079_19089 = null;
  var count__19080_19090 = 0;
  var i__19081_19091 = 0;
  while (true) {
    if (i__19081_19091 < count__19080_19090) {
      var vec__19082_19092 = chunk__19079_19089.cljs$core$IIndexed$_nth$arity$2(null, i__19081_19091);
      var key_name_19093 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19082_19092, 0, null);
      var f_19094 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19082_19092, 1, null);
      var str_name_19095 = function() {
        var G__19083 = key_name_19093;
        return cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__19083) : cljs.core.name.call(null, G__19083);
      }();
      obj[str_name_19095] = f_19094;
      var G__19096 = seq__19078_19088;
      var G__19097 = chunk__19079_19089;
      var G__19098 = count__19080_19090;
      var G__19099 = i__19081_19091 + 1;
      seq__19078_19088 = G__19096;
      chunk__19079_19089 = G__19097;
      count__19080_19090 = G__19098;
      i__19081_19091 = G__19099;
      continue;
    } else {
      var temp__4126__auto___19100 = cljs.core.seq(seq__19078_19088);
      if (temp__4126__auto___19100) {
        var seq__19078_19101__$1 = temp__4126__auto___19100;
        if (cljs.core.chunked_seq_QMARK_(seq__19078_19101__$1)) {
          var c__8291__auto___19102 = function() {
            var G__19084 = seq__19078_19101__$1;
            return cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1(G__19084) : cljs.core.chunk_first.call(null, G__19084);
          }();
          var G__19103 = function() {
            var G__19085 = seq__19078_19101__$1;
            return cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1(G__19085) : cljs.core.chunk_rest.call(null, G__19085);
          }();
          var G__19104 = c__8291__auto___19102;
          var G__19105 = cljs.core.count(c__8291__auto___19102);
          var G__19106 = 0;
          seq__19078_19088 = G__19103;
          chunk__19079_19089 = G__19104;
          count__19080_19090 = G__19105;
          i__19081_19091 = G__19106;
          continue;
        } else {
          var vec__19086_19107 = cljs.core.first(seq__19078_19101__$1);
          var key_name_19108 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19086_19107, 0, null);
          var f_19109 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19086_19107, 1, null);
          var str_name_19110 = function() {
            var G__19087 = key_name_19108;
            return cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__19087) : cljs.core.name.call(null, G__19087);
          }();
          obj[str_name_19110] = f_19109;
          var G__19111 = cljs.core.next(seq__19078_19101__$1);
          var G__19112 = null;
          var G__19113 = 0;
          var G__19114 = 0;
          seq__19078_19088 = G__19111;
          chunk__19079_19089 = G__19112;
          count__19080_19090 = G__19113;
          i__19081_19091 = G__19114;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return obj;
};
cljs.core.List = function(meta, first, rest, count, __hash) {
  this.meta = meta;
  this.first = first;
  this.rest = rest;
  this.count = count;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 65937646;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.List.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.List.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.List.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.List.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.List(self__.meta, self__.first, self__.rest, self__.count, self__.__hash);
};
cljs.core.List.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.count === 1) {
    return null;
  } else {
    return self__.rest;
  }
};
cljs.core.List.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.count;
};
cljs.core.List.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.first;
};
cljs.core.List.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._rest(coll__$1);
};
cljs.core.List.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__7925__auto__ = self__.__hash;
  if (!(h__7925__auto__ == null)) {
    return h__7925__auto__;
  } else {
    var h__7925__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__7925__auto____$1;
    return h__7925__auto____$1;
  }
};
cljs.core.List.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.List.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.List.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.first;
};
cljs.core.List.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.count === 1) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.rest;
  }
};
cljs.core.List.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.List.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.List(meta__$1, self__.first, self__.rest, self__.count, self__.__hash);
};
cljs.core.List.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.List(self__.meta, o, coll__$1, self__.count + 1, null);
};
cljs.core.List.cljs$lang$type = true;
cljs.core.List.cljs$lang$ctorStr = "cljs.core/List";
cljs.core.List.cljs$lang$ctorPrWriter = function(this__8091__auto__, writer__8092__auto__, opt__8093__auto__) {
  return cljs.core._write(writer__8092__auto__, "cljs.core/List");
};
cljs.core.__GT_List = function __GT_List(meta, first, rest, count, __hash) {
  return new cljs.core.List(meta, first, rest, count, __hash);
};
cljs.core.List.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__8482__auto__ = this;
  return cljs.core.es6_iterator(this__8482__auto__);
};
cljs.core.EmptyList = function(meta) {
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition0$ = 65937614;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.EmptyList.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.EmptyList.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.EmptyList.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.EmptyList.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.EmptyList(self__.meta);
};
cljs.core.EmptyList.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return 0;
};
cljs.core.EmptyList.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  throw new Error("Can't pop empty list");
};
cljs.core.EmptyList.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.empty_ordered_hash;
};
cljs.core.EmptyList.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.EmptyList.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.EmptyList.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.EmptyList.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.EmptyList(meta__$1);
};
cljs.core.EmptyList.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.List(self__.meta, o, null, 1, null);
};
cljs.core.EmptyList.cljs$lang$type = true;
cljs.core.EmptyList.cljs$lang$ctorStr = "cljs.core/EmptyList";
cljs.core.EmptyList.cljs$lang$ctorPrWriter = function(this__8091__auto__, writer__8092__auto__, opt__8093__auto__) {
  return cljs.core._write(writer__8092__auto__, "cljs.core/EmptyList");
};
cljs.core.__GT_EmptyList = function __GT_EmptyList(meta) {
  return new cljs.core.EmptyList(meta);
};
cljs.core.List.EMPTY = new cljs.core.EmptyList(null);
cljs.core.EmptyList.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__8482__auto__ = this;
  return cljs.core.es6_iterator(this__8482__auto__);
};
cljs.core.reversible_QMARK_ = function reversible_QMARK_(coll) {
  var G__19116 = coll;
  if (G__19116) {
    var bit__8185__auto__ = G__19116.cljs$lang$protocol_mask$partition0$ & 134217728;
    if (bit__8185__auto__ || G__19116.cljs$core$IReversible$) {
      return true;
    } else {
      if (!G__19116.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible, G__19116);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible, G__19116);
  }
};
cljs.core.rseq = function rseq(coll) {
  return cljs.core._rseq(coll);
};
cljs.core.reverse = function reverse(coll) {
  if (cljs.core.reversible_QMARK_(coll)) {
    return cljs.core.rseq(coll);
  } else {
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj, cljs.core.List.EMPTY, coll);
  }
};
cljs.core.list = function() {
  var list__delegate = function(xs) {
    var arr = xs instanceof cljs.core.IndexedSeq && xs.i === 0 ? xs.arr : function() {
      var arr = [];
      var xs__$1 = xs;
      while (true) {
        if (!(xs__$1 == null)) {
          arr.push(xs__$1.cljs$core$ISeq$_first$arity$1(null));
          var G__19117 = xs__$1.cljs$core$INext$_next$arity$1(null);
          xs__$1 = G__19117;
          continue;
        } else {
          return arr;
        }
        break;
      }
    }();
    var i = arr.length;
    var r = cljs.core.List.EMPTY;
    while (true) {
      if (i > 0) {
        var G__19118 = i - 1;
        var G__19119 = r.cljs$core$ICollection$_conj$arity$2(null, arr[i - 1]);
        i = G__19118;
        r = G__19119;
        continue;
      } else {
        return r;
      }
      break;
    }
  };
  var list = function(var_args) {
    var xs = null;
    if (arguments.length > 0) {
      var G__19120__i = 0, G__19120__a = new Array(arguments.length - 0);
      while (G__19120__i < G__19120__a.length) {
        G__19120__a[G__19120__i] = arguments[G__19120__i + 0];
        ++G__19120__i;
      }
      xs = new cljs.core.IndexedSeq(G__19120__a, 0);
    }
    return list__delegate.call(this, xs);
  };
  list.cljs$lang$maxFixedArity = 0;
  list.cljs$lang$applyTo = function(arglist__19121) {
    var xs = cljs.core.seq(arglist__19121);
    return list__delegate(xs);
  };
  list.cljs$core$IFn$_invoke$arity$variadic = list__delegate;
  return list;
}();
cljs.core.Cons = function(meta, first, rest, __hash) {
  this.meta = meta;
  this.first = first;
  this.rest = rest;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 65929452;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.Cons.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.Cons.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Cons.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.Cons.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Cons(self__.meta, self__.first, self__.rest, self__.__hash);
};
cljs.core.Cons.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.rest == null) {
    return null;
  } else {
    return cljs.core.seq(self__.rest);
  }
};
cljs.core.Cons.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__7925__auto__ = self__.__hash;
  if (!(h__7925__auto__ == null)) {
    return h__7925__auto__;
  } else {
    var h__7925__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__7925__auto____$1;
    return h__7925__auto____$1;
  }
};
cljs.core.Cons.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.Cons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.Cons.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.first;
};
cljs.core.Cons.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.rest == null) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.rest;
  }
};
cljs.core.Cons.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.Cons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.Cons(meta__$1, self__.first, self__.rest, self__.__hash);
};
cljs.core.Cons.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.Cons(null, o, coll__$1, self__.__hash);
};
cljs.core.Cons.cljs$lang$type = true;
cljs.core.Cons.cljs$lang$ctorStr = "cljs.core/Cons";
cljs.core.Cons.cljs$lang$ctorPrWriter = function(this__8091__auto__, writer__8092__auto__, opt__8093__auto__) {
  return cljs.core._write(writer__8092__auto__, "cljs.core/Cons");
};
cljs.core.__GT_Cons = function __GT_Cons(meta, first, rest, __hash) {
  return new cljs.core.Cons(meta, first, rest, __hash);
};
cljs.core.Cons.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__8482__auto__ = this;
  return cljs.core.es6_iterator(this__8482__auto__);
};
cljs.core.cons = function cons(x, coll) {
  if (function() {
    var or__7504__auto__ = coll == null;
    if (or__7504__auto__) {
      return or__7504__auto__;
    } else {
      var G__19125 = coll;
      if (G__19125) {
        var bit__8178__auto__ = G__19125.cljs$lang$protocol_mask$partition0$ & 64;
        if (bit__8178__auto__ || G__19125.cljs$core$ISeq$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }
  }()) {
    return new cljs.core.Cons(null, x, coll, null);
  } else {
    return new cljs.core.Cons(null, x, cljs.core.seq(coll), null);
  }
};
cljs.core.list_QMARK_ = function list_QMARK_(x) {
  var G__19127 = x;
  if (G__19127) {
    var bit__8185__auto__ = G__19127.cljs$lang$protocol_mask$partition0$ & 33554432;
    if (bit__8185__auto__ || G__19127.cljs$core$IList$) {
      return true;
    } else {
      if (!G__19127.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IList, G__19127);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IList, G__19127);
  }
};
cljs.core.hash_keyword = function hash_keyword(k) {
  return cljs.core.hash_symbol(k) + 2654435769 | 0;
};
cljs.core.compare_keywords = function compare_keywords(a, b) {
  if (a.fqn === b.fqn) {
    return 0;
  } else {
    if (cljs.core.truth_(function() {
      var and__7492__auto__ = cljs.core.not(a.ns);
      if (and__7492__auto__) {
        return b.ns;
      } else {
        return and__7492__auto__;
      }
    }())) {
      return-1;
    } else {
      if (cljs.core.truth_(a.ns)) {
        if (cljs.core.not(b.ns)) {
          return 1;
        } else {
          var nsc = function() {
            var G__19134 = a.ns;
            var G__19135 = b.ns;
            return goog.array.defaultCompare(G__19134, G__19135);
          }();
          if (0 === nsc) {
            var G__19136 = a.name;
            var G__19137 = b.name;
            return goog.array.defaultCompare(G__19136, G__19137);
          } else {
            return nsc;
          }
        }
      } else {
        var G__19138 = a.name;
        var G__19139 = b.name;
        return goog.array.defaultCompare(G__19138, G__19139);
      }
    }
  }
};
cljs.core.Keyword = function(ns, name, fqn, _hash) {
  this.ns = ns;
  this.name = name;
  this.fqn = fqn;
  this._hash = _hash;
  this.cljs$lang$protocol_mask$partition0$ = 2153775105;
  this.cljs$lang$protocol_mask$partition1$ = 4096;
};
cljs.core.Keyword.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(o, writer, _) {
  var self__ = this;
  var o__$1 = this;
  return cljs.core._write(writer, [cljs.core.str(":"), cljs.core.str(self__.fqn)].join(""));
};
cljs.core.Keyword.prototype.cljs$core$INamed$_name$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.name;
};
cljs.core.Keyword.prototype.cljs$core$INamed$_namespace$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.ns;
};
cljs.core.Keyword.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  var h__7925__auto__ = self__._hash;
  if (!(h__7925__auto__ == null)) {
    return h__7925__auto__;
  } else {
    var h__7925__auto____$1 = cljs.core.hash_keyword(this$__$1);
    self__._hash = h__7925__auto____$1;
    return h__7925__auto____$1;
  }
};
cljs.core.Keyword.prototype.call = function() {
  var G__19141 = null;
  var G__19141__2 = function(self__, coll) {
    var self__ = this;
    var self____$1 = this;
    var kw = self____$1;
    return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll, kw);
  };
  var G__19141__3 = function(self__, coll, not_found) {
    var self__ = this;
    var self____$1 = this;
    var kw = self____$1;
    return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll, kw, not_found);
  };
  G__19141 = function(self__, coll, not_found) {
    switch(arguments.length) {
      case 2:
        return G__19141__2.call(this, self__, coll);
      case 3:
        return G__19141__3.call(this, self__, coll, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__19141.cljs$core$IFn$_invoke$arity$2 = G__19141__2;
  G__19141.cljs$core$IFn$_invoke$arity$3 = G__19141__3;
  return G__19141;
}();
cljs.core.Keyword.prototype.apply = function(self__, args19140) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args19140)));
};
cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  var self__ = this;
  var kw = this;
  return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll, kw);
};
cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$2 = function(coll, not_found) {
  var self__ = this;
  var kw = this;
  return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll, kw, not_found);
};
cljs.core.Keyword.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  if (other instanceof cljs.core.Keyword) {
    return self__.fqn === other.fqn;
  } else {
    return false;
  }
};
cljs.core.Keyword.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return[cljs.core.str(":"), cljs.core.str(self__.fqn)].join("");
};
cljs.core.Keyword.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Keyword.cljs$lang$type = true;
cljs.core.Keyword.cljs$lang$ctorStr = "cljs.core/Keyword";
cljs.core.Keyword.cljs$lang$ctorPrWriter = function(this__8091__auto__, writer__8092__auto__, opt__8093__auto__) {
  return cljs.core._write(writer__8092__auto__, "cljs.core/Keyword");
};
cljs.core.__GT_Keyword = function __GT_Keyword(ns, name, fqn, _hash) {
  return new cljs.core.Keyword(ns, name, fqn, _hash);
};
cljs.core.keyword_QMARK_ = function keyword_QMARK_(x) {
  return x instanceof cljs.core.Keyword;
};
cljs.core.keyword_identical_QMARK_ = function keyword_identical_QMARK_(x, y) {
  if (x === y) {
    return true;
  } else {
    if (x instanceof cljs.core.Keyword && y instanceof cljs.core.Keyword) {
      return x.fqn === y.fqn;
    } else {
      return false;
    }
  }
};
cljs.core.namespace = function namespace(x) {
  if (function() {
    var G__19143 = x;
    if (G__19143) {
      var bit__8178__auto__ = G__19143.cljs$lang$protocol_mask$partition1$ & 4096;
      if (bit__8178__auto__ || G__19143.cljs$core$INamed$) {
        return true;
      } else {
        return false;
      }
    } else {
      return false;
    }
  }()) {
    return x.cljs$core$INamed$_namespace$arity$1(null);
  } else {
    throw new Error([cljs.core.str("Doesn't support namespace: "), cljs.core.str(x)].join(""));
  }
};
cljs.core.keyword = function() {
  var keyword = null;
  var keyword__1 = function(name) {
    if (name instanceof cljs.core.Keyword) {
      return name;
    } else {
      if (name instanceof cljs.core.Symbol) {
        return new cljs.core.Keyword(cljs.core.namespace(name), function() {
          var G__19145 = name;
          return cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__19145) : cljs.core.name.call(null, G__19145);
        }(), name.str, null);
      } else {
        if (typeof name === "string") {
          var parts = name.split("/");
          if (parts.length === 2) {
            return new cljs.core.Keyword(parts[0], parts[1], name, null);
          } else {
            return new cljs.core.Keyword(null, parts[0], name, null);
          }
        } else {
          return null;
        }
      }
    }
  };
  var keyword__2 = function(ns, name) {
    return new cljs.core.Keyword(ns, name, [cljs.core.str(cljs.core.truth_(ns) ? [cljs.core.str(ns), cljs.core.str("/")].join("") : null), cljs.core.str(name)].join(""), null);
  };
  keyword = function(ns, name) {
    switch(arguments.length) {
      case 1:
        return keyword__1.call(this, ns);
      case 2:
        return keyword__2.call(this, ns, name);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  keyword.cljs$core$IFn$_invoke$arity$1 = keyword__1;
  keyword.cljs$core$IFn$_invoke$arity$2 = keyword__2;
  return keyword;
}();
cljs.core.LazySeq = function(meta, fn, s, __hash) {
  this.meta = meta;
  this.fn = fn;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374988;
};
cljs.core.LazySeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.LazySeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.LazySeq.prototype.sval = function() {
  var self__ = this;
  var coll = this;
  if (self__.fn == null) {
    return self__.s;
  } else {
    self__.s = function() {
      return self__.fn.cljs$core$IFn$_invoke$arity$0 ? self__.fn.cljs$core$IFn$_invoke$arity$0() : self__.fn.call(null);
    }();
    self__.fn = null;
    return self__.s;
  }
};
cljs.core.LazySeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.LazySeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  cljs.core._seq(coll__$1);
  if (self__.s == null) {
    return null;
  } else {
    return cljs.core.next(self__.s);
  }
};
cljs.core.LazySeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__7925__auto__ = self__.__hash;
  if (!(h__7925__auto__ == null)) {
    return h__7925__auto__;
  } else {
    var h__7925__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__7925__auto____$1;
    return h__7925__auto____$1;
  }
};
cljs.core.LazySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.LazySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.LazySeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  cljs.core._seq(coll__$1);
  if (self__.s == null) {
    return null;
  } else {
    return cljs.core.first(self__.s);
  }
};
cljs.core.LazySeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  cljs.core._seq(coll__$1);
  if (!(self__.s == null)) {
    return cljs.core.rest(self__.s);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.LazySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  coll__$1.sval();
  if (self__.s == null) {
    return null;
  } else {
    var ls = self__.s;
    while (true) {
      if (ls instanceof cljs.core.LazySeq) {
        var G__19146 = ls.sval();
        ls = G__19146;
        continue;
      } else {
        self__.s = ls;
        return cljs.core.seq(self__.s);
      }
      break;
    }
  }
};
cljs.core.LazySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.LazySeq(meta__$1, self__.fn, self__.s, self__.__hash);
};
cljs.core.LazySeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.LazySeq.cljs$lang$type = true;
cljs.core.LazySeq.cljs$lang$ctorStr = "cljs.core/LazySeq";
cljs.core.LazySeq.cljs$lang$ctorPrWriter = function(this__8091__auto__, writer__8092__auto__, opt__8093__auto__) {
  return cljs.core._write(writer__8092__auto__, "cljs.core/LazySeq");
};
cljs.core.__GT_LazySeq = function __GT_LazySeq(meta, fn, s, __hash) {
  return new cljs.core.LazySeq(meta, fn, s, __hash);
};
cljs.core.LazySeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__8482__auto__ = this;
  return cljs.core.es6_iterator(this__8482__auto__);
};
cljs.core.ChunkBuffer = function(buf, end) {
  this.buf = buf;
  this.end = end;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2;
};
cljs.core.ChunkBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.end;
};
cljs.core.ChunkBuffer.prototype.add = function(o) {
  var self__ = this;
  var _ = this;
  self__.buf[self__.end] = o;
  return self__.end = self__.end + 1;
};
cljs.core.ChunkBuffer.prototype.chunk = function(o) {
  var self__ = this;
  var _ = this;
  var ret = new cljs.core.ArrayChunk(self__.buf, 0, self__.end);
  self__.buf = null;
  return ret;
};
cljs.core.ChunkBuffer.cljs$lang$type = true;
cljs.core.ChunkBuffer.cljs$lang$ctorStr = "cljs.core/ChunkBuffer";
cljs.core.ChunkBuffer.cljs$lang$ctorPrWriter = function(this__8091__auto__, writer__8092__auto__, opt__8093__auto__) {
  return cljs.core._write(writer__8092__auto__, "cljs.core/ChunkBuffer");
};
cljs.core.__GT_ChunkBuffer = function __GT_ChunkBuffer(buf, end) {
  return new cljs.core.ChunkBuffer(buf, end);
};
cljs.core.chunk_buffer = function chunk_buffer(capacity) {
  return new cljs.core.ChunkBuffer(new Array(capacity), 0);
};
cljs.core.ArrayChunk = function(arr, off, end) {
  this.arr = arr;
  this.off = off;
  this.end = end;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 524306;
};
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr, f, self__.arr[self__.off], self__.off + 1);
};
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr, f, start, self__.off);
};
cljs.core.ArrayChunk.prototype.cljs$core$IChunk$ = true;
cljs.core.ArrayChunk.prototype.cljs$core$IChunk$_drop_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.off === self__.end) {
    throw new Error("-drop-first of empty chunk");
  } else {
    return new cljs.core.ArrayChunk(self__.arr, self__.off + 1, self__.end);
  }
};
cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, i) {
  var self__ = this;
  var coll__$1 = this;
  return self__.arr[self__.off + i];
};
cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, i, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (i >= 0 && i < self__.end - self__.off) {
    return self__.arr[self__.off + i];
  } else {
    return not_found;
  }
};
cljs.core.ArrayChunk.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.end - self__.off;
};
cljs.core.ArrayChunk.cljs$lang$type = true;
cljs.core.ArrayChunk.cljs$lang$ctorStr = "cljs.core/ArrayChunk";
cljs.core.ArrayChunk.cljs$lang$ctorPrWriter = function(this__8091__auto__, writer__8092__auto__, opt__8093__auto__) {
  return cljs.core._write(writer__8092__auto__, "cljs.core/ArrayChunk");
};
cljs.core.__GT_ArrayChunk = function __GT_ArrayChunk(arr, off, end) {
  return new cljs.core.ArrayChunk(arr, off, end);
};
cljs.core.array_chunk = function() {
  var array_chunk = null;
  var array_chunk__1 = function(arr) {
    return new cljs.core.ArrayChunk(arr, 0, arr.length);
  };
  var array_chunk__2 = function(arr, off) {
    return new cljs.core.ArrayChunk(arr, off, arr.length);
  };
  var array_chunk__3 = function(arr, off, end) {
    return new cljs.core.ArrayChunk(arr, off, end);
  };
  array_chunk = function(arr, off, end) {
    switch(arguments.length) {
      case 1:
        return array_chunk__1.call(this, arr);
      case 2:
        return array_chunk__2.call(this, arr, off);
      case 3:
        return array_chunk__3.call(this, arr, off, end);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  array_chunk.cljs$core$IFn$_invoke$arity$1 = array_chunk__1;
  array_chunk.cljs$core$IFn$_invoke$arity$2 = array_chunk__2;
  array_chunk.cljs$core$IFn$_invoke$arity$3 = array_chunk__3;
  return array_chunk;
}();
cljs.core.ChunkedCons = function(chunk, more, meta, __hash) {
  this.chunk = chunk;
  this.more = more;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 31850732;
  this.cljs$lang$protocol_mask$partition1$ = 1536;
};
cljs.core.ChunkedCons.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.ChunkedCons.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.ChunkedCons.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ChunkedCons.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core._count(self__.chunk) > 1) {
    return new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk), self__.more, self__.meta, null);
  } else {
    var more__$1 = cljs.core._seq(self__.more);
    if (more__$1 == null) {
      return null;
    } else {
      return more__$1;
    }
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__7925__auto__ = self__.__hash;
  if (!(h__7925__auto__ == null)) {
    return h__7925__auto__;
  } else {
    var h__7925__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__7925__auto____$1;
    return h__7925__auto____$1;
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.ChunkedCons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.chunk, 0);
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core._count(self__.chunk) > 1) {
    return new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk), self__.more, self__.meta, null);
  } else {
    if (self__.more == null) {
      return cljs.core.List.EMPTY;
    } else {
      return self__.more;
    }
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.chunk;
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.more == null) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.more;
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, m) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ChunkedCons(self__.chunk, self__.more, m, self__.__hash);
};
cljs.core.ChunkedCons.prototype.cljs$core$ICollection$_conj$arity$2 = function(this$, o) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.cons(o, this$__$1);
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.more == null) {
    return null;
  } else {
    return self__.more;
  }
};
cljs.core.ChunkedCons.cljs$lang$type = true;
cljs.core.ChunkedCons.cljs$lang$ctorStr = "cljs.core/ChunkedCons";
cljs.core.ChunkedCons.cljs$lang$ctorPrWriter = function(this__8091__auto__, writer__8092__auto__, opt__8093__auto__) {
  return cljs.core._write(writer__8092__auto__, "cljs.core/ChunkedCons");
};
cljs.core.__GT_ChunkedCons = function __GT_ChunkedCons(chunk, more, meta, __hash) {
  return new cljs.core.ChunkedCons(chunk, more, meta, __hash);
};
cljs.core.ChunkedCons.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__8482__auto__ = this;
  return cljs.core.es6_iterator(this__8482__auto__);
};
cljs.core.chunk_cons = function chunk_cons(chunk, rest) {
  if (cljs.core._count(chunk) === 0) {
    return rest;
  } else {
    return new cljs.core.ChunkedCons(chunk, rest, null, null);
  }
};
cljs.core.chunk_append = function chunk_append(b, x) {
  return b.add(x);
};
cljs.core.chunk = function chunk(b) {
  return b.chunk();
};
cljs.core.chunk_first = function chunk_first(s) {
  return cljs.core._chunked_first(s);
};
cljs.core.chunk_rest = function chunk_rest(s) {
  return cljs.core._chunked_rest(s);
};
cljs.core.chunk_next = function chunk_next(s) {
  if (function() {
    var G__19148 = s;
    if (G__19148) {
      var bit__8178__auto__ = G__19148.cljs$lang$protocol_mask$partition1$ & 1024;
      if (bit__8178__auto__ || G__19148.cljs$core$IChunkedNext$) {
        return true;
      } else {
        return false;
      }
    } else {
      return false;
    }
  }()) {
    return cljs.core._chunked_next(s);
  } else {
    return cljs.core.seq(cljs.core._chunked_rest(s));
  }
};
cljs.core.to_array = function to_array(s) {
  var ary = [];
  var s__$1 = s;
  while (true) {
    if (cljs.core.seq(s__$1)) {
      ary.push(cljs.core.first(s__$1));
      var G__19149 = cljs.core.next(s__$1);
      s__$1 = G__19149;
      continue;
    } else {
      return ary;
    }
    break;
  }
};
cljs.core.to_array_2d = function to_array_2d(coll) {
  var ret = new Array(cljs.core.count(coll));
  var i_19150 = 0;
  var xs_19151 = cljs.core.seq(coll);
  while (true) {
    if (xs_19151) {
      ret[i_19150] = cljs.core.to_array(cljs.core.first(xs_19151));
      var G__19152 = i_19150 + 1;
      var G__19153 = cljs.core.next(xs_19151);
      i_19150 = G__19152;
      xs_19151 = G__19153;
      continue;
    } else {
    }
    break;
  }
  return ret;
};
cljs.core.int_array = function() {
  var int_array = null;
  var int_array__1 = function(size_or_seq) {
    if (typeof size_or_seq === "number") {
      return int_array.cljs$core$IFn$_invoke$arity$2(size_or_seq, null);
    } else {
      return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
    }
  };
  var int_array__2 = function(size, init_val_or_seq) {
    var a = new Array(size);
    if (cljs.core.seq_QMARK_(init_val_or_seq)) {
      var s = cljs.core.seq(init_val_or_seq);
      var i = 0;
      var s__$1 = s;
      while (true) {
        if (s__$1 && i < size) {
          a[i] = cljs.core.first(s__$1);
          var G__19156 = i + 1;
          var G__19157 = cljs.core.next(s__$1);
          i = G__19156;
          s__$1 = G__19157;
          continue;
        } else {
          return a;
        }
        break;
      }
    } else {
      var n__8391__auto___19158 = size;
      var i_19159 = 0;
      while (true) {
        if (i_19159 < n__8391__auto___19158) {
          a[i_19159] = init_val_or_seq;
          var G__19160 = i_19159 + 1;
          i_19159 = G__19160;
          continue;
        } else {
        }
        break;
      }
      return a;
    }
  };
  int_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return int_array__1.call(this, size);
      case 2:
        return int_array__2.call(this, size, init_val_or_seq);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  int_array.cljs$core$IFn$_invoke$arity$1 = int_array__1;
  int_array.cljs$core$IFn$_invoke$arity$2 = int_array__2;
  return int_array;
}();
cljs.core.long_array = function() {
  var long_array = null;
  var long_array__1 = function(size_or_seq) {
    if (typeof size_or_seq === "number") {
      return long_array.cljs$core$IFn$_invoke$arity$2(size_or_seq, null);
    } else {
      return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
    }
  };
  var long_array__2 = function(size, init_val_or_seq) {
    var a = new Array(size);
    if (cljs.core.seq_QMARK_(init_val_or_seq)) {
      var s = cljs.core.seq(init_val_or_seq);
      var i = 0;
      var s__$1 = s;
      while (true) {
        if (s__$1 && i < size) {
          a[i] = cljs.core.first(s__$1);
          var G__19163 = i + 1;
          var G__19164 = cljs.core.next(s__$1);
          i = G__19163;
          s__$1 = G__19164;
          continue;
        } else {
          return a;
        }
        break;
      }
    } else {
      var n__8391__auto___19165 = size;
      var i_19166 = 0;
      while (true) {
        if (i_19166 < n__8391__auto___19165) {
          a[i_19166] = init_val_or_seq;
          var G__19167 = i_19166 + 1;
          i_19166 = G__19167;
          continue;
        } else {
        }
        break;
      }
      return a;
    }
  };
  long_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return long_array__1.call(this, size);
      case 2:
        return long_array__2.call(this, size, init_val_or_seq);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  long_array.cljs$core$IFn$_invoke$arity$1 = long_array__1;
  long_array.cljs$core$IFn$_invoke$arity$2 = long_array__2;
  return long_array;
}();
cljs.core.double_array = function() {
  var double_array = null;
  var double_array__1 = function(size_or_seq) {
    if (typeof size_or_seq === "number") {
      return double_array.cljs$core$IFn$_invoke$arity$2(size_or_seq, null);
    } else {
      return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
    }
  };
  var double_array__2 = function(size, init_val_or_seq) {
    var a = new Array(size);
    if (cljs.core.seq_QMARK_(init_val_or_seq)) {
      var s = cljs.core.seq(init_val_or_seq);
      var i = 0;
      var s__$1 = s;
      while (true) {
        if (s__$1 && i < size) {
          a[i] = cljs.core.first(s__$1);
          var G__19170 = i + 1;
          var G__19171 = cljs.core.next(s__$1);
          i = G__19170;
          s__$1 = G__19171;
          continue;
        } else {
          return a;
        }
        break;
      }
    } else {
      var n__8391__auto___19172 = size;
      var i_19173 = 0;
      while (true) {
        if (i_19173 < n__8391__auto___19172) {
          a[i_19173] = init_val_or_seq;
          var G__19174 = i_19173 + 1;
          i_19173 = G__19174;
          continue;
        } else {
        }
        break;
      }
      return a;
    }
  };
  double_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return double_array__1.call(this, size);
      case 2:
        return double_array__2.call(this, size, init_val_or_seq);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  double_array.cljs$core$IFn$_invoke$arity$1 = double_array__1;
  double_array.cljs$core$IFn$_invoke$arity$2 = double_array__2;
  return double_array;
}();
cljs.core.object_array = function() {
  var object_array = null;
  var object_array__1 = function(size_or_seq) {
    if (typeof size_or_seq === "number") {
      return object_array.cljs$core$IFn$_invoke$arity$2(size_or_seq, null);
    } else {
      return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
    }
  };
  var object_array__2 = function(size, init_val_or_seq) {
    var a = new Array(size);
    if (cljs.core.seq_QMARK_(init_val_or_seq)) {
      var s = cljs.core.seq(init_val_or_seq);
      var i = 0;
      var s__$1 = s;
      while (true) {
        if (s__$1 && i < size) {
          a[i] = cljs.core.first(s__$1);
          var G__19177 = i + 1;
          var G__19178 = cljs.core.next(s__$1);
          i = G__19177;
          s__$1 = G__19178;
          continue;
        } else {
          return a;
        }
        break;
      }
    } else {
      var n__8391__auto___19179 = size;
      var i_19180 = 0;
      while (true) {
        if (i_19180 < n__8391__auto___19179) {
          a[i_19180] = init_val_or_seq;
          var G__19181 = i_19180 + 1;
          i_19180 = G__19181;
          continue;
        } else {
        }
        break;
      }
      return a;
    }
  };
  object_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return object_array__1.call(this, size);
      case 2:
        return object_array__2.call(this, size, init_val_or_seq);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  object_array.cljs$core$IFn$_invoke$arity$1 = object_array__1;
  object_array.cljs$core$IFn$_invoke$arity$2 = object_array__2;
  return object_array;
}();
cljs.core.bounded_count = function bounded_count(s, n) {
  if (cljs.core.counted_QMARK_(s)) {
    return cljs.core.count(s);
  } else {
    var s__$1 = s;
    var i = n;
    var sum = 0;
    while (true) {
      if (i > 0 && cljs.core.seq(s__$1)) {
        var G__19182 = cljs.core.next(s__$1);
        var G__19183 = i - 1;
        var G__19184 = sum + 1;
        s__$1 = G__19182;
        i = G__19183;
        sum = G__19184;
        continue;
      } else {
        return sum;
      }
      break;
    }
  }
};
cljs.core.spread = function spread(arglist) {
  if (arglist == null) {
    return null;
  } else {
    if (cljs.core.next(arglist) == null) {
      return cljs.core.seq(cljs.core.first(arglist));
    } else {
      return cljs.core.cons(cljs.core.first(arglist), spread(cljs.core.next(arglist)));
    }
  }
};
cljs.core.concat = function() {
  var concat = null;
  var concat__0 = function() {
    return new cljs.core.LazySeq(null, function() {
      return null;
    }, null, null);
  };
  var concat__1 = function(x) {
    return new cljs.core.LazySeq(null, function() {
      return x;
    }, null, null);
  };
  var concat__2 = function(x, y) {
    return new cljs.core.LazySeq(null, function() {
      var s = cljs.core.seq(x);
      if (s) {
        if (cljs.core.chunked_seq_QMARK_(s)) {
          return cljs.core.chunk_cons(cljs.core.chunk_first(s), concat.cljs$core$IFn$_invoke$arity$2(cljs.core.chunk_rest(s), y));
        } else {
          return cljs.core.cons(cljs.core.first(s), concat.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s), y));
        }
      } else {
        return y;
      }
    }, null, null);
  };
  var concat__3 = function() {
    var G__19204__delegate = function(x, y, zs) {
      var cat = function cat(xys, zs__$1) {
        return new cljs.core.LazySeq(null, function() {
          var xys__$1 = cljs.core.seq(xys);
          if (xys__$1) {
            if (cljs.core.chunked_seq_QMARK_(xys__$1)) {
              return cljs.core.chunk_cons(cljs.core.chunk_first(xys__$1), cat(cljs.core.chunk_rest(xys__$1), zs__$1));
            } else {
              return cljs.core.cons(cljs.core.first(xys__$1), cat(cljs.core.rest(xys__$1), zs__$1));
            }
          } else {
            if (cljs.core.truth_(zs__$1)) {
              return cat(cljs.core.first(zs__$1), cljs.core.next(zs__$1));
            } else {
              return null;
            }
          }
        }, null, null);
      };
      return cat(concat.cljs$core$IFn$_invoke$arity$2(x, y), zs);
    };
    var G__19204 = function(x, y, var_args) {
      var zs = null;
      if (arguments.length > 2) {
        var G__19205__i = 0, G__19205__a = new Array(arguments.length - 2);
        while (G__19205__i < G__19205__a.length) {
          G__19205__a[G__19205__i] = arguments[G__19205__i + 2];
          ++G__19205__i;
        }
        zs = new cljs.core.IndexedSeq(G__19205__a, 0);
      }
      return G__19204__delegate.call(this, x, y, zs);
    };
    G__19204.cljs$lang$maxFixedArity = 2;
    G__19204.cljs$lang$applyTo = function(arglist__19206) {
      var x = cljs.core.first(arglist__19206);
      arglist__19206 = cljs.core.next(arglist__19206);
      var y = cljs.core.first(arglist__19206);
      var zs = cljs.core.rest(arglist__19206);
      return G__19204__delegate(x, y, zs);
    };
    G__19204.cljs$core$IFn$_invoke$arity$variadic = G__19204__delegate;
    return G__19204;
  }();
  concat = function(x, y, var_args) {
    var zs = var_args;
    switch(arguments.length) {
      case 0:
        return concat__0.call(this);
      case 1:
        return concat__1.call(this, x);
      case 2:
        return concat__2.call(this, x, y);
      default:
        var G__19207 = null;
        if (arguments.length > 2) {
          var G__19208__i = 0, G__19208__a = new Array(arguments.length - 2);
          while (G__19208__i < G__19208__a.length) {
            G__19208__a[G__19208__i] = arguments[G__19208__i + 2];
            ++G__19208__i;
          }
          G__19207 = new cljs.core.IndexedSeq(G__19208__a, 0);
        }
        return concat__3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__19207);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  concat.cljs$lang$maxFixedArity = 2;
  concat.cljs$lang$applyTo = concat__3.cljs$lang$applyTo;
  concat.cljs$core$IFn$_invoke$arity$0 = concat__0;
  concat.cljs$core$IFn$_invoke$arity$1 = concat__1;
  concat.cljs$core$IFn$_invoke$arity$2 = concat__2;
  concat.cljs$core$IFn$_invoke$arity$variadic = concat__3.cljs$core$IFn$_invoke$arity$variadic;
  return concat;
}();
cljs.core.list_STAR_ = function() {
  var list_STAR_ = null;
  var list_STAR___1 = function(args) {
    return cljs.core.seq(args);
  };
  var list_STAR___2 = function(a, args) {
    return cljs.core.cons(a, args);
  };
  var list_STAR___3 = function(a, b, args) {
    return cljs.core.cons(a, cljs.core.cons(b, args));
  };
  var list_STAR___4 = function(a, b, c, args) {
    return cljs.core.cons(a, cljs.core.cons(b, cljs.core.cons(c, args)));
  };
  var list_STAR___5 = function() {
    var G__19209__delegate = function(a, b, c, d, more) {
      return cljs.core.cons(a, cljs.core.cons(b, cljs.core.cons(c, cljs.core.cons(d, cljs.core.spread(more)))));
    };
    var G__19209 = function(a, b, c, d, var_args) {
      var more = null;
      if (arguments.length > 4) {
        var G__19210__i = 0, G__19210__a = new Array(arguments.length - 4);
        while (G__19210__i < G__19210__a.length) {
          G__19210__a[G__19210__i] = arguments[G__19210__i + 4];
          ++G__19210__i;
        }
        more = new cljs.core.IndexedSeq(G__19210__a, 0);
      }
      return G__19209__delegate.call(this, a, b, c, d, more);
    };
    G__19209.cljs$lang$maxFixedArity = 4;
    G__19209.cljs$lang$applyTo = function(arglist__19211) {
      var a = cljs.core.first(arglist__19211);
      arglist__19211 = cljs.core.next(arglist__19211);
      var b = cljs.core.first(arglist__19211);
      arglist__19211 = cljs.core.next(arglist__19211);
      var c = cljs.core.first(arglist__19211);
      arglist__19211 = cljs.core.next(arglist__19211);
      var d = cljs.core.first(arglist__19211);
      var more = cljs.core.rest(arglist__19211);
      return G__19209__delegate(a, b, c, d, more);
    };
    G__19209.cljs$core$IFn$_invoke$arity$variadic = G__19209__delegate;
    return G__19209;
  }();
  list_STAR_ = function(a, b, c, d, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return list_STAR___1.call(this, a);
      case 2:
        return list_STAR___2.call(this, a, b);
      case 3:
        return list_STAR___3.call(this, a, b, c);
      case 4:
        return list_STAR___4.call(this, a, b, c, d);
      default:
        var G__19212 = null;
        if (arguments.length > 4) {
          var G__19213__i = 0, G__19213__a = new Array(arguments.length - 4);
          while (G__19213__i < G__19213__a.length) {
            G__19213__a[G__19213__i] = arguments[G__19213__i + 4];
            ++G__19213__i;
          }
          G__19212 = new cljs.core.IndexedSeq(G__19213__a, 0);
        }
        return list_STAR___5.cljs$core$IFn$_invoke$arity$variadic(a, b, c, d, G__19212);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  list_STAR_.cljs$lang$maxFixedArity = 4;
  list_STAR_.cljs$lang$applyTo = list_STAR___5.cljs$lang$applyTo;
  list_STAR_.cljs$core$IFn$_invoke$arity$1 = list_STAR___1;
  list_STAR_.cljs$core$IFn$_invoke$arity$2 = list_STAR___2;
  list_STAR_.cljs$core$IFn$_invoke$arity$3 = list_STAR___3;
  list_STAR_.cljs$core$IFn$_invoke$arity$4 = list_STAR___4;
  list_STAR_.cljs$core$IFn$_invoke$arity$variadic = list_STAR___5.cljs$core$IFn$_invoke$arity$variadic;
  return list_STAR_;
}();
cljs.core.transient$ = function transient$(coll) {
  return cljs.core._as_transient(coll);
};
cljs.core.persistent_BANG_ = function persistent_BANG_(tcoll) {
  return cljs.core._persistent_BANG_(tcoll);
};
cljs.core.conj_BANG_ = function() {
  var conj_BANG_ = null;
  var conj_BANG___0 = function() {
    return cljs.core.transient$(cljs.core.PersistentVector.EMPTY);
  };
  var conj_BANG___1 = function(coll) {
    return coll;
  };
  var conj_BANG___2 = function(tcoll, val) {
    return cljs.core._conj_BANG_(tcoll, val);
  };
  var conj_BANG___3 = function() {
    var G__19214__delegate = function(tcoll, val, vals) {
      while (true) {
        var ntcoll = cljs.core._conj_BANG_(tcoll, val);
        if (cljs.core.truth_(vals)) {
          var G__19215 = ntcoll;
          var G__19216 = cljs.core.first(vals);
          var G__19217 = cljs.core.next(vals);
          tcoll = G__19215;
          val = G__19216;
          vals = G__19217;
          continue;
        } else {
          return ntcoll;
        }
        break;
      }
    };
    var G__19214 = function(tcoll, val, var_args) {
      var vals = null;
      if (arguments.length > 2) {
        var G__19218__i = 0, G__19218__a = new Array(arguments.length - 2);
        while (G__19218__i < G__19218__a.length) {
          G__19218__a[G__19218__i] = arguments[G__19218__i + 2];
          ++G__19218__i;
        }
        vals = new cljs.core.IndexedSeq(G__19218__a, 0);
      }
      return G__19214__delegate.call(this, tcoll, val, vals);
    };
    G__19214.cljs$lang$maxFixedArity = 2;
    G__19214.cljs$lang$applyTo = function(arglist__19219) {
      var tcoll = cljs.core.first(arglist__19219);
      arglist__19219 = cljs.core.next(arglist__19219);
      var val = cljs.core.first(arglist__19219);
      var vals = cljs.core.rest(arglist__19219);
      return G__19214__delegate(tcoll, val, vals);
    };
    G__19214.cljs$core$IFn$_invoke$arity$variadic = G__19214__delegate;
    return G__19214;
  }();
  conj_BANG_ = function(tcoll, val, var_args) {
    var vals = var_args;
    switch(arguments.length) {
      case 0:
        return conj_BANG___0.call(this);
      case 1:
        return conj_BANG___1.call(this, tcoll);
      case 2:
        return conj_BANG___2.call(this, tcoll, val);
      default:
        var G__19220 = null;
        if (arguments.length > 2) {
          var G__19221__i = 0, G__19221__a = new Array(arguments.length - 2);
          while (G__19221__i < G__19221__a.length) {
            G__19221__a[G__19221__i] = arguments[G__19221__i + 2];
            ++G__19221__i;
          }
          G__19220 = new cljs.core.IndexedSeq(G__19221__a, 0);
        }
        return conj_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll, val, G__19220);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  conj_BANG_.cljs$lang$maxFixedArity = 2;
  conj_BANG_.cljs$lang$applyTo = conj_BANG___3.cljs$lang$applyTo;
  conj_BANG_.cljs$core$IFn$_invoke$arity$0 = conj_BANG___0;
  conj_BANG_.cljs$core$IFn$_invoke$arity$1 = conj_BANG___1;
  conj_BANG_.cljs$core$IFn$_invoke$arity$2 = conj_BANG___2;
  conj_BANG_.cljs$core$IFn$_invoke$arity$variadic = conj_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
  return conj_BANG_;
}();
cljs.core.assoc_BANG_ = function() {
  var assoc_BANG_ = null;
  var assoc_BANG___3 = function(tcoll, key, val) {
    return cljs.core._assoc_BANG_(tcoll, key, val);
  };
  var assoc_BANG___4 = function() {
    var G__19222__delegate = function(tcoll, key, val, kvs) {
      while (true) {
        var ntcoll = cljs.core._assoc_BANG_(tcoll, key, val);
        if (cljs.core.truth_(kvs)) {
          var G__19223 = ntcoll;
          var G__19224 = cljs.core.first(kvs);
          var G__19225 = cljs.core.second(kvs);
          var G__19226 = cljs.core.nnext(kvs);
          tcoll = G__19223;
          key = G__19224;
          val = G__19225;
          kvs = G__19226;
          continue;
        } else {
          return ntcoll;
        }
        break;
      }
    };
    var G__19222 = function(tcoll, key, val, var_args) {
      var kvs = null;
      if (arguments.length > 3) {
        var G__19227__i = 0, G__19227__a = new Array(arguments.length - 3);
        while (G__19227__i < G__19227__a.length) {
          G__19227__a[G__19227__i] = arguments[G__19227__i + 3];
          ++G__19227__i;
        }
        kvs = new cljs.core.IndexedSeq(G__19227__a, 0);
      }
      return G__19222__delegate.call(this, tcoll, key, val, kvs);
    };
    G__19222.cljs$lang$maxFixedArity = 3;
    G__19222.cljs$lang$applyTo = function(arglist__19228) {
      var tcoll = cljs.core.first(arglist__19228);
      arglist__19228 = cljs.core.next(arglist__19228);
      var key = cljs.core.first(arglist__19228);
      arglist__19228 = cljs.core.next(arglist__19228);
      var val = cljs.core.first(arglist__19228);
      var kvs = cljs.core.rest(arglist__19228);
      return G__19222__delegate(tcoll, key, val, kvs);
    };
    G__19222.cljs$core$IFn$_invoke$arity$variadic = G__19222__delegate;
    return G__19222;
  }();
  assoc_BANG_ = function(tcoll, key, val, var_args) {
    var kvs = var_args;
    switch(arguments.length) {
      case 3:
        return assoc_BANG___3.call(this, tcoll, key, val);
      default:
        var G__19229 = null;
        if (arguments.length > 3) {
          var G__19230__i = 0, G__19230__a = new Array(arguments.length - 3);
          while (G__19230__i < G__19230__a.length) {
            G__19230__a[G__19230__i] = arguments[G__19230__i + 3];
            ++G__19230__i;
          }
          G__19229 = new cljs.core.IndexedSeq(G__19230__a, 0);
        }
        return assoc_BANG___4.cljs$core$IFn$_invoke$arity$variadic(tcoll, key, val, G__19229);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  assoc_BANG_.cljs$lang$maxFixedArity = 3;
  assoc_BANG_.cljs$lang$applyTo = assoc_BANG___4.cljs$lang$applyTo;
  assoc_BANG_.cljs$core$IFn$_invoke$arity$3 = assoc_BANG___3;
  assoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = assoc_BANG___4.cljs$core$IFn$_invoke$arity$variadic;
  return assoc_BANG_;
}();
cljs.core.dissoc_BANG_ = function() {
  var dissoc_BANG_ = null;
  var dissoc_BANG___2 = function(tcoll, key) {
    return cljs.core._dissoc_BANG_(tcoll, key);
  };
  var dissoc_BANG___3 = function() {
    var G__19231__delegate = function(tcoll, key, ks) {
      while (true) {
        var ntcoll = cljs.core._dissoc_BANG_(tcoll, key);
        if (cljs.core.truth_(ks)) {
          var G__19232 = ntcoll;
          var G__19233 = cljs.core.first(ks);
          var G__19234 = cljs.core.next(ks);
          tcoll = G__19232;
          key = G__19233;
          ks = G__19234;
          continue;
        } else {
          return ntcoll;
        }
        break;
      }
    };
    var G__19231 = function(tcoll, key, var_args) {
      var ks = null;
      if (arguments.length > 2) {
        var G__19235__i = 0, G__19235__a = new Array(arguments.length - 2);
        while (G__19235__i < G__19235__a.length) {
          G__19235__a[G__19235__i] = arguments[G__19235__i + 2];
          ++G__19235__i;
        }
        ks = new cljs.core.IndexedSeq(G__19235__a, 0);
      }
      return G__19231__delegate.call(this, tcoll, key, ks);
    };
    G__19231.cljs$lang$maxFixedArity = 2;
    G__19231.cljs$lang$applyTo = function(arglist__19236) {
      var tcoll = cljs.core.first(arglist__19236);
      arglist__19236 = cljs.core.next(arglist__19236);
      var key = cljs.core.first(arglist__19236);
      var ks = cljs.core.rest(arglist__19236);
      return G__19231__delegate(tcoll, key, ks);
    };
    G__19231.cljs$core$IFn$_invoke$arity$variadic = G__19231__delegate;
    return G__19231;
  }();
  dissoc_BANG_ = function(tcoll, key, var_args) {
    var ks = var_args;
    switch(arguments.length) {
      case 2:
        return dissoc_BANG___2.call(this, tcoll, key);
      default:
        var G__19237 = null;
        if (arguments.length > 2) {
          var G__19238__i = 0, G__19238__a = new Array(arguments.length - 2);
          while (G__19238__i < G__19238__a.length) {
            G__19238__a[G__19238__i] = arguments[G__19238__i + 2];
            ++G__19238__i;
          }
          G__19237 = new cljs.core.IndexedSeq(G__19238__a, 0);
        }
        return dissoc_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll, key, G__19237);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  dissoc_BANG_.cljs$lang$maxFixedArity = 2;
  dissoc_BANG_.cljs$lang$applyTo = dissoc_BANG___3.cljs$lang$applyTo;
  dissoc_BANG_.cljs$core$IFn$_invoke$arity$2 = dissoc_BANG___2;
  dissoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = dissoc_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
  return dissoc_BANG_;
}();
cljs.core.pop_BANG_ = function pop_BANG_(tcoll) {
  return cljs.core._pop_BANG_(tcoll);
};
cljs.core.disj_BANG_ = function() {
  var disj_BANG_ = null;
  var disj_BANG___2 = function(tcoll, val) {
    return cljs.core._disjoin_BANG_(tcoll, val);
  };
  var disj_BANG___3 = function() {
    var G__19239__delegate = function(tcoll, val, vals) {
      while (true) {
        var ntcoll = cljs.core._disjoin_BANG_(tcoll, val);
        if (cljs.core.truth_(vals)) {
          var G__19240 = ntcoll;
          var G__19241 = cljs.core.first(vals);
          var G__19242 = cljs.core.next(vals);
          tcoll = G__19240;
          val = G__19241;
          vals = G__19242;
          continue;
        } else {
          return ntcoll;
        }
        break;
      }
    };
    var G__19239 = function(tcoll, val, var_args) {
      var vals = null;
      if (arguments.length > 2) {
        var G__19243__i = 0, G__19243__a = new Array(arguments.length - 2);
        while (G__19243__i < G__19243__a.length) {
          G__19243__a[G__19243__i] = arguments[G__19243__i + 2];
          ++G__19243__i;
        }
        vals = new cljs.core.IndexedSeq(G__19243__a, 0);
      }
      return G__19239__delegate.call(this, tcoll, val, vals);
    };
    G__19239.cljs$lang$maxFixedArity = 2;
    G__19239.cljs$lang$applyTo = function(arglist__19244) {
      var tcoll = cljs.core.first(arglist__19244);
      arglist__19244 = cljs.core.next(arglist__19244);
      var val = cljs.core.first(arglist__19244);
      var vals = cljs.core.rest(arglist__19244);
      return G__19239__delegate(tcoll, val, vals);
    };
    G__19239.cljs$core$IFn$_invoke$arity$variadic = G__19239__delegate;
    return G__19239;
  }();
  disj_BANG_ = function(tcoll, val, var_args) {
    var vals = var_args;
    switch(arguments.length) {
      case 2:
        return disj_BANG___2.call(this, tcoll, val);
      default:
        var G__19245 = null;
        if (arguments.length > 2) {
          var G__19246__i = 0, G__19246__a = new Array(arguments.length - 2);
          while (G__19246__i < G__19246__a.length) {
            G__19246__a[G__19246__i] = arguments[G__19246__i + 2];
            ++G__19246__i;
          }
          G__19245 = new cljs.core.IndexedSeq(G__19246__a, 0);
        }
        return disj_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll, val, G__19245);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  disj_BANG_.cljs$lang$maxFixedArity = 2;
  disj_BANG_.cljs$lang$applyTo = disj_BANG___3.cljs$lang$applyTo;
  disj_BANG_.cljs$core$IFn$_invoke$arity$2 = disj_BANG___2;
  disj_BANG_.cljs$core$IFn$_invoke$arity$variadic = disj_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
  return disj_BANG_;
}();
cljs.core.apply_to = function apply_to(f, argc, args) {
  var args__$1 = cljs.core.seq(args);
  if (argc === 0) {
    return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
  } else {
    var a8435 = cljs.core._first(args__$1);
    var args__$2 = cljs.core._rest(args__$1);
    if (argc === 1) {
      if (f.cljs$core$IFn$_invoke$arity$1) {
        return f.cljs$core$IFn$_invoke$arity$1(a8435);
      } else {
        var G__19457 = a8435;
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__19457) : f.call(null, G__19457);
      }
    } else {
      var b8436 = cljs.core._first(args__$2);
      var args__$3 = cljs.core._rest(args__$2);
      if (argc === 2) {
        if (f.cljs$core$IFn$_invoke$arity$2) {
          return f.cljs$core$IFn$_invoke$arity$2(a8435, b8436);
        } else {
          var G__19458 = a8435;
          var G__19459 = b8436;
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__19458, G__19459) : f.call(null, G__19458, G__19459);
        }
      } else {
        var c8437 = cljs.core._first(args__$3);
        var args__$4 = cljs.core._rest(args__$3);
        if (argc === 3) {
          if (f.cljs$core$IFn$_invoke$arity$3) {
            return f.cljs$core$IFn$_invoke$arity$3(a8435, b8436, c8437);
          } else {
            var G__19460 = a8435;
            var G__19461 = b8436;
            var G__19462 = c8437;
            return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__19460, G__19461, G__19462) : f.call(null, G__19460, G__19461, G__19462);
          }
        } else {
          var d8438 = cljs.core._first(args__$4);
          var args__$5 = cljs.core._rest(args__$4);
          if (argc === 4) {
            if (f.cljs$core$IFn$_invoke$arity$4) {
              return f.cljs$core$IFn$_invoke$arity$4(a8435, b8436, c8437, d8438);
            } else {
              var G__19463 = a8435;
              var G__19464 = b8436;
              var G__19465 = c8437;
              var G__19466 = d8438;
              return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__19463, G__19464, G__19465, G__19466) : f.call(null, G__19463, G__19464, G__19465, G__19466);
            }
          } else {
            var e8439 = cljs.core._first(args__$5);
            var args__$6 = cljs.core._rest(args__$5);
            if (argc === 5) {
              if (f.cljs$core$IFn$_invoke$arity$5) {
                return f.cljs$core$IFn$_invoke$arity$5(a8435, b8436, c8437, d8438, e8439);
              } else {
                var G__19467 = a8435;
                var G__19468 = b8436;
                var G__19469 = c8437;
                var G__19470 = d8438;
                var G__19471 = e8439;
                return f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__19467, G__19468, G__19469, G__19470, G__19471) : f.call(null, G__19467, G__19468, G__19469, G__19470, G__19471);
              }
            } else {
              var f8440 = cljs.core._first(args__$6);
              var args__$7 = cljs.core._rest(args__$6);
              if (argc === 6) {
                if (f.cljs$core$IFn$_invoke$arity$6) {
                  return f.cljs$core$IFn$_invoke$arity$6(a8435, b8436, c8437, d8438, e8439, f8440);
                } else {
                  var G__19472 = a8435;
                  var G__19473 = b8436;
                  var G__19474 = c8437;
                  var G__19475 = d8438;
                  var G__19476 = e8439;
                  var G__19477 = f8440;
                  return f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(G__19472, G__19473, G__19474, G__19475, G__19476, G__19477) : f.call(null, G__19472, G__19473, G__19474, G__19475, G__19476, G__19477);
                }
              } else {
                var g8441 = cljs.core._first(args__$7);
                var args__$8 = cljs.core._rest(args__$7);
                if (argc === 7) {
                  if (f.cljs$core$IFn$_invoke$arity$7) {
                    return f.cljs$core$IFn$_invoke$arity$7(a8435, b8436, c8437, d8438, e8439, f8440, g8441);
                  } else {
                    var G__19478 = a8435;
                    var G__19479 = b8436;
                    var G__19480 = c8437;
                    var G__19481 = d8438;
                    var G__19482 = e8439;
                    var G__19483 = f8440;
                    var G__19484 = g8441;
                    return f.cljs$core$IFn$_invoke$arity$7 ? f.cljs$core$IFn$_invoke$arity$7(G__19478, G__19479, G__19480, G__19481, G__19482, G__19483, G__19484) : f.call(null, G__19478, G__19479, G__19480, G__19481, G__19482, G__19483, G__19484);
                  }
                } else {
                  var h8442 = cljs.core._first(args__$8);
                  var args__$9 = cljs.core._rest(args__$8);
                  if (argc === 8) {
                    if (f.cljs$core$IFn$_invoke$arity$8) {
                      return f.cljs$core$IFn$_invoke$arity$8(a8435, b8436, c8437, d8438, e8439, f8440, g8441, h8442);
                    } else {
                      var G__19485 = a8435;
                      var G__19486 = b8436;
                      var G__19487 = c8437;
                      var G__19488 = d8438;
                      var G__19489 = e8439;
                      var G__19490 = f8440;
                      var G__19491 = g8441;
                      var G__19492 = h8442;
                      return f.cljs$core$IFn$_invoke$arity$8 ? f.cljs$core$IFn$_invoke$arity$8(G__19485, G__19486, G__19487, G__19488, G__19489, G__19490, G__19491, G__19492) : f.call(null, G__19485, G__19486, G__19487, G__19488, G__19489, G__19490, G__19491, G__19492);
                    }
                  } else {
                    var i8443 = cljs.core._first(args__$9);
                    var args__$10 = cljs.core._rest(args__$9);
                    if (argc === 9) {
                      if (f.cljs$core$IFn$_invoke$arity$9) {
                        return f.cljs$core$IFn$_invoke$arity$9(a8435, b8436, c8437, d8438, e8439, f8440, g8441, h8442, i8443);
                      } else {
                        var G__19493 = a8435;
                        var G__19494 = b8436;
                        var G__19495 = c8437;
                        var G__19496 = d8438;
                        var G__19497 = e8439;
                        var G__19498 = f8440;
                        var G__19499 = g8441;
                        var G__19500 = h8442;
                        var G__19501 = i8443;
                        return f.cljs$core$IFn$_invoke$arity$9 ? f.cljs$core$IFn$_invoke$arity$9(G__19493, G__19494, G__19495, G__19496, G__19497, G__19498, G__19499, G__19500, G__19501) : f.call(null, G__19493, G__19494, G__19495, G__19496, G__19497, G__19498, G__19499, G__19500, G__19501);
                      }
                    } else {
                      var j8444 = cljs.core._first(args__$10);
                      var args__$11 = cljs.core._rest(args__$10);
                      if (argc === 10) {
                        if (f.cljs$core$IFn$_invoke$arity$10) {
                          return f.cljs$core$IFn$_invoke$arity$10(a8435, b8436, c8437, d8438, e8439, f8440, g8441, h8442, i8443, j8444);
                        } else {
                          var G__19502 = a8435;
                          var G__19503 = b8436;
                          var G__19504 = c8437;
                          var G__19505 = d8438;
                          var G__19506 = e8439;
                          var G__19507 = f8440;
                          var G__19508 = g8441;
                          var G__19509 = h8442;
                          var G__19510 = i8443;
                          var G__19511 = j8444;
                          return f.cljs$core$IFn$_invoke$arity$10 ? f.cljs$core$IFn$_invoke$arity$10(G__19502, G__19503, G__19504, G__19505, G__19506, G__19507, G__19508, G__19509, G__19510, G__19511) : f.call(null, G__19502, G__19503, G__19504, G__19505, G__19506, G__19507, G__19508, G__19509, G__19510, G__19511);
                        }
                      } else {
                        var k8445 = cljs.core._first(args__$11);
                        var args__$12 = cljs.core._rest(args__$11);
                        if (argc === 11) {
                          if (f.cljs$core$IFn$_invoke$arity$11) {
                            return f.cljs$core$IFn$_invoke$arity$11(a8435, b8436, c8437, d8438, e8439, f8440, g8441, h8442, i8443, j8444, k8445);
                          } else {
                            var G__19512 = a8435;
                            var G__19513 = b8436;
                            var G__19514 = c8437;
                            var G__19515 = d8438;
                            var G__19516 = e8439;
                            var G__19517 = f8440;
                            var G__19518 = g8441;
                            var G__19519 = h8442;
                            var G__19520 = i8443;
                            var G__19521 = j8444;
                            var G__19522 = k8445;
                            return f.cljs$core$IFn$_invoke$arity$11 ? f.cljs$core$IFn$_invoke$arity$11(G__19512, G__19513, G__19514, G__19515, G__19516, G__19517, G__19518, G__19519, G__19520, G__19521, G__19522) : f.call(null, G__19512, G__19513, G__19514, G__19515, G__19516, G__19517, G__19518, G__19519, G__19520, G__19521, G__19522);
                          }
                        } else {
                          var l8446 = cljs.core._first(args__$12);
                          var args__$13 = cljs.core._rest(args__$12);
                          if (argc === 12) {
                            if (f.cljs$core$IFn$_invoke$arity$12) {
                              return f.cljs$core$IFn$_invoke$arity$12(a8435, b8436, c8437, d8438, e8439, f8440, g8441, h8442, i8443, j8444, k8445, l8446);
                            } else {
                              var G__19523 = a8435;
                              var G__19524 = b8436;
                              var G__19525 = c8437;
                              var G__19526 = d8438;
                              var G__19527 = e8439;
                              var G__19528 = f8440;
                              var G__19529 = g8441;
                              var G__19530 = h8442;
                              var G__19531 = i8443;
                              var G__19532 = j8444;
                              var G__19533 = k8445;
                              var G__19534 = l8446;
                              return f.cljs$core$IFn$_invoke$arity$12 ? f.cljs$core$IFn$_invoke$arity$12(G__19523, G__19524, G__19525, G__19526, G__19527, G__19528, G__19529, G__19530, G__19531, G__19532, G__19533, G__19534) : f.call(null, G__19523, G__19524, G__19525, G__19526, G__19527, G__19528, G__19529, G__19530, G__19531, G__19532, G__19533, G__19534);
                            }
                          } else {
                            var m8447 = cljs.core._first(args__$13);
                            var args__$14 = cljs.core._rest(args__$13);
                            if (argc === 13) {
                              if (f.cljs$core$IFn$_invoke$arity$13) {
                                return f.cljs$core$IFn$_invoke$arity$13(a8435, b8436, c8437, d8438, e8439, f8440, g8441, h8442, i8443, j8444, k8445, l8446, m8447);
                              } else {
                                var G__19535 = a8435;
                                var G__19536 = b8436;
                                var G__19537 = c8437;
                                var G__19538 = d8438;
                                var G__19539 = e8439;
                                var G__19540 = f8440;
                                var G__19541 = g8441;
                                var G__19542 = h8442;
                                var G__19543 = i8443;
                                var G__19544 = j8444;
                                var G__19545 = k8445;
                                var G__19546 = l8446;
                                var G__19547 = m8447;
                                return f.cljs$core$IFn$_invoke$arity$13 ? f.cljs$core$IFn$_invoke$arity$13(G__19535, G__19536, G__19537, G__19538, G__19539, G__19540, G__19541, G__19542, G__19543, G__19544, G__19545, G__19546, G__19547) : f.call(null, G__19535, G__19536, G__19537, G__19538, G__19539, G__19540, G__19541, G__19542, G__19543, G__19544, G__19545, G__19546, G__19547);
                              }
                            } else {
                              var n8448 = cljs.core._first(args__$14);
                              var args__$15 = cljs.core._rest(args__$14);
                              if (argc === 14) {
                                if (f.cljs$core$IFn$_invoke$arity$14) {
                                  return f.cljs$core$IFn$_invoke$arity$14(a8435, b8436, c8437, d8438, e8439, f8440, g8441, h8442, i8443, j8444, k8445, l8446, m8447, n8448);
                                } else {
                                  var G__19548 = a8435;
                                  var G__19549 = b8436;
                                  var G__19550 = c8437;
                                  var G__19551 = d8438;
                                  var G__19552 = e8439;
                                  var G__19553 = f8440;
                                  var G__19554 = g8441;
                                  var G__19555 = h8442;
                                  var G__19556 = i8443;
                                  var G__19557 = j8444;
                                  var G__19558 = k8445;
                                  var G__19559 = l8446;
                                  var G__19560 = m8447;
                                  var G__19561 = n8448;
                                  return f.cljs$core$IFn$_invoke$arity$14 ? f.cljs$core$IFn$_invoke$arity$14(G__19548, G__19549, G__19550, G__19551, G__19552, G__19553, G__19554, G__19555, G__19556, G__19557, G__19558, G__19559, G__19560, G__19561) : f.call(null, G__19548, G__19549, G__19550, G__19551, G__19552, G__19553, G__19554, G__19555, G__19556, G__19557, G__19558, G__19559, G__19560, G__19561);
                                }
                              } else {
                                var o8449 = cljs.core._first(args__$15);
                                var args__$16 = cljs.core._rest(args__$15);
                                if (argc === 15) {
                                  if (f.cljs$core$IFn$_invoke$arity$15) {
                                    return f.cljs$core$IFn$_invoke$arity$15(a8435, b8436, c8437, d8438, e8439, f8440, g8441, h8442, i8443, j8444, k8445, l8446, m8447, n8448, o8449);
                                  } else {
                                    var G__19562 = a8435;
                                    var G__19563 = b8436;
                                    var G__19564 = c8437;
                                    var G__19565 = d8438;
                                    var G__19566 = e8439;
                                    var G__19567 = f8440;
                                    var G__19568 = g8441;
                                    var G__19569 = h8442;
                                    var G__19570 = i8443;
                                    var G__19571 = j8444;
                                    var G__19572 = k8445;
                                    var G__19573 = l8446;
                                    var G__19574 = m8447;
                                    var G__19575 = n8448;
                                    var G__19576 = o8449;
                                    return f.cljs$core$IFn$_invoke$arity$15 ? f.cljs$core$IFn$_invoke$arity$15(G__19562, G__19563, G__19564, G__19565, G__19566, G__19567, G__19568, G__19569, G__19570, G__19571, G__19572, G__19573, G__19574, G__19575, G__19576) : f.call(null, G__19562, G__19563, G__19564, G__19565, G__19566, G__19567, G__19568, G__19569, G__19570, G__19571, G__19572, G__19573, G__19574, G__19575, G__19576);
                                  }
                                } else {
                                  var p8450 = cljs.core._first(args__$16);
                                  var args__$17 = cljs.core._rest(args__$16);
                                  if (argc === 16) {
                                    if (f.cljs$core$IFn$_invoke$arity$16) {
                                      return f.cljs$core$IFn$_invoke$arity$16(a8435, b8436, c8437, d8438, e8439, f8440, g8441, h8442, i8443, j8444, k8445, l8446, m8447, n8448, o8449, p8450);
                                    } else {
                                      var G__19577 = a8435;
                                      var G__19578 = b8436;
                                      var G__19579 = c8437;
                                      var G__19580 = d8438;
                                      var G__19581 = e8439;
                                      var G__19582 = f8440;
                                      var G__19583 = g8441;
                                      var G__19584 = h8442;
                                      var G__19585 = i8443;
                                      var G__19586 = j8444;
                                      var G__19587 = k8445;
                                      var G__19588 = l8446;
                                      var G__19589 = m8447;
                                      var G__19590 = n8448;
                                      var G__19591 = o8449;
                                      var G__19592 = p8450;
                                      return f.cljs$core$IFn$_invoke$arity$16 ? f.cljs$core$IFn$_invoke$arity$16(G__19577, G__19578, G__19579, G__19580, G__19581, G__19582, G__19583, G__19584, G__19585, G__19586, G__19587, G__19588, G__19589, G__19590, G__19591, G__19592) : f.call(null, G__19577, G__19578, G__19579, G__19580, G__19581, G__19582, G__19583, G__19584, G__19585, G__19586, G__19587, G__19588, G__19589, G__19590, G__19591, G__19592);
                                    }
                                  } else {
                                    var q8451 = cljs.core._first(args__$17);
                                    var args__$18 = cljs.core._rest(args__$17);
                                    if (argc === 17) {
                                      if (f.cljs$core$IFn$_invoke$arity$17) {
                                        return f.cljs$core$IFn$_invoke$arity$17(a8435, b8436, c8437, d8438, e8439, f8440, g8441, h8442, i8443, j8444, k8445, l8446, m8447, n8448, o8449, p8450, q8451);
                                      } else {
                                        var G__19593 = a8435;
                                        var G__19594 = b8436;
                                        var G__19595 = c8437;
                                        var G__19596 = d8438;
                                        var G__19597 = e8439;
                                        var G__19598 = f8440;
                                        var G__19599 = g8441;
                                        var G__19600 = h8442;
                                        var G__19601 = i8443;
                                        var G__19602 = j8444;
                                        var G__19603 = k8445;
                                        var G__19604 = l8446;
                                        var G__19605 = m8447;
                                        var G__19606 = n8448;
                                        var G__19607 = o8449;
                                        var G__19608 = p8450;
                                        var G__19609 = q8451;
                                        return f.cljs$core$IFn$_invoke$arity$17 ? f.cljs$core$IFn$_invoke$arity$17(G__19593, G__19594, G__19595, G__19596, G__19597, G__19598, G__19599, G__19600, G__19601, G__19602, G__19603, G__19604, G__19605, G__19606, G__19607, G__19608, G__19609) : f.call(null, G__19593, G__19594, G__19595, G__19596, G__19597, G__19598, G__19599, G__19600, G__19601, G__19602, G__19603, G__19604, G__19605, G__19606, G__19607, G__19608, G__19609);
                                      }
                                    } else {
                                      var r8452 = cljs.core._first(args__$18);
                                      var args__$19 = cljs.core._rest(args__$18);
                                      if (argc === 18) {
                                        if (f.cljs$core$IFn$_invoke$arity$18) {
                                          return f.cljs$core$IFn$_invoke$arity$18(a8435, b8436, c8437, d8438, e8439, f8440, g8441, h8442, i8443, j8444, k8445, l8446, m8447, n8448, o8449, p8450, q8451, r8452);
                                        } else {
                                          var G__19610 = a8435;
                                          var G__19611 = b8436;
                                          var G__19612 = c8437;
                                          var G__19613 = d8438;
                                          var G__19614 = e8439;
                                          var G__19615 = f8440;
                                          var G__19616 = g8441;
                                          var G__19617 = h8442;
                                          var G__19618 = i8443;
                                          var G__19619 = j8444;
                                          var G__19620 = k8445;
                                          var G__19621 = l8446;
                                          var G__19622 = m8447;
                                          var G__19623 = n8448;
                                          var G__19624 = o8449;
                                          var G__19625 = p8450;
                                          var G__19626 = q8451;
                                          var G__19627 = r8452;
                                          return f.cljs$core$IFn$_invoke$arity$18 ? f.cljs$core$IFn$_invoke$arity$18(G__19610, G__19611, G__19612, G__19613, G__19614, G__19615, G__19616, G__19617, G__19618, G__19619, G__19620, G__19621, G__19622, G__19623, G__19624, G__19625, G__19626, G__19627) : f.call(null, G__19610, G__19611, G__19612, G__19613, G__19614, G__19615, G__19616, G__19617, G__19618, G__19619, G__19620, G__19621, G__19622, G__19623, G__19624, G__19625, G__19626, G__19627);
                                        }
                                      } else {
                                        var s8453 = cljs.core._first(args__$19);
                                        var args__$20 = cljs.core._rest(args__$19);
                                        if (argc === 19) {
                                          if (f.cljs$core$IFn$_invoke$arity$19) {
                                            return f.cljs$core$IFn$_invoke$arity$19(a8435, b8436, c8437, d8438, e8439, f8440, g8441, h8442, i8443, j8444, k8445, l8446, m8447, n8448, o8449, p8450, q8451, r8452, s8453);
                                          } else {
                                            var G__19628 = a8435;
                                            var G__19629 = b8436;
                                            var G__19630 = c8437;
                                            var G__19631 = d8438;
                                            var G__19632 = e8439;
                                            var G__19633 = f8440;
                                            var G__19634 = g8441;
                                            var G__19635 = h8442;
                                            var G__19636 = i8443;
                                            var G__19637 = j8444;
                                            var G__19638 = k8445;
                                            var G__19639 = l8446;
                                            var G__19640 = m8447;
                                            var G__19641 = n8448;
                                            var G__19642 = o8449;
                                            var G__19643 = p8450;
                                            var G__19644 = q8451;
                                            var G__19645 = r8452;
                                            var G__19646 = s8453;
                                            return f.cljs$core$IFn$_invoke$arity$19 ? f.cljs$core$IFn$_invoke$arity$19(G__19628, G__19629, G__19630, G__19631, G__19632, G__19633, G__19634, G__19635, G__19636, G__19637, G__19638, G__19639, G__19640, G__19641, G__19642, G__19643, G__19644, G__19645, G__19646) : f.call(null, G__19628, G__19629, G__19630, G__19631, G__19632, G__19633, G__19634, G__19635, G__19636, G__19637, G__19638, G__19639, G__19640, G__19641, G__19642, G__19643, G__19644, G__19645, 
                                            G__19646);
                                          }
                                        } else {
                                          var t8454 = cljs.core._first(args__$20);
                                          var args__$21 = cljs.core._rest(args__$20);
                                          if (argc === 20) {
                                            if (f.cljs$core$IFn$_invoke$arity$20) {
                                              return f.cljs$core$IFn$_invoke$arity$20(a8435, b8436, c8437, d8438, e8439, f8440, g8441, h8442, i8443, j8444, k8445, l8446, m8447, n8448, o8449, p8450, q8451, r8452, s8453, t8454);
                                            } else {
                                              var G__19647 = a8435;
                                              var G__19648 = b8436;
                                              var G__19649 = c8437;
                                              var G__19650 = d8438;
                                              var G__19651 = e8439;
                                              var G__19652 = f8440;
                                              var G__19653 = g8441;
                                              var G__19654 = h8442;
                                              var G__19655 = i8443;
                                              var G__19656 = j8444;
                                              var G__19657 = k8445;
                                              var G__19658 = l8446;
                                              var G__19659 = m8447;
                                              var G__19660 = n8448;
                                              var G__19661 = o8449;
                                              var G__19662 = p8450;
                                              var G__19663 = q8451;
                                              var G__19664 = r8452;
                                              var G__19665 = s8453;
                                              var G__19666 = t8454;
                                              return f.cljs$core$IFn$_invoke$arity$20 ? f.cljs$core$IFn$_invoke$arity$20(G__19647, G__19648, G__19649, G__19650, G__19651, G__19652, G__19653, G__19654, G__19655, G__19656, G__19657, G__19658, G__19659, G__19660, G__19661, G__19662, G__19663, G__19664, G__19665, G__19666) : f.call(null, G__19647, G__19648, G__19649, G__19650, G__19651, G__19652, G__19653, G__19654, G__19655, G__19656, G__19657, G__19658, G__19659, G__19660, G__19661, G__19662, G__19663, 
                                              G__19664, G__19665, G__19666);
                                            }
                                          } else {
                                            throw new Error("Only up to 20 arguments supported on functions");
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.apply = function() {
  var apply = null;
  var apply__2 = function(f, args) {
    var fixed_arity = f.cljs$lang$maxFixedArity;
    if (f.cljs$lang$applyTo) {
      var bc = cljs.core.bounded_count(args, fixed_arity + 1);
      if (bc <= fixed_arity) {
        return cljs.core.apply_to(f, bc, args);
      } else {
        return f.cljs$lang$applyTo(args);
      }
    } else {
      return f.apply(f, cljs.core.to_array(args));
    }
  };
  var apply__3 = function(f, x, args) {
    var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$2(x, args);
    var fixed_arity = f.cljs$lang$maxFixedArity;
    if (f.cljs$lang$applyTo) {
      var bc = cljs.core.bounded_count(arglist, fixed_arity + 1);
      if (bc <= fixed_arity) {
        return cljs.core.apply_to(f, bc, arglist);
      } else {
        return f.cljs$lang$applyTo(arglist);
      }
    } else {
      return f.apply(f, cljs.core.to_array(arglist));
    }
  };
  var apply__4 = function(f, x, y, args) {
    var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$3(x, y, args);
    var fixed_arity = f.cljs$lang$maxFixedArity;
    if (f.cljs$lang$applyTo) {
      var bc = cljs.core.bounded_count(arglist, fixed_arity + 1);
      if (bc <= fixed_arity) {
        return cljs.core.apply_to(f, bc, arglist);
      } else {
        return f.cljs$lang$applyTo(arglist);
      }
    } else {
      return f.apply(f, cljs.core.to_array(arglist));
    }
  };
  var apply__5 = function(f, x, y, z, args) {
    var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(x, y, z, args);
    var fixed_arity = f.cljs$lang$maxFixedArity;
    if (f.cljs$lang$applyTo) {
      var bc = cljs.core.bounded_count(arglist, fixed_arity + 1);
      if (bc <= fixed_arity) {
        return cljs.core.apply_to(f, bc, arglist);
      } else {
        return f.cljs$lang$applyTo(arglist);
      }
    } else {
      return f.apply(f, cljs.core.to_array(arglist));
    }
  };
  var apply__6 = function() {
    var G__19667__delegate = function(f, a, b, c, d, args) {
      var arglist = cljs.core.cons(a, cljs.core.cons(b, cljs.core.cons(c, cljs.core.cons(d, cljs.core.spread(args)))));
      var fixed_arity = f.cljs$lang$maxFixedArity;
      if (f.cljs$lang$applyTo) {
        var bc = cljs.core.bounded_count(arglist, fixed_arity + 1);
        if (bc <= fixed_arity) {
          return cljs.core.apply_to(f, bc, arglist);
        } else {
          return f.cljs$lang$applyTo(arglist);
        }
      } else {
        return f.apply(f, cljs.core.to_array(arglist));
      }
    };
    var G__19667 = function(f, a, b, c, d, var_args) {
      var args = null;
      if (arguments.length > 5) {
        var G__19668__i = 0, G__19668__a = new Array(arguments.length - 5);
        while (G__19668__i < G__19668__a.length) {
          G__19668__a[G__19668__i] = arguments[G__19668__i + 5];
          ++G__19668__i;
        }
        args = new cljs.core.IndexedSeq(G__19668__a, 0);
      }
      return G__19667__delegate.call(this, f, a, b, c, d, args);
    };
    G__19667.cljs$lang$maxFixedArity = 5;
    G__19667.cljs$lang$applyTo = function(arglist__19669) {
      var f = cljs.core.first(arglist__19669);
      arglist__19669 = cljs.core.next(arglist__19669);
      var a = cljs.core.first(arglist__19669);
      arglist__19669 = cljs.core.next(arglist__19669);
      var b = cljs.core.first(arglist__19669);
      arglist__19669 = cljs.core.next(arglist__19669);
      var c = cljs.core.first(arglist__19669);
      arglist__19669 = cljs.core.next(arglist__19669);
      var d = cljs.core.first(arglist__19669);
      var args = cljs.core.rest(arglist__19669);
      return G__19667__delegate(f, a, b, c, d, args);
    };
    G__19667.cljs$core$IFn$_invoke$arity$variadic = G__19667__delegate;
    return G__19667;
  }();
  apply = function(f, a, b, c, d, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 2:
        return apply__2.call(this, f, a);
      case 3:
        return apply__3.call(this, f, a, b);
      case 4:
        return apply__4.call(this, f, a, b, c);
      case 5:
        return apply__5.call(this, f, a, b, c, d);
      default:
        var G__19670 = null;
        if (arguments.length > 5) {
          var G__19671__i = 0, G__19671__a = new Array(arguments.length - 5);
          while (G__19671__i < G__19671__a.length) {
            G__19671__a[G__19671__i] = arguments[G__19671__i + 5];
            ++G__19671__i;
          }
          G__19670 = new cljs.core.IndexedSeq(G__19671__a, 0);
        }
        return apply__6.cljs$core$IFn$_invoke$arity$variadic(f, a, b, c, d, G__19670);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  apply.cljs$lang$maxFixedArity = 5;
  apply.cljs$lang$applyTo = apply__6.cljs$lang$applyTo;
  apply.cljs$core$IFn$_invoke$arity$2 = apply__2;
  apply.cljs$core$IFn$_invoke$arity$3 = apply__3;
  apply.cljs$core$IFn$_invoke$arity$4 = apply__4;
  apply.cljs$core$IFn$_invoke$arity$5 = apply__5;
  apply.cljs$core$IFn$_invoke$arity$variadic = apply__6.cljs$core$IFn$_invoke$arity$variadic;
  return apply;
}();
cljs.core.vary_meta = function() {
  var vary_meta = null;
  var vary_meta__2 = function(obj, f) {
    return cljs.core.with_meta(obj, function() {
      var G__19687 = cljs.core.meta(obj);
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__19687) : f.call(null, G__19687);
    }());
  };
  var vary_meta__3 = function(obj, f, a) {
    return cljs.core.with_meta(obj, function() {
      var G__19688 = cljs.core.meta(obj);
      var G__19689 = a;
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__19688, G__19689) : f.call(null, G__19688, G__19689);
    }());
  };
  var vary_meta__4 = function(obj, f, a, b) {
    return cljs.core.with_meta(obj, function() {
      var G__19690 = cljs.core.meta(obj);
      var G__19691 = a;
      var G__19692 = b;
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__19690, G__19691, G__19692) : f.call(null, G__19690, G__19691, G__19692);
    }());
  };
  var vary_meta__5 = function(obj, f, a, b, c) {
    return cljs.core.with_meta(obj, function() {
      var G__19693 = cljs.core.meta(obj);
      var G__19694 = a;
      var G__19695 = b;
      var G__19696 = c;
      return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__19693, G__19694, G__19695, G__19696) : f.call(null, G__19693, G__19694, G__19695, G__19696);
    }());
  };
  var vary_meta__6 = function(obj, f, a, b, c, d) {
    return cljs.core.with_meta(obj, function() {
      var G__19697 = cljs.core.meta(obj);
      var G__19698 = a;
      var G__19699 = b;
      var G__19700 = c;
      var G__19701 = d;
      return f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__19697, G__19698, G__19699, G__19700, G__19701) : f.call(null, G__19697, G__19698, G__19699, G__19700, G__19701);
    }());
  };
  var vary_meta__7 = function() {
    var G__19702__delegate = function(obj, f, a, b, c, d, args) {
      return cljs.core.with_meta(obj, cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, cljs.core.meta(obj), a, b, c, cljs.core.array_seq([d, args], 0)));
    };
    var G__19702 = function(obj, f, a, b, c, d, var_args) {
      var args = null;
      if (arguments.length > 6) {
        var G__19703__i = 0, G__19703__a = new Array(arguments.length - 6);
        while (G__19703__i < G__19703__a.length) {
          G__19703__a[G__19703__i] = arguments[G__19703__i + 6];
          ++G__19703__i;
        }
        args = new cljs.core.IndexedSeq(G__19703__a, 0);
      }
      return G__19702__delegate.call(this, obj, f, a, b, c, d, args);
    };
    G__19702.cljs$lang$maxFixedArity = 6;
    G__19702.cljs$lang$applyTo = function(arglist__19704) {
      var obj = cljs.core.first(arglist__19704);
      arglist__19704 = cljs.core.next(arglist__19704);
      var f = cljs.core.first(arglist__19704);
      arglist__19704 = cljs.core.next(arglist__19704);
      var a = cljs.core.first(arglist__19704);
      arglist__19704 = cljs.core.next(arglist__19704);
      var b = cljs.core.first(arglist__19704);
      arglist__19704 = cljs.core.next(arglist__19704);
      var c = cljs.core.first(arglist__19704);
      arglist__19704 = cljs.core.next(arglist__19704);
      var d = cljs.core.first(arglist__19704);
      var args = cljs.core.rest(arglist__19704);
      return G__19702__delegate(obj, f, a, b, c, d, args);
    };
    G__19702.cljs$core$IFn$_invoke$arity$variadic = G__19702__delegate;
    return G__19702;
  }();
  vary_meta = function(obj, f, a, b, c, d, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 2:
        return vary_meta__2.call(this, obj, f);
      case 3:
        return vary_meta__3.call(this, obj, f, a);
      case 4:
        return vary_meta__4.call(this, obj, f, a, b);
      case 5:
        return vary_meta__5.call(this, obj, f, a, b, c);
      case 6:
        return vary_meta__6.call(this, obj, f, a, b, c, d);
      default:
        var G__19705 = null;
        if (arguments.length > 6) {
          var G__19706__i = 0, G__19706__a = new Array(arguments.length - 6);
          while (G__19706__i < G__19706__a.length) {
            G__19706__a[G__19706__i] = arguments[G__19706__i + 6];
            ++G__19706__i;
          }
          G__19705 = new cljs.core.IndexedSeq(G__19706__a, 0);
        }
        return vary_meta__7.cljs$core$IFn$_invoke$arity$variadic(obj, f, a, b, c, d, G__19705);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  vary_meta.cljs$lang$maxFixedArity = 6;
  vary_meta.cljs$lang$applyTo = vary_meta__7.cljs$lang$applyTo;
  vary_meta.cljs$core$IFn$_invoke$arity$2 = vary_meta__2;
  vary_meta.cljs$core$IFn$_invoke$arity$3 = vary_meta__3;
  vary_meta.cljs$core$IFn$_invoke$arity$4 = vary_meta__4;
  vary_meta.cljs$core$IFn$_invoke$arity$5 = vary_meta__5;
  vary_meta.cljs$core$IFn$_invoke$arity$6 = vary_meta__6;
  vary_meta.cljs$core$IFn$_invoke$arity$variadic = vary_meta__7.cljs$core$IFn$_invoke$arity$variadic;
  return vary_meta;
}();
cljs.core.not_EQ_ = function() {
  var not_EQ_ = null;
  var not_EQ___1 = function(x) {
    return false;
  };
  var not_EQ___2 = function(x, y) {
    return!cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x, y);
  };
  var not_EQ___3 = function() {
    var G__19707__delegate = function(x, y, more) {
      return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core._EQ_, x, y, more));
    };
    var G__19707 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__19708__i = 0, G__19708__a = new Array(arguments.length - 2);
        while (G__19708__i < G__19708__a.length) {
          G__19708__a[G__19708__i] = arguments[G__19708__i + 2];
          ++G__19708__i;
        }
        more = new cljs.core.IndexedSeq(G__19708__a, 0);
      }
      return G__19707__delegate.call(this, x, y, more);
    };
    G__19707.cljs$lang$maxFixedArity = 2;
    G__19707.cljs$lang$applyTo = function(arglist__19709) {
      var x = cljs.core.first(arglist__19709);
      arglist__19709 = cljs.core.next(arglist__19709);
      var y = cljs.core.first(arglist__19709);
      var more = cljs.core.rest(arglist__19709);
      return G__19707__delegate(x, y, more);
    };
    G__19707.cljs$core$IFn$_invoke$arity$variadic = G__19707__delegate;
    return G__19707;
  }();
  not_EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return not_EQ___1.call(this, x);
      case 2:
        return not_EQ___2.call(this, x, y);
      default:
        var G__19710 = null;
        if (arguments.length > 2) {
          var G__19711__i = 0, G__19711__a = new Array(arguments.length - 2);
          while (G__19711__i < G__19711__a.length) {
            G__19711__a[G__19711__i] = arguments[G__19711__i + 2];
            ++G__19711__i;
          }
          G__19710 = new cljs.core.IndexedSeq(G__19711__a, 0);
        }
        return not_EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__19710);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  not_EQ_.cljs$lang$maxFixedArity = 2;
  not_EQ_.cljs$lang$applyTo = not_EQ___3.cljs$lang$applyTo;
  not_EQ_.cljs$core$IFn$_invoke$arity$1 = not_EQ___1;
  not_EQ_.cljs$core$IFn$_invoke$arity$2 = not_EQ___2;
  not_EQ_.cljs$core$IFn$_invoke$arity$variadic = not_EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return not_EQ_;
}();
cljs.core.not_empty = function not_empty(coll) {
  if (cljs.core.seq(coll)) {
    return coll;
  } else {
    return null;
  }
};
cljs.core.nil_iter = function nil_iter() {
  if (typeof cljs.core.t19715 !== "undefined") {
  } else {
    cljs.core.t19715 = function(nil_iter, meta19716) {
      this.nil_iter = nil_iter;
      this.meta19716 = meta19716;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    cljs.core.t19715.prototype.hasNext = function() {
      var self__ = this;
      var _ = this;
      return false;
    };
    cljs.core.t19715.prototype.next = function() {
      var self__ = this;
      var _ = this;
      return new Error("No such element");
    };
    cljs.core.t19715.prototype.remove = function() {
      var self__ = this;
      var _ = this;
      return new Error("Unsupported operation");
    };
    cljs.core.t19715.prototype.cljs$core$IMeta$_meta$arity$1 = function(_19717) {
      var self__ = this;
      var _19717__$1 = this;
      return self__.meta19716;
    };
    cljs.core.t19715.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_19717, meta19716__$1) {
      var self__ = this;
      var _19717__$1 = this;
      return new cljs.core.t19715(self__.nil_iter, meta19716__$1);
    };
    cljs.core.t19715.cljs$lang$type = true;
    cljs.core.t19715.cljs$lang$ctorStr = "cljs.core/t19715";
    cljs.core.t19715.cljs$lang$ctorPrWriter = function(this__8091__auto__, writer__8092__auto__, opt__8093__auto__) {
      return cljs.core._write(writer__8092__auto__, "cljs.core/t19715");
    };
    cljs.core.__GT_t19715 = function __GT_t19715(nil_iter__$1, meta19716) {
      return new cljs.core.t19715(nil_iter__$1, meta19716);
    };
  }
  return new cljs.core.t19715(nil_iter, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.core.StringIter = function(s, i) {
  this.s = s;
  this.i = i;
};
cljs.core.StringIter.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  return self__.i < self__.s.length;
};
cljs.core.StringIter.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var ret = self__.s.charAt(self__.i);
  self__.i = self__.i + 1;
  return ret;
};
cljs.core.StringIter.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.StringIter.cljs$lang$type = true;
cljs.core.StringIter.cljs$lang$ctorStr = "cljs.core/StringIter";
cljs.core.StringIter.cljs$lang$ctorPrWriter = function(this__8091__auto__, writer__8092__auto__, opt__8093__auto__) {
  return cljs.core._write(writer__8092__auto__, "cljs.core/StringIter");
};
cljs.core.__GT_StringIter = function __GT_StringIter(s, i) {
  return new cljs.core.StringIter(s, i);
};
cljs.core.string_iter = function string_iter(x) {
  return new cljs.core.StringIter(x, 0);
};
cljs.core.ArrayIter = function(arr, i) {
  this.arr = arr;
  this.i = i;
};
cljs.core.ArrayIter.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  return self__.i < self__.arr.length;
};
cljs.core.ArrayIter.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var ret = self__.arr[self__.i];
  self__.i = self__.i + 1;
  return ret;
};
cljs.core.ArrayIter.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.ArrayIter.cljs$lang$type = true;
cljs.core.ArrayIter.cljs$lang$ctorStr = "cljs.core/ArrayIter";
cljs.core.ArrayIter.cljs$lang$ctorPrWriter = function(this__8091__auto__, writer__8092__auto__, opt__8093__auto__) {
  return cljs.core._write(writer__8092__auto__, "cljs.core/ArrayIter");
};
cljs.core.__GT_ArrayIter = function __GT_ArrayIter(arr, i) {
  return new cljs.core.ArrayIter(arr, i);
};
cljs.core.array_iter = function array_iter(x) {
  return new cljs.core.ArrayIter(x, 0);
};
cljs.core.INIT = {};
cljs.core.START = {};
cljs.core.SeqIter = function(_seq, _next) {
  this._seq = _seq;
  this._next = _next;
};
cljs.core.SeqIter.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  if (self__._seq === cljs.core.INIT) {
    self__._seq = cljs.core.START;
    self__._next = cljs.core.seq(self__._next);
  } else {
    if (self__._seq === self__._next) {
      self__._next = cljs.core.next(self__._seq);
    } else {
    }
  }
  return!(self__._next == null);
};
cljs.core.SeqIter.prototype.next = function() {
  var self__ = this;
  var this$ = this;
  if (cljs.core.not(this$.hasNext())) {
    throw new Error("No such element");
  } else {
    self__._seq = self__._next;
    return cljs.core.first(self__._next);
  }
};
cljs.core.SeqIter.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.SeqIter.cljs$lang$type = true;
cljs.core.SeqIter.cljs$lang$ctorStr = "cljs.core/SeqIter";
cljs.core.SeqIter.cljs$lang$ctorPrWriter = function(this__8091__auto__, writer__8092__auto__, opt__8093__auto__) {
  return cljs.core._write(writer__8092__auto__, "cljs.core/SeqIter");
};
cljs.core.__GT_SeqIter = function __GT_SeqIter(_seq, _next) {
  return new cljs.core.SeqIter(_seq, _next);
};
cljs.core.seq_iter = function seq_iter(coll) {
  return new cljs.core.SeqIter(cljs.core.INIT, coll);
};
cljs.core.iter = function iter(coll) {
  if (coll == null) {
    return cljs.core.nil_iter();
  } else {
    if (typeof coll === "string") {
      return cljs.core.string_iter(coll);
    } else {
      if (coll instanceof Array) {
        return cljs.core.array_iter(coll);
      } else {
        if (cljs.core.iterable_QMARK_(coll)) {
          return cljs.core._iterator(coll);
        } else {
          if (cljs.core.seqable_QMARK_(coll)) {
            return cljs.core.seq_iter(coll);
          } else {
            throw new Error([cljs.core.str("Cannot create iterator from "), cljs.core.str(coll)].join(""));
          }
        }
      }
    }
  }
};
cljs.core.lazy_transformer = function lazy_transformer(stepper) {
  return new cljs.core.LazyTransformer(stepper, null, null, null);
};
cljs.core.Stepper = function(xform, iter) {
  this.xform = xform;
  this.iter = iter;
};
cljs.core.Stepper.prototype.step = function(lt) {
  var self__ = this;
  var this$ = this;
  while (true) {
    if (cljs.core.truth_(function() {
      var and__7492__auto__ = !(lt.stepper == null);
      if (and__7492__auto__) {
        return self__.iter.hasNext();
      } else {
        return and__7492__auto__;
      }
    }())) {
      if (cljs.core.reduced_QMARK_(function() {
        var G__19718 = lt;
        var G__19719 = self__.iter.next();
        return self__.xform.cljs$core$IFn$_invoke$arity$2 ? self__.xform.cljs$core$IFn$_invoke$arity$2(G__19718, G__19719) : self__.xform.call(null, G__19718, G__19719);
      }())) {
        if (lt.rest == null) {
        } else {
          lt.rest.stepper = null;
        }
      } else {
        continue;
      }
    } else {
    }
    break;
  }
  if (lt.stepper == null) {
    return null;
  } else {
    var G__19720 = lt;
    return self__.xform.cljs$core$IFn$_invoke$arity$1 ? self__.xform.cljs$core$IFn$_invoke$arity$1(G__19720) : self__.xform.call(null, G__19720);
  }
};
cljs.core.Stepper.cljs$lang$type = true;
cljs.core.Stepper.cljs$lang$ctorStr = "cljs.core/Stepper";
cljs.core.Stepper.cljs$lang$ctorPrWriter = function(this__8091__auto__, writer__8092__auto__, opt__8093__auto__) {
  return cljs.core._write(writer__8092__auto__, "cljs.core/Stepper");
};
cljs.core.__GT_Stepper = function __GT_Stepper(xform, iter) {
  return new cljs.core.Stepper(xform, iter);
};
cljs.core.stepper = function stepper(xform, iter) {
  var stepfn = function() {
    var stepfn = null;
    var stepfn__1 = function(result) {
      var lt = cljs.core.reduced_QMARK_(result) ? cljs.core.deref(result) : result;
      lt.stepper = null;
      return result;
    };
    var stepfn__2 = function(result, input) {
      var lt = result;
      lt.first = input;
      lt.rest = cljs.core.lazy_transformer(lt.stepper);
      lt.stepper = null;
      return lt.rest;
    };
    stepfn = function(result, input) {
      switch(arguments.length) {
        case 1:
          return stepfn__1.call(this, result);
        case 2:
          return stepfn__2.call(this, result, input);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    stepfn.cljs$core$IFn$_invoke$arity$1 = stepfn__1;
    stepfn.cljs$core$IFn$_invoke$arity$2 = stepfn__2;
    return stepfn;
  }();
  return new cljs.core.Stepper(function() {
    var G__19722 = stepfn;
    return xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__19722) : xform.call(null, G__19722);
  }(), iter);
};
cljs.core.MultiStepper = function(xform, iters, nexts) {
  this.xform = xform;
  this.iters = iters;
  this.nexts = nexts;
};
cljs.core.MultiStepper.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  var iters__$1 = cljs.core.seq(self__.iters);
  while (true) {
    if (!(iters__$1 == null)) {
      var iter = cljs.core.first(iters__$1);
      if (cljs.core.not(iter.hasNext())) {
        return false;
      } else {
        var G__19724 = cljs.core.next(iters__$1);
        iters__$1 = G__19724;
        continue;
      }
    } else {
      return true;
    }
    break;
  }
};
cljs.core.MultiStepper.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var n__8391__auto___19725 = self__.iters.length;
  var i_19726 = 0;
  while (true) {
    if (i_19726 < n__8391__auto___19725) {
      self__.nexts[i_19726] = self__.iters[i_19726].next();
      var G__19727 = i_19726 + 1;
      i_19726 = G__19727;
      continue;
    } else {
    }
    break;
  }
  return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(self__.nexts, 0);
};
cljs.core.MultiStepper.prototype.step = function(lt) {
  var self__ = this;
  var this$ = this;
  while (true) {
    if (cljs.core.truth_(function() {
      var and__7492__auto__ = !(lt.stepper == null);
      if (and__7492__auto__) {
        return this$.hasNext();
      } else {
        return and__7492__auto__;
      }
    }())) {
      if (cljs.core.reduced_QMARK_(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(self__.xform, cljs.core.cons(lt, this$.next())))) {
        if (lt.rest == null) {
        } else {
          lt.rest.stepper = null;
        }
      } else {
        continue;
      }
    } else {
    }
    break;
  }
  if (lt.stepper == null) {
    return null;
  } else {
    var G__19723 = lt;
    return self__.xform.cljs$core$IFn$_invoke$arity$1 ? self__.xform.cljs$core$IFn$_invoke$arity$1(G__19723) : self__.xform.call(null, G__19723);
  }
};
cljs.core.MultiStepper.cljs$lang$type = true;
cljs.core.MultiStepper.cljs$lang$ctorStr = "cljs.core/MultiStepper";
cljs.core.MultiStepper.cljs$lang$ctorPrWriter = function(this__8091__auto__, writer__8092__auto__, opt__8093__auto__) {
  return cljs.core._write(writer__8092__auto__, "cljs.core/MultiStepper");
};
cljs.core.__GT_MultiStepper = function __GT_MultiStepper(xform, iters, nexts) {
  return new cljs.core.MultiStepper(xform, iters, nexts);
};
cljs.core.multi_stepper = function() {
  var multi_stepper = null;
  var multi_stepper__2 = function(xform, iters) {
    return multi_stepper.cljs$core$IFn$_invoke$arity$3(xform, iters, new Array(iters.length));
  };
  var multi_stepper__3 = function(xform, iters, nexts) {
    var stepfn = function() {
      var stepfn = null;
      var stepfn__1 = function(result) {
        var lt = cljs.core.reduced_QMARK_(result) ? cljs.core.deref(result) : result;
        lt.stepper = null;
        return lt;
      };
      var stepfn__2 = function(result, input) {
        var lt = result;
        lt.first = input;
        lt.rest = cljs.core.lazy_transformer(lt.stepper);
        lt.stepper = null;
        return lt.rest;
      };
      stepfn = function(result, input) {
        switch(arguments.length) {
          case 1:
            return stepfn__1.call(this, result);
          case 2:
            return stepfn__2.call(this, result, input);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      stepfn.cljs$core$IFn$_invoke$arity$1 = stepfn__1;
      stepfn.cljs$core$IFn$_invoke$arity$2 = stepfn__2;
      return stepfn;
    }();
    return new cljs.core.MultiStepper(function() {
      var G__19732 = stepfn;
      return xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__19732) : xform.call(null, G__19732);
    }(), iters, nexts);
  };
  multi_stepper = function(xform, iters, nexts) {
    switch(arguments.length) {
      case 2:
        return multi_stepper__2.call(this, xform, iters);
      case 3:
        return multi_stepper__3.call(this, xform, iters, nexts);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  multi_stepper.cljs$core$IFn$_invoke$arity$2 = multi_stepper__2;
  multi_stepper.cljs$core$IFn$_invoke$arity$3 = multi_stepper__3;
  return multi_stepper;
}();
cljs.core.LazyTransformer = function(stepper, first, rest, meta) {
  this.stepper = stepper;
  this.first = first;
  this.rest = rest;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31719628;
};
cljs.core.LazyTransformer.prototype.cljs$core$INext$_next$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.stepper == null) {
  } else {
    cljs.core._seq(this$__$1);
  }
  if (self__.rest == null) {
    return null;
  } else {
    return cljs.core._seq(self__.rest);
  }
};
cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_first$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.stepper == null) {
  } else {
    cljs.core._seq(this$__$1);
  }
  if (self__.rest == null) {
    return null;
  } else {
    return self__.first;
  }
};
cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_rest$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.stepper == null) {
  } else {
    cljs.core._seq(this$__$1);
  }
  if (self__.rest == null) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.rest;
  }
};
cljs.core.LazyTransformer.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.stepper == null) {
  } else {
    self__.stepper.step(this$__$1);
  }
  if (self__.rest == null) {
    return null;
  } else {
    return this$__$1;
  }
};
cljs.core.LazyTransformer.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.hash_ordered_coll(this$__$1);
};
cljs.core.LazyTransformer.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this$, other) {
  var self__ = this;
  var this$__$1 = this;
  var s = cljs.core._seq(this$__$1);
  if (!(s == null)) {
    return cljs.core.equiv_sequential(this$__$1, other);
  } else {
    return cljs.core.sequential_QMARK_(other) && cljs.core.seq(other) == null;
  }
};
cljs.core.LazyTransformer.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.LazyTransformer.prototype.cljs$core$ICollection$_conj$arity$2 = function(this$, o) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.cons(o, cljs.core._seq(this$__$1));
};
cljs.core.LazyTransformer.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this$, new_meta) {
  var self__ = this;
  var this$__$1 = this;
  return new cljs.core.LazyTransformer(self__.stepper, self__.first, self__.rest, new_meta);
};
cljs.core.LazyTransformer.cljs$lang$type = true;
cljs.core.LazyTransformer.cljs$lang$ctorStr = "cljs.core/LazyTransformer";
cljs.core.LazyTransformer.cljs$lang$ctorPrWriter = function(this__8091__auto__, writer__8092__auto__, opt__8093__auto__) {
  return cljs.core._write(writer__8092__auto__, "cljs.core/LazyTransformer");
};
cljs.core.__GT_LazyTransformer = function __GT_LazyTransformer(stepper, first, rest, meta) {
  return new cljs.core.LazyTransformer(stepper, first, rest, meta);
};
cljs.core.LazyTransformer.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__8482__auto__ = this;
  return cljs.core.es6_iterator(this__8482__auto__);
};
cljs.core.LazyTransformer.create = function(xform, coll) {
  return new cljs.core.LazyTransformer(cljs.core.stepper(xform, cljs.core.iter(coll)), null, null, null);
};
cljs.core.LazyTransformer.createMulti = function(xform, colls) {
  var iters = [];
  var seq__19733_19737 = cljs.core.seq(colls);
  var chunk__19734_19738 = null;
  var count__19735_19739 = 0;
  var i__19736_19740 = 0;
  while (true) {
    if (i__19736_19740 < count__19735_19739) {
      var coll_19741 = chunk__19734_19738.cljs$core$IIndexed$_nth$arity$2(null, i__19736_19740);
      iters.push(cljs.core.iter(coll_19741));
      var G__19742 = seq__19733_19737;
      var G__19743 = chunk__19734_19738;
      var G__19744 = count__19735_19739;
      var G__19745 = i__19736_19740 + 1;
      seq__19733_19737 = G__19742;
      chunk__19734_19738 = G__19743;
      count__19735_19739 = G__19744;
      i__19736_19740 = G__19745;
      continue;
    } else {
      var temp__4126__auto___19746 = cljs.core.seq(seq__19733_19737);
      if (temp__4126__auto___19746) {
        var seq__19733_19747__$1 = temp__4126__auto___19746;
        if (cljs.core.chunked_seq_QMARK_(seq__19733_19747__$1)) {
          var c__8291__auto___19748 = cljs.core.chunk_first(seq__19733_19747__$1);
          var G__19749 = cljs.core.chunk_rest(seq__19733_19747__$1);
          var G__19750 = c__8291__auto___19748;
          var G__19751 = cljs.core.count(c__8291__auto___19748);
          var G__19752 = 0;
          seq__19733_19737 = G__19749;
          chunk__19734_19738 = G__19750;
          count__19735_19739 = G__19751;
          i__19736_19740 = G__19752;
          continue;
        } else {
          var coll_19753 = cljs.core.first(seq__19733_19747__$1);
          iters.push(cljs.core.iter(coll_19753));
          var G__19754 = cljs.core.next(seq__19733_19747__$1);
          var G__19755 = null;
          var G__19756 = 0;
          var G__19757 = 0;
          seq__19733_19737 = G__19754;
          chunk__19734_19738 = G__19755;
          count__19735_19739 = G__19756;
          i__19736_19740 = G__19757;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return new cljs.core.LazyTransformer(cljs.core.multi_stepper.cljs$core$IFn$_invoke$arity$3(xform, iters, new Array(iters.length)), null, null, null);
};
cljs.core.sequence = function() {
  var sequence = null;
  var sequence__1 = function(coll) {
    if (cljs.core.seq_QMARK_(coll)) {
      return coll;
    } else {
      var or__7504__auto__ = cljs.core.seq(coll);
      if (or__7504__auto__) {
        return or__7504__auto__;
      } else {
        return cljs.core.List.EMPTY;
      }
    }
  };
  var sequence__2 = function(xform, coll) {
    return cljs.core.LazyTransformer.create(xform, coll);
  };
  var sequence__3 = function() {
    var G__19758__delegate = function(xform, coll, colls) {
      return cljs.core.LazyTransformer.createMulti(xform, cljs.core.to_array(cljs.core.cons(coll, colls)));
    };
    var G__19758 = function(xform, coll, var_args) {
      var colls = null;
      if (arguments.length > 2) {
        var G__19759__i = 0, G__19759__a = new Array(arguments.length - 2);
        while (G__19759__i < G__19759__a.length) {
          G__19759__a[G__19759__i] = arguments[G__19759__i + 2];
          ++G__19759__i;
        }
        colls = new cljs.core.IndexedSeq(G__19759__a, 0);
      }
      return G__19758__delegate.call(this, xform, coll, colls);
    };
    G__19758.cljs$lang$maxFixedArity = 2;
    G__19758.cljs$lang$applyTo = function(arglist__19760) {
      var xform = cljs.core.first(arglist__19760);
      arglist__19760 = cljs.core.next(arglist__19760);
      var coll = cljs.core.first(arglist__19760);
      var colls = cljs.core.rest(arglist__19760);
      return G__19758__delegate(xform, coll, colls);
    };
    G__19758.cljs$core$IFn$_invoke$arity$variadic = G__19758__delegate;
    return G__19758;
  }();
  sequence = function(xform, coll, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 1:
        return sequence__1.call(this, xform);
      case 2:
        return sequence__2.call(this, xform, coll);
      default:
        var G__19761 = null;
        if (arguments.length > 2) {
          var G__19762__i = 0, G__19762__a = new Array(arguments.length - 2);
          while (G__19762__i < G__19762__a.length) {
            G__19762__a[G__19762__i] = arguments[G__19762__i + 2];
            ++G__19762__i;
          }
          G__19761 = new cljs.core.IndexedSeq(G__19762__a, 0);
        }
        return sequence__3.cljs$core$IFn$_invoke$arity$variadic(xform, coll, G__19761);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  sequence.cljs$lang$maxFixedArity = 2;
  sequence.cljs$lang$applyTo = sequence__3.cljs$lang$applyTo;
  sequence.cljs$core$IFn$_invoke$arity$1 = sequence__1;
  sequence.cljs$core$IFn$_invoke$arity$2 = sequence__2;
  sequence.cljs$core$IFn$_invoke$arity$variadic = sequence__3.cljs$core$IFn$_invoke$arity$variadic;
  return sequence;
}();
cljs.core.every_QMARK_ = function every_QMARK_(pred, coll) {
  while (true) {
    if (cljs.core.seq(coll) == null) {
      return true;
    } else {
      if (cljs.core.truth_(function() {
        var G__19764 = cljs.core.first(coll);
        return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__19764) : pred.call(null, G__19764);
      }())) {
        var G__19765 = pred;
        var G__19766 = cljs.core.next(coll);
        pred = G__19765;
        coll = G__19766;
        continue;
      } else {
        return false;
      }
    }
    break;
  }
};
cljs.core.not_every_QMARK_ = function not_every_QMARK_(pred, coll) {
  return!cljs.core.every_QMARK_(pred, coll);
};
cljs.core.some = function some(pred, coll) {
  while (true) {
    if (cljs.core.seq(coll)) {
      var or__7504__auto__ = function() {
        var G__19770 = cljs.core.first(coll);
        return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__19770) : pred.call(null, G__19770);
      }();
      if (cljs.core.truth_(or__7504__auto__)) {
        return or__7504__auto__;
      } else {
        var G__19771 = pred;
        var G__19772 = cljs.core.next(coll);
        pred = G__19771;
        coll = G__19772;
        continue;
      }
    } else {
      return null;
    }
    break;
  }
};
cljs.core.not_any_QMARK_ = function not_any_QMARK_(pred, coll) {
  return cljs.core.not(cljs.core.some(pred, coll));
};
cljs.core.even_QMARK_ = function even_QMARK_(n) {
  if (cljs.core.integer_QMARK_(n)) {
    return(n & 1) === 0;
  } else {
    throw new Error([cljs.core.str("Argument must be an integer: "), cljs.core.str(n)].join(""));
  }
};
cljs.core.odd_QMARK_ = function odd_QMARK_(n) {
  return!cljs.core.even_QMARK_(n);
};
cljs.core.complement = function complement(f) {
  return function() {
    var G__19779 = null;
    var G__19779__0 = function() {
      return cljs.core.not(function() {
        return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
      }());
    };
    var G__19779__1 = function(x) {
      return cljs.core.not(function() {
        var G__19776 = x;
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__19776) : f.call(null, G__19776);
      }());
    };
    var G__19779__2 = function(x, y) {
      return cljs.core.not(function() {
        var G__19777 = x;
        var G__19778 = y;
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__19777, G__19778) : f.call(null, G__19777, G__19778);
      }());
    };
    var G__19779__3 = function() {
      var G__19780__delegate = function(x, y, zs) {
        return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(f, x, y, zs));
      };
      var G__19780 = function(x, y, var_args) {
        var zs = null;
        if (arguments.length > 2) {
          var G__19781__i = 0, G__19781__a = new Array(arguments.length - 2);
          while (G__19781__i < G__19781__a.length) {
            G__19781__a[G__19781__i] = arguments[G__19781__i + 2];
            ++G__19781__i;
          }
          zs = new cljs.core.IndexedSeq(G__19781__a, 0);
        }
        return G__19780__delegate.call(this, x, y, zs);
      };
      G__19780.cljs$lang$maxFixedArity = 2;
      G__19780.cljs$lang$applyTo = function(arglist__19782) {
        var x = cljs.core.first(arglist__19782);
        arglist__19782 = cljs.core.next(arglist__19782);
        var y = cljs.core.first(arglist__19782);
        var zs = cljs.core.rest(arglist__19782);
        return G__19780__delegate(x, y, zs);
      };
      G__19780.cljs$core$IFn$_invoke$arity$variadic = G__19780__delegate;
      return G__19780;
    }();
    G__19779 = function(x, y, var_args) {
      var zs = var_args;
      switch(arguments.length) {
        case 0:
          return G__19779__0.call(this);
        case 1:
          return G__19779__1.call(this, x);
        case 2:
          return G__19779__2.call(this, x, y);
        default:
          var G__19783 = null;
          if (arguments.length > 2) {
            var G__19784__i = 0, G__19784__a = new Array(arguments.length - 2);
            while (G__19784__i < G__19784__a.length) {
              G__19784__a[G__19784__i] = arguments[G__19784__i + 2];
              ++G__19784__i;
            }
            G__19783 = new cljs.core.IndexedSeq(G__19784__a, 0);
          }
          return G__19779__3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__19783);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__19779.cljs$lang$maxFixedArity = 2;
    G__19779.cljs$lang$applyTo = G__19779__3.cljs$lang$applyTo;
    G__19779.cljs$core$IFn$_invoke$arity$0 = G__19779__0;
    G__19779.cljs$core$IFn$_invoke$arity$1 = G__19779__1;
    G__19779.cljs$core$IFn$_invoke$arity$2 = G__19779__2;
    G__19779.cljs$core$IFn$_invoke$arity$variadic = G__19779__3.cljs$core$IFn$_invoke$arity$variadic;
    return G__19779;
  }();
};
cljs.core.constantly = function constantly(x) {
  return function() {
    var G__19785__delegate = function(args) {
      return x;
    };
    var G__19785 = function(var_args) {
      var args = null;
      if (arguments.length > 0) {
        var G__19786__i = 0, G__19786__a = new Array(arguments.length - 0);
        while (G__19786__i < G__19786__a.length) {
          G__19786__a[G__19786__i] = arguments[G__19786__i + 0];
          ++G__19786__i;
        }
        args = new cljs.core.IndexedSeq(G__19786__a, 0);
      }
      return G__19785__delegate.call(this, args);
    };
    G__19785.cljs$lang$maxFixedArity = 0;
    G__19785.cljs$lang$applyTo = function(arglist__19787) {
      var args = cljs.core.seq(arglist__19787);
      return G__19785__delegate(args);
    };
    G__19785.cljs$core$IFn$_invoke$arity$variadic = G__19785__delegate;
    return G__19785;
  }();
};
cljs.core.comp = function() {
  var comp = null;
  var comp__0 = function() {
    return cljs.core.identity;
  };
  var comp__1 = function(f) {
    return f;
  };
  var comp__2 = function(f, g) {
    return function() {
      var G__19842 = null;
      var G__19842__0 = function() {
        var G__19815 = function() {
          return g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null);
        }();
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__19815) : f.call(null, G__19815);
      };
      var G__19842__1 = function(x) {
        var G__19816 = function() {
          var G__19817 = x;
          return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__19817) : g.call(null, G__19817);
        }();
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__19816) : f.call(null, G__19816);
      };
      var G__19842__2 = function(x, y) {
        var G__19818 = function() {
          var G__19819 = x;
          var G__19820 = y;
          return g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__19819, G__19820) : g.call(null, G__19819, G__19820);
        }();
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__19818) : f.call(null, G__19818);
      };
      var G__19842__3 = function(x, y, z) {
        var G__19821 = function() {
          var G__19822 = x;
          var G__19823 = y;
          var G__19824 = z;
          return g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__19822, G__19823, G__19824) : g.call(null, G__19822, G__19823, G__19824);
        }();
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__19821) : f.call(null, G__19821);
      };
      var G__19842__4 = function() {
        var G__19843__delegate = function(x, y, z, args) {
          var G__19825 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g, x, y, z, args);
          return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__19825) : f.call(null, G__19825);
        };
        var G__19843 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__19844__i = 0, G__19844__a = new Array(arguments.length - 3);
            while (G__19844__i < G__19844__a.length) {
              G__19844__a[G__19844__i] = arguments[G__19844__i + 3];
              ++G__19844__i;
            }
            args = new cljs.core.IndexedSeq(G__19844__a, 0);
          }
          return G__19843__delegate.call(this, x, y, z, args);
        };
        G__19843.cljs$lang$maxFixedArity = 3;
        G__19843.cljs$lang$applyTo = function(arglist__19845) {
          var x = cljs.core.first(arglist__19845);
          arglist__19845 = cljs.core.next(arglist__19845);
          var y = cljs.core.first(arglist__19845);
          arglist__19845 = cljs.core.next(arglist__19845);
          var z = cljs.core.first(arglist__19845);
          var args = cljs.core.rest(arglist__19845);
          return G__19843__delegate(x, y, z, args);
        };
        G__19843.cljs$core$IFn$_invoke$arity$variadic = G__19843__delegate;
        return G__19843;
      }();
      G__19842 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__19842__0.call(this);
          case 1:
            return G__19842__1.call(this, x);
          case 2:
            return G__19842__2.call(this, x, y);
          case 3:
            return G__19842__3.call(this, x, y, z);
          default:
            var G__19846 = null;
            if (arguments.length > 3) {
              var G__19847__i = 0, G__19847__a = new Array(arguments.length - 3);
              while (G__19847__i < G__19847__a.length) {
                G__19847__a[G__19847__i] = arguments[G__19847__i + 3];
                ++G__19847__i;
              }
              G__19846 = new cljs.core.IndexedSeq(G__19847__a, 0);
            }
            return G__19842__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__19846);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__19842.cljs$lang$maxFixedArity = 3;
      G__19842.cljs$lang$applyTo = G__19842__4.cljs$lang$applyTo;
      G__19842.cljs$core$IFn$_invoke$arity$0 = G__19842__0;
      G__19842.cljs$core$IFn$_invoke$arity$1 = G__19842__1;
      G__19842.cljs$core$IFn$_invoke$arity$2 = G__19842__2;
      G__19842.cljs$core$IFn$_invoke$arity$3 = G__19842__3;
      G__19842.cljs$core$IFn$_invoke$arity$variadic = G__19842__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__19842;
    }();
  };
  var comp__3 = function(f, g, h) {
    return function() {
      var G__19848 = null;
      var G__19848__0 = function() {
        var G__19826 = function() {
          var G__19827 = function() {
            return h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null);
          }();
          return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__19827) : g.call(null, G__19827);
        }();
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__19826) : f.call(null, G__19826);
      };
      var G__19848__1 = function(x) {
        var G__19828 = function() {
          var G__19829 = function() {
            var G__19830 = x;
            return h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(G__19830) : h.call(null, G__19830);
          }();
          return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__19829) : g.call(null, G__19829);
        }();
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__19828) : f.call(null, G__19828);
      };
      var G__19848__2 = function(x, y) {
        var G__19831 = function() {
          var G__19832 = function() {
            var G__19833 = x;
            var G__19834 = y;
            return h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(G__19833, G__19834) : h.call(null, G__19833, G__19834);
          }();
          return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__19832) : g.call(null, G__19832);
        }();
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__19831) : f.call(null, G__19831);
      };
      var G__19848__3 = function(x, y, z) {
        var G__19835 = function() {
          var G__19836 = function() {
            var G__19837 = x;
            var G__19838 = y;
            var G__19839 = z;
            return h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(G__19837, G__19838, G__19839) : h.call(null, G__19837, G__19838, G__19839);
          }();
          return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__19836) : g.call(null, G__19836);
        }();
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__19835) : f.call(null, G__19835);
      };
      var G__19848__4 = function() {
        var G__19849__delegate = function(x, y, z, args) {
          var G__19840 = function() {
            var G__19841 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h, x, y, z, args);
            return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__19841) : g.call(null, G__19841);
          }();
          return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__19840) : f.call(null, G__19840);
        };
        var G__19849 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__19850__i = 0, G__19850__a = new Array(arguments.length - 3);
            while (G__19850__i < G__19850__a.length) {
              G__19850__a[G__19850__i] = arguments[G__19850__i + 3];
              ++G__19850__i;
            }
            args = new cljs.core.IndexedSeq(G__19850__a, 0);
          }
          return G__19849__delegate.call(this, x, y, z, args);
        };
        G__19849.cljs$lang$maxFixedArity = 3;
        G__19849.cljs$lang$applyTo = function(arglist__19851) {
          var x = cljs.core.first(arglist__19851);
          arglist__19851 = cljs.core.next(arglist__19851);
          var y = cljs.core.first(arglist__19851);
          arglist__19851 = cljs.core.next(arglist__19851);
          var z = cljs.core.first(arglist__19851);
          var args = cljs.core.rest(arglist__19851);
          return G__19849__delegate(x, y, z, args);
        };
        G__19849.cljs$core$IFn$_invoke$arity$variadic = G__19849__delegate;
        return G__19849;
      }();
      G__19848 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__19848__0.call(this);
          case 1:
            return G__19848__1.call(this, x);
          case 2:
            return G__19848__2.call(this, x, y);
          case 3:
            return G__19848__3.call(this, x, y, z);
          default:
            var G__19852 = null;
            if (arguments.length > 3) {
              var G__19853__i = 0, G__19853__a = new Array(arguments.length - 3);
              while (G__19853__i < G__19853__a.length) {
                G__19853__a[G__19853__i] = arguments[G__19853__i + 3];
                ++G__19853__i;
              }
              G__19852 = new cljs.core.IndexedSeq(G__19853__a, 0);
            }
            return G__19848__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__19852);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__19848.cljs$lang$maxFixedArity = 3;
      G__19848.cljs$lang$applyTo = G__19848__4.cljs$lang$applyTo;
      G__19848.cljs$core$IFn$_invoke$arity$0 = G__19848__0;
      G__19848.cljs$core$IFn$_invoke$arity$1 = G__19848__1;
      G__19848.cljs$core$IFn$_invoke$arity$2 = G__19848__2;
      G__19848.cljs$core$IFn$_invoke$arity$3 = G__19848__3;
      G__19848.cljs$core$IFn$_invoke$arity$variadic = G__19848__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__19848;
    }();
  };
  var comp__4 = function() {
    var G__19854__delegate = function(f1, f2, f3, fs) {
      var fs__$1 = cljs.core.reverse(cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f1, f2, f3, fs));
      return function(fs__$1) {
        return function() {
          var G__19855__delegate = function(args) {
            var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.first(fs__$1), args);
            var fs__$2 = cljs.core.next(fs__$1);
            while (true) {
              if (fs__$2) {
                var G__19856 = cljs.core.first(fs__$2).call(null, ret);
                var G__19857 = cljs.core.next(fs__$2);
                ret = G__19856;
                fs__$2 = G__19857;
                continue;
              } else {
                return ret;
              }
              break;
            }
          };
          var G__19855 = function(var_args) {
            var args = null;
            if (arguments.length > 0) {
              var G__19858__i = 0, G__19858__a = new Array(arguments.length - 0);
              while (G__19858__i < G__19858__a.length) {
                G__19858__a[G__19858__i] = arguments[G__19858__i + 0];
                ++G__19858__i;
              }
              args = new cljs.core.IndexedSeq(G__19858__a, 0);
            }
            return G__19855__delegate.call(this, args);
          };
          G__19855.cljs$lang$maxFixedArity = 0;
          G__19855.cljs$lang$applyTo = function(arglist__19859) {
            var args = cljs.core.seq(arglist__19859);
            return G__19855__delegate(args);
          };
          G__19855.cljs$core$IFn$_invoke$arity$variadic = G__19855__delegate;
          return G__19855;
        }();
      }(fs__$1);
    };
    var G__19854 = function(f1, f2, f3, var_args) {
      var fs = null;
      if (arguments.length > 3) {
        var G__19860__i = 0, G__19860__a = new Array(arguments.length - 3);
        while (G__19860__i < G__19860__a.length) {
          G__19860__a[G__19860__i] = arguments[G__19860__i + 3];
          ++G__19860__i;
        }
        fs = new cljs.core.IndexedSeq(G__19860__a, 0);
      }
      return G__19854__delegate.call(this, f1, f2, f3, fs);
    };
    G__19854.cljs$lang$maxFixedArity = 3;
    G__19854.cljs$lang$applyTo = function(arglist__19861) {
      var f1 = cljs.core.first(arglist__19861);
      arglist__19861 = cljs.core.next(arglist__19861);
      var f2 = cljs.core.first(arglist__19861);
      arglist__19861 = cljs.core.next(arglist__19861);
      var f3 = cljs.core.first(arglist__19861);
      var fs = cljs.core.rest(arglist__19861);
      return G__19854__delegate(f1, f2, f3, fs);
    };
    G__19854.cljs$core$IFn$_invoke$arity$variadic = G__19854__delegate;
    return G__19854;
  }();
  comp = function(f1, f2, f3, var_args) {
    var fs = var_args;
    switch(arguments.length) {
      case 0:
        return comp__0.call(this);
      case 1:
        return comp__1.call(this, f1);
      case 2:
        return comp__2.call(this, f1, f2);
      case 3:
        return comp__3.call(this, f1, f2, f3);
      default:
        var G__19862 = null;
        if (arguments.length > 3) {
          var G__19863__i = 0, G__19863__a = new Array(arguments.length - 3);
          while (G__19863__i < G__19863__a.length) {
            G__19863__a[G__19863__i] = arguments[G__19863__i + 3];
            ++G__19863__i;
          }
          G__19862 = new cljs.core.IndexedSeq(G__19863__a, 0);
        }
        return comp__4.cljs$core$IFn$_invoke$arity$variadic(f1, f2, f3, G__19862);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  comp.cljs$lang$maxFixedArity = 3;
  comp.cljs$lang$applyTo = comp__4.cljs$lang$applyTo;
  comp.cljs$core$IFn$_invoke$arity$0 = comp__0;
  comp.cljs$core$IFn$_invoke$arity$1 = comp__1;
  comp.cljs$core$IFn$_invoke$arity$2 = comp__2;
  comp.cljs$core$IFn$_invoke$arity$3 = comp__3;
  comp.cljs$core$IFn$_invoke$arity$variadic = comp__4.cljs$core$IFn$_invoke$arity$variadic;
  return comp;
}();
cljs.core.partial = function() {
  var partial = null;
  var partial__1 = function(f) {
    return f;
  };
  var partial__2 = function(f, arg1) {
    return function() {
      var G__19948 = null;
      var G__19948__0 = function() {
        var G__19906 = arg1;
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__19906) : f.call(null, G__19906);
      };
      var G__19948__1 = function(x) {
        var G__19907 = arg1;
        var G__19908 = x;
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__19907, G__19908) : f.call(null, G__19907, G__19908);
      };
      var G__19948__2 = function(x, y) {
        var G__19909 = arg1;
        var G__19910 = x;
        var G__19911 = y;
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__19909, G__19910, G__19911) : f.call(null, G__19909, G__19910, G__19911);
      };
      var G__19948__3 = function(x, y, z) {
        var G__19912 = arg1;
        var G__19913 = x;
        var G__19914 = y;
        var G__19915 = z;
        return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__19912, G__19913, G__19914, G__19915) : f.call(null, G__19912, G__19913, G__19914, G__19915);
      };
      var G__19948__4 = function() {
        var G__19949__delegate = function(x, y, z, args) {
          return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, arg1, x, y, z, cljs.core.array_seq([args], 0));
        };
        var G__19949 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__19950__i = 0, G__19950__a = new Array(arguments.length - 3);
            while (G__19950__i < G__19950__a.length) {
              G__19950__a[G__19950__i] = arguments[G__19950__i + 3];
              ++G__19950__i;
            }
            args = new cljs.core.IndexedSeq(G__19950__a, 0);
          }
          return G__19949__delegate.call(this, x, y, z, args);
        };
        G__19949.cljs$lang$maxFixedArity = 3;
        G__19949.cljs$lang$applyTo = function(arglist__19951) {
          var x = cljs.core.first(arglist__19951);
          arglist__19951 = cljs.core.next(arglist__19951);
          var y = cljs.core.first(arglist__19951);
          arglist__19951 = cljs.core.next(arglist__19951);
          var z = cljs.core.first(arglist__19951);
          var args = cljs.core.rest(arglist__19951);
          return G__19949__delegate(x, y, z, args);
        };
        G__19949.cljs$core$IFn$_invoke$arity$variadic = G__19949__delegate;
        return G__19949;
      }();
      G__19948 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__19948__0.call(this);
          case 1:
            return G__19948__1.call(this, x);
          case 2:
            return G__19948__2.call(this, x, y);
          case 3:
            return G__19948__3.call(this, x, y, z);
          default:
            var G__19952 = null;
            if (arguments.length > 3) {
              var G__19953__i = 0, G__19953__a = new Array(arguments.length - 3);
              while (G__19953__i < G__19953__a.length) {
                G__19953__a[G__19953__i] = arguments[G__19953__i + 3];
                ++G__19953__i;
              }
              G__19952 = new cljs.core.IndexedSeq(G__19953__a, 0);
            }
            return G__19948__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__19952);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__19948.cljs$lang$maxFixedArity = 3;
      G__19948.cljs$lang$applyTo = G__19948__4.cljs$lang$applyTo;
      G__19948.cljs$core$IFn$_invoke$arity$0 = G__19948__0;
      G__19948.cljs$core$IFn$_invoke$arity$1 = G__19948__1;
      G__19948.cljs$core$IFn$_invoke$arity$2 = G__19948__2;
      G__19948.cljs$core$IFn$_invoke$arity$3 = G__19948__3;
      G__19948.cljs$core$IFn$_invoke$arity$variadic = G__19948__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__19948;
    }();
  };
  var partial__3 = function(f, arg1, arg2) {
    return function() {
      var G__19954 = null;
      var G__19954__0 = function() {
        var G__19916 = arg1;
        var G__19917 = arg2;
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__19916, G__19917) : f.call(null, G__19916, G__19917);
      };
      var G__19954__1 = function(x) {
        var G__19918 = arg1;
        var G__19919 = arg2;
        var G__19920 = x;
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__19918, G__19919, G__19920) : f.call(null, G__19918, G__19919, G__19920);
      };
      var G__19954__2 = function(x, y) {
        var G__19921 = arg1;
        var G__19922 = arg2;
        var G__19923 = x;
        var G__19924 = y;
        return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__19921, G__19922, G__19923, G__19924) : f.call(null, G__19921, G__19922, G__19923, G__19924);
      };
      var G__19954__3 = function(x, y, z) {
        var G__19925 = arg1;
        var G__19926 = arg2;
        var G__19927 = x;
        var G__19928 = y;
        var G__19929 = z;
        return f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__19925, G__19926, G__19927, G__19928, G__19929) : f.call(null, G__19925, G__19926, G__19927, G__19928, G__19929);
      };
      var G__19954__4 = function() {
        var G__19955__delegate = function(x, y, z, args) {
          return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, arg1, arg2, x, y, cljs.core.array_seq([z, args], 0));
        };
        var G__19955 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__19956__i = 0, G__19956__a = new Array(arguments.length - 3);
            while (G__19956__i < G__19956__a.length) {
              G__19956__a[G__19956__i] = arguments[G__19956__i + 3];
              ++G__19956__i;
            }
            args = new cljs.core.IndexedSeq(G__19956__a, 0);
          }
          return G__19955__delegate.call(this, x, y, z, args);
        };
        G__19955.cljs$lang$maxFixedArity = 3;
        G__19955.cljs$lang$applyTo = function(arglist__19957) {
          var x = cljs.core.first(arglist__19957);
          arglist__19957 = cljs.core.next(arglist__19957);
          var y = cljs.core.first(arglist__19957);
          arglist__19957 = cljs.core.next(arglist__19957);
          var z = cljs.core.first(arglist__19957);
          var args = cljs.core.rest(arglist__19957);
          return G__19955__delegate(x, y, z, args);
        };
        G__19955.cljs$core$IFn$_invoke$arity$variadic = G__19955__delegate;
        return G__19955;
      }();
      G__19954 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__19954__0.call(this);
          case 1:
            return G__19954__1.call(this, x);
          case 2:
            return G__19954__2.call(this, x, y);
          case 3:
            return G__19954__3.call(this, x, y, z);
          default:
            var G__19958 = null;
            if (arguments.length > 3) {
              var G__19959__i = 0, G__19959__a = new Array(arguments.length - 3);
              while (G__19959__i < G__19959__a.length) {
                G__19959__a[G__19959__i] = arguments[G__19959__i + 3];
                ++G__19959__i;
              }
              G__19958 = new cljs.core.IndexedSeq(G__19959__a, 0);
            }
            return G__19954__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__19958);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__19954.cljs$lang$maxFixedArity = 3;
      G__19954.cljs$lang$applyTo = G__19954__4.cljs$lang$applyTo;
      G__19954.cljs$core$IFn$_invoke$arity$0 = G__19954__0;
      G__19954.cljs$core$IFn$_invoke$arity$1 = G__19954__1;
      G__19954.cljs$core$IFn$_invoke$arity$2 = G__19954__2;
      G__19954.cljs$core$IFn$_invoke$arity$3 = G__19954__3;
      G__19954.cljs$core$IFn$_invoke$arity$variadic = G__19954__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__19954;
    }();
  };
  var partial__4 = function(f, arg1, arg2, arg3) {
    return function() {
      var G__19960 = null;
      var G__19960__0 = function() {
        var G__19930 = arg1;
        var G__19931 = arg2;
        var G__19932 = arg3;
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__19930, G__19931, G__19932) : f.call(null, G__19930, G__19931, G__19932);
      };
      var G__19960__1 = function(x) {
        var G__19933 = arg1;
        var G__19934 = arg2;
        var G__19935 = arg3;
        var G__19936 = x;
        return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__19933, G__19934, G__19935, G__19936) : f.call(null, G__19933, G__19934, G__19935, G__19936);
      };
      var G__19960__2 = function(x, y) {
        var G__19937 = arg1;
        var G__19938 = arg2;
        var G__19939 = arg3;
        var G__19940 = x;
        var G__19941 = y;
        return f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__19937, G__19938, G__19939, G__19940, G__19941) : f.call(null, G__19937, G__19938, G__19939, G__19940, G__19941);
      };
      var G__19960__3 = function(x, y, z) {
        var G__19942 = arg1;
        var G__19943 = arg2;
        var G__19944 = arg3;
        var G__19945 = x;
        var G__19946 = y;
        var G__19947 = z;
        return f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(G__19942, G__19943, G__19944, G__19945, G__19946, G__19947) : f.call(null, G__19942, G__19943, G__19944, G__19945, G__19946, G__19947);
      };
      var G__19960__4 = function() {
        var G__19961__delegate = function(x, y, z, args) {
          return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, arg1, arg2, arg3, x, cljs.core.array_seq([y, z, args], 0));
        };
        var G__19961 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__19962__i = 0, G__19962__a = new Array(arguments.length - 3);
            while (G__19962__i < G__19962__a.length) {
              G__19962__a[G__19962__i] = arguments[G__19962__i + 3];
              ++G__19962__i;
            }
            args = new cljs.core.IndexedSeq(G__19962__a, 0);
          }
          return G__19961__delegate.call(this, x, y, z, args);
        };
        G__19961.cljs$lang$maxFixedArity = 3;
        G__19961.cljs$lang$applyTo = function(arglist__19963) {
          var x = cljs.core.first(arglist__19963);
          arglist__19963 = cljs.core.next(arglist__19963);
          var y = cljs.core.first(arglist__19963);
          arglist__19963 = cljs.core.next(arglist__19963);
          var z = cljs.core.first(arglist__19963);
          var args = cljs.core.rest(arglist__19963);
          return G__19961__delegate(x, y, z, args);
        };
        G__19961.cljs$core$IFn$_invoke$arity$variadic = G__19961__delegate;
        return G__19961;
      }();
      G__19960 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__19960__0.call(this);
          case 1:
            return G__19960__1.call(this, x);
          case 2:
            return G__19960__2.call(this, x, y);
          case 3:
            return G__19960__3.call(this, x, y, z);
          default:
            var G__19964 = null;
            if (arguments.length > 3) {
              var G__19965__i = 0, G__19965__a = new Array(arguments.length - 3);
              while (G__19965__i < G__19965__a.length) {
                G__19965__a[G__19965__i] = arguments[G__19965__i + 3];
                ++G__19965__i;
              }
              G__19964 = new cljs.core.IndexedSeq(G__19965__a, 0);
            }
            return G__19960__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__19964);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__19960.cljs$lang$maxFixedArity = 3;
      G__19960.cljs$lang$applyTo = G__19960__4.cljs$lang$applyTo;
      G__19960.cljs$core$IFn$_invoke$arity$0 = G__19960__0;
      G__19960.cljs$core$IFn$_invoke$arity$1 = G__19960__1;
      G__19960.cljs$core$IFn$_invoke$arity$2 = G__19960__2;
      G__19960.cljs$core$IFn$_invoke$arity$3 = G__19960__3;
      G__19960.cljs$core$IFn$_invoke$arity$variadic = G__19960__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__19960;
    }();
  };
  var partial__5 = function() {
    var G__19966__delegate = function(f, arg1, arg2, arg3, more) {
      return function() {
        var G__19967__delegate = function(args) {
          return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, arg1, arg2, arg3, cljs.core.concat.cljs$core$IFn$_invoke$arity$2(more, args));
        };
        var G__19967 = function(var_args) {
          var args = null;
          if (arguments.length > 0) {
            var G__19968__i = 0, G__19968__a = new Array(arguments.length - 0);
            while (G__19968__i < G__19968__a.length) {
              G__19968__a[G__19968__i] = arguments[G__19968__i + 0];
              ++G__19968__i;
            }
            args = new cljs.core.IndexedSeq(G__19968__a, 0);
          }
          return G__19967__delegate.call(this, args);
        };
        G__19967.cljs$lang$maxFixedArity = 0;
        G__19967.cljs$lang$applyTo = function(arglist__19969) {
          var args = cljs.core.seq(arglist__19969);
          return G__19967__delegate(args);
        };
        G__19967.cljs$core$IFn$_invoke$arity$variadic = G__19967__delegate;
        return G__19967;
      }();
    };
    var G__19966 = function(f, arg1, arg2, arg3, var_args) {
      var more = null;
      if (arguments.length > 4) {
        var G__19970__i = 0, G__19970__a = new Array(arguments.length - 4);
        while (G__19970__i < G__19970__a.length) {
          G__19970__a[G__19970__i] = arguments[G__19970__i + 4];
          ++G__19970__i;
        }
        more = new cljs.core.IndexedSeq(G__19970__a, 0);
      }
      return G__19966__delegate.call(this, f, arg1, arg2, arg3, more);
    };
    G__19966.cljs$lang$maxFixedArity = 4;
    G__19966.cljs$lang$applyTo = function(arglist__19971) {
      var f = cljs.core.first(arglist__19971);
      arglist__19971 = cljs.core.next(arglist__19971);
      var arg1 = cljs.core.first(arglist__19971);
      arglist__19971 = cljs.core.next(arglist__19971);
      var arg2 = cljs.core.first(arglist__19971);
      arglist__19971 = cljs.core.next(arglist__19971);
      var arg3 = cljs.core.first(arglist__19971);
      var more = cljs.core.rest(arglist__19971);
      return G__19966__delegate(f, arg1, arg2, arg3, more);
    };
    G__19966.cljs$core$IFn$_invoke$arity$variadic = G__19966__delegate;
    return G__19966;
  }();
  partial = function(f, arg1, arg2, arg3, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return partial__1.call(this, f);
      case 2:
        return partial__2.call(this, f, arg1);
      case 3:
        return partial__3.call(this, f, arg1, arg2);
      case 4:
        return partial__4.call(this, f, arg1, arg2, arg3);
      default:
        var G__19972 = null;
        if (arguments.length > 4) {
          var G__19973__i = 0, G__19973__a = new Array(arguments.length - 4);
          while (G__19973__i < G__19973__a.length) {
            G__19973__a[G__19973__i] = arguments[G__19973__i + 4];
            ++G__19973__i;
          }
          G__19972 = new cljs.core.IndexedSeq(G__19973__a, 0);
        }
        return partial__5.cljs$core$IFn$_invoke$arity$variadic(f, arg1, arg2, arg3, G__19972);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  partial.cljs$lang$maxFixedArity = 4;
  partial.cljs$lang$applyTo = partial__5.cljs$lang$applyTo;
  partial.cljs$core$IFn$_invoke$arity$1 = partial__1;
  partial.cljs$core$IFn$_invoke$arity$2 = partial__2;
  partial.cljs$core$IFn$_invoke$arity$3 = partial__3;
  partial.cljs$core$IFn$_invoke$arity$4 = partial__4;
  partial.cljs$core$IFn$_invoke$arity$variadic = partial__5.cljs$core$IFn$_invoke$arity$variadic;
  return partial;
}();
cljs.core.fnil = function() {
  var fnil = null;
  var fnil__2 = function(f, x) {
    return function() {
      var G__20006 = null;
      var G__20006__1 = function(a) {
        var G__19990 = a == null ? x : a;
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__19990) : f.call(null, G__19990);
      };
      var G__20006__2 = function(a, b) {
        var G__19991 = a == null ? x : a;
        var G__19992 = b;
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__19991, G__19992) : f.call(null, G__19991, G__19992);
      };
      var G__20006__3 = function(a, b, c) {
        var G__19993 = a == null ? x : a;
        var G__19994 = b;
        var G__19995 = c;
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__19993, G__19994, G__19995) : f.call(null, G__19993, G__19994, G__19995);
      };
      var G__20006__4 = function() {
        var G__20007__delegate = function(a, b, c, ds) {
          return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, a == null ? x : a, b, c, ds);
        };
        var G__20007 = function(a, b, c, var_args) {
          var ds = null;
          if (arguments.length > 3) {
            var G__20008__i = 0, G__20008__a = new Array(arguments.length - 3);
            while (G__20008__i < G__20008__a.length) {
              G__20008__a[G__20008__i] = arguments[G__20008__i + 3];
              ++G__20008__i;
            }
            ds = new cljs.core.IndexedSeq(G__20008__a, 0);
          }
          return G__20007__delegate.call(this, a, b, c, ds);
        };
        G__20007.cljs$lang$maxFixedArity = 3;
        G__20007.cljs$lang$applyTo = function(arglist__20009) {
          var a = cljs.core.first(arglist__20009);
          arglist__20009 = cljs.core.next(arglist__20009);
          var b = cljs.core.first(arglist__20009);
          arglist__20009 = cljs.core.next(arglist__20009);
          var c = cljs.core.first(arglist__20009);
          var ds = cljs.core.rest(arglist__20009);
          return G__20007__delegate(a, b, c, ds);
        };
        G__20007.cljs$core$IFn$_invoke$arity$variadic = G__20007__delegate;
        return G__20007;
      }();
      G__20006 = function(a, b, c, var_args) {
        var ds = var_args;
        switch(arguments.length) {
          case 1:
            return G__20006__1.call(this, a);
          case 2:
            return G__20006__2.call(this, a, b);
          case 3:
            return G__20006__3.call(this, a, b, c);
          default:
            var G__20010 = null;
            if (arguments.length > 3) {
              var G__20011__i = 0, G__20011__a = new Array(arguments.length - 3);
              while (G__20011__i < G__20011__a.length) {
                G__20011__a[G__20011__i] = arguments[G__20011__i + 3];
                ++G__20011__i;
              }
              G__20010 = new cljs.core.IndexedSeq(G__20011__a, 0);
            }
            return G__20006__4.cljs$core$IFn$_invoke$arity$variadic(a, b, c, G__20010);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__20006.cljs$lang$maxFixedArity = 3;
      G__20006.cljs$lang$applyTo = G__20006__4.cljs$lang$applyTo;
      G__20006.cljs$core$IFn$_invoke$arity$1 = G__20006__1;
      G__20006.cljs$core$IFn$_invoke$arity$2 = G__20006__2;
      G__20006.cljs$core$IFn$_invoke$arity$3 = G__20006__3;
      G__20006.cljs$core$IFn$_invoke$arity$variadic = G__20006__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__20006;
    }();
  };
  var fnil__3 = function(f, x, y) {
    return function() {
      var G__20012 = null;
      var G__20012__2 = function(a, b) {
        var G__19996 = a == null ? x : a;
        var G__19997 = b == null ? y : b;
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__19996, G__19997) : f.call(null, G__19996, G__19997);
      };
      var G__20012__3 = function(a, b, c) {
        var G__19998 = a == null ? x : a;
        var G__19999 = b == null ? y : b;
        var G__20000 = c;
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__19998, G__19999, G__20000) : f.call(null, G__19998, G__19999, G__20000);
      };
      var G__20012__4 = function() {
        var G__20013__delegate = function(a, b, c, ds) {
          return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, a == null ? x : a, b == null ? y : b, c, ds);
        };
        var G__20013 = function(a, b, c, var_args) {
          var ds = null;
          if (arguments.length > 3) {
            var G__20014__i = 0, G__20014__a = new Array(arguments.length - 3);
            while (G__20014__i < G__20014__a.length) {
              G__20014__a[G__20014__i] = arguments[G__20014__i + 3];
              ++G__20014__i;
            }
            ds = new cljs.core.IndexedSeq(G__20014__a, 0);
          }
          return G__20013__delegate.call(this, a, b, c, ds);
        };
        G__20013.cljs$lang$maxFixedArity = 3;
        G__20013.cljs$lang$applyTo = function(arglist__20015) {
          var a = cljs.core.first(arglist__20015);
          arglist__20015 = cljs.core.next(arglist__20015);
          var b = cljs.core.first(arglist__20015);
          arglist__20015 = cljs.core.next(arglist__20015);
          var c = cljs.core.first(arglist__20015);
          var ds = cljs.core.rest(arglist__20015);
          return G__20013__delegate(a, b, c, ds);
        };
        G__20013.cljs$core$IFn$_invoke$arity$variadic = G__20013__delegate;
        return G__20013;
      }();
      G__20012 = function(a, b, c, var_args) {
        var ds = var_args;
        switch(arguments.length) {
          case 2:
            return G__20012__2.call(this, a, b);
          case 3:
            return G__20012__3.call(this, a, b, c);
          default:
            var G__20016 = null;
            if (arguments.length > 3) {
              var G__20017__i = 0, G__20017__a = new Array(arguments.length - 3);
              while (G__20017__i < G__20017__a.length) {
                G__20017__a[G__20017__i] = arguments[G__20017__i + 3];
                ++G__20017__i;
              }
              G__20016 = new cljs.core.IndexedSeq(G__20017__a, 0);
            }
            return G__20012__4.cljs$core$IFn$_invoke$arity$variadic(a, b, c, G__20016);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__20012.cljs$lang$maxFixedArity = 3;
      G__20012.cljs$lang$applyTo = G__20012__4.cljs$lang$applyTo;
      G__20012.cljs$core$IFn$_invoke$arity$2 = G__20012__2;
      G__20012.cljs$core$IFn$_invoke$arity$3 = G__20012__3;
      G__20012.cljs$core$IFn$_invoke$arity$variadic = G__20012__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__20012;
    }();
  };
  var fnil__4 = function(f, x, y, z) {
    return function() {
      var G__20018 = null;
      var G__20018__2 = function(a, b) {
        var G__20001 = a == null ? x : a;
        var G__20002 = b == null ? y : b;
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__20001, G__20002) : f.call(null, G__20001, G__20002);
      };
      var G__20018__3 = function(a, b, c) {
        var G__20003 = a == null ? x : a;
        var G__20004 = b == null ? y : b;
        var G__20005 = c == null ? z : c;
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__20003, G__20004, G__20005) : f.call(null, G__20003, G__20004, G__20005);
      };
      var G__20018__4 = function() {
        var G__20019__delegate = function(a, b, c, ds) {
          return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, a == null ? x : a, b == null ? y : b, c == null ? z : c, ds);
        };
        var G__20019 = function(a, b, c, var_args) {
          var ds = null;
          if (arguments.length > 3) {
            var G__20020__i = 0, G__20020__a = new Array(arguments.length - 3);
            while (G__20020__i < G__20020__a.length) {
              G__20020__a[G__20020__i] = arguments[G__20020__i + 3];
              ++G__20020__i;
            }
            ds = new cljs.core.IndexedSeq(G__20020__a, 0);
          }
          return G__20019__delegate.call(this, a, b, c, ds);
        };
        G__20019.cljs$lang$maxFixedArity = 3;
        G__20019.cljs$lang$applyTo = function(arglist__20021) {
          var a = cljs.core.first(arglist__20021);
          arglist__20021 = cljs.core.next(arglist__20021);
          var b = cljs.core.first(arglist__20021);
          arglist__20021 = cljs.core.next(arglist__20021);
          var c = cljs.core.first(arglist__20021);
          var ds = cljs.core.rest(arglist__20021);
          return G__20019__delegate(a, b, c, ds);
        };
        G__20019.cljs$core$IFn$_invoke$arity$variadic = G__20019__delegate;
        return G__20019;
      }();
      G__20018 = function(a, b, c, var_args) {
        var ds = var_args;
        switch(arguments.length) {
          case 2:
            return G__20018__2.call(this, a, b);
          case 3:
            return G__20018__3.call(this, a, b, c);
          default:
            var G__20022 = null;
            if (arguments.length > 3) {
              var G__20023__i = 0, G__20023__a = new Array(arguments.length - 3);
              while (G__20023__i < G__20023__a.length) {
                G__20023__a[G__20023__i] = arguments[G__20023__i + 3];
                ++G__20023__i;
              }
              G__20022 = new cljs.core.IndexedSeq(G__20023__a, 0);
            }
            return G__20018__4.cljs$core$IFn$_invoke$arity$variadic(a, b, c, G__20022);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__20018.cljs$lang$maxFixedArity = 3;
      G__20018.cljs$lang$applyTo = G__20018__4.cljs$lang$applyTo;
      G__20018.cljs$core$IFn$_invoke$arity$2 = G__20018__2;
      G__20018.cljs$core$IFn$_invoke$arity$3 = G__20018__3;
      G__20018.cljs$core$IFn$_invoke$arity$variadic = G__20018__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__20018;
    }();
  };
  fnil = function(f, x, y, z) {
    switch(arguments.length) {
      case 2:
        return fnil__2.call(this, f, x);
      case 3:
        return fnil__3.call(this, f, x, y);
      case 4:
        return fnil__4.call(this, f, x, y, z);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  fnil.cljs$core$IFn$_invoke$arity$2 = fnil__2;
  fnil.cljs$core$IFn$_invoke$arity$3 = fnil__3;
  fnil.cljs$core$IFn$_invoke$arity$4 = fnil__4;
  return fnil;
}();
cljs.core.map_indexed = function() {
  var map_indexed = null;
  var map_indexed__1 = function(f) {
    return function(rf) {
      var i = function() {
        var G__20054 = -1;
        return cljs.core.volatile_BANG_.cljs$core$IFn$_invoke$arity$1 ? cljs.core.volatile_BANG_.cljs$core$IFn$_invoke$arity$1(G__20054) : cljs.core.volatile_BANG_.call(null, G__20054);
      }();
      return function(i) {
        return function() {
          var G__20084 = null;
          var G__20084__0 = function() {
            return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
          };
          var G__20084__1 = function(result) {
            var G__20055 = result;
            return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__20055) : rf.call(null, G__20055);
          };
          var G__20084__2 = function(result, input) {
            var G__20056 = result;
            var G__20057 = function() {
              var G__20058 = cljs.core._vreset_BANG_(i, cljs.core._deref(i) + 1);
              var G__20059 = input;
              return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__20058, G__20059) : f.call(null, G__20058, G__20059);
            }();
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__20056, G__20057) : rf.call(null, G__20056, G__20057);
          };
          G__20084 = function(result, input) {
            switch(arguments.length) {
              case 0:
                return G__20084__0.call(this);
              case 1:
                return G__20084__1.call(this, result);
              case 2:
                return G__20084__2.call(this, result, input);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__20084.cljs$core$IFn$_invoke$arity$0 = G__20084__0;
          G__20084.cljs$core$IFn$_invoke$arity$1 = G__20084__1;
          G__20084.cljs$core$IFn$_invoke$arity$2 = G__20084__2;
          return G__20084;
        }();
      }(i);
    };
  };
  var map_indexed__2 = function(f, coll) {
    var mapi = function mapi(idx, coll__$1) {
      return new cljs.core.LazySeq(null, function() {
        var temp__4126__auto__ = cljs.core.seq(coll__$1);
        if (temp__4126__auto__) {
          var s = temp__4126__auto__;
          if (cljs.core.chunked_seq_QMARK_(s)) {
            var c = cljs.core.chunk_first(s);
            var size = cljs.core.count(c);
            var b = cljs.core.chunk_buffer(size);
            var n__8391__auto___20085 = size;
            var i_20086 = 0;
            while (true) {
              if (i_20086 < n__8391__auto___20085) {
                cljs.core.chunk_append(b, function() {
                  var G__20080 = idx + i_20086;
                  var G__20081 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_20086);
                  return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__20080, G__20081) : f.call(null, G__20080, G__20081);
                }());
                var G__20087 = i_20086 + 1;
                i_20086 = G__20087;
                continue;
              } else {
              }
              break;
            }
            return cljs.core.chunk_cons(cljs.core.chunk(b), mapi(idx + size, cljs.core.chunk_rest(s)));
          } else {
            return cljs.core.cons(function() {
              var G__20082 = idx;
              var G__20083 = cljs.core.first(s);
              return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__20082, G__20083) : f.call(null, G__20082, G__20083);
            }(), mapi(idx + 1, cljs.core.rest(s)));
          }
        } else {
          return null;
        }
      }, null, null);
    };
    return mapi(0, coll);
  };
  map_indexed = function(f, coll) {
    switch(arguments.length) {
      case 1:
        return map_indexed__1.call(this, f);
      case 2:
        return map_indexed__2.call(this, f, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  map_indexed.cljs$core$IFn$_invoke$arity$1 = map_indexed__1;
  map_indexed.cljs$core$IFn$_invoke$arity$2 = map_indexed__2;
  return map_indexed;
}();
cljs.core.keep = function() {
  var keep = null;
  var keep__1 = function(f) {
    return function(rf) {
      return function() {
        var G__20106 = null;
        var G__20106__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__20106__1 = function(result) {
          var G__20100 = result;
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__20100) : rf.call(null, G__20100);
        };
        var G__20106__2 = function(result, input) {
          var v = function() {
            var G__20101 = input;
            return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__20101) : f.call(null, G__20101);
          }();
          if (v == null) {
            return result;
          } else {
            var G__20102 = result;
            var G__20103 = v;
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__20102, G__20103) : rf.call(null, G__20102, G__20103);
          }
        };
        G__20106 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__20106__0.call(this);
            case 1:
              return G__20106__1.call(this, result);
            case 2:
              return G__20106__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__20106.cljs$core$IFn$_invoke$arity$0 = G__20106__0;
        G__20106.cljs$core$IFn$_invoke$arity$1 = G__20106__1;
        G__20106.cljs$core$IFn$_invoke$arity$2 = G__20106__2;
        return G__20106;
      }();
    };
  };
  var keep__2 = function(f, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq(coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_(s)) {
          var c = cljs.core.chunk_first(s);
          var size = cljs.core.count(c);
          var b = cljs.core.chunk_buffer(size);
          var n__8391__auto___20107 = size;
          var i_20108 = 0;
          while (true) {
            if (i_20108 < n__8391__auto___20107) {
              var x_20109 = function() {
                var G__20104 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_20108);
                return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__20104) : f.call(null, G__20104);
              }();
              if (x_20109 == null) {
              } else {
                cljs.core.chunk_append(b, x_20109);
              }
              var G__20110 = i_20108 + 1;
              i_20108 = G__20110;
              continue;
            } else {
            }
            break;
          }
          return cljs.core.chunk_cons(cljs.core.chunk(b), keep.cljs$core$IFn$_invoke$arity$2(f, cljs.core.chunk_rest(s)));
        } else {
          var x = function() {
            var G__20105 = cljs.core.first(s);
            return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__20105) : f.call(null, G__20105);
          }();
          if (x == null) {
            return keep.cljs$core$IFn$_invoke$arity$2(f, cljs.core.rest(s));
          } else {
            return cljs.core.cons(x, keep.cljs$core$IFn$_invoke$arity$2(f, cljs.core.rest(s)));
          }
        }
      } else {
        return null;
      }
    }, null, null);
  };
  keep = function(f, coll) {
    switch(arguments.length) {
      case 1:
        return keep__1.call(this, f);
      case 2:
        return keep__2.call(this, f, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  keep.cljs$core$IFn$_invoke$arity$1 = keep__1;
  keep.cljs$core$IFn$_invoke$arity$2 = keep__2;
  return keep;
}();
cljs.core.Atom = function(state, meta, validator, watches) {
  this.state = state;
  this.meta = meta;
  this.validator = validator;
  this.watches = watches;
  this.cljs$lang$protocol_mask$partition0$ = 6455296;
  this.cljs$lang$protocol_mask$partition1$ = 16386;
};
cljs.core.Atom.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  var G__20111 = this$__$1;
  return goog.getUid(G__20111);
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = function(this$, oldval, newval) {
  var self__ = this;
  var this$__$1 = this;
  var seq__20112 = cljs.core.seq(self__.watches);
  var chunk__20113 = null;
  var count__20114 = 0;
  var i__20115 = 0;
  while (true) {
    if (i__20115 < count__20114) {
      var vec__20116 = chunk__20113.cljs$core$IIndexed$_nth$arity$2(null, i__20115);
      var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20116, 0, null);
      var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20116, 1, null);
      var G__20117_20126 = key;
      var G__20118_20127 = this$__$1;
      var G__20119_20128 = oldval;
      var G__20120_20129 = newval;
      f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__20117_20126, G__20118_20127, G__20119_20128, G__20120_20129) : f.call(null, G__20117_20126, G__20118_20127, G__20119_20128, G__20120_20129);
      var G__20130 = seq__20112;
      var G__20131 = chunk__20113;
      var G__20132 = count__20114;
      var G__20133 = i__20115 + 1;
      seq__20112 = G__20130;
      chunk__20113 = G__20131;
      count__20114 = G__20132;
      i__20115 = G__20133;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq(seq__20112);
      if (temp__4126__auto__) {
        var seq__20112__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__20112__$1)) {
          var c__8291__auto__ = cljs.core.chunk_first(seq__20112__$1);
          var G__20134 = cljs.core.chunk_rest(seq__20112__$1);
          var G__20135 = c__8291__auto__;
          var G__20136 = cljs.core.count(c__8291__auto__);
          var G__20137 = 0;
          seq__20112 = G__20134;
          chunk__20113 = G__20135;
          count__20114 = G__20136;
          i__20115 = G__20137;
          continue;
        } else {
          var vec__20121 = cljs.core.first(seq__20112__$1);
          var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20121, 0, null);
          var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20121, 1, null);
          var G__20122_20138 = key;
          var G__20123_20139 = this$__$1;
          var G__20124_20140 = oldval;
          var G__20125_20141 = newval;
          f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__20122_20138, G__20123_20139, G__20124_20140, G__20125_20141) : f.call(null, G__20122_20138, G__20123_20139, G__20124_20140, G__20125_20141);
          var G__20142 = cljs.core.next(seq__20112__$1);
          var G__20143 = null;
          var G__20144 = 0;
          var G__20145 = 0;
          seq__20112 = G__20142;
          chunk__20113 = G__20143;
          count__20114 = G__20144;
          i__20115 = G__20145;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_add_watch$arity$3 = function(this$, key, f) {
  var self__ = this;
  var this$__$1 = this;
  this$__$1.watches = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.watches, key, f);
  return this$__$1;
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = function(this$, key) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1.watches = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.watches, key);
};
cljs.core.Atom.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.meta;
};
cljs.core.Atom.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.state;
};
cljs.core.Atom.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var self__ = this;
  var o__$1 = this;
  return o__$1 === other;
};
cljs.core.Atom.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Atom.cljs$lang$type = true;
cljs.core.Atom.cljs$lang$ctorStr = "cljs.core/Atom";
cljs.core.Atom.cljs$lang$ctorPrWriter = function(this__8091__auto__, writer__8092__auto__, opt__8093__auto__) {
  return cljs.core._write(writer__8092__auto__, "cljs.core/Atom");
};
cljs.core.__GT_Atom = function __GT_Atom(state, meta, validator, watches) {
  return new cljs.core.Atom(state, meta, validator, watches);
};
cljs.core.atom = function() {
  var atom = null;
  var atom__1 = function(x) {
    return new cljs.core.Atom(x, null, null, null);
  };
  var atom__2 = function() {
    var G__20149__delegate = function(x, p__20146) {
      var map__20148 = p__20146;
      var map__20148__$1 = cljs.core.seq_QMARK_(map__20148) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, map__20148) : map__20148;
      var validator = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__20148__$1, new cljs.core.Keyword(null, "validator", "validator", -1966190681));
      var meta = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__20148__$1, new cljs.core.Keyword(null, "meta", "meta", 1499536964));
      return new cljs.core.Atom(x, meta, validator, null);
    };
    var G__20149 = function(x, var_args) {
      var p__20146 = null;
      if (arguments.length > 1) {
        var G__20150__i = 0, G__20150__a = new Array(arguments.length - 1);
        while (G__20150__i < G__20150__a.length) {
          G__20150__a[G__20150__i] = arguments[G__20150__i + 1];
          ++G__20150__i;
        }
        p__20146 = new cljs.core.IndexedSeq(G__20150__a, 0);
      }
      return G__20149__delegate.call(this, x, p__20146);
    };
    G__20149.cljs$lang$maxFixedArity = 1;
    G__20149.cljs$lang$applyTo = function(arglist__20151) {
      var x = cljs.core.first(arglist__20151);
      var p__20146 = cljs.core.rest(arglist__20151);
      return G__20149__delegate(x, p__20146);
    };
    G__20149.cljs$core$IFn$_invoke$arity$variadic = G__20149__delegate;
    return G__20149;
  }();
  atom = function(x, var_args) {
    var p__20146 = var_args;
    switch(arguments.length) {
      case 1:
        return atom__1.call(this, x);
      default:
        var G__20152 = null;
        if (arguments.length > 1) {
          var G__20153__i = 0, G__20153__a = new Array(arguments.length - 1);
          while (G__20153__i < G__20153__a.length) {
            G__20153__a[G__20153__i] = arguments[G__20153__i + 1];
            ++G__20153__i;
          }
          G__20152 = new cljs.core.IndexedSeq(G__20153__a, 0);
        }
        return atom__2.cljs$core$IFn$_invoke$arity$variadic(x, G__20152);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  atom.cljs$lang$maxFixedArity = 1;
  atom.cljs$lang$applyTo = atom__2.cljs$lang$applyTo;
  atom.cljs$core$IFn$_invoke$arity$1 = atom__1;
  atom.cljs$core$IFn$_invoke$arity$variadic = atom__2.cljs$core$IFn$_invoke$arity$variadic;
  return atom;
}();
cljs.core.reset_BANG_ = function reset_BANG_(a, new_value) {
  if (a instanceof cljs.core.Atom) {
    var validate = a.validator;
    if (validate == null) {
    } else {
      if (cljs.core.truth_(function() {
        var G__20156 = new_value;
        return validate.cljs$core$IFn$_invoke$arity$1 ? validate.cljs$core$IFn$_invoke$arity$1(G__20156) : validate.call(null, G__20156);
      }())) {
      } else {
        throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("Validator rejected reference state"), cljs.core.str("\n"), cljs.core.str(function() {
          var G__20157 = cljs.core.list(new cljs.core.Symbol(null, "validate", "validate", 1439230700, null), new cljs.core.Symbol(null, "new-value", "new-value", -1567397401, null));
          return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1 ? cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1(G__20157) : cljs.core.pr_str.call(null, G__20157);
        }())].join(""));
      }
    }
    var old_value = a.state;
    a.state = new_value;
    if (a.watches == null) {
    } else {
      cljs.core._notify_watches(a, old_value, new_value);
    }
    return new_value;
  } else {
    return cljs.core._reset_BANG_(a, new_value);
  }
};
cljs.core.swap_BANG_ = function() {
  var swap_BANG_ = null;
  var swap_BANG___2 = function(a, f) {
    if (a instanceof cljs.core.Atom) {
      return cljs.core.reset_BANG_(a, function() {
        var G__20164 = a.state;
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__20164) : f.call(null, G__20164);
      }());
    } else {
      return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$2(a, f);
    }
  };
  var swap_BANG___3 = function(a, f, x) {
    if (a instanceof cljs.core.Atom) {
      return cljs.core.reset_BANG_(a, function() {
        var G__20165 = a.state;
        var G__20166 = x;
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__20165, G__20166) : f.call(null, G__20165, G__20166);
      }());
    } else {
      return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$3(a, f, x);
    }
  };
  var swap_BANG___4 = function(a, f, x, y) {
    if (a instanceof cljs.core.Atom) {
      return cljs.core.reset_BANG_(a, function() {
        var G__20167 = a.state;
        var G__20168 = x;
        var G__20169 = y;
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__20167, G__20168, G__20169) : f.call(null, G__20167, G__20168, G__20169);
      }());
    } else {
      return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$4(a, f, x, y);
    }
  };
  var swap_BANG___5 = function() {
    var G__20170__delegate = function(a, f, x, y, more) {
      if (a instanceof cljs.core.Atom) {
        return cljs.core.reset_BANG_(a, cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, a.state, x, y, more));
      } else {
        return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$5(a, f, x, y, more);
      }
    };
    var G__20170 = function(a, f, x, y, var_args) {
      var more = null;
      if (arguments.length > 4) {
        var G__20171__i = 0, G__20171__a = new Array(arguments.length - 4);
        while (G__20171__i < G__20171__a.length) {
          G__20171__a[G__20171__i] = arguments[G__20171__i + 4];
          ++G__20171__i;
        }
        more = new cljs.core.IndexedSeq(G__20171__a, 0);
      }
      return G__20170__delegate.call(this, a, f, x, y, more);
    };
    G__20170.cljs$lang$maxFixedArity = 4;
    G__20170.cljs$lang$applyTo = function(arglist__20172) {
      var a = cljs.core.first(arglist__20172);
      arglist__20172 = cljs.core.next(arglist__20172);
      var f = cljs.core.first(arglist__20172);
      arglist__20172 = cljs.core.next(arglist__20172);
      var x = cljs.core.first(arglist__20172);
      arglist__20172 = cljs.core.next(arglist__20172);
      var y = cljs.core.first(arglist__20172);
      var more = cljs.core.rest(arglist__20172);
      return G__20170__delegate(a, f, x, y, more);
    };
    G__20170.cljs$core$IFn$_invoke$arity$variadic = G__20170__delegate;
    return G__20170;
  }();
  swap_BANG_ = function(a, f, x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return swap_BANG___2.call(this, a, f);
      case 3:
        return swap_BANG___3.call(this, a, f, x);
      case 4:
        return swap_BANG___4.call(this, a, f, x, y);
      default:
        var G__20173 = null;
        if (arguments.length > 4) {
          var G__20174__i = 0, G__20174__a = new Array(arguments.length - 4);
          while (G__20174__i < G__20174__a.length) {
            G__20174__a[G__20174__i] = arguments[G__20174__i + 4];
            ++G__20174__i;
          }
          G__20173 = new cljs.core.IndexedSeq(G__20174__a, 0);
        }
        return swap_BANG___5.cljs$core$IFn$_invoke$arity$variadic(a, f, x, y, G__20173);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  swap_BANG_.cljs$lang$maxFixedArity = 4;
  swap_BANG_.cljs$lang$applyTo = swap_BANG___5.cljs$lang$applyTo;
  swap_BANG_.cljs$core$IFn$_invoke$arity$2 = swap_BANG___2;
  swap_BANG_.cljs$core$IFn$_invoke$arity$3 = swap_BANG___3;
  swap_BANG_.cljs$core$IFn$_invoke$arity$4 = swap_BANG___4;
  swap_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_BANG___5.cljs$core$IFn$_invoke$arity$variadic;
  return swap_BANG_;
}();
cljs.core.compare_and_set_BANG_ = function compare_and_set_BANG_(a, oldval, newval) {
  if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(a.cljs$core$IDeref$_deref$arity$1(null), oldval)) {
    cljs.core.reset_BANG_(a, newval);
    return true;
  } else {
    return false;
  }
};
cljs.core.set_validator_BANG_ = function set_validator_BANG_(iref, val) {
  return iref.validator = val;
};
cljs.core.get_validator = function get_validator(iref) {
  return iref.validator;
};
cljs.core.Volatile = function(state) {
  this.state = state;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32768;
};
cljs.core.Volatile.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.state;
};
cljs.core.Volatile.prototype.cljs$core$IVolatile$ = true;
cljs.core.Volatile.prototype.cljs$core$IVolatile$_vreset_BANG_$arity$2 = function(_, new_state) {
  var self__ = this;
  var ___$1 = this;
  return self__.state = new_state;
};
cljs.core.Volatile.cljs$lang$type = true;
cljs.core.Volatile.cljs$lang$ctorStr = "cljs.core/Volatile";
cljs.core.Volatile.cljs$lang$ctorPrWriter = function(this__8091__auto__, writer__8092__auto__, opt__8093__auto__) {
  return cljs.core._write(writer__8092__auto__, "cljs.core/Volatile");
};
cljs.core.__GT_Volatile = function __GT_Volatile(state) {
  return new cljs.core.Volatile(state);
};
cljs.core.volatile_BANG_ = function volatile_BANG_(val) {
  return new cljs.core.Volatile(val);
};
cljs.core.volatile_QMARK_ = function volatile_QMARK_(x) {
  return x instanceof cljs.core.Volatile;
};
cljs.core.vreset_BANG_ = function vreset_BANG_(vol, newval) {
  return cljs.core._vreset_BANG_(vol, newval);
};
cljs.core.keep_indexed = function() {
  var keep_indexed = null;
  var keep_indexed__1 = function(f) {
    return function(rf) {
      var ia = cljs.core.volatile_BANG_(-1);
      return function(ia) {
        return function() {
          var G__20241 = null;
          var G__20241__0 = function() {
            return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
          };
          var G__20241__1 = function(result) {
            var G__20208 = result;
            return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__20208) : rf.call(null, G__20208);
          };
          var G__20241__2 = function(result, input) {
            var i = ia.cljs$core$IVolatile$_vreset_BANG_$arity$2(null, ia.cljs$core$IDeref$_deref$arity$1(null) + 1);
            var v = function() {
              var G__20209 = i;
              var G__20210 = input;
              return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__20209, G__20210) : f.call(null, G__20209, G__20210);
            }();
            if (v == null) {
              return result;
            } else {
              var G__20211 = result;
              var G__20212 = v;
              return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__20211, G__20212) : rf.call(null, G__20211, G__20212);
            }
          };
          G__20241 = function(result, input) {
            switch(arguments.length) {
              case 0:
                return G__20241__0.call(this);
              case 1:
                return G__20241__1.call(this, result);
              case 2:
                return G__20241__2.call(this, result, input);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__20241.cljs$core$IFn$_invoke$arity$0 = G__20241__0;
          G__20241.cljs$core$IFn$_invoke$arity$1 = G__20241__1;
          G__20241.cljs$core$IFn$_invoke$arity$2 = G__20241__2;
          return G__20241;
        }();
      }(ia);
    };
  };
  var keep_indexed__2 = function(f, coll) {
    var keepi = function keepi(idx, coll__$1) {
      return new cljs.core.LazySeq(null, function() {
        var temp__4126__auto__ = cljs.core.seq(coll__$1);
        if (temp__4126__auto__) {
          var s = temp__4126__auto__;
          if (cljs.core.chunked_seq_QMARK_(s)) {
            var c = cljs.core.chunk_first(s);
            var size = cljs.core.count(c);
            var b = cljs.core.chunk_buffer(size);
            var n__8391__auto___20242 = size;
            var i_20243 = 0;
            while (true) {
              if (i_20243 < n__8391__auto___20242) {
                var x_20244 = function() {
                  var G__20237 = idx + i_20243;
                  var G__20238 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_20243);
                  return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__20237, G__20238) : f.call(null, G__20237, G__20238);
                }();
                if (x_20244 == null) {
                } else {
                  cljs.core.chunk_append(b, x_20244);
                }
                var G__20245 = i_20243 + 1;
                i_20243 = G__20245;
                continue;
              } else {
              }
              break;
            }
            return cljs.core.chunk_cons(cljs.core.chunk(b), keepi(idx + size, cljs.core.chunk_rest(s)));
          } else {
            var x = function() {
              var G__20239 = idx;
              var G__20240 = cljs.core.first(s);
              return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__20239, G__20240) : f.call(null, G__20239, G__20240);
            }();
            if (x == null) {
              return keepi(idx + 1, cljs.core.rest(s));
            } else {
              return cljs.core.cons(x, keepi(idx + 1, cljs.core.rest(s)));
            }
          }
        } else {
          return null;
        }
      }, null, null);
    };
    return keepi(0, coll);
  };
  keep_indexed = function(f, coll) {
    switch(arguments.length) {
      case 1:
        return keep_indexed__1.call(this, f);
      case 2:
        return keep_indexed__2.call(this, f, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  keep_indexed.cljs$core$IFn$_invoke$arity$1 = keep_indexed__1;
  keep_indexed.cljs$core$IFn$_invoke$arity$2 = keep_indexed__2;
  return keep_indexed;
}();
cljs.core.every_pred = function() {
  var every_pred = null;
  var every_pred__1 = function(p) {
    return function() {
      var ep1 = null;
      var ep1__0 = function() {
        return true;
      };
      var ep1__1 = function(x) {
        return cljs.core.boolean$(function() {
          var G__20459 = x;
          return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__20459) : p.call(null, G__20459);
        }());
      };
      var ep1__2 = function(x, y) {
        return cljs.core.boolean$(function() {
          var and__7492__auto__ = function() {
            var G__20461 = x;
            return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__20461) : p.call(null, G__20461);
          }();
          if (cljs.core.truth_(and__7492__auto__)) {
            var G__20462 = y;
            return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__20462) : p.call(null, G__20462);
          } else {
            return and__7492__auto__;
          }
        }());
      };
      var ep1__3 = function(x, y, z) {
        return cljs.core.boolean$(function() {
          var and__7492__auto__ = function() {
            var G__20464 = x;
            return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__20464) : p.call(null, G__20464);
          }();
          if (cljs.core.truth_(and__7492__auto__)) {
            var and__7492__auto____$1 = function() {
              var G__20466 = y;
              return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__20466) : p.call(null, G__20466);
            }();
            if (cljs.core.truth_(and__7492__auto____$1)) {
              var G__20467 = z;
              return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__20467) : p.call(null, G__20467);
            } else {
              return and__7492__auto____$1;
            }
          } else {
            return and__7492__auto__;
          }
        }());
      };
      var ep1__4 = function() {
        var G__20636__delegate = function(x, y, z, args) {
          return cljs.core.boolean$(ep1.cljs$core$IFn$_invoke$arity$3(x, y, z) && cljs.core.every_QMARK_(p, args));
        };
        var G__20636 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__20637__i = 0, G__20637__a = new Array(arguments.length - 3);
            while (G__20637__i < G__20637__a.length) {
              G__20637__a[G__20637__i] = arguments[G__20637__i + 3];
              ++G__20637__i;
            }
            args = new cljs.core.IndexedSeq(G__20637__a, 0);
          }
          return G__20636__delegate.call(this, x, y, z, args);
        };
        G__20636.cljs$lang$maxFixedArity = 3;
        G__20636.cljs$lang$applyTo = function(arglist__20638) {
          var x = cljs.core.first(arglist__20638);
          arglist__20638 = cljs.core.next(arglist__20638);
          var y = cljs.core.first(arglist__20638);
          arglist__20638 = cljs.core.next(arglist__20638);
          var z = cljs.core.first(arglist__20638);
          var args = cljs.core.rest(arglist__20638);
          return G__20636__delegate(x, y, z, args);
        };
        G__20636.cljs$core$IFn$_invoke$arity$variadic = G__20636__delegate;
        return G__20636;
      }();
      ep1 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return ep1__0.call(this);
          case 1:
            return ep1__1.call(this, x);
          case 2:
            return ep1__2.call(this, x, y);
          case 3:
            return ep1__3.call(this, x, y, z);
          default:
            var G__20639 = null;
            if (arguments.length > 3) {
              var G__20640__i = 0, G__20640__a = new Array(arguments.length - 3);
              while (G__20640__i < G__20640__a.length) {
                G__20640__a[G__20640__i] = arguments[G__20640__i + 3];
                ++G__20640__i;
              }
              G__20639 = new cljs.core.IndexedSeq(G__20640__a, 0);
            }
            return ep1__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__20639);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      ep1.cljs$lang$maxFixedArity = 3;
      ep1.cljs$lang$applyTo = ep1__4.cljs$lang$applyTo;
      ep1.cljs$core$IFn$_invoke$arity$0 = ep1__0;
      ep1.cljs$core$IFn$_invoke$arity$1 = ep1__1;
      ep1.cljs$core$IFn$_invoke$arity$2 = ep1__2;
      ep1.cljs$core$IFn$_invoke$arity$3 = ep1__3;
      ep1.cljs$core$IFn$_invoke$arity$variadic = ep1__4.cljs$core$IFn$_invoke$arity$variadic;
      return ep1;
    }();
  };
  var every_pred__2 = function(p1, p2) {
    return function() {
      var ep2 = null;
      var ep2__0 = function() {
        return true;
      };
      var ep2__1 = function(x) {
        return cljs.core.boolean$(function() {
          var and__7492__auto__ = function() {
            var G__20499 = x;
            return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__20499) : p1.call(null, G__20499);
          }();
          if (cljs.core.truth_(and__7492__auto__)) {
            var G__20500 = x;
            return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__20500) : p2.call(null, G__20500);
          } else {
            return and__7492__auto__;
          }
        }());
      };
      var ep2__2 = function(x, y) {
        return cljs.core.boolean$(function() {
          var and__7492__auto__ = function() {
            var G__20502 = x;
            return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__20502) : p1.call(null, G__20502);
          }();
          if (cljs.core.truth_(and__7492__auto__)) {
            var and__7492__auto____$1 = function() {
              var G__20504 = y;
              return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__20504) : p1.call(null, G__20504);
            }();
            if (cljs.core.truth_(and__7492__auto____$1)) {
              var and__7492__auto____$2 = function() {
                var G__20506 = x;
                return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__20506) : p2.call(null, G__20506);
              }();
              if (cljs.core.truth_(and__7492__auto____$2)) {
                var G__20507 = y;
                return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__20507) : p2.call(null, G__20507);
              } else {
                return and__7492__auto____$2;
              }
            } else {
              return and__7492__auto____$1;
            }
          } else {
            return and__7492__auto__;
          }
        }());
      };
      var ep2__3 = function(x, y, z) {
        return cljs.core.boolean$(function() {
          var and__7492__auto__ = function() {
            var G__20509 = x;
            return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__20509) : p1.call(null, G__20509);
          }();
          if (cljs.core.truth_(and__7492__auto__)) {
            var and__7492__auto____$1 = function() {
              var G__20511 = y;
              return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__20511) : p1.call(null, G__20511);
            }();
            if (cljs.core.truth_(and__7492__auto____$1)) {
              var and__7492__auto____$2 = function() {
                var G__20513 = z;
                return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__20513) : p1.call(null, G__20513);
              }();
              if (cljs.core.truth_(and__7492__auto____$2)) {
                var and__7492__auto____$3 = function() {
                  var G__20515 = x;
                  return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__20515) : p2.call(null, G__20515);
                }();
                if (cljs.core.truth_(and__7492__auto____$3)) {
                  var and__7492__auto____$4 = function() {
                    var G__20517 = y;
                    return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__20517) : p2.call(null, G__20517);
                  }();
                  if (cljs.core.truth_(and__7492__auto____$4)) {
                    var G__20518 = z;
                    return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__20518) : p2.call(null, G__20518);
                  } else {
                    return and__7492__auto____$4;
                  }
                } else {
                  return and__7492__auto____$3;
                }
              } else {
                return and__7492__auto____$2;
              }
            } else {
              return and__7492__auto____$1;
            }
          } else {
            return and__7492__auto__;
          }
        }());
      };
      var ep2__4 = function() {
        var G__20641__delegate = function(x, y, z, args) {
          return cljs.core.boolean$(ep2.cljs$core$IFn$_invoke$arity$3(x, y, z) && cljs.core.every_QMARK_(function(p1__20246_SHARP_) {
            var and__7492__auto__ = function() {
              var G__20523 = p1__20246_SHARP_;
              return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__20523) : p1.call(null, G__20523);
            }();
            if (cljs.core.truth_(and__7492__auto__)) {
              var G__20524 = p1__20246_SHARP_;
              return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__20524) : p2.call(null, G__20524);
            } else {
              return and__7492__auto__;
            }
          }, args));
        };
        var G__20641 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__20642__i = 0, G__20642__a = new Array(arguments.length - 3);
            while (G__20642__i < G__20642__a.length) {
              G__20642__a[G__20642__i] = arguments[G__20642__i + 3];
              ++G__20642__i;
            }
            args = new cljs.core.IndexedSeq(G__20642__a, 0);
          }
          return G__20641__delegate.call(this, x, y, z, args);
        };
        G__20641.cljs$lang$maxFixedArity = 3;
        G__20641.cljs$lang$applyTo = function(arglist__20643) {
          var x = cljs.core.first(arglist__20643);
          arglist__20643 = cljs.core.next(arglist__20643);
          var y = cljs.core.first(arglist__20643);
          arglist__20643 = cljs.core.next(arglist__20643);
          var z = cljs.core.first(arglist__20643);
          var args = cljs.core.rest(arglist__20643);
          return G__20641__delegate(x, y, z, args);
        };
        G__20641.cljs$core$IFn$_invoke$arity$variadic = G__20641__delegate;
        return G__20641;
      }();
      ep2 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return ep2__0.call(this);
          case 1:
            return ep2__1.call(this, x);
          case 2:
            return ep2__2.call(this, x, y);
          case 3:
            return ep2__3.call(this, x, y, z);
          default:
            var G__20644 = null;
            if (arguments.length > 3) {
              var G__20645__i = 0, G__20645__a = new Array(arguments.length - 3);
              while (G__20645__i < G__20645__a.length) {
                G__20645__a[G__20645__i] = arguments[G__20645__i + 3];
                ++G__20645__i;
              }
              G__20644 = new cljs.core.IndexedSeq(G__20645__a, 0);
            }
            return ep2__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__20644);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      ep2.cljs$lang$maxFixedArity = 3;
      ep2.cljs$lang$applyTo = ep2__4.cljs$lang$applyTo;
      ep2.cljs$core$IFn$_invoke$arity$0 = ep2__0;
      ep2.cljs$core$IFn$_invoke$arity$1 = ep2__1;
      ep2.cljs$core$IFn$_invoke$arity$2 = ep2__2;
      ep2.cljs$core$IFn$_invoke$arity$3 = ep2__3;
      ep2.cljs$core$IFn$_invoke$arity$variadic = ep2__4.cljs$core$IFn$_invoke$arity$variadic;
      return ep2;
    }();
  };
  var every_pred__3 = function(p1, p2, p3) {
    return function() {
      var ep3 = null;
      var ep3__0 = function() {
        return true;
      };
      var ep3__1 = function(x) {
        return cljs.core.boolean$(function() {
          var and__7492__auto__ = function() {
            var G__20570 = x;
            return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__20570) : p1.call(null, G__20570);
          }();
          if (cljs.core.truth_(and__7492__auto__)) {
            var and__7492__auto____$1 = function() {
              var G__20572 = x;
              return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__20572) : p2.call(null, G__20572);
            }();
            if (cljs.core.truth_(and__7492__auto____$1)) {
              var G__20573 = x;
              return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__20573) : p3.call(null, G__20573);
            } else {
              return and__7492__auto____$1;
            }
          } else {
            return and__7492__auto__;
          }
        }());
      };
      var ep3__2 = function(x, y) {
        return cljs.core.boolean$(function() {
          var and__7492__auto__ = function() {
            var G__20575 = x;
            return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__20575) : p1.call(null, G__20575);
          }();
          if (cljs.core.truth_(and__7492__auto__)) {
            var and__7492__auto____$1 = function() {
              var G__20577 = x;
              return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__20577) : p2.call(null, G__20577);
            }();
            if (cljs.core.truth_(and__7492__auto____$1)) {
              var and__7492__auto____$2 = function() {
                var G__20579 = x;
                return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__20579) : p3.call(null, G__20579);
              }();
              if (cljs.core.truth_(and__7492__auto____$2)) {
                var and__7492__auto____$3 = function() {
                  var G__20581 = y;
                  return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__20581) : p1.call(null, G__20581);
                }();
                if (cljs.core.truth_(and__7492__auto____$3)) {
                  var and__7492__auto____$4 = function() {
                    var G__20583 = y;
                    return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__20583) : p2.call(null, G__20583);
                  }();
                  if (cljs.core.truth_(and__7492__auto____$4)) {
                    var G__20584 = y;
                    return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__20584) : p3.call(null, G__20584);
                  } else {
                    return and__7492__auto____$4;
                  }
                } else {
                  return and__7492__auto____$3;
                }
              } else {
                return and__7492__auto____$2;
              }
            } else {
              return and__7492__auto____$1;
            }
          } else {
            return and__7492__auto__;
          }
        }());
      };
      var ep3__3 = function(x, y, z) {
        return cljs.core.boolean$(function() {
          var and__7492__auto__ = function() {
            var G__20586 = x;
            return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__20586) : p1.call(null, G__20586);
          }();
          if (cljs.core.truth_(and__7492__auto__)) {
            var and__7492__auto____$1 = function() {
              var G__20588 = x;
              return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__20588) : p2.call(null, G__20588);
            }();
            if (cljs.core.truth_(and__7492__auto____$1)) {
              var and__7492__auto____$2 = function() {
                var G__20590 = x;
                return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__20590) : p3.call(null, G__20590);
              }();
              if (cljs.core.truth_(and__7492__auto____$2)) {
                var and__7492__auto____$3 = function() {
                  var G__20592 = y;
                  return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__20592) : p1.call(null, G__20592);
                }();
                if (cljs.core.truth_(and__7492__auto____$3)) {
                  var and__7492__auto____$4 = function() {
                    var G__20594 = y;
                    return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__20594) : p2.call(null, G__20594);
                  }();
                  if (cljs.core.truth_(and__7492__auto____$4)) {
                    var and__7492__auto____$5 = function() {
                      var G__20596 = y;
                      return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__20596) : p3.call(null, G__20596);
                    }();
                    if (cljs.core.truth_(and__7492__auto____$5)) {
                      var and__7492__auto____$6 = function() {
                        var G__20598 = z;
                        return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__20598) : p1.call(null, G__20598);
                      }();
                      if (cljs.core.truth_(and__7492__auto____$6)) {
                        var and__7492__auto____$7 = function() {
                          var G__20600 = z;
                          return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__20600) : p2.call(null, G__20600);
                        }();
                        if (cljs.core.truth_(and__7492__auto____$7)) {
                          var G__20601 = z;
                          return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__20601) : p3.call(null, G__20601);
                        } else {
                          return and__7492__auto____$7;
                        }
                      } else {
                        return and__7492__auto____$6;
                      }
                    } else {
                      return and__7492__auto____$5;
                    }
                  } else {
                    return and__7492__auto____$4;
                  }
                } else {
                  return and__7492__auto____$3;
                }
              } else {
                return and__7492__auto____$2;
              }
            } else {
              return and__7492__auto____$1;
            }
          } else {
            return and__7492__auto__;
          }
        }());
      };
      var ep3__4 = function() {
        var G__20646__delegate = function(x, y, z, args) {
          return cljs.core.boolean$(ep3.cljs$core$IFn$_invoke$arity$3(x, y, z) && cljs.core.every_QMARK_(function(p1__20247_SHARP_) {
            var and__7492__auto__ = function() {
              var G__20608 = p1__20247_SHARP_;
              return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__20608) : p1.call(null, G__20608);
            }();
            if (cljs.core.truth_(and__7492__auto__)) {
              var and__7492__auto____$1 = function() {
                var G__20610 = p1__20247_SHARP_;
                return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__20610) : p2.call(null, G__20610);
              }();
              if (cljs.core.truth_(and__7492__auto____$1)) {
                var G__20611 = p1__20247_SHARP_;
                return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__20611) : p3.call(null, G__20611);
              } else {
                return and__7492__auto____$1;
              }
            } else {
              return and__7492__auto__;
            }
          }, args));
        };
        var G__20646 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__20647__i = 0, G__20647__a = new Array(arguments.length - 3);
            while (G__20647__i < G__20647__a.length) {
              G__20647__a[G__20647__i] = arguments[G__20647__i + 3];
              ++G__20647__i;
            }
            args = new cljs.core.IndexedSeq(G__20647__a, 0);
          }
          return G__20646__delegate.call(this, x, y, z, args);
        };
        G__20646.cljs$lang$maxFixedArity = 3;
        G__20646.cljs$lang$applyTo = function(arglist__20648) {
          var x = cljs.core.first(arglist__20648);
          arglist__20648 = cljs.core.next(arglist__20648);
          var y = cljs.core.first(arglist__20648);
          arglist__20648 = cljs.core.next(arglist__20648);
          var z = cljs.core.first(arglist__20648);
          var args = cljs.core.rest(arglist__20648);
          return G__20646__delegate(x, y, z, args);
        };
        G__20646.cljs$core$IFn$_invoke$arity$variadic = G__20646__delegate;
        return G__20646;
      }();
      ep3 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return ep3__0.call(this);
          case 1:
            return ep3__1.call(this, x);
          case 2:
            return ep3__2.call(this, x, y);
          case 3:
            return ep3__3.call(this, x, y, z);
          default:
            var G__20649 = null;
            if (arguments.length > 3) {
              var G__20650__i = 0, G__20650__a = new Array(arguments.length - 3);
              while (G__20650__i < G__20650__a.length) {
                G__20650__a[G__20650__i] = arguments[G__20650__i + 3];
                ++G__20650__i;
              }
              G__20649 = new cljs.core.IndexedSeq(G__20650__a, 0);
            }
            return ep3__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__20649);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      ep3.cljs$lang$maxFixedArity = 3;
      ep3.cljs$lang$applyTo = ep3__4.cljs$lang$applyTo;
      ep3.cljs$core$IFn$_invoke$arity$0 = ep3__0;
      ep3.cljs$core$IFn$_invoke$arity$1 = ep3__1;
      ep3.cljs$core$IFn$_invoke$arity$2 = ep3__2;
      ep3.cljs$core$IFn$_invoke$arity$3 = ep3__3;
      ep3.cljs$core$IFn$_invoke$arity$variadic = ep3__4.cljs$core$IFn$_invoke$arity$variadic;
      return ep3;
    }();
  };
  var every_pred__4 = function() {
    var G__20651__delegate = function(p1, p2, p3, ps) {
      var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1, p2, p3, ps);
      return function(ps__$1) {
        return function() {
          var epn = null;
          var epn__0 = function() {
            return true;
          };
          var epn__1 = function(x) {
            return cljs.core.every_QMARK_(function(ps__$1) {
              return function(p1__20248_SHARP_) {
                var G__20627 = x;
                return p1__20248_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__20248_SHARP_.cljs$core$IFn$_invoke$arity$1(G__20627) : p1__20248_SHARP_.call(null, G__20627);
              };
            }(ps__$1), ps__$1);
          };
          var epn__2 = function(x, y) {
            return cljs.core.every_QMARK_(function(ps__$1) {
              return function(p1__20249_SHARP_) {
                var and__7492__auto__ = function() {
                  var G__20629 = x;
                  return p1__20249_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__20249_SHARP_.cljs$core$IFn$_invoke$arity$1(G__20629) : p1__20249_SHARP_.call(null, G__20629);
                }();
                if (cljs.core.truth_(and__7492__auto__)) {
                  var G__20630 = y;
                  return p1__20249_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__20249_SHARP_.cljs$core$IFn$_invoke$arity$1(G__20630) : p1__20249_SHARP_.call(null, G__20630);
                } else {
                  return and__7492__auto__;
                }
              };
            }(ps__$1), ps__$1);
          };
          var epn__3 = function(x, y, z) {
            return cljs.core.every_QMARK_(function(ps__$1) {
              return function(p1__20250_SHARP_) {
                var and__7492__auto__ = function() {
                  var G__20632 = x;
                  return p1__20250_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__20250_SHARP_.cljs$core$IFn$_invoke$arity$1(G__20632) : p1__20250_SHARP_.call(null, G__20632);
                }();
                if (cljs.core.truth_(and__7492__auto__)) {
                  var and__7492__auto____$1 = function() {
                    var G__20634 = y;
                    return p1__20250_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__20250_SHARP_.cljs$core$IFn$_invoke$arity$1(G__20634) : p1__20250_SHARP_.call(null, G__20634);
                  }();
                  if (cljs.core.truth_(and__7492__auto____$1)) {
                    var G__20635 = z;
                    return p1__20250_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__20250_SHARP_.cljs$core$IFn$_invoke$arity$1(G__20635) : p1__20250_SHARP_.call(null, G__20635);
                  } else {
                    return and__7492__auto____$1;
                  }
                } else {
                  return and__7492__auto__;
                }
              };
            }(ps__$1), ps__$1);
          };
          var epn__4 = function() {
            var G__20652__delegate = function(x, y, z, args) {
              return cljs.core.boolean$(epn.cljs$core$IFn$_invoke$arity$3(x, y, z) && cljs.core.every_QMARK_(function(ps__$1) {
                return function(p1__20251_SHARP_) {
                  return cljs.core.every_QMARK_(p1__20251_SHARP_, args);
                };
              }(ps__$1), ps__$1));
            };
            var G__20652 = function(x, y, z, var_args) {
              var args = null;
              if (arguments.length > 3) {
                var G__20653__i = 0, G__20653__a = new Array(arguments.length - 3);
                while (G__20653__i < G__20653__a.length) {
                  G__20653__a[G__20653__i] = arguments[G__20653__i + 3];
                  ++G__20653__i;
                }
                args = new cljs.core.IndexedSeq(G__20653__a, 0);
              }
              return G__20652__delegate.call(this, x, y, z, args);
            };
            G__20652.cljs$lang$maxFixedArity = 3;
            G__20652.cljs$lang$applyTo = function(arglist__20654) {
              var x = cljs.core.first(arglist__20654);
              arglist__20654 = cljs.core.next(arglist__20654);
              var y = cljs.core.first(arglist__20654);
              arglist__20654 = cljs.core.next(arglist__20654);
              var z = cljs.core.first(arglist__20654);
              var args = cljs.core.rest(arglist__20654);
              return G__20652__delegate(x, y, z, args);
            };
            G__20652.cljs$core$IFn$_invoke$arity$variadic = G__20652__delegate;
            return G__20652;
          }();
          epn = function(x, y, z, var_args) {
            var args = var_args;
            switch(arguments.length) {
              case 0:
                return epn__0.call(this);
              case 1:
                return epn__1.call(this, x);
              case 2:
                return epn__2.call(this, x, y);
              case 3:
                return epn__3.call(this, x, y, z);
              default:
                var G__20655 = null;
                if (arguments.length > 3) {
                  var G__20656__i = 0, G__20656__a = new Array(arguments.length - 3);
                  while (G__20656__i < G__20656__a.length) {
                    G__20656__a[G__20656__i] = arguments[G__20656__i + 3];
                    ++G__20656__i;
                  }
                  G__20655 = new cljs.core.IndexedSeq(G__20656__a, 0);
                }
                return epn__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__20655);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          epn.cljs$lang$maxFixedArity = 3;
          epn.cljs$lang$applyTo = epn__4.cljs$lang$applyTo;
          epn.cljs$core$IFn$_invoke$arity$0 = epn__0;
          epn.cljs$core$IFn$_invoke$arity$1 = epn__1;
          epn.cljs$core$IFn$_invoke$arity$2 = epn__2;
          epn.cljs$core$IFn$_invoke$arity$3 = epn__3;
          epn.cljs$core$IFn$_invoke$arity$variadic = epn__4.cljs$core$IFn$_invoke$arity$variadic;
          return epn;
        }();
      }(ps__$1);
    };
    var G__20651 = function(p1, p2, p3, var_args) {
      var ps = null;
      if (arguments.length > 3) {
        var G__20657__i = 0, G__20657__a = new Array(arguments.length - 3);
        while (G__20657__i < G__20657__a.length) {
          G__20657__a[G__20657__i] = arguments[G__20657__i + 3];
          ++G__20657__i;
        }
        ps = new cljs.core.IndexedSeq(G__20657__a, 0);
      }
      return G__20651__delegate.call(this, p1, p2, p3, ps);
    };
    G__20651.cljs$lang$maxFixedArity = 3;
    G__20651.cljs$lang$applyTo = function(arglist__20658) {
      var p1 = cljs.core.first(arglist__20658);
      arglist__20658 = cljs.core.next(arglist__20658);
      var p2 = cljs.core.first(arglist__20658);
      arglist__20658 = cljs.core.next(arglist__20658);
      var p3 = cljs.core.first(arglist__20658);
      var ps = cljs.core.rest(arglist__20658);
      return G__20651__delegate(p1, p2, p3, ps);
    };
    G__20651.cljs$core$IFn$_invoke$arity$variadic = G__20651__delegate;
    return G__20651;
  }();
  every_pred = function(p1, p2, p3, var_args) {
    var ps = var_args;
    switch(arguments.length) {
      case 1:
        return every_pred__1.call(this, p1);
      case 2:
        return every_pred__2.call(this, p1, p2);
      case 3:
        return every_pred__3.call(this, p1, p2, p3);
      default:
        var G__20659 = null;
        if (arguments.length > 3) {
          var G__20660__i = 0, G__20660__a = new Array(arguments.length - 3);
          while (G__20660__i < G__20660__a.length) {
            G__20660__a[G__20660__i] = arguments[G__20660__i + 3];
            ++G__20660__i;
          }
          G__20659 = new cljs.core.IndexedSeq(G__20660__a, 0);
        }
        return every_pred__4.cljs$core$IFn$_invoke$arity$variadic(p1, p2, p3, G__20659);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  every_pred.cljs$lang$maxFixedArity = 3;
  every_pred.cljs$lang$applyTo = every_pred__4.cljs$lang$applyTo;
  every_pred.cljs$core$IFn$_invoke$arity$1 = every_pred__1;
  every_pred.cljs$core$IFn$_invoke$arity$2 = every_pred__2;
  every_pred.cljs$core$IFn$_invoke$arity$3 = every_pred__3;
  every_pred.cljs$core$IFn$_invoke$arity$variadic = every_pred__4.cljs$core$IFn$_invoke$arity$variadic;
  return every_pred;
}();
cljs.core.some_fn = function() {
  var some_fn = null;
  var some_fn__1 = function(p) {
    return function() {
      var sp1 = null;
      var sp1__0 = function() {
        return null;
      };
      var sp1__1 = function(x) {
        var G__20866 = x;
        return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__20866) : p.call(null, G__20866);
      };
      var sp1__2 = function(x, y) {
        var or__7504__auto__ = function() {
          var G__20868 = x;
          return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__20868) : p.call(null, G__20868);
        }();
        if (cljs.core.truth_(or__7504__auto__)) {
          return or__7504__auto__;
        } else {
          var G__20869 = y;
          return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__20869) : p.call(null, G__20869);
        }
      };
      var sp1__3 = function(x, y, z) {
        var or__7504__auto__ = function() {
          var G__20871 = x;
          return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__20871) : p.call(null, G__20871);
        }();
        if (cljs.core.truth_(or__7504__auto__)) {
          return or__7504__auto__;
        } else {
          var or__7504__auto____$1 = function() {
            var G__20873 = y;
            return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__20873) : p.call(null, G__20873);
          }();
          if (cljs.core.truth_(or__7504__auto____$1)) {
            return or__7504__auto____$1;
          } else {
            var G__20874 = z;
            return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__20874) : p.call(null, G__20874);
          }
        }
      };
      var sp1__4 = function() {
        var G__21035__delegate = function(x, y, z, args) {
          var or__7504__auto__ = sp1.cljs$core$IFn$_invoke$arity$3(x, y, z);
          if (cljs.core.truth_(or__7504__auto__)) {
            return or__7504__auto__;
          } else {
            return cljs.core.some(p, args);
          }
        };
        var G__21035 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__21036__i = 0, G__21036__a = new Array(arguments.length - 3);
            while (G__21036__i < G__21036__a.length) {
              G__21036__a[G__21036__i] = arguments[G__21036__i + 3];
              ++G__21036__i;
            }
            args = new cljs.core.IndexedSeq(G__21036__a, 0);
          }
          return G__21035__delegate.call(this, x, y, z, args);
        };
        G__21035.cljs$lang$maxFixedArity = 3;
        G__21035.cljs$lang$applyTo = function(arglist__21037) {
          var x = cljs.core.first(arglist__21037);
          arglist__21037 = cljs.core.next(arglist__21037);
          var y = cljs.core.first(arglist__21037);
          arglist__21037 = cljs.core.next(arglist__21037);
          var z = cljs.core.first(arglist__21037);
          var args = cljs.core.rest(arglist__21037);
          return G__21035__delegate(x, y, z, args);
        };
        G__21035.cljs$core$IFn$_invoke$arity$variadic = G__21035__delegate;
        return G__21035;
      }();
      sp1 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return sp1__0.call(this);
          case 1:
            return sp1__1.call(this, x);
          case 2:
            return sp1__2.call(this, x, y);
          case 3:
            return sp1__3.call(this, x, y, z);
          default:
            var G__21038 = null;
            if (arguments.length > 3) {
              var G__21039__i = 0, G__21039__a = new Array(arguments.length - 3);
              while (G__21039__i < G__21039__a.length) {
                G__21039__a[G__21039__i] = arguments[G__21039__i + 3];
                ++G__21039__i;
              }
              G__21038 = new cljs.core.IndexedSeq(G__21039__a, 0);
            }
            return sp1__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__21038);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      sp1.cljs$lang$maxFixedArity = 3;
      sp1.cljs$lang$applyTo = sp1__4.cljs$lang$applyTo;
      sp1.cljs$core$IFn$_invoke$arity$0 = sp1__0;
      sp1.cljs$core$IFn$_invoke$arity$1 = sp1__1;
      sp1.cljs$core$IFn$_invoke$arity$2 = sp1__2;
      sp1.cljs$core$IFn$_invoke$arity$3 = sp1__3;
      sp1.cljs$core$IFn$_invoke$arity$variadic = sp1__4.cljs$core$IFn$_invoke$arity$variadic;
      return sp1;
    }();
  };
  var some_fn__2 = function(p1, p2) {
    return function() {
      var sp2 = null;
      var sp2__0 = function() {
        return null;
      };
      var sp2__1 = function(x) {
        var or__7504__auto__ = function() {
          var G__20906 = x;
          return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__20906) : p1.call(null, G__20906);
        }();
        if (cljs.core.truth_(or__7504__auto__)) {
          return or__7504__auto__;
        } else {
          var G__20907 = x;
          return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__20907) : p2.call(null, G__20907);
        }
      };
      var sp2__2 = function(x, y) {
        var or__7504__auto__ = function() {
          var G__20909 = x;
          return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__20909) : p1.call(null, G__20909);
        }();
        if (cljs.core.truth_(or__7504__auto__)) {
          return or__7504__auto__;
        } else {
          var or__7504__auto____$1 = function() {
            var G__20911 = y;
            return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__20911) : p1.call(null, G__20911);
          }();
          if (cljs.core.truth_(or__7504__auto____$1)) {
            return or__7504__auto____$1;
          } else {
            var or__7504__auto____$2 = function() {
              var G__20913 = x;
              return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__20913) : p2.call(null, G__20913);
            }();
            if (cljs.core.truth_(or__7504__auto____$2)) {
              return or__7504__auto____$2;
            } else {
              var G__20914 = y;
              return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__20914) : p2.call(null, G__20914);
            }
          }
        }
      };
      var sp2__3 = function(x, y, z) {
        var or__7504__auto__ = function() {
          var G__20916 = x;
          return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__20916) : p1.call(null, G__20916);
        }();
        if (cljs.core.truth_(or__7504__auto__)) {
          return or__7504__auto__;
        } else {
          var or__7504__auto____$1 = function() {
            var G__20918 = y;
            return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__20918) : p1.call(null, G__20918);
          }();
          if (cljs.core.truth_(or__7504__auto____$1)) {
            return or__7504__auto____$1;
          } else {
            var or__7504__auto____$2 = function() {
              var G__20920 = z;
              return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__20920) : p1.call(null, G__20920);
            }();
            if (cljs.core.truth_(or__7504__auto____$2)) {
              return or__7504__auto____$2;
            } else {
              var or__7504__auto____$3 = function() {
                var G__20922 = x;
                return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__20922) : p2.call(null, G__20922);
              }();
              if (cljs.core.truth_(or__7504__auto____$3)) {
                return or__7504__auto____$3;
              } else {
                var or__7504__auto____$4 = function() {
                  var G__20924 = y;
                  return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__20924) : p2.call(null, G__20924);
                }();
                if (cljs.core.truth_(or__7504__auto____$4)) {
                  return or__7504__auto____$4;
                } else {
                  var G__20925 = z;
                  return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__20925) : p2.call(null, G__20925);
                }
              }
            }
          }
        }
      };
      var sp2__4 = function() {
        var G__21040__delegate = function(x, y, z, args) {
          var or__7504__auto__ = sp2.cljs$core$IFn$_invoke$arity$3(x, y, z);
          if (cljs.core.truth_(or__7504__auto__)) {
            return or__7504__auto__;
          } else {
            return cljs.core.some(function(or__7504__auto__) {
              return function(p1__20661_SHARP_) {
                var or__7504__auto____$1 = function() {
                  var G__20927 = p1__20661_SHARP_;
                  return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__20927) : p1.call(null, G__20927);
                }();
                if (cljs.core.truth_(or__7504__auto____$1)) {
                  return or__7504__auto____$1;
                } else {
                  var G__20928 = p1__20661_SHARP_;
                  return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__20928) : p2.call(null, G__20928);
                }
              };
            }(or__7504__auto__), args);
          }
        };
        var G__21040 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__21041__i = 0, G__21041__a = new Array(arguments.length - 3);
            while (G__21041__i < G__21041__a.length) {
              G__21041__a[G__21041__i] = arguments[G__21041__i + 3];
              ++G__21041__i;
            }
            args = new cljs.core.IndexedSeq(G__21041__a, 0);
          }
          return G__21040__delegate.call(this, x, y, z, args);
        };
        G__21040.cljs$lang$maxFixedArity = 3;
        G__21040.cljs$lang$applyTo = function(arglist__21042) {
          var x = cljs.core.first(arglist__21042);
          arglist__21042 = cljs.core.next(arglist__21042);
          var y = cljs.core.first(arglist__21042);
          arglist__21042 = cljs.core.next(arglist__21042);
          var z = cljs.core.first(arglist__21042);
          var args = cljs.core.rest(arglist__21042);
          return G__21040__delegate(x, y, z, args);
        };
        G__21040.cljs$core$IFn$_invoke$arity$variadic = G__21040__delegate;
        return G__21040;
      }();
      sp2 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return sp2__0.call(this);
          case 1:
            return sp2__1.call(this, x);
          case 2:
            return sp2__2.call(this, x, y);
          case 3:
            return sp2__3.call(this, x, y, z);
          default:
            var G__21043 = null;
            if (arguments.length > 3) {
              var G__21044__i = 0, G__21044__a = new Array(arguments.length - 3);
              while (G__21044__i < G__21044__a.length) {
                G__21044__a[G__21044__i] = arguments[G__21044__i + 3];
                ++G__21044__i;
              }
              G__21043 = new cljs.core.IndexedSeq(G__21044__a, 0);
            }
            return sp2__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__21043);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      sp2.cljs$lang$maxFixedArity = 3;
      sp2.cljs$lang$applyTo = sp2__4.cljs$lang$applyTo;
      sp2.cljs$core$IFn$_invoke$arity$0 = sp2__0;
      sp2.cljs$core$IFn$_invoke$arity$1 = sp2__1;
      sp2.cljs$core$IFn$_invoke$arity$2 = sp2__2;
      sp2.cljs$core$IFn$_invoke$arity$3 = sp2__3;
      sp2.cljs$core$IFn$_invoke$arity$variadic = sp2__4.cljs$core$IFn$_invoke$arity$variadic;
      return sp2;
    }();
  };
  var some_fn__3 = function(p1, p2, p3) {
    return function() {
      var sp3 = null;
      var sp3__0 = function() {
        return null;
      };
      var sp3__1 = function(x) {
        var or__7504__auto__ = function() {
          var G__20974 = x;
          return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__20974) : p1.call(null, G__20974);
        }();
        if (cljs.core.truth_(or__7504__auto__)) {
          return or__7504__auto__;
        } else {
          var or__7504__auto____$1 = function() {
            var G__20976 = x;
            return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__20976) : p2.call(null, G__20976);
          }();
          if (cljs.core.truth_(or__7504__auto____$1)) {
            return or__7504__auto____$1;
          } else {
            var G__20977 = x;
            return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__20977) : p3.call(null, G__20977);
          }
        }
      };
      var sp3__2 = function(x, y) {
        var or__7504__auto__ = function() {
          var G__20979 = x;
          return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__20979) : p1.call(null, G__20979);
        }();
        if (cljs.core.truth_(or__7504__auto__)) {
          return or__7504__auto__;
        } else {
          var or__7504__auto____$1 = function() {
            var G__20981 = x;
            return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__20981) : p2.call(null, G__20981);
          }();
          if (cljs.core.truth_(or__7504__auto____$1)) {
            return or__7504__auto____$1;
          } else {
            var or__7504__auto____$2 = function() {
              var G__20983 = x;
              return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__20983) : p3.call(null, G__20983);
            }();
            if (cljs.core.truth_(or__7504__auto____$2)) {
              return or__7504__auto____$2;
            } else {
              var or__7504__auto____$3 = function() {
                var G__20985 = y;
                return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__20985) : p1.call(null, G__20985);
              }();
              if (cljs.core.truth_(or__7504__auto____$3)) {
                return or__7504__auto____$3;
              } else {
                var or__7504__auto____$4 = function() {
                  var G__20987 = y;
                  return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__20987) : p2.call(null, G__20987);
                }();
                if (cljs.core.truth_(or__7504__auto____$4)) {
                  return or__7504__auto____$4;
                } else {
                  var G__20988 = y;
                  return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__20988) : p3.call(null, G__20988);
                }
              }
            }
          }
        }
      };
      var sp3__3 = function(x, y, z) {
        var or__7504__auto__ = function() {
          var G__20990 = x;
          return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__20990) : p1.call(null, G__20990);
        }();
        if (cljs.core.truth_(or__7504__auto__)) {
          return or__7504__auto__;
        } else {
          var or__7504__auto____$1 = function() {
            var G__20992 = x;
            return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__20992) : p2.call(null, G__20992);
          }();
          if (cljs.core.truth_(or__7504__auto____$1)) {
            return or__7504__auto____$1;
          } else {
            var or__7504__auto____$2 = function() {
              var G__20994 = x;
              return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__20994) : p3.call(null, G__20994);
            }();
            if (cljs.core.truth_(or__7504__auto____$2)) {
              return or__7504__auto____$2;
            } else {
              var or__7504__auto____$3 = function() {
                var G__20996 = y;
                return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__20996) : p1.call(null, G__20996);
              }();
              if (cljs.core.truth_(or__7504__auto____$3)) {
                return or__7504__auto____$3;
              } else {
                var or__7504__auto____$4 = function() {
                  var G__20998 = y;
                  return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__20998) : p2.call(null, G__20998);
                }();
                if (cljs.core.truth_(or__7504__auto____$4)) {
                  return or__7504__auto____$4;
                } else {
                  var or__7504__auto____$5 = function() {
                    var G__21000 = y;
                    return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__21000) : p3.call(null, G__21000);
                  }();
                  if (cljs.core.truth_(or__7504__auto____$5)) {
                    return or__7504__auto____$5;
                  } else {
                    var or__7504__auto____$6 = function() {
                      var G__21002 = z;
                      return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__21002) : p1.call(null, G__21002);
                    }();
                    if (cljs.core.truth_(or__7504__auto____$6)) {
                      return or__7504__auto____$6;
                    } else {
                      var or__7504__auto____$7 = function() {
                        var G__21004 = z;
                        return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__21004) : p2.call(null, G__21004);
                      }();
                      if (cljs.core.truth_(or__7504__auto____$7)) {
                        return or__7504__auto____$7;
                      } else {
                        var G__21005 = z;
                        return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__21005) : p3.call(null, G__21005);
                      }
                    }
                  }
                }
              }
            }
          }
        }
      };
      var sp3__4 = function() {
        var G__21045__delegate = function(x, y, z, args) {
          var or__7504__auto__ = sp3.cljs$core$IFn$_invoke$arity$3(x, y, z);
          if (cljs.core.truth_(or__7504__auto__)) {
            return or__7504__auto__;
          } else {
            return cljs.core.some(function(or__7504__auto__) {
              return function(p1__20662_SHARP_) {
                var or__7504__auto____$1 = function() {
                  var G__21007 = p1__20662_SHARP_;
                  return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__21007) : p1.call(null, G__21007);
                }();
                if (cljs.core.truth_(or__7504__auto____$1)) {
                  return or__7504__auto____$1;
                } else {
                  var or__7504__auto____$2 = function() {
                    var G__21009 = p1__20662_SHARP_;
                    return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__21009) : p2.call(null, G__21009);
                  }();
                  if (cljs.core.truth_(or__7504__auto____$2)) {
                    return or__7504__auto____$2;
                  } else {
                    var G__21010 = p1__20662_SHARP_;
                    return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__21010) : p3.call(null, G__21010);
                  }
                }
              };
            }(or__7504__auto__), args);
          }
        };
        var G__21045 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__21046__i = 0, G__21046__a = new Array(arguments.length - 3);
            while (G__21046__i < G__21046__a.length) {
              G__21046__a[G__21046__i] = arguments[G__21046__i + 3];
              ++G__21046__i;
            }
            args = new cljs.core.IndexedSeq(G__21046__a, 0);
          }
          return G__21045__delegate.call(this, x, y, z, args);
        };
        G__21045.cljs$lang$maxFixedArity = 3;
        G__21045.cljs$lang$applyTo = function(arglist__21047) {
          var x = cljs.core.first(arglist__21047);
          arglist__21047 = cljs.core.next(arglist__21047);
          var y = cljs.core.first(arglist__21047);
          arglist__21047 = cljs.core.next(arglist__21047);
          var z = cljs.core.first(arglist__21047);
          var args = cljs.core.rest(arglist__21047);
          return G__21045__delegate(x, y, z, args);
        };
        G__21045.cljs$core$IFn$_invoke$arity$variadic = G__21045__delegate;
        return G__21045;
      }();
      sp3 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return sp3__0.call(this);
          case 1:
            return sp3__1.call(this, x);
          case 2:
            return sp3__2.call(this, x, y);
          case 3:
            return sp3__3.call(this, x, y, z);
          default:
            var G__21048 = null;
            if (arguments.length > 3) {
              var G__21049__i = 0, G__21049__a = new Array(arguments.length - 3);
              while (G__21049__i < G__21049__a.length) {
                G__21049__a[G__21049__i] = arguments[G__21049__i + 3];
                ++G__21049__i;
              }
              G__21048 = new cljs.core.IndexedSeq(G__21049__a, 0);
            }
            return sp3__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__21048);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      sp3.cljs$lang$maxFixedArity = 3;
      sp3.cljs$lang$applyTo = sp3__4.cljs$lang$applyTo;
      sp3.cljs$core$IFn$_invoke$arity$0 = sp3__0;
      sp3.cljs$core$IFn$_invoke$arity$1 = sp3__1;
      sp3.cljs$core$IFn$_invoke$arity$2 = sp3__2;
      sp3.cljs$core$IFn$_invoke$arity$3 = sp3__3;
      sp3.cljs$core$IFn$_invoke$arity$variadic = sp3__4.cljs$core$IFn$_invoke$arity$variadic;
      return sp3;
    }();
  };
  var some_fn__4 = function() {
    var G__21050__delegate = function(p1, p2, p3, ps) {
      var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1, p2, p3, ps);
      return function(ps__$1) {
        return function() {
          var spn = null;
          var spn__0 = function() {
            return null;
          };
          var spn__1 = function(x) {
            return cljs.core.some(function(ps__$1) {
              return function(p1__20663_SHARP_) {
                var G__21026 = x;
                return p1__20663_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__20663_SHARP_.cljs$core$IFn$_invoke$arity$1(G__21026) : p1__20663_SHARP_.call(null, G__21026);
              };
            }(ps__$1), ps__$1);
          };
          var spn__2 = function(x, y) {
            return cljs.core.some(function(ps__$1) {
              return function(p1__20664_SHARP_) {
                var or__7504__auto__ = function() {
                  var G__21028 = x;
                  return p1__20664_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__20664_SHARP_.cljs$core$IFn$_invoke$arity$1(G__21028) : p1__20664_SHARP_.call(null, G__21028);
                }();
                if (cljs.core.truth_(or__7504__auto__)) {
                  return or__7504__auto__;
                } else {
                  var G__21029 = y;
                  return p1__20664_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__20664_SHARP_.cljs$core$IFn$_invoke$arity$1(G__21029) : p1__20664_SHARP_.call(null, G__21029);
                }
              };
            }(ps__$1), ps__$1);
          };
          var spn__3 = function(x, y, z) {
            return cljs.core.some(function(ps__$1) {
              return function(p1__20665_SHARP_) {
                var or__7504__auto__ = function() {
                  var G__21031 = x;
                  return p1__20665_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__20665_SHARP_.cljs$core$IFn$_invoke$arity$1(G__21031) : p1__20665_SHARP_.call(null, G__21031);
                }();
                if (cljs.core.truth_(or__7504__auto__)) {
                  return or__7504__auto__;
                } else {
                  var or__7504__auto____$1 = function() {
                    var G__21033 = y;
                    return p1__20665_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__20665_SHARP_.cljs$core$IFn$_invoke$arity$1(G__21033) : p1__20665_SHARP_.call(null, G__21033);
                  }();
                  if (cljs.core.truth_(or__7504__auto____$1)) {
                    return or__7504__auto____$1;
                  } else {
                    var G__21034 = z;
                    return p1__20665_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__20665_SHARP_.cljs$core$IFn$_invoke$arity$1(G__21034) : p1__20665_SHARP_.call(null, G__21034);
                  }
                }
              };
            }(ps__$1), ps__$1);
          };
          var spn__4 = function() {
            var G__21051__delegate = function(x, y, z, args) {
              var or__7504__auto__ = spn.cljs$core$IFn$_invoke$arity$3(x, y, z);
              if (cljs.core.truth_(or__7504__auto__)) {
                return or__7504__auto__;
              } else {
                return cljs.core.some(function(or__7504__auto__, ps__$1) {
                  return function(p1__20666_SHARP_) {
                    return cljs.core.some(p1__20666_SHARP_, args);
                  };
                }(or__7504__auto__, ps__$1), ps__$1);
              }
            };
            var G__21051 = function(x, y, z, var_args) {
              var args = null;
              if (arguments.length > 3) {
                var G__21052__i = 0, G__21052__a = new Array(arguments.length - 3);
                while (G__21052__i < G__21052__a.length) {
                  G__21052__a[G__21052__i] = arguments[G__21052__i + 3];
                  ++G__21052__i;
                }
                args = new cljs.core.IndexedSeq(G__21052__a, 0);
              }
              return G__21051__delegate.call(this, x, y, z, args);
            };
            G__21051.cljs$lang$maxFixedArity = 3;
            G__21051.cljs$lang$applyTo = function(arglist__21053) {
              var x = cljs.core.first(arglist__21053);
              arglist__21053 = cljs.core.next(arglist__21053);
              var y = cljs.core.first(arglist__21053);
              arglist__21053 = cljs.core.next(arglist__21053);
              var z = cljs.core.first(arglist__21053);
              var args = cljs.core.rest(arglist__21053);
              return G__21051__delegate(x, y, z, args);
            };
            G__21051.cljs$core$IFn$_invoke$arity$variadic = G__21051__delegate;
            return G__21051;
          }();
          spn = function(x, y, z, var_args) {
            var args = var_args;
            switch(arguments.length) {
              case 0:
                return spn__0.call(this);
              case 1:
                return spn__1.call(this, x);
              case 2:
                return spn__2.call(this, x, y);
              case 3:
                return spn__3.call(this, x, y, z);
              default:
                var G__21054 = null;
                if (arguments.length > 3) {
                  var G__21055__i = 0, G__21055__a = new Array(arguments.length - 3);
                  while (G__21055__i < G__21055__a.length) {
                    G__21055__a[G__21055__i] = arguments[G__21055__i + 3];
                    ++G__21055__i;
                  }
                  G__21054 = new cljs.core.IndexedSeq(G__21055__a, 0);
                }
                return spn__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__21054);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          spn.cljs$lang$maxFixedArity = 3;
          spn.cljs$lang$applyTo = spn__4.cljs$lang$applyTo;
          spn.cljs$core$IFn$_invoke$arity$0 = spn__0;
          spn.cljs$core$IFn$_invoke$arity$1 = spn__1;
          spn.cljs$core$IFn$_invoke$arity$2 = spn__2;
          spn.cljs$core$IFn$_invoke$arity$3 = spn__3;
          spn.cljs$core$IFn$_invoke$arity$variadic = spn__4.cljs$core$IFn$_invoke$arity$variadic;
          return spn;
        }();
      }(ps__$1);
    };
    var G__21050 = function(p1, p2, p3, var_args) {
      var ps = null;
      if (arguments.length > 3) {
        var G__21056__i = 0, G__21056__a = new Array(arguments.length - 3);
        while (G__21056__i < G__21056__a.length) {
          G__21056__a[G__21056__i] = arguments[G__21056__i + 3];
          ++G__21056__i;
        }
        ps = new cljs.core.IndexedSeq(G__21056__a, 0);
      }
      return G__21050__delegate.call(this, p1, p2, p3, ps);
    };
    G__21050.cljs$lang$maxFixedArity = 3;
    G__21050.cljs$lang$applyTo = function(arglist__21057) {
      var p1 = cljs.core.first(arglist__21057);
      arglist__21057 = cljs.core.next(arglist__21057);
      var p2 = cljs.core.first(arglist__21057);
      arglist__21057 = cljs.core.next(arglist__21057);
      var p3 = cljs.core.first(arglist__21057);
      var ps = cljs.core.rest(arglist__21057);
      return G__21050__delegate(p1, p2, p3, ps);
    };
    G__21050.cljs$core$IFn$_invoke$arity$variadic = G__21050__delegate;
    return G__21050;
  }();
  some_fn = function(p1, p2, p3, var_args) {
    var ps = var_args;
    switch(arguments.length) {
      case 1:
        return some_fn__1.call(this, p1);
      case 2:
        return some_fn__2.call(this, p1, p2);
      case 3:
        return some_fn__3.call(this, p1, p2, p3);
      default:
        var G__21058 = null;
        if (arguments.length > 3) {
          var G__21059__i = 0, G__21059__a = new Array(arguments.length - 3);
          while (G__21059__i < G__21059__a.length) {
            G__21059__a[G__21059__i] = arguments[G__21059__i + 3];
            ++G__21059__i;
          }
          G__21058 = new cljs.core.IndexedSeq(G__21059__a, 0);
        }
        return some_fn__4.cljs$core$IFn$_invoke$arity$variadic(p1, p2, p3, G__21058);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  some_fn.cljs$lang$maxFixedArity = 3;
  some_fn.cljs$lang$applyTo = some_fn__4.cljs$lang$applyTo;
  some_fn.cljs$core$IFn$_invoke$arity$1 = some_fn__1;
  some_fn.cljs$core$IFn$_invoke$arity$2 = some_fn__2;
  some_fn.cljs$core$IFn$_invoke$arity$3 = some_fn__3;
  some_fn.cljs$core$IFn$_invoke$arity$variadic = some_fn__4.cljs$core$IFn$_invoke$arity$variadic;
  return some_fn;
}();
cljs.core.map = function() {
  var map = null;
  var map__1 = function(f) {
    return function(rf) {
      return function() {
        var G__21114 = null;
        var G__21114__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__21114__1 = function(result) {
          var G__21100 = result;
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__21100) : rf.call(null, G__21100);
        };
        var G__21114__2 = function(result, input) {
          var G__21101 = result;
          var G__21102 = function() {
            var G__21103 = input;
            return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__21103) : f.call(null, G__21103);
          }();
          return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__21101, G__21102) : rf.call(null, G__21101, G__21102);
        };
        var G__21114__3 = function() {
          var G__21115__delegate = function(result, input, inputs) {
            var G__21104 = result;
            var G__21105 = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f, input, inputs);
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__21104, G__21105) : rf.call(null, G__21104, G__21105);
          };
          var G__21115 = function(result, input, var_args) {
            var inputs = null;
            if (arguments.length > 2) {
              var G__21116__i = 0, G__21116__a = new Array(arguments.length - 2);
              while (G__21116__i < G__21116__a.length) {
                G__21116__a[G__21116__i] = arguments[G__21116__i + 2];
                ++G__21116__i;
              }
              inputs = new cljs.core.IndexedSeq(G__21116__a, 0);
            }
            return G__21115__delegate.call(this, result, input, inputs);
          };
          G__21115.cljs$lang$maxFixedArity = 2;
          G__21115.cljs$lang$applyTo = function(arglist__21117) {
            var result = cljs.core.first(arglist__21117);
            arglist__21117 = cljs.core.next(arglist__21117);
            var input = cljs.core.first(arglist__21117);
            var inputs = cljs.core.rest(arglist__21117);
            return G__21115__delegate(result, input, inputs);
          };
          G__21115.cljs$core$IFn$_invoke$arity$variadic = G__21115__delegate;
          return G__21115;
        }();
        G__21114 = function(result, input, var_args) {
          var inputs = var_args;
          switch(arguments.length) {
            case 0:
              return G__21114__0.call(this);
            case 1:
              return G__21114__1.call(this, result);
            case 2:
              return G__21114__2.call(this, result, input);
            default:
              var G__21118 = null;
              if (arguments.length > 2) {
                var G__21119__i = 0, G__21119__a = new Array(arguments.length - 2);
                while (G__21119__i < G__21119__a.length) {
                  G__21119__a[G__21119__i] = arguments[G__21119__i + 2];
                  ++G__21119__i;
                }
                G__21118 = new cljs.core.IndexedSeq(G__21119__a, 0);
              }
              return G__21114__3.cljs$core$IFn$_invoke$arity$variadic(result, input, G__21118);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__21114.cljs$lang$maxFixedArity = 2;
        G__21114.cljs$lang$applyTo = G__21114__3.cljs$lang$applyTo;
        G__21114.cljs$core$IFn$_invoke$arity$0 = G__21114__0;
        G__21114.cljs$core$IFn$_invoke$arity$1 = G__21114__1;
        G__21114.cljs$core$IFn$_invoke$arity$2 = G__21114__2;
        G__21114.cljs$core$IFn$_invoke$arity$variadic = G__21114__3.cljs$core$IFn$_invoke$arity$variadic;
        return G__21114;
      }();
    };
  };
  var map__2 = function(f, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq(coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_(s)) {
          var c = cljs.core.chunk_first(s);
          var size = cljs.core.count(c);
          var b = cljs.core.chunk_buffer(size);
          var n__8391__auto___21120 = size;
          var i_21121 = 0;
          while (true) {
            if (i_21121 < n__8391__auto___21120) {
              cljs.core.chunk_append(b, function() {
                var G__21106 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_21121);
                return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__21106) : f.call(null, G__21106);
              }());
              var G__21122 = i_21121 + 1;
              i_21121 = G__21122;
              continue;
            } else {
            }
            break;
          }
          return cljs.core.chunk_cons(cljs.core.chunk(b), map.cljs$core$IFn$_invoke$arity$2(f, cljs.core.chunk_rest(s)));
        } else {
          return cljs.core.cons(function() {
            var G__21107 = cljs.core.first(s);
            return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__21107) : f.call(null, G__21107);
          }(), map.cljs$core$IFn$_invoke$arity$2(f, cljs.core.rest(s)));
        }
      } else {
        return null;
      }
    }, null, null);
  };
  var map__3 = function(f, c1, c2) {
    return new cljs.core.LazySeq(null, function() {
      var s1 = cljs.core.seq(c1);
      var s2 = cljs.core.seq(c2);
      if (s1 && s2) {
        return cljs.core.cons(function() {
          var G__21108 = cljs.core.first(s1);
          var G__21109 = cljs.core.first(s2);
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__21108, G__21109) : f.call(null, G__21108, G__21109);
        }(), map.cljs$core$IFn$_invoke$arity$3(f, cljs.core.rest(s1), cljs.core.rest(s2)));
      } else {
        return null;
      }
    }, null, null);
  };
  var map__4 = function(f, c1, c2, c3) {
    return new cljs.core.LazySeq(null, function() {
      var s1 = cljs.core.seq(c1);
      var s2 = cljs.core.seq(c2);
      var s3 = cljs.core.seq(c3);
      if (s1 && s2 && s3) {
        return cljs.core.cons(function() {
          var G__21110 = cljs.core.first(s1);
          var G__21111 = cljs.core.first(s2);
          var G__21112 = cljs.core.first(s3);
          return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__21110, G__21111, G__21112) : f.call(null, G__21110, G__21111, G__21112);
        }(), map.cljs$core$IFn$_invoke$arity$4(f, cljs.core.rest(s1), cljs.core.rest(s2), cljs.core.rest(s3)));
      } else {
        return null;
      }
    }, null, null);
  };
  var map__5 = function() {
    var G__21123__delegate = function(f, c1, c2, c3, colls) {
      var step = function step(cs) {
        return new cljs.core.LazySeq(null, function() {
          var ss = map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq, cs);
          if (cljs.core.every_QMARK_(cljs.core.identity, ss)) {
            return cljs.core.cons(map.cljs$core$IFn$_invoke$arity$2(cljs.core.first, ss), step(map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest, ss)));
          } else {
            return null;
          }
        }, null, null);
      };
      return map.cljs$core$IFn$_invoke$arity$2(function(step) {
        return function(p1__21060_SHARP_) {
          return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f, p1__21060_SHARP_);
        };
      }(step), step(cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls, c3, cljs.core.array_seq([c2, c1], 0))));
    };
    var G__21123 = function(f, c1, c2, c3, var_args) {
      var colls = null;
      if (arguments.length > 4) {
        var G__21124__i = 0, G__21124__a = new Array(arguments.length - 4);
        while (G__21124__i < G__21124__a.length) {
          G__21124__a[G__21124__i] = arguments[G__21124__i + 4];
          ++G__21124__i;
        }
        colls = new cljs.core.IndexedSeq(G__21124__a, 0);
      }
      return G__21123__delegate.call(this, f, c1, c2, c3, colls);
    };
    G__21123.cljs$lang$maxFixedArity = 4;
    G__21123.cljs$lang$applyTo = function(arglist__21125) {
      var f = cljs.core.first(arglist__21125);
      arglist__21125 = cljs.core.next(arglist__21125);
      var c1 = cljs.core.first(arglist__21125);
      arglist__21125 = cljs.core.next(arglist__21125);
      var c2 = cljs.core.first(arglist__21125);
      arglist__21125 = cljs.core.next(arglist__21125);
      var c3 = cljs.core.first(arglist__21125);
      var colls = cljs.core.rest(arglist__21125);
      return G__21123__delegate(f, c1, c2, c3, colls);
    };
    G__21123.cljs$core$IFn$_invoke$arity$variadic = G__21123__delegate;
    return G__21123;
  }();
  map = function(f, c1, c2, c3, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 1:
        return map__1.call(this, f);
      case 2:
        return map__2.call(this, f, c1);
      case 3:
        return map__3.call(this, f, c1, c2);
      case 4:
        return map__4.call(this, f, c1, c2, c3);
      default:
        var G__21126 = null;
        if (arguments.length > 4) {
          var G__21127__i = 0, G__21127__a = new Array(arguments.length - 4);
          while (G__21127__i < G__21127__a.length) {
            G__21127__a[G__21127__i] = arguments[G__21127__i + 4];
            ++G__21127__i;
          }
          G__21126 = new cljs.core.IndexedSeq(G__21127__a, 0);
        }
        return map__5.cljs$core$IFn$_invoke$arity$variadic(f, c1, c2, c3, G__21126);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  map.cljs$lang$maxFixedArity = 4;
  map.cljs$lang$applyTo = map__5.cljs$lang$applyTo;
  map.cljs$core$IFn$_invoke$arity$1 = map__1;
  map.cljs$core$IFn$_invoke$arity$2 = map__2;
  map.cljs$core$IFn$_invoke$arity$3 = map__3;
  map.cljs$core$IFn$_invoke$arity$4 = map__4;
  map.cljs$core$IFn$_invoke$arity$variadic = map__5.cljs$core$IFn$_invoke$arity$variadic;
  return map;
}();
cljs.core.take = function() {
  var take = null;
  var take__1 = function(n) {
    return function(rf) {
      var na = cljs.core.volatile_BANG_(n);
      return function(na) {
        return function() {
          var G__21136 = null;
          var G__21136__0 = function() {
            return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
          };
          var G__21136__1 = function(result) {
            var G__21133 = result;
            return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__21133) : rf.call(null, G__21133);
          };
          var G__21136__2 = function(result, input) {
            var n__$1 = cljs.core.deref(na);
            var nn = na.cljs$core$IVolatile$_vreset_BANG_$arity$2(null, na.cljs$core$IDeref$_deref$arity$1(null) - 1);
            var result__$1 = n__$1 > 0 ? function() {
              var G__21134 = result;
              var G__21135 = input;
              return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__21134, G__21135) : rf.call(null, G__21134, G__21135);
            }() : result;
            if (!(nn > 0)) {
              return cljs.core.ensure_reduced(result__$1);
            } else {
              return result__$1;
            }
          };
          G__21136 = function(result, input) {
            switch(arguments.length) {
              case 0:
                return G__21136__0.call(this);
              case 1:
                return G__21136__1.call(this, result);
              case 2:
                return G__21136__2.call(this, result, input);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__21136.cljs$core$IFn$_invoke$arity$0 = G__21136__0;
          G__21136.cljs$core$IFn$_invoke$arity$1 = G__21136__1;
          G__21136.cljs$core$IFn$_invoke$arity$2 = G__21136__2;
          return G__21136;
        }();
      }(na);
    };
  };
  var take__2 = function(n, coll) {
    return new cljs.core.LazySeq(null, function() {
      if (n > 0) {
        var temp__4126__auto__ = cljs.core.seq(coll);
        if (temp__4126__auto__) {
          var s = temp__4126__auto__;
          return cljs.core.cons(cljs.core.first(s), take.cljs$core$IFn$_invoke$arity$2(n - 1, cljs.core.rest(s)));
        } else {
          return null;
        }
      } else {
        return null;
      }
    }, null, null);
  };
  take = function(n, coll) {
    switch(arguments.length) {
      case 1:
        return take__1.call(this, n);
      case 2:
        return take__2.call(this, n, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  take.cljs$core$IFn$_invoke$arity$1 = take__1;
  take.cljs$core$IFn$_invoke$arity$2 = take__2;
  return take;
}();
cljs.core.drop = function() {
  var drop = null;
  var drop__1 = function(n) {
    return function(rf) {
      var na = cljs.core.volatile_BANG_(n);
      return function(na) {
        return function() {
          var G__21143 = null;
          var G__21143__0 = function() {
            return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
          };
          var G__21143__1 = function(result) {
            var G__21140 = result;
            return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__21140) : rf.call(null, G__21140);
          };
          var G__21143__2 = function(result, input) {
            var n__$1 = cljs.core.deref(na);
            na.cljs$core$IVolatile$_vreset_BANG_$arity$2(null, na.cljs$core$IDeref$_deref$arity$1(null) - 1);
            if (n__$1 > 0) {
              return result;
            } else {
              var G__21141 = result;
              var G__21142 = input;
              return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__21141, G__21142) : rf.call(null, G__21141, G__21142);
            }
          };
          G__21143 = function(result, input) {
            switch(arguments.length) {
              case 0:
                return G__21143__0.call(this);
              case 1:
                return G__21143__1.call(this, result);
              case 2:
                return G__21143__2.call(this, result, input);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__21143.cljs$core$IFn$_invoke$arity$0 = G__21143__0;
          G__21143.cljs$core$IFn$_invoke$arity$1 = G__21143__1;
          G__21143.cljs$core$IFn$_invoke$arity$2 = G__21143__2;
          return G__21143;
        }();
      }(na);
    };
  };
  var drop__2 = function(n, coll) {
    var step = function(n__$1, coll__$1) {
      while (true) {
        var s = cljs.core.seq(coll__$1);
        if (n__$1 > 0 && s) {
          var G__21144 = n__$1 - 1;
          var G__21145 = cljs.core.rest(s);
          n__$1 = G__21144;
          coll__$1 = G__21145;
          continue;
        } else {
          return s;
        }
        break;
      }
    };
    return new cljs.core.LazySeq(null, function(step) {
      return function() {
        return step(n, coll);
      };
    }(step), null, null);
  };
  drop = function(n, coll) {
    switch(arguments.length) {
      case 1:
        return drop__1.call(this, n);
      case 2:
        return drop__2.call(this, n, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  drop.cljs$core$IFn$_invoke$arity$1 = drop__1;
  drop.cljs$core$IFn$_invoke$arity$2 = drop__2;
  return drop;
}();
cljs.core.drop_last = function() {
  var drop_last = null;
  var drop_last__1 = function(s) {
    return drop_last.cljs$core$IFn$_invoke$arity$2(1, s);
  };
  var drop_last__2 = function(n, s) {
    return cljs.core.map.cljs$core$IFn$_invoke$arity$3(function(x, _) {
      return x;
    }, s, cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n, s));
  };
  drop_last = function(n, s) {
    switch(arguments.length) {
      case 1:
        return drop_last__1.call(this, n);
      case 2:
        return drop_last__2.call(this, n, s);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  drop_last.cljs$core$IFn$_invoke$arity$1 = drop_last__1;
  drop_last.cljs$core$IFn$_invoke$arity$2 = drop_last__2;
  return drop_last;
}();
cljs.core.take_last = function take_last(n, coll) {
  var s = cljs.core.seq(coll);
  var lead = cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n, coll));
  while (true) {
    if (lead) {
      var G__21148 = cljs.core.next(s);
      var G__21149 = cljs.core.next(lead);
      s = G__21148;
      lead = G__21149;
      continue;
    } else {
      return s;
    }
    break;
  }
};
cljs.core.drop_while = function() {
  var drop_while = null;
  var drop_while__1 = function(pred) {
    return function(rf) {
      var da = cljs.core.volatile_BANG_(true);
      return function(da) {
        return function() {
          var G__21162 = null;
          var G__21162__0 = function() {
            return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
          };
          var G__21162__1 = function(result) {
            var G__21156 = result;
            return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__21156) : rf.call(null, G__21156);
          };
          var G__21162__2 = function(result, input) {
            var drop_QMARK_ = cljs.core.deref(da);
            if (cljs.core.truth_(function() {
              var and__7492__auto__ = drop_QMARK_;
              if (cljs.core.truth_(and__7492__auto__)) {
                var G__21157 = input;
                return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__21157) : pred.call(null, G__21157);
              } else {
                return and__7492__auto__;
              }
            }())) {
              return result;
            } else {
              cljs.core.vreset_BANG_(da, null);
              var G__21158 = result;
              var G__21159 = input;
              return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__21158, G__21159) : rf.call(null, G__21158, G__21159);
            }
          };
          G__21162 = function(result, input) {
            switch(arguments.length) {
              case 0:
                return G__21162__0.call(this);
              case 1:
                return G__21162__1.call(this, result);
              case 2:
                return G__21162__2.call(this, result, input);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__21162.cljs$core$IFn$_invoke$arity$0 = G__21162__0;
          G__21162.cljs$core$IFn$_invoke$arity$1 = G__21162__1;
          G__21162.cljs$core$IFn$_invoke$arity$2 = G__21162__2;
          return G__21162;
        }();
      }(da);
    };
  };
  var drop_while__2 = function(pred, coll) {
    var step = function(pred__$1, coll__$1) {
      while (true) {
        var s = cljs.core.seq(coll__$1);
        if (cljs.core.truth_(function() {
          var and__7492__auto__ = s;
          if (and__7492__auto__) {
            var G__21161 = cljs.core.first(s);
            return pred__$1.cljs$core$IFn$_invoke$arity$1 ? pred__$1.cljs$core$IFn$_invoke$arity$1(G__21161) : pred__$1.call(null, G__21161);
          } else {
            return and__7492__auto__;
          }
        }())) {
          var G__21163 = pred__$1;
          var G__21164 = cljs.core.rest(s);
          pred__$1 = G__21163;
          coll__$1 = G__21164;
          continue;
        } else {
          return s;
        }
        break;
      }
    };
    return new cljs.core.LazySeq(null, function(step) {
      return function() {
        return step(pred, coll);
      };
    }(step), null, null);
  };
  drop_while = function(pred, coll) {
    switch(arguments.length) {
      case 1:
        return drop_while__1.call(this, pred);
      case 2:
        return drop_while__2.call(this, pred, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  drop_while.cljs$core$IFn$_invoke$arity$1 = drop_while__1;
  drop_while.cljs$core$IFn$_invoke$arity$2 = drop_while__2;
  return drop_while;
}();
cljs.core.cycle = function cycle(coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4126__auto__ = cljs.core.seq(coll);
    if (temp__4126__auto__) {
      var s = temp__4126__auto__;
      return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(s, cycle(s));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.split_at = function split_at(n, coll) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, coll), cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n, coll)], null);
};
cljs.core.repeat = function() {
  var repeat = null;
  var repeat__1 = function(x) {
    return new cljs.core.LazySeq(null, function() {
      return cljs.core.cons(x, repeat.cljs$core$IFn$_invoke$arity$1(x));
    }, null, null);
  };
  var repeat__2 = function(n, x) {
    return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, repeat.cljs$core$IFn$_invoke$arity$1(x));
  };
  repeat = function(n, x) {
    switch(arguments.length) {
      case 1:
        return repeat__1.call(this, n);
      case 2:
        return repeat__2.call(this, n, x);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  repeat.cljs$core$IFn$_invoke$arity$1 = repeat__1;
  repeat.cljs$core$IFn$_invoke$arity$2 = repeat__2;
  return repeat;
}();
cljs.core.replicate = function replicate(n, x) {
  return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(x));
};
cljs.core.repeatedly = function() {
  var repeatedly = null;
  var repeatedly__1 = function(f) {
    return new cljs.core.LazySeq(null, function() {
      return cljs.core.cons(function() {
        return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
      }(), repeatedly.cljs$core$IFn$_invoke$arity$1(f));
    }, null, null);
  };
  var repeatedly__2 = function(n, f) {
    return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, repeatedly.cljs$core$IFn$_invoke$arity$1(f));
  };
  repeatedly = function(n, f) {
    switch(arguments.length) {
      case 1:
        return repeatedly__1.call(this, n);
      case 2:
        return repeatedly__2.call(this, n, f);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  repeatedly.cljs$core$IFn$_invoke$arity$1 = repeatedly__1;
  repeatedly.cljs$core$IFn$_invoke$arity$2 = repeatedly__2;
  return repeatedly;
}();
cljs.core.iterate = function iterate(f, x) {
  return cljs.core.cons(x, new cljs.core.LazySeq(null, function() {
    return iterate(f, function() {
      var G__21173 = x;
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__21173) : f.call(null, G__21173);
    }());
  }, null, null));
};
cljs.core.interleave = function() {
  var interleave = null;
  var interleave__2 = function(c1, c2) {
    return new cljs.core.LazySeq(null, function() {
      var s1 = cljs.core.seq(c1);
      var s2 = cljs.core.seq(c2);
      if (s1 && s2) {
        return cljs.core.cons(cljs.core.first(s1), cljs.core.cons(cljs.core.first(s2), interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s1), cljs.core.rest(s2))));
      } else {
        return null;
      }
    }, null, null);
  };
  var interleave__3 = function() {
    var G__21176__delegate = function(c1, c2, colls) {
      return new cljs.core.LazySeq(null, function() {
        var ss = cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq, cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls, c2, cljs.core.array_seq([c1], 0)));
        if (cljs.core.every_QMARK_(cljs.core.identity, ss)) {
          return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.first, ss), cljs.core.apply.cljs$core$IFn$_invoke$arity$2(interleave, cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest, ss)));
        } else {
          return null;
        }
      }, null, null);
    };
    var G__21176 = function(c1, c2, var_args) {
      var colls = null;
      if (arguments.length > 2) {
        var G__21177__i = 0, G__21177__a = new Array(arguments.length - 2);
        while (G__21177__i < G__21177__a.length) {
          G__21177__a[G__21177__i] = arguments[G__21177__i + 2];
          ++G__21177__i;
        }
        colls = new cljs.core.IndexedSeq(G__21177__a, 0);
      }
      return G__21176__delegate.call(this, c1, c2, colls);
    };
    G__21176.cljs$lang$maxFixedArity = 2;
    G__21176.cljs$lang$applyTo = function(arglist__21178) {
      var c1 = cljs.core.first(arglist__21178);
      arglist__21178 = cljs.core.next(arglist__21178);
      var c2 = cljs.core.first(arglist__21178);
      var colls = cljs.core.rest(arglist__21178);
      return G__21176__delegate(c1, c2, colls);
    };
    G__21176.cljs$core$IFn$_invoke$arity$variadic = G__21176__delegate;
    return G__21176;
  }();
  interleave = function(c1, c2, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return interleave__2.call(this, c1, c2);
      default:
        var G__21179 = null;
        if (arguments.length > 2) {
          var G__21180__i = 0, G__21180__a = new Array(arguments.length - 2);
          while (G__21180__i < G__21180__a.length) {
            G__21180__a[G__21180__i] = arguments[G__21180__i + 2];
            ++G__21180__i;
          }
          G__21179 = new cljs.core.IndexedSeq(G__21180__a, 0);
        }
        return interleave__3.cljs$core$IFn$_invoke$arity$variadic(c1, c2, G__21179);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  interleave.cljs$lang$maxFixedArity = 2;
  interleave.cljs$lang$applyTo = interleave__3.cljs$lang$applyTo;
  interleave.cljs$core$IFn$_invoke$arity$2 = interleave__2;
  interleave.cljs$core$IFn$_invoke$arity$variadic = interleave__3.cljs$core$IFn$_invoke$arity$variadic;
  return interleave;
}();
cljs.core.interpose = function() {
  var interpose = null;
  var interpose__1 = function(sep) {
    return function(rf) {
      var started = cljs.core.volatile_BANG_(false);
      return function(started) {
        return function() {
          var G__21195 = null;
          var G__21195__0 = function() {
            return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
          };
          var G__21195__1 = function(result) {
            var G__21188 = result;
            return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__21188) : rf.call(null, G__21188);
          };
          var G__21195__2 = function(result, input) {
            if (cljs.core.truth_(cljs.core.deref(started))) {
              var sepr = function() {
                var G__21189 = result;
                var G__21190 = sep;
                return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__21189, G__21190) : rf.call(null, G__21189, G__21190);
              }();
              if (cljs.core.reduced_QMARK_(sepr)) {
                return sepr;
              } else {
                var G__21191 = sepr;
                var G__21192 = input;
                return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__21191, G__21192) : rf.call(null, G__21191, G__21192);
              }
            } else {
              cljs.core.vreset_BANG_(started, true);
              var G__21193 = result;
              var G__21194 = input;
              return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__21193, G__21194) : rf.call(null, G__21193, G__21194);
            }
          };
          G__21195 = function(result, input) {
            switch(arguments.length) {
              case 0:
                return G__21195__0.call(this);
              case 1:
                return G__21195__1.call(this, result);
              case 2:
                return G__21195__2.call(this, result, input);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__21195.cljs$core$IFn$_invoke$arity$0 = G__21195__0;
          G__21195.cljs$core$IFn$_invoke$arity$1 = G__21195__1;
          G__21195.cljs$core$IFn$_invoke$arity$2 = G__21195__2;
          return G__21195;
        }();
      }(started);
    };
  };
  var interpose__2 = function(sep, coll) {
    return cljs.core.drop.cljs$core$IFn$_invoke$arity$2(1, cljs.core.interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(sep), coll));
  };
  interpose = function(sep, coll) {
    switch(arguments.length) {
      case 1:
        return interpose__1.call(this, sep);
      case 2:
        return interpose__2.call(this, sep, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  interpose.cljs$core$IFn$_invoke$arity$1 = interpose__1;
  interpose.cljs$core$IFn$_invoke$arity$2 = interpose__2;
  return interpose;
}();
cljs.core.flatten1 = function flatten1(colls) {
  var cat = function cat(coll, colls__$1) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4124__auto__ = cljs.core.seq(coll);
      if (temp__4124__auto__) {
        var coll__$1 = temp__4124__auto__;
        return cljs.core.cons(cljs.core.first(coll__$1), cat(cljs.core.rest(coll__$1), colls__$1));
      } else {
        if (cljs.core.seq(colls__$1)) {
          return cat(cljs.core.first(colls__$1), cljs.core.rest(colls__$1));
        } else {
          return null;
        }
      }
    }, null, null);
  };
  return cat(null, colls);
};
cljs.core.mapcat = function() {
  var mapcat = null;
  var mapcat__1 = function(f) {
    return cljs.core.comp.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$1(f), cljs.core.cat);
  };
  var mapcat__2 = function() {
    var G__21204__delegate = function(f, colls) {
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.concat, cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.map, f, colls));
    };
    var G__21204 = function(f, var_args) {
      var colls = null;
      if (arguments.length > 1) {
        var G__21205__i = 0, G__21205__a = new Array(arguments.length - 1);
        while (G__21205__i < G__21205__a.length) {
          G__21205__a[G__21205__i] = arguments[G__21205__i + 1];
          ++G__21205__i;
        }
        colls = new cljs.core.IndexedSeq(G__21205__a, 0);
      }
      return G__21204__delegate.call(this, f, colls);
    };
    G__21204.cljs$lang$maxFixedArity = 1;
    G__21204.cljs$lang$applyTo = function(arglist__21206) {
      var f = cljs.core.first(arglist__21206);
      var colls = cljs.core.rest(arglist__21206);
      return G__21204__delegate(f, colls);
    };
    G__21204.cljs$core$IFn$_invoke$arity$variadic = G__21204__delegate;
    return G__21204;
  }();
  mapcat = function(f, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 1:
        return mapcat__1.call(this, f);
      default:
        var G__21207 = null;
        if (arguments.length > 1) {
          var G__21208__i = 0, G__21208__a = new Array(arguments.length - 1);
          while (G__21208__i < G__21208__a.length) {
            G__21208__a[G__21208__i] = arguments[G__21208__i + 1];
            ++G__21208__i;
          }
          G__21207 = new cljs.core.IndexedSeq(G__21208__a, 0);
        }
        return mapcat__2.cljs$core$IFn$_invoke$arity$variadic(f, G__21207);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  mapcat.cljs$lang$maxFixedArity = 1;
  mapcat.cljs$lang$applyTo = mapcat__2.cljs$lang$applyTo;
  mapcat.cljs$core$IFn$_invoke$arity$1 = mapcat__1;
  mapcat.cljs$core$IFn$_invoke$arity$variadic = mapcat__2.cljs$core$IFn$_invoke$arity$variadic;
  return mapcat;
}();
cljs.core.filter = function() {
  var filter = null;
  var filter__1 = function(pred) {
    return function(rf) {
      return function() {
        var G__21227 = null;
        var G__21227__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__21227__1 = function(result) {
          var G__21221 = result;
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__21221) : rf.call(null, G__21221);
        };
        var G__21227__2 = function(result, input) {
          if (cljs.core.truth_(function() {
            var G__21222 = input;
            return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__21222) : pred.call(null, G__21222);
          }())) {
            var G__21223 = result;
            var G__21224 = input;
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__21223, G__21224) : rf.call(null, G__21223, G__21224);
          } else {
            return result;
          }
        };
        G__21227 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__21227__0.call(this);
            case 1:
              return G__21227__1.call(this, result);
            case 2:
              return G__21227__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__21227.cljs$core$IFn$_invoke$arity$0 = G__21227__0;
        G__21227.cljs$core$IFn$_invoke$arity$1 = G__21227__1;
        G__21227.cljs$core$IFn$_invoke$arity$2 = G__21227__2;
        return G__21227;
      }();
    };
  };
  var filter__2 = function(pred, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq(coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_(s)) {
          var c = cljs.core.chunk_first(s);
          var size = cljs.core.count(c);
          var b = cljs.core.chunk_buffer(size);
          var n__8391__auto___21228 = size;
          var i_21229 = 0;
          while (true) {
            if (i_21229 < n__8391__auto___21228) {
              if (cljs.core.truth_(function() {
                var G__21225 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_21229);
                return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__21225) : pred.call(null, G__21225);
              }())) {
                cljs.core.chunk_append(b, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_21229));
              } else {
              }
              var G__21230 = i_21229 + 1;
              i_21229 = G__21230;
              continue;
            } else {
            }
            break;
          }
          return cljs.core.chunk_cons(cljs.core.chunk(b), filter.cljs$core$IFn$_invoke$arity$2(pred, cljs.core.chunk_rest(s)));
        } else {
          var f = cljs.core.first(s);
          var r = cljs.core.rest(s);
          if (cljs.core.truth_(function() {
            var G__21226 = f;
            return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__21226) : pred.call(null, G__21226);
          }())) {
            return cljs.core.cons(f, filter.cljs$core$IFn$_invoke$arity$2(pred, r));
          } else {
            return filter.cljs$core$IFn$_invoke$arity$2(pred, r);
          }
        }
      } else {
        return null;
      }
    }, null, null);
  };
  filter = function(pred, coll) {
    switch(arguments.length) {
      case 1:
        return filter__1.call(this, pred);
      case 2:
        return filter__2.call(this, pred, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  filter.cljs$core$IFn$_invoke$arity$1 = filter__1;
  filter.cljs$core$IFn$_invoke$arity$2 = filter__2;
  return filter;
}();
cljs.core.remove = function() {
  var remove = null;
  var remove__1 = function(pred) {
    return cljs.core.filter.cljs$core$IFn$_invoke$arity$1(cljs.core.complement(pred));
  };
  var remove__2 = function(pred, coll) {
    return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(cljs.core.complement(pred), coll);
  };
  remove = function(pred, coll) {
    switch(arguments.length) {
      case 1:
        return remove__1.call(this, pred);
      case 2:
        return remove__2.call(this, pred, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  remove.cljs$core$IFn$_invoke$arity$1 = remove__1;
  remove.cljs$core$IFn$_invoke$arity$2 = remove__2;
  return remove;
}();
cljs.core.tree_seq = function tree_seq(branch_QMARK_, children, root) {
  var walk = function walk(node) {
    return new cljs.core.LazySeq(null, function() {
      return cljs.core.cons(node, cljs.core.truth_(function() {
        var G__21237 = node;
        return branch_QMARK_.cljs$core$IFn$_invoke$arity$1 ? branch_QMARK_.cljs$core$IFn$_invoke$arity$1(G__21237) : branch_QMARK_.call(null, G__21237);
      }()) ? cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(walk, cljs.core.array_seq([function() {
        var G__21238 = node;
        return children.cljs$core$IFn$_invoke$arity$1 ? children.cljs$core$IFn$_invoke$arity$1(G__21238) : children.call(null, G__21238);
      }()], 0)) : null);
    }, null, null);
  };
  return walk(root);
};
cljs.core.flatten = function flatten(x) {
  return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(function(p1__21239_SHARP_) {
    return!cljs.core.sequential_QMARK_(p1__21239_SHARP_);
  }, cljs.core.rest(cljs.core.tree_seq(cljs.core.sequential_QMARK_, cljs.core.seq, x)));
};
cljs.core.into = function() {
  var into = null;
  var into__2 = function(to, from) {
    if (!(to == null)) {
      if (function() {
        var G__21242 = to;
        if (G__21242) {
          var bit__8178__auto__ = G__21242.cljs$lang$protocol_mask$partition1$ & 4;
          if (bit__8178__auto__ || G__21242.cljs$core$IEditableCollection$) {
            return true;
          } else {
            return false;
          }
        } else {
          return false;
        }
      }()) {
        return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_, cljs.core.transient$(to), from)), cljs.core.meta(to));
      } else {
        return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj, to, from);
      }
    } else {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj, cljs.core.List.EMPTY, from);
    }
  };
  var into__3 = function(to, xform, from) {
    if (function() {
      var G__21243 = to;
      if (G__21243) {
        var bit__8178__auto__ = G__21243.cljs$lang$protocol_mask$partition1$ & 4;
        if (bit__8178__auto__ || G__21243.cljs$core$IEditableCollection$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform, cljs.core.conj_BANG_, cljs.core.transient$(to), from)), cljs.core.meta(to));
    } else {
      return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform, cljs.core.conj, to, from);
    }
  };
  into = function(to, xform, from) {
    switch(arguments.length) {
      case 2:
        return into__2.call(this, to, xform);
      case 3:
        return into__3.call(this, to, xform, from);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  into.cljs$core$IFn$_invoke$arity$2 = into__2;
  into.cljs$core$IFn$_invoke$arity$3 = into__3;
  return into;
}();
cljs.core.mapv = function() {
  var mapv = null;
  var mapv__2 = function(f, coll) {
    return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(v, o) {
      return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v, function() {
        var G__21245 = o;
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__21245) : f.call(null, G__21245);
      }());
    }, cljs.core.transient$(cljs.core.PersistentVector.EMPTY), coll));
  };
  var mapv__3 = function(f, c1, c2) {
    return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY, cljs.core.map.cljs$core$IFn$_invoke$arity$3(f, c1, c2));
  };
  var mapv__4 = function(f, c1, c2, c3) {
    return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY, cljs.core.map.cljs$core$IFn$_invoke$arity$4(f, c1, c2, c3));
  };
  var mapv__5 = function() {
    var G__21246__delegate = function(f, c1, c2, c3, colls) {
      return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY, cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(cljs.core.map, f, c1, c2, c3, cljs.core.array_seq([colls], 0)));
    };
    var G__21246 = function(f, c1, c2, c3, var_args) {
      var colls = null;
      if (arguments.length > 4) {
        var G__21247__i = 0, G__21247__a = new Array(arguments.length - 4);
        while (G__21247__i < G__21247__a.length) {
          G__21247__a[G__21247__i] = arguments[G__21247__i + 4];
          ++G__21247__i;
        }
        colls = new cljs.core.IndexedSeq(G__21247__a, 0);
      }
      return G__21246__delegate.call(this, f, c1, c2, c3, colls);
    };
    G__21246.cljs$lang$maxFixedArity = 4;
    G__21246.cljs$lang$applyTo = function(arglist__21248) {
      var f = cljs.core.first(arglist__21248);
      arglist__21248 = cljs.core.next(arglist__21248);
      var c1 = cljs.core.first(arglist__21248);
      arglist__21248 = cljs.core.next(arglist__21248);
      var c2 = cljs.core.first(arglist__21248);
      arglist__21248 = cljs.core.next(arglist__21248);
      var c3 = cljs.core.first(arglist__21248);
      var colls = cljs.core.rest(arglist__21248);
      return G__21246__delegate(f, c1, c2, c3, colls);
    };
    G__21246.cljs$core$IFn$_invoke$arity$variadic = G__21246__delegate;
    return G__21246;
  }();
  mapv = function(f, c1, c2, c3, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return mapv__2.call(this, f, c1);
      case 3:
        return mapv__3.call(this, f, c1, c2);
      case 4:
        return mapv__4.call(this, f, c1, c2, c3);
      default:
        var G__21249 = null;
        if (arguments.length > 4) {
          var G__21250__i = 0, G__21250__a = new Array(arguments.length - 4);
          while (G__21250__i < G__21250__a.length) {
            G__21250__a[G__21250__i] = arguments[G__21250__i + 4];
            ++G__21250__i;
          }
          G__21249 = new cljs.core.IndexedSeq(G__21250__a, 0);
        }
        return mapv__5.cljs$core$IFn$_invoke$arity$variadic(f, c1, c2, c3, G__21249);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  mapv.cljs$lang$maxFixedArity = 4;
  mapv.cljs$lang$applyTo = mapv__5.cljs$lang$applyTo;
  mapv.cljs$core$IFn$_invoke$arity$2 = mapv__2;
  mapv.cljs$core$IFn$_invoke$arity$3 = mapv__3;
  mapv.cljs$core$IFn$_invoke$arity$4 = mapv__4;
  mapv.cljs$core$IFn$_invoke$arity$variadic = mapv__5.cljs$core$IFn$_invoke$arity$variadic;
  return mapv;
}();
cljs.core.filterv = function filterv(pred, coll) {
  return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(v, o) {
    if (cljs.core.truth_(function() {
      var G__21252 = o;
      return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__21252) : pred.call(null, G__21252);
    }())) {
      return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v, o);
    } else {
      return v;
    }
  }, cljs.core.transient$(cljs.core.PersistentVector.EMPTY), coll));
};
cljs.core.partition = function() {
  var partition = null;
  var partition__2 = function(n, coll) {
    return partition.cljs$core$IFn$_invoke$arity$3(n, n, coll);
  };
  var partition__3 = function(n, step, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq(coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, s);
        if (n === cljs.core.count(p)) {
          return cljs.core.cons(p, partition.cljs$core$IFn$_invoke$arity$3(n, step, cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step, s)));
        } else {
          return null;
        }
      } else {
        return null;
      }
    }, null, null);
  };
  var partition__4 = function(n, step, pad, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq(coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, s);
        if (n === cljs.core.count(p)) {
          return cljs.core.cons(p, partition.cljs$core$IFn$_invoke$arity$4(n, step, pad, cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step, s)));
        } else {
          return cljs.core._conj(cljs.core.List.EMPTY, cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, cljs.core.concat.cljs$core$IFn$_invoke$arity$2(p, pad)));
        }
      } else {
        return null;
      }
    }, null, null);
  };
  partition = function(n, step, pad, coll) {
    switch(arguments.length) {
      case 2:
        return partition__2.call(this, n, step);
      case 3:
        return partition__3.call(this, n, step, pad);
      case 4:
        return partition__4.call(this, n, step, pad, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  partition.cljs$core$IFn$_invoke$arity$2 = partition__2;
  partition.cljs$core$IFn$_invoke$arity$3 = partition__3;
  partition.cljs$core$IFn$_invoke$arity$4 = partition__4;
  return partition;
}();
cljs.core.get_in = function() {
  var get_in = null;
  var get_in__2 = function(m, ks) {
    return get_in.cljs$core$IFn$_invoke$arity$3(m, ks, null);
  };
  var get_in__3 = function(m, ks, not_found) {
    var sentinel = cljs.core.lookup_sentinel;
    var m__$1 = m;
    var ks__$1 = cljs.core.seq(ks);
    while (true) {
      if (ks__$1) {
        if (!function() {
          var G__21267 = m__$1;
          if (G__21267) {
            var bit__8185__auto__ = G__21267.cljs$lang$protocol_mask$partition0$ & 256;
            if (bit__8185__auto__ || G__21267.cljs$core$ILookup$) {
              return true;
            } else {
              if (!G__21267.cljs$lang$protocol_mask$partition0$) {
                return cljs.core.native_satisfies_QMARK_(cljs.core.ILookup, G__21267);
              } else {
                return false;
              }
            }
          } else {
            return cljs.core.native_satisfies_QMARK_(cljs.core.ILookup, G__21267);
          }
        }()) {
          return not_found;
        } else {
          var m__$2 = cljs.core.get.cljs$core$IFn$_invoke$arity$3(m__$1, cljs.core.first(ks__$1), sentinel);
          if (sentinel === m__$2) {
            return not_found;
          } else {
            var G__21268 = sentinel;
            var G__21269 = m__$2;
            var G__21270 = cljs.core.next(ks__$1);
            sentinel = G__21268;
            m__$1 = G__21269;
            ks__$1 = G__21270;
            continue;
          }
        }
      } else {
        return m__$1;
      }
      break;
    }
  };
  get_in = function(m, ks, not_found) {
    switch(arguments.length) {
      case 2:
        return get_in__2.call(this, m, ks);
      case 3:
        return get_in__3.call(this, m, ks, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  get_in.cljs$core$IFn$_invoke$arity$2 = get_in__2;
  get_in.cljs$core$IFn$_invoke$arity$3 = get_in__3;
  return get_in;
}();
cljs.core.assoc_in = function assoc_in(m, p__21271, v) {
  var vec__21276 = p__21271;
  var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21276, 0, null);
  var ks = cljs.core.nthnext(vec__21276, 1);
  if (ks) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, assoc_in(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), ks, v));
  } else {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, v);
  }
};
cljs.core.update_in = function() {
  var update_in = null;
  var update_in__3 = function(m, p__21277, f) {
    var vec__21315 = p__21277;
    var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21315, 0, null);
    var ks = cljs.core.nthnext(vec__21315, 1);
    if (ks) {
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, update_in.cljs$core$IFn$_invoke$arity$3(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), ks, f));
    } else {
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
        var G__21316 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__21316) : f.call(null, G__21316);
      }());
    }
  };
  var update_in__4 = function(m, p__21278, f, a) {
    var vec__21317 = p__21278;
    var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21317, 0, null);
    var ks = cljs.core.nthnext(vec__21317, 1);
    if (ks) {
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, update_in.cljs$core$IFn$_invoke$arity$4(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), ks, f, a));
    } else {
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
        var G__21318 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
        var G__21319 = a;
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__21318, G__21319) : f.call(null, G__21318, G__21319);
      }());
    }
  };
  var update_in__5 = function(m, p__21279, f, a, b) {
    var vec__21320 = p__21279;
    var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21320, 0, null);
    var ks = cljs.core.nthnext(vec__21320, 1);
    if (ks) {
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, update_in.cljs$core$IFn$_invoke$arity$5(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), ks, f, a, b));
    } else {
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
        var G__21321 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
        var G__21322 = a;
        var G__21323 = b;
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__21321, G__21322, G__21323) : f.call(null, G__21321, G__21322, G__21323);
      }());
    }
  };
  var update_in__6 = function(m, p__21280, f, a, b, c) {
    var vec__21324 = p__21280;
    var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21324, 0, null);
    var ks = cljs.core.nthnext(vec__21324, 1);
    if (ks) {
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, update_in.cljs$core$IFn$_invoke$arity$6(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), ks, f, a, b, c));
    } else {
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
        var G__21325 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
        var G__21326 = a;
        var G__21327 = b;
        var G__21328 = c;
        return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__21325, G__21326, G__21327, G__21328) : f.call(null, G__21325, G__21326, G__21327, G__21328);
      }());
    }
  };
  var update_in__7 = function() {
    var G__21330__delegate = function(m, p__21281, f, a, b, c, args) {
      var vec__21329 = p__21281;
      var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21329, 0, null);
      var ks = cljs.core.nthnext(vec__21329, 1);
      if (ks) {
        return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(update_in, cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), ks, f, a, cljs.core.array_seq([b, c, args], 0)));
      } else {
        return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), a, b, c, cljs.core.array_seq([args], 0)));
      }
    };
    var G__21330 = function(m, p__21281, f, a, b, c, var_args) {
      var args = null;
      if (arguments.length > 6) {
        var G__21331__i = 0, G__21331__a = new Array(arguments.length - 6);
        while (G__21331__i < G__21331__a.length) {
          G__21331__a[G__21331__i] = arguments[G__21331__i + 6];
          ++G__21331__i;
        }
        args = new cljs.core.IndexedSeq(G__21331__a, 0);
      }
      return G__21330__delegate.call(this, m, p__21281, f, a, b, c, args);
    };
    G__21330.cljs$lang$maxFixedArity = 6;
    G__21330.cljs$lang$applyTo = function(arglist__21332) {
      var m = cljs.core.first(arglist__21332);
      arglist__21332 = cljs.core.next(arglist__21332);
      var p__21281 = cljs.core.first(arglist__21332);
      arglist__21332 = cljs.core.next(arglist__21332);
      var f = cljs.core.first(arglist__21332);
      arglist__21332 = cljs.core.next(arglist__21332);
      var a = cljs.core.first(arglist__21332);
      arglist__21332 = cljs.core.next(arglist__21332);
      var b = cljs.core.first(arglist__21332);
      arglist__21332 = cljs.core.next(arglist__21332);
      var c = cljs.core.first(arglist__21332);
      var args = cljs.core.rest(arglist__21332);
      return G__21330__delegate(m, p__21281, f, a, b, c, args);
    };
    G__21330.cljs$core$IFn$_invoke$arity$variadic = G__21330__delegate;
    return G__21330;
  }();
  update_in = function(m, p__21281, f, a, b, c, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 3:
        return update_in__3.call(this, m, p__21281, f);
      case 4:
        return update_in__4.call(this, m, p__21281, f, a);
      case 5:
        return update_in__5.call(this, m, p__21281, f, a, b);
      case 6:
        return update_in__6.call(this, m, p__21281, f, a, b, c);
      default:
        var G__21333 = null;
        if (arguments.length > 6) {
          var G__21334__i = 0, G__21334__a = new Array(arguments.length - 6);
          while (G__21334__i < G__21334__a.length) {
            G__21334__a[G__21334__i] = arguments[G__21334__i + 6];
            ++G__21334__i;
          }
          G__21333 = new cljs.core.IndexedSeq(G__21334__a, 0);
        }
        return update_in__7.cljs$core$IFn$_invoke$arity$variadic(m, p__21281, f, a, b, c, G__21333);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  update_in.cljs$lang$maxFixedArity = 6;
  update_in.cljs$lang$applyTo = update_in__7.cljs$lang$applyTo;
  update_in.cljs$core$IFn$_invoke$arity$3 = update_in__3;
  update_in.cljs$core$IFn$_invoke$arity$4 = update_in__4;
  update_in.cljs$core$IFn$_invoke$arity$5 = update_in__5;
  update_in.cljs$core$IFn$_invoke$arity$6 = update_in__6;
  update_in.cljs$core$IFn$_invoke$arity$variadic = update_in__7.cljs$core$IFn$_invoke$arity$variadic;
  return update_in;
}();
cljs.core.update = function() {
  var update = null;
  var update__3 = function(m, k, f) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
      var G__21345 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__21345) : f.call(null, G__21345);
    }());
  };
  var update__4 = function(m, k, f, x) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
      var G__21346 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
      var G__21347 = x;
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__21346, G__21347) : f.call(null, G__21346, G__21347);
    }());
  };
  var update__5 = function(m, k, f, x, y) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
      var G__21348 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
      var G__21349 = x;
      var G__21350 = y;
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__21348, G__21349, G__21350) : f.call(null, G__21348, G__21349, G__21350);
    }());
  };
  var update__6 = function(m, k, f, x, y, z) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
      var G__21351 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
      var G__21352 = x;
      var G__21353 = y;
      var G__21354 = z;
      return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__21351, G__21352, G__21353, G__21354) : f.call(null, G__21351, G__21352, G__21353, G__21354);
    }());
  };
  var update__7 = function() {
    var G__21355__delegate = function(m, k, f, x, y, z, more) {
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), x, y, z, cljs.core.array_seq([more], 0)));
    };
    var G__21355 = function(m, k, f, x, y, z, var_args) {
      var more = null;
      if (arguments.length > 6) {
        var G__21356__i = 0, G__21356__a = new Array(arguments.length - 6);
        while (G__21356__i < G__21356__a.length) {
          G__21356__a[G__21356__i] = arguments[G__21356__i + 6];
          ++G__21356__i;
        }
        more = new cljs.core.IndexedSeq(G__21356__a, 0);
      }
      return G__21355__delegate.call(this, m, k, f, x, y, z, more);
    };
    G__21355.cljs$lang$maxFixedArity = 6;
    G__21355.cljs$lang$applyTo = function(arglist__21357) {
      var m = cljs.core.first(arglist__21357);
      arglist__21357 = cljs.core.next(arglist__21357);
      var k = cljs.core.first(arglist__21357);
      arglist__21357 = cljs.core.next(arglist__21357);
      var f = cljs.core.first(arglist__21357);
      arglist__21357 = cljs.core.next(arglist__21357);
      var x = cljs.core.first(arglist__21357);
      arglist__21357 = cljs.core.next(arglist__21357);
      var y = cljs.core.first(arglist__21357);
      arglist__21357 = cljs.core.next(arglist__21357);
      var z = cljs.core.first(arglist__21357);
      var more = cljs.core.rest(arglist__21357);
      return G__21355__delegate(m, k, f, x, y, z, more);
    };
    G__21355.cljs$core$IFn$_invoke$arity$variadic = G__21355__delegate;
    return G__21355;
  }();
  update = function(m, k, f, x, y, z, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 3:
        return update__3.call(this, m, k, f);
      case 4:
        return update__4.call(this, m, k, f, x);
      case 5:
        return update__5.call(this, m, k, f, x, y);
      case 6:
        return update__6.call(this, m, k, f, x, y, z);
      default:
        var G__21358 = null;
        if (arguments.length > 6) {
          var G__21359__i = 0, G__21359__a = new Array(arguments.length - 6);
          while (G__21359__i < G__21359__a.length) {
            G__21359__a[G__21359__i] = arguments[G__21359__i + 6];
            ++G__21359__i;
          }
          G__21358 = new cljs.core.IndexedSeq(G__21359__a, 0);
        }
        return update__7.cljs$core$IFn$_invoke$arity$variadic(m, k, f, x, y, z, G__21358);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  update.cljs$lang$maxFixedArity = 6;
  update.cljs$lang$applyTo = update__7.cljs$lang$applyTo;
  update.cljs$core$IFn$_invoke$arity$3 = update__3;
  update.cljs$core$IFn$_invoke$arity$4 = update__4;
  update.cljs$core$IFn$_invoke$arity$5 = update__5;
  update.cljs$core$IFn$_invoke$arity$6 = update__6;
  update.cljs$core$IFn$_invoke$arity$variadic = update__7.cljs$core$IFn$_invoke$arity$variadic;
  return update;
}();
cljs.core.VectorNode = function(edit, arr) {
  this.edit = edit;
  this.arr = arr;
};
cljs.core.VectorNode.cljs$lang$type = true;
cljs.core.VectorNode.cljs$lang$ctorStr = "cljs.core/VectorNode";
cljs.core.VectorNode.cljs$lang$ctorPrWriter = function(this__8091__auto__, writer__8092__auto__, opt__8093__auto__) {
  return cljs.core._write(writer__8092__auto__, "cljs.core/VectorNode");
};
cljs.core.__GT_VectorNode = function __GT_VectorNode(edit, arr) {
  return new cljs.core.VectorNode(edit, arr);
};
cljs.core.pv_fresh_node = function pv_fresh_node(edit) {
  return new cljs.core.VectorNode(edit, [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]);
};
cljs.core.pv_aget = function pv_aget(node, idx) {
  return node.arr[idx];
};
cljs.core.pv_aset = function pv_aset(node, idx, val) {
  return node.arr[idx] = val;
};
cljs.core.pv_clone_node = function pv_clone_node(node) {
  return new cljs.core.VectorNode(node.edit, cljs.core.aclone(node.arr));
};
cljs.core.tail_off = function tail_off(pv) {
  var cnt = pv.cnt;
  if (cnt < 32) {
    return 0;
  } else {
    return cnt - 1 >>> 5 << 5;
  }
};
cljs.core.new_path = function new_path(edit, level, node) {
  var ll = level;
  var ret = node;
  while (true) {
    if (ll === 0) {
      return ret;
    } else {
      var embed = ret;
      var r = cljs.core.pv_fresh_node(edit);
      var _ = cljs.core.pv_aset(r, 0, embed);
      var G__21360 = ll - 5;
      var G__21361 = r;
      ll = G__21360;
      ret = G__21361;
      continue;
    }
    break;
  }
};
cljs.core.push_tail = function push_tail(pv, level, parent, tailnode) {
  var ret = cljs.core.pv_clone_node(parent);
  var subidx = pv.cnt - 1 >>> level & 31;
  if (5 === level) {
    cljs.core.pv_aset(ret, subidx, tailnode);
    return ret;
  } else {
    var child = cljs.core.pv_aget(parent, subidx);
    if (!(child == null)) {
      var node_to_insert = push_tail(pv, level - 5, child, tailnode);
      cljs.core.pv_aset(ret, subidx, node_to_insert);
      return ret;
    } else {
      var node_to_insert = cljs.core.new_path(null, level - 5, tailnode);
      cljs.core.pv_aset(ret, subidx, node_to_insert);
      return ret;
    }
  }
};
cljs.core.vector_index_out_of_bounds = function vector_index_out_of_bounds(i, cnt) {
  throw new Error([cljs.core.str("No item "), cljs.core.str(i), cljs.core.str(" in vector of length "), cljs.core.str(cnt)].join(""));
};
cljs.core.first_array_for_longvec = function first_array_for_longvec(pv) {
  var node = pv.root;
  var level = pv.shift;
  while (true) {
    if (level > 0) {
      var G__21366 = cljs.core.pv_aget(node, 0);
      var G__21367 = level - 5;
      node = G__21366;
      level = G__21367;
      continue;
    } else {
      return node.arr;
    }
    break;
  }
};
cljs.core.unchecked_array_for = function unchecked_array_for(pv, i) {
  if (i >= cljs.core.tail_off(pv)) {
    return pv.tail;
  } else {
    var node = pv.root;
    var level = pv.shift;
    while (true) {
      if (level > 0) {
        var G__21368 = cljs.core.pv_aget(node, i >>> level & 31);
        var G__21369 = level - 5;
        node = G__21368;
        level = G__21369;
        continue;
      } else {
        return node.arr;
      }
      break;
    }
  }
};
cljs.core.array_for = function array_for(pv, i) {
  if (0 <= i && i < pv.cnt) {
    return cljs.core.unchecked_array_for(pv, i);
  } else {
    return cljs.core.vector_index_out_of_bounds(i, pv.cnt);
  }
};
cljs.core.do_assoc = function do_assoc(pv, level, node, i, val) {
  var ret = cljs.core.pv_clone_node(node);
  if (level === 0) {
    cljs.core.pv_aset(ret, i & 31, val);
    return ret;
  } else {
    var subidx = i >>> level & 31;
    cljs.core.pv_aset(ret, subidx, do_assoc(pv, level - 5, cljs.core.pv_aget(node, subidx), i, val));
    return ret;
  }
};
cljs.core.pop_tail = function pop_tail(pv, level, node) {
  var subidx = pv.cnt - 2 >>> level & 31;
  if (level > 5) {
    var new_child = pop_tail(pv, level - 5, cljs.core.pv_aget(node, subidx));
    if (new_child == null && subidx === 0) {
      return null;
    } else {
      var ret = cljs.core.pv_clone_node(node);
      cljs.core.pv_aset(ret, subidx, new_child);
      return ret;
    }
  } else {
    if (subidx === 0) {
      return null;
    } else {
      var ret = cljs.core.pv_clone_node(node);
      cljs.core.pv_aset(ret, subidx, null);
      return ret;
    }
  }
};
cljs.core.RangedIterator = function(i, base, arr, v, start, end) {
  this.i = i;
  this.base = base;
  this.arr = arr;
  this.v = v;
  this.start = start;
  this.end = end;
};
cljs.core.RangedIterator.prototype.hasNext = function() {
  var self__ = this;
  var this$ = this;
  return self__.i < self__.end;
};
cljs.core.RangedIterator.prototype.next = function() {
  var self__ = this;
  var this$ = this;
  if (self__.i - self__.base === 32) {
    self__.arr = cljs.core.unchecked_array_for(self__.v, self__.i);
    self__.base = self__.base + 32;
  } else {
  }
  var ret = self__.arr[self__.i & 31];
  self__.i = self__.i + 1;
  return ret;
};
cljs.core.RangedIterator.cljs$lang$type = true;
cljs.core.RangedIterator.cljs$lang$ctorStr = "cljs.core/RangedIterator";
cljs.core.RangedIterator.cljs$lang$ctorPrWriter = function(this__8091__auto__, writer__8092__auto__, opt__8093__auto__) {
  return cljs.core._write(writer__8092__auto__, "cljs.core/RangedIterator");
};
cljs.core.__GT_RangedIterator = function __GT_RangedIterator(i, base, arr, v, start, end) {
  return new cljs.core.RangedIterator(i, base, arr, v, start, end);
};
cljs.core.ranged_iterator = function ranged_iterator(v, start, end) {
  var i = start;
  return new cljs.core.RangedIterator(i, i - i % 32, start < cljs.core.count(v) ? cljs.core.unchecked_array_for(v, i) : null, v, start, end);
};
cljs.core.PersistentVector = function(meta, cnt, shift, root, tail, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.shift = shift;
  this.root = root;
  this.tail = tail;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 167668511;
  this.cljs$lang$protocol_mask$partition1$ = 8196;
};
cljs.core.PersistentVector.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentVector.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, k, null);
};
cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof k === "number") {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1, k, not_found);
  } else {
    return not_found;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(v, f, init) {
  var self__ = this;
  var v__$1 = this;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < self__.cnt) {
      var arr = cljs.core.unchecked_array_for(v__$1, i);
      var len = arr.length;
      var init__$2 = function() {
        var j = 0;
        var init__$2 = init__$1;
        while (true) {
          if (j < len) {
            var init__$3 = function() {
              var G__21379 = init__$2;
              var G__21380 = j + i;
              var G__21381 = arr[j];
              return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__21379, G__21380, G__21381) : f.call(null, G__21379, G__21380, G__21381);
            }();
            if (cljs.core.reduced_QMARK_(init__$3)) {
              return init__$3;
            } else {
              var G__21392 = j + 1;
              var G__21393 = init__$3;
              j = G__21392;
              init__$2 = G__21393;
              continue;
            }
          } else {
            return init__$2;
          }
          break;
        }
      }();
      if (cljs.core.reduced_QMARK_(init__$2)) {
        var G__21382 = init__$2;
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__21382) : cljs.core.deref.call(null, G__21382);
      } else {
        var G__21394 = i + len;
        var G__21395 = init__$2;
        i = G__21394;
        init__$1 = G__21395;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_for(coll__$1, n)[n & 31];
};
cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (0 <= n && n < self__.cnt) {
    return cljs.core.unchecked_array_for(coll__$1, n)[n & 31];
  } else {
    return not_found;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(coll, n, val) {
  var self__ = this;
  var coll__$1 = this;
  if (0 <= n && n < self__.cnt) {
    if (cljs.core.tail_off(coll__$1) <= n) {
      var new_tail = cljs.core.aclone(self__.tail);
      new_tail[n & 31] = val;
      return new cljs.core.PersistentVector(self__.meta, self__.cnt, self__.shift, self__.root, new_tail, null);
    } else {
      return new cljs.core.PersistentVector(self__.meta, self__.cnt, self__.shift, cljs.core.do_assoc(coll__$1, self__.shift, self__.root, n, val), self__.tail, null);
    }
  } else {
    if (n === self__.cnt) {
      return cljs.core._conj(coll__$1, val);
    } else {
      throw new Error([cljs.core.str("Index "), cljs.core.str(n), cljs.core.str(" out of bounds  [0,"), cljs.core.str(self__.cnt), cljs.core.str("]")].join(""));
    }
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IIterable$ = true;
cljs.core.PersistentVector.prototype.cljs$core$IIterable$_iterator$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.ranged_iterator(this$__$1, 0, self__.cnt);
};
cljs.core.PersistentVector.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentVector.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentVector(self__.meta, self__.cnt, self__.shift, self__.root, self__.tail, self__.__hash);
};
cljs.core.PersistentVector.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_key$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1, 0);
};
cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_val$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1, 1);
};
cljs.core.PersistentVector.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1, self__.cnt - 1);
  } else {
    return null;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt === 0) {
    throw new Error("Can't pop empty vector");
  } else {
    if (1 === self__.cnt) {
      return cljs.core._with_meta(cljs.core.PersistentVector.EMPTY, self__.meta);
    } else {
      if (1 < self__.cnt - cljs.core.tail_off(coll__$1)) {
        return new cljs.core.PersistentVector(self__.meta, self__.cnt - 1, self__.shift, self__.root, self__.tail.slice(0, -1), null);
      } else {
        var new_tail = cljs.core.unchecked_array_for(coll__$1, self__.cnt - 2);
        var nr = cljs.core.pop_tail(coll__$1, self__.shift, self__.root);
        var new_root = nr == null ? cljs.core.PersistentVector.EMPTY_NODE : nr;
        var cnt_1 = self__.cnt - 1;
        if (5 < self__.shift && cljs.core.pv_aget(new_root, 1) == null) {
          return new cljs.core.PersistentVector(self__.meta, cnt_1, self__.shift - 5, cljs.core.pv_aget(new_root, 0), new_tail, null);
        } else {
          return new cljs.core.PersistentVector(self__.meta, cnt_1, self__.shift, new_root, new_tail, null);
        }
      }
    }
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return new cljs.core.RSeq(coll__$1, self__.cnt - 1, null);
  } else {
    return null;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__7925__auto__ = self__.__hash;
  if (!(h__7925__auto__ == null)) {
    return h__7925__auto__;
  } else {
    var h__7925__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__7925__auto____$1;
    return h__7925__auto____$1;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  if (other instanceof cljs.core.PersistentVector) {
    if (self__.cnt === cljs.core.count(other)) {
      var me_iter = cljs.core._iterator(coll__$1);
      var you_iter = cljs.core._iterator(other);
      while (true) {
        if (cljs.core.truth_(me_iter.hasNext())) {
          var x = me_iter.next();
          var y = you_iter.next();
          if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x, y)) {
            continue;
          } else {
            return false;
          }
        } else {
          return true;
        }
        break;
      }
    } else {
      return false;
    }
  } else {
    return cljs.core.equiv_sequential(coll__$1, other);
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientVector(self__.cnt, self__.shift, function() {
    var G__21383 = self__.root;
    return cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1(G__21383) : cljs.core.tv_editable_root.call(null, G__21383);
  }(), function() {
    var G__21384 = self__.tail;
    return cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1(G__21384) : cljs.core.tv_editable_tail.call(null, G__21384);
  }());
};
cljs.core.PersistentVector.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY, self__.meta);
};
cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$2 = function(v, f) {
  var self__ = this;
  var v__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(v__$1, f);
};
cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$3 = function(v, f, init) {
  var self__ = this;
  var v__$1 = this;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < self__.cnt) {
      var arr = cljs.core.unchecked_array_for(v__$1, i);
      var len = arr.length;
      var init__$2 = function() {
        var j = 0;
        var init__$2 = init__$1;
        while (true) {
          if (j < len) {
            var init__$3 = function() {
              var G__21385 = init__$2;
              var G__21386 = arr[j];
              return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__21385, G__21386) : f.call(null, G__21385, G__21386);
            }();
            if (cljs.core.reduced_QMARK_(init__$3)) {
              return init__$3;
            } else {
              var G__21396 = j + 1;
              var G__21397 = init__$3;
              j = G__21396;
              init__$2 = G__21397;
              continue;
            }
          } else {
            return init__$2;
          }
          break;
        }
      }();
      if (cljs.core.reduced_QMARK_(init__$2)) {
        var G__21387 = init__$2;
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__21387) : cljs.core.deref.call(null, G__21387);
      } else {
        var G__21398 = i + len;
        var G__21399 = init__$2;
        i = G__21398;
        init__$1 = G__21399;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof k === "number") {
    return cljs.core._assoc_n(coll__$1, k, v);
  } else {
    throw new Error("Vector's key for assoc must be a number.");
  }
};
cljs.core.PersistentVector.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt === 0) {
    return null;
  } else {
    if (self__.cnt <= 32) {
      return new cljs.core.IndexedSeq(self__.tail, 0);
    } else {
      var G__21388 = coll__$1;
      var G__21389 = cljs.core.first_array_for_longvec(coll__$1);
      var G__21390 = 0;
      var G__21391 = 0;
      return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__21388, G__21389, G__21390, G__21391) : cljs.core.chunked_seq.call(null, G__21388, G__21389, G__21390, G__21391);
    }
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentVector(meta__$1, self__.cnt, self__.shift, self__.root, self__.tail, self__.__hash);
};
cljs.core.PersistentVector.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt - cljs.core.tail_off(coll__$1) < 32) {
    var len = self__.tail.length;
    var new_tail = new Array(len + 1);
    var n__8391__auto___21400 = len;
    var i_21401 = 0;
    while (true) {
      if (i_21401 < n__8391__auto___21400) {
        new_tail[i_21401] = self__.tail[i_21401];
        var G__21402 = i_21401 + 1;
        i_21401 = G__21402;
        continue;
      } else {
      }
      break;
    }
    new_tail[len] = o;
    return new cljs.core.PersistentVector(self__.meta, self__.cnt + 1, self__.shift, self__.root, new_tail, null);
  } else {
    var root_overflow_QMARK_ = self__.cnt >>> 5 > 1 << self__.shift;
    var new_shift = root_overflow_QMARK_ ? self__.shift + 5 : self__.shift;
    var new_root = root_overflow_QMARK_ ? function() {
      var n_r = cljs.core.pv_fresh_node(null);
      cljs.core.pv_aset(n_r, 0, self__.root);
      cljs.core.pv_aset(n_r, 1, cljs.core.new_path(null, self__.shift, new cljs.core.VectorNode(null, self__.tail)));
      return n_r;
    }() : cljs.core.push_tail(coll__$1, self__.shift, self__.root, new cljs.core.VectorNode(null, self__.tail));
    return new cljs.core.PersistentVector(self__.meta, self__.cnt + 1, new_shift, new_root, [o], null);
  }
};
cljs.core.PersistentVector.prototype.call = function() {
  var G__21403 = null;
  var G__21403__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$2(null, k);
  };
  var G__21403__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
  };
  G__21403 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__21403__2.call(this, self__, k);
      case 3:
        return G__21403__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__21403.cljs$core$IFn$_invoke$arity$2 = G__21403__2;
  G__21403.cljs$core$IFn$_invoke$arity$3 = G__21403__3;
  return G__21403;
}();
cljs.core.PersistentVector.prototype.apply = function(self__, args21378) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args21378)));
};
cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$2(null, k);
};
cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
};
cljs.core.PersistentVector.cljs$lang$type = true;
cljs.core.PersistentVector.cljs$lang$ctorStr = "cljs.core/PersistentVector";
cljs.core.PersistentVector.cljs$lang$ctorPrWriter = function(this__8091__auto__, writer__8092__auto__, opt__8093__auto__) {
  return cljs.core._write(writer__8092__auto__, "cljs.core/PersistentVector");
};
cljs.core.__GT_PersistentVector = function __GT_PersistentVector(meta, cnt, shift, root, tail, __hash) {
  return new cljs.core.PersistentVector(meta, cnt, shift, root, tail, __hash);
};
cljs.core.PersistentVector.EMPTY_NODE = new cljs.core.VectorNode(null, [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]);
cljs.core.PersistentVector.EMPTY = new cljs.core.PersistentVector(null, 0, 5, cljs.core.PersistentVector.EMPTY_NODE, [], cljs.core.empty_ordered_hash);
cljs.core.PersistentVector.fromArray = function(xs, no_clone) {
  var l = xs.length;
  var xs__$1 = no_clone ? xs : cljs.core.aclone(xs);
  if (l < 32) {
    return new cljs.core.PersistentVector(null, l, 5, cljs.core.PersistentVector.EMPTY_NODE, xs__$1, null);
  } else {
    var node = xs__$1.slice(0, 32);
    var v = new cljs.core.PersistentVector(null, 32, 5, cljs.core.PersistentVector.EMPTY_NODE, node, null);
    var i = 32;
    var out = v.cljs$core$IEditableCollection$_as_transient$arity$1(null);
    while (true) {
      if (i < l) {
        var G__21404 = i + 1;
        var G__21405 = cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(out, xs__$1[i]);
        i = G__21404;
        out = G__21405;
        continue;
      } else {
        return cljs.core.persistent_BANG_(out);
      }
      break;
    }
  }
};
cljs.core.PersistentVector.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__8482__auto__ = this;
  return cljs.core.es6_iterator(this__8482__auto__);
};
cljs.core.vec = function vec(coll) {
  if (coll instanceof Array) {
    return cljs.core.PersistentVector.fromArray(coll, true);
  } else {
    return cljs.core._persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_, cljs.core._as_transient(cljs.core.PersistentVector.EMPTY), coll));
  }
};
cljs.core.vector = function() {
  var vector__delegate = function(args) {
    if (args instanceof cljs.core.IndexedSeq && args.i === 0) {
      return cljs.core.PersistentVector.fromArray(args.arr, true);
    } else {
      return cljs.core.vec(args);
    }
  };
  var vector = function(var_args) {
    var args = null;
    if (arguments.length > 0) {
      var G__21406__i = 0, G__21406__a = new Array(arguments.length - 0);
      while (G__21406__i < G__21406__a.length) {
        G__21406__a[G__21406__i] = arguments[G__21406__i + 0];
        ++G__21406__i;
      }
      args = new cljs.core.IndexedSeq(G__21406__a, 0);
    }
    return vector__delegate.call(this, args);
  };
  vector.cljs$lang$maxFixedArity = 0;
  vector.cljs$lang$applyTo = function(arglist__21407) {
    var args = cljs.core.seq(arglist__21407);
    return vector__delegate(args);
  };
  vector.cljs$core$IFn$_invoke$arity$variadic = vector__delegate;
  return vector;
}();
cljs.core.ChunkedSeq = function(vec, node, i, off, meta, __hash) {
  this.vec = vec;
  this.node = node;
  this.i = i;
  this.off = off;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32375020;
  this.cljs$lang$protocol_mask$partition1$ = 1536;
};
cljs.core.ChunkedSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.ChunkedSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ChunkedSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.off + 1 < self__.node.length) {
    var s = function() {
      var G__21408 = self__.vec;
      var G__21409 = self__.node;
      var G__21410 = self__.i;
      var G__21411 = self__.off + 1;
      return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__21408, G__21409, G__21410, G__21411) : cljs.core.chunked_seq.call(null, G__21408, G__21409, G__21410, G__21411);
    }();
    if (s == null) {
      return null;
    } else {
      return s;
    }
  } else {
    return cljs.core._chunked_next(coll__$1);
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__7925__auto__ = self__.__hash;
  if (!(h__7925__auto__ == null)) {
    return h__7925__auto__;
  } else {
    var h__7925__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__7925__auto____$1;
    return h__7925__auto____$1;
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY, self__.meta);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(function() {
    var G__21412 = self__.vec;
    var G__21413 = self__.i + self__.off;
    var G__21414 = cljs.core.count(self__.vec);
    return cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(G__21412, G__21413, G__21414) : cljs.core.subvec.call(null, G__21412, G__21413, G__21414);
  }(), f);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(function() {
    var G__21415 = self__.vec;
    var G__21416 = self__.i + self__.off;
    var G__21417 = cljs.core.count(self__.vec);
    return cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(G__21415, G__21416, G__21417) : cljs.core.subvec.call(null, G__21415, G__21416, G__21417);
  }(), f, start);
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.node[self__.off];
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.off + 1 < self__.node.length) {
    var s = function() {
      var G__21418 = self__.vec;
      var G__21419 = self__.node;
      var G__21420 = self__.i;
      var G__21421 = self__.off + 1;
      return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__21418, G__21419, G__21420, G__21421) : cljs.core.chunked_seq.call(null, G__21418, G__21419, G__21420, G__21421);
    }();
    if (s == null) {
      return cljs.core.List.EMPTY;
    } else {
      return s;
    }
  } else {
    return cljs.core._chunked_rest(coll__$1);
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$2(self__.node, self__.off);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var end = self__.i + self__.node.length;
  if (end < cljs.core._count(self__.vec)) {
    var G__21422 = self__.vec;
    var G__21423 = cljs.core.unchecked_array_for(self__.vec, end);
    var G__21424 = end;
    var G__21425 = 0;
    return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__21422, G__21423, G__21424, G__21425) : cljs.core.chunked_seq.call(null, G__21422, G__21423, G__21424, G__21425);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, m) {
  var self__ = this;
  var coll__$1 = this;
  var G__21426 = self__.vec;
  var G__21427 = self__.node;
  var G__21428 = self__.i;
  var G__21429 = self__.off;
  var G__21430 = m;
  return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5(G__21426, G__21427, G__21428, G__21429, G__21430) : cljs.core.chunked_seq.call(null, G__21426, G__21427, G__21428, G__21429, G__21430);
};
cljs.core.ChunkedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var end = self__.i + self__.node.length;
  if (end < cljs.core._count(self__.vec)) {
    var G__21431 = self__.vec;
    var G__21432 = cljs.core.unchecked_array_for(self__.vec, end);
    var G__21433 = end;
    var G__21434 = 0;
    return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__21431, G__21432, G__21433, G__21434) : cljs.core.chunked_seq.call(null, G__21431, G__21432, G__21433, G__21434);
  } else {
    return null;
  }
};
cljs.core.ChunkedSeq.cljs$lang$type = true;
cljs.core.ChunkedSeq.cljs$lang$ctorStr = "cljs.core/ChunkedSeq";
cljs.core.ChunkedSeq.cljs$lang$ctorPrWriter = function(this__8091__auto__, writer__8092__auto__, opt__8093__auto__) {
  return cljs.core._write(writer__8092__auto__, "cljs.core/ChunkedSeq");
};
cljs.core.__GT_ChunkedSeq = function __GT_ChunkedSeq(vec, node, i, off, meta, __hash) {
  return new cljs.core.ChunkedSeq(vec, node, i, off, meta, __hash);
};
cljs.core.ChunkedSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__8482__auto__ = this;
  return cljs.core.es6_iterator(this__8482__auto__);
};
cljs.core.chunked_seq = function() {
  var chunked_seq = null;
  var chunked_seq__3 = function(vec, i, off) {
    return new cljs.core.ChunkedSeq(vec, cljs.core.array_for(vec, i), i, off, null, null);
  };
  var chunked_seq__4 = function(vec, node, i, off) {
    return new cljs.core.ChunkedSeq(vec, node, i, off, null, null);
  };
  var chunked_seq__5 = function(vec, node, i, off, meta) {
    return new cljs.core.ChunkedSeq(vec, node, i, off, meta, null);
  };
  chunked_seq = function(vec, node, i, off, meta) {
    switch(arguments.length) {
      case 3:
        return chunked_seq__3.call(this, vec, node, i);
      case 4:
        return chunked_seq__4.call(this, vec, node, i, off);
      case 5:
        return chunked_seq__5.call(this, vec, node, i, off, meta);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  chunked_seq.cljs$core$IFn$_invoke$arity$3 = chunked_seq__3;
  chunked_seq.cljs$core$IFn$_invoke$arity$4 = chunked_seq__4;
  chunked_seq.cljs$core$IFn$_invoke$arity$5 = chunked_seq__5;
  return chunked_seq;
}();
cljs.core.Subvec = function(meta, v, start, end, __hash) {
  this.meta = meta;
  this.v = v;
  this.start = start;
  this.end = end;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 166617887;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.Subvec.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.Subvec.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, k, null);
};
cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof k === "number") {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1, k, not_found);
  } else {
    return not_found;
  }
};
cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  if (n < 0 || self__.end <= self__.start + n) {
    return cljs.core.vector_index_out_of_bounds(n, self__.end - self__.start);
  } else {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v, self__.start + n);
  }
};
cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (n < 0 || self__.end <= self__.start + n) {
    return not_found;
  } else {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(self__.v, self__.start + n, not_found);
  }
};
cljs.core.Subvec.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(coll, n, val) {
  var self__ = this;
  var coll__$1 = this;
  var v_pos = self__.start + n;
  var G__21436 = self__.meta;
  var G__21437 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.v, v_pos, val);
  var G__21438 = self__.start;
  var G__21439 = function() {
    var x__7821__auto__ = self__.end;
    var y__7822__auto__ = v_pos + 1;
    return x__7821__auto__ > y__7822__auto__ ? x__7821__auto__ : y__7822__auto__;
  }();
  var G__21440 = null;
  return cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__21436, G__21437, G__21438, G__21439, G__21440) : cljs.core.build_subvec.call(null, G__21436, G__21437, G__21438, G__21439, G__21440);
};
cljs.core.Subvec.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.Subvec.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Subvec(self__.meta, self__.v, self__.start, self__.end, self__.__hash);
};
cljs.core.Subvec.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.end - self__.start;
};
cljs.core.Subvec.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v, self__.end - 1);
};
cljs.core.Subvec.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.start === self__.end) {
    throw new Error("Can't pop empty vector");
  } else {
    var G__21441 = self__.meta;
    var G__21442 = self__.v;
    var G__21443 = self__.start;
    var G__21444 = self__.end - 1;
    var G__21445 = null;
    return cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__21441, G__21442, G__21443, G__21444, G__21445) : cljs.core.build_subvec.call(null, G__21441, G__21442, G__21443, G__21444, G__21445);
  }
};
cljs.core.Subvec.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (!(self__.start === self__.end)) {
    return new cljs.core.RSeq(coll__$1, self__.end - self__.start - 1, null);
  } else {
    return null;
  }
};
cljs.core.Subvec.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__7925__auto__ = self__.__hash;
  if (!(h__7925__auto__ == null)) {
    return h__7925__auto__;
  } else {
    var h__7925__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__7925__auto____$1;
    return h__7925__auto____$1;
  }
};
cljs.core.Subvec.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.Subvec.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY, self__.meta);
};
cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(coll__$1, f);
};
cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start__$1) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(coll__$1, f, start__$1);
};
cljs.core.Subvec.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, key, val) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof key === "number") {
    return cljs.core._assoc_n(coll__$1, key, val);
  } else {
    throw new Error("Subvec's key for assoc must be a number.");
  }
};
cljs.core.Subvec.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var subvec_seq = function(coll__$1) {
    return function subvec_seq(i) {
      if (i === self__.end) {
        return null;
      } else {
        return cljs.core.cons(cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v, i), new cljs.core.LazySeq(null, function(coll__$1) {
          return function() {
            return subvec_seq(i + 1);
          };
        }(coll__$1), null, null));
      }
    };
  }(coll__$1);
  return subvec_seq(self__.start);
};
cljs.core.Subvec.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  var G__21447 = meta__$1;
  var G__21448 = self__.v;
  var G__21449 = self__.start;
  var G__21450 = self__.end;
  var G__21451 = self__.__hash;
  return cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__21447, G__21448, G__21449, G__21450, G__21451) : cljs.core.build_subvec.call(null, G__21447, G__21448, G__21449, G__21450, G__21451);
};
cljs.core.Subvec.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  var G__21452 = self__.meta;
  var G__21453 = cljs.core._assoc_n(self__.v, self__.end, o);
  var G__21454 = self__.start;
  var G__21455 = self__.end + 1;
  var G__21456 = null;
  return cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__21452, G__21453, G__21454, G__21455, G__21456) : cljs.core.build_subvec.call(null, G__21452, G__21453, G__21454, G__21455, G__21456);
};
cljs.core.Subvec.prototype.call = function() {
  var G__21457 = null;
  var G__21457__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$2(null, k);
  };
  var G__21457__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
  };
  G__21457 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__21457__2.call(this, self__, k);
      case 3:
        return G__21457__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__21457.cljs$core$IFn$_invoke$arity$2 = G__21457__2;
  G__21457.cljs$core$IFn$_invoke$arity$3 = G__21457__3;
  return G__21457;
}();
cljs.core.Subvec.prototype.apply = function(self__, args21435) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args21435)));
};
cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$2(null, k);
};
cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
};
cljs.core.Subvec.cljs$lang$type = true;
cljs.core.Subvec.cljs$lang$ctorStr = "cljs.core/Subvec";
cljs.core.Subvec.cljs$lang$ctorPrWriter = function(this__8091__auto__, writer__8092__auto__, opt__8093__auto__) {
  return cljs.core._write(writer__8092__auto__, "cljs.core/Subvec");
};
cljs.core.__GT_Subvec = function __GT_Subvec(meta, v, start, end, __hash) {
  return new cljs.core.Subvec(meta, v, start, end, __hash);
};
cljs.core.Subvec.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__8482__auto__ = this;
  return cljs.core.es6_iterator(this__8482__auto__);
};
cljs.core.build_subvec = function build_subvec(meta, v, start, end, __hash) {
  while (true) {
    if (v instanceof cljs.core.Subvec) {
      var G__21458 = meta;
      var G__21459 = v.v;
      var G__21460 = v.start + start;
      var G__21461 = v.start + end;
      var G__21462 = __hash;
      meta = G__21458;
      v = G__21459;
      start = G__21460;
      end = G__21461;
      __hash = G__21462;
      continue;
    } else {
      var c = cljs.core.count(v);
      if (start < 0 || end < 0 || start > c || end > c) {
        throw new Error("Index out of bounds");
      } else {
      }
      return new cljs.core.Subvec(meta, v, start, end, __hash);
    }
    break;
  }
};
cljs.core.subvec = function() {
  var subvec = null;
  var subvec__2 = function(v, start) {
    return subvec.cljs$core$IFn$_invoke$arity$3(v, start, cljs.core.count(v));
  };
  var subvec__3 = function(v, start, end) {
    return cljs.core.build_subvec(null, v, start, end, null);
  };
  subvec = function(v, start, end) {
    switch(arguments.length) {
      case 2:
        return subvec__2.call(this, v, start);
      case 3:
        return subvec__3.call(this, v, start, end);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  subvec.cljs$core$IFn$_invoke$arity$2 = subvec__2;
  subvec.cljs$core$IFn$_invoke$arity$3 = subvec__3;
  return subvec;
}();
cljs.core.tv_ensure_editable = function tv_ensure_editable(edit, node) {
  if (edit === node.edit) {
    return node;
  } else {
    return new cljs.core.VectorNode(edit, cljs.core.aclone(node.arr));
  }
};
cljs.core.tv_editable_root = function tv_editable_root(node) {
  return new cljs.core.VectorNode(function() {
    var obj21469 = {};
    return obj21469;
  }(), cljs.core.aclone(node.arr));
};
cljs.core.tv_editable_tail = function tv_editable_tail(tl) {
  var ret = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
  cljs.core.array_copy(tl, 0, ret, 0, tl.length);
  return ret;
};
cljs.core.tv_push_tail = function tv_push_tail(tv, level, parent, tail_node) {
  var ret = cljs.core.tv_ensure_editable(tv.root.edit, parent);
  var subidx = tv.cnt - 1 >>> level & 31;
  cljs.core.pv_aset(ret, subidx, level === 5 ? tail_node : function() {
    var child = cljs.core.pv_aget(ret, subidx);
    if (!(child == null)) {
      return tv_push_tail(tv, level - 5, child, tail_node);
    } else {
      return cljs.core.new_path(tv.root.edit, level - 5, tail_node);
    }
  }());
  return ret;
};
cljs.core.tv_pop_tail = function tv_pop_tail(tv, level, node) {
  var node__$1 = cljs.core.tv_ensure_editable(tv.root.edit, node);
  var subidx = tv.cnt - 2 >>> level & 31;
  if (level > 5) {
    var new_child = tv_pop_tail(tv, level - 5, cljs.core.pv_aget(node__$1, subidx));
    if (new_child == null && subidx === 0) {
      return null;
    } else {
      cljs.core.pv_aset(node__$1, subidx, new_child);
      return node__$1;
    }
  } else {
    if (subidx === 0) {
      return null;
    } else {
      cljs.core.pv_aset(node__$1, subidx, null);
      return node__$1;
    }
  }
};
cljs.core.unchecked_editable_array_for = function unchecked_editable_array_for(tv, i) {
  if (i >= cljs.core.tail_off(tv)) {
    return tv.tail;
  } else {
    var root = tv.root;
    var node = root;
    var level = tv.shift;
    while (true) {
      if (level > 0) {
        var G__21477 = cljs.core.tv_ensure_editable(root.edit, cljs.core.pv_aget(node, i >>> level & 31));
        var G__21478 = level - 5;
        node = G__21477;
        level = G__21478;
        continue;
      } else {
        return node.arr;
      }
      break;
    }
  }
};
cljs.core.TransientVector = function(cnt, shift, root, tail) {
  this.cnt = cnt;
  this.shift = shift;
  this.root = root;
  this.tail = tail;
  this.cljs$lang$protocol_mask$partition0$ = 275;
  this.cljs$lang$protocol_mask$partition1$ = 88;
};
cljs.core.TransientVector.prototype.call = function() {
  var G__21482 = null;
  var G__21482__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__21482__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__21482 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__21482__2.call(this, self__, k);
      case 3:
        return G__21482__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__21482.cljs$core$IFn$_invoke$arity$2 = G__21482__2;
  G__21482.cljs$core$IFn$_invoke$arity$3 = G__21482__3;
  return G__21482;
}();
cljs.core.TransientVector.prototype.apply = function(self__, args21479) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args21479)));
};
cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, k, null);
};
cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof k === "number") {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1, k, not_found);
  } else {
    return not_found;
  }
};
cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.root.edit) {
    return cljs.core.array_for(coll__$1, n)[n & 31];
  } else {
    throw new Error("nth after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (0 <= n && n < self__.cnt) {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1, n);
  } else {
    return not_found;
  }
};
cljs.core.TransientVector.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.root.edit) {
    return self__.cnt;
  } else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3 = function(tcoll, n, val) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    if (0 <= n && n < self__.cnt) {
      if (cljs.core.tail_off(tcoll__$1) <= n) {
        self__.tail[n & 31] = val;
        return tcoll__$1;
      } else {
        var new_root = function(tcoll__$1) {
          return function go(level, node) {
            var node__$1 = cljs.core.tv_ensure_editable(self__.root.edit, node);
            if (level === 0) {
              cljs.core.pv_aset(node__$1, n & 31, val);
              return node__$1;
            } else {
              var subidx = n >>> level & 31;
              cljs.core.pv_aset(node__$1, subidx, go(level - 5, cljs.core.pv_aget(node__$1, subidx)));
              return node__$1;
            }
          };
        }(tcoll__$1).call(null, self__.shift, self__.root);
        self__.root = new_root;
        return tcoll__$1;
      }
    } else {
      if (n === self__.cnt) {
        return cljs.core._conj_BANG_(tcoll__$1, val);
      } else {
        throw new Error([cljs.core.str("Index "), cljs.core.str(n), cljs.core.str(" out of bounds for TransientVector of length"), cljs.core.str(self__.cnt)].join(""));
      }
    }
  } else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_pop_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    if (self__.cnt === 0) {
      throw new Error("Can't pop empty vector");
    } else {
      if (1 === self__.cnt) {
        self__.cnt = 0;
        return tcoll__$1;
      } else {
        if ((self__.cnt - 1 & 31) > 0) {
          self__.cnt = self__.cnt - 1;
          return tcoll__$1;
        } else {
          var new_tail = cljs.core.unchecked_editable_array_for(tcoll__$1, self__.cnt - 2);
          var new_root = function() {
            var nr = cljs.core.tv_pop_tail(tcoll__$1, self__.shift, self__.root);
            if (!(nr == null)) {
              return nr;
            } else {
              return new cljs.core.VectorNode(self__.root.edit, [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]);
            }
          }();
          if (5 < self__.shift && cljs.core.pv_aget(new_root, 1) == null) {
            var new_root__$1 = cljs.core.tv_ensure_editable(self__.root.edit, cljs.core.pv_aget(new_root, 0));
            self__.root = new_root__$1;
            self__.shift = self__.shift - 5;
            self__.cnt = self__.cnt - 1;
            self__.tail = new_tail;
            return tcoll__$1;
          } else {
            self__.root = new_root;
            self__.cnt = self__.cnt - 1;
            self__.tail = new_tail;
            return tcoll__$1;
          }
        }
      }
    }
  } else {
    throw new Error("pop! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var self__ = this;
  var tcoll__$1 = this;
  if (typeof key === "number") {
    return cljs.core._assoc_n_BANG_(tcoll__$1, key, val);
  } else {
    throw new Error("TransientVector's key for assoc! must be a number.");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    if (self__.cnt - cljs.core.tail_off(tcoll__$1) < 32) {
      self__.tail[self__.cnt & 31] = o;
      self__.cnt = self__.cnt + 1;
      return tcoll__$1;
    } else {
      var tail_node = new cljs.core.VectorNode(self__.root.edit, self__.tail);
      var new_tail = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
      new_tail[0] = o;
      self__.tail = new_tail;
      if (self__.cnt >>> 5 > 1 << self__.shift) {
        var new_root_array = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
        var new_shift = self__.shift + 5;
        new_root_array[0] = self__.root;
        new_root_array[1] = cljs.core.new_path(self__.root.edit, self__.shift, tail_node);
        self__.root = new cljs.core.VectorNode(self__.root.edit, new_root_array);
        self__.shift = new_shift;
        self__.cnt = self__.cnt + 1;
        return tcoll__$1;
      } else {
        var new_root = cljs.core.tv_push_tail(tcoll__$1, self__.shift, self__.root, tail_node);
        self__.root = new_root;
        self__.cnt = self__.cnt + 1;
        return tcoll__$1;
      }
    }
  } else {
    throw new Error("conj! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    self__.root.edit = null;
    var len = self__.cnt - cljs.core.tail_off(tcoll__$1);
    var trimmed_tail = new Array(len);
    cljs.core.array_copy(self__.tail, 0, trimmed_tail, 0, len);
    return new cljs.core.PersistentVector(null, self__.cnt, self__.shift, self__.root, trimmed_tail, null);
  } else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.TransientVector.cljs$lang$type = true;
cljs.core.TransientVector.cljs$lang$ctorStr = "cljs.core/TransientVector";
cljs.core.TransientVector.cljs$lang$ctorPrWriter = function(this__8091__auto__, writer__8092__auto__, opt__8093__auto__) {
  return cljs.core._write(writer__8092__auto__, "cljs.core/TransientVector");
};
cljs.core.__GT_TransientVector = function __GT_TransientVector(cnt, shift, root, tail) {
  return new cljs.core.TransientVector(cnt, shift, root, tail);
};
cljs.core.PersistentQueueSeq = function(meta, front, rear, __hash) {
  this.meta = meta;
  this.front = front;
  this.rear = rear;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31850572;
};
cljs.core.PersistentQueueSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentQueueSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__7925__auto__ = self__.__hash;
  if (!(h__7925__auto__ == null)) {
    return h__7925__auto__;
  } else {
    var h__7925__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__7925__auto____$1;
    return h__7925__auto____$1;
  }
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first(self__.front);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var temp__4124__auto__ = cljs.core.next(self__.front);
  if (temp__4124__auto__) {
    var f1 = temp__4124__auto__;
    return new cljs.core.PersistentQueueSeq(self__.meta, f1, self__.rear, null);
  } else {
    if (self__.rear == null) {
      return cljs.core._empty(coll__$1);
    } else {
      return new cljs.core.PersistentQueueSeq(self__.meta, self__.rear, null, null);
    }
  }
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentQueueSeq(meta__$1, self__.front, self__.rear, self__.__hash);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.PersistentQueueSeq.cljs$lang$type = true;
cljs.core.PersistentQueueSeq.cljs$lang$ctorStr = "cljs.core/PersistentQueueSeq";
cljs.core.PersistentQueueSeq.cljs$lang$ctorPrWriter = function(this__8091__auto__, writer__8092__auto__, opt__8093__auto__) {
  return cljs.core._write(writer__8092__auto__, "cljs.core/PersistentQueueSeq");
};
cljs.core.__GT_PersistentQueueSeq = function __GT_PersistentQueueSeq(meta, front, rear, __hash) {
  return new cljs.core.PersistentQueueSeq(meta, front, rear, __hash);
};
cljs.core.PersistentQueueSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__8482__auto__ = this;
  return cljs.core.es6_iterator(this__8482__auto__);
};
cljs.core.PersistentQueue = function(meta, count, front, rear, __hash) {
  this.meta = meta;
  this.count = count;
  this.front = front;
  this.rear = rear;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 31858766;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.PersistentQueue.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentQueue.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentQueue.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentQueue.prototype.cljs$core$ICloneable$_clone$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentQueue(self__.meta, self__.count, self__.front, self__.rear, self__.__hash);
};
cljs.core.PersistentQueue.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.count;
};
cljs.core.PersistentQueue.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first(self__.front);
};
cljs.core.PersistentQueue.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.truth_(self__.front)) {
    var temp__4124__auto__ = cljs.core.next(self__.front);
    if (temp__4124__auto__) {
      var f1 = temp__4124__auto__;
      return new cljs.core.PersistentQueue(self__.meta, self__.count - 1, f1, self__.rear, null);
    } else {
      return new cljs.core.PersistentQueue(self__.meta, self__.count - 1, cljs.core.seq(self__.rear), cljs.core.PersistentVector.EMPTY, null);
    }
  } else {
    return coll__$1;
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__7925__auto__ = self__.__hash;
  if (!(h__7925__auto__ == null)) {
    return h__7925__auto__;
  } else {
    var h__7925__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__7925__auto____$1;
    return h__7925__auto____$1;
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.PersistentQueue.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.PersistentQueue.EMPTY, self__.meta);
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first(self__.front);
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.rest(cljs.core.seq(coll__$1));
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var rear__$1 = cljs.core.seq(self__.rear);
  if (cljs.core.truth_(function() {
    var or__7504__auto__ = self__.front;
    if (cljs.core.truth_(or__7504__auto__)) {
      return or__7504__auto__;
    } else {
      return rear__$1;
    }
  }())) {
    return new cljs.core.PersistentQueueSeq(null, self__.front, cljs.core.seq(rear__$1), null);
  } else {
    return null;
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentQueue(meta__$1, self__.count, self__.front, self__.rear, self__.__hash);
};
cljs.core.PersistentQueue.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.truth_(self__.front)) {
    return new cljs.core.PersistentQueue(self__.meta, self__.count + 1, self__.front, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(function() {
      var or__7504__auto__ = self__.rear;
      if (cljs.core.truth_(or__7504__auto__)) {
        return or__7504__auto__;
      } else {
        return cljs.core.PersistentVector.EMPTY;
      }
    }(), o), null);
  } else {
    return new cljs.core.PersistentQueue(self__.meta, self__.count + 1, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(self__.front, o), cljs.core.PersistentVector.EMPTY, null);
  }
};
cljs.core.PersistentQueue.cljs$lang$type = true;
cljs.core.PersistentQueue.cljs$lang$ctorStr = "cljs.core/PersistentQueue";
cljs.core.PersistentQueue.cljs$lang$ctorPrWriter = function(this__8091__auto__, writer__8092__auto__, opt__8093__auto__) {
  return cljs.core._write(writer__8092__auto__, "cljs.core/PersistentQueue");
};
cljs.core.__GT_PersistentQueue = function __GT_PersistentQueue(meta, count, front, rear, __hash) {
  return new cljs.core.PersistentQueue(meta, count, front, rear, __hash);
};
cljs.core.PersistentQueue.EMPTY = new cljs.core.PersistentQueue(null, 0, null, cljs.core.PersistentVector.EMPTY, cljs.core.empty_ordered_hash);
cljs.core.PersistentQueue.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__8482__auto__ = this;
  return cljs.core.es6_iterator(this__8482__auto__);
};
cljs.core.NeverEquiv = function() {
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2097152;
};
cljs.core.NeverEquiv.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var self__ = this;
  var o__$1 = this;
  return false;
};
cljs.core.NeverEquiv.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.NeverEquiv.cljs$lang$type = true;
cljs.core.NeverEquiv.cljs$lang$ctorStr = "cljs.core/NeverEquiv";
cljs.core.NeverEquiv.cljs$lang$ctorPrWriter = function(this__8091__auto__, writer__8092__auto__, opt__8093__auto__) {
  return cljs.core._write(writer__8092__auto__, "cljs.core/NeverEquiv");
};
cljs.core.__GT_NeverEquiv = function __GT_NeverEquiv() {
  return new cljs.core.NeverEquiv;
};
cljs.core.never_equiv = new cljs.core.NeverEquiv;
cljs.core.equiv_map = function equiv_map(x, y) {
  return cljs.core.boolean$(cljs.core.map_QMARK_(y) ? cljs.core.count(x) === cljs.core.count(y) ? cljs.core.every_QMARK_(cljs.core.identity, cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(xkv) {
    return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(y, cljs.core.first(xkv), cljs.core.never_equiv), cljs.core.second(xkv));
  }, x)) : null : null);
};
cljs.core.scan_array = function scan_array(incr, k, array) {
  var len = array.length;
  var i = 0;
  while (true) {
    if (i < len) {
      if (k === array[i]) {
        return i;
      } else {
        var G__21483 = i + incr;
        i = G__21483;
        continue;
      }
    } else {
      return null;
    }
    break;
  }
};
cljs.core.obj_map_compare_keys = function obj_map_compare_keys(a, b) {
  var a__$1 = cljs.core.hash(a);
  var b__$1 = cljs.core.hash(b);
  if (a__$1 < b__$1) {
    return-1;
  } else {
    if (a__$1 > b__$1) {
      return 1;
    } else {
      return 0;
    }
  }
};
cljs.core.obj_map__GT_hash_map = function obj_map__GT_hash_map(m, k, v) {
  var ks = m.keys;
  var len = ks.length;
  var so = m.strobj;
  var mm = cljs.core.meta(m);
  var i = 0;
  var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
  while (true) {
    if (i < len) {
      var k__$1 = ks[i];
      var G__21484 = i + 1;
      var G__21485 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out, k__$1, so[k__$1]);
      i = G__21484;
      out = G__21485;
      continue;
    } else {
      return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out, k, v)), mm);
    }
    break;
  }
};
cljs.core.obj_clone = function obj_clone(obj, ks) {
  var new_obj = function() {
    var obj21489 = {};
    return obj21489;
  }();
  var l = ks.length;
  var i_21490 = 0;
  while (true) {
    if (i_21490 < l) {
      var k_21491 = ks[i_21490];
      new_obj[k_21491] = obj[k_21491];
      var G__21492 = i_21490 + 1;
      i_21490 = G__21492;
      continue;
    } else {
    }
    break;
  }
  return new_obj;
};
cljs.core.ObjMap = function(meta, keys, strobj, update_count, __hash) {
  this.meta = meta;
  this.keys = keys;
  this.strobj = strobj;
  this.update_count = update_count;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 16123663;
  this.cljs$lang$protocol_mask$partition1$ = 4;
};
cljs.core.ObjMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.ObjMap.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, k, null);
};
cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.truth_(function() {
    var and__7492__auto__ = function() {
      var G__21496 = k;
      return goog.isString(G__21496);
    }();
    if (cljs.core.truth_(and__7492__auto__)) {
      return!(cljs.core.scan_array(1, k, self__.keys) == null);
    } else {
      return and__7492__auto__;
    }
  }())) {
    return self__.strobj[k];
  } else {
    return not_found;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  var len = self__.keys.length;
  var keys__$1 = self__.keys.sort(cljs.core.obj_map_compare_keys);
  var init__$1 = init;
  while (true) {
    if (cljs.core.seq(keys__$1)) {
      var k = cljs.core.first(keys__$1);
      var init__$2 = function() {
        var G__21497 = init__$1;
        var G__21498 = k;
        var G__21499 = self__.strobj[k];
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__21497, G__21498, G__21499) : f.call(null, G__21497, G__21498, G__21499);
      }();
      if (cljs.core.reduced_QMARK_(init__$2)) {
        var G__21500 = init__$2;
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__21500) : cljs.core.deref.call(null, G__21500);
      } else {
        var G__21506 = cljs.core.rest(keys__$1);
        var G__21507 = init__$2;
        keys__$1 = G__21506;
        init__$1 = G__21507;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ObjMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.keys.length;
};
cljs.core.ObjMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__7925__auto__ = self__.__hash;
  if (!(h__7925__auto__ == null)) {
    return h__7925__auto__;
  } else {
    var h__7925__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
    self__.__hash = h__7925__auto____$1;
    return h__7925__auto____$1;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_map(coll__$1, other);
};
cljs.core.ObjMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.transient$(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY, coll__$1));
};
cljs.core.ObjMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.ObjMap.EMPTY, self__.meta);
};
cljs.core.ObjMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.truth_(function() {
    var and__7492__auto__ = function() {
      var G__21502 = k;
      return goog.isString(G__21502);
    }();
    if (cljs.core.truth_(and__7492__auto__)) {
      return!(cljs.core.scan_array(1, k, self__.keys) == null);
    } else {
      return and__7492__auto__;
    }
  }())) {
    var new_keys = cljs.core.aclone(self__.keys);
    var new_strobj = cljs.core.obj_clone(self__.strobj, self__.keys);
    new_keys.splice(cljs.core.scan_array(1, k, new_keys), 1);
    delete new_strobj[k];
    return new cljs.core.ObjMap(self__.meta, new_keys, new_strobj, self__.update_count + 1, null);
  } else {
    return coll__$1;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.truth_(function() {
    var G__21503 = k;
    return goog.isString(G__21503);
  }())) {
    if (self__.update_count > cljs.core.ObjMap.HASHMAP_THRESHOLD || self__.keys.length >= cljs.core.ObjMap.HASHMAP_THRESHOLD) {
      return cljs.core.obj_map__GT_hash_map(coll__$1, k, v);
    } else {
      if (!(cljs.core.scan_array(1, k, self__.keys) == null)) {
        var new_strobj = cljs.core.obj_clone(self__.strobj, self__.keys);
        new_strobj[k] = v;
        return new cljs.core.ObjMap(self__.meta, self__.keys, new_strobj, self__.update_count + 1, null);
      } else {
        var new_strobj = cljs.core.obj_clone(self__.strobj, self__.keys);
        var new_keys = cljs.core.aclone(self__.keys);
        new_strobj[k] = v;
        new_keys.push(k);
        return new cljs.core.ObjMap(self__.meta, new_keys, new_strobj, self__.update_count + 1, null);
      }
    }
  } else {
    return cljs.core.obj_map__GT_hash_map(coll__$1, k, v);
  }
};
cljs.core.ObjMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.truth_(function() {
    var and__7492__auto__ = function() {
      var G__21505 = k;
      return goog.isString(G__21505);
    }();
    if (cljs.core.truth_(and__7492__auto__)) {
      return!(cljs.core.scan_array(1, k, self__.keys) == null);
    } else {
      return and__7492__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
cljs.core.ObjMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.keys.length > 0) {
    return cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(coll__$1) {
      return function(p1__21493_SHARP_) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [p1__21493_SHARP_, self__.strobj[p1__21493_SHARP_]], null);
      };
    }(coll__$1), self__.keys.sort(cljs.core.obj_map_compare_keys));
  } else {
    return null;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ObjMap(meta__$1, self__.keys, self__.strobj, self__.update_count, self__.__hash);
};
cljs.core.ObjMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_(entry)) {
    return cljs.core._assoc(coll__$1, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 1));
  } else {
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj, coll__$1, entry);
  }
};
cljs.core.ObjMap.prototype.call = function() {
  var G__21508 = null;
  var G__21508__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__21508__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__21508 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__21508__2.call(this, self__, k);
      case 3:
        return G__21508__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__21508.cljs$core$IFn$_invoke$arity$2 = G__21508__2;
  G__21508.cljs$core$IFn$_invoke$arity$3 = G__21508__3;
  return G__21508;
}();
cljs.core.ObjMap.prototype.apply = function(self__, args21494) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args21494)));
};
cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.ObjMap.cljs$lang$type = true;
cljs.core.ObjMap.cljs$lang$ctorStr = "cljs.core/ObjMap";
cljs.core.ObjMap.cljs$lang$ctorPrWriter = function(this__8091__auto__, writer__8092__auto__, opt__8093__auto__) {
  return cljs.core._write(writer__8092__auto__, "cljs.core/ObjMap");
};
cljs.core.__GT_ObjMap = function __GT_ObjMap(meta, keys, strobj, update_count, __hash) {
  return new cljs.core.ObjMap(meta, keys, strobj, update_count, __hash);
};
cljs.core.ObjMap.EMPTY = new cljs.core.ObjMap(null, [], function() {
  var obj21510 = {};
  return obj21510;
}(), 0, cljs.core.empty_unordered_hash);
cljs.core.ObjMap.HASHMAP_THRESHOLD = 8;
cljs.core.ObjMap.fromObject = function(ks, obj) {
  return new cljs.core.ObjMap(null, ks, obj, 0, null);
};
cljs.core.ES6EntriesIterator = function(s) {
  this.s = s;
};
cljs.core.ES6EntriesIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  if (!(self__.s == null)) {
    var vec__21511 = cljs.core.first(self__.s);
    var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21511, 0, null);
    var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21511, 1, null);
    self__.s = cljs.core.next(self__.s);
    return{"done":false, "value":[k, v]};
  } else {
    return{"done":true, "value":null};
  }
};
cljs.core.ES6EntriesIterator.cljs$lang$type = true;
cljs.core.ES6EntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6EntriesIterator";
cljs.core.ES6EntriesIterator.cljs$lang$ctorPrWriter = function(this__8091__auto__, writer__8092__auto__, opt__8093__auto__) {
  return cljs.core._write(writer__8092__auto__, "cljs.core/ES6EntriesIterator");
};
cljs.core.__GT_ES6EntriesIterator = function __GT_ES6EntriesIterator(s) {
  return new cljs.core.ES6EntriesIterator(s);
};
cljs.core.es6_entries_iterator = function es6_entries_iterator(coll) {
  return new cljs.core.ES6EntriesIterator(cljs.core.seq(coll));
};
cljs.core.ES6SetEntriesIterator = function(s) {
  this.s = s;
};
cljs.core.ES6SetEntriesIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  if (!(self__.s == null)) {
    var x = cljs.core.first(self__.s);
    self__.s = cljs.core.next(self__.s);
    return{"done":false, "value":[x, x]};
  } else {
    return{"done":true, "value":null};
  }
};
cljs.core.ES6SetEntriesIterator.cljs$lang$type = true;
cljs.core.ES6SetEntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6SetEntriesIterator";
cljs.core.ES6SetEntriesIterator.cljs$lang$ctorPrWriter = function(this__8091__auto__, writer__8092__auto__, opt__8093__auto__) {
  return cljs.core._write(writer__8092__auto__, "cljs.core/ES6SetEntriesIterator");
};
cljs.core.__GT_ES6SetEntriesIterator = function __GT_ES6SetEntriesIterator(s) {
  return new cljs.core.ES6SetEntriesIterator(s);
};
cljs.core.es6_set_entries_iterator = function es6_set_entries_iterator(coll) {
  return new cljs.core.ES6SetEntriesIterator(cljs.core.seq(coll));
};
cljs.core.array_map_index_of_nil_QMARK_ = function array_map_index_of_nil_QMARK_(arr, m, k) {
  var len = arr.length;
  var i = 0;
  while (true) {
    if (len <= i) {
      return-1;
    } else {
      if (arr[i] == null) {
        return i;
      } else {
        var G__21512 = i + 2;
        i = G__21512;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_map_index_of_keyword_QMARK_ = function array_map_index_of_keyword_QMARK_(arr, m, k) {
  var len = arr.length;
  var kstr = k.fqn;
  var i = 0;
  while (true) {
    if (len <= i) {
      return-1;
    } else {
      if (function() {
        var k_SINGLEQUOTE_ = arr[i];
        return k_SINGLEQUOTE_ instanceof cljs.core.Keyword && kstr === k_SINGLEQUOTE_.fqn;
      }()) {
        return i;
      } else {
        var G__21513 = i + 2;
        i = G__21513;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_map_index_of_symbol_QMARK_ = function array_map_index_of_symbol_QMARK_(arr, m, k) {
  var len = arr.length;
  var kstr = k.str;
  var i = 0;
  while (true) {
    if (len <= i) {
      return-1;
    } else {
      if (function() {
        var k_SINGLEQUOTE_ = arr[i];
        return k_SINGLEQUOTE_ instanceof cljs.core.Symbol && kstr === k_SINGLEQUOTE_.str;
      }()) {
        return i;
      } else {
        var G__21514 = i + 2;
        i = G__21514;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_map_index_of_identical_QMARK_ = function array_map_index_of_identical_QMARK_(arr, m, k) {
  var len = arr.length;
  var i = 0;
  while (true) {
    if (len <= i) {
      return-1;
    } else {
      if (k === arr[i]) {
        return i;
      } else {
        var G__21515 = i + 2;
        i = G__21515;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_map_index_of_equiv_QMARK_ = function array_map_index_of_equiv_QMARK_(arr, m, k) {
  var len = arr.length;
  var i = 0;
  while (true) {
    if (len <= i) {
      return-1;
    } else {
      if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k, arr[i])) {
        return i;
      } else {
        var G__21516 = i + 2;
        i = G__21516;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_map_index_of = function array_map_index_of(m, k) {
  var arr = m.arr;
  if (k instanceof cljs.core.Keyword) {
    return cljs.core.array_map_index_of_keyword_QMARK_(arr, m, k);
  } else {
    if (cljs.core.truth_(function() {
      var or__7504__auto__ = function() {
        var G__21520 = k;
        return goog.isString(G__21520);
      }();
      if (cljs.core.truth_(or__7504__auto__)) {
        return or__7504__auto__;
      } else {
        return typeof k === "number";
      }
    }())) {
      return cljs.core.array_map_index_of_identical_QMARK_(arr, m, k);
    } else {
      if (k instanceof cljs.core.Symbol) {
        return cljs.core.array_map_index_of_symbol_QMARK_(arr, m, k);
      } else {
        if (k == null) {
          return cljs.core.array_map_index_of_nil_QMARK_(arr, m, k);
        } else {
          return cljs.core.array_map_index_of_equiv_QMARK_(arr, m, k);
        }
      }
    }
  }
};
cljs.core.array_map_extend_kv = function array_map_extend_kv(m, k, v) {
  var arr = m.arr;
  var l = arr.length;
  var narr = new Array(l + 2);
  var i_21521 = 0;
  while (true) {
    if (i_21521 < l) {
      narr[i_21521] = arr[i_21521];
      var G__21522 = i_21521 + 1;
      i_21521 = G__21522;
      continue;
    } else {
    }
    break;
  }
  narr[l] = k;
  narr[l + 1] = v;
  return narr;
};
cljs.core.PersistentArrayMapSeq = function(arr, i, _meta) {
  this.arr = arr;
  this.i = i;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374990;
};
cljs.core.PersistentArrayMapSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentArrayMapSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__._meta;
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i < self__.arr.length - 2) {
    return new cljs.core.PersistentArrayMapSeq(self__.arr, self__.i + 2, self__._meta);
  } else {
    return null;
  }
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return(self__.arr.length - self__.i) / 2;
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll(coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__._meta);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.arr[self__.i], self__.arr[self__.i + 1]], null);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i < self__.arr.length - 2) {
    return new cljs.core.PersistentArrayMapSeq(self__.arr, self__.i + 2, self__._meta);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentArrayMapSeq(self__.arr, self__.i, new_meta);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.PersistentArrayMapSeq.cljs$lang$type = true;
cljs.core.PersistentArrayMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapSeq";
cljs.core.PersistentArrayMapSeq.cljs$lang$ctorPrWriter = function(this__8091__auto__, writer__8092__auto__, opt__8093__auto__) {
  return cljs.core._write(writer__8092__auto__, "cljs.core/PersistentArrayMapSeq");
};
cljs.core.__GT_PersistentArrayMapSeq = function __GT_PersistentArrayMapSeq(arr, i, _meta) {
  return new cljs.core.PersistentArrayMapSeq(arr, i, _meta);
};
cljs.core.PersistentArrayMapSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__8482__auto__ = this;
  return cljs.core.es6_iterator(this__8482__auto__);
};
cljs.core.persistent_array_map_seq = function persistent_array_map_seq(arr, i, _meta) {
  if (i <= arr.length - 2) {
    return new cljs.core.PersistentArrayMapSeq(arr, i, _meta);
  } else {
    return null;
  }
};
cljs.core.PersistentArrayMapIterator = function(arr, i, cnt) {
  this.arr = arr;
  this.i = i;
  this.cnt = cnt;
};
cljs.core.PersistentArrayMapIterator.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  return self__.i < self__.cnt;
};
cljs.core.PersistentArrayMapIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var ret = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.arr[self__.i], self__.arr[self__.i + 1]], null);
  self__.i = self__.i + 2;
  return ret;
};
cljs.core.PersistentArrayMapIterator.cljs$lang$type = true;
cljs.core.PersistentArrayMapIterator.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapIterator";
cljs.core.PersistentArrayMapIterator.cljs$lang$ctorPrWriter = function(this__8091__auto__, writer__8092__auto__, opt__8093__auto__) {
  return cljs.core._write(writer__8092__auto__, "cljs.core/PersistentArrayMapIterator");
};
cljs.core.__GT_PersistentArrayMapIterator = function __GT_PersistentArrayMapIterator(arr, i, cnt) {
  return new cljs.core.PersistentArrayMapIterator(arr, i, cnt);
};
cljs.core.PersistentArrayMap = function(meta, cnt, arr, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.arr = arr;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 16647951;
  this.cljs$lang$protocol_mask$partition1$ = 8196;
};
cljs.core.PersistentArrayMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentArrayMap.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentArrayMap.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(function() {
    var G__21524 = coll;
    return cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__21524) : cljs.core.keys.call(null, G__21524);
  }());
};
cljs.core.PersistentArrayMap.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentArrayMap.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(function() {
    var G__21525 = coll;
    return cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__21525) : cljs.core.vals.call(null, G__21525);
  }());
};
cljs.core.PersistentArrayMap.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_(coll, k);
};
cljs.core.PersistentArrayMap.prototype.get = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentArrayMap.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__21526 = cljs.core.seq(coll);
  var chunk__21527 = null;
  var count__21528 = 0;
  var i__21529 = 0;
  while (true) {
    if (i__21529 < count__21528) {
      var vec__21530 = chunk__21527.cljs$core$IIndexed$_nth$arity$2(null, i__21529);
      var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21530, 0, null);
      var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21530, 1, null);
      var G__21531_21544 = v;
      var G__21532_21545 = k;
      f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__21531_21544, G__21532_21545) : f.call(null, G__21531_21544, G__21532_21545);
      var G__21546 = seq__21526;
      var G__21547 = chunk__21527;
      var G__21548 = count__21528;
      var G__21549 = i__21529 + 1;
      seq__21526 = G__21546;
      chunk__21527 = G__21547;
      count__21528 = G__21548;
      i__21529 = G__21549;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq(seq__21526);
      if (temp__4126__auto__) {
        var seq__21526__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__21526__$1)) {
          var c__8291__auto__ = cljs.core.chunk_first(seq__21526__$1);
          var G__21550 = cljs.core.chunk_rest(seq__21526__$1);
          var G__21551 = c__8291__auto__;
          var G__21552 = cljs.core.count(c__8291__auto__);
          var G__21553 = 0;
          seq__21526 = G__21550;
          chunk__21527 = G__21551;
          count__21528 = G__21552;
          i__21529 = G__21553;
          continue;
        } else {
          var vec__21533 = cljs.core.first(seq__21526__$1);
          var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21533, 0, null);
          var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21533, 1, null);
          var G__21534_21554 = v;
          var G__21535_21555 = k;
          f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__21534_21554, G__21535_21555) : f.call(null, G__21534_21554, G__21535_21555);
          var G__21556 = cljs.core.next(seq__21526__$1);
          var G__21557 = null;
          var G__21558 = 0;
          var G__21559 = 0;
          seq__21526 = G__21556;
          chunk__21527 = G__21557;
          count__21528 = G__21558;
          i__21529 = G__21559;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, k, null);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var idx = cljs.core.array_map_index_of(coll__$1, k);
  if (idx === -1) {
    return not_found;
  } else {
    return self__.arr[idx + 1];
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  var len = self__.arr.length;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < len) {
      var init__$2 = function() {
        var G__21536 = init__$1;
        var G__21537 = self__.arr[i];
        var G__21538 = self__.arr[i + 1];
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__21536, G__21537, G__21538) : f.call(null, G__21536, G__21537, G__21538);
      }();
      if (cljs.core.reduced_QMARK_(init__$2)) {
        var G__21539 = init__$2;
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__21539) : cljs.core.deref.call(null, G__21539);
      } else {
        var G__21560 = i + 2;
        var G__21561 = init__$2;
        i = G__21560;
        init__$1 = G__21561;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$ = true;
cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$_iterator$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return new cljs.core.PersistentArrayMapIterator(self__.arr, 0, self__.cnt * 2);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt, self__.arr, self__.__hash);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__7925__auto__ = self__.__hash;
  if (!(h__7925__auto__ == null)) {
    return h__7925__auto__;
  } else {
    var h__7925__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
    self__.__hash = h__7925__auto____$1;
    return h__7925__auto____$1;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  if (function() {
    var G__21540 = other;
    if (G__21540) {
      var bit__8178__auto__ = G__21540.cljs$lang$protocol_mask$partition0$ & 1024;
      if (bit__8178__auto__ || G__21540.cljs$core$IMap$) {
        return true;
      } else {
        return false;
      }
    } else {
      return false;
    }
  }()) {
    var alen = self__.arr.length;
    var other__$1 = other;
    if (self__.cnt === other__$1.cljs$core$ICounted$_count$arity$1(null)) {
      var i = 0;
      while (true) {
        if (i < alen) {
          var v = other__$1.cljs$core$ILookup$_lookup$arity$3(null, self__.arr[i], cljs.core.lookup_sentinel);
          if (!(v === cljs.core.lookup_sentinel)) {
            if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.arr[i + 1], v)) {
              var G__21562 = i + 2;
              i = G__21562;
              continue;
            } else {
              return false;
            }
          } else {
            return false;
          }
        } else {
          return true;
        }
        break;
      }
    } else {
      return false;
    }
  } else {
    return cljs.core.equiv_map(coll__$1, other);
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientArrayMap(function() {
    var obj21542 = {};
    return obj21542;
  }(), self__.arr.length, cljs.core.aclone(self__.arr));
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta(cljs.core.PersistentArrayMap.EMPTY, self__.meta);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  var idx = cljs.core.array_map_index_of(coll__$1, k);
  if (idx >= 0) {
    var len = self__.arr.length;
    var new_len = len - 2;
    if (new_len === 0) {
      return cljs.core._empty(coll__$1);
    } else {
      var new_arr = new Array(new_len);
      var s = 0;
      var d = 0;
      while (true) {
        if (s >= len) {
          return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt - 1, new_arr, null);
        } else {
          if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k, self__.arr[s])) {
            var G__21563 = s + 2;
            var G__21564 = d;
            s = G__21563;
            d = G__21564;
            continue;
          } else {
            new_arr[d] = self__.arr[s];
            new_arr[d + 1] = self__.arr[s + 1];
            var G__21565 = s + 2;
            var G__21566 = d + 2;
            s = G__21565;
            d = G__21566;
            continue;
          }
        }
        break;
      }
    }
  } else {
    return coll__$1;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  var idx = cljs.core.array_map_index_of(coll__$1, k);
  if (idx === -1) {
    if (self__.cnt < cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
      var arr__$1 = cljs.core.array_map_extend_kv(coll__$1, k, v);
      return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt + 1, arr__$1, null);
    } else {
      return cljs.core._with_meta(cljs.core._assoc(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY, coll__$1), k, v), self__.meta);
    }
  } else {
    if (v === self__.arr[idx + 1]) {
      return coll__$1;
    } else {
      var arr__$1 = function() {
        var G__21543 = cljs.core.aclone(self__.arr);
        G__21543[idx + 1] = v;
        return G__21543;
      }();
      return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt, arr__$1, null);
    }
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return!(cljs.core.array_map_index_of(coll__$1, k) === -1);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.persistent_array_map_seq(self__.arr, 0, null);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentArrayMap(meta__$1, self__.cnt, self__.arr, self__.__hash);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_(entry)) {
    return cljs.core._assoc(coll__$1, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 1));
  } else {
    var ret = coll__$1;
    var es = cljs.core.seq(entry);
    while (true) {
      if (es == null) {
        return ret;
      } else {
        var e = cljs.core.first(es);
        if (cljs.core.vector_QMARK_(e)) {
          var G__21567 = cljs.core._assoc(ret, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 1));
          var G__21568 = cljs.core.next(es);
          ret = G__21567;
          es = G__21568;
          continue;
        } else {
          throw new Error("conj on a map takes map entries or seqables of map entries");
        }
      }
      break;
    }
  }
};
cljs.core.PersistentArrayMap.prototype.call = function() {
  var G__21569 = null;
  var G__21569__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__21569__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__21569 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__21569__2.call(this, self__, k);
      case 3:
        return G__21569__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__21569.cljs$core$IFn$_invoke$arity$2 = G__21569__2;
  G__21569.cljs$core$IFn$_invoke$arity$3 = G__21569__3;
  return G__21569;
}();
cljs.core.PersistentArrayMap.prototype.apply = function(self__, args21523) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args21523)));
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentArrayMap.cljs$lang$type = true;
cljs.core.PersistentArrayMap.cljs$lang$ctorStr = "cljs.core/PersistentArrayMap";
cljs.core.PersistentArrayMap.cljs$lang$ctorPrWriter = function(this__8091__auto__, writer__8092__auto__, opt__8093__auto__) {
  return cljs.core._write(writer__8092__auto__, "cljs.core/PersistentArrayMap");
};
cljs.core.__GT_PersistentArrayMap = function __GT_PersistentArrayMap(meta, cnt, arr, __hash) {
  return new cljs.core.PersistentArrayMap(meta, cnt, arr, __hash);
};
cljs.core.PersistentArrayMap.EMPTY = new cljs.core.PersistentArrayMap(null, 0, [], cljs.core.empty_unordered_hash);
cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD = 8;
cljs.core.PersistentArrayMap.fromArray = function(arr, no_clone, no_check) {
  var arr__$1 = no_clone ? arr : cljs.core.aclone(arr);
  if (no_check) {
    var cnt = arr__$1.length / 2;
    return new cljs.core.PersistentArrayMap(null, cnt, arr__$1, null);
  } else {
    var len = arr__$1.length;
    var i = 0;
    var ret = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
    while (true) {
      if (i < len) {
        var G__21570 = i + 2;
        var G__21571 = cljs.core._assoc_BANG_(ret, arr__$1[i], arr__$1[i + 1]);
        i = G__21570;
        ret = G__21571;
        continue;
      } else {
        return cljs.core._persistent_BANG_(ret);
      }
      break;
    }
  }
};
cljs.core.PersistentArrayMap.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__8482__auto__ = this;
  return cljs.core.es6_iterator(this__8482__auto__);
};
cljs.core.TransientArrayMap = function(editable_QMARK_, len, arr) {
  this.editable_QMARK_ = editable_QMARK_;
  this.len = len;
  this.arr = arr;
  this.cljs$lang$protocol_mask$partition1$ = 56;
  this.cljs$lang$protocol_mask$partition0$ = 258;
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = function(tcoll, key) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    var idx = cljs.core.array_map_index_of(tcoll__$1, key);
    if (idx >= 0) {
      self__.arr[idx] = self__.arr[self__.len - 2];
      self__.arr[idx + 1] = self__.arr[self__.len - 1];
      var G__21572_21580 = self__.arr;
      G__21572_21580.pop();
      G__21572_21580.pop();
      self__.len = self__.len - 2;
    } else {
    }
    return tcoll__$1;
  } else {
    throw new Error("dissoc! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    var idx = cljs.core.array_map_index_of(tcoll__$1, key);
    if (idx === -1) {
      if (self__.len + 2 <= 2 * cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
        self__.len = self__.len + 2;
        self__.arr.push(key);
        self__.arr.push(val);
        return tcoll__$1;
      } else {
        return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(function() {
          var G__21573 = self__.len;
          var G__21574 = self__.arr;
          return cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2 ? cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2(G__21573, G__21574) : cljs.core.array__GT_transient_hash_map.call(null, G__21573, G__21574);
        }(), key, val);
      }
    } else {
      if (val === self__.arr[idx + 1]) {
        return tcoll__$1;
      } else {
        self__.arr[idx + 1] = val;
        return tcoll__$1;
      }
    }
  } else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    if (function() {
      var G__21575 = o;
      if (G__21575) {
        var bit__8185__auto__ = G__21575.cljs$lang$protocol_mask$partition0$ & 2048;
        if (bit__8185__auto__ || G__21575.cljs$core$IMapEntry$) {
          return true;
        } else {
          if (!G__21575.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry, G__21575);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry, G__21575);
      }
    }()) {
      return cljs.core._assoc_BANG_(tcoll__$1, function() {
        var G__21576 = o;
        return cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__21576) : cljs.core.key.call(null, G__21576);
      }(), function() {
        var G__21577 = o;
        return cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__21577) : cljs.core.val.call(null, G__21577);
      }());
    } else {
      var es = cljs.core.seq(o);
      var tcoll__$2 = tcoll__$1;
      while (true) {
        var temp__4124__auto__ = cljs.core.first(es);
        if (cljs.core.truth_(temp__4124__auto__)) {
          var e = temp__4124__auto__;
          var G__21581 = cljs.core.next(es);
          var G__21582 = cljs.core._assoc_BANG_(tcoll__$2, function() {
            var G__21578 = e;
            return cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__21578) : cljs.core.key.call(null, G__21578);
          }(), function() {
            var G__21579 = e;
            return cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__21579) : cljs.core.val.call(null, G__21579);
          }());
          es = G__21581;
          tcoll__$2 = G__21582;
          continue;
        } else {
          return tcoll__$2;
        }
        break;
      }
    }
  } else {
    throw new Error("conj! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    self__.editable_QMARK_ = false;
    return new cljs.core.PersistentArrayMap(null, cljs.core.quot(self__.len, 2), self__.arr, null);
  } else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, k) {
  var self__ = this;
  var tcoll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(tcoll__$1, k, null);
};
cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, k, not_found) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    var idx = cljs.core.array_map_index_of(tcoll__$1, k);
    if (idx === -1) {
      return not_found;
    } else {
      return self__.arr[idx + 1];
    }
  } else {
    throw new Error("lookup after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    return cljs.core.quot(self__.len, 2);
  } else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientArrayMap.cljs$lang$type = true;
cljs.core.TransientArrayMap.cljs$lang$ctorStr = "cljs.core/TransientArrayMap";
cljs.core.TransientArrayMap.cljs$lang$ctorPrWriter = function(this__8091__auto__, writer__8092__auto__, opt__8093__auto__) {
  return cljs.core._write(writer__8092__auto__, "cljs.core/TransientArrayMap");
};
cljs.core.__GT_TransientArrayMap = function __GT_TransientArrayMap(editable_QMARK_, len, arr) {
  return new cljs.core.TransientArrayMap(editable_QMARK_, len, arr);
};
cljs.core.array__GT_transient_hash_map = function array__GT_transient_hash_map(len, arr) {
  var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
  var i = 0;
  while (true) {
    if (i < len) {
      var G__21583 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out, arr[i], arr[i + 1]);
      var G__21584 = i + 2;
      out = G__21583;
      i = G__21584;
      continue;
    } else {
      return out;
    }
    break;
  }
};
cljs.core.Box = function(val) {
  this.val = val;
};
cljs.core.Box.cljs$lang$type = true;
cljs.core.Box.cljs$lang$ctorStr = "cljs.core/Box";
cljs.core.Box.cljs$lang$ctorPrWriter = function(this__8091__auto__, writer__8092__auto__, opt__8093__auto__) {
  return cljs.core._write(writer__8092__auto__, "cljs.core/Box");
};
cljs.core.__GT_Box = function __GT_Box(val) {
  return new cljs.core.Box(val);
};
cljs.core.key_test = function key_test(key, other) {
  if (key === other) {
    return true;
  } else {
    if (cljs.core.keyword_identical_QMARK_(key, other)) {
      return true;
    } else {
      return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(key, other);
    }
  }
};
cljs.core.mask = function mask(hash, shift) {
  return hash >>> shift & 31;
};
cljs.core.clone_and_set = function() {
  var clone_and_set = null;
  var clone_and_set__3 = function(arr, i, a) {
    var G__21587 = cljs.core.aclone(arr);
    G__21587[i] = a;
    return G__21587;
  };
  var clone_and_set__5 = function(arr, i, a, j, b) {
    var G__21588 = cljs.core.aclone(arr);
    G__21588[i] = a;
    G__21588[j] = b;
    return G__21588;
  };
  clone_and_set = function(arr, i, a, j, b) {
    switch(arguments.length) {
      case 3:
        return clone_and_set__3.call(this, arr, i, a);
      case 5:
        return clone_and_set__5.call(this, arr, i, a, j, b);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  clone_and_set.cljs$core$IFn$_invoke$arity$3 = clone_and_set__3;
  clone_and_set.cljs$core$IFn$_invoke$arity$5 = clone_and_set__5;
  return clone_and_set;
}();
cljs.core.remove_pair = function remove_pair(arr, i) {
  var new_arr = new Array(arr.length - 2);
  cljs.core.array_copy(arr, 0, new_arr, 0, 2 * i);
  cljs.core.array_copy(arr, 2 * (i + 1), new_arr, 2 * i, new_arr.length - 2 * i);
  return new_arr;
};
cljs.core.bitmap_indexed_node_index = function bitmap_indexed_node_index(bitmap, bit) {
  return cljs.core.bit_count(bitmap & bit - 1);
};
cljs.core.bitpos = function bitpos(hash, shift) {
  return 1 << (hash >>> shift & 31);
};
cljs.core.edit_and_set = function() {
  var edit_and_set = null;
  var edit_and_set__4 = function(inode, edit, i, a) {
    var editable = inode.ensure_editable(edit);
    editable.arr[i] = a;
    return editable;
  };
  var edit_and_set__6 = function(inode, edit, i, a, j, b) {
    var editable = inode.ensure_editable(edit);
    editable.arr[i] = a;
    editable.arr[j] = b;
    return editable;
  };
  edit_and_set = function(inode, edit, i, a, j, b) {
    switch(arguments.length) {
      case 4:
        return edit_and_set__4.call(this, inode, edit, i, a);
      case 6:
        return edit_and_set__6.call(this, inode, edit, i, a, j, b);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  edit_and_set.cljs$core$IFn$_invoke$arity$4 = edit_and_set__4;
  edit_and_set.cljs$core$IFn$_invoke$arity$6 = edit_and_set__6;
  return edit_and_set;
}();
cljs.core.inode_kv_reduce = function inode_kv_reduce(arr, f, init) {
  var len = arr.length;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < len) {
      var init__$2 = function() {
        var k = arr[i];
        if (!(k == null)) {
          var G__21593 = init__$1;
          var G__21594 = k;
          var G__21595 = arr[i + 1];
          return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__21593, G__21594, G__21595) : f.call(null, G__21593, G__21594, G__21595);
        } else {
          var node = arr[i + 1];
          if (!(node == null)) {
            return node.kv_reduce(f, init__$1);
          } else {
            return init__$1;
          }
        }
      }();
      if (cljs.core.reduced_QMARK_(init__$2)) {
        var G__21596 = init__$2;
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__21596) : cljs.core.deref.call(null, G__21596);
      } else {
        var G__21597 = i + 2;
        var G__21598 = init__$2;
        i = G__21597;
        init__$1 = G__21598;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.BitmapIndexedNode = function(edit, bitmap, arr) {
  this.edit = edit;
  this.bitmap = bitmap;
  this.arr = arr;
};
cljs.core.BitmapIndexedNode.prototype.ensure_editable = function(e) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    return inode;
  } else {
    var n = cljs.core.bit_count(self__.bitmap);
    var new_arr = new Array(n < 0 ? 4 : 2 * (n + 1));
    cljs.core.array_copy(self__.arr, 0, new_arr, 0, 2 * n);
    return new cljs.core.BitmapIndexedNode(e, self__.bitmap, new_arr);
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_without_BANG_ = function(edit__$1, shift, hash, key, removed_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return inode;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_without_BANG_(edit__$1, shift + 5, hash, key, removed_leaf_QMARK_);
      if (n === val_or_node) {
        return inode;
      } else {
        if (!(n == null)) {
          return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, 2 * idx + 1, n);
        } else {
          if (self__.bitmap === bit) {
            return null;
          } else {
            return inode.edit_and_remove_pair(edit__$1, bit, idx);
          }
        }
      }
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        removed_leaf_QMARK_[0] = true;
        return inode.edit_and_remove_pair(edit__$1, bit, idx);
      } else {
        return inode;
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.edit_and_remove_pair = function(e, bit, i) {
  var self__ = this;
  var inode = this;
  if (self__.bitmap === bit) {
    return null;
  } else {
    var editable = inode.ensure_editable(e);
    var earr = editable.arr;
    var len = earr.length;
    editable.bitmap = bit ^ editable.bitmap;
    cljs.core.array_copy(earr, 2 * (i + 1), earr, 2 * i, len - 2 * (i + 1));
    earr[len - 2] = null;
    earr[len - 1] = null;
    return editable;
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_seq = function() {
  var self__ = this;
  var inode = this;
  var G__21599 = self__.arr;
  return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(G__21599) : cljs.core.create_inode_seq.call(null, G__21599);
};
cljs.core.BitmapIndexedNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var inode = this;
  return cljs.core.inode_kv_reduce(self__.arr, f, init);
};
cljs.core.BitmapIndexedNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return not_found;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      return val_or_node.inode_lookup(shift + 5, hash, key, not_found);
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        return val_or_node;
      } else {
        return not_found;
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_assoc_BANG_ = function(edit__$1, shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
  if ((self__.bitmap & bit) === 0) {
    var n = cljs.core.bit_count(self__.bitmap);
    if (2 * n < self__.arr.length) {
      var editable = inode.ensure_editable(edit__$1);
      var earr = editable.arr;
      added_leaf_QMARK_.val = true;
      cljs.core.array_copy_downward(earr, 2 * idx, earr, 2 * (idx + 1), 2 * (n - idx));
      earr[2 * idx] = key;
      earr[2 * idx + 1] = val;
      editable.bitmap = editable.bitmap | bit;
      return editable;
    } else {
      if (n >= 16) {
        var nodes = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
        var jdx = hash >>> shift & 31;
        nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_);
        var i_21613 = 0;
        var j_21614 = 0;
        while (true) {
          if (i_21613 < 32) {
            if ((self__.bitmap >>> i_21613 & 1) === 0) {
              var G__21615 = i_21613 + 1;
              var G__21616 = j_21614;
              i_21613 = G__21615;
              j_21614 = G__21616;
              continue;
            } else {
              nodes[i_21613] = !(self__.arr[j_21614] == null) ? cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1, shift + 5, cljs.core.hash(self__.arr[j_21614]), self__.arr[j_21614], self__.arr[j_21614 + 1], added_leaf_QMARK_) : self__.arr[j_21614 + 1];
              var G__21617 = i_21613 + 1;
              var G__21618 = j_21614 + 2;
              i_21613 = G__21617;
              j_21614 = G__21618;
              continue;
            }
          } else {
          }
          break;
        }
        return new cljs.core.ArrayNode(edit__$1, n + 1, nodes);
      } else {
        var new_arr = new Array(2 * (n + 4));
        cljs.core.array_copy(self__.arr, 0, new_arr, 0, 2 * idx);
        new_arr[2 * idx] = key;
        new_arr[2 * idx + 1] = val;
        cljs.core.array_copy(self__.arr, 2 * idx, new_arr, 2 * (idx + 1), 2 * (n - idx));
        added_leaf_QMARK_.val = true;
        var editable = inode.ensure_editable(edit__$1);
        editable.arr = new_arr;
        editable.bitmap = editable.bitmap | bit;
        return editable;
      }
    }
  } else {
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_);
      if (n === val_or_node) {
        return inode;
      } else {
        return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, 2 * idx + 1, n);
      }
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        if (val === val_or_node) {
          return inode;
        } else {
          return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, 2 * idx + 1, val);
        }
      } else {
        added_leaf_QMARK_.val = true;
        return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode, edit__$1, 2 * idx, null, 2 * idx + 1, function() {
          var G__21600 = edit__$1;
          var G__21601 = shift + 5;
          var G__21602 = key_or_nil;
          var G__21603 = val_or_node;
          var G__21604 = hash;
          var G__21605 = key;
          var G__21606 = val;
          return cljs.core.create_node.cljs$core$IFn$_invoke$arity$7 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$7(G__21600, G__21601, G__21602, G__21603, G__21604, G__21605, G__21606) : cljs.core.create_node.call(null, G__21600, G__21601, G__21602, G__21603, G__21604, G__21605, G__21606);
        }());
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
  if ((self__.bitmap & bit) === 0) {
    var n = cljs.core.bit_count(self__.bitmap);
    if (n >= 16) {
      var nodes = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
      var jdx = hash >>> shift & 31;
      nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
      var i_21619 = 0;
      var j_21620 = 0;
      while (true) {
        if (i_21619 < 32) {
          if ((self__.bitmap >>> i_21619 & 1) === 0) {
            var G__21621 = i_21619 + 1;
            var G__21622 = j_21620;
            i_21619 = G__21621;
            j_21620 = G__21622;
            continue;
          } else {
            nodes[i_21619] = !(self__.arr[j_21620] == null) ? cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, cljs.core.hash(self__.arr[j_21620]), self__.arr[j_21620], self__.arr[j_21620 + 1], added_leaf_QMARK_) : self__.arr[j_21620 + 1];
            var G__21623 = i_21619 + 1;
            var G__21624 = j_21620 + 2;
            i_21619 = G__21623;
            j_21620 = G__21624;
            continue;
          }
        } else {
        }
        break;
      }
      return new cljs.core.ArrayNode(null, n + 1, nodes);
    } else {
      var new_arr = new Array(2 * (n + 1));
      cljs.core.array_copy(self__.arr, 0, new_arr, 0, 2 * idx);
      new_arr[2 * idx] = key;
      new_arr[2 * idx + 1] = val;
      cljs.core.array_copy(self__.arr, 2 * idx, new_arr, 2 * (idx + 1), 2 * (n - idx));
      added_leaf_QMARK_.val = true;
      return new cljs.core.BitmapIndexedNode(null, self__.bitmap | bit, new_arr);
    }
  } else {
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
      if (n === val_or_node) {
        return inode;
      } else {
        return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, 2 * idx + 1, n));
      }
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        if (val === val_or_node) {
          return inode;
        } else {
          return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, 2 * idx + 1, val));
        }
      } else {
        added_leaf_QMARK_.val = true;
        return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$5(self__.arr, 2 * idx, null, 2 * idx + 1, function() {
          var G__21607 = shift + 5;
          var G__21608 = key_or_nil;
          var G__21609 = val_or_node;
          var G__21610 = hash;
          var G__21611 = key;
          var G__21612 = val;
          return cljs.core.create_node.cljs$core$IFn$_invoke$arity$6 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$6(G__21607, G__21608, G__21609, G__21610, G__21611, G__21612) : cljs.core.create_node.call(null, G__21607, G__21608, G__21609, G__21610, G__21611, G__21612);
        }()));
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return not_found;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      return val_or_node.inode_find(shift + 5, hash, key, not_found);
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [key_or_nil, val_or_node], null);
      } else {
        return not_found;
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_without = function(shift, hash, key) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return inode;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_without(shift + 5, hash, key);
      if (n === val_or_node) {
        return inode;
      } else {
        if (!(n == null)) {
          return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, 2 * idx + 1, n));
        } else {
          if (self__.bitmap === bit) {
            return null;
          } else {
            return new cljs.core.BitmapIndexedNode(null, self__.bitmap ^ bit, cljs.core.remove_pair(self__.arr, idx));
          }
        }
      }
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        return new cljs.core.BitmapIndexedNode(null, self__.bitmap ^ bit, cljs.core.remove_pair(self__.arr, idx));
      } else {
        return inode;
      }
    }
  }
};
cljs.core.BitmapIndexedNode.cljs$lang$type = true;
cljs.core.BitmapIndexedNode.cljs$lang$ctorStr = "cljs.core/BitmapIndexedNode";
cljs.core.BitmapIndexedNode.cljs$lang$ctorPrWriter = function(this__8091__auto__, writer__8092__auto__, opt__8093__auto__) {
  return cljs.core._write(writer__8092__auto__, "cljs.core/BitmapIndexedNode");
};
cljs.core.__GT_BitmapIndexedNode = function __GT_BitmapIndexedNode(edit, bitmap, arr) {
  return new cljs.core.BitmapIndexedNode(edit, bitmap, arr);
};
cljs.core.BitmapIndexedNode.EMPTY = new cljs.core.BitmapIndexedNode(null, 0, []);
cljs.core.pack_array_node = function pack_array_node(array_node, edit, idx) {
  var arr = array_node.arr;
  var len = arr.length;
  var new_arr = new Array(2 * (array_node.cnt - 1));
  var i = 0;
  var j = 1;
  var bitmap = 0;
  while (true) {
    if (i < len) {
      if (!(i === idx) && !(arr[i] == null)) {
        new_arr[j] = arr[i];
        var G__21625 = i + 1;
        var G__21626 = j + 2;
        var G__21627 = bitmap | 1 << i;
        i = G__21625;
        j = G__21626;
        bitmap = G__21627;
        continue;
      } else {
        var G__21628 = i + 1;
        var G__21629 = j;
        var G__21630 = bitmap;
        i = G__21628;
        j = G__21629;
        bitmap = G__21630;
        continue;
      }
    } else {
      return new cljs.core.BitmapIndexedNode(edit, bitmap, new_arr);
    }
    break;
  }
};
cljs.core.ArrayNode = function(edit, cnt, arr) {
  this.edit = edit;
  this.cnt = cnt;
  this.arr = arr;
};
cljs.core.ArrayNode.prototype.ensure_editable = function(e) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    return inode;
  } else {
    return new cljs.core.ArrayNode(e, self__.cnt, cljs.core.aclone(self__.arr));
  }
};
cljs.core.ArrayNode.prototype.inode_without_BANG_ = function(edit__$1, shift, hash, key, removed_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (node == null) {
    return inode;
  } else {
    var n = node.inode_without_BANG_(edit__$1, shift + 5, hash, key, removed_leaf_QMARK_);
    if (n === node) {
      return inode;
    } else {
      if (n == null) {
        if (self__.cnt <= 8) {
          return cljs.core.pack_array_node(inode, edit__$1, idx);
        } else {
          var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, idx, n);
          editable.cnt = editable.cnt - 1;
          return editable;
        }
      } else {
        return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, idx, n);
      }
    }
  }
};
cljs.core.ArrayNode.prototype.inode_seq = function() {
  var self__ = this;
  var inode = this;
  var G__21631 = self__.arr;
  return cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1(G__21631) : cljs.core.create_array_node_seq.call(null, G__21631);
};
cljs.core.ArrayNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var inode = this;
  var len = self__.arr.length;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < len) {
      var node = self__.arr[i];
      if (!(node == null)) {
        var init__$2 = node.kv_reduce(f, init__$1);
        if (cljs.core.reduced_QMARK_(init__$2)) {
          var G__21632 = init__$2;
          return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__21632) : cljs.core.deref.call(null, G__21632);
        } else {
          var G__21633 = i + 1;
          var G__21634 = init__$2;
          i = G__21633;
          init__$1 = G__21634;
          continue;
        }
      } else {
        var G__21635 = i + 1;
        var G__21636 = init__$1;
        i = G__21635;
        init__$1 = G__21636;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.ArrayNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (!(node == null)) {
    return node.inode_lookup(shift + 5, hash, key, not_found);
  } else {
    return not_found;
  }
};
cljs.core.ArrayNode.prototype.inode_assoc_BANG_ = function(edit__$1, shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (node == null) {
    var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, idx, cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_));
    editable.cnt = editable.cnt + 1;
    return editable;
  } else {
    var n = node.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_);
    if (n === node) {
      return inode;
    } else {
      return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, idx, n);
    }
  }
};
cljs.core.ArrayNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (node == null) {
    return new cljs.core.ArrayNode(null, self__.cnt + 1, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, idx, cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_)));
  } else {
    var n = node.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
    if (n === node) {
      return inode;
    } else {
      return new cljs.core.ArrayNode(null, self__.cnt, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, idx, n));
    }
  }
};
cljs.core.ArrayNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (!(node == null)) {
    return node.inode_find(shift + 5, hash, key, not_found);
  } else {
    return not_found;
  }
};
cljs.core.ArrayNode.prototype.inode_without = function(shift, hash, key) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (!(node == null)) {
    var n = node.inode_without(shift + 5, hash, key);
    if (n === node) {
      return inode;
    } else {
      if (n == null) {
        if (self__.cnt <= 8) {
          return cljs.core.pack_array_node(inode, null, idx);
        } else {
          return new cljs.core.ArrayNode(null, self__.cnt - 1, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, idx, n));
        }
      } else {
        return new cljs.core.ArrayNode(null, self__.cnt, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, idx, n));
      }
    }
  } else {
    return inode;
  }
};
cljs.core.ArrayNode.cljs$lang$type = true;
cljs.core.ArrayNode.cljs$lang$ctorStr = "cljs.core/ArrayNode";
cljs.core.ArrayNode.cljs$lang$ctorPrWriter = function(this__8091__auto__, writer__8092__auto__, opt__8093__auto__) {
  return cljs.core._write(writer__8092__auto__, "cljs.core/ArrayNode");
};
cljs.core.__GT_ArrayNode = function __GT_ArrayNode(edit, cnt, arr) {
  return new cljs.core.ArrayNode(edit, cnt, arr);
};
cljs.core.hash_collision_node_find_index = function hash_collision_node_find_index(arr, cnt, key) {
  var lim = 2 * cnt;
  var i = 0;
  while (true) {
    if (i < lim) {
      if (cljs.core.key_test(key, arr[i])) {
        return i;
      } else {
        var G__21637 = i + 2;
        i = G__21637;
        continue;
      }
    } else {
      return-1;
    }
    break;
  }
};
cljs.core.HashCollisionNode = function(edit, collision_hash, cnt, arr) {
  this.edit = edit;
  this.collision_hash = collision_hash;
  this.cnt = cnt;
  this.arr = arr;
};
cljs.core.HashCollisionNode.prototype.ensure_editable = function(e) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    return inode;
  } else {
    var new_arr = new Array(2 * (self__.cnt + 1));
    cljs.core.array_copy(self__.arr, 0, new_arr, 0, 2 * self__.cnt);
    return new cljs.core.HashCollisionNode(e, self__.collision_hash, self__.cnt, new_arr);
  }
};
cljs.core.HashCollisionNode.prototype.inode_without_BANG_ = function(edit__$1, shift, hash, key, removed_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
  if (idx === -1) {
    return inode;
  } else {
    removed_leaf_QMARK_[0] = true;
    if (self__.cnt === 1) {
      return null;
    } else {
      var editable = inode.ensure_editable(edit__$1);
      var earr = editable.arr;
      earr[idx] = earr[2 * self__.cnt - 2];
      earr[idx + 1] = earr[2 * self__.cnt - 1];
      earr[2 * self__.cnt - 1] = null;
      earr[2 * self__.cnt - 2] = null;
      editable.cnt = editable.cnt - 1;
      return editable;
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_seq = function() {
  var self__ = this;
  var inode = this;
  var G__21638 = self__.arr;
  return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(G__21638) : cljs.core.create_inode_seq.call(null, G__21638);
};
cljs.core.HashCollisionNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var inode = this;
  return cljs.core.inode_kv_reduce(self__.arr, f, init);
};
cljs.core.HashCollisionNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
  if (idx < 0) {
    return not_found;
  } else {
    if (cljs.core.key_test(key, self__.arr[idx])) {
      return self__.arr[idx + 1];
    } else {
      return not_found;
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_assoc_BANG_ = function(edit__$1, shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  if (hash === self__.collision_hash) {
    var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
    if (idx === -1) {
      if (self__.arr.length > 2 * self__.cnt) {
        var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode, edit__$1, 2 * self__.cnt, key, 2 * self__.cnt + 1, val);
        added_leaf_QMARK_.val = true;
        editable.cnt = editable.cnt + 1;
        return editable;
      } else {
        var len = self__.arr.length;
        var new_arr = new Array(len + 2);
        cljs.core.array_copy(self__.arr, 0, new_arr, 0, len);
        new_arr[len] = key;
        new_arr[len + 1] = val;
        added_leaf_QMARK_.val = true;
        return inode.ensure_editable_array(edit__$1, self__.cnt + 1, new_arr);
      }
    } else {
      if (self__.arr[idx + 1] === val) {
        return inode;
      } else {
        return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, idx + 1, val);
      }
    }
  } else {
    return(new cljs.core.BitmapIndexedNode(edit__$1, 1 << (self__.collision_hash >>> shift & 31), [null, inode, null, null])).inode_assoc_BANG_(edit__$1, shift, hash, key, val, added_leaf_QMARK_);
  }
};
cljs.core.HashCollisionNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  if (hash === self__.collision_hash) {
    var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
    if (idx === -1) {
      var len = 2 * self__.cnt;
      var new_arr = new Array(len + 2);
      cljs.core.array_copy(self__.arr, 0, new_arr, 0, len);
      new_arr[len] = key;
      new_arr[len + 1] = val;
      added_leaf_QMARK_.val = true;
      return new cljs.core.HashCollisionNode(null, self__.collision_hash, self__.cnt + 1, new_arr);
    } else {
      if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.arr[idx], val)) {
        return inode;
      } else {
        return new cljs.core.HashCollisionNode(null, self__.collision_hash, self__.cnt, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, idx + 1, val));
      }
    }
  } else {
    return(new cljs.core.BitmapIndexedNode(null, 1 << (self__.collision_hash >>> shift & 31), [null, inode])).inode_assoc(shift, hash, key, val, added_leaf_QMARK_);
  }
};
cljs.core.HashCollisionNode.prototype.ensure_editable_array = function(e, count, array) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    self__.arr = array;
    self__.cnt = count;
    return inode;
  } else {
    return new cljs.core.HashCollisionNode(self__.edit, self__.collision_hash, count, array);
  }
};
cljs.core.HashCollisionNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
  if (idx < 0) {
    return not_found;
  } else {
    if (cljs.core.key_test(key, self__.arr[idx])) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.arr[idx], self__.arr[idx + 1]], null);
    } else {
      return not_found;
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_without = function(shift, hash, key) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
  if (idx === -1) {
    return inode;
  } else {
    if (self__.cnt === 1) {
      return null;
    } else {
      return new cljs.core.HashCollisionNode(null, self__.collision_hash, self__.cnt - 1, cljs.core.remove_pair(self__.arr, cljs.core.quot(idx, 2)));
    }
  }
};
cljs.core.HashCollisionNode.cljs$lang$type = true;
cljs.core.HashCollisionNode.cljs$lang$ctorStr = "cljs.core/HashCollisionNode";
cljs.core.HashCollisionNode.cljs$lang$ctorPrWriter = function(this__8091__auto__, writer__8092__auto__, opt__8093__auto__) {
  return cljs.core._write(writer__8092__auto__, "cljs.core/HashCollisionNode");
};
cljs.core.__GT_HashCollisionNode = function __GT_HashCollisionNode(edit, collision_hash, cnt, arr) {
  return new cljs.core.HashCollisionNode(edit, collision_hash, cnt, arr);
};
cljs.core.create_node = function() {
  var create_node = null;
  var create_node__6 = function(shift, key1, val1, key2hash, key2, val2) {
    var key1hash = cljs.core.hash(key1);
    if (key1hash === key2hash) {
      return new cljs.core.HashCollisionNode(null, key1hash, 2, [key1, val1, key2, val2]);
    } else {
      var added_leaf_QMARK_ = new cljs.core.Box(false);
      return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift, key1hash, key1, val1, added_leaf_QMARK_).inode_assoc(shift, key2hash, key2, val2, added_leaf_QMARK_);
    }
  };
  var create_node__7 = function(edit, shift, key1, val1, key2hash, key2, val2) {
    var key1hash = cljs.core.hash(key1);
    if (key1hash === key2hash) {
      return new cljs.core.HashCollisionNode(null, key1hash, 2, [key1, val1, key2, val2]);
    } else {
      var added_leaf_QMARK_ = new cljs.core.Box(false);
      return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit, shift, key1hash, key1, val1, added_leaf_QMARK_).inode_assoc_BANG_(edit, shift, key2hash, key2, val2, added_leaf_QMARK_);
    }
  };
  create_node = function(edit, shift, key1, val1, key2hash, key2, val2) {
    switch(arguments.length) {
      case 6:
        return create_node__6.call(this, edit, shift, key1, val1, key2hash, key2);
      case 7:
        return create_node__7.call(this, edit, shift, key1, val1, key2hash, key2, val2);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  create_node.cljs$core$IFn$_invoke$arity$6 = create_node__6;
  create_node.cljs$core$IFn$_invoke$arity$7 = create_node__7;
  return create_node;
}();
cljs.core.NodeSeq = function(meta, nodes, i, s, __hash) {
  this.meta = meta;
  this.nodes = nodes;
  this.i = i;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374860;
};
cljs.core.NodeSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.NodeSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.NodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.NodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__7925__auto__ = self__.__hash;
  if (!(h__7925__auto__ == null)) {
    return h__7925__auto__;
  } else {
    var h__7925__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__7925__auto____$1;
    return h__7925__auto____$1;
  }
};
cljs.core.NodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.NodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.NodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.s == null) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.nodes[self__.i], self__.nodes[self__.i + 1]], null);
  } else {
    return cljs.core.first(self__.s);
  }
};
cljs.core.NodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.s == null) {
    var G__21639 = self__.nodes;
    var G__21640 = self__.i + 2;
    var G__21641 = null;
    return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__21639, G__21640, G__21641) : cljs.core.create_inode_seq.call(null, G__21639, G__21640, G__21641);
  } else {
    var G__21642 = self__.nodes;
    var G__21643 = self__.i;
    var G__21644 = cljs.core.next(self__.s);
    return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__21642, G__21643, G__21644) : cljs.core.create_inode_seq.call(null, G__21642, G__21643, G__21644);
  }
};
cljs.core.NodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.NodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.NodeSeq(meta__$1, self__.nodes, self__.i, self__.s, self__.__hash);
};
cljs.core.NodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.NodeSeq.cljs$lang$type = true;
cljs.core.NodeSeq.cljs$lang$ctorStr = "cljs.core/NodeSeq";
cljs.core.NodeSeq.cljs$lang$ctorPrWriter = function(this__8091__auto__, writer__8092__auto__, opt__8093__auto__) {
  return cljs.core._write(writer__8092__auto__, "cljs.core/NodeSeq");
};
cljs.core.__GT_NodeSeq = function __GT_NodeSeq(meta, nodes, i, s, __hash) {
  return new cljs.core.NodeSeq(meta, nodes, i, s, __hash);
};
cljs.core.NodeSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__8482__auto__ = this;
  return cljs.core.es6_iterator(this__8482__auto__);
};
cljs.core.create_inode_seq = function() {
  var create_inode_seq = null;
  var create_inode_seq__1 = function(nodes) {
    return create_inode_seq.cljs$core$IFn$_invoke$arity$3(nodes, 0, null);
  };
  var create_inode_seq__3 = function(nodes, i, s) {
    if (s == null) {
      var len = nodes.length;
      var j = i;
      while (true) {
        if (j < len) {
          if (!(nodes[j] == null)) {
            return new cljs.core.NodeSeq(null, nodes, j, null, null);
          } else {
            var temp__4124__auto__ = nodes[j + 1];
            if (cljs.core.truth_(temp__4124__auto__)) {
              var node = temp__4124__auto__;
              var temp__4124__auto____$1 = node.inode_seq();
              if (cljs.core.truth_(temp__4124__auto____$1)) {
                var node_seq = temp__4124__auto____$1;
                return new cljs.core.NodeSeq(null, nodes, j + 2, node_seq, null);
              } else {
                var G__21648 = j + 2;
                j = G__21648;
                continue;
              }
            } else {
              var G__21649 = j + 2;
              j = G__21649;
              continue;
            }
          }
        } else {
          return null;
        }
        break;
      }
    } else {
      return new cljs.core.NodeSeq(null, nodes, i, s, null);
    }
  };
  create_inode_seq = function(nodes, i, s) {
    switch(arguments.length) {
      case 1:
        return create_inode_seq__1.call(this, nodes);
      case 3:
        return create_inode_seq__3.call(this, nodes, i, s);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  create_inode_seq.cljs$core$IFn$_invoke$arity$1 = create_inode_seq__1;
  create_inode_seq.cljs$core$IFn$_invoke$arity$3 = create_inode_seq__3;
  return create_inode_seq;
}();
cljs.core.ArrayNodeSeq = function(meta, nodes, i, s, __hash) {
  this.meta = meta;
  this.nodes = nodes;
  this.i = i;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374860;
};
cljs.core.ArrayNodeSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.ArrayNodeSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__7925__auto__ = self__.__hash;
  if (!(h__7925__auto__ == null)) {
    return h__7925__auto__;
  } else {
    var h__7925__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__7925__auto____$1;
    return h__7925__auto____$1;
  }
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first(self__.s);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var G__21650 = null;
  var G__21651 = self__.nodes;
  var G__21652 = self__.i;
  var G__21653 = cljs.core.next(self__.s);
  return cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4(G__21650, G__21651, G__21652, G__21653) : cljs.core.create_array_node_seq.call(null, G__21650, G__21651, G__21652, G__21653);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ArrayNodeSeq(meta__$1, self__.nodes, self__.i, self__.s, self__.__hash);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.ArrayNodeSeq.cljs$lang$type = true;
cljs.core.ArrayNodeSeq.cljs$lang$ctorStr = "cljs.core/ArrayNodeSeq";
cljs.core.ArrayNodeSeq.cljs$lang$ctorPrWriter = function(this__8091__auto__, writer__8092__auto__, opt__8093__auto__) {
  return cljs.core._write(writer__8092__auto__, "cljs.core/ArrayNodeSeq");
};
cljs.core.__GT_ArrayNodeSeq = function __GT_ArrayNodeSeq(meta, nodes, i, s, __hash) {
  return new cljs.core.ArrayNodeSeq(meta, nodes, i, s, __hash);
};
cljs.core.ArrayNodeSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__8482__auto__ = this;
  return cljs.core.es6_iterator(this__8482__auto__);
};
cljs.core.create_array_node_seq = function() {
  var create_array_node_seq = null;
  var create_array_node_seq__1 = function(nodes) {
    return create_array_node_seq.cljs$core$IFn$_invoke$arity$4(null, nodes, 0, null);
  };
  var create_array_node_seq__4 = function(meta, nodes, i, s) {
    if (s == null) {
      var len = nodes.length;
      var j = i;
      while (true) {
        if (j < len) {
          var temp__4124__auto__ = nodes[j];
          if (cljs.core.truth_(temp__4124__auto__)) {
            var nj = temp__4124__auto__;
            var temp__4124__auto____$1 = nj.inode_seq();
            if (cljs.core.truth_(temp__4124__auto____$1)) {
              var ns = temp__4124__auto____$1;
              return new cljs.core.ArrayNodeSeq(meta, nodes, j + 1, ns, null);
            } else {
              var G__21658 = j + 1;
              j = G__21658;
              continue;
            }
          } else {
            var G__21659 = j + 1;
            j = G__21659;
            continue;
          }
        } else {
          return null;
        }
        break;
      }
    } else {
      return new cljs.core.ArrayNodeSeq(meta, nodes, i, s, null);
    }
  };
  create_array_node_seq = function(meta, nodes, i, s) {
    switch(arguments.length) {
      case 1:
        return create_array_node_seq__1.call(this, meta);
      case 4:
        return create_array_node_seq__4.call(this, meta, nodes, i, s);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  create_array_node_seq.cljs$core$IFn$_invoke$arity$1 = create_array_node_seq__1;
  create_array_node_seq.cljs$core$IFn$_invoke$arity$4 = create_array_node_seq__4;
  return create_array_node_seq;
}();
cljs.core.PersistentHashMap = function(meta, cnt, root, has_nil_QMARK_, nil_val, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.root = root;
  this.has_nil_QMARK_ = has_nil_QMARK_;
  this.nil_val = nil_val;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 16123663;
  this.cljs$lang$protocol_mask$partition1$ = 8196;
};
cljs.core.PersistentHashMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentHashMap.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentHashMap.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(function() {
    var G__21661 = coll;
    return cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__21661) : cljs.core.keys.call(null, G__21661);
  }());
};
cljs.core.PersistentHashMap.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentHashMap.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(function() {
    var G__21662 = coll;
    return cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__21662) : cljs.core.vals.call(null, G__21662);
  }());
};
cljs.core.PersistentHashMap.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_(coll, k);
};
cljs.core.PersistentHashMap.prototype.get = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentHashMap.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__21663 = cljs.core.seq(coll);
  var chunk__21664 = null;
  var count__21665 = 0;
  var i__21666 = 0;
  while (true) {
    if (i__21666 < count__21665) {
      var vec__21667 = chunk__21664.cljs$core$IIndexed$_nth$arity$2(null, i__21666);
      var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21667, 0, null);
      var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21667, 1, null);
      var G__21668_21679 = v;
      var G__21669_21680 = k;
      f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__21668_21679, G__21669_21680) : f.call(null, G__21668_21679, G__21669_21680);
      var G__21681 = seq__21663;
      var G__21682 = chunk__21664;
      var G__21683 = count__21665;
      var G__21684 = i__21666 + 1;
      seq__21663 = G__21681;
      chunk__21664 = G__21682;
      count__21665 = G__21683;
      i__21666 = G__21684;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq(seq__21663);
      if (temp__4126__auto__) {
        var seq__21663__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__21663__$1)) {
          var c__8291__auto__ = cljs.core.chunk_first(seq__21663__$1);
          var G__21685 = cljs.core.chunk_rest(seq__21663__$1);
          var G__21686 = c__8291__auto__;
          var G__21687 = cljs.core.count(c__8291__auto__);
          var G__21688 = 0;
          seq__21663 = G__21685;
          chunk__21664 = G__21686;
          count__21665 = G__21687;
          i__21666 = G__21688;
          continue;
        } else {
          var vec__21670 = cljs.core.first(seq__21663__$1);
          var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21670, 0, null);
          var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21670, 1, null);
          var G__21671_21689 = v;
          var G__21672_21690 = k;
          f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__21671_21689, G__21672_21690) : f.call(null, G__21671_21689, G__21672_21690);
          var G__21691 = cljs.core.next(seq__21663__$1);
          var G__21692 = null;
          var G__21693 = 0;
          var G__21694 = 0;
          seq__21663 = G__21691;
          chunk__21664 = G__21692;
          count__21665 = G__21693;
          i__21666 = G__21694;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, k, null);
};
cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return self__.nil_val;
    } else {
      return not_found;
    }
  } else {
    if (self__.root == null) {
      return not_found;
    } else {
      return self__.root.inode_lookup(0, cljs.core.hash(k), k, not_found);
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  var init__$1 = self__.has_nil_QMARK_ ? function() {
    var G__21673 = init;
    var G__21674 = null;
    var G__21675 = self__.nil_val;
    return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__21673, G__21674, G__21675) : f.call(null, G__21673, G__21674, G__21675);
  }() : init;
  if (cljs.core.reduced_QMARK_(init__$1)) {
    var G__21676 = init__$1;
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__21676) : cljs.core.deref.call(null, G__21676);
  } else {
    if (!(self__.root == null)) {
      return self__.root.kv_reduce(f, init__$1);
    } else {
      return init__$1;
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentHashMap(self__.meta, self__.cnt, self__.root, self__.has_nil_QMARK_, self__.nil_val, self__.__hash);
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentHashMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__7925__auto__ = self__.__hash;
  if (!(h__7925__auto__ == null)) {
    return h__7925__auto__;
  } else {
    var h__7925__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
    self__.__hash = h__7925__auto____$1;
    return h__7925__auto____$1;
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_map(coll__$1, other);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientHashMap(function() {
    var obj21678 = {};
    return obj21678;
  }(), self__.root, self__.cnt, self__.has_nil_QMARK_, self__.nil_val);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta(cljs.core.PersistentHashMap.EMPTY, self__.meta);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return new cljs.core.PersistentHashMap(self__.meta, self__.cnt - 1, self__.root, false, null, null);
    } else {
      return coll__$1;
    }
  } else {
    if (self__.root == null) {
      return coll__$1;
    } else {
      var new_root = self__.root.inode_without(0, cljs.core.hash(k), k);
      if (new_root === self__.root) {
        return coll__$1;
      } else {
        return new cljs.core.PersistentHashMap(self__.meta, self__.cnt - 1, new_root, self__.has_nil_QMARK_, self__.nil_val, null);
      }
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_ && v === self__.nil_val) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentHashMap(self__.meta, self__.has_nil_QMARK_ ? self__.cnt : self__.cnt + 1, self__.root, true, v, null);
    }
  } else {
    var added_leaf_QMARK_ = new cljs.core.Box(false);
    var new_root = (self__.root == null ? cljs.core.BitmapIndexedNode.EMPTY : self__.root).inode_assoc(0, cljs.core.hash(k), k, v, added_leaf_QMARK_);
    if (new_root === self__.root) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentHashMap(self__.meta, added_leaf_QMARK_.val ? self__.cnt + 1 : self__.cnt, new_root, self__.has_nil_QMARK_, self__.nil_val, null);
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    return self__.has_nil_QMARK_;
  } else {
    if (self__.root == null) {
      return false;
    } else {
      return!(self__.root.inode_lookup(0, cljs.core.hash(k), k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel);
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    var s = !(self__.root == null) ? self__.root.inode_seq() : null;
    if (self__.has_nil_QMARK_) {
      return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, self__.nil_val], null), s);
    } else {
      return s;
    }
  } else {
    return null;
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashMap(meta__$1, self__.cnt, self__.root, self__.has_nil_QMARK_, self__.nil_val, self__.__hash);
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_(entry)) {
    return cljs.core._assoc(coll__$1, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 1));
  } else {
    var ret = coll__$1;
    var es = cljs.core.seq(entry);
    while (true) {
      if (es == null) {
        return ret;
      } else {
        var e = cljs.core.first(es);
        if (cljs.core.vector_QMARK_(e)) {
          var G__21695 = cljs.core._assoc(ret, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 1));
          var G__21696 = cljs.core.next(es);
          ret = G__21695;
          es = G__21696;
          continue;
        } else {
          throw new Error("conj on a map takes map entries or seqables of map entries");
        }
      }
      break;
    }
  }
};
cljs.core.PersistentHashMap.prototype.call = function() {
  var G__21697 = null;
  var G__21697__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__21697__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__21697 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__21697__2.call(this, self__, k);
      case 3:
        return G__21697__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__21697.cljs$core$IFn$_invoke$arity$2 = G__21697__2;
  G__21697.cljs$core$IFn$_invoke$arity$3 = G__21697__3;
  return G__21697;
}();
cljs.core.PersistentHashMap.prototype.apply = function(self__, args21660) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args21660)));
};
cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentHashMap.cljs$lang$type = true;
cljs.core.PersistentHashMap.cljs$lang$ctorStr = "cljs.core/PersistentHashMap";
cljs.core.PersistentHashMap.cljs$lang$ctorPrWriter = function(this__8091__auto__, writer__8092__auto__, opt__8093__auto__) {
  return cljs.core._write(writer__8092__auto__, "cljs.core/PersistentHashMap");
};
cljs.core.__GT_PersistentHashMap = function __GT_PersistentHashMap(meta, cnt, root, has_nil_QMARK_, nil_val, __hash) {
  return new cljs.core.PersistentHashMap(meta, cnt, root, has_nil_QMARK_, nil_val, __hash);
};
cljs.core.PersistentHashMap.EMPTY = new cljs.core.PersistentHashMap(null, 0, null, false, null, cljs.core.empty_unordered_hash);
cljs.core.PersistentHashMap.fromArray = function(arr, no_clone) {
  var arr__$1 = no_clone ? arr : cljs.core.aclone(arr);
  var len = arr__$1.length;
  var i = 0;
  var ret = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
  while (true) {
    if (i < len) {
      var G__21698 = i + 2;
      var G__21699 = cljs.core._assoc_BANG_(ret, arr__$1[i], arr__$1[i + 1]);
      i = G__21698;
      ret = G__21699;
      continue;
    } else {
      return cljs.core._persistent_BANG_(ret);
    }
    break;
  }
};
cljs.core.PersistentHashMap.fromArrays = function(ks, vs) {
  var len = ks.length;
  var i = 0;
  var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
  while (true) {
    if (i < len) {
      var G__21700 = i + 1;
      var G__21701 = out.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(null, ks[i], vs[i]);
      i = G__21700;
      out = G__21701;
      continue;
    } else {
      return cljs.core.persistent_BANG_(out);
    }
    break;
  }
};
cljs.core.PersistentHashMap.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__8482__auto__ = this;
  return cljs.core.es6_iterator(this__8482__auto__);
};
cljs.core.TransientHashMap = function(edit, root, count, has_nil_QMARK_, nil_val) {
  this.edit = edit;
  this.root = root;
  this.count = count;
  this.has_nil_QMARK_ = has_nil_QMARK_;
  this.nil_val = nil_val;
  this.cljs$lang$protocol_mask$partition1$ = 56;
  this.cljs$lang$protocol_mask$partition0$ = 258;
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = function(tcoll, key) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.without_BANG_(key);
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.assoc_BANG_(key, val);
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, val) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.conj_BANG_(val);
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.persistent_BANG_();
};
cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, k) {
  var self__ = this;
  var tcoll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return self__.nil_val;
    } else {
      return null;
    }
  } else {
    if (self__.root == null) {
      return null;
    } else {
      return self__.root.inode_lookup(0, cljs.core.hash(k), k);
    }
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, k, not_found) {
  var self__ = this;
  var tcoll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return self__.nil_val;
    } else {
      return not_found;
    }
  } else {
    if (self__.root == null) {
      return not_found;
    } else {
      return self__.root.inode_lookup(0, cljs.core.hash(k), k, not_found);
    }
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.edit) {
    return self__.count;
  } else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.conj_BANG_ = function(o) {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    if (function() {
      var G__21702 = o;
      if (G__21702) {
        var bit__8185__auto__ = G__21702.cljs$lang$protocol_mask$partition0$ & 2048;
        if (bit__8185__auto__ || G__21702.cljs$core$IMapEntry$) {
          return true;
        } else {
          if (!G__21702.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry, G__21702);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry, G__21702);
      }
    }()) {
      return tcoll.assoc_BANG_(function() {
        var G__21703 = o;
        return cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__21703) : cljs.core.key.call(null, G__21703);
      }(), function() {
        var G__21704 = o;
        return cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__21704) : cljs.core.val.call(null, G__21704);
      }());
    } else {
      var es = cljs.core.seq(o);
      var tcoll__$1 = tcoll;
      while (true) {
        var temp__4124__auto__ = cljs.core.first(es);
        if (cljs.core.truth_(temp__4124__auto__)) {
          var e = temp__4124__auto__;
          var G__21707 = cljs.core.next(es);
          var G__21708 = tcoll__$1.assoc_BANG_(function() {
            var G__21705 = e;
            return cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__21705) : cljs.core.key.call(null, G__21705);
          }(), function() {
            var G__21706 = e;
            return cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__21706) : cljs.core.val.call(null, G__21706);
          }());
          es = G__21707;
          tcoll__$1 = G__21708;
          continue;
        } else {
          return tcoll__$1;
        }
        break;
      }
    }
  } else {
    throw new Error("conj! after persistent");
  }
};
cljs.core.TransientHashMap.prototype.assoc_BANG_ = function(k, v) {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    if (k == null) {
      if (self__.nil_val === v) {
      } else {
        self__.nil_val = v;
      }
      if (self__.has_nil_QMARK_) {
      } else {
        self__.count = self__.count + 1;
        self__.has_nil_QMARK_ = true;
      }
      return tcoll;
    } else {
      var added_leaf_QMARK_ = new cljs.core.Box(false);
      var node = (self__.root == null ? cljs.core.BitmapIndexedNode.EMPTY : self__.root).inode_assoc_BANG_(self__.edit, 0, cljs.core.hash(k), k, v, added_leaf_QMARK_);
      if (node === self__.root) {
      } else {
        self__.root = node;
      }
      if (added_leaf_QMARK_.val) {
        self__.count = self__.count + 1;
      } else {
      }
      return tcoll;
    }
  } else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.without_BANG_ = function(k) {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    if (k == null) {
      if (self__.has_nil_QMARK_) {
        self__.has_nil_QMARK_ = false;
        self__.nil_val = null;
        self__.count = self__.count - 1;
        return tcoll;
      } else {
        return tcoll;
      }
    } else {
      if (self__.root == null) {
        return tcoll;
      } else {
        var removed_leaf_QMARK_ = new cljs.core.Box(false);
        var node = self__.root.inode_without_BANG_(self__.edit, 0, cljs.core.hash(k), k, removed_leaf_QMARK_);
        if (node === self__.root) {
        } else {
          self__.root = node;
        }
        if (cljs.core.truth_(removed_leaf_QMARK_[0])) {
          self__.count = self__.count - 1;
        } else {
        }
        return tcoll;
      }
    }
  } else {
    throw new Error("dissoc! after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.persistent_BANG_ = function() {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    self__.edit = null;
    return new cljs.core.PersistentHashMap(null, self__.count, self__.root, self__.has_nil_QMARK_, self__.nil_val, null);
  } else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.TransientHashMap.cljs$lang$type = true;
cljs.core.TransientHashMap.cljs$lang$ctorStr = "cljs.core/TransientHashMap";
cljs.core.TransientHashMap.cljs$lang$ctorPrWriter = function(this__8091__auto__, writer__8092__auto__, opt__8093__auto__) {
  return cljs.core._write(writer__8092__auto__, "cljs.core/TransientHashMap");
};
cljs.core.__GT_TransientHashMap = function __GT_TransientHashMap(edit, root, count, has_nil_QMARK_, nil_val) {
  return new cljs.core.TransientHashMap(edit, root, count, has_nil_QMARK_, nil_val);
};
cljs.core.tree_map_seq_push = function tree_map_seq_push(node, stack, ascending_QMARK_) {
  var t = node;
  var stack__$1 = stack;
  while (true) {
    if (!(t == null)) {
      var G__21709 = ascending_QMARK_ ? t.left : t.right;
      var G__21710 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack__$1, t);
      t = G__21709;
      stack__$1 = G__21710;
      continue;
    } else {
      return stack__$1;
    }
    break;
  }
};
cljs.core.PersistentTreeMapSeq = function(meta, stack, ascending_QMARK_, cnt, __hash) {
  this.meta = meta;
  this.stack = stack;
  this.ascending_QMARK_ = ascending_QMARK_;
  this.cnt = cnt;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374862;
};
cljs.core.PersistentTreeMapSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentTreeMapSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt < 0) {
    return cljs.core.count(cljs.core.next(coll__$1)) + 1;
  } else {
    return self__.cnt;
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__7925__auto__ = self__.__hash;
  if (!(h__7925__auto__ == null)) {
    return h__7925__auto__;
  } else {
    var h__7925__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__7925__auto____$1;
    return h__7925__auto____$1;
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.peek(self__.stack);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  var t = cljs.core.first(self__.stack);
  var next_stack = cljs.core.tree_map_seq_push(self__.ascending_QMARK_ ? t.right : t.left, cljs.core.next(self__.stack), self__.ascending_QMARK_);
  if (!(next_stack == null)) {
    return new cljs.core.PersistentTreeMapSeq(null, next_stack, self__.ascending_QMARK_, self__.cnt - 1, null);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeMapSeq(meta__$1, self__.stack, self__.ascending_QMARK_, self__.cnt, self__.__hash);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.PersistentTreeMapSeq.cljs$lang$type = true;
cljs.core.PersistentTreeMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentTreeMapSeq";
cljs.core.PersistentTreeMapSeq.cljs$lang$ctorPrWriter = function(this__8091__auto__, writer__8092__auto__, opt__8093__auto__) {
  return cljs.core._write(writer__8092__auto__, "cljs.core/PersistentTreeMapSeq");
};
cljs.core.__GT_PersistentTreeMapSeq = function __GT_PersistentTreeMapSeq(meta, stack, ascending_QMARK_, cnt, __hash) {
  return new cljs.core.PersistentTreeMapSeq(meta, stack, ascending_QMARK_, cnt, __hash);
};
cljs.core.PersistentTreeMapSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__8482__auto__ = this;
  return cljs.core.es6_iterator(this__8482__auto__);
};
cljs.core.create_tree_map_seq = function create_tree_map_seq(tree, ascending_QMARK_, cnt) {
  return new cljs.core.PersistentTreeMapSeq(null, cljs.core.tree_map_seq_push(tree, null, ascending_QMARK_), ascending_QMARK_, cnt, null);
};
cljs.core.balance_left = function balance_left(key, val, ins, right) {
  if (ins instanceof cljs.core.RedNode) {
    if (ins.left instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(ins.key, ins.val, ins.left.blacken(), new cljs.core.BlackNode(key, val, ins.right, right, null), null);
    } else {
      if (ins.right instanceof cljs.core.RedNode) {
        return new cljs.core.RedNode(ins.right.key, ins.right.val, new cljs.core.BlackNode(ins.key, ins.val, ins.left, ins.right.left, null), new cljs.core.BlackNode(key, val, ins.right.right, right, null), null);
      } else {
        return new cljs.core.BlackNode(key, val, ins, right, null);
      }
    }
  } else {
    return new cljs.core.BlackNode(key, val, ins, right, null);
  }
};
cljs.core.balance_right = function balance_right(key, val, left, ins) {
  if (ins instanceof cljs.core.RedNode) {
    if (ins.right instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(ins.key, ins.val, new cljs.core.BlackNode(key, val, left, ins.left, null), ins.right.blacken(), null);
    } else {
      if (ins.left instanceof cljs.core.RedNode) {
        return new cljs.core.RedNode(ins.left.key, ins.left.val, new cljs.core.BlackNode(key, val, left, ins.left.left, null), new cljs.core.BlackNode(ins.key, ins.val, ins.left.right, ins.right, null), null);
      } else {
        return new cljs.core.BlackNode(key, val, left, ins, null);
      }
    }
  } else {
    return new cljs.core.BlackNode(key, val, left, ins, null);
  }
};
cljs.core.balance_left_del = function balance_left_del(key, val, del, right) {
  if (del instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(key, val, del.blacken(), right, null);
  } else {
    if (right instanceof cljs.core.BlackNode) {
      return cljs.core.balance_right(key, val, del, right.redden());
    } else {
      if (right instanceof cljs.core.RedNode && right.left instanceof cljs.core.BlackNode) {
        return new cljs.core.RedNode(right.left.key, right.left.val, new cljs.core.BlackNode(key, val, del, right.left.left, null), cljs.core.balance_right(right.key, right.val, right.left.right, right.right.redden()), null);
      } else {
        throw new Error("red-black tree invariant violation");
      }
    }
  }
};
cljs.core.balance_right_del = function balance_right_del(key, val, left, del) {
  if (del instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(key, val, left, del.blacken(), null);
  } else {
    if (left instanceof cljs.core.BlackNode) {
      return cljs.core.balance_left(key, val, left.redden(), del);
    } else {
      if (left instanceof cljs.core.RedNode && left.right instanceof cljs.core.BlackNode) {
        return new cljs.core.RedNode(left.right.key, left.right.val, cljs.core.balance_left(left.key, left.val, left.left.redden(), left.right.left), new cljs.core.BlackNode(key, val, left.right.right, del, null), null);
      } else {
        throw new Error("red-black tree invariant violation");
      }
    }
  }
};
cljs.core.tree_map_kv_reduce = function tree_map_kv_reduce(node, f, init) {
  var init__$1 = !(node.left == null) ? tree_map_kv_reduce(node.left, f, init) : init;
  if (cljs.core.reduced_QMARK_(init__$1)) {
    var G__21723 = init__$1;
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__21723) : cljs.core.deref.call(null, G__21723);
  } else {
    var init__$2 = function() {
      var G__21724 = init__$1;
      var G__21725 = node.key;
      var G__21726 = node.val;
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__21724, G__21725, G__21726) : f.call(null, G__21724, G__21725, G__21726);
    }();
    if (cljs.core.reduced_QMARK_(init__$2)) {
      var G__21727 = init__$2;
      return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__21727) : cljs.core.deref.call(null, G__21727);
    } else {
      var init__$3 = !(node.right == null) ? tree_map_kv_reduce(node.right, f, init__$2) : init__$2;
      if (cljs.core.reduced_QMARK_(init__$3)) {
        var G__21728 = init__$3;
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__21728) : cljs.core.deref.call(null, G__21728);
      } else {
        return init__$3;
      }
    }
  }
};
cljs.core.BlackNode = function(key, val, left, right, __hash) {
  this.key = key;
  this.val = val;
  this.left = left;
  this.right = right;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32402207;
};
cljs.core.BlackNode.prototype.add_right = function(ins) {
  var self__ = this;
  var node = this;
  return ins.balance_right(node);
};
cljs.core.BlackNode.prototype.redden = function() {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, self__.left, self__.right, null);
};
cljs.core.BlackNode.prototype.blacken = function() {
  var self__ = this;
  var node = this;
  return node;
};
cljs.core.BlackNode.prototype.add_left = function(ins) {
  var self__ = this;
  var node = this;
  return ins.balance_left(node);
};
cljs.core.BlackNode.prototype.replace = function(key__$1, val__$1, left__$1, right__$1) {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(key__$1, val__$1, left__$1, right__$1, null);
};
cljs.core.BlackNode.prototype.balance_left = function(parent) {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(parent.key, parent.val, node, parent.right, null);
};
cljs.core.BlackNode.prototype.balance_right = function(parent) {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(parent.key, parent.val, parent.left, node, null);
};
cljs.core.BlackNode.prototype.remove_left = function(del) {
  var self__ = this;
  var node = this;
  return cljs.core.balance_left_del(self__.key, self__.val, del, self__.right);
};
cljs.core.BlackNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var node = this;
  return cljs.core.tree_map_kv_reduce(node, f, init);
};
cljs.core.BlackNode.prototype.remove_right = function(del) {
  var self__ = this;
  var node = this;
  return cljs.core.balance_right_del(self__.key, self__.val, self__.left, del);
};
cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$2 = function(node, k) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1, k, null);
};
cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$3 = function(node, k, not_found) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1, k, not_found);
};
cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$2 = function(node, n) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      return null;
    }
  }
};
cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$3 = function(node, n, not_found) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      return not_found;
    }
  }
};
cljs.core.BlackNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(node, n, v) {
  var self__ = this;
  var node__$1 = this;
  return(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null)).cljs$core$IVector$_assoc_n$arity$3(null, n, v);
};
cljs.core.BlackNode.prototype.cljs$core$IMeta$_meta$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return null;
};
cljs.core.BlackNode.prototype.cljs$core$ICounted$_count$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return 2;
};
cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_key$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.key;
};
cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_val$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.BlackNode.prototype.cljs$core$IStack$_peek$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.BlackNode.prototype.cljs$core$IStack$_pop$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
};
cljs.core.BlackNode.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__7925__auto__ = self__.__hash;
  if (!(h__7925__auto__ == null)) {
    return h__7925__auto__;
  } else {
    var h__7925__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__7925__auto____$1;
    return h__7925__auto____$1;
  }
};
cljs.core.BlackNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.BlackNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.PersistentVector.EMPTY;
};
cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$2 = function(node, f) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1, f);
};
cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$3 = function(node, f, start) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1, f, start);
};
cljs.core.BlackNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(node, k, v) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), k, v);
};
cljs.core.BlackNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY, self__.val), self__.key);
};
cljs.core.BlackNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(node, meta) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), meta);
};
cljs.core.BlackNode.prototype.cljs$core$ICollection$_conj$arity$2 = function(node, o) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val, o], null);
};
cljs.core.BlackNode.prototype.call = function() {
  var G__21730 = null;
  var G__21730__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__21730__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__21730 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__21730__2.call(this, self__, k);
      case 3:
        return G__21730__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__21730.cljs$core$IFn$_invoke$arity$2 = G__21730__2;
  G__21730.cljs$core$IFn$_invoke$arity$3 = G__21730__3;
  return G__21730;
}();
cljs.core.BlackNode.prototype.apply = function(self__, args21729) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args21729)));
};
cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var node = this;
  return node.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var node = this;
  return node.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.BlackNode.cljs$lang$type = true;
cljs.core.BlackNode.cljs$lang$ctorStr = "cljs.core/BlackNode";
cljs.core.BlackNode.cljs$lang$ctorPrWriter = function(this__8091__auto__, writer__8092__auto__, opt__8093__auto__) {
  return cljs.core._write(writer__8092__auto__, "cljs.core/BlackNode");
};
cljs.core.__GT_BlackNode = function __GT_BlackNode(key, val, left, right, __hash) {
  return new cljs.core.BlackNode(key, val, left, right, __hash);
};
cljs.core.BlackNode.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__8482__auto__ = this;
  return cljs.core.es6_iterator(this__8482__auto__);
};
cljs.core.RedNode = function(key, val, left, right, __hash) {
  this.key = key;
  this.val = val;
  this.left = left;
  this.right = right;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32402207;
};
cljs.core.RedNode.prototype.add_right = function(ins) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, self__.left, ins, null);
};
cljs.core.RedNode.prototype.redden = function() {
  var self__ = this;
  var node = this;
  throw new Error("red-black tree invariant violation");
};
cljs.core.RedNode.prototype.blacken = function() {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(self__.key, self__.val, self__.left, self__.right, null);
};
cljs.core.RedNode.prototype.add_left = function(ins) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, ins, self__.right, null);
};
cljs.core.RedNode.prototype.replace = function(key__$1, val__$1, left__$1, right__$1) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(key__$1, val__$1, left__$1, right__$1, null);
};
cljs.core.RedNode.prototype.balance_left = function(parent) {
  var self__ = this;
  var node = this;
  if (self__.left instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(self__.key, self__.val, self__.left.blacken(), new cljs.core.BlackNode(parent.key, parent.val, self__.right, parent.right, null), null);
  } else {
    if (self__.right instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(self__.right.key, self__.right.val, new cljs.core.BlackNode(self__.key, self__.val, self__.left, self__.right.left, null), new cljs.core.BlackNode(parent.key, parent.val, self__.right.right, parent.right, null), null);
    } else {
      return new cljs.core.BlackNode(parent.key, parent.val, node, parent.right, null);
    }
  }
};
cljs.core.RedNode.prototype.balance_right = function(parent) {
  var self__ = this;
  var node = this;
  if (self__.right instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(self__.key, self__.val, new cljs.core.BlackNode(parent.key, parent.val, parent.left, self__.left, null), self__.right.blacken(), null);
  } else {
    if (self__.left instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(self__.left.key, self__.left.val, new cljs.core.BlackNode(parent.key, parent.val, parent.left, self__.left.left, null), new cljs.core.BlackNode(self__.key, self__.val, self__.left.right, self__.right, null), null);
    } else {
      return new cljs.core.BlackNode(parent.key, parent.val, parent.left, node, null);
    }
  }
};
cljs.core.RedNode.prototype.remove_left = function(del) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, del, self__.right, null);
};
cljs.core.RedNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var node = this;
  return cljs.core.tree_map_kv_reduce(node, f, init);
};
cljs.core.RedNode.prototype.remove_right = function(del) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, self__.left, del, null);
};
cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$2 = function(node, k) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1, k, null);
};
cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$3 = function(node, k, not_found) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1, k, not_found);
};
cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$2 = function(node, n) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      return null;
    }
  }
};
cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$3 = function(node, n, not_found) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      return not_found;
    }
  }
};
cljs.core.RedNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(node, n, v) {
  var self__ = this;
  var node__$1 = this;
  return(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null)).cljs$core$IVector$_assoc_n$arity$3(null, n, v);
};
cljs.core.RedNode.prototype.cljs$core$IMeta$_meta$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return null;
};
cljs.core.RedNode.prototype.cljs$core$ICounted$_count$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return 2;
};
cljs.core.RedNode.prototype.cljs$core$IMapEntry$_key$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.key;
};
cljs.core.RedNode.prototype.cljs$core$IMapEntry$_val$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.RedNode.prototype.cljs$core$IStack$_peek$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.RedNode.prototype.cljs$core$IStack$_pop$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
};
cljs.core.RedNode.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__7925__auto__ = self__.__hash;
  if (!(h__7925__auto__ == null)) {
    return h__7925__auto__;
  } else {
    var h__7925__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__7925__auto____$1;
    return h__7925__auto____$1;
  }
};
cljs.core.RedNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.RedNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.PersistentVector.EMPTY;
};
cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$2 = function(node, f) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1, f);
};
cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$3 = function(node, f, start) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1, f, start);
};
cljs.core.RedNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(node, k, v) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), k, v);
};
cljs.core.RedNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY, self__.val), self__.key);
};
cljs.core.RedNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(node, meta) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), meta);
};
cljs.core.RedNode.prototype.cljs$core$ICollection$_conj$arity$2 = function(node, o) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val, o], null);
};
cljs.core.RedNode.prototype.call = function() {
  var G__21732 = null;
  var G__21732__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__21732__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__21732 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__21732__2.call(this, self__, k);
      case 3:
        return G__21732__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__21732.cljs$core$IFn$_invoke$arity$2 = G__21732__2;
  G__21732.cljs$core$IFn$_invoke$arity$3 = G__21732__3;
  return G__21732;
}();
cljs.core.RedNode.prototype.apply = function(self__, args21731) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args21731)));
};
cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var node = this;
  return node.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var node = this;
  return node.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.RedNode.cljs$lang$type = true;
cljs.core.RedNode.cljs$lang$ctorStr = "cljs.core/RedNode";
cljs.core.RedNode.cljs$lang$ctorPrWriter = function(this__8091__auto__, writer__8092__auto__, opt__8093__auto__) {
  return cljs.core._write(writer__8092__auto__, "cljs.core/RedNode");
};
cljs.core.__GT_RedNode = function __GT_RedNode(key, val, left, right, __hash) {
  return new cljs.core.RedNode(key, val, left, right, __hash);
};
cljs.core.RedNode.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__8482__auto__ = this;
  return cljs.core.es6_iterator(this__8482__auto__);
};
cljs.core.tree_map_add = function tree_map_add(comp, tree, k, v, found) {
  if (tree == null) {
    return new cljs.core.RedNode(k, v, null, null, null);
  } else {
    var c = function() {
      var G__21745 = k;
      var G__21746 = tree.key;
      return comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__21745, G__21746) : comp.call(null, G__21745, G__21746);
    }();
    if (c === 0) {
      found[0] = tree;
      return null;
    } else {
      if (c < 0) {
        var ins = tree_map_add(comp, tree.left, k, v, found);
        if (!(ins == null)) {
          return tree.add_left(ins);
        } else {
          return null;
        }
      } else {
        var ins = tree_map_add(comp, tree.right, k, v, found);
        if (!(ins == null)) {
          return tree.add_right(ins);
        } else {
          return null;
        }
      }
    }
  }
};
cljs.core.tree_map_append = function tree_map_append(left, right) {
  if (left == null) {
    return right;
  } else {
    if (right == null) {
      return left;
    } else {
      if (left instanceof cljs.core.RedNode) {
        if (right instanceof cljs.core.RedNode) {
          var app = tree_map_append(left.right, right.left);
          if (app instanceof cljs.core.RedNode) {
            return new cljs.core.RedNode(app.key, app.val, new cljs.core.RedNode(left.key, left.val, left.left, app.left, null), new cljs.core.RedNode(right.key, right.val, app.right, right.right, null), null);
          } else {
            return new cljs.core.RedNode(left.key, left.val, left.left, new cljs.core.RedNode(right.key, right.val, app, right.right, null), null);
          }
        } else {
          return new cljs.core.RedNode(left.key, left.val, left.left, tree_map_append(left.right, right), null);
        }
      } else {
        if (right instanceof cljs.core.RedNode) {
          return new cljs.core.RedNode(right.key, right.val, tree_map_append(left, right.left), right.right, null);
        } else {
          var app = tree_map_append(left.right, right.left);
          if (app instanceof cljs.core.RedNode) {
            return new cljs.core.RedNode(app.key, app.val, new cljs.core.BlackNode(left.key, left.val, left.left, app.left, null), new cljs.core.BlackNode(right.key, right.val, app.right, right.right, null), null);
          } else {
            return cljs.core.balance_left_del(left.key, left.val, left.left, new cljs.core.BlackNode(right.key, right.val, app, right.right, null));
          }
        }
      }
    }
  }
};
cljs.core.tree_map_remove = function tree_map_remove(comp, tree, k, found) {
  if (!(tree == null)) {
    var c = function() {
      var G__21765 = k;
      var G__21766 = tree.key;
      return comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__21765, G__21766) : comp.call(null, G__21765, G__21766);
    }();
    if (c === 0) {
      found[0] = tree;
      return cljs.core.tree_map_append(tree.left, tree.right);
    } else {
      if (c < 0) {
        var del = tree_map_remove(comp, tree.left, k, found);
        if (!(del == null) || !(found[0] == null)) {
          if (tree.left instanceof cljs.core.BlackNode) {
            return cljs.core.balance_left_del(tree.key, tree.val, del, tree.right);
          } else {
            return new cljs.core.RedNode(tree.key, tree.val, del, tree.right, null);
          }
        } else {
          return null;
        }
      } else {
        var del = tree_map_remove(comp, tree.right, k, found);
        if (!(del == null) || !(found[0] == null)) {
          if (tree.right instanceof cljs.core.BlackNode) {
            return cljs.core.balance_right_del(tree.key, tree.val, tree.left, del);
          } else {
            return new cljs.core.RedNode(tree.key, tree.val, tree.left, del, null);
          }
        } else {
          return null;
        }
      }
    }
  } else {
    return null;
  }
};
cljs.core.tree_map_replace = function tree_map_replace(comp, tree, k, v) {
  var tk = tree.key;
  var c = function() {
    var G__21777 = k;
    var G__21778 = tk;
    return comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__21777, G__21778) : comp.call(null, G__21777, G__21778);
  }();
  if (c === 0) {
    return tree.replace(tk, v, tree.left, tree.right);
  } else {
    if (c < 0) {
      return tree.replace(tk, tree.val, tree_map_replace(comp, tree.left, k, v), tree.right);
    } else {
      return tree.replace(tk, tree.val, tree.left, tree_map_replace(comp, tree.right, k, v));
    }
  }
};
cljs.core.PersistentTreeMap = function(comp, tree, cnt, meta, __hash) {
  this.comp = comp;
  this.tree = tree;
  this.cnt = cnt;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 418776847;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.PersistentTreeMap.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__21780 = cljs.core.seq(coll);
  var chunk__21781 = null;
  var count__21782 = 0;
  var i__21783 = 0;
  while (true) {
    if (i__21783 < count__21782) {
      var vec__21784 = chunk__21781.cljs$core$IIndexed$_nth$arity$2(null, i__21783);
      var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21784, 0, null);
      var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21784, 1, null);
      var G__21785_21797 = v;
      var G__21786_21798 = k;
      f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__21785_21797, G__21786_21798) : f.call(null, G__21785_21797, G__21786_21798);
      var G__21799 = seq__21780;
      var G__21800 = chunk__21781;
      var G__21801 = count__21782;
      var G__21802 = i__21783 + 1;
      seq__21780 = G__21799;
      chunk__21781 = G__21800;
      count__21782 = G__21801;
      i__21783 = G__21802;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq(seq__21780);
      if (temp__4126__auto__) {
        var seq__21780__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__21780__$1)) {
          var c__8291__auto__ = cljs.core.chunk_first(seq__21780__$1);
          var G__21803 = cljs.core.chunk_rest(seq__21780__$1);
          var G__21804 = c__8291__auto__;
          var G__21805 = cljs.core.count(c__8291__auto__);
          var G__21806 = 0;
          seq__21780 = G__21803;
          chunk__21781 = G__21804;
          count__21782 = G__21805;
          i__21783 = G__21806;
          continue;
        } else {
          var vec__21787 = cljs.core.first(seq__21780__$1);
          var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21787, 0, null);
          var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21787, 1, null);
          var G__21788_21807 = v;
          var G__21789_21808 = k;
          f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__21788_21807, G__21789_21808) : f.call(null, G__21788_21807, G__21789_21808);
          var G__21809 = cljs.core.next(seq__21780__$1);
          var G__21810 = null;
          var G__21811 = 0;
          var G__21812 = 0;
          seq__21780 = G__21809;
          chunk__21781 = G__21810;
          count__21782 = G__21811;
          i__21783 = G__21812;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentTreeMap.prototype.get = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentTreeMap.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentTreeMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentTreeMap.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(function() {
    var G__21790 = coll;
    return cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__21790) : cljs.core.keys.call(null, G__21790);
  }());
};
cljs.core.PersistentTreeMap.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(function() {
    var G__21791 = coll;
    return cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__21791) : cljs.core.vals.call(null, G__21791);
  }());
};
cljs.core.PersistentTreeMap.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentTreeMap.prototype.entry_at = function(k) {
  var self__ = this;
  var coll = this;
  var t = self__.tree;
  while (true) {
    if (!(t == null)) {
      var c = function() {
        var G__21792 = k;
        var G__21793 = t.key;
        return self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__21792, G__21793) : self__.comp.call(null, G__21792, G__21793);
      }();
      if (c === 0) {
        return t;
      } else {
        if (c < 0) {
          var G__21813 = t.left;
          t = G__21813;
          continue;
        } else {
          var G__21814 = t.right;
          t = G__21814;
          continue;
        }
      }
    } else {
      return null;
    }
    break;
  }
};
cljs.core.PersistentTreeMap.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_(coll, k);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, k, null);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var n = coll__$1.entry_at(k);
  if (!(n == null)) {
    return n.val;
  } else {
    return not_found;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  if (!(self__.tree == null)) {
    return cljs.core.tree_map_kv_reduce(self__.tree, f, init);
  } else {
    return init;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentTreeMap(self__.comp, self__.tree, self__.cnt, self__.meta, self__.__hash);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core.create_tree_map_seq(self__.tree, false, self__.cnt);
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__7925__auto__ = self__.__hash;
  if (!(h__7925__auto__ == null)) {
    return h__7925__auto__;
  } else {
    var h__7925__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
    self__.__hash = h__7925__auto____$1;
    return h__7925__auto____$1;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_map(coll__$1, other);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeMap(self__.comp, null, 0, self__.meta, 0);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  var found = [null];
  var t = cljs.core.tree_map_remove(self__.comp, self__.tree, k, found);
  if (t == null) {
    if (cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found, 0) == null) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentTreeMap(self__.comp, null, 0, self__.meta, null);
    }
  } else {
    return new cljs.core.PersistentTreeMap(self__.comp, t.blacken(), self__.cnt - 1, self__.meta, null);
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  var found = [null];
  var t = cljs.core.tree_map_add(self__.comp, self__.tree, k, v, found);
  if (t == null) {
    var found_node = cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found, 0);
    if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(v, found_node.val)) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentTreeMap(self__.comp, cljs.core.tree_map_replace(self__.comp, self__.tree, k, v), self__.cnt, self__.meta, null);
    }
  } else {
    return new cljs.core.PersistentTreeMap(self__.comp, t.blacken(), self__.cnt + 1, self__.meta, null);
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return!(coll__$1.entry_at(k) == null);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core.create_tree_map_seq(self__.tree, true, self__.cnt);
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeMap(self__.comp, self__.tree, self__.cnt, meta__$1, self__.__hash);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_(entry)) {
    return cljs.core._assoc(coll__$1, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 1));
  } else {
    var ret = coll__$1;
    var es = cljs.core.seq(entry);
    while (true) {
      if (es == null) {
        return ret;
      } else {
        var e = cljs.core.first(es);
        if (cljs.core.vector_QMARK_(e)) {
          var G__21815 = cljs.core._assoc(ret, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 1));
          var G__21816 = cljs.core.next(es);
          ret = G__21815;
          es = G__21816;
          continue;
        } else {
          throw new Error("conj on a map takes map entries or seqables of map entries");
        }
      }
      break;
    }
  }
};
cljs.core.PersistentTreeMap.prototype.call = function() {
  var G__21817 = null;
  var G__21817__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__21817__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__21817 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__21817__2.call(this, self__, k);
      case 3:
        return G__21817__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__21817.cljs$core$IFn$_invoke$arity$2 = G__21817__2;
  G__21817.cljs$core$IFn$_invoke$arity$3 = G__21817__3;
  return G__21817;
}();
cljs.core.PersistentTreeMap.prototype.apply = function(self__, args21779) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args21779)));
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = function(coll, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core.create_tree_map_seq(self__.tree, ascending_QMARK_, self__.cnt);
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = function(coll, k, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    var stack = null;
    var t = self__.tree;
    while (true) {
      if (!(t == null)) {
        var c = function() {
          var G__21794 = k;
          var G__21795 = t.key;
          return self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__21794, G__21795) : self__.comp.call(null, G__21794, G__21795);
        }();
        if (c === 0) {
          return new cljs.core.PersistentTreeMapSeq(null, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack, t), ascending_QMARK_, -1, null);
        } else {
          if (cljs.core.truth_(ascending_QMARK_)) {
            if (c < 0) {
              var G__21818 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack, t);
              var G__21819 = t.left;
              stack = G__21818;
              t = G__21819;
              continue;
            } else {
              var G__21820 = stack;
              var G__21821 = t.right;
              stack = G__21820;
              t = G__21821;
              continue;
            }
          } else {
            if (c > 0) {
              var G__21822 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack, t);
              var G__21823 = t.right;
              stack = G__21822;
              t = G__21823;
              continue;
            } else {
              var G__21824 = stack;
              var G__21825 = t.left;
              stack = G__21824;
              t = G__21825;
              continue;
            }
          }
        }
      } else {
        if (stack == null) {
          return null;
        } else {
          return new cljs.core.PersistentTreeMapSeq(null, stack, ascending_QMARK_, -1, null);
        }
      }
      break;
    }
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_entry_key$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  var G__21796 = entry;
  return cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__21796) : cljs.core.key.call(null, G__21796);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_comparator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.comp;
};
cljs.core.PersistentTreeMap.cljs$lang$type = true;
cljs.core.PersistentTreeMap.cljs$lang$ctorStr = "cljs.core/PersistentTreeMap";
cljs.core.PersistentTreeMap.cljs$lang$ctorPrWriter = function(this__8091__auto__, writer__8092__auto__, opt__8093__auto__) {
  return cljs.core._write(writer__8092__auto__, "cljs.core/PersistentTreeMap");
};
cljs.core.__GT_PersistentTreeMap = function __GT_PersistentTreeMap(comp, tree, cnt, meta, __hash) {
  return new cljs.core.PersistentTreeMap(comp, tree, cnt, meta, __hash);
};
cljs.core.PersistentTreeMap.EMPTY = new cljs.core.PersistentTreeMap(cljs.core.compare, null, 0, null, cljs.core.empty_unordered_hash);
cljs.core.PersistentTreeMap.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__8482__auto__ = this;
  return cljs.core.es6_iterator(this__8482__auto__);
};
cljs.core.hash_map = function() {
  var hash_map__delegate = function(keyvals) {
    var in$ = cljs.core.seq(keyvals);
    var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
    while (true) {
      if (in$) {
        var G__21826 = cljs.core.nnext(in$);
        var G__21827 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out, cljs.core.first(in$), cljs.core.second(in$));
        in$ = G__21826;
        out = G__21827;
        continue;
      } else {
        return cljs.core.persistent_BANG_(out);
      }
      break;
    }
  };
  var hash_map = function(var_args) {
    var keyvals = null;
    if (arguments.length > 0) {
      var G__21828__i = 0, G__21828__a = new Array(arguments.length - 0);
      while (G__21828__i < G__21828__a.length) {
        G__21828__a[G__21828__i] = arguments[G__21828__i + 0];
        ++G__21828__i;
      }
      keyvals = new cljs.core.IndexedSeq(G__21828__a, 0);
    }
    return hash_map__delegate.call(this, keyvals);
  };
  hash_map.cljs$lang$maxFixedArity = 0;
  hash_map.cljs$lang$applyTo = function(arglist__21829) {
    var keyvals = cljs.core.seq(arglist__21829);
    return hash_map__delegate(keyvals);
  };
  hash_map.cljs$core$IFn$_invoke$arity$variadic = hash_map__delegate;
  return hash_map;
}();
cljs.core.array_map = function() {
  var array_map__delegate = function(keyvals) {
    return cljs.core.PersistentArrayMap.fromArray(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array, keyvals), true, false);
  };
  var array_map = function(var_args) {
    var keyvals = null;
    if (arguments.length > 0) {
      var G__21830__i = 0, G__21830__a = new Array(arguments.length - 0);
      while (G__21830__i < G__21830__a.length) {
        G__21830__a[G__21830__i] = arguments[G__21830__i + 0];
        ++G__21830__i;
      }
      keyvals = new cljs.core.IndexedSeq(G__21830__a, 0);
    }
    return array_map__delegate.call(this, keyvals);
  };
  array_map.cljs$lang$maxFixedArity = 0;
  array_map.cljs$lang$applyTo = function(arglist__21831) {
    var keyvals = cljs.core.seq(arglist__21831);
    return array_map__delegate(keyvals);
  };
  array_map.cljs$core$IFn$_invoke$arity$variadic = array_map__delegate;
  return array_map;
}();
cljs.core.obj_map = function() {
  var obj_map__delegate = function(keyvals) {
    var ks = [];
    var obj = function() {
      var obj21835 = {};
      return obj21835;
    }();
    var kvs = cljs.core.seq(keyvals);
    while (true) {
      if (kvs) {
        ks.push(cljs.core.first(kvs));
        obj[cljs.core.first(kvs)] = cljs.core.second(kvs);
        var G__21836 = cljs.core.nnext(kvs);
        kvs = G__21836;
        continue;
      } else {
        return cljs.core.ObjMap.fromObject(ks, obj);
      }
      break;
    }
  };
  var obj_map = function(var_args) {
    var keyvals = null;
    if (arguments.length > 0) {
      var G__21837__i = 0, G__21837__a = new Array(arguments.length - 0);
      while (G__21837__i < G__21837__a.length) {
        G__21837__a[G__21837__i] = arguments[G__21837__i + 0];
        ++G__21837__i;
      }
      keyvals = new cljs.core.IndexedSeq(G__21837__a, 0);
    }
    return obj_map__delegate.call(this, keyvals);
  };
  obj_map.cljs$lang$maxFixedArity = 0;
  obj_map.cljs$lang$applyTo = function(arglist__21838) {
    var keyvals = cljs.core.seq(arglist__21838);
    return obj_map__delegate(keyvals);
  };
  obj_map.cljs$core$IFn$_invoke$arity$variadic = obj_map__delegate;
  return obj_map;
}();
cljs.core.sorted_map = function() {
  var sorted_map__delegate = function(keyvals) {
    var in$ = cljs.core.seq(keyvals);
    var out = cljs.core.PersistentTreeMap.EMPTY;
    while (true) {
      if (in$) {
        var G__21839 = cljs.core.nnext(in$);
        var G__21840 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out, cljs.core.first(in$), cljs.core.second(in$));
        in$ = G__21839;
        out = G__21840;
        continue;
      } else {
        return out;
      }
      break;
    }
  };
  var sorted_map = function(var_args) {
    var keyvals = null;
    if (arguments.length > 0) {
      var G__21841__i = 0, G__21841__a = new Array(arguments.length - 0);
      while (G__21841__i < G__21841__a.length) {
        G__21841__a[G__21841__i] = arguments[G__21841__i + 0];
        ++G__21841__i;
      }
      keyvals = new cljs.core.IndexedSeq(G__21841__a, 0);
    }
    return sorted_map__delegate.call(this, keyvals);
  };
  sorted_map.cljs$lang$maxFixedArity = 0;
  sorted_map.cljs$lang$applyTo = function(arglist__21842) {
    var keyvals = cljs.core.seq(arglist__21842);
    return sorted_map__delegate(keyvals);
  };
  sorted_map.cljs$core$IFn$_invoke$arity$variadic = sorted_map__delegate;
  return sorted_map;
}();
cljs.core.sorted_map_by = function() {
  var sorted_map_by__delegate = function(comparator, keyvals) {
    var in$ = cljs.core.seq(keyvals);
    var out = new cljs.core.PersistentTreeMap(cljs.core.fn__GT_comparator(comparator), null, 0, null, 0);
    while (true) {
      if (in$) {
        var G__21843 = cljs.core.nnext(in$);
        var G__21844 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out, cljs.core.first(in$), cljs.core.second(in$));
        in$ = G__21843;
        out = G__21844;
        continue;
      } else {
        return out;
      }
      break;
    }
  };
  var sorted_map_by = function(comparator, var_args) {
    var keyvals = null;
    if (arguments.length > 1) {
      var G__21845__i = 0, G__21845__a = new Array(arguments.length - 1);
      while (G__21845__i < G__21845__a.length) {
        G__21845__a[G__21845__i] = arguments[G__21845__i + 1];
        ++G__21845__i;
      }
      keyvals = new cljs.core.IndexedSeq(G__21845__a, 0);
    }
    return sorted_map_by__delegate.call(this, comparator, keyvals);
  };
  sorted_map_by.cljs$lang$maxFixedArity = 1;
  sorted_map_by.cljs$lang$applyTo = function(arglist__21846) {
    var comparator = cljs.core.first(arglist__21846);
    var keyvals = cljs.core.rest(arglist__21846);
    return sorted_map_by__delegate(comparator, keyvals);
  };
  sorted_map_by.cljs$core$IFn$_invoke$arity$variadic = sorted_map_by__delegate;
  return sorted_map_by;
}();
cljs.core.KeySeq = function(mseq, _meta) {
  this.mseq = mseq;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374988;
};
cljs.core.KeySeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.KeySeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.KeySeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__._meta;
};
cljs.core.KeySeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = function() {
    var G__21847 = self__.mseq;
    if (G__21847) {
      var bit__8185__auto__ = G__21847.cljs$lang$protocol_mask$partition0$ & 128;
      if (bit__8185__auto__ || G__21847.cljs$core$INext$) {
        return true;
      } else {
        if (!G__21847.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.INext, G__21847);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.INext, G__21847);
    }
  }() ? self__.mseq.cljs$core$INext$_next$arity$1(null) : cljs.core.next(self__.mseq);
  if (nseq == null) {
    return null;
  } else {
    return new cljs.core.KeySeq(nseq, self__._meta);
  }
};
cljs.core.KeySeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll(coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.KeySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__._meta);
};
cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
  return me.cljs$core$IMapEntry$_key$arity$1(null);
};
cljs.core.KeySeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = function() {
    var G__21848 = self__.mseq;
    if (G__21848) {
      var bit__8185__auto__ = G__21848.cljs$lang$protocol_mask$partition0$ & 128;
      if (bit__8185__auto__ || G__21848.cljs$core$INext$) {
        return true;
      } else {
        if (!G__21848.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.INext, G__21848);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.INext, G__21848);
    }
  }() ? self__.mseq.cljs$core$INext$_next$arity$1(null) : cljs.core.next(self__.mseq);
  if (!(nseq == null)) {
    return new cljs.core.KeySeq(nseq, self__._meta);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.KeySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.KeySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.KeySeq(self__.mseq, new_meta);
};
cljs.core.KeySeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.KeySeq.cljs$lang$type = true;
cljs.core.KeySeq.cljs$lang$ctorStr = "cljs.core/KeySeq";
cljs.core.KeySeq.cljs$lang$ctorPrWriter = function(this__8091__auto__, writer__8092__auto__, opt__8093__auto__) {
  return cljs.core._write(writer__8092__auto__, "cljs.core/KeySeq");
};
cljs.core.__GT_KeySeq = function __GT_KeySeq(mseq, _meta) {
  return new cljs.core.KeySeq(mseq, _meta);
};
cljs.core.KeySeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__8482__auto__ = this;
  return cljs.core.es6_iterator(this__8482__auto__);
};
cljs.core.keys = function keys(hash_map) {
  var temp__4126__auto__ = cljs.core.seq(hash_map);
  if (temp__4126__auto__) {
    var mseq = temp__4126__auto__;
    return new cljs.core.KeySeq(mseq, null);
  } else {
    return null;
  }
};
cljs.core.key = function key(map_entry) {
  return cljs.core._key(map_entry);
};
cljs.core.ValSeq = function(mseq, _meta) {
  this.mseq = mseq;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374988;
};
cljs.core.ValSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.ValSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.ValSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__._meta;
};
cljs.core.ValSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = function() {
    var G__21849 = self__.mseq;
    if (G__21849) {
      var bit__8185__auto__ = G__21849.cljs$lang$protocol_mask$partition0$ & 128;
      if (bit__8185__auto__ || G__21849.cljs$core$INext$) {
        return true;
      } else {
        if (!G__21849.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.INext, G__21849);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.INext, G__21849);
    }
  }() ? self__.mseq.cljs$core$INext$_next$arity$1(null) : cljs.core.next(self__.mseq);
  if (nseq == null) {
    return null;
  } else {
    return new cljs.core.ValSeq(nseq, self__._meta);
  }
};
cljs.core.ValSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll(coll__$1);
};
cljs.core.ValSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.ValSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__._meta);
};
cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.ValSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
  return me.cljs$core$IMapEntry$_val$arity$1(null);
};
cljs.core.ValSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = function() {
    var G__21850 = self__.mseq;
    if (G__21850) {
      var bit__8185__auto__ = G__21850.cljs$lang$protocol_mask$partition0$ & 128;
      if (bit__8185__auto__ || G__21850.cljs$core$INext$) {
        return true;
      } else {
        if (!G__21850.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.INext, G__21850);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.INext, G__21850);
    }
  }() ? self__.mseq.cljs$core$INext$_next$arity$1(null) : cljs.core.next(self__.mseq);
  if (!(nseq == null)) {
    return new cljs.core.ValSeq(nseq, self__._meta);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.ValSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.ValSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ValSeq(self__.mseq, new_meta);
};
cljs.core.ValSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.ValSeq.cljs$lang$type = true;
cljs.core.ValSeq.cljs$lang$ctorStr = "cljs.core/ValSeq";
cljs.core.ValSeq.cljs$lang$ctorPrWriter = function(this__8091__auto__, writer__8092__auto__, opt__8093__auto__) {
  return cljs.core._write(writer__8092__auto__, "cljs.core/ValSeq");
};
cljs.core.__GT_ValSeq = function __GT_ValSeq(mseq, _meta) {
  return new cljs.core.ValSeq(mseq, _meta);
};
cljs.core.ValSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__8482__auto__ = this;
  return cljs.core.es6_iterator(this__8482__auto__);
};
cljs.core.vals = function vals(hash_map) {
  var temp__4126__auto__ = cljs.core.seq(hash_map);
  if (temp__4126__auto__) {
    var mseq = temp__4126__auto__;
    return new cljs.core.ValSeq(mseq, null);
  } else {
    return null;
  }
};
cljs.core.val = function val(map_entry) {
  return cljs.core._val(map_entry);
};
cljs.core.merge = function() {
  var merge__delegate = function(maps) {
    if (cljs.core.truth_(cljs.core.some(cljs.core.identity, maps))) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(function(p1__21851_SHARP_, p2__21852_SHARP_) {
        return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(function() {
          var or__7504__auto__ = p1__21851_SHARP_;
          if (cljs.core.truth_(or__7504__auto__)) {
            return or__7504__auto__;
          } else {
            return cljs.core.PersistentArrayMap.EMPTY;
          }
        }(), p2__21852_SHARP_);
      }, maps);
    } else {
      return null;
    }
  };
  var merge = function(var_args) {
    var maps = null;
    if (arguments.length > 0) {
      var G__21853__i = 0, G__21853__a = new Array(arguments.length - 0);
      while (G__21853__i < G__21853__a.length) {
        G__21853__a[G__21853__i] = arguments[G__21853__i + 0];
        ++G__21853__i;
      }
      maps = new cljs.core.IndexedSeq(G__21853__a, 0);
    }
    return merge__delegate.call(this, maps);
  };
  merge.cljs$lang$maxFixedArity = 0;
  merge.cljs$lang$applyTo = function(arglist__21854) {
    var maps = cljs.core.seq(arglist__21854);
    return merge__delegate(maps);
  };
  merge.cljs$core$IFn$_invoke$arity$variadic = merge__delegate;
  return merge;
}();
cljs.core.merge_with = function() {
  var merge_with__delegate = function(f, maps) {
    if (cljs.core.truth_(cljs.core.some(cljs.core.identity, maps))) {
      var merge_entry = function(m, e) {
        var k = cljs.core.first(e);
        var v = cljs.core.second(e);
        if (cljs.core.contains_QMARK_(m, k)) {
          return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
            var G__21857 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
            var G__21858 = v;
            return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__21857, G__21858) : f.call(null, G__21857, G__21858);
          }());
        } else {
          return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, v);
        }
      };
      var merge2 = function(merge_entry) {
        return function(m1, m2) {
          return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(merge_entry, function() {
            var or__7504__auto__ = m1;
            if (cljs.core.truth_(or__7504__auto__)) {
              return or__7504__auto__;
            } else {
              return cljs.core.PersistentArrayMap.EMPTY;
            }
          }(), cljs.core.seq(m2));
        };
      }(merge_entry);
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(merge2, maps);
    } else {
      return null;
    }
  };
  var merge_with = function(f, var_args) {
    var maps = null;
    if (arguments.length > 1) {
      var G__21859__i = 0, G__21859__a = new Array(arguments.length - 1);
      while (G__21859__i < G__21859__a.length) {
        G__21859__a[G__21859__i] = arguments[G__21859__i + 1];
        ++G__21859__i;
      }
      maps = new cljs.core.IndexedSeq(G__21859__a, 0);
    }
    return merge_with__delegate.call(this, f, maps);
  };
  merge_with.cljs$lang$maxFixedArity = 1;
  merge_with.cljs$lang$applyTo = function(arglist__21860) {
    var f = cljs.core.first(arglist__21860);
    var maps = cljs.core.rest(arglist__21860);
    return merge_with__delegate(f, maps);
  };
  merge_with.cljs$core$IFn$_invoke$arity$variadic = merge_with__delegate;
  return merge_with;
}();
cljs.core.select_keys = function select_keys(map, keyseq) {
  var ret = cljs.core.PersistentArrayMap.EMPTY;
  var keys = cljs.core.seq(keyseq);
  while (true) {
    if (keys) {
      var key = cljs.core.first(keys);
      var entry = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map, key, new cljs.core.Keyword("cljs.core", "not-found", "cljs.core/not-found", -1572889185));
      var G__21861 = cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(entry, new cljs.core.Keyword("cljs.core", "not-found", "cljs.core/not-found", -1572889185)) ? cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret, key, entry) : ret;
      var G__21862 = cljs.core.next(keys);
      ret = G__21861;
      keys = G__21862;
      continue;
    } else {
      return cljs.core.with_meta(ret, cljs.core.meta(map));
    }
    break;
  }
};
cljs.core.PersistentHashSet = function(meta, hash_map, __hash) {
  this.meta = meta;
  this.hash_map = hash_map;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 15077647;
  this.cljs$lang$protocol_mask$partition1$ = 8196;
};
cljs.core.PersistentHashSet.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentHashSet.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentHashSet.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentHashSet.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentHashSet.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentHashSet.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_(coll, k);
};
cljs.core.PersistentHashSet.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__21865 = cljs.core.seq(coll);
  var chunk__21866 = null;
  var count__21867 = 0;
  var i__21868 = 0;
  while (true) {
    if (i__21868 < count__21867) {
      var vec__21869 = chunk__21866.cljs$core$IIndexed$_nth$arity$2(null, i__21868);
      var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21869, 0, null);
      var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21869, 1, null);
      var G__21870_21875 = v;
      var G__21871_21876 = k;
      f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__21870_21875, G__21871_21876) : f.call(null, G__21870_21875, G__21871_21876);
      var G__21877 = seq__21865;
      var G__21878 = chunk__21866;
      var G__21879 = count__21867;
      var G__21880 = i__21868 + 1;
      seq__21865 = G__21877;
      chunk__21866 = G__21878;
      count__21867 = G__21879;
      i__21868 = G__21880;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq(seq__21865);
      if (temp__4126__auto__) {
        var seq__21865__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__21865__$1)) {
          var c__8291__auto__ = cljs.core.chunk_first(seq__21865__$1);
          var G__21881 = cljs.core.chunk_rest(seq__21865__$1);
          var G__21882 = c__8291__auto__;
          var G__21883 = cljs.core.count(c__8291__auto__);
          var G__21884 = 0;
          seq__21865 = G__21881;
          chunk__21866 = G__21882;
          count__21867 = G__21883;
          i__21868 = G__21884;
          continue;
        } else {
          var vec__21872 = cljs.core.first(seq__21865__$1);
          var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21872, 0, null);
          var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21872, 1, null);
          var G__21873_21885 = v;
          var G__21874_21886 = k;
          f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__21873_21885, G__21874_21886) : f.call(null, G__21873_21885, G__21874_21886);
          var G__21887 = cljs.core.next(seq__21865__$1);
          var G__21888 = null;
          var G__21889 = 0;
          var G__21890 = 0;
          seq__21865 = G__21887;
          chunk__21866 = G__21888;
          count__21867 = G__21889;
          i__21868 = G__21890;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, v, null);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, v, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core._contains_key_QMARK_(self__.hash_map, v)) {
    return v;
  } else {
    return not_found;
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentHashSet(self__.meta, self__.hash_map, self__.__hash);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._count(self__.hash_map);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__7925__auto__ = self__.__hash;
  if (!(h__7925__auto__ == null)) {
    return h__7925__auto__;
  } else {
    var h__7925__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
    self__.__hash = h__7925__auto____$1;
    return h__7925__auto____$1;
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.set_QMARK_(other) && cljs.core.count(coll__$1) === cljs.core.count(other) && cljs.core.every_QMARK_(function(coll__$1) {
    return function(p1__21863_SHARP_) {
      return cljs.core.contains_QMARK_(coll__$1, p1__21863_SHARP_);
    };
  }(coll__$1), other);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientHashSet(cljs.core._as_transient(self__.hash_map));
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.PersistentHashSet.EMPTY, self__.meta);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ISet$_disjoin$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashSet(self__.meta, cljs.core._dissoc(self__.hash_map, v), null);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.keys(self__.hash_map);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashSet(meta__$1, self__.hash_map, self__.__hash);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashSet(self__.meta, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.hash_map, o, null), null);
};
cljs.core.PersistentHashSet.prototype.call = function() {
  var G__21891 = null;
  var G__21891__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__21891__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__21891 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__21891__2.call(this, self__, k);
      case 3:
        return G__21891__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__21891.cljs$core$IFn$_invoke$arity$2 = G__21891__2;
  G__21891.cljs$core$IFn$_invoke$arity$3 = G__21891__3;
  return G__21891;
}();
cljs.core.PersistentHashSet.prototype.apply = function(self__, args21864) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args21864)));
};
cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentHashSet.cljs$lang$type = true;
cljs.core.PersistentHashSet.cljs$lang$ctorStr = "cljs.core/PersistentHashSet";
cljs.core.PersistentHashSet.cljs$lang$ctorPrWriter = function(this__8091__auto__, writer__8092__auto__, opt__8093__auto__) {
  return cljs.core._write(writer__8092__auto__, "cljs.core/PersistentHashSet");
};
cljs.core.__GT_PersistentHashSet = function __GT_PersistentHashSet(meta, hash_map, __hash) {
  return new cljs.core.PersistentHashSet(meta, hash_map, __hash);
};
cljs.core.PersistentHashSet.EMPTY = new cljs.core.PersistentHashSet(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.empty_unordered_hash);
cljs.core.PersistentHashSet.fromArray = function(items, no_clone) {
  var len = items.length;
  if (len <= cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
    var arr = no_clone ? items : cljs.core.aclone(items);
    var i = 0;
    var out = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
    while (true) {
      if (i < len) {
        var G__21892 = i + 1;
        var G__21893 = cljs.core._assoc_BANG_(out, items[i], null);
        i = G__21892;
        out = G__21893;
        continue;
      } else {
        return new cljs.core.PersistentHashSet(null, cljs.core._persistent_BANG_(out), null);
      }
      break;
    }
  } else {
    var i = 0;
    var out = cljs.core.transient$(cljs.core.PersistentHashSet.EMPTY);
    while (true) {
      if (i < len) {
        var G__21894 = i + 1;
        var G__21895 = cljs.core._conj_BANG_(out, items[i]);
        i = G__21894;
        out = G__21895;
        continue;
      } else {
        return cljs.core._persistent_BANG_(out);
      }
      break;
    }
  }
};
cljs.core.PersistentHashSet.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__8482__auto__ = this;
  return cljs.core.es6_iterator(this__8482__auto__);
};
cljs.core.TransientHashSet = function(transient_map) {
  this.transient_map = transient_map;
  this.cljs$lang$protocol_mask$partition0$ = 259;
  this.cljs$lang$protocol_mask$partition1$ = 136;
};
cljs.core.TransientHashSet.prototype.call = function() {
  var G__21897 = null;
  var G__21897__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var tcoll = self____$1;
    if (cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
      return null;
    } else {
      return k;
    }
  };
  var G__21897__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var tcoll = self____$1;
    if (cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
      return not_found;
    } else {
      return k;
    }
  };
  G__21897 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__21897__2.call(this, self__, k);
      case 3:
        return G__21897__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__21897.cljs$core$IFn$_invoke$arity$2 = G__21897__2;
  G__21897.cljs$core$IFn$_invoke$arity$3 = G__21897__3;
  return G__21897;
}();
cljs.core.TransientHashSet.prototype.apply = function(self__, args21896) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args21896)));
};
cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var tcoll = this;
  if (cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return null;
  } else {
    return k;
  }
};
cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var tcoll = this;
  if (cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return not_found;
  } else {
    return k;
  }
};
cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, v) {
  var self__ = this;
  var tcoll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(tcoll__$1, v, null);
};
cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, v, not_found) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map, v, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return not_found;
  } else {
    return v;
  }
};
cljs.core.TransientHashSet.prototype.cljs$core$ICounted$_count$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  return cljs.core.count(self__.transient_map);
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientSet$_disjoin_BANG_$arity$2 = function(tcoll, v) {
  var self__ = this;
  var tcoll__$1 = this;
  self__.transient_map = cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$2(self__.transient_map, v);
  return tcoll__$1;
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var self__ = this;
  var tcoll__$1 = this;
  self__.transient_map = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(self__.transient_map, o, null);
  return tcoll__$1;
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  return new cljs.core.PersistentHashSet(null, cljs.core.persistent_BANG_(self__.transient_map), null);
};
cljs.core.TransientHashSet.cljs$lang$type = true;
cljs.core.TransientHashSet.cljs$lang$ctorStr = "cljs.core/TransientHashSet";
cljs.core.TransientHashSet.cljs$lang$ctorPrWriter = function(this__8091__auto__, writer__8092__auto__, opt__8093__auto__) {
  return cljs.core._write(writer__8092__auto__, "cljs.core/TransientHashSet");
};
cljs.core.__GT_TransientHashSet = function __GT_TransientHashSet(transient_map) {
  return new cljs.core.TransientHashSet(transient_map);
};
cljs.core.PersistentTreeSet = function(meta, tree_map, __hash) {
  this.meta = meta;
  this.tree_map = tree_map;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 417730831;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.PersistentTreeSet.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentTreeSet.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentTreeSet.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentTreeSet.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentTreeSet.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentTreeSet.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_(coll, k);
};
cljs.core.PersistentTreeSet.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__21900 = cljs.core.seq(coll);
  var chunk__21901 = null;
  var count__21902 = 0;
  var i__21903 = 0;
  while (true) {
    if (i__21903 < count__21902) {
      var vec__21904 = chunk__21901.cljs$core$IIndexed$_nth$arity$2(null, i__21903);
      var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21904, 0, null);
      var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21904, 1, null);
      var G__21905_21910 = v;
      var G__21906_21911 = k;
      f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__21905_21910, G__21906_21911) : f.call(null, G__21905_21910, G__21906_21911);
      var G__21912 = seq__21900;
      var G__21913 = chunk__21901;
      var G__21914 = count__21902;
      var G__21915 = i__21903 + 1;
      seq__21900 = G__21912;
      chunk__21901 = G__21913;
      count__21902 = G__21914;
      i__21903 = G__21915;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq(seq__21900);
      if (temp__4126__auto__) {
        var seq__21900__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__21900__$1)) {
          var c__8291__auto__ = cljs.core.chunk_first(seq__21900__$1);
          var G__21916 = cljs.core.chunk_rest(seq__21900__$1);
          var G__21917 = c__8291__auto__;
          var G__21918 = cljs.core.count(c__8291__auto__);
          var G__21919 = 0;
          seq__21900 = G__21916;
          chunk__21901 = G__21917;
          count__21902 = G__21918;
          i__21903 = G__21919;
          continue;
        } else {
          var vec__21907 = cljs.core.first(seq__21900__$1);
          var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21907, 0, null);
          var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21907, 1, null);
          var G__21908_21920 = v;
          var G__21909_21921 = k;
          f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__21908_21920, G__21909_21921) : f.call(null, G__21908_21920, G__21909_21921);
          var G__21922 = cljs.core.next(seq__21900__$1);
          var G__21923 = null;
          var G__21924 = 0;
          var G__21925 = 0;
          seq__21900 = G__21922;
          chunk__21901 = G__21923;
          count__21902 = G__21924;
          i__21903 = G__21925;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, v, null);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, v, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var n = self__.tree_map.entry_at(v);
  if (!(n == null)) {
    return n.key;
  } else {
    return not_found;
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, self__.tree_map, self__.__hash);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.count(self__.tree_map);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.count(self__.tree_map) > 0) {
    return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key, cljs.core.rseq(self__.tree_map));
  } else {
    return null;
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__7925__auto__ = self__.__hash;
  if (!(h__7925__auto__ == null)) {
    return h__7925__auto__;
  } else {
    var h__7925__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
    self__.__hash = h__7925__auto____$1;
    return h__7925__auto____$1;
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.set_QMARK_(other) && cljs.core.count(coll__$1) === cljs.core.count(other) && cljs.core.every_QMARK_(function(coll__$1) {
    return function(p1__21898_SHARP_) {
      return cljs.core.contains_QMARK_(coll__$1, p1__21898_SHARP_);
    };
  }(coll__$1), other);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, cljs.core._empty(self__.tree_map), 0);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISet$_disjoin$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.tree_map, v), null);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.keys(self__.tree_map);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeSet(meta__$1, self__.tree_map, self__.__hash);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.tree_map, o, null), null);
};
cljs.core.PersistentTreeSet.prototype.call = function() {
  var G__21926 = null;
  var G__21926__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__21926__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__21926 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__21926__2.call(this, self__, k);
      case 3:
        return G__21926__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__21926.cljs$core$IFn$_invoke$arity$2 = G__21926__2;
  G__21926.cljs$core$IFn$_invoke$arity$3 = G__21926__3;
  return G__21926;
}();
cljs.core.PersistentTreeSet.prototype.apply = function(self__, args21899) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args21899)));
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = function(coll, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key, cljs.core._sorted_seq(self__.tree_map, ascending_QMARK_));
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = function(coll, k, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key, cljs.core._sorted_seq_from(self__.tree_map, k, ascending_QMARK_));
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_entry_key$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  return entry;
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_comparator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._comparator(self__.tree_map);
};
cljs.core.PersistentTreeSet.cljs$lang$type = true;
cljs.core.PersistentTreeSet.cljs$lang$ctorStr = "cljs.core/PersistentTreeSet";
cljs.core.PersistentTreeSet.cljs$lang$ctorPrWriter = function(this__8091__auto__, writer__8092__auto__, opt__8093__auto__) {
  return cljs.core._write(writer__8092__auto__, "cljs.core/PersistentTreeSet");
};
cljs.core.__GT_PersistentTreeSet = function __GT_PersistentTreeSet(meta, tree_map, __hash) {
  return new cljs.core.PersistentTreeSet(meta, tree_map, __hash);
};
cljs.core.PersistentTreeSet.EMPTY = new cljs.core.PersistentTreeSet(null, cljs.core.PersistentTreeMap.EMPTY, cljs.core.empty_unordered_hash);
cljs.core.PersistentTreeSet.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__8482__auto__ = this;
  return cljs.core.es6_iterator(this__8482__auto__);
};
cljs.core.set_from_indexed_seq = function set_from_indexed_seq(iseq) {
  var arr = iseq.arr;
  var ret = function() {
    var a__8385__auto__ = arr;
    var i = 0;
    var res = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
    while (true) {
      if (i < a__8385__auto__.length) {
        var G__21927 = i + 1;
        var G__21928 = res.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null, arr[i]);
        i = G__21927;
        res = G__21928;
        continue;
      } else {
        return res;
      }
      break;
    }
  }();
  return ret.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(null);
};
cljs.core.set = function set(coll) {
  var in$ = cljs.core.seq(coll);
  if (in$ == null) {
    return cljs.core.PersistentHashSet.EMPTY;
  } else {
    if (in$ instanceof cljs.core.IndexedSeq && in$.i === 0) {
      return cljs.core.set_from_indexed_seq(in$);
    } else {
      var in$__$1 = in$;
      var out = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
      while (true) {
        if (!(in$__$1 == null)) {
          var G__21929 = in$__$1.cljs$core$INext$_next$arity$1(null);
          var G__21930 = out.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null, in$__$1.cljs$core$ISeq$_first$arity$1(null));
          in$__$1 = G__21929;
          out = G__21930;
          continue;
        } else {
          return out.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(null);
        }
        break;
      }
    }
  }
};
cljs.core.hash_set = function() {
  var hash_set = null;
  var hash_set__0 = function() {
    return cljs.core.PersistentHashSet.EMPTY;
  };
  var hash_set__1 = function() {
    var G__21931__delegate = function(keys) {
      return cljs.core.set(keys);
    };
    var G__21931 = function(var_args) {
      var keys = null;
      if (arguments.length > 0) {
        var G__21932__i = 0, G__21932__a = new Array(arguments.length - 0);
        while (G__21932__i < G__21932__a.length) {
          G__21932__a[G__21932__i] = arguments[G__21932__i + 0];
          ++G__21932__i;
        }
        keys = new cljs.core.IndexedSeq(G__21932__a, 0);
      }
      return G__21931__delegate.call(this, keys);
    };
    G__21931.cljs$lang$maxFixedArity = 0;
    G__21931.cljs$lang$applyTo = function(arglist__21933) {
      var keys = cljs.core.seq(arglist__21933);
      return G__21931__delegate(keys);
    };
    G__21931.cljs$core$IFn$_invoke$arity$variadic = G__21931__delegate;
    return G__21931;
  }();
  hash_set = function(var_args) {
    var keys = var_args;
    switch(arguments.length) {
      case 0:
        return hash_set__0.call(this);
      default:
        var G__21934 = null;
        if (arguments.length > 0) {
          var G__21935__i = 0, G__21935__a = new Array(arguments.length - 0);
          while (G__21935__i < G__21935__a.length) {
            G__21935__a[G__21935__i] = arguments[G__21935__i + 0];
            ++G__21935__i;
          }
          G__21934 = new cljs.core.IndexedSeq(G__21935__a, 0);
        }
        return hash_set__1.cljs$core$IFn$_invoke$arity$variadic(G__21934);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  hash_set.cljs$lang$maxFixedArity = 0;
  hash_set.cljs$lang$applyTo = hash_set__1.cljs$lang$applyTo;
  hash_set.cljs$core$IFn$_invoke$arity$0 = hash_set__0;
  hash_set.cljs$core$IFn$_invoke$arity$variadic = hash_set__1.cljs$core$IFn$_invoke$arity$variadic;
  return hash_set;
}();
cljs.core.sorted_set = function() {
  var sorted_set__delegate = function(keys) {
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj, cljs.core.PersistentTreeSet.EMPTY, keys);
  };
  var sorted_set = function(var_args) {
    var keys = null;
    if (arguments.length > 0) {
      var G__21936__i = 0, G__21936__a = new Array(arguments.length - 0);
      while (G__21936__i < G__21936__a.length) {
        G__21936__a[G__21936__i] = arguments[G__21936__i + 0];
        ++G__21936__i;
      }
      keys = new cljs.core.IndexedSeq(G__21936__a, 0);
    }
    return sorted_set__delegate.call(this, keys);
  };
  sorted_set.cljs$lang$maxFixedArity = 0;
  sorted_set.cljs$lang$applyTo = function(arglist__21937) {
    var keys = cljs.core.seq(arglist__21937);
    return sorted_set__delegate(keys);
  };
  sorted_set.cljs$core$IFn$_invoke$arity$variadic = sorted_set__delegate;
  return sorted_set;
}();
cljs.core.sorted_set_by = function() {
  var sorted_set_by__delegate = function(comparator, keys) {
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj, new cljs.core.PersistentTreeSet(null, cljs.core.sorted_map_by(comparator), 0), keys);
  };
  var sorted_set_by = function(comparator, var_args) {
    var keys = null;
    if (arguments.length > 1) {
      var G__21938__i = 0, G__21938__a = new Array(arguments.length - 1);
      while (G__21938__i < G__21938__a.length) {
        G__21938__a[G__21938__i] = arguments[G__21938__i + 1];
        ++G__21938__i;
      }
      keys = new cljs.core.IndexedSeq(G__21938__a, 0);
    }
    return sorted_set_by__delegate.call(this, comparator, keys);
  };
  sorted_set_by.cljs$lang$maxFixedArity = 1;
  sorted_set_by.cljs$lang$applyTo = function(arglist__21939) {
    var comparator = cljs.core.first(arglist__21939);
    var keys = cljs.core.rest(arglist__21939);
    return sorted_set_by__delegate(comparator, keys);
  };
  sorted_set_by.cljs$core$IFn$_invoke$arity$variadic = sorted_set_by__delegate;
  return sorted_set_by;
}();
cljs.core.replace = function() {
  var replace = null;
  var replace__1 = function(smap) {
    return cljs.core.map.cljs$core$IFn$_invoke$arity$1(function(p1__21940_SHARP_) {
      var temp__4124__auto__ = cljs.core.find(smap, p1__21940_SHARP_);
      if (cljs.core.truth_(temp__4124__auto__)) {
        var e = temp__4124__auto__;
        return cljs.core.val(e);
      } else {
        return p1__21940_SHARP_;
      }
    });
  };
  var replace__2 = function(smap, coll) {
    if (cljs.core.vector_QMARK_(coll)) {
      var n = cljs.core.count(coll);
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(n) {
        return function(v, i) {
          var temp__4124__auto__ = cljs.core.find(smap, cljs.core.nth.cljs$core$IFn$_invoke$arity$2(v, i));
          if (cljs.core.truth_(temp__4124__auto__)) {
            var e = temp__4124__auto__;
            return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(v, i, cljs.core.second(e));
          } else {
            return v;
          }
        };
      }(n), coll, cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, cljs.core.iterate(cljs.core.inc, 0)));
    } else {
      return cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(p1__21941_SHARP_) {
        var temp__4124__auto__ = cljs.core.find(smap, p1__21941_SHARP_);
        if (cljs.core.truth_(temp__4124__auto__)) {
          var e = temp__4124__auto__;
          return cljs.core.second(e);
        } else {
          return p1__21941_SHARP_;
        }
      }, coll);
    }
  };
  replace = function(smap, coll) {
    switch(arguments.length) {
      case 1:
        return replace__1.call(this, smap);
      case 2:
        return replace__2.call(this, smap, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  replace.cljs$core$IFn$_invoke$arity$1 = replace__1;
  replace.cljs$core$IFn$_invoke$arity$2 = replace__2;
  return replace;
}();
cljs.core.distinct = function() {
  var distinct = null;
  var distinct__0 = function() {
    return function(rf) {
      var seen = cljs.core.volatile_BANG_(cljs.core.PersistentHashSet.EMPTY);
      return function(seen) {
        return function() {
          var G__21962 = null;
          var G__21962__0 = function() {
            return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
          };
          var G__21962__1 = function(result) {
            var G__21952 = result;
            return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__21952) : rf.call(null, G__21952);
          };
          var G__21962__2 = function(result, input) {
            if (cljs.core.contains_QMARK_(function() {
              var G__21953 = seen;
              return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__21953) : cljs.core.deref.call(null, G__21953);
            }(), input)) {
              return result;
            } else {
              seen.cljs$core$IVolatile$_vreset_BANG_$arity$2(null, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(seen.cljs$core$IDeref$_deref$arity$1(null), input));
              var G__21954 = result;
              var G__21955 = input;
              return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__21954, G__21955) : rf.call(null, G__21954, G__21955);
            }
          };
          G__21962 = function(result, input) {
            switch(arguments.length) {
              case 0:
                return G__21962__0.call(this);
              case 1:
                return G__21962__1.call(this, result);
              case 2:
                return G__21962__2.call(this, result, input);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__21962.cljs$core$IFn$_invoke$arity$0 = G__21962__0;
          G__21962.cljs$core$IFn$_invoke$arity$1 = G__21962__1;
          G__21962.cljs$core$IFn$_invoke$arity$2 = G__21962__2;
          return G__21962;
        }();
      }(seen);
    };
  };
  var distinct__1 = function(coll) {
    var step = function step(xs, seen) {
      return new cljs.core.LazySeq(null, function() {
        return function(p__21960, seen__$1) {
          while (true) {
            var vec__21961 = p__21960;
            var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21961, 0, null);
            var xs__$1 = vec__21961;
            var temp__4126__auto__ = cljs.core.seq(xs__$1);
            if (temp__4126__auto__) {
              var s = temp__4126__auto__;
              if (cljs.core.contains_QMARK_(seen__$1, f)) {
                var G__21963 = cljs.core.rest(s);
                var G__21964 = seen__$1;
                p__21960 = G__21963;
                seen__$1 = G__21964;
                continue;
              } else {
                return cljs.core.cons(f, step(cljs.core.rest(s), cljs.core.conj.cljs$core$IFn$_invoke$arity$2(seen__$1, f)));
              }
            } else {
              return null;
            }
            break;
          }
        }.call(null, xs, seen);
      }, null, null);
    };
    return step(coll, cljs.core.PersistentHashSet.EMPTY);
  };
  distinct = function(coll) {
    switch(arguments.length) {
      case 0:
        return distinct__0.call(this);
      case 1:
        return distinct__1.call(this, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  distinct.cljs$core$IFn$_invoke$arity$0 = distinct__0;
  distinct.cljs$core$IFn$_invoke$arity$1 = distinct__1;
  return distinct;
}();
cljs.core.butlast = function butlast(s) {
  var ret = cljs.core.PersistentVector.EMPTY;
  var s__$1 = s;
  while (true) {
    if (cljs.core.next(s__$1)) {
      var G__21965 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(ret, cljs.core.first(s__$1));
      var G__21966 = cljs.core.next(s__$1);
      ret = G__21965;
      s__$1 = G__21966;
      continue;
    } else {
      return cljs.core.seq(ret);
    }
    break;
  }
};
cljs.core.name = function name(x) {
  if (function() {
    var G__21968 = x;
    if (G__21968) {
      var bit__8178__auto__ = G__21968.cljs$lang$protocol_mask$partition1$ & 4096;
      if (bit__8178__auto__ || G__21968.cljs$core$INamed$) {
        return true;
      } else {
        return false;
      }
    } else {
      return false;
    }
  }()) {
    return x.cljs$core$INamed$_name$arity$1(null);
  } else {
    if (typeof x === "string") {
      return x;
    } else {
      throw new Error([cljs.core.str("Doesn't support name: "), cljs.core.str(x)].join(""));
    }
  }
};
cljs.core.zipmap = function zipmap(keys, vals) {
  var map = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
  var ks = cljs.core.seq(keys);
  var vs = cljs.core.seq(vals);
  while (true) {
    if (ks && vs) {
      var G__21969 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(map, cljs.core.first(ks), cljs.core.first(vs));
      var G__21970 = cljs.core.next(ks);
      var G__21971 = cljs.core.next(vs);
      map = G__21969;
      ks = G__21970;
      vs = G__21971;
      continue;
    } else {
      return cljs.core.persistent_BANG_(map);
    }
    break;
  }
};
cljs.core.max_key = function() {
  var max_key = null;
  var max_key__2 = function(k, x) {
    return x;
  };
  var max_key__3 = function(k, x, y) {
    if (function() {
      var G__21982 = x;
      return k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__21982) : k.call(null, G__21982);
    }() > function() {
      var G__21983 = y;
      return k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__21983) : k.call(null, G__21983);
    }()) {
      return x;
    } else {
      return y;
    }
  };
  var max_key__4 = function() {
    var G__21984__delegate = function(k, x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(p1__21972_SHARP_, p2__21973_SHARP_) {
        return max_key.cljs$core$IFn$_invoke$arity$3(k, p1__21972_SHARP_, p2__21973_SHARP_);
      }, max_key.cljs$core$IFn$_invoke$arity$3(k, x, y), more);
    };
    var G__21984 = function(k, x, y, var_args) {
      var more = null;
      if (arguments.length > 3) {
        var G__21985__i = 0, G__21985__a = new Array(arguments.length - 3);
        while (G__21985__i < G__21985__a.length) {
          G__21985__a[G__21985__i] = arguments[G__21985__i + 3];
          ++G__21985__i;
        }
        more = new cljs.core.IndexedSeq(G__21985__a, 0);
      }
      return G__21984__delegate.call(this, k, x, y, more);
    };
    G__21984.cljs$lang$maxFixedArity = 3;
    G__21984.cljs$lang$applyTo = function(arglist__21986) {
      var k = cljs.core.first(arglist__21986);
      arglist__21986 = cljs.core.next(arglist__21986);
      var x = cljs.core.first(arglist__21986);
      arglist__21986 = cljs.core.next(arglist__21986);
      var y = cljs.core.first(arglist__21986);
      var more = cljs.core.rest(arglist__21986);
      return G__21984__delegate(k, x, y, more);
    };
    G__21984.cljs$core$IFn$_invoke$arity$variadic = G__21984__delegate;
    return G__21984;
  }();
  max_key = function(k, x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return max_key__2.call(this, k, x);
      case 3:
        return max_key__3.call(this, k, x, y);
      default:
        var G__21987 = null;
        if (arguments.length > 3) {
          var G__21988__i = 0, G__21988__a = new Array(arguments.length - 3);
          while (G__21988__i < G__21988__a.length) {
            G__21988__a[G__21988__i] = arguments[G__21988__i + 3];
            ++G__21988__i;
          }
          G__21987 = new cljs.core.IndexedSeq(G__21988__a, 0);
        }
        return max_key__4.cljs$core$IFn$_invoke$arity$variadic(k, x, y, G__21987);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  max_key.cljs$lang$maxFixedArity = 3;
  max_key.cljs$lang$applyTo = max_key__4.cljs$lang$applyTo;
  max_key.cljs$core$IFn$_invoke$arity$2 = max_key__2;
  max_key.cljs$core$IFn$_invoke$arity$3 = max_key__3;
  max_key.cljs$core$IFn$_invoke$arity$variadic = max_key__4.cljs$core$IFn$_invoke$arity$variadic;
  return max_key;
}();
cljs.core.min_key = function() {
  var min_key = null;
  var min_key__2 = function(k, x) {
    return x;
  };
  var min_key__3 = function(k, x, y) {
    if (function() {
      var G__21999 = x;
      return k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__21999) : k.call(null, G__21999);
    }() < function() {
      var G__22000 = y;
      return k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__22000) : k.call(null, G__22000);
    }()) {
      return x;
    } else {
      return y;
    }
  };
  var min_key__4 = function() {
    var G__22001__delegate = function(k, x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(p1__21989_SHARP_, p2__21990_SHARP_) {
        return min_key.cljs$core$IFn$_invoke$arity$3(k, p1__21989_SHARP_, p2__21990_SHARP_);
      }, min_key.cljs$core$IFn$_invoke$arity$3(k, x, y), more);
    };
    var G__22001 = function(k, x, y, var_args) {
      var more = null;
      if (arguments.length > 3) {
        var G__22002__i = 0, G__22002__a = new Array(arguments.length - 3);
        while (G__22002__i < G__22002__a.length) {
          G__22002__a[G__22002__i] = arguments[G__22002__i + 3];
          ++G__22002__i;
        }
        more = new cljs.core.IndexedSeq(G__22002__a, 0);
      }
      return G__22001__delegate.call(this, k, x, y, more);
    };
    G__22001.cljs$lang$maxFixedArity = 3;
    G__22001.cljs$lang$applyTo = function(arglist__22003) {
      var k = cljs.core.first(arglist__22003);
      arglist__22003 = cljs.core.next(arglist__22003);
      var x = cljs.core.first(arglist__22003);
      arglist__22003 = cljs.core.next(arglist__22003);
      var y = cljs.core.first(arglist__22003);
      var more = cljs.core.rest(arglist__22003);
      return G__22001__delegate(k, x, y, more);
    };
    G__22001.cljs$core$IFn$_invoke$arity$variadic = G__22001__delegate;
    return G__22001;
  }();
  min_key = function(k, x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return min_key__2.call(this, k, x);
      case 3:
        return min_key__3.call(this, k, x, y);
      default:
        var G__22004 = null;
        if (arguments.length > 3) {
          var G__22005__i = 0, G__22005__a = new Array(arguments.length - 3);
          while (G__22005__i < G__22005__a.length) {
            G__22005__a[G__22005__i] = arguments[G__22005__i + 3];
            ++G__22005__i;
          }
          G__22004 = new cljs.core.IndexedSeq(G__22005__a, 0);
        }
        return min_key__4.cljs$core$IFn$_invoke$arity$variadic(k, x, y, G__22004);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  min_key.cljs$lang$maxFixedArity = 3;
  min_key.cljs$lang$applyTo = min_key__4.cljs$lang$applyTo;
  min_key.cljs$core$IFn$_invoke$arity$2 = min_key__2;
  min_key.cljs$core$IFn$_invoke$arity$3 = min_key__3;
  min_key.cljs$core$IFn$_invoke$arity$variadic = min_key__4.cljs$core$IFn$_invoke$arity$variadic;
  return min_key;
}();
cljs.core.ArrayList = function(arr) {
  this.arr = arr;
};
cljs.core.ArrayList.prototype.add = function(x) {
  var self__ = this;
  var _ = this;
  return self__.arr.push(x);
};
cljs.core.ArrayList.prototype.size = function() {
  var self__ = this;
  var _ = this;
  return self__.arr.length;
};
cljs.core.ArrayList.prototype.clear = function() {
  var self__ = this;
  var _ = this;
  return self__.arr = [];
};
cljs.core.ArrayList.prototype.isEmpty = function() {
  var self__ = this;
  var _ = this;
  return self__.arr.length === 0;
};
cljs.core.ArrayList.prototype.toArray = function() {
  var self__ = this;
  var _ = this;
  return self__.arr;
};
cljs.core.ArrayList.cljs$lang$type = true;
cljs.core.ArrayList.cljs$lang$ctorStr = "cljs.core/ArrayList";
cljs.core.ArrayList.cljs$lang$ctorPrWriter = function(this__8091__auto__, writer__8092__auto__, opt__8093__auto__) {
  return cljs.core._write(writer__8092__auto__, "cljs.core/ArrayList");
};
cljs.core.__GT_ArrayList = function __GT_ArrayList(arr) {
  return new cljs.core.ArrayList(arr);
};
cljs.core.array_list = function array_list() {
  return new cljs.core.ArrayList([]);
};
cljs.core.partition_all = function() {
  var partition_all = null;
  var partition_all__1 = function(n) {
    return function(rf) {
      var a = cljs.core.array_list();
      return function(a) {
        return function() {
          var G__22022 = null;
          var G__22022__0 = function() {
            return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
          };
          var G__22022__1 = function(result) {
            var result__$1 = cljs.core.truth_(a.isEmpty()) ? result : function() {
              var v = cljs.core.vec(a.toArray());
              a.clear();
              return cljs.core.unreduced(function() {
                var G__22017 = result;
                var G__22018 = v;
                return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__22017, G__22018) : rf.call(null, G__22017, G__22018);
              }());
            }();
            var G__22019 = result__$1;
            return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__22019) : rf.call(null, G__22019);
          };
          var G__22022__2 = function(result, input) {
            a.add(input);
            if (n === a.size()) {
              var v = cljs.core.vec(a.toArray());
              a.clear();
              var G__22020 = result;
              var G__22021 = v;
              return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__22020, G__22021) : rf.call(null, G__22020, G__22021);
            } else {
              return result;
            }
          };
          G__22022 = function(result, input) {
            switch(arguments.length) {
              case 0:
                return G__22022__0.call(this);
              case 1:
                return G__22022__1.call(this, result);
              case 2:
                return G__22022__2.call(this, result, input);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__22022.cljs$core$IFn$_invoke$arity$0 = G__22022__0;
          G__22022.cljs$core$IFn$_invoke$arity$1 = G__22022__1;
          G__22022.cljs$core$IFn$_invoke$arity$2 = G__22022__2;
          return G__22022;
        }();
      }(a);
    };
  };
  var partition_all__2 = function(n, coll) {
    return partition_all.cljs$core$IFn$_invoke$arity$3(n, n, coll);
  };
  var partition_all__3 = function(n, step, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq(coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        return cljs.core.cons(cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, s), partition_all.cljs$core$IFn$_invoke$arity$3(n, step, cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step, s)));
      } else {
        return null;
      }
    }, null, null);
  };
  partition_all = function(n, step, coll) {
    switch(arguments.length) {
      case 1:
        return partition_all__1.call(this, n);
      case 2:
        return partition_all__2.call(this, n, step);
      case 3:
        return partition_all__3.call(this, n, step, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  partition_all.cljs$core$IFn$_invoke$arity$1 = partition_all__1;
  partition_all.cljs$core$IFn$_invoke$arity$2 = partition_all__2;
  partition_all.cljs$core$IFn$_invoke$arity$3 = partition_all__3;
  return partition_all;
}();
cljs.core.take_while = function() {
  var take_while = null;
  var take_while__1 = function(pred) {
    return function(rf) {
      return function() {
        var G__22035 = null;
        var G__22035__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__22035__1 = function(result) {
          var G__22030 = result;
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__22030) : rf.call(null, G__22030);
        };
        var G__22035__2 = function(result, input) {
          if (cljs.core.truth_(function() {
            var G__22031 = input;
            return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__22031) : pred.call(null, G__22031);
          }())) {
            var G__22032 = result;
            var G__22033 = input;
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__22032, G__22033) : rf.call(null, G__22032, G__22033);
          } else {
            return cljs.core.reduced(result);
          }
        };
        G__22035 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__22035__0.call(this);
            case 1:
              return G__22035__1.call(this, result);
            case 2:
              return G__22035__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__22035.cljs$core$IFn$_invoke$arity$0 = G__22035__0;
        G__22035.cljs$core$IFn$_invoke$arity$1 = G__22035__1;
        G__22035.cljs$core$IFn$_invoke$arity$2 = G__22035__2;
        return G__22035;
      }();
    };
  };
  var take_while__2 = function(pred, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq(coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        if (cljs.core.truth_(function() {
          var G__22034 = cljs.core.first(s);
          return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__22034) : pred.call(null, G__22034);
        }())) {
          return cljs.core.cons(cljs.core.first(s), take_while.cljs$core$IFn$_invoke$arity$2(pred, cljs.core.rest(s)));
        } else {
          return null;
        }
      } else {
        return null;
      }
    }, null, null);
  };
  take_while = function(pred, coll) {
    switch(arguments.length) {
      case 1:
        return take_while__1.call(this, pred);
      case 2:
        return take_while__2.call(this, pred, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  take_while.cljs$core$IFn$_invoke$arity$1 = take_while__1;
  take_while.cljs$core$IFn$_invoke$arity$2 = take_while__2;
  return take_while;
}();
cljs.core.mk_bound_fn = function mk_bound_fn(sc, test, key) {
  return function(e) {
    var comp = cljs.core._comparator(sc);
    var G__22040 = function() {
      var G__22042 = cljs.core._entry_key(sc, e);
      var G__22043 = key;
      return comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__22042, G__22043) : comp.call(null, G__22042, G__22043);
    }();
    var G__22041 = 0;
    return test.cljs$core$IFn$_invoke$arity$2 ? test.cljs$core$IFn$_invoke$arity$2(G__22040, G__22041) : test.call(null, G__22040, G__22041);
  };
};
cljs.core.subseq = function() {
  var subseq = null;
  var subseq__3 = function(sc, test, key) {
    var include = cljs.core.mk_bound_fn(sc, test, key);
    if (cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._GT_, cljs.core._GT__EQ_], true).call(null, test))) {
      var temp__4126__auto__ = cljs.core._sorted_seq_from(sc, key, true);
      if (cljs.core.truth_(temp__4126__auto__)) {
        var vec__22047 = temp__4126__auto__;
        var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22047, 0, null);
        var s = vec__22047;
        if (cljs.core.truth_(function() {
          var G__22048 = e;
          return include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(G__22048) : include.call(null, G__22048);
        }())) {
          return s;
        } else {
          return cljs.core.next(s);
        }
      } else {
        return null;
      }
    } else {
      return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include, cljs.core._sorted_seq(sc, true));
    }
  };
  var subseq__5 = function(sc, start_test, start_key, end_test, end_key) {
    var temp__4126__auto__ = cljs.core._sorted_seq_from(sc, start_key, true);
    if (cljs.core.truth_(temp__4126__auto__)) {
      var vec__22049 = temp__4126__auto__;
      var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22049, 0, null);
      var s = vec__22049;
      return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc, end_test, end_key), cljs.core.truth_(cljs.core.mk_bound_fn(sc, start_test, start_key).call(null, e)) ? s : cljs.core.next(s));
    } else {
      return null;
    }
  };
  subseq = function(sc, start_test, start_key, end_test, end_key) {
    switch(arguments.length) {
      case 3:
        return subseq__3.call(this, sc, start_test, start_key);
      case 5:
        return subseq__5.call(this, sc, start_test, start_key, end_test, end_key);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  subseq.cljs$core$IFn$_invoke$arity$3 = subseq__3;
  subseq.cljs$core$IFn$_invoke$arity$5 = subseq__5;
  return subseq;
}();
cljs.core.rsubseq = function() {
  var rsubseq = null;
  var rsubseq__3 = function(sc, test, key) {
    var include = cljs.core.mk_bound_fn(sc, test, key);
    if (cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._LT_, cljs.core._LT__EQ_], true).call(null, test))) {
      var temp__4126__auto__ = cljs.core._sorted_seq_from(sc, key, false);
      if (cljs.core.truth_(temp__4126__auto__)) {
        var vec__22053 = temp__4126__auto__;
        var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22053, 0, null);
        var s = vec__22053;
        if (cljs.core.truth_(function() {
          var G__22054 = e;
          return include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(G__22054) : include.call(null, G__22054);
        }())) {
          return s;
        } else {
          return cljs.core.next(s);
        }
      } else {
        return null;
      }
    } else {
      return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include, cljs.core._sorted_seq(sc, false));
    }
  };
  var rsubseq__5 = function(sc, start_test, start_key, end_test, end_key) {
    var temp__4126__auto__ = cljs.core._sorted_seq_from(sc, end_key, false);
    if (cljs.core.truth_(temp__4126__auto__)) {
      var vec__22055 = temp__4126__auto__;
      var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22055, 0, null);
      var s = vec__22055;
      return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc, start_test, start_key), cljs.core.truth_(cljs.core.mk_bound_fn(sc, end_test, end_key).call(null, e)) ? s : cljs.core.next(s));
    } else {
      return null;
    }
  };
  rsubseq = function(sc, start_test, start_key, end_test, end_key) {
    switch(arguments.length) {
      case 3:
        return rsubseq__3.call(this, sc, start_test, start_key);
      case 5:
        return rsubseq__5.call(this, sc, start_test, start_key, end_test, end_key);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  rsubseq.cljs$core$IFn$_invoke$arity$3 = rsubseq__3;
  rsubseq.cljs$core$IFn$_invoke$arity$5 = rsubseq__5;
  return rsubseq;
}();
cljs.core.RangeIterator = function(i, end, step) {
  this.i = i;
  this.end = end;
  this.step = step;
};
cljs.core.RangeIterator.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  if (self__.step > 0) {
    return self__.i < self__.end;
  } else {
    return self__.i > self__.end;
  }
};
cljs.core.RangeIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var ret = self__.i;
  self__.i = self__.i + self__.step;
  return ret;
};
cljs.core.RangeIterator.cljs$lang$type = true;
cljs.core.RangeIterator.cljs$lang$ctorStr = "cljs.core/RangeIterator";
cljs.core.RangeIterator.cljs$lang$ctorPrWriter = function(this__8091__auto__, writer__8092__auto__, opt__8093__auto__) {
  return cljs.core._write(writer__8092__auto__, "cljs.core/RangeIterator");
};
cljs.core.__GT_RangeIterator = function __GT_RangeIterator(i, end, step) {
  return new cljs.core.RangeIterator(i, end, step);
};
cljs.core.Range = function(meta, start, end, step, __hash) {
  this.meta = meta;
  this.start = start;
  this.end = end;
  this.step = step;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32375006;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.Range.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.Range.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$2 = function(rng, n) {
  var self__ = this;
  var rng__$1 = this;
  if (n < cljs.core._count(rng__$1)) {
    return self__.start + n * self__.step;
  } else {
    if (self__.start > self__.end && self__.step === 0) {
      return self__.start;
    } else {
      throw new Error("Index out of bounds");
    }
  }
};
cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$3 = function(rng, n, not_found) {
  var self__ = this;
  var rng__$1 = this;
  if (n < cljs.core._count(rng__$1)) {
    return self__.start + n * self__.step;
  } else {
    if (self__.start > self__.end && self__.step === 0) {
      return self__.start;
    } else {
      return not_found;
    }
  }
};
cljs.core.Range.prototype.cljs$core$IIterable$ = true;
cljs.core.Range.prototype.cljs$core$IIterable$_iterator$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.RangeIterator(self__.start, self__.end, self__.step);
};
cljs.core.Range.prototype.cljs$core$IMeta$_meta$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  return self__.meta;
};
cljs.core.Range.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Range(self__.meta, self__.start, self__.end, self__.step, self__.__hash);
};
cljs.core.Range.prototype.cljs$core$INext$_next$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (self__.step > 0) {
    if (self__.start + self__.step < self__.end) {
      return new cljs.core.Range(self__.meta, self__.start + self__.step, self__.end, self__.step, null);
    } else {
      return null;
    }
  } else {
    if (self__.start + self__.step > self__.end) {
      return new cljs.core.Range(self__.meta, self__.start + self__.step, self__.end, self__.step, null);
    } else {
      return null;
    }
  }
};
cljs.core.Range.prototype.cljs$core$ICounted$_count$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (cljs.core.not(cljs.core._seq(rng__$1))) {
    return 0;
  } else {
    var G__22056 = (self__.end - self__.start) / self__.step;
    return Math.ceil.cljs$core$IFn$_invoke$arity$1 ? Math.ceil.cljs$core$IFn$_invoke$arity$1(G__22056) : Math.ceil.call(null, G__22056);
  }
};
cljs.core.Range.prototype.cljs$core$IHash$_hash$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  var h__7925__auto__ = self__.__hash;
  if (!(h__7925__auto__ == null)) {
    return h__7925__auto__;
  } else {
    var h__7925__auto____$1 = cljs.core.hash_ordered_coll(rng__$1);
    self__.__hash = h__7925__auto____$1;
    return h__7925__auto____$1;
  }
};
cljs.core.Range.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(rng, other) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.equiv_sequential(rng__$1, other);
};
cljs.core.Range.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$2 = function(rng, f) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(rng__$1, f);
};
cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$3 = function(rng, f, init) {
  var self__ = this;
  var rng__$1 = this;
  var i = self__.start;
  var ret = init;
  while (true) {
    if (self__.step > 0 ? i < self__.end : i > self__.end) {
      var ret__$1 = function() {
        var G__22057 = ret;
        var G__22058 = i;
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__22057, G__22058) : f.call(null, G__22057, G__22058);
      }();
      if (cljs.core.reduced_QMARK_(ret__$1)) {
        var G__22059 = ret__$1;
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__22059) : cljs.core.deref.call(null, G__22059);
      } else {
        var G__22060 = i + self__.step;
        var G__22061 = ret__$1;
        i = G__22060;
        ret = G__22061;
        continue;
      }
    } else {
      return ret;
    }
    break;
  }
};
cljs.core.Range.prototype.cljs$core$ISeq$_first$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (cljs.core._seq(rng__$1) == null) {
    return null;
  } else {
    return self__.start;
  }
};
cljs.core.Range.prototype.cljs$core$ISeq$_rest$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (!(cljs.core._seq(rng__$1) == null)) {
    return new cljs.core.Range(self__.meta, self__.start + self__.step, self__.end, self__.step, null);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.Range.prototype.cljs$core$ISeqable$_seq$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (self__.step > 0) {
    if (self__.start < self__.end) {
      return rng__$1;
    } else {
      return null;
    }
  } else {
    if (self__.start > self__.end) {
      return rng__$1;
    } else {
      return null;
    }
  }
};
cljs.core.Range.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(rng, meta__$1) {
  var self__ = this;
  var rng__$1 = this;
  return new cljs.core.Range(meta__$1, self__.start, self__.end, self__.step, self__.__hash);
};
cljs.core.Range.prototype.cljs$core$ICollection$_conj$arity$2 = function(rng, o) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.cons(o, rng__$1);
};
cljs.core.Range.cljs$lang$type = true;
cljs.core.Range.cljs$lang$ctorStr = "cljs.core/Range";
cljs.core.Range.cljs$lang$ctorPrWriter = function(this__8091__auto__, writer__8092__auto__, opt__8093__auto__) {
  return cljs.core._write(writer__8092__auto__, "cljs.core/Range");
};
cljs.core.__GT_Range = function __GT_Range(meta, start, end, step, __hash) {
  return new cljs.core.Range(meta, start, end, step, __hash);
};
cljs.core.Range.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__8482__auto__ = this;
  return cljs.core.es6_iterator(this__8482__auto__);
};
cljs.core.range = function() {
  var range = null;
  var range__0 = function() {
    return range.cljs$core$IFn$_invoke$arity$3(0, Number.MAX_VALUE, 1);
  };
  var range__1 = function(end) {
    return range.cljs$core$IFn$_invoke$arity$3(0, end, 1);
  };
  var range__2 = function(start, end) {
    return range.cljs$core$IFn$_invoke$arity$3(start, end, 1);
  };
  var range__3 = function(start, end, step) {
    return new cljs.core.Range(null, start, end, step, null);
  };
  range = function(start, end, step) {
    switch(arguments.length) {
      case 0:
        return range__0.call(this);
      case 1:
        return range__1.call(this, start);
      case 2:
        return range__2.call(this, start, end);
      case 3:
        return range__3.call(this, start, end, step);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  range.cljs$core$IFn$_invoke$arity$0 = range__0;
  range.cljs$core$IFn$_invoke$arity$1 = range__1;
  range.cljs$core$IFn$_invoke$arity$2 = range__2;
  range.cljs$core$IFn$_invoke$arity$3 = range__3;
  return range;
}();
cljs.core.take_nth = function() {
  var take_nth = null;
  var take_nth__1 = function(n) {
    return function(rf) {
      var ia = cljs.core.volatile_BANG_(-1);
      return function(ia) {
        return function() {
          var G__22079 = null;
          var G__22079__0 = function() {
            return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
          };
          var G__22079__1 = function(result) {
            var G__22076 = result;
            return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__22076) : rf.call(null, G__22076);
          };
          var G__22079__2 = function(result, input) {
            var i = ia.cljs$core$IVolatile$_vreset_BANG_$arity$2(null, ia.cljs$core$IDeref$_deref$arity$1(null) + 1);
            if (cljs.core.rem(i, n) === 0) {
              var G__22077 = result;
              var G__22078 = input;
              return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__22077, G__22078) : rf.call(null, G__22077, G__22078);
            } else {
              return result;
            }
          };
          G__22079 = function(result, input) {
            switch(arguments.length) {
              case 0:
                return G__22079__0.call(this);
              case 1:
                return G__22079__1.call(this, result);
              case 2:
                return G__22079__2.call(this, result, input);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__22079.cljs$core$IFn$_invoke$arity$0 = G__22079__0;
          G__22079.cljs$core$IFn$_invoke$arity$1 = G__22079__1;
          G__22079.cljs$core$IFn$_invoke$arity$2 = G__22079__2;
          return G__22079;
        }();
      }(ia);
    };
  };
  var take_nth__2 = function(n, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq(coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        return cljs.core.cons(cljs.core.first(s), take_nth.cljs$core$IFn$_invoke$arity$2(n, cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n, s)));
      } else {
        return null;
      }
    }, null, null);
  };
  take_nth = function(n, coll) {
    switch(arguments.length) {
      case 1:
        return take_nth__1.call(this, n);
      case 2:
        return take_nth__2.call(this, n, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  take_nth.cljs$core$IFn$_invoke$arity$1 = take_nth__1;
  take_nth.cljs$core$IFn$_invoke$arity$2 = take_nth__2;
  return take_nth;
}();
cljs.core.split_with = function split_with(pred, coll) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(pred, coll), cljs.core.drop_while.cljs$core$IFn$_invoke$arity$2(pred, coll)], null);
};
cljs.core.partition_by = function() {
  var partition_by = null;
  var partition_by__1 = function(f) {
    return function(rf) {
      var a = cljs.core.array_list();
      var pa = cljs.core.volatile_BANG_(new cljs.core.Keyword("cljs.core", "none", "cljs.core/none", 926646439));
      return function(a, pa) {
        return function() {
          var G__22101 = null;
          var G__22101__0 = function() {
            return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
          };
          var G__22101__1 = function(result) {
            var result__$1 = cljs.core.truth_(a.isEmpty()) ? result : function() {
              var v = cljs.core.vec(a.toArray());
              a.clear();
              return cljs.core.unreduced(function() {
                var G__22092 = result;
                var G__22093 = v;
                return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__22092, G__22093) : rf.call(null, G__22092, G__22093);
              }());
            }();
            var G__22094 = result__$1;
            return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__22094) : rf.call(null, G__22094);
          };
          var G__22101__2 = function(result, input) {
            var pval = function() {
              var G__22095 = pa;
              return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__22095) : cljs.core.deref.call(null, G__22095);
            }();
            var val = function() {
              var G__22096 = input;
              return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__22096) : f.call(null, G__22096);
            }();
            cljs.core.vreset_BANG_(pa, val);
            if (cljs.core.keyword_identical_QMARK_(pval, new cljs.core.Keyword("cljs.core", "none", "cljs.core/none", 926646439)) || cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(val, pval)) {
              a.add(input);
              return result;
            } else {
              var v = cljs.core.vec(a.toArray());
              a.clear();
              var ret = function() {
                var G__22097 = result;
                var G__22098 = v;
                return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__22097, G__22098) : rf.call(null, G__22097, G__22098);
              }();
              if (cljs.core.reduced_QMARK_(ret)) {
              } else {
                a.add(input);
              }
              return ret;
            }
          };
          G__22101 = function(result, input) {
            switch(arguments.length) {
              case 0:
                return G__22101__0.call(this);
              case 1:
                return G__22101__1.call(this, result);
              case 2:
                return G__22101__2.call(this, result, input);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__22101.cljs$core$IFn$_invoke$arity$0 = G__22101__0;
          G__22101.cljs$core$IFn$_invoke$arity$1 = G__22101__1;
          G__22101.cljs$core$IFn$_invoke$arity$2 = G__22101__2;
          return G__22101;
        }();
      }(a, pa);
    };
  };
  var partition_by__2 = function(f, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq(coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        var fst = cljs.core.first(s);
        var fv = function() {
          var G__22099 = fst;
          return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__22099) : f.call(null, G__22099);
        }();
        var run = cljs.core.cons(fst, cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(function(fst, fv, s, temp__4126__auto__) {
          return function(p1__22080_SHARP_) {
            return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(fv, function() {
              var G__22100 = p1__22080_SHARP_;
              return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__22100) : f.call(null, G__22100);
            }());
          };
        }(fst, fv, s, temp__4126__auto__), cljs.core.next(s)));
        return cljs.core.cons(run, partition_by.cljs$core$IFn$_invoke$arity$2(f, cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(cljs.core.count(run), s))));
      } else {
        return null;
      }
    }, null, null);
  };
  partition_by = function(f, coll) {
    switch(arguments.length) {
      case 1:
        return partition_by__1.call(this, f);
      case 2:
        return partition_by__2.call(this, f, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  partition_by.cljs$core$IFn$_invoke$arity$1 = partition_by__1;
  partition_by.cljs$core$IFn$_invoke$arity$2 = partition_by__2;
  return partition_by;
}();
cljs.core.frequencies = function frequencies(coll) {
  return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(counts, x) {
    return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(counts, x, cljs.core.get.cljs$core$IFn$_invoke$arity$3(counts, x, 0) + 1);
  }, cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY), coll));
};
cljs.core.reductions = function() {
  var reductions = null;
  var reductions__2 = function(f, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4124__auto__ = cljs.core.seq(coll);
      if (temp__4124__auto__) {
        var s = temp__4124__auto__;
        return reductions.cljs$core$IFn$_invoke$arity$3(f, cljs.core.first(s), cljs.core.rest(s));
      } else {
        return cljs.core._conj(cljs.core.List.EMPTY, function() {
          return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
        }());
      }
    }, null, null);
  };
  var reductions__3 = function(f, init, coll) {
    return cljs.core.cons(init, new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq(coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        return reductions.cljs$core$IFn$_invoke$arity$3(f, function() {
          var G__22110 = init;
          var G__22111 = cljs.core.first(s);
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__22110, G__22111) : f.call(null, G__22110, G__22111);
        }(), cljs.core.rest(s));
      } else {
        return null;
      }
    }, null, null));
  };
  reductions = function(f, init, coll) {
    switch(arguments.length) {
      case 2:
        return reductions__2.call(this, f, init);
      case 3:
        return reductions__3.call(this, f, init, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  reductions.cljs$core$IFn$_invoke$arity$2 = reductions__2;
  reductions.cljs$core$IFn$_invoke$arity$3 = reductions__3;
  return reductions;
}();
cljs.core.juxt = function() {
  var juxt = null;
  var juxt__1 = function(f) {
    return function() {
      var G__22206 = null;
      var G__22206__0 = function() {
        return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
          return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
        }()], null);
      };
      var G__22206__1 = function(x) {
        return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
          var G__22164 = x;
          return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__22164) : f.call(null, G__22164);
        }()], null);
      };
      var G__22206__2 = function(x, y) {
        return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
          var G__22165 = x;
          var G__22166 = y;
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__22165, G__22166) : f.call(null, G__22165, G__22166);
        }()], null);
      };
      var G__22206__3 = function(x, y, z) {
        return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
          var G__22167 = x;
          var G__22168 = y;
          var G__22169 = z;
          return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__22167, G__22168, G__22169) : f.call(null, G__22167, G__22168, G__22169);
        }()], null);
      };
      var G__22206__4 = function() {
        var G__22207__delegate = function(x, y, z, args) {
          return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, x, y, z, args)], null);
        };
        var G__22207 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__22208__i = 0, G__22208__a = new Array(arguments.length - 3);
            while (G__22208__i < G__22208__a.length) {
              G__22208__a[G__22208__i] = arguments[G__22208__i + 3];
              ++G__22208__i;
            }
            args = new cljs.core.IndexedSeq(G__22208__a, 0);
          }
          return G__22207__delegate.call(this, x, y, z, args);
        };
        G__22207.cljs$lang$maxFixedArity = 3;
        G__22207.cljs$lang$applyTo = function(arglist__22209) {
          var x = cljs.core.first(arglist__22209);
          arglist__22209 = cljs.core.next(arglist__22209);
          var y = cljs.core.first(arglist__22209);
          arglist__22209 = cljs.core.next(arglist__22209);
          var z = cljs.core.first(arglist__22209);
          var args = cljs.core.rest(arglist__22209);
          return G__22207__delegate(x, y, z, args);
        };
        G__22207.cljs$core$IFn$_invoke$arity$variadic = G__22207__delegate;
        return G__22207;
      }();
      G__22206 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__22206__0.call(this);
          case 1:
            return G__22206__1.call(this, x);
          case 2:
            return G__22206__2.call(this, x, y);
          case 3:
            return G__22206__3.call(this, x, y, z);
          default:
            var G__22210 = null;
            if (arguments.length > 3) {
              var G__22211__i = 0, G__22211__a = new Array(arguments.length - 3);
              while (G__22211__i < G__22211__a.length) {
                G__22211__a[G__22211__i] = arguments[G__22211__i + 3];
                ++G__22211__i;
              }
              G__22210 = new cljs.core.IndexedSeq(G__22211__a, 0);
            }
            return G__22206__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__22210);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__22206.cljs$lang$maxFixedArity = 3;
      G__22206.cljs$lang$applyTo = G__22206__4.cljs$lang$applyTo;
      G__22206.cljs$core$IFn$_invoke$arity$0 = G__22206__0;
      G__22206.cljs$core$IFn$_invoke$arity$1 = G__22206__1;
      G__22206.cljs$core$IFn$_invoke$arity$2 = G__22206__2;
      G__22206.cljs$core$IFn$_invoke$arity$3 = G__22206__3;
      G__22206.cljs$core$IFn$_invoke$arity$variadic = G__22206__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__22206;
    }();
  };
  var juxt__2 = function(f, g) {
    return function() {
      var G__22212 = null;
      var G__22212__0 = function() {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
          return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
        }(), function() {
          return g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null);
        }()], null);
      };
      var G__22212__1 = function(x) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
          var G__22170 = x;
          return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__22170) : f.call(null, G__22170);
        }(), function() {
          var G__22171 = x;
          return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__22171) : g.call(null, G__22171);
        }()], null);
      };
      var G__22212__2 = function(x, y) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
          var G__22172 = x;
          var G__22173 = y;
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__22172, G__22173) : f.call(null, G__22172, G__22173);
        }(), function() {
          var G__22174 = x;
          var G__22175 = y;
          return g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__22174, G__22175) : g.call(null, G__22174, G__22175);
        }()], null);
      };
      var G__22212__3 = function(x, y, z) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
          var G__22176 = x;
          var G__22177 = y;
          var G__22178 = z;
          return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__22176, G__22177, G__22178) : f.call(null, G__22176, G__22177, G__22178);
        }(), function() {
          var G__22179 = x;
          var G__22180 = y;
          var G__22181 = z;
          return g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__22179, G__22180, G__22181) : g.call(null, G__22179, G__22180, G__22181);
        }()], null);
      };
      var G__22212__4 = function() {
        var G__22213__delegate = function(x, y, z, args) {
          return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, x, y, z, args), cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g, x, y, z, args)], null);
        };
        var G__22213 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__22214__i = 0, G__22214__a = new Array(arguments.length - 3);
            while (G__22214__i < G__22214__a.length) {
              G__22214__a[G__22214__i] = arguments[G__22214__i + 3];
              ++G__22214__i;
            }
            args = new cljs.core.IndexedSeq(G__22214__a, 0);
          }
          return G__22213__delegate.call(this, x, y, z, args);
        };
        G__22213.cljs$lang$maxFixedArity = 3;
        G__22213.cljs$lang$applyTo = function(arglist__22215) {
          var x = cljs.core.first(arglist__22215);
          arglist__22215 = cljs.core.next(arglist__22215);
          var y = cljs.core.first(arglist__22215);
          arglist__22215 = cljs.core.next(arglist__22215);
          var z = cljs.core.first(arglist__22215);
          var args = cljs.core.rest(arglist__22215);
          return G__22213__delegate(x, y, z, args);
        };
        G__22213.cljs$core$IFn$_invoke$arity$variadic = G__22213__delegate;
        return G__22213;
      }();
      G__22212 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__22212__0.call(this);
          case 1:
            return G__22212__1.call(this, x);
          case 2:
            return G__22212__2.call(this, x, y);
          case 3:
            return G__22212__3.call(this, x, y, z);
          default:
            var G__22216 = null;
            if (arguments.length > 3) {
              var G__22217__i = 0, G__22217__a = new Array(arguments.length - 3);
              while (G__22217__i < G__22217__a.length) {
                G__22217__a[G__22217__i] = arguments[G__22217__i + 3];
                ++G__22217__i;
              }
              G__22216 = new cljs.core.IndexedSeq(G__22217__a, 0);
            }
            return G__22212__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__22216);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__22212.cljs$lang$maxFixedArity = 3;
      G__22212.cljs$lang$applyTo = G__22212__4.cljs$lang$applyTo;
      G__22212.cljs$core$IFn$_invoke$arity$0 = G__22212__0;
      G__22212.cljs$core$IFn$_invoke$arity$1 = G__22212__1;
      G__22212.cljs$core$IFn$_invoke$arity$2 = G__22212__2;
      G__22212.cljs$core$IFn$_invoke$arity$3 = G__22212__3;
      G__22212.cljs$core$IFn$_invoke$arity$variadic = G__22212__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__22212;
    }();
  };
  var juxt__3 = function(f, g, h) {
    return function() {
      var G__22218 = null;
      var G__22218__0 = function() {
        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
          return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
        }(), function() {
          return g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null);
        }(), function() {
          return h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null);
        }()], null);
      };
      var G__22218__1 = function(x) {
        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
          var G__22182 = x;
          return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__22182) : f.call(null, G__22182);
        }(), function() {
          var G__22183 = x;
          return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__22183) : g.call(null, G__22183);
        }(), function() {
          var G__22184 = x;
          return h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(G__22184) : h.call(null, G__22184);
        }()], null);
      };
      var G__22218__2 = function(x, y) {
        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
          var G__22185 = x;
          var G__22186 = y;
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__22185, G__22186) : f.call(null, G__22185, G__22186);
        }(), function() {
          var G__22187 = x;
          var G__22188 = y;
          return g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__22187, G__22188) : g.call(null, G__22187, G__22188);
        }(), function() {
          var G__22189 = x;
          var G__22190 = y;
          return h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(G__22189, G__22190) : h.call(null, G__22189, G__22190);
        }()], null);
      };
      var G__22218__3 = function(x, y, z) {
        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
          var G__22191 = x;
          var G__22192 = y;
          var G__22193 = z;
          return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__22191, G__22192, G__22193) : f.call(null, G__22191, G__22192, G__22193);
        }(), function() {
          var G__22194 = x;
          var G__22195 = y;
          var G__22196 = z;
          return g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__22194, G__22195, G__22196) : g.call(null, G__22194, G__22195, G__22196);
        }(), function() {
          var G__22197 = x;
          var G__22198 = y;
          var G__22199 = z;
          return h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(G__22197, G__22198, G__22199) : h.call(null, G__22197, G__22198, G__22199);
        }()], null);
      };
      var G__22218__4 = function() {
        var G__22219__delegate = function(x, y, z, args) {
          return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, x, y, z, args), cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g, x, y, z, args), cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h, x, y, z, args)], null);
        };
        var G__22219 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__22220__i = 0, G__22220__a = new Array(arguments.length - 3);
            while (G__22220__i < G__22220__a.length) {
              G__22220__a[G__22220__i] = arguments[G__22220__i + 3];
              ++G__22220__i;
            }
            args = new cljs.core.IndexedSeq(G__22220__a, 0);
          }
          return G__22219__delegate.call(this, x, y, z, args);
        };
        G__22219.cljs$lang$maxFixedArity = 3;
        G__22219.cljs$lang$applyTo = function(arglist__22221) {
          var x = cljs.core.first(arglist__22221);
          arglist__22221 = cljs.core.next(arglist__22221);
          var y = cljs.core.first(arglist__22221);
          arglist__22221 = cljs.core.next(arglist__22221);
          var z = cljs.core.first(arglist__22221);
          var args = cljs.core.rest(arglist__22221);
          return G__22219__delegate(x, y, z, args);
        };
        G__22219.cljs$core$IFn$_invoke$arity$variadic = G__22219__delegate;
        return G__22219;
      }();
      G__22218 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__22218__0.call(this);
          case 1:
            return G__22218__1.call(this, x);
          case 2:
            return G__22218__2.call(this, x, y);
          case 3:
            return G__22218__3.call(this, x, y, z);
          default:
            var G__22222 = null;
            if (arguments.length > 3) {
              var G__22223__i = 0, G__22223__a = new Array(arguments.length - 3);
              while (G__22223__i < G__22223__a.length) {
                G__22223__a[G__22223__i] = arguments[G__22223__i + 3];
                ++G__22223__i;
              }
              G__22222 = new cljs.core.IndexedSeq(G__22223__a, 0);
            }
            return G__22218__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__22222);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__22218.cljs$lang$maxFixedArity = 3;
      G__22218.cljs$lang$applyTo = G__22218__4.cljs$lang$applyTo;
      G__22218.cljs$core$IFn$_invoke$arity$0 = G__22218__0;
      G__22218.cljs$core$IFn$_invoke$arity$1 = G__22218__1;
      G__22218.cljs$core$IFn$_invoke$arity$2 = G__22218__2;
      G__22218.cljs$core$IFn$_invoke$arity$3 = G__22218__3;
      G__22218.cljs$core$IFn$_invoke$arity$variadic = G__22218__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__22218;
    }();
  };
  var juxt__4 = function() {
    var G__22224__delegate = function(f, g, h, fs) {
      var fs__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f, g, h, fs);
      return function(fs__$1) {
        return function() {
          var G__22225 = null;
          var G__22225__0 = function() {
            return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(fs__$1) {
              return function(p1__22112_SHARP_, p2__22113_SHARP_) {
                return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__22112_SHARP_, function() {
                  return p2__22113_SHARP_.cljs$core$IFn$_invoke$arity$0 ? p2__22113_SHARP_.cljs$core$IFn$_invoke$arity$0() : p2__22113_SHARP_.call(null);
                }());
              };
            }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
          };
          var G__22225__1 = function(x) {
            return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(fs__$1) {
              return function(p1__22114_SHARP_, p2__22115_SHARP_) {
                return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__22114_SHARP_, function() {
                  var G__22200 = x;
                  return p2__22115_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p2__22115_SHARP_.cljs$core$IFn$_invoke$arity$1(G__22200) : p2__22115_SHARP_.call(null, G__22200);
                }());
              };
            }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
          };
          var G__22225__2 = function(x, y) {
            return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(fs__$1) {
              return function(p1__22116_SHARP_, p2__22117_SHARP_) {
                return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__22116_SHARP_, function() {
                  var G__22201 = x;
                  var G__22202 = y;
                  return p2__22117_SHARP_.cljs$core$IFn$_invoke$arity$2 ? p2__22117_SHARP_.cljs$core$IFn$_invoke$arity$2(G__22201, G__22202) : p2__22117_SHARP_.call(null, G__22201, G__22202);
                }());
              };
            }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
          };
          var G__22225__3 = function(x, y, z) {
            return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(fs__$1) {
              return function(p1__22118_SHARP_, p2__22119_SHARP_) {
                return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__22118_SHARP_, function() {
                  var G__22203 = x;
                  var G__22204 = y;
                  var G__22205 = z;
                  return p2__22119_SHARP_.cljs$core$IFn$_invoke$arity$3 ? p2__22119_SHARP_.cljs$core$IFn$_invoke$arity$3(G__22203, G__22204, G__22205) : p2__22119_SHARP_.call(null, G__22203, G__22204, G__22205);
                }());
              };
            }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
          };
          var G__22225__4 = function() {
            var G__22226__delegate = function(x, y, z, args) {
              return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(fs__$1) {
                return function(p1__22120_SHARP_, p2__22121_SHARP_) {
                  return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__22120_SHARP_, cljs.core.apply.cljs$core$IFn$_invoke$arity$5(p2__22121_SHARP_, x, y, z, args));
                };
              }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
            };
            var G__22226 = function(x, y, z, var_args) {
              var args = null;
              if (arguments.length > 3) {
                var G__22227__i = 0, G__22227__a = new Array(arguments.length - 3);
                while (G__22227__i < G__22227__a.length) {
                  G__22227__a[G__22227__i] = arguments[G__22227__i + 3];
                  ++G__22227__i;
                }
                args = new cljs.core.IndexedSeq(G__22227__a, 0);
              }
              return G__22226__delegate.call(this, x, y, z, args);
            };
            G__22226.cljs$lang$maxFixedArity = 3;
            G__22226.cljs$lang$applyTo = function(arglist__22228) {
              var x = cljs.core.first(arglist__22228);
              arglist__22228 = cljs.core.next(arglist__22228);
              var y = cljs.core.first(arglist__22228);
              arglist__22228 = cljs.core.next(arglist__22228);
              var z = cljs.core.first(arglist__22228);
              var args = cljs.core.rest(arglist__22228);
              return G__22226__delegate(x, y, z, args);
            };
            G__22226.cljs$core$IFn$_invoke$arity$variadic = G__22226__delegate;
            return G__22226;
          }();
          G__22225 = function(x, y, z, var_args) {
            var args = var_args;
            switch(arguments.length) {
              case 0:
                return G__22225__0.call(this);
              case 1:
                return G__22225__1.call(this, x);
              case 2:
                return G__22225__2.call(this, x, y);
              case 3:
                return G__22225__3.call(this, x, y, z);
              default:
                var G__22229 = null;
                if (arguments.length > 3) {
                  var G__22230__i = 0, G__22230__a = new Array(arguments.length - 3);
                  while (G__22230__i < G__22230__a.length) {
                    G__22230__a[G__22230__i] = arguments[G__22230__i + 3];
                    ++G__22230__i;
                  }
                  G__22229 = new cljs.core.IndexedSeq(G__22230__a, 0);
                }
                return G__22225__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__22229);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__22225.cljs$lang$maxFixedArity = 3;
          G__22225.cljs$lang$applyTo = G__22225__4.cljs$lang$applyTo;
          G__22225.cljs$core$IFn$_invoke$arity$0 = G__22225__0;
          G__22225.cljs$core$IFn$_invoke$arity$1 = G__22225__1;
          G__22225.cljs$core$IFn$_invoke$arity$2 = G__22225__2;
          G__22225.cljs$core$IFn$_invoke$arity$3 = G__22225__3;
          G__22225.cljs$core$IFn$_invoke$arity$variadic = G__22225__4.cljs$core$IFn$_invoke$arity$variadic;
          return G__22225;
        }();
      }(fs__$1);
    };
    var G__22224 = function(f, g, h, var_args) {
      var fs = null;
      if (arguments.length > 3) {
        var G__22231__i = 0, G__22231__a = new Array(arguments.length - 3);
        while (G__22231__i < G__22231__a.length) {
          G__22231__a[G__22231__i] = arguments[G__22231__i + 3];
          ++G__22231__i;
        }
        fs = new cljs.core.IndexedSeq(G__22231__a, 0);
      }
      return G__22224__delegate.call(this, f, g, h, fs);
    };
    G__22224.cljs$lang$maxFixedArity = 3;
    G__22224.cljs$lang$applyTo = function(arglist__22232) {
      var f = cljs.core.first(arglist__22232);
      arglist__22232 = cljs.core.next(arglist__22232);
      var g = cljs.core.first(arglist__22232);
      arglist__22232 = cljs.core.next(arglist__22232);
      var h = cljs.core.first(arglist__22232);
      var fs = cljs.core.rest(arglist__22232);
      return G__22224__delegate(f, g, h, fs);
    };
    G__22224.cljs$core$IFn$_invoke$arity$variadic = G__22224__delegate;
    return G__22224;
  }();
  juxt = function(f, g, h, var_args) {
    var fs = var_args;
    switch(arguments.length) {
      case 1:
        return juxt__1.call(this, f);
      case 2:
        return juxt__2.call(this, f, g);
      case 3:
        return juxt__3.call(this, f, g, h);
      default:
        var G__22233 = null;
        if (arguments.length > 3) {
          var G__22234__i = 0, G__22234__a = new Array(arguments.length - 3);
          while (G__22234__i < G__22234__a.length) {
            G__22234__a[G__22234__i] = arguments[G__22234__i + 3];
            ++G__22234__i;
          }
          G__22233 = new cljs.core.IndexedSeq(G__22234__a, 0);
        }
        return juxt__4.cljs$core$IFn$_invoke$arity$variadic(f, g, h, G__22233);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  juxt.cljs$lang$maxFixedArity = 3;
  juxt.cljs$lang$applyTo = juxt__4.cljs$lang$applyTo;
  juxt.cljs$core$IFn$_invoke$arity$1 = juxt__1;
  juxt.cljs$core$IFn$_invoke$arity$2 = juxt__2;
  juxt.cljs$core$IFn$_invoke$arity$3 = juxt__3;
  juxt.cljs$core$IFn$_invoke$arity$variadic = juxt__4.cljs$core$IFn$_invoke$arity$variadic;
  return juxt;
}();
cljs.core.dorun = function() {
  var dorun = null;
  var dorun__1 = function(coll) {
    while (true) {
      if (cljs.core.seq(coll)) {
        var G__22235 = cljs.core.next(coll);
        coll = G__22235;
        continue;
      } else {
        return null;
      }
      break;
    }
  };
  var dorun__2 = function(n, coll) {
    while (true) {
      if (cljs.core.seq(coll) && n > 0) {
        var G__22236 = n - 1;
        var G__22237 = cljs.core.next(coll);
        n = G__22236;
        coll = G__22237;
        continue;
      } else {
        return null;
      }
      break;
    }
  };
  dorun = function(n, coll) {
    switch(arguments.length) {
      case 1:
        return dorun__1.call(this, n);
      case 2:
        return dorun__2.call(this, n, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  dorun.cljs$core$IFn$_invoke$arity$1 = dorun__1;
  dorun.cljs$core$IFn$_invoke$arity$2 = dorun__2;
  return dorun;
}();
cljs.core.doall = function() {
  var doall = null;
  var doall__1 = function(coll) {
    cljs.core.dorun.cljs$core$IFn$_invoke$arity$1(coll);
    return coll;
  };
  var doall__2 = function(n, coll) {
    cljs.core.dorun.cljs$core$IFn$_invoke$arity$2(n, coll);
    return coll;
  };
  doall = function(n, coll) {
    switch(arguments.length) {
      case 1:
        return doall__1.call(this, n);
      case 2:
        return doall__2.call(this, n, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  doall.cljs$core$IFn$_invoke$arity$1 = doall__1;
  doall.cljs$core$IFn$_invoke$arity$2 = doall__2;
  return doall;
}();
cljs.core.regexp_QMARK_ = function regexp_QMARK_(o) {
  return o instanceof RegExp;
};
cljs.core.re_matches = function re_matches(re, s) {
  if (typeof s === "string") {
    var matches = re.exec(s);
    if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(matches), s)) {
      if (cljs.core.count(matches) === 1) {
        return cljs.core.first(matches);
      } else {
        return cljs.core.vec(matches);
      }
    } else {
      return null;
    }
  } else {
    throw new TypeError("re-matches must match against a string.");
  }
};
cljs.core.re_find = function re_find(re, s) {
  if (typeof s === "string") {
    var matches = re.exec(s);
    if (matches == null) {
      return null;
    } else {
      if (cljs.core.count(matches) === 1) {
        return cljs.core.first(matches);
      } else {
        return cljs.core.vec(matches);
      }
    }
  } else {
    throw new TypeError("re-find must match against a string.");
  }
};
cljs.core.re_seq = function re_seq(re, s) {
  var match_data = cljs.core.re_find(re, s);
  var match_idx = s.search(re);
  var match_str = cljs.core.coll_QMARK_(match_data) ? cljs.core.first(match_data) : match_data;
  var post_match = cljs.core.subs.cljs$core$IFn$_invoke$arity$2(s, match_idx + cljs.core.count(match_str));
  if (cljs.core.truth_(match_data)) {
    return new cljs.core.LazySeq(null, function(match_data, match_idx, match_str, post_match) {
      return function() {
        return cljs.core.cons(match_data, cljs.core.seq(post_match) ? re_seq(re, post_match) : null);
      };
    }(match_data, match_idx, match_str, post_match), null, null);
  } else {
    return null;
  }
};
cljs.core.re_pattern = function re_pattern(s) {
  if (s instanceof RegExp) {
    return s;
  } else {
    var vec__22241 = cljs.core.re_find(/^(?:\(\?([idmsux]*)\))?(.*)/, s);
    var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22241, 0, null);
    var flags = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22241, 1, null);
    var pattern = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22241, 2, null);
    return new RegExp(pattern, flags);
  }
};
cljs.core.pr_sequential_writer = function pr_sequential_writer(writer, print_one, begin, sep, end, opts, coll) {
  var _STAR_print_level_STAR_22249 = cljs.core._STAR_print_level_STAR_;
  cljs.core._STAR_print_level_STAR_ = cljs.core._STAR_print_level_STAR_ == null ? null : cljs.core._STAR_print_level_STAR_ - 1;
  try {
    if (!(cljs.core._STAR_print_level_STAR_ == null) && cljs.core._STAR_print_level_STAR_ < 0) {
      return cljs.core._write(writer, "#");
    } else {
      cljs.core._write(writer, begin);
      if ((new cljs.core.Keyword(null, "print-length", "print-length", 1931866356)).cljs$core$IFn$_invoke$arity$1(opts) === 0) {
        if (cljs.core.seq(coll)) {
          cljs.core._write(writer, function() {
            var or__7504__auto__ = (new cljs.core.Keyword(null, "more-marker", "more-marker", -14717935)).cljs$core$IFn$_invoke$arity$1(opts);
            if (cljs.core.truth_(or__7504__auto__)) {
              return or__7504__auto__;
            } else {
              return "...";
            }
          }());
        } else {
        }
      } else {
        if (cljs.core.seq(coll)) {
          var G__22250_22256 = cljs.core.first(coll);
          var G__22251_22257 = writer;
          var G__22252_22258 = opts;
          print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__22250_22256, G__22251_22257, G__22252_22258) : print_one.call(null, G__22250_22256, G__22251_22257, G__22252_22258);
        } else {
        }
        var coll_22259__$1 = cljs.core.next(coll);
        var n_22260 = (new cljs.core.Keyword(null, "print-length", "print-length", 1931866356)).cljs$core$IFn$_invoke$arity$1(opts) - 1;
        while (true) {
          if (coll_22259__$1 && (n_22260 == null || !(n_22260 === 0))) {
            cljs.core._write(writer, sep);
            var G__22253_22261 = cljs.core.first(coll_22259__$1);
            var G__22254_22262 = writer;
            var G__22255_22263 = opts;
            print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__22253_22261, G__22254_22262, G__22255_22263) : print_one.call(null, G__22253_22261, G__22254_22262, G__22255_22263);
            var G__22264 = cljs.core.next(coll_22259__$1);
            var G__22265 = n_22260 - 1;
            coll_22259__$1 = G__22264;
            n_22260 = G__22265;
            continue;
          } else {
            if (cljs.core.seq(coll_22259__$1) && n_22260 === 0) {
              cljs.core._write(writer, sep);
              cljs.core._write(writer, function() {
                var or__7504__auto__ = (new cljs.core.Keyword(null, "more-marker", "more-marker", -14717935)).cljs$core$IFn$_invoke$arity$1(opts);
                if (cljs.core.truth_(or__7504__auto__)) {
                  return or__7504__auto__;
                } else {
                  return "...";
                }
              }());
            } else {
            }
          }
          break;
        }
      }
      return cljs.core._write(writer, end);
    }
  } finally {
    cljs.core._STAR_print_level_STAR_ = _STAR_print_level_STAR_22249;
  }
};
cljs.core.write_all = function() {
  var write_all__delegate = function(writer, ss) {
    var seq__22270 = cljs.core.seq(ss);
    var chunk__22271 = null;
    var count__22272 = 0;
    var i__22273 = 0;
    while (true) {
      if (i__22273 < count__22272) {
        var s = chunk__22271.cljs$core$IIndexed$_nth$arity$2(null, i__22273);
        cljs.core._write(writer, s);
        var G__22274 = seq__22270;
        var G__22275 = chunk__22271;
        var G__22276 = count__22272;
        var G__22277 = i__22273 + 1;
        seq__22270 = G__22274;
        chunk__22271 = G__22275;
        count__22272 = G__22276;
        i__22273 = G__22277;
        continue;
      } else {
        var temp__4126__auto__ = cljs.core.seq(seq__22270);
        if (temp__4126__auto__) {
          var seq__22270__$1 = temp__4126__auto__;
          if (cljs.core.chunked_seq_QMARK_(seq__22270__$1)) {
            var c__8291__auto__ = cljs.core.chunk_first(seq__22270__$1);
            var G__22278 = cljs.core.chunk_rest(seq__22270__$1);
            var G__22279 = c__8291__auto__;
            var G__22280 = cljs.core.count(c__8291__auto__);
            var G__22281 = 0;
            seq__22270 = G__22278;
            chunk__22271 = G__22279;
            count__22272 = G__22280;
            i__22273 = G__22281;
            continue;
          } else {
            var s = cljs.core.first(seq__22270__$1);
            cljs.core._write(writer, s);
            var G__22282 = cljs.core.next(seq__22270__$1);
            var G__22283 = null;
            var G__22284 = 0;
            var G__22285 = 0;
            seq__22270 = G__22282;
            chunk__22271 = G__22283;
            count__22272 = G__22284;
            i__22273 = G__22285;
            continue;
          }
        } else {
          return null;
        }
      }
      break;
    }
  };
  var write_all = function(writer, var_args) {
    var ss = null;
    if (arguments.length > 1) {
      var G__22286__i = 0, G__22286__a = new Array(arguments.length - 1);
      while (G__22286__i < G__22286__a.length) {
        G__22286__a[G__22286__i] = arguments[G__22286__i + 1];
        ++G__22286__i;
      }
      ss = new cljs.core.IndexedSeq(G__22286__a, 0);
    }
    return write_all__delegate.call(this, writer, ss);
  };
  write_all.cljs$lang$maxFixedArity = 1;
  write_all.cljs$lang$applyTo = function(arglist__22287) {
    var writer = cljs.core.first(arglist__22287);
    var ss = cljs.core.rest(arglist__22287);
    return write_all__delegate(writer, ss);
  };
  write_all.cljs$core$IFn$_invoke$arity$variadic = write_all__delegate;
  return write_all;
}();
cljs.core.string_print = function string_print(x) {
  cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1 ? cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1(x) : cljs.core._STAR_print_fn_STAR_.call(null, x);
  return null;
};
cljs.core.flush = function flush() {
  return null;
};
cljs.core.char_escapes = function() {
  var obj22289 = {'"':'\\"', "\\":"\\\\", "\b":"\\b", "\f":"\\f", "\n":"\\n", "\r":"\\r", "\t":"\\t"};
  return obj22289;
}();
cljs.core.quote_string = function quote_string(s) {
  return[cljs.core.str('"'), cljs.core.str(s.replace(function() {
    var G__22292 = '[\\\\"\b\f\n\r\t]';
    var G__22293 = "g";
    return RegExp(G__22292, G__22293);
  }(), function(match) {
    return cljs.core.char_escapes[match];
  })), cljs.core.str('"')].join("");
};
cljs.core.pr_writer_impl = function pr_writer_impl(obj, writer, opts) {
  if (obj == null) {
    return cljs.core._write(writer, "nil");
  } else {
    if (void 0 === obj) {
      return cljs.core._write(writer, "#\x3cundefined\x3e");
    } else {
      if (cljs.core.truth_(function() {
        var and__7492__auto__ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts, new cljs.core.Keyword(null, "meta", "meta", 1499536964));
        if (cljs.core.truth_(and__7492__auto__)) {
          var and__7492__auto____$1 = function() {
            var G__22307 = obj;
            if (G__22307) {
              var bit__8185__auto__ = G__22307.cljs$lang$protocol_mask$partition0$ & 131072;
              if (bit__8185__auto__ || G__22307.cljs$core$IMeta$) {
                return true;
              } else {
                if (!G__22307.cljs$lang$protocol_mask$partition0$) {
                  return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta, G__22307);
                } else {
                  return false;
                }
              }
            } else {
              return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta, G__22307);
            }
          }();
          if (and__7492__auto____$1) {
            return cljs.core.meta(obj);
          } else {
            return and__7492__auto____$1;
          }
        } else {
          return and__7492__auto__;
        }
      }())) {
        cljs.core._write(writer, "^");
        var G__22308_22318 = cljs.core.meta(obj);
        var G__22309_22319 = writer;
        var G__22310_22320 = opts;
        cljs.core.pr_writer.cljs$core$IFn$_invoke$arity$3 ? cljs.core.pr_writer.cljs$core$IFn$_invoke$arity$3(G__22308_22318, G__22309_22319, G__22310_22320) : cljs.core.pr_writer.call(null, G__22308_22318, G__22309_22319, G__22310_22320);
        cljs.core._write(writer, " ");
      } else {
      }
      if (obj == null) {
        return cljs.core._write(writer, "nil");
      } else {
        if (obj.cljs$lang$type) {
          return obj.cljs$lang$ctorPrWriter(obj, writer, opts);
        } else {
          if (function() {
            var G__22311 = obj;
            if (G__22311) {
              var bit__8178__auto__ = G__22311.cljs$lang$protocol_mask$partition0$ & 2147483648;
              if (bit__8178__auto__ || G__22311.cljs$core$IPrintWithWriter$) {
                return true;
              } else {
                return false;
              }
            } else {
              return false;
            }
          }()) {
            return obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null, writer, opts);
          } else {
            if (cljs.core.type(obj) === Boolean || typeof obj === "number") {
              return cljs.core._write(writer, [cljs.core.str(obj)].join(""));
            } else {
              if (cljs.core.object_QMARK_(obj)) {
                cljs.core._write(writer, "#js ");
                var G__22312 = cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(k) {
                  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.cljs$core$IFn$_invoke$arity$1(k), obj[k]], null);
                }, cljs.core.js_keys(obj));
                var G__22313 = cljs.core.pr_writer;
                var G__22314 = writer;
                var G__22315 = opts;
                return cljs.core.print_map.cljs$core$IFn$_invoke$arity$4 ? cljs.core.print_map.cljs$core$IFn$_invoke$arity$4(G__22312, G__22313, G__22314, G__22315) : cljs.core.print_map.call(null, G__22312, G__22313, G__22314, G__22315);
              } else {
                if (obj instanceof Array) {
                  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "#js [", " ", "]", opts, obj);
                } else {
                  if (cljs.core.truth_(function() {
                    var G__22316 = obj;
                    return goog.isString(G__22316);
                  }())) {
                    if (cljs.core.truth_((new cljs.core.Keyword(null, "readably", "readably", 1129599760)).cljs$core$IFn$_invoke$arity$1(opts))) {
                      return cljs.core._write(writer, cljs.core.quote_string(obj));
                    } else {
                      return cljs.core._write(writer, obj);
                    }
                  } else {
                    if (cljs.core.fn_QMARK_(obj)) {
                      return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer, cljs.core.array_seq(["#\x3c", [cljs.core.str(obj)].join(""), "\x3e"], 0));
                    } else {
                      if (obj instanceof Date) {
                        var normalize = function(n, len) {
                          var ns = [cljs.core.str(n)].join("");
                          while (true) {
                            if (cljs.core.count(ns) < len) {
                              var G__22321 = [cljs.core.str("0"), cljs.core.str(ns)].join("");
                              ns = G__22321;
                              continue;
                            } else {
                              return ns;
                            }
                            break;
                          }
                        };
                        return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer, cljs.core.array_seq(['#inst "', [cljs.core.str(obj.getUTCFullYear())].join(""), "-", normalize(obj.getUTCMonth() + 1, 2), "-", normalize(obj.getUTCDate(), 2), "T", normalize(obj.getUTCHours(), 2), ":", normalize(obj.getUTCMinutes(), 2), ":", normalize(obj.getUTCSeconds(), 2), ".", normalize(obj.getUTCMilliseconds(), 3), "-", '00:00"'], 0));
                      } else {
                        if (cljs.core.regexp_QMARK_(obj)) {
                          return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer, cljs.core.array_seq(['#"', obj.source, '"'], 0));
                        } else {
                          if (function() {
                            var G__22317 = obj;
                            if (G__22317) {
                              var bit__8185__auto__ = G__22317.cljs$lang$protocol_mask$partition0$ & 2147483648;
                              if (bit__8185__auto__ || G__22317.cljs$core$IPrintWithWriter$) {
                                return true;
                              } else {
                                if (!G__22317.cljs$lang$protocol_mask$partition0$) {
                                  return cljs.core.native_satisfies_QMARK_(cljs.core.IPrintWithWriter, G__22317);
                                } else {
                                  return false;
                                }
                              }
                            } else {
                              return cljs.core.native_satisfies_QMARK_(cljs.core.IPrintWithWriter, G__22317);
                            }
                          }()) {
                            return cljs.core._pr_writer(obj, writer, opts);
                          } else {
                            return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer, cljs.core.array_seq(["#\x3c", [cljs.core.str(obj)].join(""), "\x3e"], 0));
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.pr_writer = function pr_writer(obj, writer, opts) {
  var temp__4124__auto__ = (new cljs.core.Keyword(null, "alt-impl", "alt-impl", 670969595)).cljs$core$IFn$_invoke$arity$1(opts);
  if (cljs.core.truth_(temp__4124__auto__)) {
    var alt_impl = temp__4124__auto__;
    var G__22325 = obj;
    var G__22326 = writer;
    var G__22327 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(opts, new cljs.core.Keyword(null, "fallback-impl", "fallback-impl", -1501286995), cljs.core.pr_writer_impl);
    return alt_impl.cljs$core$IFn$_invoke$arity$3 ? alt_impl.cljs$core$IFn$_invoke$arity$3(G__22325, G__22326, G__22327) : alt_impl.call(null, G__22325, G__22326, G__22327);
  } else {
    return cljs.core.pr_writer_impl(obj, writer, opts);
  }
};
cljs.core.pr_seq_writer = function pr_seq_writer(objs, writer, opts) {
  cljs.core.pr_writer(cljs.core.first(objs), writer, opts);
  var seq__22332 = cljs.core.seq(cljs.core.next(objs));
  var chunk__22333 = null;
  var count__22334 = 0;
  var i__22335 = 0;
  while (true) {
    if (i__22335 < count__22334) {
      var obj = chunk__22333.cljs$core$IIndexed$_nth$arity$2(null, i__22335);
      cljs.core._write(writer, " ");
      cljs.core.pr_writer(obj, writer, opts);
      var G__22336 = seq__22332;
      var G__22337 = chunk__22333;
      var G__22338 = count__22334;
      var G__22339 = i__22335 + 1;
      seq__22332 = G__22336;
      chunk__22333 = G__22337;
      count__22334 = G__22338;
      i__22335 = G__22339;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq(seq__22332);
      if (temp__4126__auto__) {
        var seq__22332__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__22332__$1)) {
          var c__8291__auto__ = cljs.core.chunk_first(seq__22332__$1);
          var G__22340 = cljs.core.chunk_rest(seq__22332__$1);
          var G__22341 = c__8291__auto__;
          var G__22342 = cljs.core.count(c__8291__auto__);
          var G__22343 = 0;
          seq__22332 = G__22340;
          chunk__22333 = G__22341;
          count__22334 = G__22342;
          i__22335 = G__22343;
          continue;
        } else {
          var obj = cljs.core.first(seq__22332__$1);
          cljs.core._write(writer, " ");
          cljs.core.pr_writer(obj, writer, opts);
          var G__22344 = cljs.core.next(seq__22332__$1);
          var G__22345 = null;
          var G__22346 = 0;
          var G__22347 = 0;
          seq__22332 = G__22344;
          chunk__22333 = G__22345;
          count__22334 = G__22346;
          i__22335 = G__22347;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.pr_sb_with_opts = function pr_sb_with_opts(objs, opts) {
  var sb = new goog.string.StringBuffer;
  var writer = new cljs.core.StringBufferWriter(sb);
  cljs.core.pr_seq_writer(objs, writer, opts);
  writer.cljs$core$IWriter$_flush$arity$1(null);
  return sb;
};
cljs.core.pr_str_with_opts = function pr_str_with_opts(objs, opts) {
  if (cljs.core.empty_QMARK_(objs)) {
    return "";
  } else {
    return[cljs.core.str(cljs.core.pr_sb_with_opts(objs, opts))].join("");
  }
};
cljs.core.prn_str_with_opts = function prn_str_with_opts(objs, opts) {
  if (cljs.core.empty_QMARK_(objs)) {
    return "\n";
  } else {
    var sb = cljs.core.pr_sb_with_opts(objs, opts);
    sb.append("\n");
    return[cljs.core.str(sb)].join("");
  }
};
cljs.core.pr_with_opts = function pr_with_opts(objs, opts) {
  return cljs.core.string_print(cljs.core.pr_str_with_opts(objs, opts));
};
cljs.core.newline = function newline(opts) {
  cljs.core.string_print("\n");
  if (cljs.core.truth_(cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts, new cljs.core.Keyword(null, "flush-on-newline", "flush-on-newline", -151457939)))) {
    return cljs.core.flush();
  } else {
    return null;
  }
};
cljs.core.pr_str = function() {
  var pr_str__delegate = function(objs) {
    return cljs.core.pr_str_with_opts(objs, cljs.core.pr_opts());
  };
  var pr_str = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      var G__22348__i = 0, G__22348__a = new Array(arguments.length - 0);
      while (G__22348__i < G__22348__a.length) {
        G__22348__a[G__22348__i] = arguments[G__22348__i + 0];
        ++G__22348__i;
      }
      objs = new cljs.core.IndexedSeq(G__22348__a, 0);
    }
    return pr_str__delegate.call(this, objs);
  };
  pr_str.cljs$lang$maxFixedArity = 0;
  pr_str.cljs$lang$applyTo = function(arglist__22349) {
    var objs = cljs.core.seq(arglist__22349);
    return pr_str__delegate(objs);
  };
  pr_str.cljs$core$IFn$_invoke$arity$variadic = pr_str__delegate;
  return pr_str;
}();
cljs.core.prn_str = function() {
  var prn_str__delegate = function(objs) {
    return cljs.core.prn_str_with_opts(objs, cljs.core.pr_opts());
  };
  var prn_str = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      var G__22350__i = 0, G__22350__a = new Array(arguments.length - 0);
      while (G__22350__i < G__22350__a.length) {
        G__22350__a[G__22350__i] = arguments[G__22350__i + 0];
        ++G__22350__i;
      }
      objs = new cljs.core.IndexedSeq(G__22350__a, 0);
    }
    return prn_str__delegate.call(this, objs);
  };
  prn_str.cljs$lang$maxFixedArity = 0;
  prn_str.cljs$lang$applyTo = function(arglist__22351) {
    var objs = cljs.core.seq(arglist__22351);
    return prn_str__delegate(objs);
  };
  prn_str.cljs$core$IFn$_invoke$arity$variadic = prn_str__delegate;
  return prn_str;
}();
cljs.core.pr = function() {
  var pr__delegate = function(objs) {
    return cljs.core.pr_with_opts(objs, cljs.core.pr_opts());
  };
  var pr = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      var G__22352__i = 0, G__22352__a = new Array(arguments.length - 0);
      while (G__22352__i < G__22352__a.length) {
        G__22352__a[G__22352__i] = arguments[G__22352__i + 0];
        ++G__22352__i;
      }
      objs = new cljs.core.IndexedSeq(G__22352__a, 0);
    }
    return pr__delegate.call(this, objs);
  };
  pr.cljs$lang$maxFixedArity = 0;
  pr.cljs$lang$applyTo = function(arglist__22353) {
    var objs = cljs.core.seq(arglist__22353);
    return pr__delegate(objs);
  };
  pr.cljs$core$IFn$_invoke$arity$variadic = pr__delegate;
  return pr;
}();
cljs.core.print = function() {
  var cljs_core_print__delegate = function(objs) {
    return cljs.core.pr_with_opts(objs, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(), new cljs.core.Keyword(null, "readably", "readably", 1129599760), false));
  };
  var cljs_core_print = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      var G__22354__i = 0, G__22354__a = new Array(arguments.length - 0);
      while (G__22354__i < G__22354__a.length) {
        G__22354__a[G__22354__i] = arguments[G__22354__i + 0];
        ++G__22354__i;
      }
      objs = new cljs.core.IndexedSeq(G__22354__a, 0);
    }
    return cljs_core_print__delegate.call(this, objs);
  };
  cljs_core_print.cljs$lang$maxFixedArity = 0;
  cljs_core_print.cljs$lang$applyTo = function(arglist__22355) {
    var objs = cljs.core.seq(arglist__22355);
    return cljs_core_print__delegate(objs);
  };
  cljs_core_print.cljs$core$IFn$_invoke$arity$variadic = cljs_core_print__delegate;
  return cljs_core_print;
}();
cljs.core.print_str = function() {
  var print_str__delegate = function(objs) {
    return cljs.core.pr_str_with_opts(objs, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(), new cljs.core.Keyword(null, "readably", "readably", 1129599760), false));
  };
  var print_str = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      var G__22356__i = 0, G__22356__a = new Array(arguments.length - 0);
      while (G__22356__i < G__22356__a.length) {
        G__22356__a[G__22356__i] = arguments[G__22356__i + 0];
        ++G__22356__i;
      }
      objs = new cljs.core.IndexedSeq(G__22356__a, 0);
    }
    return print_str__delegate.call(this, objs);
  };
  print_str.cljs$lang$maxFixedArity = 0;
  print_str.cljs$lang$applyTo = function(arglist__22357) {
    var objs = cljs.core.seq(arglist__22357);
    return print_str__delegate(objs);
  };
  print_str.cljs$core$IFn$_invoke$arity$variadic = print_str__delegate;
  return print_str;
}();
cljs.core.println = function() {
  var println__delegate = function(objs) {
    cljs.core.pr_with_opts(objs, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(), new cljs.core.Keyword(null, "readably", "readably", 1129599760), false));
    if (cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)) {
      return cljs.core.newline(cljs.core.pr_opts());
    } else {
      return null;
    }
  };
  var println = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      var G__22358__i = 0, G__22358__a = new Array(arguments.length - 0);
      while (G__22358__i < G__22358__a.length) {
        G__22358__a[G__22358__i] = arguments[G__22358__i + 0];
        ++G__22358__i;
      }
      objs = new cljs.core.IndexedSeq(G__22358__a, 0);
    }
    return println__delegate.call(this, objs);
  };
  println.cljs$lang$maxFixedArity = 0;
  println.cljs$lang$applyTo = function(arglist__22359) {
    var objs = cljs.core.seq(arglist__22359);
    return println__delegate(objs);
  };
  println.cljs$core$IFn$_invoke$arity$variadic = println__delegate;
  return println;
}();
cljs.core.println_str = function() {
  var println_str__delegate = function(objs) {
    return cljs.core.prn_str_with_opts(objs, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(), new cljs.core.Keyword(null, "readably", "readably", 1129599760), false));
  };
  var println_str = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      var G__22360__i = 0, G__22360__a = new Array(arguments.length - 0);
      while (G__22360__i < G__22360__a.length) {
        G__22360__a[G__22360__i] = arguments[G__22360__i + 0];
        ++G__22360__i;
      }
      objs = new cljs.core.IndexedSeq(G__22360__a, 0);
    }
    return println_str__delegate.call(this, objs);
  };
  println_str.cljs$lang$maxFixedArity = 0;
  println_str.cljs$lang$applyTo = function(arglist__22361) {
    var objs = cljs.core.seq(arglist__22361);
    return println_str__delegate(objs);
  };
  println_str.cljs$core$IFn$_invoke$arity$variadic = println_str__delegate;
  return println_str;
}();
cljs.core.prn = function() {
  var prn__delegate = function(objs) {
    cljs.core.pr_with_opts(objs, cljs.core.pr_opts());
    if (cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)) {
      return cljs.core.newline(cljs.core.pr_opts());
    } else {
      return null;
    }
  };
  var prn = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      var G__22362__i = 0, G__22362__a = new Array(arguments.length - 0);
      while (G__22362__i < G__22362__a.length) {
        G__22362__a[G__22362__i] = arguments[G__22362__i + 0];
        ++G__22362__i;
      }
      objs = new cljs.core.IndexedSeq(G__22362__a, 0);
    }
    return prn__delegate.call(this, objs);
  };
  prn.cljs$lang$maxFixedArity = 0;
  prn.cljs$lang$applyTo = function(arglist__22363) {
    var objs = cljs.core.seq(arglist__22363);
    return prn__delegate(objs);
  };
  prn.cljs$core$IFn$_invoke$arity$variadic = prn__delegate;
  return prn;
}();
cljs.core.print_map = function print_map(m, print_one, writer, opts) {
  return cljs.core.pr_sequential_writer(writer, function(e, w, opts__$1) {
    var G__22370_22376 = cljs.core.key(e);
    var G__22371_22377 = w;
    var G__22372_22378 = opts__$1;
    print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__22370_22376, G__22371_22377, G__22372_22378) : print_one.call(null, G__22370_22376, G__22371_22377, G__22372_22378);
    cljs.core._write(w, " ");
    var G__22373 = cljs.core.val(e);
    var G__22374 = w;
    var G__22375 = opts__$1;
    return print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__22373, G__22374, G__22375) : print_one.call(null, G__22373, G__22374, G__22375);
  }, "{", ", ", "}", opts, cljs.core.seq(m));
};
cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, writer, opts) {
  var a__$1 = this;
  cljs.core._write(writer, "#\x3cVolatile: ");
  cljs.core.pr_writer(a__$1.state, writer, opts);
  return cljs.core._write(writer, "\x3e");
};
cljs.core.Var.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Var.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, writer, opts) {
  var a__$1 = this;
  cljs.core._write(writer, "#'");
  return cljs.core.pr_writer(a__$1.sym, writer, opts);
};
cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "#{", " ", "}", opts, coll__$1);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map(coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map(coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map(coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "#{", " ", "}", opts, coll__$1);
};
cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, writer, opts) {
  var a__$1 = this;
  cljs.core._write(writer, "#\x3cAtom: ");
  cljs.core.pr_writer(a__$1.state, writer, opts);
  return cljs.core._write(writer, "\x3e");
};
cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core._write(writer, "()");
};
cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "#queue [", " ", "]", opts, cljs.core.seq(coll__$1));
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map(coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.Range.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Range.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.List.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.List.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentVector.prototype.cljs$core$IComparable$ = true;
cljs.core.PersistentVector.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1, y);
};
cljs.core.Subvec.prototype.cljs$core$IComparable$ = true;
cljs.core.Subvec.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1, y);
};
cljs.core.Keyword.prototype.cljs$core$IComparable$ = true;
cljs.core.Keyword.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  return cljs.core.compare_keywords(x__$1, y);
};
cljs.core.Symbol.prototype.cljs$core$IComparable$ = true;
cljs.core.Symbol.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  return cljs.core.compare_symbols(x__$1, y);
};
cljs.core.alter_meta_BANG_ = function() {
  var alter_meta_BANG___delegate = function(iref, f, args) {
    return iref.meta = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f, iref.meta, args);
  };
  var alter_meta_BANG_ = function(iref, f, var_args) {
    var args = null;
    if (arguments.length > 2) {
      var G__22379__i = 0, G__22379__a = new Array(arguments.length - 2);
      while (G__22379__i < G__22379__a.length) {
        G__22379__a[G__22379__i] = arguments[G__22379__i + 2];
        ++G__22379__i;
      }
      args = new cljs.core.IndexedSeq(G__22379__a, 0);
    }
    return alter_meta_BANG___delegate.call(this, iref, f, args);
  };
  alter_meta_BANG_.cljs$lang$maxFixedArity = 2;
  alter_meta_BANG_.cljs$lang$applyTo = function(arglist__22380) {
    var iref = cljs.core.first(arglist__22380);
    arglist__22380 = cljs.core.next(arglist__22380);
    var f = cljs.core.first(arglist__22380);
    var args = cljs.core.rest(arglist__22380);
    return alter_meta_BANG___delegate(iref, f, args);
  };
  alter_meta_BANG_.cljs$core$IFn$_invoke$arity$variadic = alter_meta_BANG___delegate;
  return alter_meta_BANG_;
}();
cljs.core.reset_meta_BANG_ = function reset_meta_BANG_(iref, m) {
  return iref.meta = m;
};
cljs.core.add_watch = function add_watch(iref, key, f) {
  cljs.core._add_watch(iref, key, f);
  return iref;
};
cljs.core.remove_watch = function remove_watch(iref, key) {
  cljs.core._remove_watch(iref, key);
  return iref;
};
cljs.core.gensym_counter = null;
cljs.core.gensym = function() {
  var gensym = null;
  var gensym__0 = function() {
    return gensym.cljs$core$IFn$_invoke$arity$1("G__");
  };
  var gensym__1 = function(prefix_string) {
    if (cljs.core.gensym_counter == null) {
      cljs.core.gensym_counter = function() {
        var G__22383 = 0;
        return cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__22383) : cljs.core.atom.call(null, G__22383);
      }();
    } else {
    }
    return cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([cljs.core.str(prefix_string), cljs.core.str(cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cljs.core.gensym_counter, cljs.core.inc))].join(""));
  };
  gensym = function(prefix_string) {
    switch(arguments.length) {
      case 0:
        return gensym__0.call(this);
      case 1:
        return gensym__1.call(this, prefix_string);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  gensym.cljs$core$IFn$_invoke$arity$0 = gensym__0;
  gensym.cljs$core$IFn$_invoke$arity$1 = gensym__1;
  return gensym;
}();
cljs.core.fixture1 = 1;
cljs.core.fixture2 = 2;
cljs.core.Delay = function(f, value) {
  this.f = f;
  this.value = value;
  this.cljs$lang$protocol_mask$partition1$ = 1;
  this.cljs$lang$protocol_mask$partition0$ = 32768;
};
cljs.core.Delay.prototype.cljs$core$IPending$_realized_QMARK_$arity$1 = function(d) {
  var self__ = this;
  var d__$1 = this;
  return cljs.core.not(self__.f);
};
cljs.core.Delay.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (cljs.core.truth_(self__.f)) {
    self__.value = function() {
      return self__.f.cljs$core$IFn$_invoke$arity$0 ? self__.f.cljs$core$IFn$_invoke$arity$0() : self__.f.call(null);
    }();
    self__.f = null;
  } else {
  }
  return self__.value;
};
cljs.core.Delay.cljs$lang$type = true;
cljs.core.Delay.cljs$lang$ctorStr = "cljs.core/Delay";
cljs.core.Delay.cljs$lang$ctorPrWriter = function(this__8091__auto__, writer__8092__auto__, opt__8093__auto__) {
  return cljs.core._write(writer__8092__auto__, "cljs.core/Delay");
};
cljs.core.__GT_Delay = function __GT_Delay(f, value) {
  return new cljs.core.Delay(f, value);
};
cljs.core.delay_QMARK_ = function delay_QMARK_(x) {
  return x instanceof cljs.core.Delay;
};
cljs.core.force = function force(x) {
  if (cljs.core.delay_QMARK_(x)) {
    var G__22385 = x;
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__22385) : cljs.core.deref.call(null, G__22385);
  } else {
    return x;
  }
};
cljs.core.realized_QMARK_ = function realized_QMARK_(d) {
  return cljs.core._realized_QMARK_(d);
};
cljs.core.preserving_reduced = function preserving_reduced(rf) {
  return function(p1__22386_SHARP_, p2__22387_SHARP_) {
    var ret = function() {
      var G__22390 = p1__22386_SHARP_;
      var G__22391 = p2__22387_SHARP_;
      return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__22390, G__22391) : rf.call(null, G__22390, G__22391);
    }();
    if (cljs.core.reduced_QMARK_(ret)) {
      return cljs.core.reduced(ret);
    } else {
      return ret;
    }
  };
};
cljs.core.cat = function cat(rf) {
  var rf1 = cljs.core.preserving_reduced(rf);
  return function(rf1) {
    return function() {
      var G__22394 = null;
      var G__22394__0 = function() {
        return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
      };
      var G__22394__1 = function(result) {
        var G__22393 = result;
        return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__22393) : rf.call(null, G__22393);
      };
      var G__22394__2 = function(result, input) {
        return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(rf1, result, input);
      };
      G__22394 = function(result, input) {
        switch(arguments.length) {
          case 0:
            return G__22394__0.call(this);
          case 1:
            return G__22394__1.call(this, result);
          case 2:
            return G__22394__2.call(this, result, input);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__22394.cljs$core$IFn$_invoke$arity$0 = G__22394__0;
      G__22394.cljs$core$IFn$_invoke$arity$1 = G__22394__1;
      G__22394.cljs$core$IFn$_invoke$arity$2 = G__22394__2;
      return G__22394;
    }();
  }(rf1);
};
cljs.core.dedupe = function() {
  var dedupe = null;
  var dedupe__0 = function() {
    return function(rf) {
      var pa = cljs.core.volatile_BANG_(new cljs.core.Keyword("cljs.core", "none", "cljs.core/none", 926646439));
      return function(pa) {
        return function() {
          var G__22403 = null;
          var G__22403__0 = function() {
            return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
          };
          var G__22403__1 = function(result) {
            var G__22399 = result;
            return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__22399) : rf.call(null, G__22399);
          };
          var G__22403__2 = function(result, input) {
            var prior = function() {
              var G__22400 = pa;
              return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__22400) : cljs.core.deref.call(null, G__22400);
            }();
            cljs.core.vreset_BANG_(pa, input);
            if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(prior, input)) {
              return result;
            } else {
              var G__22401 = result;
              var G__22402 = input;
              return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__22401, G__22402) : rf.call(null, G__22401, G__22402);
            }
          };
          G__22403 = function(result, input) {
            switch(arguments.length) {
              case 0:
                return G__22403__0.call(this);
              case 1:
                return G__22403__1.call(this, result);
              case 2:
                return G__22403__2.call(this, result, input);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__22403.cljs$core$IFn$_invoke$arity$0 = G__22403__0;
          G__22403.cljs$core$IFn$_invoke$arity$1 = G__22403__1;
          G__22403.cljs$core$IFn$_invoke$arity$2 = G__22403__2;
          return G__22403;
        }();
      }(pa);
    };
  };
  var dedupe__1 = function(coll) {
    return cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(dedupe.cljs$core$IFn$_invoke$arity$0(), coll);
  };
  dedupe = function(coll) {
    switch(arguments.length) {
      case 0:
        return dedupe__0.call(this);
      case 1:
        return dedupe__1.call(this, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  dedupe.cljs$core$IFn$_invoke$arity$0 = dedupe__0;
  dedupe.cljs$core$IFn$_invoke$arity$1 = dedupe__1;
  return dedupe;
}();
cljs.core.random_sample = function() {
  var random_sample = null;
  var random_sample__1 = function(prob) {
    return cljs.core.filter.cljs$core$IFn$_invoke$arity$1(function(_) {
      return function() {
        return cljs.core.rand.cljs$core$IFn$_invoke$arity$0 ? cljs.core.rand.cljs$core$IFn$_invoke$arity$0() : cljs.core.rand.call(null);
      }() < prob;
    });
  };
  var random_sample__2 = function(prob, coll) {
    return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(function(_) {
      return function() {
        return cljs.core.rand.cljs$core$IFn$_invoke$arity$0 ? cljs.core.rand.cljs$core$IFn$_invoke$arity$0() : cljs.core.rand.call(null);
      }() < prob;
    }, coll);
  };
  random_sample = function(prob, coll) {
    switch(arguments.length) {
      case 1:
        return random_sample__1.call(this, prob);
      case 2:
        return random_sample__2.call(this, prob, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  random_sample.cljs$core$IFn$_invoke$arity$1 = random_sample__1;
  random_sample.cljs$core$IFn$_invoke$arity$2 = random_sample__2;
  return random_sample;
}();
cljs.core.Eduction = function(xform, coll) {
  this.xform = xform;
  this.coll = coll;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2173173760;
};
cljs.core.Eduction.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll__$1, writer, opts) {
  var self__ = this;
  var coll__$2 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$2);
};
cljs.core.Eduction.prototype.cljs$core$IReduce$_reduce$arity$3 = function(_, f, init) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(self__.xform, f, init, self__.coll);
};
cljs.core.Eduction.prototype.cljs$core$ISeqable$_seq$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core.seq(cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(self__.xform, self__.coll));
};
cljs.core.Eduction.cljs$lang$type = true;
cljs.core.Eduction.cljs$lang$ctorStr = "cljs.core/Eduction";
cljs.core.Eduction.cljs$lang$ctorPrWriter = function(this__8091__auto__, writer__8092__auto__, opt__8093__auto__) {
  return cljs.core._write(writer__8092__auto__, "cljs.core/Eduction");
};
cljs.core.__GT_Eduction = function __GT_Eduction(xform, coll) {
  return new cljs.core.Eduction(xform, coll);
};
cljs.core.Eduction.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__8482__auto__ = this;
  return cljs.core.es6_iterator(this__8482__auto__);
};
cljs.core.eduction = function eduction(xform, coll) {
  return new cljs.core.Eduction(xform, coll);
};
cljs.core.run_BANG_ = function run_BANG_(proc, coll) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(p1__22405_SHARP_, p2__22404_SHARP_) {
    var G__22407 = p2__22404_SHARP_;
    return proc.cljs$core$IFn$_invoke$arity$1 ? proc.cljs$core$IFn$_invoke$arity$1(G__22407) : proc.call(null, G__22407);
  }, null, coll);
};
cljs.core.IEncodeJS = function() {
  var obj22409 = {};
  return obj22409;
}();
cljs.core._clj__GT_js = function _clj__GT_js(x) {
  if (function() {
    var and__7492__auto__ = x;
    if (and__7492__auto__) {
      return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1;
    } else {
      return and__7492__auto__;
    }
  }()) {
    return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1(x);
  } else {
    var x__8148__auto__ = x == null ? null : x;
    return function() {
      var or__7504__auto__ = cljs.core._clj__GT_js[function() {
        var G__22413 = x__8148__auto__;
        return goog.typeOf(G__22413);
      }()];
      if (or__7504__auto__) {
        return or__7504__auto__;
      } else {
        var or__7504__auto____$1 = cljs.core._clj__GT_js["_"];
        if (or__7504__auto____$1) {
          return or__7504__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IEncodeJS.-clj-\x3ejs", x);
        }
      }
    }().call(null, x);
  }
};
cljs.core._key__GT_js = function _key__GT_js(x) {
  if (function() {
    var and__7492__auto__ = x;
    if (and__7492__auto__) {
      return x.cljs$core$IEncodeJS$_key__GT_js$arity$1;
    } else {
      return and__7492__auto__;
    }
  }()) {
    return x.cljs$core$IEncodeJS$_key__GT_js$arity$1(x);
  } else {
    var x__8148__auto__ = x == null ? null : x;
    return function() {
      var or__7504__auto__ = cljs.core._key__GT_js[function() {
        var G__22417 = x__8148__auto__;
        return goog.typeOf(G__22417);
      }()];
      if (or__7504__auto__) {
        return or__7504__auto__;
      } else {
        var or__7504__auto____$1 = cljs.core._key__GT_js["_"];
        if (or__7504__auto____$1) {
          return or__7504__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IEncodeJS.-key-\x3ejs", x);
        }
      }
    }().call(null, x);
  }
};
cljs.core.key__GT_js = function key__GT_js(k) {
  if (function() {
    var G__22420 = k;
    if (G__22420) {
      var bit__8185__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__7504__auto__ = bit__8185__auto__;
        if (cljs.core.truth_(or__7504__auto__)) {
          return or__7504__auto__;
        } else {
          return G__22420.cljs$core$IEncodeJS$;
        }
      }())) {
        return true;
      } else {
        if (!G__22420.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS, G__22420);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS, G__22420);
    }
  }()) {
    return cljs.core._clj__GT_js(k);
  } else {
    if (typeof k === "string" || typeof k === "number" || k instanceof cljs.core.Keyword || k instanceof cljs.core.Symbol) {
      var G__22421 = k;
      return cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1 ? cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1(G__22421) : cljs.core.clj__GT_js.call(null, G__22421);
    } else {
      return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([k], 0));
    }
  }
};
cljs.core.clj__GT_js = function clj__GT_js(x) {
  if (x == null) {
    return null;
  } else {
    if (function() {
      var G__22437 = x;
      if (G__22437) {
        var bit__8185__auto__ = null;
        if (cljs.core.truth_(function() {
          var or__7504__auto__ = bit__8185__auto__;
          if (cljs.core.truth_(or__7504__auto__)) {
            return or__7504__auto__;
          } else {
            return G__22437.cljs$core$IEncodeJS$;
          }
        }())) {
          return true;
        } else {
          if (!G__22437.cljs$lang$protocol_mask$partition$) {
            return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS, G__22437);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS, G__22437);
      }
    }()) {
      return cljs.core._clj__GT_js(x);
    } else {
      if (x instanceof cljs.core.Keyword) {
        return cljs.core.name(x);
      } else {
        if (x instanceof cljs.core.Symbol) {
          return[cljs.core.str(x)].join("");
        } else {
          if (cljs.core.map_QMARK_(x)) {
            var m = function() {
              var obj22439 = {};
              return obj22439;
            }();
            var seq__22440_22450 = cljs.core.seq(x);
            var chunk__22441_22451 = null;
            var count__22442_22452 = 0;
            var i__22443_22453 = 0;
            while (true) {
              if (i__22443_22453 < count__22442_22452) {
                var vec__22444_22454 = chunk__22441_22451.cljs$core$IIndexed$_nth$arity$2(null, i__22443_22453);
                var k_22455 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22444_22454, 0, null);
                var v_22456 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22444_22454, 1, null);
                m[cljs.core.key__GT_js(k_22455)] = clj__GT_js(v_22456);
                var G__22457 = seq__22440_22450;
                var G__22458 = chunk__22441_22451;
                var G__22459 = count__22442_22452;
                var G__22460 = i__22443_22453 + 1;
                seq__22440_22450 = G__22457;
                chunk__22441_22451 = G__22458;
                count__22442_22452 = G__22459;
                i__22443_22453 = G__22460;
                continue;
              } else {
                var temp__4126__auto___22461 = cljs.core.seq(seq__22440_22450);
                if (temp__4126__auto___22461) {
                  var seq__22440_22462__$1 = temp__4126__auto___22461;
                  if (cljs.core.chunked_seq_QMARK_(seq__22440_22462__$1)) {
                    var c__8291__auto___22463 = cljs.core.chunk_first(seq__22440_22462__$1);
                    var G__22464 = cljs.core.chunk_rest(seq__22440_22462__$1);
                    var G__22465 = c__8291__auto___22463;
                    var G__22466 = cljs.core.count(c__8291__auto___22463);
                    var G__22467 = 0;
                    seq__22440_22450 = G__22464;
                    chunk__22441_22451 = G__22465;
                    count__22442_22452 = G__22466;
                    i__22443_22453 = G__22467;
                    continue;
                  } else {
                    var vec__22445_22468 = cljs.core.first(seq__22440_22462__$1);
                    var k_22469 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22445_22468, 0, null);
                    var v_22470 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22445_22468, 1, null);
                    m[cljs.core.key__GT_js(k_22469)] = clj__GT_js(v_22470);
                    var G__22471 = cljs.core.next(seq__22440_22462__$1);
                    var G__22472 = null;
                    var G__22473 = 0;
                    var G__22474 = 0;
                    seq__22440_22450 = G__22471;
                    chunk__22441_22451 = G__22472;
                    count__22442_22452 = G__22473;
                    i__22443_22453 = G__22474;
                    continue;
                  }
                } else {
                }
              }
              break;
            }
            return m;
          } else {
            if (cljs.core.coll_QMARK_(x)) {
              var arr = [];
              var seq__22446_22475 = cljs.core.seq(cljs.core.map.cljs$core$IFn$_invoke$arity$2(clj__GT_js, x));
              var chunk__22447_22476 = null;
              var count__22448_22477 = 0;
              var i__22449_22478 = 0;
              while (true) {
                if (i__22449_22478 < count__22448_22477) {
                  var x_22479__$1 = chunk__22447_22476.cljs$core$IIndexed$_nth$arity$2(null, i__22449_22478);
                  arr.push(x_22479__$1);
                  var G__22480 = seq__22446_22475;
                  var G__22481 = chunk__22447_22476;
                  var G__22482 = count__22448_22477;
                  var G__22483 = i__22449_22478 + 1;
                  seq__22446_22475 = G__22480;
                  chunk__22447_22476 = G__22481;
                  count__22448_22477 = G__22482;
                  i__22449_22478 = G__22483;
                  continue;
                } else {
                  var temp__4126__auto___22484 = cljs.core.seq(seq__22446_22475);
                  if (temp__4126__auto___22484) {
                    var seq__22446_22485__$1 = temp__4126__auto___22484;
                    if (cljs.core.chunked_seq_QMARK_(seq__22446_22485__$1)) {
                      var c__8291__auto___22486 = cljs.core.chunk_first(seq__22446_22485__$1);
                      var G__22487 = cljs.core.chunk_rest(seq__22446_22485__$1);
                      var G__22488 = c__8291__auto___22486;
                      var G__22489 = cljs.core.count(c__8291__auto___22486);
                      var G__22490 = 0;
                      seq__22446_22475 = G__22487;
                      chunk__22447_22476 = G__22488;
                      count__22448_22477 = G__22489;
                      i__22449_22478 = G__22490;
                      continue;
                    } else {
                      var x_22491__$1 = cljs.core.first(seq__22446_22485__$1);
                      arr.push(x_22491__$1);
                      var G__22492 = cljs.core.next(seq__22446_22485__$1);
                      var G__22493 = null;
                      var G__22494 = 0;
                      var G__22495 = 0;
                      seq__22446_22475 = G__22492;
                      chunk__22447_22476 = G__22493;
                      count__22448_22477 = G__22494;
                      i__22449_22478 = G__22495;
                      continue;
                    }
                  } else {
                  }
                }
                break;
              }
              return arr;
            } else {
              return x;
            }
          }
        }
      }
    }
  }
};
cljs.core.IEncodeClojure = function() {
  var obj22497 = {};
  return obj22497;
}();
cljs.core._js__GT_clj = function _js__GT_clj(x, options) {
  if (function() {
    var and__7492__auto__ = x;
    if (and__7492__auto__) {
      return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2;
    } else {
      return and__7492__auto__;
    }
  }()) {
    return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2(x, options);
  } else {
    var x__8148__auto__ = x == null ? null : x;
    return function() {
      var or__7504__auto__ = cljs.core._js__GT_clj[function() {
        var G__22501 = x__8148__auto__;
        return goog.typeOf(G__22501);
      }()];
      if (or__7504__auto__) {
        return or__7504__auto__;
      } else {
        var or__7504__auto____$1 = cljs.core._js__GT_clj["_"];
        if (or__7504__auto____$1) {
          return or__7504__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IEncodeClojure.-js-\x3eclj", x);
        }
      }
    }().call(null, x, options);
  }
};
cljs.core.js__GT_clj = function() {
  var js__GT_clj = null;
  var js__GT_clj__1 = function(x) {
    return js__GT_clj.cljs$core$IFn$_invoke$arity$variadic(x, cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "keywordize-keys", "keywordize-keys", 1310784252), false], null)], 0));
  };
  var js__GT_clj__2 = function() {
    var G__22558__delegate = function(x, opts) {
      var map__22531 = opts;
      var map__22531__$1 = cljs.core.seq_QMARK_(map__22531) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, map__22531) : map__22531;
      var keywordize_keys = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__22531__$1, new cljs.core.Keyword(null, "keywordize-keys", "keywordize-keys", 1310784252));
      var keyfn = cljs.core.truth_(keywordize_keys) ? cljs.core.keyword : cljs.core.str;
      var f = function(map__22531, map__22531__$1, keywordize_keys, keyfn) {
        return function thisfn(x__$1) {
          if (function() {
            var G__22547 = x__$1;
            if (G__22547) {
              var bit__8185__auto__ = null;
              if (cljs.core.truth_(function() {
                var or__7504__auto__ = bit__8185__auto__;
                if (cljs.core.truth_(or__7504__auto__)) {
                  return or__7504__auto__;
                } else {
                  return G__22547.cljs$core$IEncodeClojure$;
                }
              }())) {
                return true;
              } else {
                if (!G__22547.cljs$lang$protocol_mask$partition$) {
                  return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure, G__22547);
                } else {
                  return false;
                }
              }
            } else {
              return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure, G__22547);
            }
          }()) {
            return cljs.core._js__GT_clj(x__$1, cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array_map, opts));
          } else {
            if (cljs.core.seq_QMARK_(x__$1)) {
              return cljs.core.doall.cljs$core$IFn$_invoke$arity$1(cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn, x__$1));
            } else {
              if (cljs.core.coll_QMARK_(x__$1)) {
                return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.empty(x__$1), cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn, x__$1));
              } else {
                if (x__$1 instanceof Array) {
                  return cljs.core.vec(cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn, x__$1));
                } else {
                  if (cljs.core.type(x__$1) === Object) {
                    return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY, function() {
                      var iter__8260__auto__ = function(map__22531, map__22531__$1, keywordize_keys, keyfn) {
                        return function iter__22548(s__22549) {
                          return new cljs.core.LazySeq(null, function(map__22531, map__22531__$1, keywordize_keys, keyfn) {
                            return function() {
                              var s__22549__$1 = s__22549;
                              while (true) {
                                var temp__4126__auto__ = cljs.core.seq(s__22549__$1);
                                if (temp__4126__auto__) {
                                  var s__22549__$2 = temp__4126__auto__;
                                  if (cljs.core.chunked_seq_QMARK_(s__22549__$2)) {
                                    var c__8258__auto__ = cljs.core.chunk_first(s__22549__$2);
                                    var size__8259__auto__ = cljs.core.count(c__8258__auto__);
                                    var b__22551 = cljs.core.chunk_buffer(size__8259__auto__);
                                    if (function() {
                                      var i__22550 = 0;
                                      while (true) {
                                        if (i__22550 < size__8259__auto__) {
                                          var k = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c__8258__auto__, i__22550);
                                          cljs.core.chunk_append(b__22551, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
                                            var G__22556 = k;
                                            return keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__22556) : keyfn.call(null, G__22556);
                                          }(), thisfn(x__$1[k])], null));
                                          var G__22559 = i__22550 + 1;
                                          i__22550 = G__22559;
                                          continue;
                                        } else {
                                          return true;
                                        }
                                        break;
                                      }
                                    }()) {
                                      return cljs.core.chunk_cons(cljs.core.chunk(b__22551), iter__22548(cljs.core.chunk_rest(s__22549__$2)));
                                    } else {
                                      return cljs.core.chunk_cons(cljs.core.chunk(b__22551), null);
                                    }
                                  } else {
                                    var k = cljs.core.first(s__22549__$2);
                                    return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
                                      var G__22557 = k;
                                      return keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__22557) : keyfn.call(null, G__22557);
                                    }(), thisfn(x__$1[k])], null), iter__22548(cljs.core.rest(s__22549__$2)));
                                  }
                                } else {
                                  return null;
                                }
                                break;
                              }
                            };
                          }(map__22531, map__22531__$1, keywordize_keys, keyfn), null, null);
                        };
                      }(map__22531, map__22531__$1, keywordize_keys, keyfn);
                      return iter__8260__auto__(cljs.core.js_keys(x__$1));
                    }());
                  } else {
                    return x__$1;
                  }
                }
              }
            }
          }
        };
      }(map__22531, map__22531__$1, keywordize_keys, keyfn);
      return f(x);
    };
    var G__22558 = function(x, var_args) {
      var opts = null;
      if (arguments.length > 1) {
        var G__22560__i = 0, G__22560__a = new Array(arguments.length - 1);
        while (G__22560__i < G__22560__a.length) {
          G__22560__a[G__22560__i] = arguments[G__22560__i + 1];
          ++G__22560__i;
        }
        opts = new cljs.core.IndexedSeq(G__22560__a, 0);
      }
      return G__22558__delegate.call(this, x, opts);
    };
    G__22558.cljs$lang$maxFixedArity = 1;
    G__22558.cljs$lang$applyTo = function(arglist__22561) {
      var x = cljs.core.first(arglist__22561);
      var opts = cljs.core.rest(arglist__22561);
      return G__22558__delegate(x, opts);
    };
    G__22558.cljs$core$IFn$_invoke$arity$variadic = G__22558__delegate;
    return G__22558;
  }();
  js__GT_clj = function(x, var_args) {
    var opts = var_args;
    switch(arguments.length) {
      case 1:
        return js__GT_clj__1.call(this, x);
      default:
        var G__22562 = null;
        if (arguments.length > 1) {
          var G__22563__i = 0, G__22563__a = new Array(arguments.length - 1);
          while (G__22563__i < G__22563__a.length) {
            G__22563__a[G__22563__i] = arguments[G__22563__i + 1];
            ++G__22563__i;
          }
          G__22562 = new cljs.core.IndexedSeq(G__22563__a, 0);
        }
        return js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic(x, G__22562);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  js__GT_clj.cljs$lang$maxFixedArity = 1;
  js__GT_clj.cljs$lang$applyTo = js__GT_clj__2.cljs$lang$applyTo;
  js__GT_clj.cljs$core$IFn$_invoke$arity$1 = js__GT_clj__1;
  js__GT_clj.cljs$core$IFn$_invoke$arity$variadic = js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic;
  return js__GT_clj;
}();
cljs.core.memoize = function memoize(f) {
  var mem = function() {
    var G__22566 = cljs.core.PersistentArrayMap.EMPTY;
    return cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__22566) : cljs.core.atom.call(null, G__22566);
  }();
  return function(mem) {
    return function() {
      var G__22568__delegate = function(args) {
        var v = cljs.core.get.cljs$core$IFn$_invoke$arity$3(function() {
          var G__22567 = mem;
          return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__22567) : cljs.core.deref.call(null, G__22567);
        }(), args, cljs.core.lookup_sentinel);
        if (v === cljs.core.lookup_sentinel) {
          var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f, args);
          cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(mem, cljs.core.assoc, args, ret);
          return ret;
        } else {
          return v;
        }
      };
      var G__22568 = function(var_args) {
        var args = null;
        if (arguments.length > 0) {
          var G__22569__i = 0, G__22569__a = new Array(arguments.length - 0);
          while (G__22569__i < G__22569__a.length) {
            G__22569__a[G__22569__i] = arguments[G__22569__i + 0];
            ++G__22569__i;
          }
          args = new cljs.core.IndexedSeq(G__22569__a, 0);
        }
        return G__22568__delegate.call(this, args);
      };
      G__22568.cljs$lang$maxFixedArity = 0;
      G__22568.cljs$lang$applyTo = function(arglist__22570) {
        var args = cljs.core.seq(arglist__22570);
        return G__22568__delegate(args);
      };
      G__22568.cljs$core$IFn$_invoke$arity$variadic = G__22568__delegate;
      return G__22568;
    }();
  }(mem);
};
cljs.core.trampoline = function() {
  var trampoline = null;
  var trampoline__1 = function(f) {
    while (true) {
      var ret = function() {
        return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
      }();
      if (cljs.core.fn_QMARK_(ret)) {
        var G__22572 = ret;
        f = G__22572;
        continue;
      } else {
        return ret;
      }
      break;
    }
  };
  var trampoline__2 = function() {
    var G__22573__delegate = function(f, args) {
      return trampoline.cljs$core$IFn$_invoke$arity$1(function() {
        return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f, args);
      });
    };
    var G__22573 = function(f, var_args) {
      var args = null;
      if (arguments.length > 1) {
        var G__22574__i = 0, G__22574__a = new Array(arguments.length - 1);
        while (G__22574__i < G__22574__a.length) {
          G__22574__a[G__22574__i] = arguments[G__22574__i + 1];
          ++G__22574__i;
        }
        args = new cljs.core.IndexedSeq(G__22574__a, 0);
      }
      return G__22573__delegate.call(this, f, args);
    };
    G__22573.cljs$lang$maxFixedArity = 1;
    G__22573.cljs$lang$applyTo = function(arglist__22575) {
      var f = cljs.core.first(arglist__22575);
      var args = cljs.core.rest(arglist__22575);
      return G__22573__delegate(f, args);
    };
    G__22573.cljs$core$IFn$_invoke$arity$variadic = G__22573__delegate;
    return G__22573;
  }();
  trampoline = function(f, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 1:
        return trampoline__1.call(this, f);
      default:
        var G__22576 = null;
        if (arguments.length > 1) {
          var G__22577__i = 0, G__22577__a = new Array(arguments.length - 1);
          while (G__22577__i < G__22577__a.length) {
            G__22577__a[G__22577__i] = arguments[G__22577__i + 1];
            ++G__22577__i;
          }
          G__22576 = new cljs.core.IndexedSeq(G__22577__a, 0);
        }
        return trampoline__2.cljs$core$IFn$_invoke$arity$variadic(f, G__22576);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  trampoline.cljs$lang$maxFixedArity = 1;
  trampoline.cljs$lang$applyTo = trampoline__2.cljs$lang$applyTo;
  trampoline.cljs$core$IFn$_invoke$arity$1 = trampoline__1;
  trampoline.cljs$core$IFn$_invoke$arity$variadic = trampoline__2.cljs$core$IFn$_invoke$arity$variadic;
  return trampoline;
}();
cljs.core.rand = function() {
  var rand = null;
  var rand__0 = function() {
    return rand.cljs$core$IFn$_invoke$arity$1(1);
  };
  var rand__1 = function(n) {
    return function() {
      return Math.random.cljs$core$IFn$_invoke$arity$0 ? Math.random.cljs$core$IFn$_invoke$arity$0() : Math.random.call(null);
    }() * n;
  };
  rand = function(n) {
    switch(arguments.length) {
      case 0:
        return rand__0.call(this);
      case 1:
        return rand__1.call(this, n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  rand.cljs$core$IFn$_invoke$arity$0 = rand__0;
  rand.cljs$core$IFn$_invoke$arity$1 = rand__1;
  return rand;
}();
cljs.core.rand_int = function rand_int(n) {
  var G__22580 = function() {
    return Math.random.cljs$core$IFn$_invoke$arity$0 ? Math.random.cljs$core$IFn$_invoke$arity$0() : Math.random.call(null);
  }() * n;
  return Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__22580) : Math.floor.call(null, G__22580);
};
cljs.core.rand_nth = function rand_nth(coll) {
  return cljs.core.nth.cljs$core$IFn$_invoke$arity$2(coll, cljs.core.rand_int(cljs.core.count(coll)));
};
cljs.core.group_by = function group_by(f, coll) {
  return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(ret, x) {
    var k = function() {
      var G__22582 = x;
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__22582) : f.call(null, G__22582);
    }();
    return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(ret, k, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(ret, k, cljs.core.PersistentVector.EMPTY), x));
  }, cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY), coll));
};
cljs.core.make_hierarchy = function make_hierarchy() {
  return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "parents", "parents", -2027538891), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "descendants", "descendants", 1824886031), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424), cljs.core.PersistentArrayMap.EMPTY], null);
};
cljs.core._global_hierarchy = null;
cljs.core.get_global_hierarchy = function get_global_hierarchy() {
  if (cljs.core._global_hierarchy == null) {
    cljs.core._global_hierarchy = function() {
      var G__22584 = cljs.core.make_hierarchy();
      return cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__22584) : cljs.core.atom.call(null, G__22584);
    }();
  } else {
  }
  return cljs.core._global_hierarchy;
};
cljs.core.swap_global_hierarchy_BANG_ = function() {
  var swap_global_hierarchy_BANG___delegate = function(f, args) {
    return cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core.swap_BANG_, cljs.core.get_global_hierarchy(), f, args);
  };
  var swap_global_hierarchy_BANG_ = function(f, var_args) {
    var args = null;
    if (arguments.length > 1) {
      var G__22585__i = 0, G__22585__a = new Array(arguments.length - 1);
      while (G__22585__i < G__22585__a.length) {
        G__22585__a[G__22585__i] = arguments[G__22585__i + 1];
        ++G__22585__i;
      }
      args = new cljs.core.IndexedSeq(G__22585__a, 0);
    }
    return swap_global_hierarchy_BANG___delegate.call(this, f, args);
  };
  swap_global_hierarchy_BANG_.cljs$lang$maxFixedArity = 1;
  swap_global_hierarchy_BANG_.cljs$lang$applyTo = function(arglist__22586) {
    var f = cljs.core.first(arglist__22586);
    var args = cljs.core.rest(arglist__22586);
    return swap_global_hierarchy_BANG___delegate(f, args);
  };
  swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_global_hierarchy_BANG___delegate;
  return swap_global_hierarchy_BANG_;
}();
cljs.core.isa_QMARK_ = function() {
  var isa_QMARK_ = null;
  var isa_QMARK___2 = function(child, parent) {
    return isa_QMARK_.cljs$core$IFn$_invoke$arity$3(function() {
      var G__22651 = cljs.core.get_global_hierarchy();
      return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__22651) : cljs.core.deref.call(null, G__22651);
    }(), child, parent);
  };
  var isa_QMARK___3 = function(h, child, parent) {
    var or__7504__auto__ = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(child, parent);
    if (or__7504__auto__) {
      return or__7504__auto__;
    } else {
      var or__7504__auto____$1 = cljs.core.contains_QMARK_((new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424)).cljs$core$IFn$_invoke$arity$1(h).call(null, child), parent);
      if (or__7504__auto____$1) {
        return or__7504__auto____$1;
      } else {
        var and__7492__auto__ = cljs.core.vector_QMARK_(parent);
        if (and__7492__auto__) {
          var and__7492__auto____$1 = cljs.core.vector_QMARK_(child);
          if (and__7492__auto____$1) {
            var and__7492__auto____$2 = cljs.core.count(parent) === cljs.core.count(child);
            if (and__7492__auto____$2) {
              var ret = true;
              var i = 0;
              while (true) {
                if (!ret || i === cljs.core.count(parent)) {
                  return ret;
                } else {
                  var G__22676 = isa_QMARK_.cljs$core$IFn$_invoke$arity$3(h, function() {
                    var G__22674 = i;
                    return child.cljs$core$IFn$_invoke$arity$1 ? child.cljs$core$IFn$_invoke$arity$1(G__22674) : child.call(null, G__22674);
                  }(), function() {
                    var G__22675 = i;
                    return parent.cljs$core$IFn$_invoke$arity$1 ? parent.cljs$core$IFn$_invoke$arity$1(G__22675) : parent.call(null, G__22675);
                  }());
                  var G__22677 = i + 1;
                  ret = G__22676;
                  i = G__22677;
                  continue;
                }
                break;
              }
            } else {
              return and__7492__auto____$2;
            }
          } else {
            return and__7492__auto____$1;
          }
        } else {
          return and__7492__auto__;
        }
      }
    }
  };
  isa_QMARK_ = function(h, child, parent) {
    switch(arguments.length) {
      case 2:
        return isa_QMARK___2.call(this, h, child);
      case 3:
        return isa_QMARK___3.call(this, h, child, parent);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  isa_QMARK_.cljs$core$IFn$_invoke$arity$2 = isa_QMARK___2;
  isa_QMARK_.cljs$core$IFn$_invoke$arity$3 = isa_QMARK___3;
  return isa_QMARK_;
}();
cljs.core.parents = function() {
  var parents = null;
  var parents__1 = function(tag) {
    return parents.cljs$core$IFn$_invoke$arity$2(function() {
      var G__22681 = cljs.core.get_global_hierarchy();
      return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__22681) : cljs.core.deref.call(null, G__22681);
    }(), tag);
  };
  var parents__2 = function(h, tag) {
    return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2((new cljs.core.Keyword(null, "parents", "parents", -2027538891)).cljs$core$IFn$_invoke$arity$1(h), tag));
  };
  parents = function(h, tag) {
    switch(arguments.length) {
      case 1:
        return parents__1.call(this, h);
      case 2:
        return parents__2.call(this, h, tag);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  parents.cljs$core$IFn$_invoke$arity$1 = parents__1;
  parents.cljs$core$IFn$_invoke$arity$2 = parents__2;
  return parents;
}();
cljs.core.ancestors = function() {
  var ancestors = null;
  var ancestors__1 = function(tag) {
    return ancestors.cljs$core$IFn$_invoke$arity$2(function() {
      var G__22685 = cljs.core.get_global_hierarchy();
      return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__22685) : cljs.core.deref.call(null, G__22685);
    }(), tag);
  };
  var ancestors__2 = function(h, tag) {
    return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2((new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424)).cljs$core$IFn$_invoke$arity$1(h), tag));
  };
  ancestors = function(h, tag) {
    switch(arguments.length) {
      case 1:
        return ancestors__1.call(this, h);
      case 2:
        return ancestors__2.call(this, h, tag);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  ancestors.cljs$core$IFn$_invoke$arity$1 = ancestors__1;
  ancestors.cljs$core$IFn$_invoke$arity$2 = ancestors__2;
  return ancestors;
}();
cljs.core.descendants = function() {
  var descendants = null;
  var descendants__1 = function(tag) {
    return descendants.cljs$core$IFn$_invoke$arity$2(function() {
      var G__22689 = cljs.core.get_global_hierarchy();
      return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__22689) : cljs.core.deref.call(null, G__22689);
    }(), tag);
  };
  var descendants__2 = function(h, tag) {
    return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2((new cljs.core.Keyword(null, "descendants", "descendants", 1824886031)).cljs$core$IFn$_invoke$arity$1(h), tag));
  };
  descendants = function(h, tag) {
    switch(arguments.length) {
      case 1:
        return descendants__1.call(this, h);
      case 2:
        return descendants__2.call(this, h, tag);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  descendants.cljs$core$IFn$_invoke$arity$1 = descendants__1;
  descendants.cljs$core$IFn$_invoke$arity$2 = descendants__2;
  return descendants;
}();
cljs.core.derive = function() {
  var derive = null;
  var derive__2 = function(tag, parent) {
    if (cljs.core.truth_(cljs.core.namespace(parent))) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(new cljs.core.Symbol(null, "namespace", "namespace", 1263021155, null), new cljs.core.Symbol(null, "parent", "parent", 761652748, null))], 0)))].join(""));
    }
    cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(derive, cljs.core.array_seq([tag, parent], 0));
    return null;
  };
  var derive__3 = function(h, tag, parent) {
    if (cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(tag, parent)) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(new cljs.core.Symbol(null, "not\x3d", "not\x3d", 1466536204, null), new cljs.core.Symbol(null, "tag", "tag", 350170304, null), new cljs.core.Symbol(null, "parent", "parent", 761652748, null))], 0)))].join(""));
    }
    var tp = (new cljs.core.Keyword(null, "parents", "parents", -2027538891)).cljs$core$IFn$_invoke$arity$1(h);
    var td = (new cljs.core.Keyword(null, "descendants", "descendants", 1824886031)).cljs$core$IFn$_invoke$arity$1(h);
    var ta = (new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424)).cljs$core$IFn$_invoke$arity$1(h);
    var tf = function(tp, td, ta) {
      return function(m, source, sources, target, targets) {
        return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(tp, td, ta) {
          return function(ret, k) {
            return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret, k, cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj, cljs.core.get.cljs$core$IFn$_invoke$arity$3(targets, k, cljs.core.PersistentHashSet.EMPTY), cljs.core.cons(target, function() {
              var G__22698 = target;
              return targets.cljs$core$IFn$_invoke$arity$1 ? targets.cljs$core$IFn$_invoke$arity$1(G__22698) : targets.call(null, G__22698);
            }())));
          };
        }(tp, td, ta), m, cljs.core.cons(source, function() {
          var G__22699 = source;
          return sources.cljs$core$IFn$_invoke$arity$1 ? sources.cljs$core$IFn$_invoke$arity$1(G__22699) : sources.call(null, G__22699);
        }()));
      };
    }(tp, td, ta);
    var or__7504__auto__ = cljs.core.contains_QMARK_(function() {
      var G__22703 = tag;
      return tp.cljs$core$IFn$_invoke$arity$1 ? tp.cljs$core$IFn$_invoke$arity$1(G__22703) : tp.call(null, G__22703);
    }(), parent) ? null : function() {
      if (cljs.core.contains_QMARK_(function() {
        var G__22704 = tag;
        return ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(G__22704) : ta.call(null, G__22704);
      }(), parent)) {
        throw new Error([cljs.core.str(tag), cljs.core.str("already has"), cljs.core.str(parent), cljs.core.str("as ancestor")].join(""));
      } else {
      }
      if (cljs.core.contains_QMARK_(function() {
        var G__22705 = parent;
        return ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(G__22705) : ta.call(null, G__22705);
      }(), tag)) {
        throw new Error([cljs.core.str("Cyclic derivation:"), cljs.core.str(parent), cljs.core.str("has"), cljs.core.str(tag), cljs.core.str("as ancestor")].join(""));
      } else {
      }
      return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "parents", "parents", -2027538891), cljs.core.assoc.cljs$core$IFn$_invoke$arity$3((new cljs.core.Keyword(null, "parents", "parents", -2027538891)).cljs$core$IFn$_invoke$arity$1(h), tag, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(tp, tag, cljs.core.PersistentHashSet.EMPTY), parent)), new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424), tf((new cljs.core.Keyword(null, 
      "ancestors", "ancestors", -776045424)).cljs$core$IFn$_invoke$arity$1(h), tag, td, parent, ta), new cljs.core.Keyword(null, "descendants", "descendants", 1824886031), tf((new cljs.core.Keyword(null, "descendants", "descendants", 1824886031)).cljs$core$IFn$_invoke$arity$1(h), parent, ta, tag, td)], null);
    }();
    if (cljs.core.truth_(or__7504__auto__)) {
      return or__7504__auto__;
    } else {
      return h;
    }
  };
  derive = function(h, tag, parent) {
    switch(arguments.length) {
      case 2:
        return derive__2.call(this, h, tag);
      case 3:
        return derive__3.call(this, h, tag, parent);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  derive.cljs$core$IFn$_invoke$arity$2 = derive__2;
  derive.cljs$core$IFn$_invoke$arity$3 = derive__3;
  return derive;
}();
cljs.core.underive = function() {
  var underive = null;
  var underive__2 = function(tag, parent) {
    cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(underive, cljs.core.array_seq([tag, parent], 0));
    return null;
  };
  var underive__3 = function(h, tag, parent) {
    var parentMap = (new cljs.core.Keyword(null, "parents", "parents", -2027538891)).cljs$core$IFn$_invoke$arity$1(h);
    var childsParents = cljs.core.truth_(function() {
      var G__22712 = tag;
      return parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__22712) : parentMap.call(null, G__22712);
    }()) ? cljs.core.disj.cljs$core$IFn$_invoke$arity$2(function() {
      var G__22713 = tag;
      return parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__22713) : parentMap.call(null, G__22713);
    }(), parent) : cljs.core.PersistentHashSet.EMPTY;
    var newParents = cljs.core.truth_(cljs.core.not_empty(childsParents)) ? cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(parentMap, tag, childsParents) : cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(parentMap, tag);
    var deriv_seq = cljs.core.flatten(cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(parentMap, childsParents, newParents) {
      return function(p1__22706_SHARP_) {
        return cljs.core.cons(cljs.core.first(p1__22706_SHARP_), cljs.core.interpose.cljs$core$IFn$_invoke$arity$2(cljs.core.first(p1__22706_SHARP_), cljs.core.second(p1__22706_SHARP_)));
      };
    }(parentMap, childsParents, newParents), cljs.core.seq(newParents)));
    if (cljs.core.contains_QMARK_(function() {
      var G__22714 = tag;
      return parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__22714) : parentMap.call(null, G__22714);
    }(), parent)) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(parentMap, childsParents, newParents, deriv_seq) {
        return function(p1__22707_SHARP_, p2__22708_SHARP_) {
          return cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.derive, p1__22707_SHARP_, p2__22708_SHARP_);
        };
      }(parentMap, childsParents, newParents, deriv_seq), cljs.core.make_hierarchy(), cljs.core.partition.cljs$core$IFn$_invoke$arity$2(2, deriv_seq));
    } else {
      return h;
    }
  };
  underive = function(h, tag, parent) {
    switch(arguments.length) {
      case 2:
        return underive__2.call(this, h, tag);
      case 3:
        return underive__3.call(this, h, tag, parent);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  underive.cljs$core$IFn$_invoke$arity$2 = underive__2;
  underive.cljs$core$IFn$_invoke$arity$3 = underive__3;
  return underive;
}();
cljs.core.reset_cache = function reset_cache(method_cache, method_table, cached_hierarchy, hierarchy) {
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(method_cache, function(_) {
    var G__22717 = method_table;
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__22717) : cljs.core.deref.call(null, G__22717);
  });
  return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cached_hierarchy, function(_) {
    var G__22718 = hierarchy;
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__22718) : cljs.core.deref.call(null, G__22718);
  });
};
cljs.core.prefers_STAR_ = function prefers_STAR_(x, y, prefer_table) {
  var xprefs = function() {
    var G__22734 = prefer_table;
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__22734) : cljs.core.deref.call(null, G__22734);
  }().call(null, x);
  var or__7504__auto__ = cljs.core.truth_(function() {
    var and__7492__auto__ = xprefs;
    if (cljs.core.truth_(and__7492__auto__)) {
      var G__22736 = y;
      return xprefs.cljs$core$IFn$_invoke$arity$1 ? xprefs.cljs$core$IFn$_invoke$arity$1(G__22736) : xprefs.call(null, G__22736);
    } else {
      return and__7492__auto__;
    }
  }()) ? true : null;
  if (cljs.core.truth_(or__7504__auto__)) {
    return or__7504__auto__;
  } else {
    var or__7504__auto____$1 = function() {
      var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(y);
      while (true) {
        if (cljs.core.count(ps) > 0) {
          if (cljs.core.truth_(prefers_STAR_(x, cljs.core.first(ps), prefer_table))) {
          } else {
          }
          var G__22737 = cljs.core.rest(ps);
          ps = G__22737;
          continue;
        } else {
          return null;
        }
        break;
      }
    }();
    if (cljs.core.truth_(or__7504__auto____$1)) {
      return or__7504__auto____$1;
    } else {
      var or__7504__auto____$2 = function() {
        var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(x);
        while (true) {
          if (cljs.core.count(ps) > 0) {
            if (cljs.core.truth_(prefers_STAR_(cljs.core.first(ps), y, prefer_table))) {
            } else {
            }
            var G__22738 = cljs.core.rest(ps);
            ps = G__22738;
            continue;
          } else {
            return null;
          }
          break;
        }
      }();
      if (cljs.core.truth_(or__7504__auto____$2)) {
        return or__7504__auto____$2;
      } else {
        return false;
      }
    }
  }
};
cljs.core.dominates = function dominates(x, y, prefer_table) {
  var or__7504__auto__ = cljs.core.prefers_STAR_(x, y, prefer_table);
  if (cljs.core.truth_(or__7504__auto__)) {
    return or__7504__auto__;
  } else {
    return cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$2(x, y);
  }
};
cljs.core.find_and_cache_best_method = function find_and_cache_best_method(name, dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  var best_entry = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(be, p__22752) {
    var vec__22753 = p__22752;
    var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22753, 0, null);
    var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22753, 1, null);
    var e = vec__22753;
    if (cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3(function() {
      var G__22754 = hierarchy;
      return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__22754) : cljs.core.deref.call(null, G__22754);
    }(), dispatch_val, k)) {
      var be2 = cljs.core.truth_(function() {
        var or__7504__auto__ = be == null;
        if (or__7504__auto__) {
          return or__7504__auto__;
        } else {
          return cljs.core.dominates(k, cljs.core.first(be), prefer_table);
        }
      }()) ? e : be;
      if (cljs.core.truth_(cljs.core.dominates(cljs.core.first(be2), k, prefer_table))) {
      } else {
        throw new Error([cljs.core.str("Multiple methods in multimethod '"), cljs.core.str(name), cljs.core.str("' match dispatch value: "), cljs.core.str(dispatch_val), cljs.core.str(" -\x3e "), cljs.core.str(k), cljs.core.str(" and "), cljs.core.str(cljs.core.first(be2)), cljs.core.str(", and neither is preferred")].join(""));
      }
      return be2;
    } else {
      return be;
    }
  }, null, function() {
    var G__22755 = method_table;
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__22755) : cljs.core.deref.call(null, G__22755);
  }());
  if (cljs.core.truth_(best_entry)) {
    if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(function() {
      var G__22756 = cached_hierarchy;
      return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__22756) : cljs.core.deref.call(null, G__22756);
    }(), function() {
      var G__22757 = hierarchy;
      return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__22757) : cljs.core.deref.call(null, G__22757);
    }())) {
      cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(method_cache, cljs.core.assoc, dispatch_val, cljs.core.second(best_entry));
      return cljs.core.second(best_entry);
    } else {
      cljs.core.reset_cache(method_cache, method_table, cached_hierarchy, hierarchy);
      return find_and_cache_best_method(name, dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy);
    }
  } else {
    return null;
  }
};
cljs.core.IMultiFn = function() {
  var obj22759 = {};
  return obj22759;
}();
cljs.core._reset = function _reset(mf) {
  if (function() {
    var and__7492__auto__ = mf;
    if (and__7492__auto__) {
      return mf.cljs$core$IMultiFn$_reset$arity$1;
    } else {
      return and__7492__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_reset$arity$1(mf);
  } else {
    var x__8148__auto__ = mf == null ? null : mf;
    return function() {
      var or__7504__auto__ = cljs.core._reset[function() {
        var G__22763 = x__8148__auto__;
        return goog.typeOf(G__22763);
      }()];
      if (or__7504__auto__) {
        return or__7504__auto__;
      } else {
        var or__7504__auto____$1 = cljs.core._reset["_"];
        if (or__7504__auto____$1) {
          return or__7504__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IMultiFn.-reset", mf);
        }
      }
    }().call(null, mf);
  }
};
cljs.core._add_method = function _add_method(mf, dispatch_val, method) {
  if (function() {
    var and__7492__auto__ = mf;
    if (and__7492__auto__) {
      return mf.cljs$core$IMultiFn$_add_method$arity$3;
    } else {
      return and__7492__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_add_method$arity$3(mf, dispatch_val, method);
  } else {
    var x__8148__auto__ = mf == null ? null : mf;
    return function() {
      var or__7504__auto__ = cljs.core._add_method[function() {
        var G__22767 = x__8148__auto__;
        return goog.typeOf(G__22767);
      }()];
      if (or__7504__auto__) {
        return or__7504__auto__;
      } else {
        var or__7504__auto____$1 = cljs.core._add_method["_"];
        if (or__7504__auto____$1) {
          return or__7504__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IMultiFn.-add-method", mf);
        }
      }
    }().call(null, mf, dispatch_val, method);
  }
};
cljs.core._remove_method = function _remove_method(mf, dispatch_val) {
  if (function() {
    var and__7492__auto__ = mf;
    if (and__7492__auto__) {
      return mf.cljs$core$IMultiFn$_remove_method$arity$2;
    } else {
      return and__7492__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_remove_method$arity$2(mf, dispatch_val);
  } else {
    var x__8148__auto__ = mf == null ? null : mf;
    return function() {
      var or__7504__auto__ = cljs.core._remove_method[function() {
        var G__22771 = x__8148__auto__;
        return goog.typeOf(G__22771);
      }()];
      if (or__7504__auto__) {
        return or__7504__auto__;
      } else {
        var or__7504__auto____$1 = cljs.core._remove_method["_"];
        if (or__7504__auto____$1) {
          return or__7504__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IMultiFn.-remove-method", mf);
        }
      }
    }().call(null, mf, dispatch_val);
  }
};
cljs.core._prefer_method = function _prefer_method(mf, dispatch_val, dispatch_val_y) {
  if (function() {
    var and__7492__auto__ = mf;
    if (and__7492__auto__) {
      return mf.cljs$core$IMultiFn$_prefer_method$arity$3;
    } else {
      return and__7492__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_prefer_method$arity$3(mf, dispatch_val, dispatch_val_y);
  } else {
    var x__8148__auto__ = mf == null ? null : mf;
    return function() {
      var or__7504__auto__ = cljs.core._prefer_method[function() {
        var G__22775 = x__8148__auto__;
        return goog.typeOf(G__22775);
      }()];
      if (or__7504__auto__) {
        return or__7504__auto__;
      } else {
        var or__7504__auto____$1 = cljs.core._prefer_method["_"];
        if (or__7504__auto____$1) {
          return or__7504__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IMultiFn.-prefer-method", mf);
        }
      }
    }().call(null, mf, dispatch_val, dispatch_val_y);
  }
};
cljs.core._get_method = function _get_method(mf, dispatch_val) {
  if (function() {
    var and__7492__auto__ = mf;
    if (and__7492__auto__) {
      return mf.cljs$core$IMultiFn$_get_method$arity$2;
    } else {
      return and__7492__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_get_method$arity$2(mf, dispatch_val);
  } else {
    var x__8148__auto__ = mf == null ? null : mf;
    return function() {
      var or__7504__auto__ = cljs.core._get_method[function() {
        var G__22779 = x__8148__auto__;
        return goog.typeOf(G__22779);
      }()];
      if (or__7504__auto__) {
        return or__7504__auto__;
      } else {
        var or__7504__auto____$1 = cljs.core._get_method["_"];
        if (or__7504__auto____$1) {
          return or__7504__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IMultiFn.-get-method", mf);
        }
      }
    }().call(null, mf, dispatch_val);
  }
};
cljs.core._methods = function _methods(mf) {
  if (function() {
    var and__7492__auto__ = mf;
    if (and__7492__auto__) {
      return mf.cljs$core$IMultiFn$_methods$arity$1;
    } else {
      return and__7492__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_methods$arity$1(mf);
  } else {
    var x__8148__auto__ = mf == null ? null : mf;
    return function() {
      var or__7504__auto__ = cljs.core._methods[function() {
        var G__22783 = x__8148__auto__;
        return goog.typeOf(G__22783);
      }()];
      if (or__7504__auto__) {
        return or__7504__auto__;
      } else {
        var or__7504__auto____$1 = cljs.core._methods["_"];
        if (or__7504__auto____$1) {
          return or__7504__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IMultiFn.-methods", mf);
        }
      }
    }().call(null, mf);
  }
};
cljs.core._prefers = function _prefers(mf) {
  if (function() {
    var and__7492__auto__ = mf;
    if (and__7492__auto__) {
      return mf.cljs$core$IMultiFn$_prefers$arity$1;
    } else {
      return and__7492__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_prefers$arity$1(mf);
  } else {
    var x__8148__auto__ = mf == null ? null : mf;
    return function() {
      var or__7504__auto__ = cljs.core._prefers[function() {
        var G__22787 = x__8148__auto__;
        return goog.typeOf(G__22787);
      }()];
      if (or__7504__auto__) {
        return or__7504__auto__;
      } else {
        var or__7504__auto____$1 = cljs.core._prefers["_"];
        if (or__7504__auto____$1) {
          return or__7504__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IMultiFn.-prefers", mf);
        }
      }
    }().call(null, mf);
  }
};
cljs.core.throw_no_method_error = function throw_no_method_error(name, dispatch_val) {
  throw new Error([cljs.core.str("No method in multimethod '"), cljs.core.str(name), cljs.core.str("' for dispatch value: "), cljs.core.str(dispatch_val)].join(""));
};
cljs.core.MultiFn = function(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  this.name = name;
  this.dispatch_fn = dispatch_fn;
  this.default_dispatch_val = default_dispatch_val;
  this.hierarchy = hierarchy;
  this.method_table = method_table;
  this.prefer_table = prefer_table;
  this.method_cache = method_cache;
  this.cached_hierarchy = cached_hierarchy;
  this.cljs$lang$protocol_mask$partition0$ = 4194305;
  this.cljs$lang$protocol_mask$partition1$ = 4352;
};
cljs.core.MultiFn.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  var G__22789 = this$__$1;
  return goog.getUid(G__22789);
};
cljs.core.MultiFn.prototype.cljs$core$INamed$_name$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core._name(self__.name);
};
cljs.core.MultiFn.prototype.cljs$core$INamed$_namespace$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core._namespace(self__.name);
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_reset$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_table, function(mf__$1) {
    return function(mf__$2) {
      return cljs.core.PersistentArrayMap.EMPTY;
    };
  }(mf__$1));
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_cache, function(mf__$1) {
    return function(mf__$2) {
      return cljs.core.PersistentArrayMap.EMPTY;
    };
  }(mf__$1));
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table, function(mf__$1) {
    return function(mf__$2) {
      return cljs.core.PersistentArrayMap.EMPTY;
    };
  }(mf__$1));
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.cached_hierarchy, function(mf__$1) {
    return function(mf__$2) {
      return null;
    };
  }(mf__$1));
  return mf__$1;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_add_method$arity$3 = function(mf, dispatch_val, method) {
  var self__ = this;
  var mf__$1 = this;
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(self__.method_table, cljs.core.assoc, dispatch_val, method);
  cljs.core.reset_cache(self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
  return mf__$1;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_remove_method$arity$2 = function(mf, dispatch_val) {
  var self__ = this;
  var mf__$1 = this;
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(self__.method_table, cljs.core.dissoc, dispatch_val);
  cljs.core.reset_cache(self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
  return mf__$1;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_get_method$arity$2 = function(mf, dispatch_val) {
  var self__ = this;
  var mf__$1 = this;
  if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(function() {
    var G__22790 = self__.cached_hierarchy;
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__22790) : cljs.core.deref.call(null, G__22790);
  }(), function() {
    var G__22791 = self__.hierarchy;
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__22791) : cljs.core.deref.call(null, G__22791);
  }())) {
  } else {
    cljs.core.reset_cache(self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
  }
  var temp__4124__auto__ = function() {
    var G__22792 = self__.method_cache;
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__22792) : cljs.core.deref.call(null, G__22792);
  }().call(null, dispatch_val);
  if (cljs.core.truth_(temp__4124__auto__)) {
    var target_fn = temp__4124__auto__;
    return target_fn;
  } else {
    var temp__4124__auto____$1 = cljs.core.find_and_cache_best_method(self__.name, dispatch_val, self__.hierarchy, self__.method_table, self__.prefer_table, self__.method_cache, self__.cached_hierarchy);
    if (cljs.core.truth_(temp__4124__auto____$1)) {
      var target_fn = temp__4124__auto____$1;
      return target_fn;
    } else {
      return function() {
        var G__22793 = self__.method_table;
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__22793) : cljs.core.deref.call(null, G__22793);
      }().call(null, self__.default_dispatch_val);
    }
  }
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefer_method$arity$3 = function(mf, dispatch_val_x, dispatch_val_y) {
  var self__ = this;
  var mf__$1 = this;
  if (cljs.core.truth_(cljs.core.prefers_STAR_(dispatch_val_x, dispatch_val_y, self__.prefer_table))) {
    throw new Error([cljs.core.str("Preference conflict in multimethod '"), cljs.core.str(self__.name), cljs.core.str("': "), cljs.core.str(dispatch_val_y), cljs.core.str(" is already preferred to "), cljs.core.str(dispatch_val_x)].join(""));
  } else {
  }
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table, function(mf__$1) {
    return function(old) {
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(old, dispatch_val_x, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(old, dispatch_val_x, cljs.core.PersistentHashSet.EMPTY), dispatch_val_y));
    };
  }(mf__$1));
  return cljs.core.reset_cache(self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_methods$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  var G__22794 = self__.method_table;
  return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__22794) : cljs.core.deref.call(null, G__22794);
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefers$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  var G__22795 = self__.prefer_table;
  return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__22795) : cljs.core.deref.call(null, G__22795);
};
cljs.core.MultiFn.prototype.call = function() {
  var G__23636 = null;
  var G__23636__1 = function(self__) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null);
  };
  var G__23636__2 = function(self__, a) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__22796 = a;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(G__22796) : self__.dispatch_fn.call(null, G__22796);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__22797 = a;
    return target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(G__22797) : target_fn.call(null, G__22797);
  };
  var G__23636__3 = function(self__, a, b) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__22798 = a;
      var G__22799 = b;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(G__22798, G__22799) : self__.dispatch_fn.call(null, G__22798, G__22799);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__22800 = a;
    var G__22801 = b;
    return target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(G__22800, G__22801) : target_fn.call(null, G__22800, G__22801);
  };
  var G__23636__4 = function(self__, a, b, c) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__22802 = a;
      var G__22803 = b;
      var G__22804 = c;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(G__22802, G__22803, G__22804) : self__.dispatch_fn.call(null, G__22802, G__22803, G__22804);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__22805 = a;
    var G__22806 = b;
    var G__22807 = c;
    return target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(G__22805, G__22806, G__22807) : target_fn.call(null, G__22805, G__22806, G__22807);
  };
  var G__23636__5 = function(self__, a, b, c, d) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__22808 = a;
      var G__22809 = b;
      var G__22810 = c;
      var G__22811 = d;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(G__22808, G__22809, G__22810, G__22811) : self__.dispatch_fn.call(null, G__22808, G__22809, G__22810, G__22811);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__22812 = a;
    var G__22813 = b;
    var G__22814 = c;
    var G__22815 = d;
    return target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(G__22812, G__22813, G__22814, G__22815) : target_fn.call(null, G__22812, G__22813, G__22814, G__22815);
  };
  var G__23636__6 = function(self__, a, b, c, d, e) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__22816 = a;
      var G__22817 = b;
      var G__22818 = c;
      var G__22819 = d;
      var G__22820 = e;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(G__22816, G__22817, G__22818, G__22819, G__22820) : self__.dispatch_fn.call(null, G__22816, G__22817, G__22818, G__22819, G__22820);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__22821 = a;
    var G__22822 = b;
    var G__22823 = c;
    var G__22824 = d;
    var G__22825 = e;
    return target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(G__22821, G__22822, G__22823, G__22824, G__22825) : target_fn.call(null, G__22821, G__22822, G__22823, G__22824, G__22825);
  };
  var G__23636__7 = function(self__, a, b, c, d, e, f) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__22826 = a;
      var G__22827 = b;
      var G__22828 = c;
      var G__22829 = d;
      var G__22830 = e;
      var G__22831 = f;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(G__22826, G__22827, G__22828, G__22829, G__22830, G__22831) : self__.dispatch_fn.call(null, G__22826, G__22827, G__22828, G__22829, G__22830, G__22831);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__22832 = a;
    var G__22833 = b;
    var G__22834 = c;
    var G__22835 = d;
    var G__22836 = e;
    var G__22837 = f;
    return target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(G__22832, G__22833, G__22834, G__22835, G__22836, G__22837) : target_fn.call(null, G__22832, G__22833, G__22834, G__22835, G__22836, G__22837);
  };
  var G__23636__8 = function(self__, a, b, c, d, e, f, g) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__22838 = a;
      var G__22839 = b;
      var G__22840 = c;
      var G__22841 = d;
      var G__22842 = e;
      var G__22843 = f;
      var G__22844 = g;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(G__22838, G__22839, G__22840, G__22841, G__22842, G__22843, G__22844) : self__.dispatch_fn.call(null, G__22838, G__22839, G__22840, G__22841, G__22842, G__22843, G__22844);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__22845 = a;
    var G__22846 = b;
    var G__22847 = c;
    var G__22848 = d;
    var G__22849 = e;
    var G__22850 = f;
    var G__22851 = g;
    return target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(G__22845, G__22846, G__22847, G__22848, G__22849, G__22850, G__22851) : target_fn.call(null, G__22845, G__22846, G__22847, G__22848, G__22849, G__22850, G__22851);
  };
  var G__23636__9 = function(self__, a, b, c, d, e, f, g, h) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__22852 = a;
      var G__22853 = b;
      var G__22854 = c;
      var G__22855 = d;
      var G__22856 = e;
      var G__22857 = f;
      var G__22858 = g;
      var G__22859 = h;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(G__22852, G__22853, G__22854, G__22855, G__22856, G__22857, G__22858, G__22859) : self__.dispatch_fn.call(null, G__22852, G__22853, G__22854, G__22855, G__22856, G__22857, G__22858, G__22859);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__22860 = a;
    var G__22861 = b;
    var G__22862 = c;
    var G__22863 = d;
    var G__22864 = e;
    var G__22865 = f;
    var G__22866 = g;
    var G__22867 = h;
    return target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(G__22860, G__22861, G__22862, G__22863, G__22864, G__22865, G__22866, G__22867) : target_fn.call(null, G__22860, G__22861, G__22862, G__22863, G__22864, G__22865, G__22866, G__22867);
  };
  var G__23636__10 = function(self__, a, b, c, d, e, f, g, h, i) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__22868 = a;
      var G__22869 = b;
      var G__22870 = c;
      var G__22871 = d;
      var G__22872 = e;
      var G__22873 = f;
      var G__22874 = g;
      var G__22875 = h;
      var G__22876 = i;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(G__22868, G__22869, G__22870, G__22871, G__22872, G__22873, G__22874, G__22875, G__22876) : self__.dispatch_fn.call(null, G__22868, G__22869, G__22870, G__22871, G__22872, G__22873, G__22874, G__22875, G__22876);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__22877 = a;
    var G__22878 = b;
    var G__22879 = c;
    var G__22880 = d;
    var G__22881 = e;
    var G__22882 = f;
    var G__22883 = g;
    var G__22884 = h;
    var G__22885 = i;
    return target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(G__22877, G__22878, G__22879, G__22880, G__22881, G__22882, G__22883, G__22884, G__22885) : target_fn.call(null, G__22877, G__22878, G__22879, G__22880, G__22881, G__22882, G__22883, G__22884, G__22885);
  };
  var G__23636__11 = function(self__, a, b, c, d, e, f, g, h, i, j) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__22886 = a;
      var G__22887 = b;
      var G__22888 = c;
      var G__22889 = d;
      var G__22890 = e;
      var G__22891 = f;
      var G__22892 = g;
      var G__22893 = h;
      var G__22894 = i;
      var G__22895 = j;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(G__22886, G__22887, G__22888, G__22889, G__22890, G__22891, G__22892, G__22893, G__22894, G__22895) : self__.dispatch_fn.call(null, G__22886, G__22887, G__22888, G__22889, G__22890, G__22891, G__22892, G__22893, G__22894, G__22895);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__22896 = a;
    var G__22897 = b;
    var G__22898 = c;
    var G__22899 = d;
    var G__22900 = e;
    var G__22901 = f;
    var G__22902 = g;
    var G__22903 = h;
    var G__22904 = i;
    var G__22905 = j;
    return target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(G__22896, G__22897, G__22898, G__22899, G__22900, G__22901, G__22902, G__22903, G__22904, G__22905) : target_fn.call(null, G__22896, G__22897, G__22898, G__22899, G__22900, G__22901, G__22902, G__22903, G__22904, G__22905);
  };
  var G__23636__12 = function(self__, a, b, c, d, e, f, g, h, i, j, k) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__22906 = a;
      var G__22907 = b;
      var G__22908 = c;
      var G__22909 = d;
      var G__22910 = e;
      var G__22911 = f;
      var G__22912 = g;
      var G__22913 = h;
      var G__22914 = i;
      var G__22915 = j;
      var G__22916 = k;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(G__22906, G__22907, G__22908, G__22909, G__22910, G__22911, G__22912, G__22913, G__22914, G__22915, G__22916) : self__.dispatch_fn.call(null, G__22906, G__22907, G__22908, G__22909, G__22910, G__22911, G__22912, G__22913, G__22914, G__22915, G__22916);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__22917 = a;
    var G__22918 = b;
    var G__22919 = c;
    var G__22920 = d;
    var G__22921 = e;
    var G__22922 = f;
    var G__22923 = g;
    var G__22924 = h;
    var G__22925 = i;
    var G__22926 = j;
    var G__22927 = k;
    return target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(G__22917, G__22918, G__22919, G__22920, G__22921, G__22922, G__22923, G__22924, G__22925, G__22926, G__22927) : target_fn.call(null, G__22917, G__22918, G__22919, G__22920, G__22921, G__22922, G__22923, G__22924, G__22925, G__22926, G__22927);
  };
  var G__23636__13 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__22928 = a;
      var G__22929 = b;
      var G__22930 = c;
      var G__22931 = d;
      var G__22932 = e;
      var G__22933 = f;
      var G__22934 = g;
      var G__22935 = h;
      var G__22936 = i;
      var G__22937 = j;
      var G__22938 = k;
      var G__22939 = l;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(G__22928, G__22929, G__22930, G__22931, G__22932, G__22933, G__22934, G__22935, G__22936, G__22937, G__22938, G__22939) : self__.dispatch_fn.call(null, G__22928, G__22929, G__22930, G__22931, G__22932, G__22933, G__22934, G__22935, G__22936, G__22937, G__22938, G__22939);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__22940 = a;
    var G__22941 = b;
    var G__22942 = c;
    var G__22943 = d;
    var G__22944 = e;
    var G__22945 = f;
    var G__22946 = g;
    var G__22947 = h;
    var G__22948 = i;
    var G__22949 = j;
    var G__22950 = k;
    var G__22951 = l;
    return target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(G__22940, G__22941, G__22942, G__22943, G__22944, G__22945, G__22946, G__22947, G__22948, G__22949, G__22950, G__22951) : target_fn.call(null, G__22940, G__22941, G__22942, G__22943, G__22944, G__22945, G__22946, G__22947, G__22948, G__22949, G__22950, G__22951);
  };
  var G__23636__14 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__22952 = a;
      var G__22953 = b;
      var G__22954 = c;
      var G__22955 = d;
      var G__22956 = e;
      var G__22957 = f;
      var G__22958 = g;
      var G__22959 = h;
      var G__22960 = i;
      var G__22961 = j;
      var G__22962 = k;
      var G__22963 = l;
      var G__22964 = m;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(G__22952, G__22953, G__22954, G__22955, G__22956, G__22957, G__22958, G__22959, G__22960, G__22961, G__22962, G__22963, G__22964) : self__.dispatch_fn.call(null, G__22952, G__22953, G__22954, G__22955, G__22956, G__22957, G__22958, G__22959, G__22960, G__22961, G__22962, G__22963, G__22964);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__22965 = a;
    var G__22966 = b;
    var G__22967 = c;
    var G__22968 = d;
    var G__22969 = e;
    var G__22970 = f;
    var G__22971 = g;
    var G__22972 = h;
    var G__22973 = i;
    var G__22974 = j;
    var G__22975 = k;
    var G__22976 = l;
    var G__22977 = m;
    return target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(G__22965, G__22966, G__22967, G__22968, G__22969, G__22970, G__22971, G__22972, G__22973, G__22974, G__22975, G__22976, G__22977) : target_fn.call(null, G__22965, G__22966, G__22967, G__22968, G__22969, G__22970, G__22971, G__22972, G__22973, G__22974, G__22975, G__22976, G__22977);
  };
  var G__23636__15 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__22978 = a;
      var G__22979 = b;
      var G__22980 = c;
      var G__22981 = d;
      var G__22982 = e;
      var G__22983 = f;
      var G__22984 = g;
      var G__22985 = h;
      var G__22986 = i;
      var G__22987 = j;
      var G__22988 = k;
      var G__22989 = l;
      var G__22990 = m;
      var G__22991 = n;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(G__22978, G__22979, G__22980, G__22981, G__22982, G__22983, G__22984, G__22985, G__22986, G__22987, G__22988, G__22989, G__22990, G__22991) : self__.dispatch_fn.call(null, G__22978, G__22979, G__22980, G__22981, G__22982, G__22983, G__22984, G__22985, G__22986, G__22987, G__22988, G__22989, G__22990, G__22991);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__22992 = a;
    var G__22993 = b;
    var G__22994 = c;
    var G__22995 = d;
    var G__22996 = e;
    var G__22997 = f;
    var G__22998 = g;
    var G__22999 = h;
    var G__23000 = i;
    var G__23001 = j;
    var G__23002 = k;
    var G__23003 = l;
    var G__23004 = m;
    var G__23005 = n;
    return target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(G__22992, G__22993, G__22994, G__22995, G__22996, G__22997, G__22998, G__22999, G__23000, G__23001, G__23002, G__23003, G__23004, G__23005) : target_fn.call(null, G__22992, G__22993, G__22994, G__22995, G__22996, G__22997, G__22998, G__22999, G__23000, G__23001, G__23002, G__23003, G__23004, G__23005);
  };
  var G__23636__16 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__23006 = a;
      var G__23007 = b;
      var G__23008 = c;
      var G__23009 = d;
      var G__23010 = e;
      var G__23011 = f;
      var G__23012 = g;
      var G__23013 = h;
      var G__23014 = i;
      var G__23015 = j;
      var G__23016 = k;
      var G__23017 = l;
      var G__23018 = m;
      var G__23019 = n;
      var G__23020 = o;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(G__23006, G__23007, G__23008, G__23009, G__23010, G__23011, G__23012, G__23013, G__23014, G__23015, G__23016, G__23017, G__23018, G__23019, G__23020) : self__.dispatch_fn.call(null, G__23006, G__23007, G__23008, G__23009, G__23010, G__23011, G__23012, G__23013, G__23014, G__23015, G__23016, G__23017, G__23018, G__23019, G__23020);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__23021 = a;
    var G__23022 = b;
    var G__23023 = c;
    var G__23024 = d;
    var G__23025 = e;
    var G__23026 = f;
    var G__23027 = g;
    var G__23028 = h;
    var G__23029 = i;
    var G__23030 = j;
    var G__23031 = k;
    var G__23032 = l;
    var G__23033 = m;
    var G__23034 = n;
    var G__23035 = o;
    return target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(G__23021, G__23022, G__23023, G__23024, G__23025, G__23026, G__23027, G__23028, G__23029, G__23030, G__23031, G__23032, G__23033, G__23034, G__23035) : target_fn.call(null, G__23021, G__23022, G__23023, G__23024, G__23025, G__23026, G__23027, G__23028, G__23029, G__23030, G__23031, G__23032, G__23033, G__23034, G__23035);
  };
  var G__23636__17 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__23036 = a;
      var G__23037 = b;
      var G__23038 = c;
      var G__23039 = d;
      var G__23040 = e;
      var G__23041 = f;
      var G__23042 = g;
      var G__23043 = h;
      var G__23044 = i;
      var G__23045 = j;
      var G__23046 = k;
      var G__23047 = l;
      var G__23048 = m;
      var G__23049 = n;
      var G__23050 = o;
      var G__23051 = p;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(G__23036, G__23037, G__23038, G__23039, G__23040, G__23041, G__23042, G__23043, G__23044, G__23045, G__23046, G__23047, G__23048, G__23049, G__23050, G__23051) : self__.dispatch_fn.call(null, G__23036, G__23037, G__23038, G__23039, G__23040, G__23041, G__23042, G__23043, G__23044, G__23045, G__23046, G__23047, G__23048, G__23049, G__23050, G__23051);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__23052 = a;
    var G__23053 = b;
    var G__23054 = c;
    var G__23055 = d;
    var G__23056 = e;
    var G__23057 = f;
    var G__23058 = g;
    var G__23059 = h;
    var G__23060 = i;
    var G__23061 = j;
    var G__23062 = k;
    var G__23063 = l;
    var G__23064 = m;
    var G__23065 = n;
    var G__23066 = o;
    var G__23067 = p;
    return target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(G__23052, G__23053, G__23054, G__23055, G__23056, G__23057, G__23058, G__23059, G__23060, G__23061, G__23062, G__23063, G__23064, G__23065, G__23066, G__23067) : target_fn.call(null, G__23052, G__23053, G__23054, G__23055, G__23056, G__23057, G__23058, G__23059, G__23060, G__23061, G__23062, G__23063, G__23064, G__23065, G__23066, G__23067);
  };
  var G__23636__18 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__23068 = a;
      var G__23069 = b;
      var G__23070 = c;
      var G__23071 = d;
      var G__23072 = e;
      var G__23073 = f;
      var G__23074 = g;
      var G__23075 = h;
      var G__23076 = i;
      var G__23077 = j;
      var G__23078 = k;
      var G__23079 = l;
      var G__23080 = m;
      var G__23081 = n;
      var G__23082 = o;
      var G__23083 = p;
      var G__23084 = q;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(G__23068, G__23069, G__23070, G__23071, G__23072, G__23073, G__23074, G__23075, G__23076, G__23077, G__23078, G__23079, G__23080, G__23081, G__23082, G__23083, G__23084) : self__.dispatch_fn.call(null, G__23068, G__23069, G__23070, G__23071, G__23072, G__23073, G__23074, G__23075, G__23076, G__23077, G__23078, G__23079, G__23080, G__23081, G__23082, G__23083, G__23084);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__23085 = a;
    var G__23086 = b;
    var G__23087 = c;
    var G__23088 = d;
    var G__23089 = e;
    var G__23090 = f;
    var G__23091 = g;
    var G__23092 = h;
    var G__23093 = i;
    var G__23094 = j;
    var G__23095 = k;
    var G__23096 = l;
    var G__23097 = m;
    var G__23098 = n;
    var G__23099 = o;
    var G__23100 = p;
    var G__23101 = q;
    return target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(G__23085, G__23086, G__23087, G__23088, G__23089, G__23090, G__23091, G__23092, G__23093, G__23094, G__23095, G__23096, G__23097, G__23098, G__23099, G__23100, G__23101) : target_fn.call(null, G__23085, G__23086, G__23087, G__23088, G__23089, G__23090, G__23091, G__23092, G__23093, G__23094, G__23095, G__23096, G__23097, G__23098, G__23099, G__23100, G__23101);
  };
  var G__23636__19 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__23102 = a;
      var G__23103 = b;
      var G__23104 = c;
      var G__23105 = d;
      var G__23106 = e;
      var G__23107 = f;
      var G__23108 = g;
      var G__23109 = h;
      var G__23110 = i;
      var G__23111 = j;
      var G__23112 = k;
      var G__23113 = l;
      var G__23114 = m;
      var G__23115 = n;
      var G__23116 = o;
      var G__23117 = p;
      var G__23118 = q;
      var G__23119 = r;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(G__23102, G__23103, G__23104, G__23105, G__23106, G__23107, G__23108, G__23109, G__23110, G__23111, G__23112, G__23113, G__23114, G__23115, G__23116, G__23117, G__23118, G__23119) : self__.dispatch_fn.call(null, G__23102, G__23103, G__23104, G__23105, G__23106, G__23107, G__23108, G__23109, G__23110, G__23111, G__23112, G__23113, G__23114, G__23115, G__23116, G__23117, G__23118, G__23119);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__23120 = a;
    var G__23121 = b;
    var G__23122 = c;
    var G__23123 = d;
    var G__23124 = e;
    var G__23125 = f;
    var G__23126 = g;
    var G__23127 = h;
    var G__23128 = i;
    var G__23129 = j;
    var G__23130 = k;
    var G__23131 = l;
    var G__23132 = m;
    var G__23133 = n;
    var G__23134 = o;
    var G__23135 = p;
    var G__23136 = q;
    var G__23137 = r;
    return target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(G__23120, G__23121, G__23122, G__23123, G__23124, G__23125, G__23126, G__23127, G__23128, G__23129, G__23130, G__23131, G__23132, G__23133, G__23134, G__23135, G__23136, G__23137) : target_fn.call(null, G__23120, G__23121, G__23122, G__23123, G__23124, G__23125, G__23126, G__23127, G__23128, G__23129, G__23130, G__23131, G__23132, G__23133, G__23134, G__23135, G__23136, G__23137);
  };
  var G__23636__20 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__23138 = a;
      var G__23139 = b;
      var G__23140 = c;
      var G__23141 = d;
      var G__23142 = e;
      var G__23143 = f;
      var G__23144 = g;
      var G__23145 = h;
      var G__23146 = i;
      var G__23147 = j;
      var G__23148 = k;
      var G__23149 = l;
      var G__23150 = m;
      var G__23151 = n;
      var G__23152 = o;
      var G__23153 = p;
      var G__23154 = q;
      var G__23155 = r;
      var G__23156 = s;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(G__23138, G__23139, G__23140, G__23141, G__23142, G__23143, G__23144, G__23145, G__23146, G__23147, G__23148, G__23149, G__23150, G__23151, G__23152, G__23153, G__23154, G__23155, G__23156) : self__.dispatch_fn.call(null, G__23138, G__23139, G__23140, G__23141, G__23142, G__23143, G__23144, G__23145, G__23146, G__23147, G__23148, G__23149, G__23150, G__23151, G__23152, G__23153, G__23154, 
      G__23155, G__23156);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__23157 = a;
    var G__23158 = b;
    var G__23159 = c;
    var G__23160 = d;
    var G__23161 = e;
    var G__23162 = f;
    var G__23163 = g;
    var G__23164 = h;
    var G__23165 = i;
    var G__23166 = j;
    var G__23167 = k;
    var G__23168 = l;
    var G__23169 = m;
    var G__23170 = n;
    var G__23171 = o;
    var G__23172 = p;
    var G__23173 = q;
    var G__23174 = r;
    var G__23175 = s;
    return target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(G__23157, G__23158, G__23159, G__23160, G__23161, G__23162, G__23163, G__23164, G__23165, G__23166, G__23167, G__23168, G__23169, G__23170, G__23171, G__23172, G__23173, G__23174, G__23175) : target_fn.call(null, G__23157, G__23158, G__23159, G__23160, G__23161, G__23162, G__23163, G__23164, G__23165, G__23166, G__23167, G__23168, G__23169, G__23170, G__23171, G__23172, G__23173, G__23174, G__23175);
  };
  var G__23636__21 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__23176 = a;
      var G__23177 = b;
      var G__23178 = c;
      var G__23179 = d;
      var G__23180 = e;
      var G__23181 = f;
      var G__23182 = g;
      var G__23183 = h;
      var G__23184 = i;
      var G__23185 = j;
      var G__23186 = k;
      var G__23187 = l;
      var G__23188 = m;
      var G__23189 = n;
      var G__23190 = o;
      var G__23191 = p;
      var G__23192 = q;
      var G__23193 = r;
      var G__23194 = s;
      var G__23195 = t;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(G__23176, G__23177, G__23178, G__23179, G__23180, G__23181, G__23182, G__23183, G__23184, G__23185, G__23186, G__23187, G__23188, G__23189, G__23190, G__23191, G__23192, G__23193, G__23194, G__23195) : self__.dispatch_fn.call(null, G__23176, G__23177, G__23178, G__23179, G__23180, G__23181, G__23182, G__23183, G__23184, G__23185, G__23186, G__23187, G__23188, G__23189, G__23190, G__23191, 
      G__23192, G__23193, G__23194, G__23195);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__23196 = a;
    var G__23197 = b;
    var G__23198 = c;
    var G__23199 = d;
    var G__23200 = e;
    var G__23201 = f;
    var G__23202 = g;
    var G__23203 = h;
    var G__23204 = i;
    var G__23205 = j;
    var G__23206 = k;
    var G__23207 = l;
    var G__23208 = m;
    var G__23209 = n;
    var G__23210 = o;
    var G__23211 = p;
    var G__23212 = q;
    var G__23213 = r;
    var G__23214 = s;
    var G__23215 = t;
    return target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(G__23196, G__23197, G__23198, G__23199, G__23200, G__23201, G__23202, G__23203, G__23204, G__23205, G__23206, G__23207, G__23208, G__23209, G__23210, G__23211, G__23212, G__23213, G__23214, G__23215) : target_fn.call(null, G__23196, G__23197, G__23198, G__23199, G__23200, G__23201, G__23202, G__23203, G__23204, G__23205, G__23206, G__23207, G__23208, G__23209, G__23210, G__23211, G__23212, G__23213, G__23214, 
    G__23215);
  };
  var G__23636__22 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn, a, b, c, d, cljs.core.array_seq([e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest], 0));
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn, a, b, c, d, cljs.core.array_seq([e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest], 0));
  };
  G__23636 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    switch(arguments.length) {
      case 1:
        return G__23636__1.call(this, self__);
      case 2:
        return G__23636__2.call(this, self__, a);
      case 3:
        return G__23636__3.call(this, self__, a, b);
      case 4:
        return G__23636__4.call(this, self__, a, b, c);
      case 5:
        return G__23636__5.call(this, self__, a, b, c, d);
      case 6:
        return G__23636__6.call(this, self__, a, b, c, d, e);
      case 7:
        return G__23636__7.call(this, self__, a, b, c, d, e, f);
      case 8:
        return G__23636__8.call(this, self__, a, b, c, d, e, f, g);
      case 9:
        return G__23636__9.call(this, self__, a, b, c, d, e, f, g, h);
      case 10:
        return G__23636__10.call(this, self__, a, b, c, d, e, f, g, h, i);
      case 11:
        return G__23636__11.call(this, self__, a, b, c, d, e, f, g, h, i, j);
      case 12:
        return G__23636__12.call(this, self__, a, b, c, d, e, f, g, h, i, j, k);
      case 13:
        return G__23636__13.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l);
      case 14:
        return G__23636__14.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m);
      case 15:
        return G__23636__15.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
      case 16:
        return G__23636__16.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
      case 17:
        return G__23636__17.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
      case 18:
        return G__23636__18.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
      case 19:
        return G__23636__19.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
      case 20:
        return G__23636__20.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
      case 21:
        return G__23636__21.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
      case 22:
        return G__23636__22.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__23636.cljs$core$IFn$_invoke$arity$1 = G__23636__1;
  G__23636.cljs$core$IFn$_invoke$arity$2 = G__23636__2;
  G__23636.cljs$core$IFn$_invoke$arity$3 = G__23636__3;
  G__23636.cljs$core$IFn$_invoke$arity$4 = G__23636__4;
  G__23636.cljs$core$IFn$_invoke$arity$5 = G__23636__5;
  G__23636.cljs$core$IFn$_invoke$arity$6 = G__23636__6;
  G__23636.cljs$core$IFn$_invoke$arity$7 = G__23636__7;
  G__23636.cljs$core$IFn$_invoke$arity$8 = G__23636__8;
  G__23636.cljs$core$IFn$_invoke$arity$9 = G__23636__9;
  G__23636.cljs$core$IFn$_invoke$arity$10 = G__23636__10;
  G__23636.cljs$core$IFn$_invoke$arity$11 = G__23636__11;
  G__23636.cljs$core$IFn$_invoke$arity$12 = G__23636__12;
  G__23636.cljs$core$IFn$_invoke$arity$13 = G__23636__13;
  G__23636.cljs$core$IFn$_invoke$arity$14 = G__23636__14;
  G__23636.cljs$core$IFn$_invoke$arity$15 = G__23636__15;
  G__23636.cljs$core$IFn$_invoke$arity$16 = G__23636__16;
  G__23636.cljs$core$IFn$_invoke$arity$17 = G__23636__17;
  G__23636.cljs$core$IFn$_invoke$arity$18 = G__23636__18;
  G__23636.cljs$core$IFn$_invoke$arity$19 = G__23636__19;
  G__23636.cljs$core$IFn$_invoke$arity$20 = G__23636__20;
  G__23636.cljs$core$IFn$_invoke$arity$21 = G__23636__21;
  G__23636.cljs$core$IFn$_invoke$arity$22 = G__23636__22;
  return G__23636;
}();
cljs.core.MultiFn.prototype.apply = function(self__, args22788) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args22788)));
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$0 = function() {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$1 = function(a) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__23216 = a;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(G__23216) : self__.dispatch_fn.call(null, G__23216);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__23217 = a;
  return target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(G__23217) : target_fn.call(null, G__23217);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__23218 = a;
    var G__23219 = b;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(G__23218, G__23219) : self__.dispatch_fn.call(null, G__23218, G__23219);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__23220 = a;
  var G__23221 = b;
  return target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(G__23220, G__23221) : target_fn.call(null, G__23220, G__23221);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__23222 = a;
    var G__23223 = b;
    var G__23224 = c;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(G__23222, G__23223, G__23224) : self__.dispatch_fn.call(null, G__23222, G__23223, G__23224);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__23225 = a;
  var G__23226 = b;
  var G__23227 = c;
  return target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(G__23225, G__23226, G__23227) : target_fn.call(null, G__23225, G__23226, G__23227);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__23228 = a;
    var G__23229 = b;
    var G__23230 = c;
    var G__23231 = d;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(G__23228, G__23229, G__23230, G__23231) : self__.dispatch_fn.call(null, G__23228, G__23229, G__23230, G__23231);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__23232 = a;
  var G__23233 = b;
  var G__23234 = c;
  var G__23235 = d;
  return target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(G__23232, G__23233, G__23234, G__23235) : target_fn.call(null, G__23232, G__23233, G__23234, G__23235);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$5 = function(a, b, c, d, e) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__23236 = a;
    var G__23237 = b;
    var G__23238 = c;
    var G__23239 = d;
    var G__23240 = e;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(G__23236, G__23237, G__23238, G__23239, G__23240) : self__.dispatch_fn.call(null, G__23236, G__23237, G__23238, G__23239, G__23240);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__23241 = a;
  var G__23242 = b;
  var G__23243 = c;
  var G__23244 = d;
  var G__23245 = e;
  return target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(G__23241, G__23242, G__23243, G__23244, G__23245) : target_fn.call(null, G__23241, G__23242, G__23243, G__23244, G__23245);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$6 = function(a, b, c, d, e, f) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__23246 = a;
    var G__23247 = b;
    var G__23248 = c;
    var G__23249 = d;
    var G__23250 = e;
    var G__23251 = f;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(G__23246, G__23247, G__23248, G__23249, G__23250, G__23251) : self__.dispatch_fn.call(null, G__23246, G__23247, G__23248, G__23249, G__23250, G__23251);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__23252 = a;
  var G__23253 = b;
  var G__23254 = c;
  var G__23255 = d;
  var G__23256 = e;
  var G__23257 = f;
  return target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(G__23252, G__23253, G__23254, G__23255, G__23256, G__23257) : target_fn.call(null, G__23252, G__23253, G__23254, G__23255, G__23256, G__23257);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$7 = function(a, b, c, d, e, f, g) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__23258 = a;
    var G__23259 = b;
    var G__23260 = c;
    var G__23261 = d;
    var G__23262 = e;
    var G__23263 = f;
    var G__23264 = g;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(G__23258, G__23259, G__23260, G__23261, G__23262, G__23263, G__23264) : self__.dispatch_fn.call(null, G__23258, G__23259, G__23260, G__23261, G__23262, G__23263, G__23264);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__23265 = a;
  var G__23266 = b;
  var G__23267 = c;
  var G__23268 = d;
  var G__23269 = e;
  var G__23270 = f;
  var G__23271 = g;
  return target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(G__23265, G__23266, G__23267, G__23268, G__23269, G__23270, G__23271) : target_fn.call(null, G__23265, G__23266, G__23267, G__23268, G__23269, G__23270, G__23271);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$8 = function(a, b, c, d, e, f, g, h) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__23272 = a;
    var G__23273 = b;
    var G__23274 = c;
    var G__23275 = d;
    var G__23276 = e;
    var G__23277 = f;
    var G__23278 = g;
    var G__23279 = h;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(G__23272, G__23273, G__23274, G__23275, G__23276, G__23277, G__23278, G__23279) : self__.dispatch_fn.call(null, G__23272, G__23273, G__23274, G__23275, G__23276, G__23277, G__23278, G__23279);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__23280 = a;
  var G__23281 = b;
  var G__23282 = c;
  var G__23283 = d;
  var G__23284 = e;
  var G__23285 = f;
  var G__23286 = g;
  var G__23287 = h;
  return target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(G__23280, G__23281, G__23282, G__23283, G__23284, G__23285, G__23286, G__23287) : target_fn.call(null, G__23280, G__23281, G__23282, G__23283, G__23284, G__23285, G__23286, G__23287);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$9 = function(a, b, c, d, e, f, g, h, i) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__23288 = a;
    var G__23289 = b;
    var G__23290 = c;
    var G__23291 = d;
    var G__23292 = e;
    var G__23293 = f;
    var G__23294 = g;
    var G__23295 = h;
    var G__23296 = i;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(G__23288, G__23289, G__23290, G__23291, G__23292, G__23293, G__23294, G__23295, G__23296) : self__.dispatch_fn.call(null, G__23288, G__23289, G__23290, G__23291, G__23292, G__23293, G__23294, G__23295, G__23296);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__23297 = a;
  var G__23298 = b;
  var G__23299 = c;
  var G__23300 = d;
  var G__23301 = e;
  var G__23302 = f;
  var G__23303 = g;
  var G__23304 = h;
  var G__23305 = i;
  return target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(G__23297, G__23298, G__23299, G__23300, G__23301, G__23302, G__23303, G__23304, G__23305) : target_fn.call(null, G__23297, G__23298, G__23299, G__23300, G__23301, G__23302, G__23303, G__23304, G__23305);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$10 = function(a, b, c, d, e, f, g, h, i, j) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__23306 = a;
    var G__23307 = b;
    var G__23308 = c;
    var G__23309 = d;
    var G__23310 = e;
    var G__23311 = f;
    var G__23312 = g;
    var G__23313 = h;
    var G__23314 = i;
    var G__23315 = j;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(G__23306, G__23307, G__23308, G__23309, G__23310, G__23311, G__23312, G__23313, G__23314, G__23315) : self__.dispatch_fn.call(null, G__23306, G__23307, G__23308, G__23309, G__23310, G__23311, G__23312, G__23313, G__23314, G__23315);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__23316 = a;
  var G__23317 = b;
  var G__23318 = c;
  var G__23319 = d;
  var G__23320 = e;
  var G__23321 = f;
  var G__23322 = g;
  var G__23323 = h;
  var G__23324 = i;
  var G__23325 = j;
  return target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(G__23316, G__23317, G__23318, G__23319, G__23320, G__23321, G__23322, G__23323, G__23324, G__23325) : target_fn.call(null, G__23316, G__23317, G__23318, G__23319, G__23320, G__23321, G__23322, G__23323, G__23324, G__23325);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$11 = function(a, b, c, d, e, f, g, h, i, j, k) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__23326 = a;
    var G__23327 = b;
    var G__23328 = c;
    var G__23329 = d;
    var G__23330 = e;
    var G__23331 = f;
    var G__23332 = g;
    var G__23333 = h;
    var G__23334 = i;
    var G__23335 = j;
    var G__23336 = k;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(G__23326, G__23327, G__23328, G__23329, G__23330, G__23331, G__23332, G__23333, G__23334, G__23335, G__23336) : self__.dispatch_fn.call(null, G__23326, G__23327, G__23328, G__23329, G__23330, G__23331, G__23332, G__23333, G__23334, G__23335, G__23336);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__23337 = a;
  var G__23338 = b;
  var G__23339 = c;
  var G__23340 = d;
  var G__23341 = e;
  var G__23342 = f;
  var G__23343 = g;
  var G__23344 = h;
  var G__23345 = i;
  var G__23346 = j;
  var G__23347 = k;
  return target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(G__23337, G__23338, G__23339, G__23340, G__23341, G__23342, G__23343, G__23344, G__23345, G__23346, G__23347) : target_fn.call(null, G__23337, G__23338, G__23339, G__23340, G__23341, G__23342, G__23343, G__23344, G__23345, G__23346, G__23347);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$12 = function(a, b, c, d, e, f, g, h, i, j, k, l) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__23348 = a;
    var G__23349 = b;
    var G__23350 = c;
    var G__23351 = d;
    var G__23352 = e;
    var G__23353 = f;
    var G__23354 = g;
    var G__23355 = h;
    var G__23356 = i;
    var G__23357 = j;
    var G__23358 = k;
    var G__23359 = l;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(G__23348, G__23349, G__23350, G__23351, G__23352, G__23353, G__23354, G__23355, G__23356, G__23357, G__23358, G__23359) : self__.dispatch_fn.call(null, G__23348, G__23349, G__23350, G__23351, G__23352, G__23353, G__23354, G__23355, G__23356, G__23357, G__23358, G__23359);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__23360 = a;
  var G__23361 = b;
  var G__23362 = c;
  var G__23363 = d;
  var G__23364 = e;
  var G__23365 = f;
  var G__23366 = g;
  var G__23367 = h;
  var G__23368 = i;
  var G__23369 = j;
  var G__23370 = k;
  var G__23371 = l;
  return target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(G__23360, G__23361, G__23362, G__23363, G__23364, G__23365, G__23366, G__23367, G__23368, G__23369, G__23370, G__23371) : target_fn.call(null, G__23360, G__23361, G__23362, G__23363, G__23364, G__23365, G__23366, G__23367, G__23368, G__23369, G__23370, G__23371);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$13 = function(a, b, c, d, e, f, g, h, i, j, k, l, m) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__23372 = a;
    var G__23373 = b;
    var G__23374 = c;
    var G__23375 = d;
    var G__23376 = e;
    var G__23377 = f;
    var G__23378 = g;
    var G__23379 = h;
    var G__23380 = i;
    var G__23381 = j;
    var G__23382 = k;
    var G__23383 = l;
    var G__23384 = m;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(G__23372, G__23373, G__23374, G__23375, G__23376, G__23377, G__23378, G__23379, G__23380, G__23381, G__23382, G__23383, G__23384) : self__.dispatch_fn.call(null, G__23372, G__23373, G__23374, G__23375, G__23376, G__23377, G__23378, G__23379, G__23380, G__23381, G__23382, G__23383, G__23384);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__23385 = a;
  var G__23386 = b;
  var G__23387 = c;
  var G__23388 = d;
  var G__23389 = e;
  var G__23390 = f;
  var G__23391 = g;
  var G__23392 = h;
  var G__23393 = i;
  var G__23394 = j;
  var G__23395 = k;
  var G__23396 = l;
  var G__23397 = m;
  return target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(G__23385, G__23386, G__23387, G__23388, G__23389, G__23390, G__23391, G__23392, G__23393, G__23394, G__23395, G__23396, G__23397) : target_fn.call(null, G__23385, G__23386, G__23387, G__23388, G__23389, G__23390, G__23391, G__23392, G__23393, G__23394, G__23395, G__23396, G__23397);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$14 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__23398 = a;
    var G__23399 = b;
    var G__23400 = c;
    var G__23401 = d;
    var G__23402 = e;
    var G__23403 = f;
    var G__23404 = g;
    var G__23405 = h;
    var G__23406 = i;
    var G__23407 = j;
    var G__23408 = k;
    var G__23409 = l;
    var G__23410 = m;
    var G__23411 = n;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(G__23398, G__23399, G__23400, G__23401, G__23402, G__23403, G__23404, G__23405, G__23406, G__23407, G__23408, G__23409, G__23410, G__23411) : self__.dispatch_fn.call(null, G__23398, G__23399, G__23400, G__23401, G__23402, G__23403, G__23404, G__23405, G__23406, G__23407, G__23408, G__23409, G__23410, G__23411);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__23412 = a;
  var G__23413 = b;
  var G__23414 = c;
  var G__23415 = d;
  var G__23416 = e;
  var G__23417 = f;
  var G__23418 = g;
  var G__23419 = h;
  var G__23420 = i;
  var G__23421 = j;
  var G__23422 = k;
  var G__23423 = l;
  var G__23424 = m;
  var G__23425 = n;
  return target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(G__23412, G__23413, G__23414, G__23415, G__23416, G__23417, G__23418, G__23419, G__23420, G__23421, G__23422, G__23423, G__23424, G__23425) : target_fn.call(null, G__23412, G__23413, G__23414, G__23415, G__23416, G__23417, G__23418, G__23419, G__23420, G__23421, G__23422, G__23423, G__23424, G__23425);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$15 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__23426 = a;
    var G__23427 = b;
    var G__23428 = c;
    var G__23429 = d;
    var G__23430 = e;
    var G__23431 = f;
    var G__23432 = g;
    var G__23433 = h;
    var G__23434 = i;
    var G__23435 = j;
    var G__23436 = k;
    var G__23437 = l;
    var G__23438 = m;
    var G__23439 = n;
    var G__23440 = o;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(G__23426, G__23427, G__23428, G__23429, G__23430, G__23431, G__23432, G__23433, G__23434, G__23435, G__23436, G__23437, G__23438, G__23439, G__23440) : self__.dispatch_fn.call(null, G__23426, G__23427, G__23428, G__23429, G__23430, G__23431, G__23432, G__23433, G__23434, G__23435, G__23436, G__23437, G__23438, G__23439, G__23440);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__23441 = a;
  var G__23442 = b;
  var G__23443 = c;
  var G__23444 = d;
  var G__23445 = e;
  var G__23446 = f;
  var G__23447 = g;
  var G__23448 = h;
  var G__23449 = i;
  var G__23450 = j;
  var G__23451 = k;
  var G__23452 = l;
  var G__23453 = m;
  var G__23454 = n;
  var G__23455 = o;
  return target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(G__23441, G__23442, G__23443, G__23444, G__23445, G__23446, G__23447, G__23448, G__23449, G__23450, G__23451, G__23452, G__23453, G__23454, G__23455) : target_fn.call(null, G__23441, G__23442, G__23443, G__23444, G__23445, G__23446, G__23447, G__23448, G__23449, G__23450, G__23451, G__23452, G__23453, G__23454, G__23455);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$16 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__23456 = a;
    var G__23457 = b;
    var G__23458 = c;
    var G__23459 = d;
    var G__23460 = e;
    var G__23461 = f;
    var G__23462 = g;
    var G__23463 = h;
    var G__23464 = i;
    var G__23465 = j;
    var G__23466 = k;
    var G__23467 = l;
    var G__23468 = m;
    var G__23469 = n;
    var G__23470 = o;
    var G__23471 = p;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(G__23456, G__23457, G__23458, G__23459, G__23460, G__23461, G__23462, G__23463, G__23464, G__23465, G__23466, G__23467, G__23468, G__23469, G__23470, G__23471) : self__.dispatch_fn.call(null, G__23456, G__23457, G__23458, G__23459, G__23460, G__23461, G__23462, G__23463, G__23464, G__23465, G__23466, G__23467, G__23468, G__23469, G__23470, G__23471);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__23472 = a;
  var G__23473 = b;
  var G__23474 = c;
  var G__23475 = d;
  var G__23476 = e;
  var G__23477 = f;
  var G__23478 = g;
  var G__23479 = h;
  var G__23480 = i;
  var G__23481 = j;
  var G__23482 = k;
  var G__23483 = l;
  var G__23484 = m;
  var G__23485 = n;
  var G__23486 = o;
  var G__23487 = p;
  return target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(G__23472, G__23473, G__23474, G__23475, G__23476, G__23477, G__23478, G__23479, G__23480, G__23481, G__23482, G__23483, G__23484, G__23485, G__23486, G__23487) : target_fn.call(null, G__23472, G__23473, G__23474, G__23475, G__23476, G__23477, G__23478, G__23479, G__23480, G__23481, G__23482, G__23483, G__23484, G__23485, G__23486, G__23487);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$17 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__23488 = a;
    var G__23489 = b;
    var G__23490 = c;
    var G__23491 = d;
    var G__23492 = e;
    var G__23493 = f;
    var G__23494 = g;
    var G__23495 = h;
    var G__23496 = i;
    var G__23497 = j;
    var G__23498 = k;
    var G__23499 = l;
    var G__23500 = m;
    var G__23501 = n;
    var G__23502 = o;
    var G__23503 = p;
    var G__23504 = q;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(G__23488, G__23489, G__23490, G__23491, G__23492, G__23493, G__23494, G__23495, G__23496, G__23497, G__23498, G__23499, G__23500, G__23501, G__23502, G__23503, G__23504) : self__.dispatch_fn.call(null, G__23488, G__23489, G__23490, G__23491, G__23492, G__23493, G__23494, G__23495, G__23496, G__23497, G__23498, G__23499, G__23500, G__23501, G__23502, G__23503, G__23504);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__23505 = a;
  var G__23506 = b;
  var G__23507 = c;
  var G__23508 = d;
  var G__23509 = e;
  var G__23510 = f;
  var G__23511 = g;
  var G__23512 = h;
  var G__23513 = i;
  var G__23514 = j;
  var G__23515 = k;
  var G__23516 = l;
  var G__23517 = m;
  var G__23518 = n;
  var G__23519 = o;
  var G__23520 = p;
  var G__23521 = q;
  return target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(G__23505, G__23506, G__23507, G__23508, G__23509, G__23510, G__23511, G__23512, G__23513, G__23514, G__23515, G__23516, G__23517, G__23518, G__23519, G__23520, G__23521) : target_fn.call(null, G__23505, G__23506, G__23507, G__23508, G__23509, G__23510, G__23511, G__23512, G__23513, G__23514, G__23515, G__23516, G__23517, G__23518, G__23519, G__23520, G__23521);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$18 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__23522 = a;
    var G__23523 = b;
    var G__23524 = c;
    var G__23525 = d;
    var G__23526 = e;
    var G__23527 = f;
    var G__23528 = g;
    var G__23529 = h;
    var G__23530 = i;
    var G__23531 = j;
    var G__23532 = k;
    var G__23533 = l;
    var G__23534 = m;
    var G__23535 = n;
    var G__23536 = o;
    var G__23537 = p;
    var G__23538 = q;
    var G__23539 = r;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(G__23522, G__23523, G__23524, G__23525, G__23526, G__23527, G__23528, G__23529, G__23530, G__23531, G__23532, G__23533, G__23534, G__23535, G__23536, G__23537, G__23538, G__23539) : self__.dispatch_fn.call(null, G__23522, G__23523, G__23524, G__23525, G__23526, G__23527, G__23528, G__23529, G__23530, G__23531, G__23532, G__23533, G__23534, G__23535, G__23536, G__23537, G__23538, G__23539);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__23540 = a;
  var G__23541 = b;
  var G__23542 = c;
  var G__23543 = d;
  var G__23544 = e;
  var G__23545 = f;
  var G__23546 = g;
  var G__23547 = h;
  var G__23548 = i;
  var G__23549 = j;
  var G__23550 = k;
  var G__23551 = l;
  var G__23552 = m;
  var G__23553 = n;
  var G__23554 = o;
  var G__23555 = p;
  var G__23556 = q;
  var G__23557 = r;
  return target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(G__23540, G__23541, G__23542, G__23543, G__23544, G__23545, G__23546, G__23547, G__23548, G__23549, G__23550, G__23551, G__23552, G__23553, G__23554, G__23555, G__23556, G__23557) : target_fn.call(null, G__23540, G__23541, G__23542, G__23543, G__23544, G__23545, G__23546, G__23547, G__23548, G__23549, G__23550, G__23551, G__23552, G__23553, G__23554, G__23555, G__23556, G__23557);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$19 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__23558 = a;
    var G__23559 = b;
    var G__23560 = c;
    var G__23561 = d;
    var G__23562 = e;
    var G__23563 = f;
    var G__23564 = g;
    var G__23565 = h;
    var G__23566 = i;
    var G__23567 = j;
    var G__23568 = k;
    var G__23569 = l;
    var G__23570 = m;
    var G__23571 = n;
    var G__23572 = o;
    var G__23573 = p;
    var G__23574 = q;
    var G__23575 = r;
    var G__23576 = s;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(G__23558, G__23559, G__23560, G__23561, G__23562, G__23563, G__23564, G__23565, G__23566, G__23567, G__23568, G__23569, G__23570, G__23571, G__23572, G__23573, G__23574, G__23575, G__23576) : self__.dispatch_fn.call(null, G__23558, G__23559, G__23560, G__23561, G__23562, G__23563, G__23564, G__23565, G__23566, G__23567, G__23568, G__23569, G__23570, G__23571, G__23572, G__23573, G__23574, 
    G__23575, G__23576);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__23577 = a;
  var G__23578 = b;
  var G__23579 = c;
  var G__23580 = d;
  var G__23581 = e;
  var G__23582 = f;
  var G__23583 = g;
  var G__23584 = h;
  var G__23585 = i;
  var G__23586 = j;
  var G__23587 = k;
  var G__23588 = l;
  var G__23589 = m;
  var G__23590 = n;
  var G__23591 = o;
  var G__23592 = p;
  var G__23593 = q;
  var G__23594 = r;
  var G__23595 = s;
  return target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(G__23577, G__23578, G__23579, G__23580, G__23581, G__23582, G__23583, G__23584, G__23585, G__23586, G__23587, G__23588, G__23589, G__23590, G__23591, G__23592, G__23593, G__23594, G__23595) : target_fn.call(null, G__23577, G__23578, G__23579, G__23580, G__23581, G__23582, G__23583, G__23584, G__23585, G__23586, G__23587, G__23588, G__23589, G__23590, G__23591, G__23592, G__23593, G__23594, G__23595);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$20 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__23596 = a;
    var G__23597 = b;
    var G__23598 = c;
    var G__23599 = d;
    var G__23600 = e;
    var G__23601 = f;
    var G__23602 = g;
    var G__23603 = h;
    var G__23604 = i;
    var G__23605 = j;
    var G__23606 = k;
    var G__23607 = l;
    var G__23608 = m;
    var G__23609 = n;
    var G__23610 = o;
    var G__23611 = p;
    var G__23612 = q;
    var G__23613 = r;
    var G__23614 = s;
    var G__23615 = t;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(G__23596, G__23597, G__23598, G__23599, G__23600, G__23601, G__23602, G__23603, G__23604, G__23605, G__23606, G__23607, G__23608, G__23609, G__23610, G__23611, G__23612, G__23613, G__23614, G__23615) : self__.dispatch_fn.call(null, G__23596, G__23597, G__23598, G__23599, G__23600, G__23601, G__23602, G__23603, G__23604, G__23605, G__23606, G__23607, G__23608, G__23609, G__23610, G__23611, 
    G__23612, G__23613, G__23614, G__23615);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__23616 = a;
  var G__23617 = b;
  var G__23618 = c;
  var G__23619 = d;
  var G__23620 = e;
  var G__23621 = f;
  var G__23622 = g;
  var G__23623 = h;
  var G__23624 = i;
  var G__23625 = j;
  var G__23626 = k;
  var G__23627 = l;
  var G__23628 = m;
  var G__23629 = n;
  var G__23630 = o;
  var G__23631 = p;
  var G__23632 = q;
  var G__23633 = r;
  var G__23634 = s;
  var G__23635 = t;
  return target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(G__23616, G__23617, G__23618, G__23619, G__23620, G__23621, G__23622, G__23623, G__23624, G__23625, G__23626, G__23627, G__23628, G__23629, G__23630, G__23631, G__23632, G__23633, G__23634, G__23635) : target_fn.call(null, G__23616, G__23617, G__23618, G__23619, G__23620, G__23621, G__23622, G__23623, G__23624, G__23625, G__23626, G__23627, G__23628, G__23629, G__23630, G__23631, G__23632, G__23633, G__23634, 
  G__23635);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$21 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
  var self__ = this;
  var mf = this;
  var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn, a, b, c, d, cljs.core.array_seq([e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest], 0));
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn, a, b, c, d, cljs.core.array_seq([e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest], 0));
};
cljs.core.MultiFn.cljs$lang$type = true;
cljs.core.MultiFn.cljs$lang$ctorStr = "cljs.core/MultiFn";
cljs.core.MultiFn.cljs$lang$ctorPrWriter = function(this__8091__auto__, writer__8092__auto__, opt__8093__auto__) {
  return cljs.core._write(writer__8092__auto__, "cljs.core/MultiFn");
};
cljs.core.__GT_MultiFn = function __GT_MultiFn(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  return new cljs.core.MultiFn(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy);
};
cljs.core.remove_all_methods = function remove_all_methods(multifn) {
  return cljs.core._reset(multifn);
};
cljs.core.remove_method = function remove_method(multifn, dispatch_val) {
  return cljs.core._remove_method(multifn, dispatch_val);
};
cljs.core.prefer_method = function prefer_method(multifn, dispatch_val_x, dispatch_val_y) {
  return cljs.core._prefer_method(multifn, dispatch_val_x, dispatch_val_y);
};
cljs.core.methods$ = function methods$(multifn) {
  return cljs.core._methods(multifn);
};
cljs.core.get_method = function get_method(multifn, dispatch_val) {
  return cljs.core._get_method(multifn, dispatch_val);
};
cljs.core.prefers = function prefers(multifn) {
  return cljs.core._prefers(multifn);
};
cljs.core.UUID = function(uuid) {
  this.uuid = uuid;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2153775104;
};
cljs.core.UUID.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  var G__23637 = cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([this$__$1], 0));
  return goog.string.hashCode(G__23637);
};
cljs.core.UUID.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(_, writer, ___$1) {
  var self__ = this;
  var ___$2 = this;
  return cljs.core._write(writer, [cljs.core.str('#uuid "'), cljs.core.str(self__.uuid), cljs.core.str('"')].join(""));
};
cljs.core.UUID.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  return other instanceof cljs.core.UUID && self__.uuid === other.uuid;
};
cljs.core.UUID.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return self__.uuid;
};
cljs.core.UUID.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.UUID.cljs$lang$type = true;
cljs.core.UUID.cljs$lang$ctorStr = "cljs.core/UUID";
cljs.core.UUID.cljs$lang$ctorPrWriter = function(this__8091__auto__, writer__8092__auto__, opt__8093__auto__) {
  return cljs.core._write(writer__8092__auto__, "cljs.core/UUID");
};
cljs.core.__GT_UUID = function __GT_UUID(uuid) {
  return new cljs.core.UUID(uuid);
};
cljs.core.ExceptionInfo = function(message, data, cause) {
  this.message = message;
  this.data = data;
  this.cause = cause;
};
cljs.core.ExceptionInfo.cljs$lang$type = true;
cljs.core.ExceptionInfo.cljs$lang$ctorStr = "cljs.core/ExceptionInfo";
cljs.core.ExceptionInfo.cljs$lang$ctorPrWriter = function(this__8091__auto__, writer__8092__auto__, opt__8093__auto__) {
  return cljs.core._write(writer__8092__auto__, "cljs.core/ExceptionInfo");
};
cljs.core.__GT_ExceptionInfo = function __GT_ExceptionInfo(message, data, cause) {
  return new cljs.core.ExceptionInfo(message, data, cause);
};
cljs.core.pr_writer_ex_info = function pr_writer_ex_info(obj, writer, opts) {
  cljs.core._write(writer, "#ExceptionInfo{:message ");
  cljs.core.pr_writer(obj.message, writer, opts);
  if (cljs.core.truth_(obj.data)) {
    cljs.core._write(writer, ", :data ");
    cljs.core.pr_writer(obj.data, writer, opts);
  } else {
  }
  if (cljs.core.truth_(obj.cause)) {
    cljs.core._write(writer, ", :cause ");
    cljs.core.pr_writer(obj.cause, writer, opts);
  } else {
  }
  return cljs.core._write(writer, "}");
};
cljs.core.ex_info = function() {
  var ex_info = null;
  var ex_info__2 = function(msg, data) {
    return ex_info.cljs$core$IFn$_invoke$arity$3(msg, data, null);
  };
  var ex_info__3 = function(msg, data, cause) {
    cljs.core.ExceptionInfo.prototype = function() {
      var G__23642 = msg;
      return Error(G__23642);
    }();
    cljs.core.ExceptionInfo.prototype.name = "ExceptionInfo";
    cljs.core.ExceptionInfo.prototype.constructor = cljs.core.ExceptionInfo;
    cljs.core.ExceptionInfo.prototype.toString = cljs.core.pr_str_STAR_;
    cljs.core.ExceptionInfo.prototype.cljs$core$IPrintWithWriter$ = true;
    cljs.core.ExceptionInfo.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(obj, writer, opts) {
      var obj__$1 = this;
      return cljs.core.pr_writer_ex_info(obj__$1, writer, opts);
    };
    return new cljs.core.ExceptionInfo(msg, data, cause);
  };
  ex_info = function(msg, data, cause) {
    switch(arguments.length) {
      case 2:
        return ex_info__2.call(this, msg, data);
      case 3:
        return ex_info__3.call(this, msg, data, cause);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  ex_info.cljs$core$IFn$_invoke$arity$2 = ex_info__2;
  ex_info.cljs$core$IFn$_invoke$arity$3 = ex_info__3;
  return ex_info;
}();
cljs.core.ex_data = function ex_data(ex) {
  if (ex instanceof cljs.core.ExceptionInfo) {
    return ex.data;
  } else {
    return null;
  }
};
cljs.core.ex_message = function ex_message(ex) {
  if (ex instanceof Error) {
    return ex.message;
  } else {
    return null;
  }
};
cljs.core.ex_cause = function ex_cause(ex) {
  if (ex instanceof cljs.core.ExceptionInfo) {
    return ex.cause;
  } else {
    return null;
  }
};
cljs.core.comparator = function comparator(pred) {
  return function(x, y) {
    if (cljs.core.truth_(function() {
      var G__23647 = x;
      var G__23648 = y;
      return pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(G__23647, G__23648) : pred.call(null, G__23647, G__23648);
    }())) {
      return-1;
    } else {
      if (cljs.core.truth_(function() {
        var G__23649 = y;
        var G__23650 = x;
        return pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(G__23649, G__23650) : pred.call(null, G__23649, G__23650);
      }())) {
        return 1;
      } else {
        return 0;
      }
    }
  };
};
cljs.core.special_symbol_QMARK_ = function special_symbol_QMARK_(x) {
  return cljs.core.contains_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 19, [new cljs.core.Symbol(null, "\x26", "\x26", -2144855648, null), null, new cljs.core.Symbol(null, "defrecord*", "defrecord*", -1936366207, null), null, new cljs.core.Symbol(null, "try", "try", -1273693247, null), null, new cljs.core.Symbol(null, "loop*", "loop*", 615029416, null), null, new cljs.core.Symbol(null, "do", "do", 1686842252, null), null, new cljs.core.Symbol(null, "letfn*", 
  "letfn*", -110097810, null), null, new cljs.core.Symbol(null, "if", "if", 1181717262, null), null, new cljs.core.Symbol(null, "new", "new", -444906321, null), null, new cljs.core.Symbol(null, "ns", "ns", 2082130287, null), null, new cljs.core.Symbol(null, "deftype*", "deftype*", 962659890, null), null, new cljs.core.Symbol(null, "let*", "let*", 1920721458, null), null, new cljs.core.Symbol(null, "js*", "js*", -1134233646, null), null, new cljs.core.Symbol(null, "fn*", "fn*", -752876845, null), 
  null, new cljs.core.Symbol(null, "recur", "recur", 1202958259, null), null, new cljs.core.Symbol(null, "set!", "set!", 250714521, null), null, new cljs.core.Symbol(null, ".", ".", 1975675962, null), null, new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), null, new cljs.core.Symbol(null, "throw", "throw", 595905694, null), null, new cljs.core.Symbol(null, "def", "def", 597100991, null), null], null), null), x);
};
cljs.core.test = function test(v) {
  var f = v.cljs$lang$test;
  if (cljs.core.truth_(f)) {
    f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
    return new cljs.core.Keyword(null, "ok", "ok", 967785236);
  } else {
    return new cljs.core.Keyword(null, "no-test", "no-test", -1679482642);
  }
};
goog.provide("cljs.core.async.impl.protocols");
goog.require("cljs.core");
cljs.core.async.impl.protocols.MAX_QUEUE_SIZE = 1024;
cljs.core.async.impl.protocols.ReadPort = function() {
  var obj27197 = {};
  return obj27197;
}();
cljs.core.async.impl.protocols.take_BANG_ = function take_BANG_(port, fn1_handler) {
  if (function() {
    var and__7492__auto__ = port;
    if (and__7492__auto__) {
      return port.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2;
    } else {
      return and__7492__auto__;
    }
  }()) {
    return port.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2(port, fn1_handler);
  } else {
    var x__8148__auto__ = port == null ? null : port;
    return function() {
      var or__7504__auto__ = cljs.core.async.impl.protocols.take_BANG_[goog.typeOf(x__8148__auto__)];
      if (or__7504__auto__) {
        return or__7504__auto__;
      } else {
        var or__7504__auto____$1 = cljs.core.async.impl.protocols.take_BANG_["_"];
        if (or__7504__auto____$1) {
          return or__7504__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ReadPort.take!", port);
        }
      }
    }().call(null, port, fn1_handler);
  }
};
cljs.core.async.impl.protocols.WritePort = function() {
  var obj27199 = {};
  return obj27199;
}();
cljs.core.async.impl.protocols.put_BANG_ = function put_BANG_(port, val, fn1_handler) {
  if (function() {
    var and__7492__auto__ = port;
    if (and__7492__auto__) {
      return port.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3;
    } else {
      return and__7492__auto__;
    }
  }()) {
    return port.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3(port, val, fn1_handler);
  } else {
    var x__8148__auto__ = port == null ? null : port;
    return function() {
      var or__7504__auto__ = cljs.core.async.impl.protocols.put_BANG_[goog.typeOf(x__8148__auto__)];
      if (or__7504__auto__) {
        return or__7504__auto__;
      } else {
        var or__7504__auto____$1 = cljs.core.async.impl.protocols.put_BANG_["_"];
        if (or__7504__auto____$1) {
          return or__7504__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "WritePort.put!", port);
        }
      }
    }().call(null, port, val, fn1_handler);
  }
};
cljs.core.async.impl.protocols.Channel = function() {
  var obj27201 = {};
  return obj27201;
}();
cljs.core.async.impl.protocols.close_BANG_ = function close_BANG_(chan) {
  if (function() {
    var and__7492__auto__ = chan;
    if (and__7492__auto__) {
      return chan.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1;
    } else {
      return and__7492__auto__;
    }
  }()) {
    return chan.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1(chan);
  } else {
    var x__8148__auto__ = chan == null ? null : chan;
    return function() {
      var or__7504__auto__ = cljs.core.async.impl.protocols.close_BANG_[goog.typeOf(x__8148__auto__)];
      if (or__7504__auto__) {
        return or__7504__auto__;
      } else {
        var or__7504__auto____$1 = cljs.core.async.impl.protocols.close_BANG_["_"];
        if (or__7504__auto____$1) {
          return or__7504__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Channel.close!", chan);
        }
      }
    }().call(null, chan);
  }
};
cljs.core.async.impl.protocols.closed_QMARK_ = function closed_QMARK_(chan) {
  if (function() {
    var and__7492__auto__ = chan;
    if (and__7492__auto__) {
      return chan.cljs$core$async$impl$protocols$Channel$closed_QMARK_$arity$1;
    } else {
      return and__7492__auto__;
    }
  }()) {
    return chan.cljs$core$async$impl$protocols$Channel$closed_QMARK_$arity$1(chan);
  } else {
    var x__8148__auto__ = chan == null ? null : chan;
    return function() {
      var or__7504__auto__ = cljs.core.async.impl.protocols.closed_QMARK_[goog.typeOf(x__8148__auto__)];
      if (or__7504__auto__) {
        return or__7504__auto__;
      } else {
        var or__7504__auto____$1 = cljs.core.async.impl.protocols.closed_QMARK_["_"];
        if (or__7504__auto____$1) {
          return or__7504__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Channel.closed?", chan);
        }
      }
    }().call(null, chan);
  }
};
cljs.core.async.impl.protocols.Handler = function() {
  var obj27203 = {};
  return obj27203;
}();
cljs.core.async.impl.protocols.active_QMARK_ = function active_QMARK_(h) {
  if (function() {
    var and__7492__auto__ = h;
    if (and__7492__auto__) {
      return h.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1;
    } else {
      return and__7492__auto__;
    }
  }()) {
    return h.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1(h);
  } else {
    var x__8148__auto__ = h == null ? null : h;
    return function() {
      var or__7504__auto__ = cljs.core.async.impl.protocols.active_QMARK_[goog.typeOf(x__8148__auto__)];
      if (or__7504__auto__) {
        return or__7504__auto__;
      } else {
        var or__7504__auto____$1 = cljs.core.async.impl.protocols.active_QMARK_["_"];
        if (or__7504__auto____$1) {
          return or__7504__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Handler.active?", h);
        }
      }
    }().call(null, h);
  }
};
cljs.core.async.impl.protocols.commit = function commit(h) {
  if (function() {
    var and__7492__auto__ = h;
    if (and__7492__auto__) {
      return h.cljs$core$async$impl$protocols$Handler$commit$arity$1;
    } else {
      return and__7492__auto__;
    }
  }()) {
    return h.cljs$core$async$impl$protocols$Handler$commit$arity$1(h);
  } else {
    var x__8148__auto__ = h == null ? null : h;
    return function() {
      var or__7504__auto__ = cljs.core.async.impl.protocols.commit[goog.typeOf(x__8148__auto__)];
      if (or__7504__auto__) {
        return or__7504__auto__;
      } else {
        var or__7504__auto____$1 = cljs.core.async.impl.protocols.commit["_"];
        if (or__7504__auto____$1) {
          return or__7504__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Handler.commit", h);
        }
      }
    }().call(null, h);
  }
};
cljs.core.async.impl.protocols.Buffer = function() {
  var obj27205 = {};
  return obj27205;
}();
cljs.core.async.impl.protocols.full_QMARK_ = function full_QMARK_(b) {
  if (function() {
    var and__7492__auto__ = b;
    if (and__7492__auto__) {
      return b.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1;
    } else {
      return and__7492__auto__;
    }
  }()) {
    return b.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1(b);
  } else {
    var x__8148__auto__ = b == null ? null : b;
    return function() {
      var or__7504__auto__ = cljs.core.async.impl.protocols.full_QMARK_[goog.typeOf(x__8148__auto__)];
      if (or__7504__auto__) {
        return or__7504__auto__;
      } else {
        var or__7504__auto____$1 = cljs.core.async.impl.protocols.full_QMARK_["_"];
        if (or__7504__auto____$1) {
          return or__7504__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Buffer.full?", b);
        }
      }
    }().call(null, b);
  }
};
cljs.core.async.impl.protocols.remove_BANG_ = function remove_BANG_(b) {
  if (function() {
    var and__7492__auto__ = b;
    if (and__7492__auto__) {
      return b.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1;
    } else {
      return and__7492__auto__;
    }
  }()) {
    return b.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1(b);
  } else {
    var x__8148__auto__ = b == null ? null : b;
    return function() {
      var or__7504__auto__ = cljs.core.async.impl.protocols.remove_BANG_[goog.typeOf(x__8148__auto__)];
      if (or__7504__auto__) {
        return or__7504__auto__;
      } else {
        var or__7504__auto____$1 = cljs.core.async.impl.protocols.remove_BANG_["_"];
        if (or__7504__auto____$1) {
          return or__7504__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Buffer.remove!", b);
        }
      }
    }().call(null, b);
  }
};
cljs.core.async.impl.protocols.add_BANG__STAR_ = function add_BANG__STAR_(b, itm) {
  if (function() {
    var and__7492__auto__ = b;
    if (and__7492__auto__) {
      return b.cljs$core$async$impl$protocols$Buffer$add_BANG__STAR_$arity$2;
    } else {
      return and__7492__auto__;
    }
  }()) {
    return b.cljs$core$async$impl$protocols$Buffer$add_BANG__STAR_$arity$2(b, itm);
  } else {
    var x__8148__auto__ = b == null ? null : b;
    return function() {
      var or__7504__auto__ = cljs.core.async.impl.protocols.add_BANG__STAR_[goog.typeOf(x__8148__auto__)];
      if (or__7504__auto__) {
        return or__7504__auto__;
      } else {
        var or__7504__auto____$1 = cljs.core.async.impl.protocols.add_BANG__STAR_["_"];
        if (or__7504__auto____$1) {
          return or__7504__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Buffer.add!*", b);
        }
      }
    }().call(null, b, itm);
  }
};
cljs.core.async.impl.protocols.add_BANG_ = function() {
  var add_BANG_ = null;
  var add_BANG___1 = function(b) {
    return b;
  };
  var add_BANG___2 = function(b, itm) {
    if (!(itm == null)) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), new cljs.core.Symbol(null, "itm", "itm", -713282527, null)))))].join(""));
    }
    return cljs.core.async.impl.protocols.add_BANG__STAR_.call(null, b, itm);
  };
  add_BANG_ = function(b, itm) {
    switch(arguments.length) {
      case 1:
        return add_BANG___1.call(this, b);
      case 2:
        return add_BANG___2.call(this, b, itm);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  add_BANG_.cljs$core$IFn$_invoke$arity$1 = add_BANG___1;
  add_BANG_.cljs$core$IFn$_invoke$arity$2 = add_BANG___2;
  return add_BANG_;
}();
cljs.core.async.impl.protocols.UnblockingBuffer = function() {
  var obj27207 = {};
  return obj27207;
}();
goog.provide("cljs.core.async.impl.buffers");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.protocols");
cljs.core.async.impl.buffers.acopy = function acopy(src, src_start, dest, dest_start, len) {
  var cnt = 0;
  while (true) {
    if (cnt < len) {
      dest[dest_start + cnt] = src[src_start + cnt];
      var G__27210 = cnt + 1;
      cnt = G__27210;
      continue;
    } else {
      return null;
    }
    break;
  }
};
cljs.core.async.impl.buffers.RingBuffer = function(head, tail, length, arr) {
  this.head = head;
  this.tail = tail;
  this.length = length;
  this.arr = arr;
};
cljs.core.async.impl.buffers.RingBuffer.prototype.pop = function() {
  var self__ = this;
  var _ = this;
  if (self__.length === 0) {
    return null;
  } else {
    var x = self__.arr[self__.tail];
    self__.arr[self__.tail] = null;
    self__.tail = (self__.tail + 1) % self__.arr.length;
    self__.length = self__.length - 1;
    return x;
  }
};
cljs.core.async.impl.buffers.RingBuffer.prototype.unshift = function(x) {
  var self__ = this;
  var _ = this;
  self__.arr[self__.head] = x;
  self__.head = (self__.head + 1) % self__.arr.length;
  self__.length = self__.length + 1;
  return null;
};
cljs.core.async.impl.buffers.RingBuffer.prototype.unbounded_unshift = function(x) {
  var self__ = this;
  var this$ = this;
  if (self__.length + 1 === self__.arr.length) {
    this$.resize();
  } else {
  }
  return this$.unshift(x);
};
cljs.core.async.impl.buffers.RingBuffer.prototype.resize = function() {
  var self__ = this;
  var _ = this;
  var new_arr_size = self__.arr.length * 2;
  var new_arr = new Array(new_arr_size);
  if (self__.tail < self__.head) {
    cljs.core.async.impl.buffers.acopy.call(null, self__.arr, self__.tail, new_arr, 0, self__.length);
    self__.tail = 0;
    self__.head = self__.length;
    return self__.arr = new_arr;
  } else {
    if (self__.tail > self__.head) {
      cljs.core.async.impl.buffers.acopy.call(null, self__.arr, self__.tail, new_arr, 0, self__.arr.length - self__.tail);
      cljs.core.async.impl.buffers.acopy.call(null, self__.arr, 0, new_arr, self__.arr.length - self__.tail, self__.head);
      self__.tail = 0;
      self__.head = self__.length;
      return self__.arr = new_arr;
    } else {
      if (self__.tail === self__.head) {
        self__.tail = 0;
        self__.head = 0;
        return self__.arr = new_arr;
      } else {
        return null;
      }
    }
  }
};
cljs.core.async.impl.buffers.RingBuffer.prototype.cleanup = function(keep_QMARK_) {
  var self__ = this;
  var this$ = this;
  var n__8391__auto__ = self__.length;
  var x = 0;
  while (true) {
    if (x < n__8391__auto__) {
      var v_27211 = this$.pop();
      if (keep_QMARK_.call(null, v_27211)) {
        this$.unshift(v_27211);
      } else {
      }
      var G__27212 = x + 1;
      x = G__27212;
      continue;
    } else {
      return null;
    }
    break;
  }
};
cljs.core.async.impl.buffers.RingBuffer.cljs$lang$type = true;
cljs.core.async.impl.buffers.RingBuffer.cljs$lang$ctorStr = "cljs.core.async.impl.buffers/RingBuffer";
cljs.core.async.impl.buffers.RingBuffer.cljs$lang$ctorPrWriter = function(this__8091__auto__, writer__8092__auto__, opt__8093__auto__) {
  return cljs.core._write.call(null, writer__8092__auto__, "cljs.core.async.impl.buffers/RingBuffer");
};
cljs.core.async.impl.buffers.__GT_RingBuffer = function __GT_RingBuffer(head, tail, length, arr) {
  return new cljs.core.async.impl.buffers.RingBuffer(head, tail, length, arr);
};
cljs.core.async.impl.buffers.ring_buffer = function ring_buffer(n) {
  if (n > 0) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("Can't create a ring buffer of size 0"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "\x3e", "\x3e", 1085014381, null), new cljs.core.Symbol(null, "n", "n", -2092305744, null), 0)))].join(""));
  }
  return new cljs.core.async.impl.buffers.RingBuffer(0, 0, 0, new Array(n));
};
cljs.core.async.impl.buffers.FixedBuffer = function(buf, n) {
  this.buf = buf;
  this.n = n;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2;
};
cljs.core.async.impl.buffers.FixedBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.length;
};
cljs.core.async.impl.buffers.FixedBuffer.prototype.cljs$core$async$impl$protocols$Buffer$ = true;
cljs.core.async.impl.buffers.FixedBuffer.prototype.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.length === self__.n;
};
cljs.core.async.impl.buffers.FixedBuffer.prototype.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.pop();
};
cljs.core.async.impl.buffers.FixedBuffer.prototype.cljs$core$async$impl$protocols$Buffer$add_BANG__STAR_$arity$2 = function(this$, itm) {
  var self__ = this;
  var this$__$1 = this;
  self__.buf.unbounded_unshift(itm);
  return this$__$1;
};
cljs.core.async.impl.buffers.FixedBuffer.cljs$lang$type = true;
cljs.core.async.impl.buffers.FixedBuffer.cljs$lang$ctorStr = "cljs.core.async.impl.buffers/FixedBuffer";
cljs.core.async.impl.buffers.FixedBuffer.cljs$lang$ctorPrWriter = function(this__8091__auto__, writer__8092__auto__, opt__8093__auto__) {
  return cljs.core._write.call(null, writer__8092__auto__, "cljs.core.async.impl.buffers/FixedBuffer");
};
cljs.core.async.impl.buffers.__GT_FixedBuffer = function __GT_FixedBuffer(buf, n) {
  return new cljs.core.async.impl.buffers.FixedBuffer(buf, n);
};
cljs.core.async.impl.buffers.fixed_buffer = function fixed_buffer(n) {
  return new cljs.core.async.impl.buffers.FixedBuffer(cljs.core.async.impl.buffers.ring_buffer.call(null, n), n);
};
cljs.core.async.impl.buffers.DroppingBuffer = function(buf, n) {
  this.buf = buf;
  this.n = n;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2;
};
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.length;
};
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$ = true;
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return false;
};
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.pop();
};
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$add_BANG__STAR_$arity$2 = function(this$, itm) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.buf.length === self__.n) {
  } else {
    self__.buf.unshift(itm);
  }
  return this$__$1;
};
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$async$impl$protocols$UnblockingBuffer$ = true;
cljs.core.async.impl.buffers.DroppingBuffer.cljs$lang$type = true;
cljs.core.async.impl.buffers.DroppingBuffer.cljs$lang$ctorStr = "cljs.core.async.impl.buffers/DroppingBuffer";
cljs.core.async.impl.buffers.DroppingBuffer.cljs$lang$ctorPrWriter = function(this__8091__auto__, writer__8092__auto__, opt__8093__auto__) {
  return cljs.core._write.call(null, writer__8092__auto__, "cljs.core.async.impl.buffers/DroppingBuffer");
};
cljs.core.async.impl.buffers.__GT_DroppingBuffer = function __GT_DroppingBuffer(buf, n) {
  return new cljs.core.async.impl.buffers.DroppingBuffer(buf, n);
};
cljs.core.async.impl.buffers.dropping_buffer = function dropping_buffer(n) {
  return new cljs.core.async.impl.buffers.DroppingBuffer(cljs.core.async.impl.buffers.ring_buffer.call(null, n), n);
};
cljs.core.async.impl.buffers.SlidingBuffer = function(buf, n) {
  this.buf = buf;
  this.n = n;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2;
};
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.length;
};
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$ = true;
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return false;
};
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.pop();
};
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$add_BANG__STAR_$arity$2 = function(this$, itm) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.buf.length === self__.n) {
    cljs.core.async.impl.protocols.remove_BANG_.call(null, this$__$1);
  } else {
  }
  self__.buf.unshift(itm);
  return this$__$1;
};
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$async$impl$protocols$UnblockingBuffer$ = true;
cljs.core.async.impl.buffers.SlidingBuffer.cljs$lang$type = true;
cljs.core.async.impl.buffers.SlidingBuffer.cljs$lang$ctorStr = "cljs.core.async.impl.buffers/SlidingBuffer";
cljs.core.async.impl.buffers.SlidingBuffer.cljs$lang$ctorPrWriter = function(this__8091__auto__, writer__8092__auto__, opt__8093__auto__) {
  return cljs.core._write.call(null, writer__8092__auto__, "cljs.core.async.impl.buffers/SlidingBuffer");
};
cljs.core.async.impl.buffers.__GT_SlidingBuffer = function __GT_SlidingBuffer(buf, n) {
  return new cljs.core.async.impl.buffers.SlidingBuffer(buf, n);
};
cljs.core.async.impl.buffers.sliding_buffer = function sliding_buffer(n) {
  return new cljs.core.async.impl.buffers.SlidingBuffer(cljs.core.async.impl.buffers.ring_buffer.call(null, n), n);
};
goog.provide("goog.debug.EntryPointMonitor");
goog.provide("goog.debug.entryPointRegistry");
goog.require("goog.asserts");
goog.debug.EntryPointMonitor = function() {
};
goog.debug.EntryPointMonitor.prototype.wrap;
goog.debug.EntryPointMonitor.prototype.unwrap;
goog.debug.entryPointRegistry.refList_ = [];
goog.debug.entryPointRegistry.monitors_ = [];
goog.debug.entryPointRegistry.monitorsMayExist_ = false;
goog.debug.entryPointRegistry.register = function(callback) {
  goog.debug.entryPointRegistry.refList_[goog.debug.entryPointRegistry.refList_.length] = callback;
  if (goog.debug.entryPointRegistry.monitorsMayExist_) {
    var monitors = goog.debug.entryPointRegistry.monitors_;
    for (var i = 0;i < monitors.length;i++) {
      callback(goog.bind(monitors[i].wrap, monitors[i]));
    }
  }
};
goog.debug.entryPointRegistry.monitorAll = function(monitor) {
  goog.debug.entryPointRegistry.monitorsMayExist_ = true;
  var transformer = goog.bind(monitor.wrap, monitor);
  for (var i = 0;i < goog.debug.entryPointRegistry.refList_.length;i++) {
    goog.debug.entryPointRegistry.refList_[i](transformer);
  }
  goog.debug.entryPointRegistry.monitors_.push(monitor);
};
goog.debug.entryPointRegistry.unmonitorAllIfPossible = function(monitor) {
  var monitors = goog.debug.entryPointRegistry.monitors_;
  goog.asserts.assert(monitor == monitors[monitors.length - 1], "Only the most recent monitor can be unwrapped.");
  var transformer = goog.bind(monitor.unwrap, monitor);
  for (var i = 0;i < goog.debug.entryPointRegistry.refList_.length;i++) {
    goog.debug.entryPointRegistry.refList_[i](transformer);
  }
  monitors.length--;
};
goog.provide("goog.functions");
goog.functions.constant = function(retValue) {
  return function() {
    return retValue;
  };
};
goog.functions.FALSE = goog.functions.constant(false);
goog.functions.TRUE = goog.functions.constant(true);
goog.functions.NULL = goog.functions.constant(null);
goog.functions.identity = function(opt_returnValue, var_args) {
  return opt_returnValue;
};
goog.functions.error = function(message) {
  return function() {
    throw Error(message);
  };
};
goog.functions.fail = function(err) {
  return function() {
    throw err;
  };
};
goog.functions.lock = function(f, opt_numArgs) {
  opt_numArgs = opt_numArgs || 0;
  return function() {
    return f.apply(this, Array.prototype.slice.call(arguments, 0, opt_numArgs));
  };
};
goog.functions.nth = function(n) {
  return function() {
    return arguments[n];
  };
};
goog.functions.withReturnValue = function(f, retValue) {
  return goog.functions.sequence(f, goog.functions.constant(retValue));
};
goog.functions.compose = function(fn, var_args) {
  var functions = arguments;
  var length = functions.length;
  return function() {
    var result;
    if (length) {
      result = functions[length - 1].apply(this, arguments);
    }
    for (var i = length - 2;i >= 0;i--) {
      result = functions[i].call(this, result);
    }
    return result;
  };
};
goog.functions.sequence = function(var_args) {
  var functions = arguments;
  var length = functions.length;
  return function() {
    var result;
    for (var i = 0;i < length;i++) {
      result = functions[i].apply(this, arguments);
    }
    return result;
  };
};
goog.functions.and = function(var_args) {
  var functions = arguments;
  var length = functions.length;
  return function() {
    for (var i = 0;i < length;i++) {
      if (!functions[i].apply(this, arguments)) {
        return false;
      }
    }
    return true;
  };
};
goog.functions.or = function(var_args) {
  var functions = arguments;
  var length = functions.length;
  return function() {
    for (var i = 0;i < length;i++) {
      if (functions[i].apply(this, arguments)) {
        return true;
      }
    }
    return false;
  };
};
goog.functions.not = function(f) {
  return function() {
    return!f.apply(this, arguments);
  };
};
goog.functions.create = function(constructor, var_args) {
  var temp = function() {
  };
  temp.prototype = constructor.prototype;
  var obj = new temp;
  constructor.apply(obj, Array.prototype.slice.call(arguments, 1));
  return obj;
};
goog.define("goog.functions.CACHE_RETURN_VALUE", true);
goog.functions.cacheReturnValue = function(fn) {
  var called = false;
  var value;
  return function() {
    if (!goog.functions.CACHE_RETURN_VALUE) {
      return fn();
    }
    if (!called) {
      value = fn();
      called = true;
    }
    return value;
  };
};
goog.provide("goog.async.nextTick");
goog.provide("goog.async.throwException");
goog.require("goog.debug.entryPointRegistry");
goog.require("goog.functions");
goog.async.throwException = function(exception) {
  goog.global.setTimeout(function() {
    throw exception;
  }, 0);
};
goog.async.nextTick = function(callback, opt_context) {
  var cb = callback;
  if (opt_context) {
    cb = goog.bind(callback, opt_context);
  }
  cb = goog.async.nextTick.wrapCallback_(cb);
  if (goog.isFunction(goog.global.setImmediate)) {
    goog.global.setImmediate(cb);
    return;
  }
  if (!goog.async.nextTick.setImmediate_) {
    goog.async.nextTick.setImmediate_ = goog.async.nextTick.getSetImmediateEmulator_();
  }
  goog.async.nextTick.setImmediate_(cb);
};
goog.async.nextTick.setImmediate_;
goog.async.nextTick.getSetImmediateEmulator_ = function() {
  var Channel = goog.global["MessageChannel"];
  if (typeof Channel === "undefined" && typeof window !== "undefined" && window.postMessage && window.addEventListener) {
    Channel = function() {
      var iframe = document.createElement("iframe");
      iframe.style.display = "none";
      iframe.src = "";
      document.documentElement.appendChild(iframe);
      var win = iframe.contentWindow;
      var doc = win.document;
      doc.open();
      doc.write("");
      doc.close();
      var message = "callImmediate" + Math.random();
      var origin = win.location.protocol == "file:" ? "*" : win.location.protocol + "//" + win.location.host;
      var onmessage = goog.bind(function(e) {
        if (e.origin != origin && e.data != message) {
          return;
        }
        this["port1"].onmessage();
      }, this);
      win.addEventListener("message", onmessage, false);
      this["port1"] = {};
      this["port2"] = {postMessage:function() {
        win.postMessage(message, origin);
      }};
    };
  }
  if (typeof Channel !== "undefined") {
    var channel = new Channel;
    var head = {};
    var tail = head;
    channel["port1"].onmessage = function() {
      head = head.next;
      var cb = head.cb;
      head.cb = null;
      cb();
    };
    return function(cb) {
      tail.next = {cb:cb};
      tail = tail.next;
      channel["port2"].postMessage(0);
    };
  }
  if (typeof document !== "undefined" && "onreadystatechange" in document.createElement("script")) {
    return function(cb) {
      var script = document.createElement("script");
      script.onreadystatechange = function() {
        script.onreadystatechange = null;
        script.parentNode.removeChild(script);
        script = null;
        cb();
        cb = null;
      };
      document.documentElement.appendChild(script);
    };
  }
  return function(cb) {
    goog.global.setTimeout(cb, 0);
  };
};
goog.async.nextTick.wrapCallback_ = goog.functions.identity;
goog.debug.entryPointRegistry.register(function(transformer) {
  goog.async.nextTick.wrapCallback_ = transformer;
});
goog.provide("cljs.core.async.impl.dispatch");
goog.require("cljs.core");
goog.require("goog.async.nextTick");
goog.require("cljs.core.async.impl.buffers");
cljs.core.async.impl.dispatch.tasks = cljs.core.async.impl.buffers.ring_buffer.call(null, 32);
cljs.core.async.impl.dispatch.running_QMARK_ = false;
cljs.core.async.impl.dispatch.queued_QMARK_ = false;
cljs.core.async.impl.dispatch.TASK_BATCH_SIZE = 1024;
cljs.core.async.impl.dispatch.process_messages = function process_messages() {
  cljs.core.async.impl.dispatch.running_QMARK_ = true;
  cljs.core.async.impl.dispatch.queued_QMARK_ = false;
  var count_27215 = 0;
  while (true) {
    var m_27216 = cljs.core.async.impl.dispatch.tasks.pop();
    if (m_27216 == null) {
    } else {
      m_27216.call(null);
      if (count_27215 < cljs.core.async.impl.dispatch.TASK_BATCH_SIZE) {
        var G__27217 = count_27215 + 1;
        count_27215 = G__27217;
        continue;
      } else {
      }
    }
    break;
  }
  cljs.core.async.impl.dispatch.running_QMARK_ = false;
  if (cljs.core.async.impl.dispatch.tasks.length > 0) {
    return cljs.core.async.impl.dispatch.queue_dispatcher.call(null);
  } else {
    return null;
  }
};
cljs.core.async.impl.dispatch.queue_dispatcher = function queue_dispatcher() {
  if (cljs.core.truth_(function() {
    var and__7492__auto__ = cljs.core.async.impl.dispatch.queued_QMARK_;
    if (cljs.core.truth_(and__7492__auto__)) {
      return cljs.core.async.impl.dispatch.running_QMARK_;
    } else {
      return and__7492__auto__;
    }
  }())) {
    return null;
  } else {
    cljs.core.async.impl.dispatch.queued_QMARK_ = true;
    return goog.async.nextTick(cljs.core.async.impl.dispatch.process_messages);
  }
};
cljs.core.async.impl.dispatch.run = function run(f) {
  cljs.core.async.impl.dispatch.tasks.unbounded_unshift(f);
  return cljs.core.async.impl.dispatch.queue_dispatcher.call(null);
};
cljs.core.async.impl.dispatch.queue_delay = function queue_delay(f, delay) {
  return setTimeout(f, delay);
};
goog.provide("cljs.core.async.impl.channels");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.buffers");
goog.require("cljs.core.async.impl.dispatch");
goog.require("cljs.core.async.impl.protocols");
cljs.core.async.impl.channels.box = function box(val) {
  if (typeof cljs.core.async.impl.channels.t27223 !== "undefined") {
  } else {
    cljs.core.async.impl.channels.t27223 = function(val, box, meta27224) {
      this.val = val;
      this.box = box;
      this.meta27224 = meta27224;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 425984;
    };
    cljs.core.async.impl.channels.t27223.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return self__.val;
    };
    cljs.core.async.impl.channels.t27223.prototype.cljs$core$IMeta$_meta$arity$1 = function(_27225) {
      var self__ = this;
      var _27225__$1 = this;
      return self__.meta27224;
    };
    cljs.core.async.impl.channels.t27223.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_27225, meta27224__$1) {
      var self__ = this;
      var _27225__$1 = this;
      return new cljs.core.async.impl.channels.t27223(self__.val, self__.box, meta27224__$1);
    };
    cljs.core.async.impl.channels.t27223.cljs$lang$type = true;
    cljs.core.async.impl.channels.t27223.cljs$lang$ctorStr = "cljs.core.async.impl.channels/t27223";
    cljs.core.async.impl.channels.t27223.cljs$lang$ctorPrWriter = function(this__8091__auto__, writer__8092__auto__, opt__8093__auto__) {
      return cljs.core._write.call(null, writer__8092__auto__, "cljs.core.async.impl.channels/t27223");
    };
    cljs.core.async.impl.channels.__GT_t27223 = function __GT_t27223(val__$1, box__$1, meta27224) {
      return new cljs.core.async.impl.channels.t27223(val__$1, box__$1, meta27224);
    };
  }
  return new cljs.core.async.impl.channels.t27223(val, box, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.core.async.impl.channels.PutBox = function(handler, val) {
  this.handler = handler;
  this.val = val;
};
cljs.core.async.impl.channels.PutBox.cljs$lang$type = true;
cljs.core.async.impl.channels.PutBox.cljs$lang$ctorStr = "cljs.core.async.impl.channels/PutBox";
cljs.core.async.impl.channels.PutBox.cljs$lang$ctorPrWriter = function(this__8091__auto__, writer__8092__auto__, opt__8093__auto__) {
  return cljs.core._write.call(null, writer__8092__auto__, "cljs.core.async.impl.channels/PutBox");
};
cljs.core.async.impl.channels.__GT_PutBox = function __GT_PutBox(handler, val) {
  return new cljs.core.async.impl.channels.PutBox(handler, val);
};
cljs.core.async.impl.channels.put_active_QMARK_ = function put_active_QMARK_(box) {
  return cljs.core.async.impl.protocols.active_QMARK_.call(null, box.handler);
};
cljs.core.async.impl.channels.MAX_DIRTY = 64;
cljs.core.async.impl.channels.MMC = function() {
  var obj27227 = {};
  return obj27227;
}();
cljs.core.async.impl.channels.abort = function abort(this$) {
  if (function() {
    var and__7492__auto__ = this$;
    if (and__7492__auto__) {
      return this$.cljs$core$async$impl$channels$MMC$abort$arity$1;
    } else {
      return and__7492__auto__;
    }
  }()) {
    return this$.cljs$core$async$impl$channels$MMC$abort$arity$1(this$);
  } else {
    var x__8148__auto__ = this$ == null ? null : this$;
    return function() {
      var or__7504__auto__ = cljs.core.async.impl.channels.abort[goog.typeOf(x__8148__auto__)];
      if (or__7504__auto__) {
        return or__7504__auto__;
      } else {
        var or__7504__auto____$1 = cljs.core.async.impl.channels.abort["_"];
        if (or__7504__auto____$1) {
          return or__7504__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "MMC.abort", this$);
        }
      }
    }().call(null, this$);
  }
};
cljs.core.async.impl.channels.ManyToManyChannel = function(takes, dirty_takes, puts, dirty_puts, buf, closed, add_BANG_) {
  this.takes = takes;
  this.dirty_takes = dirty_takes;
  this.puts = puts;
  this.dirty_puts = dirty_puts;
  this.buf = buf;
  this.closed = closed;
  this.add_BANG_ = add_BANG_;
};
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$Channel$ = true;
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$Channel$closed_QMARK_$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.closed;
};
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.closed) {
    return null;
  } else {
    self__.closed = true;
    if (cljs.core.truth_(function() {
      var and__7492__auto__ = self__.buf;
      if (cljs.core.truth_(and__7492__auto__)) {
        return self__.puts.length === 0;
      } else {
        return and__7492__auto__;
      }
    }())) {
      self__.add_BANG_.call(null, self__.buf);
    } else {
    }
    while (true) {
      var taker_27228 = self__.takes.pop();
      if (taker_27228 == null) {
      } else {
        if (cljs.core.async.impl.protocols.active_QMARK_.call(null, taker_27228)) {
          var take_cb_27229 = cljs.core.async.impl.protocols.commit.call(null, taker_27228);
          var val_27230 = cljs.core.truth_(function() {
            var and__7492__auto__ = self__.buf;
            if (cljs.core.truth_(and__7492__auto__)) {
              return cljs.core.count.call(null, self__.buf) > 0;
            } else {
              return and__7492__auto__;
            }
          }()) ? cljs.core.async.impl.protocols.remove_BANG_.call(null, self__.buf) : null;
          cljs.core.async.impl.dispatch.run.call(null, function(take_cb_27229, val_27230, taker_27228, this$__$1) {
            return function() {
              return take_cb_27229.call(null, val_27230);
            };
          }(take_cb_27229, val_27230, taker_27228, this$__$1));
        } else {
        }
        continue;
      }
      break;
    }
    return null;
  }
};
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$ReadPort$ = true;
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2 = function(this$, handler) {
  var self__ = this;
  var this$__$1 = this;
  if (!cljs.core.async.impl.protocols.active_QMARK_.call(null, handler)) {
    return null;
  } else {
    if (!(self__.buf == null) && cljs.core.count.call(null, self__.buf) > 0) {
      var _ = cljs.core.async.impl.protocols.commit.call(null, handler);
      var retval = cljs.core.async.impl.channels.box.call(null, cljs.core.async.impl.protocols.remove_BANG_.call(null, self__.buf));
      while (true) {
        if (cljs.core.truth_(cljs.core.async.impl.protocols.full_QMARK_.call(null, self__.buf))) {
        } else {
          var putter_27231 = self__.puts.pop();
          if (putter_27231 == null) {
          } else {
            var put_handler_27232 = putter_27231.handler;
            var val_27233 = putter_27231.val;
            if (cljs.core.async.impl.protocols.active_QMARK_.call(null, put_handler_27232)) {
              var put_cb_27234 = cljs.core.async.impl.protocols.commit.call(null, put_handler_27232);
              cljs.core.async.impl.protocols.commit.call(null, handler);
              cljs.core.async.impl.dispatch.run.call(null, function(put_cb_27234, put_handler_27232, val_27233, putter_27231, _, retval, this$__$1) {
                return function() {
                  return put_cb_27234.call(null, true);
                };
              }(put_cb_27234, put_handler_27232, val_27233, putter_27231, _, retval, this$__$1));
              if (cljs.core.reduced_QMARK_.call(null, self__.add_BANG_.call(null, self__.buf, val_27233))) {
                cljs.core.async.impl.channels.abort.call(null, this$__$1);
              } else {
              }
            } else {
            }
            continue;
          }
        }
        break;
      }
      return retval;
    } else {
      var putter = function() {
        while (true) {
          var putter = self__.puts.pop();
          if (cljs.core.truth_(putter)) {
            if (cljs.core.async.impl.protocols.active_QMARK_.call(null, putter.handler)) {
              return putter;
            } else {
              continue;
            }
          } else {
            return null;
          }
          break;
        }
      }();
      if (cljs.core.truth_(putter)) {
        var put_cb = cljs.core.async.impl.protocols.commit.call(null, putter.handler);
        cljs.core.async.impl.protocols.commit.call(null, handler);
        cljs.core.async.impl.dispatch.run.call(null, function(put_cb, putter, this$__$1) {
          return function() {
            return put_cb.call(null, true);
          };
        }(put_cb, putter, this$__$1));
        return cljs.core.async.impl.channels.box.call(null, putter.val);
      } else {
        if (cljs.core.truth_(self__.closed)) {
          if (cljs.core.truth_(self__.buf)) {
            self__.add_BANG_.call(null, self__.buf);
          } else {
          }
          if (cljs.core.truth_(function() {
            var and__7492__auto__ = cljs.core.async.impl.protocols.active_QMARK_.call(null, handler);
            if (cljs.core.truth_(and__7492__auto__)) {
              return cljs.core.async.impl.protocols.commit.call(null, handler);
            } else {
              return and__7492__auto__;
            }
          }())) {
            var has_val = function() {
              var and__7492__auto__ = self__.buf;
              if (cljs.core.truth_(and__7492__auto__)) {
                return cljs.core.count.call(null, self__.buf) > 0;
              } else {
                return and__7492__auto__;
              }
            }();
            var val = cljs.core.truth_(has_val) ? cljs.core.async.impl.protocols.remove_BANG_.call(null, self__.buf) : null;
            return cljs.core.async.impl.channels.box.call(null, val);
          } else {
            return null;
          }
        } else {
          if (self__.dirty_takes > cljs.core.async.impl.channels.MAX_DIRTY) {
            self__.dirty_takes = 0;
            self__.takes.cleanup(cljs.core.async.impl.protocols.active_QMARK_);
          } else {
            self__.dirty_takes = self__.dirty_takes + 1;
          }
          if (self__.takes.length < cljs.core.async.impl.protocols.MAX_QUEUE_SIZE) {
          } else {
            throw new Error([cljs.core.str("Assert failed: "), cljs.core.str([cljs.core.str("No more than "), cljs.core.str(cljs.core.async.impl.protocols.MAX_QUEUE_SIZE), cljs.core.str(" pending takes are allowed on a single channel.")].join("")), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "\x3c", "\x3c", 993667236, null), cljs.core.list(new cljs.core.Symbol(null, ".-length", ".-length", -280799999, null), new cljs.core.Symbol(null, "takes", 
            "takes", 298247964, null)), new cljs.core.Symbol("impl", "MAX-QUEUE-SIZE", "impl/MAX-QUEUE-SIZE", 1508600732, null))))].join(""));
          }
          self__.takes.unbounded_unshift(handler);
          return null;
        }
      }
    }
  }
};
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$WritePort$ = true;
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3 = function(this$, val, handler) {
  var self__ = this;
  var this$__$1 = this;
  if (!(val == null)) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("Can't put nil in on a channel"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), new cljs.core.Symbol(null, "val", "val", 1769233139, null)))))].join(""));
  }
  var closed__$1 = self__.closed;
  if (closed__$1 || !cljs.core.async.impl.protocols.active_QMARK_.call(null, handler)) {
    return cljs.core.async.impl.channels.box.call(null, !closed__$1);
  } else {
    if (cljs.core.truth_(function() {
      var and__7492__auto__ = self__.buf;
      if (cljs.core.truth_(and__7492__auto__)) {
        return cljs.core.not.call(null, cljs.core.async.impl.protocols.full_QMARK_.call(null, self__.buf));
      } else {
        return and__7492__auto__;
      }
    }())) {
      cljs.core.async.impl.protocols.commit.call(null, handler);
      var done_QMARK_ = cljs.core.reduced_QMARK_.call(null, self__.add_BANG_.call(null, self__.buf, val));
      while (true) {
        if (self__.takes.length > 0 && cljs.core.count.call(null, self__.buf) > 0) {
          var taker_27235 = self__.takes.pop();
          if (cljs.core.async.impl.protocols.active_QMARK_.call(null, taker_27235)) {
            var take_cb_27236 = cljs.core.async.impl.protocols.commit.call(null, taker_27235);
            var val_27237__$1 = cljs.core.async.impl.protocols.remove_BANG_.call(null, self__.buf);
            cljs.core.async.impl.dispatch.run.call(null, function(take_cb_27236, val_27237__$1, taker_27235, done_QMARK_, closed__$1, this$__$1) {
              return function() {
                return take_cb_27236.call(null, val_27237__$1);
              };
            }(take_cb_27236, val_27237__$1, taker_27235, done_QMARK_, closed__$1, this$__$1));
          } else {
            continue;
          }
        } else {
        }
        break;
      }
      if (done_QMARK_) {
        cljs.core.async.impl.channels.abort.call(null, this$__$1);
      } else {
      }
      return cljs.core.async.impl.channels.box.call(null, true);
    } else {
      var taker = function() {
        while (true) {
          var taker = self__.takes.pop();
          if (cljs.core.truth_(taker)) {
            if (cljs.core.truth_(cljs.core.async.impl.protocols.active_QMARK_.call(null, taker))) {
              return taker;
            } else {
              continue;
            }
          } else {
            return null;
          }
          break;
        }
      }();
      if (cljs.core.truth_(taker)) {
        var take_cb = cljs.core.async.impl.protocols.commit.call(null, taker);
        cljs.core.async.impl.protocols.commit.call(null, handler);
        cljs.core.async.impl.dispatch.run.call(null, function(take_cb, taker, closed__$1, this$__$1) {
          return function() {
            return take_cb.call(null, val);
          };
        }(take_cb, taker, closed__$1, this$__$1));
        return cljs.core.async.impl.channels.box.call(null, true);
      } else {
        if (self__.dirty_puts > cljs.core.async.impl.channels.MAX_DIRTY) {
          self__.dirty_puts = 0;
          self__.puts.cleanup(cljs.core.async.impl.channels.put_active_QMARK_);
        } else {
          self__.dirty_puts = self__.dirty_puts + 1;
        }
        if (self__.puts.length < cljs.core.async.impl.protocols.MAX_QUEUE_SIZE) {
        } else {
          throw new Error([cljs.core.str("Assert failed: "), cljs.core.str([cljs.core.str("No more than "), cljs.core.str(cljs.core.async.impl.protocols.MAX_QUEUE_SIZE), cljs.core.str(" pending puts are allowed on a single channel."), cljs.core.str(" Consider using a windowed buffer.")].join("")), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "\x3c", "\x3c", 993667236, null), cljs.core.list(new cljs.core.Symbol(null, ".-length", ".-length", 
          -280799999, null), new cljs.core.Symbol(null, "puts", "puts", -1883877054, null)), new cljs.core.Symbol("impl", "MAX-QUEUE-SIZE", "impl/MAX-QUEUE-SIZE", 1508600732, null))))].join(""));
        }
        self__.puts.unbounded_unshift(new cljs.core.async.impl.channels.PutBox(handler, val));
        return null;
      }
    }
  }
};
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$channels$MMC$ = true;
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$channels$MMC$abort$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  while (true) {
    var putter_27238 = self__.puts.pop();
    if (putter_27238 == null) {
    } else {
      var put_handler_27239 = putter_27238.handler;
      var val_27240 = putter_27238.val;
      if (cljs.core.async.impl.protocols.active_QMARK_.call(null, put_handler_27239)) {
        var put_cb_27241 = cljs.core.async.impl.protocols.commit.call(null, put_handler_27239);
        cljs.core.async.impl.dispatch.run.call(null, function(put_cb_27241, put_handler_27239, val_27240, putter_27238, this$__$1) {
          return function() {
            return put_cb_27241.call(null, true);
          };
        }(put_cb_27241, put_handler_27239, val_27240, putter_27238, this$__$1));
      } else {
        continue;
      }
    }
    break;
  }
  self__.puts.cleanup(cljs.core.constantly.call(null, false));
  return cljs.core.async.impl.protocols.close_BANG_.call(null, this$__$1);
};
cljs.core.async.impl.channels.ManyToManyChannel.cljs$lang$type = true;
cljs.core.async.impl.channels.ManyToManyChannel.cljs$lang$ctorStr = "cljs.core.async.impl.channels/ManyToManyChannel";
cljs.core.async.impl.channels.ManyToManyChannel.cljs$lang$ctorPrWriter = function(this__8091__auto__, writer__8092__auto__, opt__8093__auto__) {
  return cljs.core._write.call(null, writer__8092__auto__, "cljs.core.async.impl.channels/ManyToManyChannel");
};
cljs.core.async.impl.channels.__GT_ManyToManyChannel = function __GT_ManyToManyChannel(takes, dirty_takes, puts, dirty_puts, buf, closed, add_BANG_) {
  return new cljs.core.async.impl.channels.ManyToManyChannel(takes, dirty_takes, puts, dirty_puts, buf, closed, add_BANG_);
};
cljs.core.async.impl.channels.ex_handler = function ex_handler(ex) {
  console.log(ex);
  return null;
};
cljs.core.async.impl.channels.handle = function handle(buf, exh, t) {
  var else$ = function() {
    var or__7504__auto__ = exh;
    if (cljs.core.truth_(or__7504__auto__)) {
      return or__7504__auto__;
    } else {
      return cljs.core.async.impl.channels.ex_handler;
    }
  }().call(null, t);
  if (else$ == null) {
    return buf;
  } else {
    return cljs.core.async.impl.protocols.add_BANG_.call(null, buf, else$);
  }
};
cljs.core.async.impl.channels.chan = function() {
  var chan = null;
  var chan__1 = function(buf) {
    return chan.call(null, buf, null);
  };
  var chan__2 = function(buf, xform) {
    return chan.call(null, buf, xform, null);
  };
  var chan__3 = function(buf, xform, exh) {
    return new cljs.core.async.impl.channels.ManyToManyChannel(cljs.core.async.impl.buffers.ring_buffer.call(null, 32), 0, cljs.core.async.impl.buffers.ring_buffer.call(null, 32), 0, buf, false, function() {
      var add_BANG_ = cljs.core.truth_(xform) ? xform.call(null, cljs.core.async.impl.protocols.add_BANG_) : cljs.core.async.impl.protocols.add_BANG_;
      return function(add_BANG_) {
        return function() {
          var G__27246 = null;
          var G__27246__1 = function(buf__$1) {
            try {
              return add_BANG_.call(null, buf__$1);
            } catch (e27244) {
              var t = e27244;
              return cljs.core.async.impl.channels.handle.call(null, buf__$1, exh, t);
            }
          };
          var G__27246__2 = function(buf__$1, val) {
            try {
              return add_BANG_.call(null, buf__$1, val);
            } catch (e27245) {
              var t = e27245;
              return cljs.core.async.impl.channels.handle.call(null, buf__$1, exh, t);
            }
          };
          G__27246 = function(buf__$1, val) {
            switch(arguments.length) {
              case 1:
                return G__27246__1.call(this, buf__$1);
              case 2:
                return G__27246__2.call(this, buf__$1, val);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__27246.cljs$core$IFn$_invoke$arity$1 = G__27246__1;
          G__27246.cljs$core$IFn$_invoke$arity$2 = G__27246__2;
          return G__27246;
        }();
      }(add_BANG_);
    }());
  };
  chan = function(buf, xform, exh) {
    switch(arguments.length) {
      case 1:
        return chan__1.call(this, buf);
      case 2:
        return chan__2.call(this, buf, xform);
      case 3:
        return chan__3.call(this, buf, xform, exh);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  chan.cljs$core$IFn$_invoke$arity$1 = chan__1;
  chan.cljs$core$IFn$_invoke$arity$2 = chan__2;
  chan.cljs$core$IFn$_invoke$arity$3 = chan__3;
  return chan;
}();
goog.provide("cljs.core.async.impl.ioc_helpers");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.protocols");
cljs.core.async.impl.ioc_helpers.FN_IDX = 0;
cljs.core.async.impl.ioc_helpers.STATE_IDX = 1;
cljs.core.async.impl.ioc_helpers.VALUE_IDX = 2;
cljs.core.async.impl.ioc_helpers.BINDINGS_IDX = 3;
cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES = 4;
cljs.core.async.impl.ioc_helpers.CURRENT_EXCEPTION = 5;
cljs.core.async.impl.ioc_helpers.USER_START_IDX = 6;
cljs.core.async.impl.ioc_helpers.aset_object = function aset_object(arr, idx, o) {
  return arr[idx][o];
};
cljs.core.async.impl.ioc_helpers.aget_object = function aget_object(arr, idx) {
  return arr[idx];
};
cljs.core.async.impl.ioc_helpers.finished_QMARK_ = function finished_QMARK_(state_array) {
  return cljs.core.keyword_identical_QMARK_.call(null, state_array[cljs.core.async.impl.ioc_helpers.STATE_IDX], new cljs.core.Keyword(null, "finished", "finished", -1018867731));
};
cljs.core.async.impl.ioc_helpers.fn_handler = function fn_handler(f) {
  if (typeof cljs.core.async.impl.ioc_helpers.t27155 !== "undefined") {
  } else {
    cljs.core.async.impl.ioc_helpers.t27155 = function(f, fn_handler, meta27156) {
      this.f = f;
      this.fn_handler = fn_handler;
      this.meta27156 = meta27156;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    cljs.core.async.impl.ioc_helpers.t27155.prototype.cljs$core$async$impl$protocols$Handler$ = true;
    cljs.core.async.impl.ioc_helpers.t27155.prototype.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return true;
    };
    cljs.core.async.impl.ioc_helpers.t27155.prototype.cljs$core$async$impl$protocols$Handler$commit$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return self__.f;
    };
    cljs.core.async.impl.ioc_helpers.t27155.prototype.cljs$core$IMeta$_meta$arity$1 = function(_27157) {
      var self__ = this;
      var _27157__$1 = this;
      return self__.meta27156;
    };
    cljs.core.async.impl.ioc_helpers.t27155.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_27157, meta27156__$1) {
      var self__ = this;
      var _27157__$1 = this;
      return new cljs.core.async.impl.ioc_helpers.t27155(self__.f, self__.fn_handler, meta27156__$1);
    };
    cljs.core.async.impl.ioc_helpers.t27155.cljs$lang$type = true;
    cljs.core.async.impl.ioc_helpers.t27155.cljs$lang$ctorStr = "cljs.core.async.impl.ioc-helpers/t27155";
    cljs.core.async.impl.ioc_helpers.t27155.cljs$lang$ctorPrWriter = function(this__8091__auto__, writer__8092__auto__, opt__8093__auto__) {
      return cljs.core._write.call(null, writer__8092__auto__, "cljs.core.async.impl.ioc-helpers/t27155");
    };
    cljs.core.async.impl.ioc_helpers.__GT_t27155 = function __GT_t27155(f__$1, fn_handler__$1, meta27156) {
      return new cljs.core.async.impl.ioc_helpers.t27155(f__$1, fn_handler__$1, meta27156);
    };
  }
  return new cljs.core.async.impl.ioc_helpers.t27155(f, fn_handler, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.core.async.impl.ioc_helpers.run_state_machine = function run_state_machine(state) {
  return cljs.core.async.impl.ioc_helpers.aget_object.call(null, state, cljs.core.async.impl.ioc_helpers.FN_IDX).call(null, state);
};
cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped = function run_state_machine_wrapped(state) {
  try {
    return cljs.core.async.impl.ioc_helpers.run_state_machine.call(null, state);
  } catch (e27159) {
    if (e27159 instanceof Object) {
      var ex = e27159;
      cljs.core.async.impl.protocols.close_BANG_.call(null, cljs.core.async.impl.ioc_helpers.aget_object.call(null, state, cljs.core.async.impl.ioc_helpers.USER_START_IDX));
      throw ex;
    } else {
      throw e27159;
    }
  }
};
cljs.core.async.impl.ioc_helpers.take_BANG_ = function take_BANG_(state, blk, c) {
  var temp__4124__auto__ = cljs.core.async.impl.protocols.take_BANG_.call(null, c, cljs.core.async.impl.ioc_helpers.fn_handler.call(null, function(x) {
    var statearr_27162_27164 = state;
    statearr_27162_27164[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = x;
    statearr_27162_27164[cljs.core.async.impl.ioc_helpers.STATE_IDX] = blk;
    return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state);
  }));
  if (cljs.core.truth_(temp__4124__auto__)) {
    var cb = temp__4124__auto__;
    var statearr_27163_27165 = state;
    statearr_27163_27165[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = cljs.core.deref.call(null, cb);
    statearr_27163_27165[cljs.core.async.impl.ioc_helpers.STATE_IDX] = blk;
    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
  } else {
    return null;
  }
};
cljs.core.async.impl.ioc_helpers.put_BANG_ = function put_BANG_(state, blk, c, val) {
  var temp__4124__auto__ = cljs.core.async.impl.protocols.put_BANG_.call(null, c, val, cljs.core.async.impl.ioc_helpers.fn_handler.call(null, function(ret_val) {
    var statearr_27168_27170 = state;
    statearr_27168_27170[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = ret_val;
    statearr_27168_27170[cljs.core.async.impl.ioc_helpers.STATE_IDX] = blk;
    return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state);
  }));
  if (cljs.core.truth_(temp__4124__auto__)) {
    var cb = temp__4124__auto__;
    var statearr_27169_27171 = state;
    statearr_27169_27171[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = cljs.core.deref.call(null, cb);
    statearr_27169_27171[cljs.core.async.impl.ioc_helpers.STATE_IDX] = blk;
    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
  } else {
    return null;
  }
};
cljs.core.async.impl.ioc_helpers.return_chan = function return_chan(state, value) {
  var c = state[cljs.core.async.impl.ioc_helpers.USER_START_IDX];
  if (value == null) {
  } else {
    cljs.core.async.impl.protocols.put_BANG_.call(null, c, value, cljs.core.async.impl.ioc_helpers.fn_handler.call(null, function(c) {
      return function() {
        return null;
      };
    }(c)));
  }
  cljs.core.async.impl.protocols.close_BANG_.call(null, c);
  return c;
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame = function(catch_block, catch_exception, finally_block, continue_block, prev, __meta, __extmap, __hash) {
  this.catch_block = catch_block;
  this.catch_exception = catch_exception;
  this.finally_block = finally_block;
  this.continue_block = continue_block;
  this.prev = prev;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__8107__auto__, k__8108__auto__) {
  var self__ = this;
  var this__8107__auto____$1 = this;
  return cljs.core._lookup.call(null, this__8107__auto____$1, k__8108__auto__, null);
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__8109__auto__, k27173, else__8110__auto__) {
  var self__ = this;
  var this__8109__auto____$1 = this;
  var G__27175 = k27173 instanceof cljs.core.Keyword ? k27173.fqn : null;
  switch(G__27175) {
    case "prev":
      return self__.prev;
      break;
    case "continue-block":
      return self__.continue_block;
      break;
    case "finally-block":
      return self__.finally_block;
      break;
    case "catch-exception":
      return self__.catch_exception;
      break;
    case "catch-block":
      return self__.catch_block;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k27173, else__8110__auto__);
  }
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__8121__auto__, writer__8122__auto__, opts__8123__auto__) {
  var self__ = this;
  var this__8121__auto____$1 = this;
  var pr_pair__8124__auto__ = function(this__8121__auto____$1) {
    return function(keyval__8125__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__8122__auto__, cljs.core.pr_writer, "", " ", "", opts__8123__auto__, keyval__8125__auto__);
    };
  }(this__8121__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__8122__auto__, pr_pair__8124__auto__, "#cljs.core.async.impl.ioc-helpers.ExceptionFrame{", ", ", "}", opts__8123__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "catch-block", "catch-block", 1175212748), self__.catch_block], null), new cljs.core.PersistentVector(null, 
  2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "catch-exception", "catch-exception", -1997306795), self__.catch_exception], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472), self__.finally_block], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "continue-block", "continue-block", -1852047850), 
  self__.continue_block], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "prev", "prev", -1597069226), self__.prev], null)], null), self__.__extmap));
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__8105__auto__) {
  var self__ = this;
  var this__8105__auto____$1 = this;
  return self__.__meta;
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__8101__auto__) {
  var self__ = this;
  var this__8101__auto____$1 = this;
  return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, self__.catch_exception, self__.finally_block, self__.continue_block, self__.prev, self__.__meta, self__.__extmap, self__.__hash);
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$ICounted$_count$arity$1 = function(this__8111__auto__) {
  var self__ = this;
  var this__8111__auto____$1 = this;
  return 5 + cljs.core.count.call(null, self__.__extmap);
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IHash$_hash$arity$1 = function(this__8102__auto__) {
  var self__ = this;
  var this__8102__auto____$1 = this;
  var h__7925__auto__ = self__.__hash;
  if (!(h__7925__auto__ == null)) {
    return h__7925__auto__;
  } else {
    var h__7925__auto____$1 = cljs.core.hash_imap.call(null, this__8102__auto____$1);
    self__.__hash = h__7925__auto____$1;
    return h__7925__auto____$1;
  }
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__8103__auto__, other__8104__auto__) {
  var self__ = this;
  var this__8103__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__7492__auto__ = other__8104__auto__;
    if (cljs.core.truth_(and__7492__auto__)) {
      return this__8103__auto____$1.constructor === other__8104__auto__.constructor && cljs.core.equiv_map.call(null, this__8103__auto____$1, other__8104__auto__);
    } else {
      return and__7492__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__8116__auto__, k__8117__auto__) {
  var self__ = this;
  var this__8116__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472), null, new cljs.core.Keyword(null, "catch-block", "catch-block", 1175212748), null, new cljs.core.Keyword(null, "catch-exception", "catch-exception", -1997306795), null, new cljs.core.Keyword(null, "prev", "prev", -1597069226), null, new cljs.core.Keyword(null, "continue-block", "continue-block", -1852047850), 
  null], null), null), k__8117__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__8116__auto____$1), self__.__meta), k__8117__auto__);
  } else {
    return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, self__.catch_exception, self__.finally_block, self__.continue_block, self__.prev, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__8117__auto__)), null);
  }
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__8114__auto__, k__8115__auto__, G__27172) {
  var self__ = this;
  var this__8114__auto____$1 = this;
  var pred__27176 = cljs.core.keyword_identical_QMARK_;
  var expr__27177 = k__8115__auto__;
  if (cljs.core.truth_(pred__27176.call(null, new cljs.core.Keyword(null, "catch-block", "catch-block", 1175212748), expr__27177))) {
    return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(G__27172, self__.catch_exception, self__.finally_block, self__.continue_block, self__.prev, self__.__meta, self__.__extmap, null);
  } else {
    if (cljs.core.truth_(pred__27176.call(null, new cljs.core.Keyword(null, "catch-exception", "catch-exception", -1997306795), expr__27177))) {
      return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, G__27172, self__.finally_block, self__.continue_block, self__.prev, self__.__meta, self__.__extmap, null);
    } else {
      if (cljs.core.truth_(pred__27176.call(null, new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472), expr__27177))) {
        return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, self__.catch_exception, G__27172, self__.continue_block, self__.prev, self__.__meta, self__.__extmap, null);
      } else {
        if (cljs.core.truth_(pred__27176.call(null, new cljs.core.Keyword(null, "continue-block", "continue-block", -1852047850), expr__27177))) {
          return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, self__.catch_exception, self__.finally_block, G__27172, self__.prev, self__.__meta, self__.__extmap, null);
        } else {
          if (cljs.core.truth_(pred__27176.call(null, new cljs.core.Keyword(null, "prev", "prev", -1597069226), expr__27177))) {
            return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, self__.catch_exception, self__.finally_block, self__.continue_block, G__27172, self__.__meta, self__.__extmap, null);
          } else {
            return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, self__.catch_exception, self__.finally_block, self__.continue_block, self__.prev, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__8115__auto__, G__27172), null);
          }
        }
      }
    }
  }
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__8119__auto__) {
  var self__ = this;
  var this__8119__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "catch-block", "catch-block", 1175212748), self__.catch_block], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "catch-exception", "catch-exception", -1997306795), self__.catch_exception], 
  null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472), self__.finally_block], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "continue-block", "continue-block", -1852047850), self__.continue_block], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "prev", 
  "prev", -1597069226), self__.prev], null)], null), self__.__extmap));
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__8106__auto__, G__27172) {
  var self__ = this;
  var this__8106__auto____$1 = this;
  return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, self__.catch_exception, self__.finally_block, self__.continue_block, self__.prev, G__27172, self__.__extmap, self__.__hash);
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__8112__auto__, entry__8113__auto__) {
  var self__ = this;
  var this__8112__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__8113__auto__)) {
    return cljs.core._assoc.call(null, this__8112__auto____$1, cljs.core._nth.call(null, entry__8113__auto__, 0), cljs.core._nth.call(null, entry__8113__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__8112__auto____$1, entry__8113__auto__);
  }
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.cljs$lang$type = true;
cljs.core.async.impl.ioc_helpers.ExceptionFrame.cljs$lang$ctorPrSeq = function(this__8141__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "cljs.core.async.impl.ioc-helpers/ExceptionFrame");
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.cljs$lang$ctorPrWriter = function(this__8141__auto__, writer__8142__auto__) {
  return cljs.core._write.call(null, writer__8142__auto__, "cljs.core.async.impl.ioc-helpers/ExceptionFrame");
};
cljs.core.async.impl.ioc_helpers.__GT_ExceptionFrame = function __GT_ExceptionFrame(catch_block, catch_exception, finally_block, continue_block, prev) {
  return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(catch_block, catch_exception, finally_block, continue_block, prev, null, null, null);
};
cljs.core.async.impl.ioc_helpers.map__GT_ExceptionFrame = function map__GT_ExceptionFrame(G__27174) {
  return new cljs.core.async.impl.ioc_helpers.ExceptionFrame((new cljs.core.Keyword(null, "catch-block", "catch-block", 1175212748)).cljs$core$IFn$_invoke$arity$1(G__27174), (new cljs.core.Keyword(null, "catch-exception", "catch-exception", -1997306795)).cljs$core$IFn$_invoke$arity$1(G__27174), (new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472)).cljs$core$IFn$_invoke$arity$1(G__27174), (new cljs.core.Keyword(null, "continue-block", "continue-block", -1852047850)).cljs$core$IFn$_invoke$arity$1(G__27174), 
  (new cljs.core.Keyword(null, "prev", "prev", -1597069226)).cljs$core$IFn$_invoke$arity$1(G__27174), null, cljs.core.dissoc.call(null, G__27174, new cljs.core.Keyword(null, "catch-block", "catch-block", 1175212748), new cljs.core.Keyword(null, "catch-exception", "catch-exception", -1997306795), new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472), new cljs.core.Keyword(null, "continue-block", "continue-block", -1852047850), new cljs.core.Keyword(null, "prev", "prev", -1597069226)), 
  null);
};
cljs.core.async.impl.ioc_helpers.add_exception_frame = function add_exception_frame(state, catch_block, catch_exception, finally_block, continue_block) {
  var statearr_27181 = state;
  statearr_27181[cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES] = cljs.core.async.impl.ioc_helpers.__GT_ExceptionFrame.call(null, catch_block, catch_exception, finally_block, continue_block, cljs.core.async.impl.ioc_helpers.aget_object.call(null, state, cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES));
  return statearr_27181;
};
cljs.core.async.impl.ioc_helpers.process_exception = function process_exception(state) {
  while (true) {
    var exception_frame = cljs.core.async.impl.ioc_helpers.aget_object.call(null, state, cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES);
    var catch_block = (new cljs.core.Keyword(null, "catch-block", "catch-block", 1175212748)).cljs$core$IFn$_invoke$arity$1(exception_frame);
    var catch_exception = (new cljs.core.Keyword(null, "catch-exception", "catch-exception", -1997306795)).cljs$core$IFn$_invoke$arity$1(exception_frame);
    var exception = cljs.core.async.impl.ioc_helpers.aget_object.call(null, state, cljs.core.async.impl.ioc_helpers.CURRENT_EXCEPTION);
    if (cljs.core.truth_(function() {
      var and__7492__auto__ = exception;
      if (cljs.core.truth_(and__7492__auto__)) {
        return cljs.core.not.call(null, exception_frame);
      } else {
        return and__7492__auto__;
      }
    }())) {
      throw exception;
    } else {
      if (cljs.core.truth_(function() {
        var and__7492__auto__ = exception;
        if (cljs.core.truth_(and__7492__auto__)) {
          var and__7492__auto____$1 = catch_block;
          if (cljs.core.truth_(and__7492__auto____$1)) {
            return exception instanceof catch_exception;
          } else {
            return and__7492__auto____$1;
          }
        } else {
          return and__7492__auto__;
        }
      }())) {
        var statearr_27187 = state;
        statearr_27187[cljs.core.async.impl.ioc_helpers.STATE_IDX] = catch_block;
        statearr_27187[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = exception;
        statearr_27187[cljs.core.async.impl.ioc_helpers.CURRENT_EXCEPTION] = null;
        statearr_27187[cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES] = cljs.core.assoc.call(null, exception_frame, new cljs.core.Keyword(null, "catch-block", "catch-block", 1175212748), null, new cljs.core.Keyword(null, "catch-exception", "catch-exception", -1997306795), null);
        return statearr_27187;
      } else {
        if (cljs.core.truth_(function() {
          var and__7492__auto__ = exception;
          if (cljs.core.truth_(and__7492__auto__)) {
            return cljs.core.not.call(null, catch_block) && cljs.core.not.call(null, (new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472)).cljs$core$IFn$_invoke$arity$1(exception_frame));
          } else {
            return and__7492__auto__;
          }
        }())) {
          var statearr_27188_27192 = state;
          statearr_27188_27192[cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES] = (new cljs.core.Keyword(null, "prev", "prev", -1597069226)).cljs$core$IFn$_invoke$arity$1(exception_frame);
          var G__27193 = state;
          state = G__27193;
          continue;
        } else {
          if (cljs.core.truth_(function() {
            var and__7492__auto__ = exception;
            if (cljs.core.truth_(and__7492__auto__)) {
              var and__7492__auto____$1 = cljs.core.not.call(null, catch_block);
              if (and__7492__auto____$1) {
                return(new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472)).cljs$core$IFn$_invoke$arity$1(exception_frame);
              } else {
                return and__7492__auto____$1;
              }
            } else {
              return and__7492__auto__;
            }
          }())) {
            var statearr_27189 = state;
            statearr_27189[cljs.core.async.impl.ioc_helpers.STATE_IDX] = (new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472)).cljs$core$IFn$_invoke$arity$1(exception_frame);
            statearr_27189[cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES] = cljs.core.assoc.call(null, exception_frame, new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472), null);
            return statearr_27189;
          } else {
            if (cljs.core.truth_(function() {
              var and__7492__auto__ = cljs.core.not.call(null, exception);
              if (and__7492__auto__) {
                return(new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472)).cljs$core$IFn$_invoke$arity$1(exception_frame);
              } else {
                return and__7492__auto__;
              }
            }())) {
              var statearr_27190 = state;
              statearr_27190[cljs.core.async.impl.ioc_helpers.STATE_IDX] = (new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472)).cljs$core$IFn$_invoke$arity$1(exception_frame);
              statearr_27190[cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES] = cljs.core.assoc.call(null, exception_frame, new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472), null);
              return statearr_27190;
            } else {
              if (cljs.core.not.call(null, exception) && cljs.core.not.call(null, (new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472)).cljs$core$IFn$_invoke$arity$1(exception_frame))) {
                var statearr_27191 = state;
                statearr_27191[cljs.core.async.impl.ioc_helpers.STATE_IDX] = (new cljs.core.Keyword(null, "continue-block", "continue-block", -1852047850)).cljs$core$IFn$_invoke$arity$1(exception_frame);
                statearr_27191[cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES] = (new cljs.core.Keyword(null, "prev", "prev", -1597069226)).cljs$core$IFn$_invoke$arity$1(exception_frame);
                return statearr_27191;
              } else {
                throw new Error("No matching clause");
              }
            }
          }
        }
      }
    }
    break;
  }
};
goog.provide("cljs.core.async.impl.timers");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.dispatch");
goog.require("cljs.core.async.impl.channels");
goog.require("cljs.core.async.impl.protocols");
cljs.core.async.impl.timers.MAX_LEVEL = 15;
cljs.core.async.impl.timers.P = 1 / 2;
cljs.core.async.impl.timers.random_level = function() {
  var random_level = null;
  var random_level__0 = function() {
    return random_level.call(null, 0);
  };
  var random_level__1 = function(level) {
    while (true) {
      if (Math.random() < cljs.core.async.impl.timers.P && level < cljs.core.async.impl.timers.MAX_LEVEL) {
        var G__27126 = level + 1;
        level = G__27126;
        continue;
      } else {
        return level;
      }
      break;
    }
  };
  random_level = function(level) {
    switch(arguments.length) {
      case 0:
        return random_level__0.call(this);
      case 1:
        return random_level__1.call(this, level);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  random_level.cljs$core$IFn$_invoke$arity$0 = random_level__0;
  random_level.cljs$core$IFn$_invoke$arity$1 = random_level__1;
  return random_level;
}();
cljs.core.async.impl.timers.SkipListNode = function(key, val, forward) {
  this.key = key;
  this.val = val;
  this.forward = forward;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2155872256;
};
cljs.core.async.impl.timers.SkipListNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.async.impl.timers.SkipListNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, self__.val), self__.key);
};
cljs.core.async.impl.timers.SkipListNode.cljs$lang$type = true;
cljs.core.async.impl.timers.SkipListNode.cljs$lang$ctorStr = "cljs.core.async.impl.timers/SkipListNode";
cljs.core.async.impl.timers.SkipListNode.cljs$lang$ctorPrWriter = function(this__8091__auto__, writer__8092__auto__, opt__8093__auto__) {
  return cljs.core._write.call(null, writer__8092__auto__, "cljs.core.async.impl.timers/SkipListNode");
};
cljs.core.async.impl.timers.__GT_SkipListNode = function __GT_SkipListNode(key, val, forward) {
  return new cljs.core.async.impl.timers.SkipListNode(key, val, forward);
};
cljs.core.async.impl.timers.skip_list_node = function() {
  var skip_list_node = null;
  var skip_list_node__1 = function(level) {
    return skip_list_node.call(null, null, null, level);
  };
  var skip_list_node__3 = function(k, v, level) {
    var arr = new Array(level + 1);
    var i_27127 = 0;
    while (true) {
      if (i_27127 < arr.length) {
        arr[i_27127] = null;
        var G__27128 = i_27127 + 1;
        i_27127 = G__27128;
        continue;
      } else {
      }
      break;
    }
    return new cljs.core.async.impl.timers.SkipListNode(k, v, arr);
  };
  skip_list_node = function(k, v, level) {
    switch(arguments.length) {
      case 1:
        return skip_list_node__1.call(this, k);
      case 3:
        return skip_list_node__3.call(this, k, v, level);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  skip_list_node.cljs$core$IFn$_invoke$arity$1 = skip_list_node__1;
  skip_list_node.cljs$core$IFn$_invoke$arity$3 = skip_list_node__3;
  return skip_list_node;
}();
cljs.core.async.impl.timers.least_greater_node = function() {
  var least_greater_node = null;
  var least_greater_node__3 = function(x, k, level) {
    return least_greater_node.call(null, x, k, level, null);
  };
  var least_greater_node__4 = function(x, k, level, update) {
    while (true) {
      if (!(level < 0)) {
        var x__$1 = function() {
          var x__$1 = x;
          while (true) {
            var temp__4124__auto__ = x__$1.forward[level];
            if (cljs.core.truth_(temp__4124__auto__)) {
              var x_SINGLEQUOTE_ = temp__4124__auto__;
              if (x_SINGLEQUOTE_.key < k) {
                var G__27129 = x_SINGLEQUOTE_;
                x__$1 = G__27129;
                continue;
              } else {
                return x__$1;
              }
            } else {
              return x__$1;
            }
            break;
          }
        }();
        if (update == null) {
        } else {
          update[level] = x__$1;
        }
        var G__27130 = x__$1;
        var G__27131 = k;
        var G__27132 = level - 1;
        var G__27133 = update;
        x = G__27130;
        k = G__27131;
        level = G__27132;
        update = G__27133;
        continue;
      } else {
        return x;
      }
      break;
    }
  };
  least_greater_node = function(x, k, level, update) {
    switch(arguments.length) {
      case 3:
        return least_greater_node__3.call(this, x, k, level);
      case 4:
        return least_greater_node__4.call(this, x, k, level, update);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  least_greater_node.cljs$core$IFn$_invoke$arity$3 = least_greater_node__3;
  least_greater_node.cljs$core$IFn$_invoke$arity$4 = least_greater_node__4;
  return least_greater_node;
}();
cljs.core.async.impl.timers.SkipList = function(header, level) {
  this.header = header;
  this.level = level;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2155872256;
};
cljs.core.async.impl.timers.SkipList.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var self__ = this;
  var coll__$1 = this;
  var pr_pair = function(coll__$1) {
    return function(keyval) {
      return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "", " ", "", opts, keyval);
    };
  }(coll__$1);
  return cljs.core.pr_sequential_writer.call(null, writer, pr_pair, "{", ", ", "}", opts, coll__$1);
};
cljs.core.async.impl.timers.SkipList.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var iter = function(coll__$1) {
    return function iter(node) {
      return new cljs.core.LazySeq(null, function(coll__$1) {
        return function() {
          if (node == null) {
            return null;
          } else {
            return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [node.key, node.val], null), iter.call(null, node.forward[0]));
          }
        };
      }(coll__$1), null, null);
    };
  }(coll__$1);
  return iter.call(null, self__.header.forward[0]);
};
cljs.core.async.impl.timers.SkipList.prototype.put = function(k, v) {
  var self__ = this;
  var coll = this;
  var update = new Array(cljs.core.async.impl.timers.MAX_LEVEL);
  var x = cljs.core.async.impl.timers.least_greater_node.call(null, self__.header, k, self__.level, update);
  var x__$1 = x.forward[0];
  if (!(x__$1 == null) && x__$1.key === k) {
    return x__$1.val = v;
  } else {
    var new_level = cljs.core.async.impl.timers.random_level.call(null);
    if (new_level > self__.level) {
      var i_27134 = self__.level + 1;
      while (true) {
        if (i_27134 <= new_level + 1) {
          update[i_27134] = self__.header;
          var G__27135 = i_27134 + 1;
          i_27134 = G__27135;
          continue;
        } else {
        }
        break;
      }
      self__.level = new_level;
    } else {
    }
    var x__$2 = cljs.core.async.impl.timers.skip_list_node.call(null, k, v, new Array(new_level));
    var i = 0;
    while (true) {
      if (i <= self__.level) {
        var links = update[i].forward;
        x__$2.forward[i] = links[i];
        return links[i] = x__$2;
      } else {
        return null;
      }
      break;
    }
  }
};
cljs.core.async.impl.timers.SkipList.prototype.remove = function(k) {
  var self__ = this;
  var coll = this;
  var update = new Array(cljs.core.async.impl.timers.MAX_LEVEL);
  var x = cljs.core.async.impl.timers.least_greater_node.call(null, self__.header, k, self__.level, update);
  var x__$1 = x.forward[0];
  if (!(x__$1 == null) && x__$1.key === k) {
    var i_27136 = 0;
    while (true) {
      if (i_27136 <= self__.level) {
        var links_27137 = update[i_27136].forward;
        if (links_27137[i_27136] === x__$1) {
          links_27137[i_27136] = x__$1.forward[i_27136];
          var G__27138 = i_27136 + 1;
          i_27136 = G__27138;
          continue;
        } else {
          var G__27139 = i_27136 + 1;
          i_27136 = G__27139;
          continue;
        }
      } else {
      }
      break;
    }
    while (true) {
      if (self__.level > 0 && self__.header.forward[self__.level] == null) {
        self__.level = self__.level - 1;
        continue;
      } else {
        return null;
      }
      break;
    }
  } else {
    return null;
  }
};
cljs.core.async.impl.timers.SkipList.prototype.ceilingEntry = function(k) {
  var self__ = this;
  var coll = this;
  var x = self__.header;
  var level__$1 = self__.level;
  while (true) {
    if (!(level__$1 < 0)) {
      var nx = function() {
        var x__$1 = x;
        while (true) {
          var x_SINGLEQUOTE_ = x__$1.forward[level__$1];
          if (x_SINGLEQUOTE_ == null) {
            return null;
          } else {
            if (x_SINGLEQUOTE_.key >= k) {
              return x_SINGLEQUOTE_;
            } else {
              var G__27140 = x_SINGLEQUOTE_;
              x__$1 = G__27140;
              continue;
            }
          }
          break;
        }
      }();
      if (!(nx == null)) {
        var G__27141 = nx;
        var G__27142 = level__$1 - 1;
        x = G__27141;
        level__$1 = G__27142;
        continue;
      } else {
        var G__27143 = x;
        var G__27144 = level__$1 - 1;
        x = G__27143;
        level__$1 = G__27144;
        continue;
      }
    } else {
      if (x === self__.header) {
        return null;
      } else {
        return x;
      }
    }
    break;
  }
};
cljs.core.async.impl.timers.SkipList.prototype.floorEntry = function(k) {
  var self__ = this;
  var coll = this;
  var x = self__.header;
  var level__$1 = self__.level;
  while (true) {
    if (!(level__$1 < 0)) {
      var nx = function() {
        var x__$1 = x;
        while (true) {
          var x_SINGLEQUOTE_ = x__$1.forward[level__$1];
          if (!(x_SINGLEQUOTE_ == null)) {
            if (x_SINGLEQUOTE_.key > k) {
              return x__$1;
            } else {
              var G__27145 = x_SINGLEQUOTE_;
              x__$1 = G__27145;
              continue;
            }
          } else {
            if (level__$1 === 0) {
              return x__$1;
            } else {
              return null;
            }
          }
          break;
        }
      }();
      if (cljs.core.truth_(nx)) {
        var G__27146 = nx;
        var G__27147 = level__$1 - 1;
        x = G__27146;
        level__$1 = G__27147;
        continue;
      } else {
        var G__27148 = x;
        var G__27149 = level__$1 - 1;
        x = G__27148;
        level__$1 = G__27149;
        continue;
      }
    } else {
      if (x === self__.header) {
        return null;
      } else {
        return x;
      }
    }
    break;
  }
};
cljs.core.async.impl.timers.SkipList.cljs$lang$type = true;
cljs.core.async.impl.timers.SkipList.cljs$lang$ctorStr = "cljs.core.async.impl.timers/SkipList";
cljs.core.async.impl.timers.SkipList.cljs$lang$ctorPrWriter = function(this__8091__auto__, writer__8092__auto__, opt__8093__auto__) {
  return cljs.core._write.call(null, writer__8092__auto__, "cljs.core.async.impl.timers/SkipList");
};
cljs.core.async.impl.timers.__GT_SkipList = function __GT_SkipList(header, level) {
  return new cljs.core.async.impl.timers.SkipList(header, level);
};
cljs.core.async.impl.timers.skip_list = function skip_list() {
  return new cljs.core.async.impl.timers.SkipList(cljs.core.async.impl.timers.skip_list_node.call(null, 0), 0);
};
cljs.core.async.impl.timers.timeouts_map = cljs.core.async.impl.timers.skip_list.call(null);
cljs.core.async.impl.timers.TIMEOUT_RESOLUTION_MS = 10;
cljs.core.async.impl.timers.timeout = function timeout(msecs) {
  var timeout__$1 = (new Date).valueOf() + msecs;
  var me = cljs.core.async.impl.timers.timeouts_map.ceilingEntry(timeout__$1);
  var or__7504__auto__ = cljs.core.truth_(function() {
    var and__7492__auto__ = me;
    if (cljs.core.truth_(and__7492__auto__)) {
      return me.key < timeout__$1 + cljs.core.async.impl.timers.TIMEOUT_RESOLUTION_MS;
    } else {
      return and__7492__auto__;
    }
  }()) ? me.val : null;
  if (cljs.core.truth_(or__7504__auto__)) {
    return or__7504__auto__;
  } else {
    var timeout_channel = cljs.core.async.impl.channels.chan.call(null, null);
    cljs.core.async.impl.timers.timeouts_map.put(timeout__$1, timeout_channel);
    cljs.core.async.impl.dispatch.queue_delay.call(null, function(timeout_channel, or__7504__auto__, timeout__$1, me) {
      return function() {
        cljs.core.async.impl.timers.timeouts_map.remove(timeout__$1);
        return cljs.core.async.impl.protocols.close_BANG_.call(null, timeout_channel);
      };
    }(timeout_channel, or__7504__auto__, timeout__$1, me), msecs);
    return timeout_channel;
  }
};
goog.provide("cljs.core.async");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.channels");
goog.require("cljs.core.async.impl.dispatch");
goog.require("cljs.core.async.impl.ioc_helpers");
goog.require("cljs.core.async.impl.protocols");
goog.require("cljs.core.async.impl.buffers");
goog.require("cljs.core.async.impl.timers");
cljs.core.async.fn_handler = function fn_handler(f) {
  if (typeof cljs.core.async.t24037 !== "undefined") {
  } else {
    cljs.core.async.t24037 = function(f, fn_handler, meta24038) {
      this.f = f;
      this.fn_handler = fn_handler;
      this.meta24038 = meta24038;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    cljs.core.async.t24037.prototype.cljs$core$async$impl$protocols$Handler$ = true;
    cljs.core.async.t24037.prototype.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return true;
    };
    cljs.core.async.t24037.prototype.cljs$core$async$impl$protocols$Handler$commit$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return self__.f;
    };
    cljs.core.async.t24037.prototype.cljs$core$IMeta$_meta$arity$1 = function(_24039) {
      var self__ = this;
      var _24039__$1 = this;
      return self__.meta24038;
    };
    cljs.core.async.t24037.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_24039, meta24038__$1) {
      var self__ = this;
      var _24039__$1 = this;
      return new cljs.core.async.t24037(self__.f, self__.fn_handler, meta24038__$1);
    };
    cljs.core.async.t24037.cljs$lang$type = true;
    cljs.core.async.t24037.cljs$lang$ctorStr = "cljs.core.async/t24037";
    cljs.core.async.t24037.cljs$lang$ctorPrWriter = function(this__8091__auto__, writer__8092__auto__, opt__8093__auto__) {
      return cljs.core._write.call(null, writer__8092__auto__, "cljs.core.async/t24037");
    };
    cljs.core.async.__GT_t24037 = function __GT_t24037(f__$1, fn_handler__$1, meta24038) {
      return new cljs.core.async.t24037(f__$1, fn_handler__$1, meta24038);
    };
  }
  return new cljs.core.async.t24037(f, fn_handler, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.core.async.buffer = function buffer(n) {
  return cljs.core.async.impl.buffers.fixed_buffer.call(null, n);
};
cljs.core.async.dropping_buffer = function dropping_buffer(n) {
  return cljs.core.async.impl.buffers.dropping_buffer.call(null, n);
};
cljs.core.async.sliding_buffer = function sliding_buffer(n) {
  return cljs.core.async.impl.buffers.sliding_buffer.call(null, n);
};
cljs.core.async.unblocking_buffer_QMARK_ = function unblocking_buffer_QMARK_(buff) {
  var G__24041 = buff;
  if (G__24041) {
    var bit__8185__auto__ = null;
    if (cljs.core.truth_(function() {
      var or__7504__auto__ = bit__8185__auto__;
      if (cljs.core.truth_(or__7504__auto__)) {
        return or__7504__auto__;
      } else {
        return G__24041.cljs$core$async$impl$protocols$UnblockingBuffer$;
      }
    }())) {
      return true;
    } else {
      if (!G__24041.cljs$lang$protocol_mask$partition$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.async.impl.protocols.UnblockingBuffer, G__24041);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.async.impl.protocols.UnblockingBuffer, G__24041);
  }
};
cljs.core.async.chan = function() {
  var chan = null;
  var chan__0 = function() {
    return chan.call(null, null);
  };
  var chan__1 = function(buf_or_n) {
    return chan.call(null, buf_or_n, null, null);
  };
  var chan__2 = function(buf_or_n, xform) {
    return chan.call(null, buf_or_n, xform, null);
  };
  var chan__3 = function(buf_or_n, xform, ex_handler) {
    var buf_or_n__$1 = cljs.core._EQ_.call(null, buf_or_n, 0) ? null : buf_or_n;
    if (cljs.core.truth_(xform)) {
      if (cljs.core.truth_(buf_or_n__$1)) {
      } else {
        throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("buffer must be supplied when transducer is"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, new cljs.core.Symbol(null, "buf-or-n", "buf-or-n", -1646815050, null)))].join(""));
      }
    } else {
    }
    return cljs.core.async.impl.channels.chan.call(null, typeof buf_or_n__$1 === "number" ? cljs.core.async.buffer.call(null, buf_or_n__$1) : buf_or_n__$1, xform, ex_handler);
  };
  chan = function(buf_or_n, xform, ex_handler) {
    switch(arguments.length) {
      case 0:
        return chan__0.call(this);
      case 1:
        return chan__1.call(this, buf_or_n);
      case 2:
        return chan__2.call(this, buf_or_n, xform);
      case 3:
        return chan__3.call(this, buf_or_n, xform, ex_handler);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  chan.cljs$core$IFn$_invoke$arity$0 = chan__0;
  chan.cljs$core$IFn$_invoke$arity$1 = chan__1;
  chan.cljs$core$IFn$_invoke$arity$2 = chan__2;
  chan.cljs$core$IFn$_invoke$arity$3 = chan__3;
  return chan;
}();
cljs.core.async.timeout = function timeout(msecs) {
  return cljs.core.async.impl.timers.timeout.call(null, msecs);
};
cljs.core.async._LT__BANG_ = function _LT__BANG_(port) {
  throw new Error("\x3c! used not in (go ...) block");
};
cljs.core.async.take_BANG_ = function() {
  var take_BANG_ = null;
  var take_BANG___2 = function(port, fn1) {
    return take_BANG_.call(null, port, fn1, true);
  };
  var take_BANG___3 = function(port, fn1, on_caller_QMARK_) {
    var ret = cljs.core.async.impl.protocols.take_BANG_.call(null, port, cljs.core.async.fn_handler.call(null, fn1));
    if (cljs.core.truth_(ret)) {
      var val_24042 = cljs.core.deref.call(null, ret);
      if (cljs.core.truth_(on_caller_QMARK_)) {
        fn1.call(null, val_24042);
      } else {
        cljs.core.async.impl.dispatch.run.call(null, function(val_24042, ret) {
          return function() {
            return fn1.call(null, val_24042);
          };
        }(val_24042, ret));
      }
    } else {
    }
    return null;
  };
  take_BANG_ = function(port, fn1, on_caller_QMARK_) {
    switch(arguments.length) {
      case 2:
        return take_BANG___2.call(this, port, fn1);
      case 3:
        return take_BANG___3.call(this, port, fn1, on_caller_QMARK_);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  take_BANG_.cljs$core$IFn$_invoke$arity$2 = take_BANG___2;
  take_BANG_.cljs$core$IFn$_invoke$arity$3 = take_BANG___3;
  return take_BANG_;
}();
cljs.core.async.nop = function nop(_) {
  return null;
};
cljs.core.async.fhnop = cljs.core.async.fn_handler.call(null, cljs.core.async.nop);
cljs.core.async._GT__BANG_ = function _GT__BANG_(port, val) {
  throw new Error("\x3e! used not in (go ...) block");
};
cljs.core.async.put_BANG_ = function() {
  var put_BANG_ = null;
  var put_BANG___2 = function(port, val) {
    var temp__4124__auto__ = cljs.core.async.impl.protocols.put_BANG_.call(null, port, val, cljs.core.async.fhnop);
    if (cljs.core.truth_(temp__4124__auto__)) {
      var ret = temp__4124__auto__;
      return cljs.core.deref.call(null, ret);
    } else {
      return true;
    }
  };
  var put_BANG___3 = function(port, val, fn1) {
    return put_BANG_.call(null, port, val, fn1, true);
  };
  var put_BANG___4 = function(port, val, fn1, on_caller_QMARK_) {
    var temp__4124__auto__ = cljs.core.async.impl.protocols.put_BANG_.call(null, port, val, cljs.core.async.fn_handler.call(null, fn1));
    if (cljs.core.truth_(temp__4124__auto__)) {
      var retb = temp__4124__auto__;
      var ret = cljs.core.deref.call(null, retb);
      if (cljs.core.truth_(on_caller_QMARK_)) {
        fn1.call(null, ret);
      } else {
        cljs.core.async.impl.dispatch.run.call(null, function(ret, retb, temp__4124__auto__) {
          return function() {
            return fn1.call(null, ret);
          };
        }(ret, retb, temp__4124__auto__));
      }
      return ret;
    } else {
      return true;
    }
  };
  put_BANG_ = function(port, val, fn1, on_caller_QMARK_) {
    switch(arguments.length) {
      case 2:
        return put_BANG___2.call(this, port, val);
      case 3:
        return put_BANG___3.call(this, port, val, fn1);
      case 4:
        return put_BANG___4.call(this, port, val, fn1, on_caller_QMARK_);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  put_BANG_.cljs$core$IFn$_invoke$arity$2 = put_BANG___2;
  put_BANG_.cljs$core$IFn$_invoke$arity$3 = put_BANG___3;
  put_BANG_.cljs$core$IFn$_invoke$arity$4 = put_BANG___4;
  return put_BANG_;
}();
cljs.core.async.close_BANG_ = function close_BANG_(port) {
  return cljs.core.async.impl.protocols.close_BANG_.call(null, port);
};
cljs.core.async.random_array = function random_array(n) {
  var a = new Array(n);
  var n__8391__auto___24043 = n;
  var x_24044 = 0;
  while (true) {
    if (x_24044 < n__8391__auto___24043) {
      a[x_24044] = 0;
      var G__24045 = x_24044 + 1;
      x_24044 = G__24045;
      continue;
    } else {
    }
    break;
  }
  var i = 1;
  while (true) {
    if (cljs.core._EQ_.call(null, i, n)) {
      return a;
    } else {
      var j = cljs.core.rand_int.call(null, i);
      a[i] = a[j];
      a[j] = i;
      var G__24046 = i + 1;
      i = G__24046;
      continue;
    }
    break;
  }
};
cljs.core.async.alt_flag = function alt_flag() {
  var flag = cljs.core.atom.call(null, true);
  if (typeof cljs.core.async.t24050 !== "undefined") {
  } else {
    cljs.core.async.t24050 = function(flag, alt_flag, meta24051) {
      this.flag = flag;
      this.alt_flag = alt_flag;
      this.meta24051 = meta24051;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    cljs.core.async.t24050.prototype.cljs$core$async$impl$protocols$Handler$ = true;
    cljs.core.async.t24050.prototype.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1 = function(flag) {
      return function(_) {
        var self__ = this;
        var ___$1 = this;
        return cljs.core.deref.call(null, self__.flag);
      };
    }(flag);
    cljs.core.async.t24050.prototype.cljs$core$async$impl$protocols$Handler$commit$arity$1 = function(flag) {
      return function(_) {
        var self__ = this;
        var ___$1 = this;
        cljs.core.reset_BANG_.call(null, self__.flag, null);
        return true;
      };
    }(flag);
    cljs.core.async.t24050.prototype.cljs$core$IMeta$_meta$arity$1 = function(flag) {
      return function(_24052) {
        var self__ = this;
        var _24052__$1 = this;
        return self__.meta24051;
      };
    }(flag);
    cljs.core.async.t24050.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(flag) {
      return function(_24052, meta24051__$1) {
        var self__ = this;
        var _24052__$1 = this;
        return new cljs.core.async.t24050(self__.flag, self__.alt_flag, meta24051__$1);
      };
    }(flag);
    cljs.core.async.t24050.cljs$lang$type = true;
    cljs.core.async.t24050.cljs$lang$ctorStr = "cljs.core.async/t24050";
    cljs.core.async.t24050.cljs$lang$ctorPrWriter = function(flag) {
      return function(this__8091__auto__, writer__8092__auto__, opt__8093__auto__) {
        return cljs.core._write.call(null, writer__8092__auto__, "cljs.core.async/t24050");
      };
    }(flag);
    cljs.core.async.__GT_t24050 = function(flag) {
      return function __GT_t24050(flag__$1, alt_flag__$1, meta24051) {
        return new cljs.core.async.t24050(flag__$1, alt_flag__$1, meta24051);
      };
    }(flag);
  }
  return new cljs.core.async.t24050(flag, alt_flag, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.core.async.alt_handler = function alt_handler(flag, cb) {
  if (typeof cljs.core.async.t24056 !== "undefined") {
  } else {
    cljs.core.async.t24056 = function(cb, flag, alt_handler, meta24057) {
      this.cb = cb;
      this.flag = flag;
      this.alt_handler = alt_handler;
      this.meta24057 = meta24057;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    cljs.core.async.t24056.prototype.cljs$core$async$impl$protocols$Handler$ = true;
    cljs.core.async.t24056.prototype.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.active_QMARK_.call(null, self__.flag);
    };
    cljs.core.async.t24056.prototype.cljs$core$async$impl$protocols$Handler$commit$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      cljs.core.async.impl.protocols.commit.call(null, self__.flag);
      return self__.cb;
    };
    cljs.core.async.t24056.prototype.cljs$core$IMeta$_meta$arity$1 = function(_24058) {
      var self__ = this;
      var _24058__$1 = this;
      return self__.meta24057;
    };
    cljs.core.async.t24056.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_24058, meta24057__$1) {
      var self__ = this;
      var _24058__$1 = this;
      return new cljs.core.async.t24056(self__.cb, self__.flag, self__.alt_handler, meta24057__$1);
    };
    cljs.core.async.t24056.cljs$lang$type = true;
    cljs.core.async.t24056.cljs$lang$ctorStr = "cljs.core.async/t24056";
    cljs.core.async.t24056.cljs$lang$ctorPrWriter = function(this__8091__auto__, writer__8092__auto__, opt__8093__auto__) {
      return cljs.core._write.call(null, writer__8092__auto__, "cljs.core.async/t24056");
    };
    cljs.core.async.__GT_t24056 = function __GT_t24056(cb__$1, flag__$1, alt_handler__$1, meta24057) {
      return new cljs.core.async.t24056(cb__$1, flag__$1, alt_handler__$1, meta24057);
    };
  }
  return new cljs.core.async.t24056(cb, flag, alt_handler, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.core.async.do_alts = function do_alts(fret, ports, opts) {
  var flag = cljs.core.async.alt_flag.call(null);
  var n = cljs.core.count.call(null, ports);
  var idxs = cljs.core.async.random_array.call(null, n);
  var priority = (new cljs.core.Keyword(null, "priority", "priority", 1431093715)).cljs$core$IFn$_invoke$arity$1(opts);
  var ret = function() {
    var i = 0;
    while (true) {
      if (i < n) {
        var idx = cljs.core.truth_(priority) ? i : idxs[i];
        var port = cljs.core.nth.call(null, ports, idx);
        var wport = cljs.core.vector_QMARK_.call(null, port) ? port.call(null, 0) : null;
        var vbox = cljs.core.truth_(wport) ? function() {
          var val = port.call(null, 1);
          return cljs.core.async.impl.protocols.put_BANG_.call(null, wport, val, cljs.core.async.alt_handler.call(null, flag, function(i, val, idx, port, wport, flag, n, idxs, priority) {
            return function(p1__24059_SHARP_) {
              return fret.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [p1__24059_SHARP_, wport], null));
            };
          }(i, val, idx, port, wport, flag, n, idxs, priority)));
        }() : cljs.core.async.impl.protocols.take_BANG_.call(null, port, cljs.core.async.alt_handler.call(null, flag, function(i, idx, port, wport, flag, n, idxs, priority) {
          return function(p1__24060_SHARP_) {
            return fret.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [p1__24060_SHARP_, port], null));
          };
        }(i, idx, port, wport, flag, n, idxs, priority)));
        if (cljs.core.truth_(vbox)) {
          return cljs.core.async.impl.channels.box.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.deref.call(null, vbox), function() {
            var or__7504__auto__ = wport;
            if (cljs.core.truth_(or__7504__auto__)) {
              return or__7504__auto__;
            } else {
              return port;
            }
          }()], null));
        } else {
          var G__24061 = i + 1;
          i = G__24061;
          continue;
        }
      } else {
        return null;
      }
      break;
    }
  }();
  var or__7504__auto__ = ret;
  if (cljs.core.truth_(or__7504__auto__)) {
    return or__7504__auto__;
  } else {
    if (cljs.core.contains_QMARK_.call(null, opts, new cljs.core.Keyword(null, "default", "default", -1987822328))) {
      var temp__4126__auto__ = function() {
        var and__7492__auto__ = cljs.core.async.impl.protocols.active_QMARK_.call(null, flag);
        if (cljs.core.truth_(and__7492__auto__)) {
          return cljs.core.async.impl.protocols.commit.call(null, flag);
        } else {
          return and__7492__auto__;
        }
      }();
      if (cljs.core.truth_(temp__4126__auto__)) {
        var got = temp__4126__auto__;
        return cljs.core.async.impl.channels.box.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(new cljs.core.Keyword(null, "default", "default", -1987822328)).cljs$core$IFn$_invoke$arity$1(opts), new cljs.core.Keyword(null, "default", "default", -1987822328)], null));
      } else {
        return null;
      }
    } else {
      return null;
    }
  }
};
cljs.core.async.alts_BANG_ = function() {
  var alts_BANG___delegate = function(ports, p__24062) {
    var map__24064 = p__24062;
    var map__24064__$1 = cljs.core.seq_QMARK_.call(null, map__24064) ? cljs.core.apply.call(null, cljs.core.hash_map, map__24064) : map__24064;
    var opts = map__24064__$1;
    throw new Error("alts! used not in (go ...) block");
  };
  var alts_BANG_ = function(ports, var_args) {
    var p__24062 = null;
    if (arguments.length > 1) {
      var G__24065__i = 0, G__24065__a = new Array(arguments.length - 1);
      while (G__24065__i < G__24065__a.length) {
        G__24065__a[G__24065__i] = arguments[G__24065__i + 1];
        ++G__24065__i;
      }
      p__24062 = new cljs.core.IndexedSeq(G__24065__a, 0);
    }
    return alts_BANG___delegate.call(this, ports, p__24062);
  };
  alts_BANG_.cljs$lang$maxFixedArity = 1;
  alts_BANG_.cljs$lang$applyTo = function(arglist__24066) {
    var ports = cljs.core.first(arglist__24066);
    var p__24062 = cljs.core.rest(arglist__24066);
    return alts_BANG___delegate(ports, p__24062);
  };
  alts_BANG_.cljs$core$IFn$_invoke$arity$variadic = alts_BANG___delegate;
  return alts_BANG_;
}();
cljs.core.async.pipe = function() {
  var pipe = null;
  var pipe__2 = function(from, to) {
    return pipe.call(null, from, to, true);
  };
  var pipe__3 = function(from, to, close_QMARK_) {
    var c__10282__auto___24161 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__10282__auto___24161) {
      return function() {
        var f__10283__auto__ = function() {
          var switch__10226__auto__ = function(c__10282__auto___24161) {
            return function(state_24137) {
              var state_val_24138 = state_24137[1];
              if (state_val_24138 === 7) {
                var inst_24133 = state_24137[2];
                var state_24137__$1 = state_24137;
                var statearr_24139_24162 = state_24137__$1;
                statearr_24139_24162[2] = inst_24133;
                statearr_24139_24162[1] = 3;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_24138 === 1) {
                  var state_24137__$1 = state_24137;
                  var statearr_24140_24163 = state_24137__$1;
                  statearr_24140_24163[2] = null;
                  statearr_24140_24163[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_24138 === 4) {
                    var inst_24116 = state_24137[7];
                    var inst_24116__$1 = state_24137[2];
                    var inst_24117 = inst_24116__$1 == null;
                    var state_24137__$1 = function() {
                      var statearr_24141 = state_24137;
                      statearr_24141[7] = inst_24116__$1;
                      return statearr_24141;
                    }();
                    if (cljs.core.truth_(inst_24117)) {
                      var statearr_24142_24164 = state_24137__$1;
                      statearr_24142_24164[1] = 5;
                    } else {
                      var statearr_24143_24165 = state_24137__$1;
                      statearr_24143_24165[1] = 6;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_24138 === 13) {
                      var state_24137__$1 = state_24137;
                      var statearr_24144_24166 = state_24137__$1;
                      statearr_24144_24166[2] = null;
                      statearr_24144_24166[1] = 14;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_24138 === 6) {
                        var inst_24116 = state_24137[7];
                        var state_24137__$1 = state_24137;
                        return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_24137__$1, 11, to, inst_24116);
                      } else {
                        if (state_val_24138 === 3) {
                          var inst_24135 = state_24137[2];
                          var state_24137__$1 = state_24137;
                          return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_24137__$1, inst_24135);
                        } else {
                          if (state_val_24138 === 12) {
                            var state_24137__$1 = state_24137;
                            var statearr_24145_24167 = state_24137__$1;
                            statearr_24145_24167[2] = null;
                            statearr_24145_24167[1] = 2;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_24138 === 2) {
                              var state_24137__$1 = state_24137;
                              return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_24137__$1, 4, from);
                            } else {
                              if (state_val_24138 === 11) {
                                var inst_24126 = state_24137[2];
                                var state_24137__$1 = state_24137;
                                if (cljs.core.truth_(inst_24126)) {
                                  var statearr_24146_24168 = state_24137__$1;
                                  statearr_24146_24168[1] = 12;
                                } else {
                                  var statearr_24147_24169 = state_24137__$1;
                                  statearr_24147_24169[1] = 13;
                                }
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_24138 === 9) {
                                  var state_24137__$1 = state_24137;
                                  var statearr_24148_24170 = state_24137__$1;
                                  statearr_24148_24170[2] = null;
                                  statearr_24148_24170[1] = 10;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_24138 === 5) {
                                    var state_24137__$1 = state_24137;
                                    if (cljs.core.truth_(close_QMARK_)) {
                                      var statearr_24149_24171 = state_24137__$1;
                                      statearr_24149_24171[1] = 8;
                                    } else {
                                      var statearr_24150_24172 = state_24137__$1;
                                      statearr_24150_24172[1] = 9;
                                    }
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_24138 === 14) {
                                      var inst_24131 = state_24137[2];
                                      var state_24137__$1 = state_24137;
                                      var statearr_24151_24173 = state_24137__$1;
                                      statearr_24151_24173[2] = inst_24131;
                                      statearr_24151_24173[1] = 7;
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      if (state_val_24138 === 10) {
                                        var inst_24123 = state_24137[2];
                                        var state_24137__$1 = state_24137;
                                        var statearr_24152_24174 = state_24137__$1;
                                        statearr_24152_24174[2] = inst_24123;
                                        statearr_24152_24174[1] = 7;
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        if (state_val_24138 === 8) {
                                          var inst_24120 = cljs.core.async.close_BANG_.call(null, to);
                                          var state_24137__$1 = state_24137;
                                          var statearr_24153_24175 = state_24137__$1;
                                          statearr_24153_24175[2] = inst_24120;
                                          statearr_24153_24175[1] = 10;
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          return null;
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            };
          }(c__10282__auto___24161);
          return function(switch__10226__auto__, c__10282__auto___24161) {
            return function() {
              var state_machine__10227__auto__ = null;
              var state_machine__10227__auto____0 = function() {
                var statearr_24157 = [null, null, null, null, null, null, null, null];
                statearr_24157[0] = state_machine__10227__auto__;
                statearr_24157[1] = 1;
                return statearr_24157;
              };
              var state_machine__10227__auto____1 = function(state_24137) {
                while (true) {
                  var ret_value__10228__auto__ = function() {
                    try {
                      while (true) {
                        var result__10229__auto__ = switch__10226__auto__.call(null, state_24137);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__10229__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          continue;
                        } else {
                          return result__10229__auto__;
                        }
                        break;
                      }
                    } catch (e24158) {
                      if (e24158 instanceof Object) {
                        var ex__10230__auto__ = e24158;
                        var statearr_24159_24176 = state_24137;
                        statearr_24159_24176[5] = ex__10230__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_24137);
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        throw e24158;
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__10228__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                    var G__24177 = state_24137;
                    state_24137 = G__24177;
                    continue;
                  } else {
                    return ret_value__10228__auto__;
                  }
                  break;
                }
              };
              state_machine__10227__auto__ = function(state_24137) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__10227__auto____0.call(this);
                  case 1:
                    return state_machine__10227__auto____1.call(this, state_24137);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__10227__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__10227__auto____0;
              state_machine__10227__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__10227__auto____1;
              return state_machine__10227__auto__;
            }();
          }(switch__10226__auto__, c__10282__auto___24161);
        }();
        var state__10284__auto__ = function() {
          var statearr_24160 = f__10283__auto__.call(null);
          statearr_24160[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__10282__auto___24161;
          return statearr_24160;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__10284__auto__);
      };
    }(c__10282__auto___24161));
    return to;
  };
  pipe = function(from, to, close_QMARK_) {
    switch(arguments.length) {
      case 2:
        return pipe__2.call(this, from, to);
      case 3:
        return pipe__3.call(this, from, to, close_QMARK_);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  pipe.cljs$core$IFn$_invoke$arity$2 = pipe__2;
  pipe.cljs$core$IFn$_invoke$arity$3 = pipe__3;
  return pipe;
}();
cljs.core.async.pipeline_STAR_ = function pipeline_STAR_(n, to, xf, from, close_QMARK_, ex_handler, type) {
  if (n > 0) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "pos?", "pos?", -244377722, null), new cljs.core.Symbol(null, "n", "n", -2092305744, null))))].join(""));
  }
  var jobs = cljs.core.async.chan.call(null, n);
  var results = cljs.core.async.chan.call(null, n);
  var process = function(jobs, results) {
    return function(p__24361) {
      var vec__24362 = p__24361;
      var v = cljs.core.nth.call(null, vec__24362, 0, null);
      var p = cljs.core.nth.call(null, vec__24362, 1, null);
      var job = vec__24362;
      if (job == null) {
        cljs.core.async.close_BANG_.call(null, results);
        return null;
      } else {
        var res = cljs.core.async.chan.call(null, 1, xf, ex_handler);
        var c__10282__auto___24544 = cljs.core.async.chan.call(null, 1);
        cljs.core.async.impl.dispatch.run.call(null, function(c__10282__auto___24544, res, vec__24362, v, p, job, jobs, results) {
          return function() {
            var f__10283__auto__ = function() {
              var switch__10226__auto__ = function(c__10282__auto___24544, res, vec__24362, v, p, job, jobs, results) {
                return function(state_24367) {
                  var state_val_24368 = state_24367[1];
                  if (state_val_24368 === 2) {
                    var inst_24364 = state_24367[2];
                    var inst_24365 = cljs.core.async.close_BANG_.call(null, res);
                    var state_24367__$1 = function() {
                      var statearr_24369 = state_24367;
                      statearr_24369[7] = inst_24364;
                      return statearr_24369;
                    }();
                    return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_24367__$1, inst_24365);
                  } else {
                    if (state_val_24368 === 1) {
                      var state_24367__$1 = state_24367;
                      return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_24367__$1, 2, res, v);
                    } else {
                      return null;
                    }
                  }
                };
              }(c__10282__auto___24544, res, vec__24362, v, p, job, jobs, results);
              return function(switch__10226__auto__, c__10282__auto___24544, res, vec__24362, v, p, job, jobs, results) {
                return function() {
                  var state_machine__10227__auto__ = null;
                  var state_machine__10227__auto____0 = function() {
                    var statearr_24373 = [null, null, null, null, null, null, null, null];
                    statearr_24373[0] = state_machine__10227__auto__;
                    statearr_24373[1] = 1;
                    return statearr_24373;
                  };
                  var state_machine__10227__auto____1 = function(state_24367) {
                    while (true) {
                      var ret_value__10228__auto__ = function() {
                        try {
                          while (true) {
                            var result__10229__auto__ = switch__10226__auto__.call(null, state_24367);
                            if (cljs.core.keyword_identical_QMARK_.call(null, result__10229__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                              continue;
                            } else {
                              return result__10229__auto__;
                            }
                            break;
                          }
                        } catch (e24374) {
                          if (e24374 instanceof Object) {
                            var ex__10230__auto__ = e24374;
                            var statearr_24375_24545 = state_24367;
                            statearr_24375_24545[5] = ex__10230__auto__;
                            cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_24367);
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            throw e24374;
                          }
                        }
                      }();
                      if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__10228__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        var G__24546 = state_24367;
                        state_24367 = G__24546;
                        continue;
                      } else {
                        return ret_value__10228__auto__;
                      }
                      break;
                    }
                  };
                  state_machine__10227__auto__ = function(state_24367) {
                    switch(arguments.length) {
                      case 0:
                        return state_machine__10227__auto____0.call(this);
                      case 1:
                        return state_machine__10227__auto____1.call(this, state_24367);
                    }
                    throw new Error("Invalid arity: " + arguments.length);
                  };
                  state_machine__10227__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__10227__auto____0;
                  state_machine__10227__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__10227__auto____1;
                  return state_machine__10227__auto__;
                }();
              }(switch__10226__auto__, c__10282__auto___24544, res, vec__24362, v, p, job, jobs, results);
            }();
            var state__10284__auto__ = function() {
              var statearr_24376 = f__10283__auto__.call(null);
              statearr_24376[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__10282__auto___24544;
              return statearr_24376;
            }();
            return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__10284__auto__);
          };
        }(c__10282__auto___24544, res, vec__24362, v, p, job, jobs, results));
        cljs.core.async.put_BANG_.call(null, p, res);
        return true;
      }
    };
  }(jobs, results);
  var async = function(jobs, results, process) {
    return function(p__24377) {
      var vec__24378 = p__24377;
      var v = cljs.core.nth.call(null, vec__24378, 0, null);
      var p = cljs.core.nth.call(null, vec__24378, 1, null);
      var job = vec__24378;
      if (job == null) {
        cljs.core.async.close_BANG_.call(null, results);
        return null;
      } else {
        var res = cljs.core.async.chan.call(null, 1);
        xf.call(null, v, res);
        cljs.core.async.put_BANG_.call(null, p, res);
        return true;
      }
    };
  }(jobs, results, process);
  var n__8391__auto___24547 = n;
  var __24548 = 0;
  while (true) {
    if (__24548 < n__8391__auto___24547) {
      var G__24379_24549 = type instanceof cljs.core.Keyword ? type.fqn : null;
      switch(G__24379_24549) {
        case "async":
          var c__10282__auto___24551 = cljs.core.async.chan.call(null, 1);
          cljs.core.async.impl.dispatch.run.call(null, function(__24548, c__10282__auto___24551, G__24379_24549, n__8391__auto___24547, jobs, results, process, async) {
            return function() {
              var f__10283__auto__ = function() {
                var switch__10226__auto__ = function(__24548, c__10282__auto___24551, G__24379_24549, n__8391__auto___24547, jobs, results, process, async) {
                  return function(state_24392) {
                    var state_val_24393 = state_24392[1];
                    if (state_val_24393 === 7) {
                      var inst_24388 = state_24392[2];
                      var state_24392__$1 = state_24392;
                      var statearr_24394_24552 = state_24392__$1;
                      statearr_24394_24552[2] = inst_24388;
                      statearr_24394_24552[1] = 3;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_24393 === 6) {
                        var state_24392__$1 = state_24392;
                        var statearr_24395_24553 = state_24392__$1;
                        statearr_24395_24553[2] = null;
                        statearr_24395_24553[1] = 7;
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_24393 === 5) {
                          var state_24392__$1 = state_24392;
                          var statearr_24396_24554 = state_24392__$1;
                          statearr_24396_24554[2] = null;
                          statearr_24396_24554[1] = 2;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_24393 === 4) {
                            var inst_24382 = state_24392[2];
                            var inst_24383 = async.call(null, inst_24382);
                            var state_24392__$1 = state_24392;
                            if (cljs.core.truth_(inst_24383)) {
                              var statearr_24397_24555 = state_24392__$1;
                              statearr_24397_24555[1] = 5;
                            } else {
                              var statearr_24398_24556 = state_24392__$1;
                              statearr_24398_24556[1] = 6;
                            }
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_24393 === 3) {
                              var inst_24390 = state_24392[2];
                              var state_24392__$1 = state_24392;
                              return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_24392__$1, inst_24390);
                            } else {
                              if (state_val_24393 === 2) {
                                var state_24392__$1 = state_24392;
                                return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_24392__$1, 4, jobs);
                              } else {
                                if (state_val_24393 === 1) {
                                  var state_24392__$1 = state_24392;
                                  var statearr_24399_24557 = state_24392__$1;
                                  statearr_24399_24557[2] = null;
                                  statearr_24399_24557[1] = 2;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  return null;
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  };
                }(__24548, c__10282__auto___24551, G__24379_24549, n__8391__auto___24547, jobs, results, process, async);
                return function(__24548, switch__10226__auto__, c__10282__auto___24551, G__24379_24549, n__8391__auto___24547, jobs, results, process, async) {
                  return function() {
                    var state_machine__10227__auto__ = null;
                    var state_machine__10227__auto____0 = function() {
                      var statearr_24403 = [null, null, null, null, null, null, null];
                      statearr_24403[0] = state_machine__10227__auto__;
                      statearr_24403[1] = 1;
                      return statearr_24403;
                    };
                    var state_machine__10227__auto____1 = function(state_24392) {
                      while (true) {
                        var ret_value__10228__auto__ = function() {
                          try {
                            while (true) {
                              var result__10229__auto__ = switch__10226__auto__.call(null, state_24392);
                              if (cljs.core.keyword_identical_QMARK_.call(null, result__10229__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                                continue;
                              } else {
                                return result__10229__auto__;
                              }
                              break;
                            }
                          } catch (e24404) {
                            if (e24404 instanceof Object) {
                              var ex__10230__auto__ = e24404;
                              var statearr_24405_24558 = state_24392;
                              statearr_24405_24558[5] = ex__10230__auto__;
                              cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_24392);
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              throw e24404;
                            }
                          }
                        }();
                        if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__10228__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          var G__24559 = state_24392;
                          state_24392 = G__24559;
                          continue;
                        } else {
                          return ret_value__10228__auto__;
                        }
                        break;
                      }
                    };
                    state_machine__10227__auto__ = function(state_24392) {
                      switch(arguments.length) {
                        case 0:
                          return state_machine__10227__auto____0.call(this);
                        case 1:
                          return state_machine__10227__auto____1.call(this, state_24392);
                      }
                      throw new Error("Invalid arity: " + arguments.length);
                    };
                    state_machine__10227__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__10227__auto____0;
                    state_machine__10227__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__10227__auto____1;
                    return state_machine__10227__auto__;
                  }();
                }(__24548, switch__10226__auto__, c__10282__auto___24551, G__24379_24549, n__8391__auto___24547, jobs, results, process, async);
              }();
              var state__10284__auto__ = function() {
                var statearr_24406 = f__10283__auto__.call(null);
                statearr_24406[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__10282__auto___24551;
                return statearr_24406;
              }();
              return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__10284__auto__);
            };
          }(__24548, c__10282__auto___24551, G__24379_24549, n__8391__auto___24547, jobs, results, process, async));
          break;
        case "compute":
          var c__10282__auto___24560 = cljs.core.async.chan.call(null, 1);
          cljs.core.async.impl.dispatch.run.call(null, function(__24548, c__10282__auto___24560, G__24379_24549, n__8391__auto___24547, jobs, results, process, async) {
            return function() {
              var f__10283__auto__ = function() {
                var switch__10226__auto__ = function(__24548, c__10282__auto___24560, G__24379_24549, n__8391__auto___24547, jobs, results, process, async) {
                  return function(state_24419) {
                    var state_val_24420 = state_24419[1];
                    if (state_val_24420 === 7) {
                      var inst_24415 = state_24419[2];
                      var state_24419__$1 = state_24419;
                      var statearr_24421_24561 = state_24419__$1;
                      statearr_24421_24561[2] = inst_24415;
                      statearr_24421_24561[1] = 3;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_24420 === 6) {
                        var state_24419__$1 = state_24419;
                        var statearr_24422_24562 = state_24419__$1;
                        statearr_24422_24562[2] = null;
                        statearr_24422_24562[1] = 7;
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_24420 === 5) {
                          var state_24419__$1 = state_24419;
                          var statearr_24423_24563 = state_24419__$1;
                          statearr_24423_24563[2] = null;
                          statearr_24423_24563[1] = 2;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_24420 === 4) {
                            var inst_24409 = state_24419[2];
                            var inst_24410 = process.call(null, inst_24409);
                            var state_24419__$1 = state_24419;
                            if (cljs.core.truth_(inst_24410)) {
                              var statearr_24424_24564 = state_24419__$1;
                              statearr_24424_24564[1] = 5;
                            } else {
                              var statearr_24425_24565 = state_24419__$1;
                              statearr_24425_24565[1] = 6;
                            }
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_24420 === 3) {
                              var inst_24417 = state_24419[2];
                              var state_24419__$1 = state_24419;
                              return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_24419__$1, inst_24417);
                            } else {
                              if (state_val_24420 === 2) {
                                var state_24419__$1 = state_24419;
                                return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_24419__$1, 4, jobs);
                              } else {
                                if (state_val_24420 === 1) {
                                  var state_24419__$1 = state_24419;
                                  var statearr_24426_24566 = state_24419__$1;
                                  statearr_24426_24566[2] = null;
                                  statearr_24426_24566[1] = 2;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  return null;
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  };
                }(__24548, c__10282__auto___24560, G__24379_24549, n__8391__auto___24547, jobs, results, process, async);
                return function(__24548, switch__10226__auto__, c__10282__auto___24560, G__24379_24549, n__8391__auto___24547, jobs, results, process, async) {
                  return function() {
                    var state_machine__10227__auto__ = null;
                    var state_machine__10227__auto____0 = function() {
                      var statearr_24430 = [null, null, null, null, null, null, null];
                      statearr_24430[0] = state_machine__10227__auto__;
                      statearr_24430[1] = 1;
                      return statearr_24430;
                    };
                    var state_machine__10227__auto____1 = function(state_24419) {
                      while (true) {
                        var ret_value__10228__auto__ = function() {
                          try {
                            while (true) {
                              var result__10229__auto__ = switch__10226__auto__.call(null, state_24419);
                              if (cljs.core.keyword_identical_QMARK_.call(null, result__10229__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                                continue;
                              } else {
                                return result__10229__auto__;
                              }
                              break;
                            }
                          } catch (e24431) {
                            if (e24431 instanceof Object) {
                              var ex__10230__auto__ = e24431;
                              var statearr_24432_24567 = state_24419;
                              statearr_24432_24567[5] = ex__10230__auto__;
                              cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_24419);
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              throw e24431;
                            }
                          }
                        }();
                        if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__10228__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          var G__24568 = state_24419;
                          state_24419 = G__24568;
                          continue;
                        } else {
                          return ret_value__10228__auto__;
                        }
                        break;
                      }
                    };
                    state_machine__10227__auto__ = function(state_24419) {
                      switch(arguments.length) {
                        case 0:
                          return state_machine__10227__auto____0.call(this);
                        case 1:
                          return state_machine__10227__auto____1.call(this, state_24419);
                      }
                      throw new Error("Invalid arity: " + arguments.length);
                    };
                    state_machine__10227__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__10227__auto____0;
                    state_machine__10227__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__10227__auto____1;
                    return state_machine__10227__auto__;
                  }();
                }(__24548, switch__10226__auto__, c__10282__auto___24560, G__24379_24549, n__8391__auto___24547, jobs, results, process, async);
              }();
              var state__10284__auto__ = function() {
                var statearr_24433 = f__10283__auto__.call(null);
                statearr_24433[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__10282__auto___24560;
                return statearr_24433;
              }();
              return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__10284__auto__);
            };
          }(__24548, c__10282__auto___24560, G__24379_24549, n__8391__auto___24547, jobs, results, process, async));
          break;
        default:
          throw new Error([cljs.core.str("No matching clause: "), cljs.core.str(type)].join(""));;
      }
      var G__24569 = __24548 + 1;
      __24548 = G__24569;
      continue;
    } else {
    }
    break;
  }
  var c__10282__auto___24570 = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__10282__auto___24570, jobs, results, process, async) {
    return function() {
      var f__10283__auto__ = function() {
        var switch__10226__auto__ = function(c__10282__auto___24570, jobs, results, process, async) {
          return function(state_24455) {
            var state_val_24456 = state_24455[1];
            if (state_val_24456 === 9) {
              var inst_24448 = state_24455[2];
              var state_24455__$1 = function() {
                var statearr_24457 = state_24455;
                statearr_24457[7] = inst_24448;
                return statearr_24457;
              }();
              var statearr_24458_24571 = state_24455__$1;
              statearr_24458_24571[2] = null;
              statearr_24458_24571[1] = 2;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_24456 === 8) {
                var inst_24441 = state_24455[8];
                var inst_24446 = state_24455[2];
                var state_24455__$1 = function() {
                  var statearr_24459 = state_24455;
                  statearr_24459[9] = inst_24446;
                  return statearr_24459;
                }();
                return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_24455__$1, 9, results, inst_24441);
              } else {
                if (state_val_24456 === 7) {
                  var inst_24451 = state_24455[2];
                  var state_24455__$1 = state_24455;
                  var statearr_24460_24572 = state_24455__$1;
                  statearr_24460_24572[2] = inst_24451;
                  statearr_24460_24572[1] = 3;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_24456 === 6) {
                    var inst_24441 = state_24455[8];
                    var inst_24436 = state_24455[10];
                    var inst_24441__$1 = cljs.core.async.chan.call(null, 1);
                    var inst_24442 = cljs.core.PersistentVector.EMPTY_NODE;
                    var inst_24443 = [inst_24436, inst_24441__$1];
                    var inst_24444 = new cljs.core.PersistentVector(null, 2, 5, inst_24442, inst_24443, null);
                    var state_24455__$1 = function() {
                      var statearr_24461 = state_24455;
                      statearr_24461[8] = inst_24441__$1;
                      return statearr_24461;
                    }();
                    return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_24455__$1, 8, jobs, inst_24444);
                  } else {
                    if (state_val_24456 === 5) {
                      var inst_24439 = cljs.core.async.close_BANG_.call(null, jobs);
                      var state_24455__$1 = state_24455;
                      var statearr_24462_24573 = state_24455__$1;
                      statearr_24462_24573[2] = inst_24439;
                      statearr_24462_24573[1] = 7;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_24456 === 4) {
                        var inst_24436 = state_24455[10];
                        var inst_24436__$1 = state_24455[2];
                        var inst_24437 = inst_24436__$1 == null;
                        var state_24455__$1 = function() {
                          var statearr_24463 = state_24455;
                          statearr_24463[10] = inst_24436__$1;
                          return statearr_24463;
                        }();
                        if (cljs.core.truth_(inst_24437)) {
                          var statearr_24464_24574 = state_24455__$1;
                          statearr_24464_24574[1] = 5;
                        } else {
                          var statearr_24465_24575 = state_24455__$1;
                          statearr_24465_24575[1] = 6;
                        }
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_24456 === 3) {
                          var inst_24453 = state_24455[2];
                          var state_24455__$1 = state_24455;
                          return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_24455__$1, inst_24453);
                        } else {
                          if (state_val_24456 === 2) {
                            var state_24455__$1 = state_24455;
                            return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_24455__$1, 4, from);
                          } else {
                            if (state_val_24456 === 1) {
                              var state_24455__$1 = state_24455;
                              var statearr_24466_24576 = state_24455__$1;
                              statearr_24466_24576[2] = null;
                              statearr_24466_24576[1] = 2;
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              return null;
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__10282__auto___24570, jobs, results, process, async);
        return function(switch__10226__auto__, c__10282__auto___24570, jobs, results, process, async) {
          return function() {
            var state_machine__10227__auto__ = null;
            var state_machine__10227__auto____0 = function() {
              var statearr_24470 = [null, null, null, null, null, null, null, null, null, null, null];
              statearr_24470[0] = state_machine__10227__auto__;
              statearr_24470[1] = 1;
              return statearr_24470;
            };
            var state_machine__10227__auto____1 = function(state_24455) {
              while (true) {
                var ret_value__10228__auto__ = function() {
                  try {
                    while (true) {
                      var result__10229__auto__ = switch__10226__auto__.call(null, state_24455);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__10229__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__10229__auto__;
                      }
                      break;
                    }
                  } catch (e24471) {
                    if (e24471 instanceof Object) {
                      var ex__10230__auto__ = e24471;
                      var statearr_24472_24577 = state_24455;
                      statearr_24472_24577[5] = ex__10230__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_24455);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e24471;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__10228__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__24578 = state_24455;
                  state_24455 = G__24578;
                  continue;
                } else {
                  return ret_value__10228__auto__;
                }
                break;
              }
            };
            state_machine__10227__auto__ = function(state_24455) {
              switch(arguments.length) {
                case 0:
                  return state_machine__10227__auto____0.call(this);
                case 1:
                  return state_machine__10227__auto____1.call(this, state_24455);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__10227__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__10227__auto____0;
            state_machine__10227__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__10227__auto____1;
            return state_machine__10227__auto__;
          }();
        }(switch__10226__auto__, c__10282__auto___24570, jobs, results, process, async);
      }();
      var state__10284__auto__ = function() {
        var statearr_24473 = f__10283__auto__.call(null);
        statearr_24473[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__10282__auto___24570;
        return statearr_24473;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__10284__auto__);
    };
  }(c__10282__auto___24570, jobs, results, process, async));
  var c__10282__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__10282__auto__, jobs, results, process, async) {
    return function() {
      var f__10283__auto__ = function() {
        var switch__10226__auto__ = function(c__10282__auto__, jobs, results, process, async) {
          return function(state_24511) {
            var state_val_24512 = state_24511[1];
            if (state_val_24512 === 7) {
              var inst_24507 = state_24511[2];
              var state_24511__$1 = state_24511;
              var statearr_24513_24579 = state_24511__$1;
              statearr_24513_24579[2] = inst_24507;
              statearr_24513_24579[1] = 3;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_24512 === 20) {
                var state_24511__$1 = state_24511;
                var statearr_24514_24580 = state_24511__$1;
                statearr_24514_24580[2] = null;
                statearr_24514_24580[1] = 21;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_24512 === 1) {
                  var state_24511__$1 = state_24511;
                  var statearr_24515_24581 = state_24511__$1;
                  statearr_24515_24581[2] = null;
                  statearr_24515_24581[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_24512 === 4) {
                    var inst_24476 = state_24511[7];
                    var inst_24476__$1 = state_24511[2];
                    var inst_24477 = inst_24476__$1 == null;
                    var state_24511__$1 = function() {
                      var statearr_24516 = state_24511;
                      statearr_24516[7] = inst_24476__$1;
                      return statearr_24516;
                    }();
                    if (cljs.core.truth_(inst_24477)) {
                      var statearr_24517_24582 = state_24511__$1;
                      statearr_24517_24582[1] = 5;
                    } else {
                      var statearr_24518_24583 = state_24511__$1;
                      statearr_24518_24583[1] = 6;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_24512 === 15) {
                      var inst_24489 = state_24511[8];
                      var state_24511__$1 = state_24511;
                      return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_24511__$1, 18, to, inst_24489);
                    } else {
                      if (state_val_24512 === 21) {
                        var inst_24502 = state_24511[2];
                        var state_24511__$1 = state_24511;
                        var statearr_24519_24584 = state_24511__$1;
                        statearr_24519_24584[2] = inst_24502;
                        statearr_24519_24584[1] = 13;
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_24512 === 13) {
                          var inst_24504 = state_24511[2];
                          var state_24511__$1 = function() {
                            var statearr_24520 = state_24511;
                            statearr_24520[9] = inst_24504;
                            return statearr_24520;
                          }();
                          var statearr_24521_24585 = state_24511__$1;
                          statearr_24521_24585[2] = null;
                          statearr_24521_24585[1] = 2;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_24512 === 6) {
                            var inst_24476 = state_24511[7];
                            var state_24511__$1 = state_24511;
                            return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_24511__$1, 11, inst_24476);
                          } else {
                            if (state_val_24512 === 17) {
                              var inst_24497 = state_24511[2];
                              var state_24511__$1 = state_24511;
                              if (cljs.core.truth_(inst_24497)) {
                                var statearr_24522_24586 = state_24511__$1;
                                statearr_24522_24586[1] = 19;
                              } else {
                                var statearr_24523_24587 = state_24511__$1;
                                statearr_24523_24587[1] = 20;
                              }
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_24512 === 3) {
                                var inst_24509 = state_24511[2];
                                var state_24511__$1 = state_24511;
                                return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_24511__$1, inst_24509);
                              } else {
                                if (state_val_24512 === 12) {
                                  var inst_24486 = state_24511[10];
                                  var state_24511__$1 = state_24511;
                                  return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_24511__$1, 14, inst_24486);
                                } else {
                                  if (state_val_24512 === 2) {
                                    var state_24511__$1 = state_24511;
                                    return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_24511__$1, 4, results);
                                  } else {
                                    if (state_val_24512 === 19) {
                                      var state_24511__$1 = state_24511;
                                      var statearr_24524_24588 = state_24511__$1;
                                      statearr_24524_24588[2] = null;
                                      statearr_24524_24588[1] = 12;
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      if (state_val_24512 === 11) {
                                        var inst_24486 = state_24511[2];
                                        var state_24511__$1 = function() {
                                          var statearr_24525 = state_24511;
                                          statearr_24525[10] = inst_24486;
                                          return statearr_24525;
                                        }();
                                        var statearr_24526_24589 = state_24511__$1;
                                        statearr_24526_24589[2] = null;
                                        statearr_24526_24589[1] = 12;
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        if (state_val_24512 === 9) {
                                          var state_24511__$1 = state_24511;
                                          var statearr_24527_24590 = state_24511__$1;
                                          statearr_24527_24590[2] = null;
                                          statearr_24527_24590[1] = 10;
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          if (state_val_24512 === 5) {
                                            var state_24511__$1 = state_24511;
                                            if (cljs.core.truth_(close_QMARK_)) {
                                              var statearr_24528_24591 = state_24511__$1;
                                              statearr_24528_24591[1] = 8;
                                            } else {
                                              var statearr_24529_24592 = state_24511__$1;
                                              statearr_24529_24592[1] = 9;
                                            }
                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                          } else {
                                            if (state_val_24512 === 14) {
                                              var inst_24491 = state_24511[11];
                                              var inst_24489 = state_24511[8];
                                              var inst_24489__$1 = state_24511[2];
                                              var inst_24490 = inst_24489__$1 == null;
                                              var inst_24491__$1 = cljs.core.not.call(null, inst_24490);
                                              var state_24511__$1 = function() {
                                                var statearr_24530 = state_24511;
                                                statearr_24530[11] = inst_24491__$1;
                                                statearr_24530[8] = inst_24489__$1;
                                                return statearr_24530;
                                              }();
                                              if (inst_24491__$1) {
                                                var statearr_24531_24593 = state_24511__$1;
                                                statearr_24531_24593[1] = 15;
                                              } else {
                                                var statearr_24532_24594 = state_24511__$1;
                                                statearr_24532_24594[1] = 16;
                                              }
                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                            } else {
                                              if (state_val_24512 === 16) {
                                                var inst_24491 = state_24511[11];
                                                var state_24511__$1 = state_24511;
                                                var statearr_24533_24595 = state_24511__$1;
                                                statearr_24533_24595[2] = inst_24491;
                                                statearr_24533_24595[1] = 17;
                                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                              } else {
                                                if (state_val_24512 === 10) {
                                                  var inst_24483 = state_24511[2];
                                                  var state_24511__$1 = state_24511;
                                                  var statearr_24534_24596 = state_24511__$1;
                                                  statearr_24534_24596[2] = inst_24483;
                                                  statearr_24534_24596[1] = 7;
                                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                } else {
                                                  if (state_val_24512 === 18) {
                                                    var inst_24494 = state_24511[2];
                                                    var state_24511__$1 = state_24511;
                                                    var statearr_24535_24597 = state_24511__$1;
                                                    statearr_24535_24597[2] = inst_24494;
                                                    statearr_24535_24597[1] = 17;
                                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                  } else {
                                                    if (state_val_24512 === 8) {
                                                      var inst_24480 = cljs.core.async.close_BANG_.call(null, to);
                                                      var state_24511__$1 = state_24511;
                                                      var statearr_24536_24598 = state_24511__$1;
                                                      statearr_24536_24598[2] = inst_24480;
                                                      statearr_24536_24598[1] = 10;
                                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                    } else {
                                                      return null;
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__10282__auto__, jobs, results, process, async);
        return function(switch__10226__auto__, c__10282__auto__, jobs, results, process, async) {
          return function() {
            var state_machine__10227__auto__ = null;
            var state_machine__10227__auto____0 = function() {
              var statearr_24540 = [null, null, null, null, null, null, null, null, null, null, null, null];
              statearr_24540[0] = state_machine__10227__auto__;
              statearr_24540[1] = 1;
              return statearr_24540;
            };
            var state_machine__10227__auto____1 = function(state_24511) {
              while (true) {
                var ret_value__10228__auto__ = function() {
                  try {
                    while (true) {
                      var result__10229__auto__ = switch__10226__auto__.call(null, state_24511);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__10229__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__10229__auto__;
                      }
                      break;
                    }
                  } catch (e24541) {
                    if (e24541 instanceof Object) {
                      var ex__10230__auto__ = e24541;
                      var statearr_24542_24599 = state_24511;
                      statearr_24542_24599[5] = ex__10230__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_24511);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e24541;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__10228__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__24600 = state_24511;
                  state_24511 = G__24600;
                  continue;
                } else {
                  return ret_value__10228__auto__;
                }
                break;
              }
            };
            state_machine__10227__auto__ = function(state_24511) {
              switch(arguments.length) {
                case 0:
                  return state_machine__10227__auto____0.call(this);
                case 1:
                  return state_machine__10227__auto____1.call(this, state_24511);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__10227__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__10227__auto____0;
            state_machine__10227__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__10227__auto____1;
            return state_machine__10227__auto__;
          }();
        }(switch__10226__auto__, c__10282__auto__, jobs, results, process, async);
      }();
      var state__10284__auto__ = function() {
        var statearr_24543 = f__10283__auto__.call(null);
        statearr_24543[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__10282__auto__;
        return statearr_24543;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__10284__auto__);
    };
  }(c__10282__auto__, jobs, results, process, async));
  return c__10282__auto__;
};
cljs.core.async.pipeline_async = function() {
  var pipeline_async = null;
  var pipeline_async__4 = function(n, to, af, from) {
    return pipeline_async.call(null, n, to, af, from, true);
  };
  var pipeline_async__5 = function(n, to, af, from, close_QMARK_) {
    return cljs.core.async.pipeline_STAR_.call(null, n, to, af, from, close_QMARK_, null, new cljs.core.Keyword(null, "async", "async", 1050769601));
  };
  pipeline_async = function(n, to, af, from, close_QMARK_) {
    switch(arguments.length) {
      case 4:
        return pipeline_async__4.call(this, n, to, af, from);
      case 5:
        return pipeline_async__5.call(this, n, to, af, from, close_QMARK_);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  pipeline_async.cljs$core$IFn$_invoke$arity$4 = pipeline_async__4;
  pipeline_async.cljs$core$IFn$_invoke$arity$5 = pipeline_async__5;
  return pipeline_async;
}();
cljs.core.async.pipeline = function() {
  var pipeline = null;
  var pipeline__4 = function(n, to, xf, from) {
    return pipeline.call(null, n, to, xf, from, true);
  };
  var pipeline__5 = function(n, to, xf, from, close_QMARK_) {
    return pipeline.call(null, n, to, xf, from, close_QMARK_, null);
  };
  var pipeline__6 = function(n, to, xf, from, close_QMARK_, ex_handler) {
    return cljs.core.async.pipeline_STAR_.call(null, n, to, xf, from, close_QMARK_, ex_handler, new cljs.core.Keyword(null, "compute", "compute", 1555393130));
  };
  pipeline = function(n, to, xf, from, close_QMARK_, ex_handler) {
    switch(arguments.length) {
      case 4:
        return pipeline__4.call(this, n, to, xf, from);
      case 5:
        return pipeline__5.call(this, n, to, xf, from, close_QMARK_);
      case 6:
        return pipeline__6.call(this, n, to, xf, from, close_QMARK_, ex_handler);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  pipeline.cljs$core$IFn$_invoke$arity$4 = pipeline__4;
  pipeline.cljs$core$IFn$_invoke$arity$5 = pipeline__5;
  pipeline.cljs$core$IFn$_invoke$arity$6 = pipeline__6;
  return pipeline;
}();
cljs.core.async.split = function() {
  var split = null;
  var split__2 = function(p, ch) {
    return split.call(null, p, ch, null, null);
  };
  var split__4 = function(p, ch, t_buf_or_n, f_buf_or_n) {
    var tc = cljs.core.async.chan.call(null, t_buf_or_n);
    var fc = cljs.core.async.chan.call(null, f_buf_or_n);
    var c__10282__auto___24701 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__10282__auto___24701, tc, fc) {
      return function() {
        var f__10283__auto__ = function() {
          var switch__10226__auto__ = function(c__10282__auto___24701, tc, fc) {
            return function(state_24676) {
              var state_val_24677 = state_24676[1];
              if (state_val_24677 === 7) {
                var inst_24672 = state_24676[2];
                var state_24676__$1 = state_24676;
                var statearr_24678_24702 = state_24676__$1;
                statearr_24678_24702[2] = inst_24672;
                statearr_24678_24702[1] = 3;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_24677 === 1) {
                  var state_24676__$1 = state_24676;
                  var statearr_24679_24703 = state_24676__$1;
                  statearr_24679_24703[2] = null;
                  statearr_24679_24703[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_24677 === 4) {
                    var inst_24653 = state_24676[7];
                    var inst_24653__$1 = state_24676[2];
                    var inst_24654 = inst_24653__$1 == null;
                    var state_24676__$1 = function() {
                      var statearr_24680 = state_24676;
                      statearr_24680[7] = inst_24653__$1;
                      return statearr_24680;
                    }();
                    if (cljs.core.truth_(inst_24654)) {
                      var statearr_24681_24704 = state_24676__$1;
                      statearr_24681_24704[1] = 5;
                    } else {
                      var statearr_24682_24705 = state_24676__$1;
                      statearr_24682_24705[1] = 6;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_24677 === 13) {
                      var state_24676__$1 = state_24676;
                      var statearr_24683_24706 = state_24676__$1;
                      statearr_24683_24706[2] = null;
                      statearr_24683_24706[1] = 14;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_24677 === 6) {
                        var inst_24653 = state_24676[7];
                        var inst_24659 = p.call(null, inst_24653);
                        var state_24676__$1 = state_24676;
                        if (cljs.core.truth_(inst_24659)) {
                          var statearr_24684_24707 = state_24676__$1;
                          statearr_24684_24707[1] = 9;
                        } else {
                          var statearr_24685_24708 = state_24676__$1;
                          statearr_24685_24708[1] = 10;
                        }
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_24677 === 3) {
                          var inst_24674 = state_24676[2];
                          var state_24676__$1 = state_24676;
                          return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_24676__$1, inst_24674);
                        } else {
                          if (state_val_24677 === 12) {
                            var state_24676__$1 = state_24676;
                            var statearr_24686_24709 = state_24676__$1;
                            statearr_24686_24709[2] = null;
                            statearr_24686_24709[1] = 2;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_24677 === 2) {
                              var state_24676__$1 = state_24676;
                              return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_24676__$1, 4, ch);
                            } else {
                              if (state_val_24677 === 11) {
                                var inst_24653 = state_24676[7];
                                var inst_24663 = state_24676[2];
                                var state_24676__$1 = state_24676;
                                return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_24676__$1, 8, inst_24663, inst_24653);
                              } else {
                                if (state_val_24677 === 9) {
                                  var state_24676__$1 = state_24676;
                                  var statearr_24687_24710 = state_24676__$1;
                                  statearr_24687_24710[2] = tc;
                                  statearr_24687_24710[1] = 11;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_24677 === 5) {
                                    var inst_24656 = cljs.core.async.close_BANG_.call(null, tc);
                                    var inst_24657 = cljs.core.async.close_BANG_.call(null, fc);
                                    var state_24676__$1 = function() {
                                      var statearr_24688 = state_24676;
                                      statearr_24688[8] = inst_24656;
                                      return statearr_24688;
                                    }();
                                    var statearr_24689_24711 = state_24676__$1;
                                    statearr_24689_24711[2] = inst_24657;
                                    statearr_24689_24711[1] = 7;
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_24677 === 14) {
                                      var inst_24670 = state_24676[2];
                                      var state_24676__$1 = state_24676;
                                      var statearr_24690_24712 = state_24676__$1;
                                      statearr_24690_24712[2] = inst_24670;
                                      statearr_24690_24712[1] = 7;
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      if (state_val_24677 === 10) {
                                        var state_24676__$1 = state_24676;
                                        var statearr_24691_24713 = state_24676__$1;
                                        statearr_24691_24713[2] = fc;
                                        statearr_24691_24713[1] = 11;
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        if (state_val_24677 === 8) {
                                          var inst_24665 = state_24676[2];
                                          var state_24676__$1 = state_24676;
                                          if (cljs.core.truth_(inst_24665)) {
                                            var statearr_24692_24714 = state_24676__$1;
                                            statearr_24692_24714[1] = 12;
                                          } else {
                                            var statearr_24693_24715 = state_24676__$1;
                                            statearr_24693_24715[1] = 13;
                                          }
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          return null;
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            };
          }(c__10282__auto___24701, tc, fc);
          return function(switch__10226__auto__, c__10282__auto___24701, tc, fc) {
            return function() {
              var state_machine__10227__auto__ = null;
              var state_machine__10227__auto____0 = function() {
                var statearr_24697 = [null, null, null, null, null, null, null, null, null];
                statearr_24697[0] = state_machine__10227__auto__;
                statearr_24697[1] = 1;
                return statearr_24697;
              };
              var state_machine__10227__auto____1 = function(state_24676) {
                while (true) {
                  var ret_value__10228__auto__ = function() {
                    try {
                      while (true) {
                        var result__10229__auto__ = switch__10226__auto__.call(null, state_24676);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__10229__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          continue;
                        } else {
                          return result__10229__auto__;
                        }
                        break;
                      }
                    } catch (e24698) {
                      if (e24698 instanceof Object) {
                        var ex__10230__auto__ = e24698;
                        var statearr_24699_24716 = state_24676;
                        statearr_24699_24716[5] = ex__10230__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_24676);
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        throw e24698;
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__10228__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                    var G__24717 = state_24676;
                    state_24676 = G__24717;
                    continue;
                  } else {
                    return ret_value__10228__auto__;
                  }
                  break;
                }
              };
              state_machine__10227__auto__ = function(state_24676) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__10227__auto____0.call(this);
                  case 1:
                    return state_machine__10227__auto____1.call(this, state_24676);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__10227__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__10227__auto____0;
              state_machine__10227__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__10227__auto____1;
              return state_machine__10227__auto__;
            }();
          }(switch__10226__auto__, c__10282__auto___24701, tc, fc);
        }();
        var state__10284__auto__ = function() {
          var statearr_24700 = f__10283__auto__.call(null);
          statearr_24700[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__10282__auto___24701;
          return statearr_24700;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__10284__auto__);
      };
    }(c__10282__auto___24701, tc, fc));
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [tc, fc], null);
  };
  split = function(p, ch, t_buf_or_n, f_buf_or_n) {
    switch(arguments.length) {
      case 2:
        return split__2.call(this, p, ch);
      case 4:
        return split__4.call(this, p, ch, t_buf_or_n, f_buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  split.cljs$core$IFn$_invoke$arity$2 = split__2;
  split.cljs$core$IFn$_invoke$arity$4 = split__4;
  return split;
}();
cljs.core.async.reduce = function reduce(f, init, ch) {
  var c__10282__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__10282__auto__) {
    return function() {
      var f__10283__auto__ = function() {
        var switch__10226__auto__ = function(c__10282__auto__) {
          return function(state_24764) {
            var state_val_24765 = state_24764[1];
            if (state_val_24765 === 7) {
              var inst_24760 = state_24764[2];
              var state_24764__$1 = state_24764;
              var statearr_24766_24782 = state_24764__$1;
              statearr_24766_24782[2] = inst_24760;
              statearr_24766_24782[1] = 3;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_24765 === 6) {
                var inst_24750 = state_24764[7];
                var inst_24753 = state_24764[8];
                var inst_24757 = f.call(null, inst_24750, inst_24753);
                var inst_24750__$1 = inst_24757;
                var state_24764__$1 = function() {
                  var statearr_24767 = state_24764;
                  statearr_24767[7] = inst_24750__$1;
                  return statearr_24767;
                }();
                var statearr_24768_24783 = state_24764__$1;
                statearr_24768_24783[2] = null;
                statearr_24768_24783[1] = 2;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_24765 === 5) {
                  var inst_24750 = state_24764[7];
                  var state_24764__$1 = state_24764;
                  var statearr_24769_24784 = state_24764__$1;
                  statearr_24769_24784[2] = inst_24750;
                  statearr_24769_24784[1] = 7;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_24765 === 4) {
                    var inst_24753 = state_24764[8];
                    var inst_24753__$1 = state_24764[2];
                    var inst_24754 = inst_24753__$1 == null;
                    var state_24764__$1 = function() {
                      var statearr_24770 = state_24764;
                      statearr_24770[8] = inst_24753__$1;
                      return statearr_24770;
                    }();
                    if (cljs.core.truth_(inst_24754)) {
                      var statearr_24771_24785 = state_24764__$1;
                      statearr_24771_24785[1] = 5;
                    } else {
                      var statearr_24772_24786 = state_24764__$1;
                      statearr_24772_24786[1] = 6;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_24765 === 3) {
                      var inst_24762 = state_24764[2];
                      var state_24764__$1 = state_24764;
                      return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_24764__$1, inst_24762);
                    } else {
                      if (state_val_24765 === 2) {
                        var state_24764__$1 = state_24764;
                        return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_24764__$1, 4, ch);
                      } else {
                        if (state_val_24765 === 1) {
                          var inst_24750 = init;
                          var state_24764__$1 = function() {
                            var statearr_24773 = state_24764;
                            statearr_24773[7] = inst_24750;
                            return statearr_24773;
                          }();
                          var statearr_24774_24787 = state_24764__$1;
                          statearr_24774_24787[2] = null;
                          statearr_24774_24787[1] = 2;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          return null;
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__10282__auto__);
        return function(switch__10226__auto__, c__10282__auto__) {
          return function() {
            var state_machine__10227__auto__ = null;
            var state_machine__10227__auto____0 = function() {
              var statearr_24778 = [null, null, null, null, null, null, null, null, null];
              statearr_24778[0] = state_machine__10227__auto__;
              statearr_24778[1] = 1;
              return statearr_24778;
            };
            var state_machine__10227__auto____1 = function(state_24764) {
              while (true) {
                var ret_value__10228__auto__ = function() {
                  try {
                    while (true) {
                      var result__10229__auto__ = switch__10226__auto__.call(null, state_24764);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__10229__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__10229__auto__;
                      }
                      break;
                    }
                  } catch (e24779) {
                    if (e24779 instanceof Object) {
                      var ex__10230__auto__ = e24779;
                      var statearr_24780_24788 = state_24764;
                      statearr_24780_24788[5] = ex__10230__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_24764);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e24779;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__10228__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__24789 = state_24764;
                  state_24764 = G__24789;
                  continue;
                } else {
                  return ret_value__10228__auto__;
                }
                break;
              }
            };
            state_machine__10227__auto__ = function(state_24764) {
              switch(arguments.length) {
                case 0:
                  return state_machine__10227__auto____0.call(this);
                case 1:
                  return state_machine__10227__auto____1.call(this, state_24764);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__10227__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__10227__auto____0;
            state_machine__10227__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__10227__auto____1;
            return state_machine__10227__auto__;
          }();
        }(switch__10226__auto__, c__10282__auto__);
      }();
      var state__10284__auto__ = function() {
        var statearr_24781 = f__10283__auto__.call(null);
        statearr_24781[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__10282__auto__;
        return statearr_24781;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__10284__auto__);
    };
  }(c__10282__auto__));
  return c__10282__auto__;
};
cljs.core.async.onto_chan = function() {
  var onto_chan = null;
  var onto_chan__2 = function(ch, coll) {
    return onto_chan.call(null, ch, coll, true);
  };
  var onto_chan__3 = function(ch, coll, close_QMARK_) {
    var c__10282__auto__ = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__10282__auto__) {
      return function() {
        var f__10283__auto__ = function() {
          var switch__10226__auto__ = function(c__10282__auto__) {
            return function(state_24863) {
              var state_val_24864 = state_24863[1];
              if (state_val_24864 === 7) {
                var inst_24845 = state_24863[2];
                var state_24863__$1 = state_24863;
                var statearr_24865_24888 = state_24863__$1;
                statearr_24865_24888[2] = inst_24845;
                statearr_24865_24888[1] = 6;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_24864 === 1) {
                  var inst_24839 = cljs.core.seq.call(null, coll);
                  var inst_24840 = inst_24839;
                  var state_24863__$1 = function() {
                    var statearr_24866 = state_24863;
                    statearr_24866[7] = inst_24840;
                    return statearr_24866;
                  }();
                  var statearr_24867_24889 = state_24863__$1;
                  statearr_24867_24889[2] = null;
                  statearr_24867_24889[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_24864 === 4) {
                    var inst_24840 = state_24863[7];
                    var inst_24843 = cljs.core.first.call(null, inst_24840);
                    var state_24863__$1 = state_24863;
                    return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_24863__$1, 7, ch, inst_24843);
                  } else {
                    if (state_val_24864 === 13) {
                      var inst_24857 = state_24863[2];
                      var state_24863__$1 = state_24863;
                      var statearr_24868_24890 = state_24863__$1;
                      statearr_24868_24890[2] = inst_24857;
                      statearr_24868_24890[1] = 10;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_24864 === 6) {
                        var inst_24848 = state_24863[2];
                        var state_24863__$1 = state_24863;
                        if (cljs.core.truth_(inst_24848)) {
                          var statearr_24869_24891 = state_24863__$1;
                          statearr_24869_24891[1] = 8;
                        } else {
                          var statearr_24870_24892 = state_24863__$1;
                          statearr_24870_24892[1] = 9;
                        }
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_24864 === 3) {
                          var inst_24861 = state_24863[2];
                          var state_24863__$1 = state_24863;
                          return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_24863__$1, inst_24861);
                        } else {
                          if (state_val_24864 === 12) {
                            var state_24863__$1 = state_24863;
                            var statearr_24871_24893 = state_24863__$1;
                            statearr_24871_24893[2] = null;
                            statearr_24871_24893[1] = 13;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_24864 === 2) {
                              var inst_24840 = state_24863[7];
                              var state_24863__$1 = state_24863;
                              if (cljs.core.truth_(inst_24840)) {
                                var statearr_24872_24894 = state_24863__$1;
                                statearr_24872_24894[1] = 4;
                              } else {
                                var statearr_24873_24895 = state_24863__$1;
                                statearr_24873_24895[1] = 5;
                              }
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_24864 === 11) {
                                var inst_24854 = cljs.core.async.close_BANG_.call(null, ch);
                                var state_24863__$1 = state_24863;
                                var statearr_24874_24896 = state_24863__$1;
                                statearr_24874_24896[2] = inst_24854;
                                statearr_24874_24896[1] = 13;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_24864 === 9) {
                                  var state_24863__$1 = state_24863;
                                  if (cljs.core.truth_(close_QMARK_)) {
                                    var statearr_24875_24897 = state_24863__$1;
                                    statearr_24875_24897[1] = 11;
                                  } else {
                                    var statearr_24876_24898 = state_24863__$1;
                                    statearr_24876_24898[1] = 12;
                                  }
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_24864 === 5) {
                                    var inst_24840 = state_24863[7];
                                    var state_24863__$1 = state_24863;
                                    var statearr_24877_24899 = state_24863__$1;
                                    statearr_24877_24899[2] = inst_24840;
                                    statearr_24877_24899[1] = 6;
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_24864 === 10) {
                                      var inst_24859 = state_24863[2];
                                      var state_24863__$1 = state_24863;
                                      var statearr_24878_24900 = state_24863__$1;
                                      statearr_24878_24900[2] = inst_24859;
                                      statearr_24878_24900[1] = 3;
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      if (state_val_24864 === 8) {
                                        var inst_24840 = state_24863[7];
                                        var inst_24850 = cljs.core.next.call(null, inst_24840);
                                        var inst_24840__$1 = inst_24850;
                                        var state_24863__$1 = function() {
                                          var statearr_24879 = state_24863;
                                          statearr_24879[7] = inst_24840__$1;
                                          return statearr_24879;
                                        }();
                                        var statearr_24880_24901 = state_24863__$1;
                                        statearr_24880_24901[2] = null;
                                        statearr_24880_24901[1] = 2;
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        return null;
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            };
          }(c__10282__auto__);
          return function(switch__10226__auto__, c__10282__auto__) {
            return function() {
              var state_machine__10227__auto__ = null;
              var state_machine__10227__auto____0 = function() {
                var statearr_24884 = [null, null, null, null, null, null, null, null];
                statearr_24884[0] = state_machine__10227__auto__;
                statearr_24884[1] = 1;
                return statearr_24884;
              };
              var state_machine__10227__auto____1 = function(state_24863) {
                while (true) {
                  var ret_value__10228__auto__ = function() {
                    try {
                      while (true) {
                        var result__10229__auto__ = switch__10226__auto__.call(null, state_24863);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__10229__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          continue;
                        } else {
                          return result__10229__auto__;
                        }
                        break;
                      }
                    } catch (e24885) {
                      if (e24885 instanceof Object) {
                        var ex__10230__auto__ = e24885;
                        var statearr_24886_24902 = state_24863;
                        statearr_24886_24902[5] = ex__10230__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_24863);
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        throw e24885;
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__10228__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                    var G__24903 = state_24863;
                    state_24863 = G__24903;
                    continue;
                  } else {
                    return ret_value__10228__auto__;
                  }
                  break;
                }
              };
              state_machine__10227__auto__ = function(state_24863) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__10227__auto____0.call(this);
                  case 1:
                    return state_machine__10227__auto____1.call(this, state_24863);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__10227__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__10227__auto____0;
              state_machine__10227__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__10227__auto____1;
              return state_machine__10227__auto__;
            }();
          }(switch__10226__auto__, c__10282__auto__);
        }();
        var state__10284__auto__ = function() {
          var statearr_24887 = f__10283__auto__.call(null);
          statearr_24887[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__10282__auto__;
          return statearr_24887;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__10284__auto__);
      };
    }(c__10282__auto__));
    return c__10282__auto__;
  };
  onto_chan = function(ch, coll, close_QMARK_) {
    switch(arguments.length) {
      case 2:
        return onto_chan__2.call(this, ch, coll);
      case 3:
        return onto_chan__3.call(this, ch, coll, close_QMARK_);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  onto_chan.cljs$core$IFn$_invoke$arity$2 = onto_chan__2;
  onto_chan.cljs$core$IFn$_invoke$arity$3 = onto_chan__3;
  return onto_chan;
}();
cljs.core.async.to_chan = function to_chan(coll) {
  var ch = cljs.core.async.chan.call(null, cljs.core.bounded_count.call(null, 100, coll));
  cljs.core.async.onto_chan.call(null, ch, coll);
  return ch;
};
cljs.core.async.Mux = function() {
  var obj24905 = {};
  return obj24905;
}();
cljs.core.async.muxch_STAR_ = function muxch_STAR_(_) {
  if (function() {
    var and__7492__auto__ = _;
    if (and__7492__auto__) {
      return _.cljs$core$async$Mux$muxch_STAR_$arity$1;
    } else {
      return and__7492__auto__;
    }
  }()) {
    return _.cljs$core$async$Mux$muxch_STAR_$arity$1(_);
  } else {
    var x__8148__auto__ = _ == null ? null : _;
    return function() {
      var or__7504__auto__ = cljs.core.async.muxch_STAR_[goog.typeOf(x__8148__auto__)];
      if (or__7504__auto__) {
        return or__7504__auto__;
      } else {
        var or__7504__auto____$1 = cljs.core.async.muxch_STAR_["_"];
        if (or__7504__auto____$1) {
          return or__7504__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Mux.muxch*", _);
        }
      }
    }().call(null, _);
  }
};
cljs.core.async.Mult = function() {
  var obj24907 = {};
  return obj24907;
}();
cljs.core.async.tap_STAR_ = function tap_STAR_(m, ch, close_QMARK_) {
  if (function() {
    var and__7492__auto__ = m;
    if (and__7492__auto__) {
      return m.cljs$core$async$Mult$tap_STAR_$arity$3;
    } else {
      return and__7492__auto__;
    }
  }()) {
    return m.cljs$core$async$Mult$tap_STAR_$arity$3(m, ch, close_QMARK_);
  } else {
    var x__8148__auto__ = m == null ? null : m;
    return function() {
      var or__7504__auto__ = cljs.core.async.tap_STAR_[goog.typeOf(x__8148__auto__)];
      if (or__7504__auto__) {
        return or__7504__auto__;
      } else {
        var or__7504__auto____$1 = cljs.core.async.tap_STAR_["_"];
        if (or__7504__auto____$1) {
          return or__7504__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Mult.tap*", m);
        }
      }
    }().call(null, m, ch, close_QMARK_);
  }
};
cljs.core.async.untap_STAR_ = function untap_STAR_(m, ch) {
  if (function() {
    var and__7492__auto__ = m;
    if (and__7492__auto__) {
      return m.cljs$core$async$Mult$untap_STAR_$arity$2;
    } else {
      return and__7492__auto__;
    }
  }()) {
    return m.cljs$core$async$Mult$untap_STAR_$arity$2(m, ch);
  } else {
    var x__8148__auto__ = m == null ? null : m;
    return function() {
      var or__7504__auto__ = cljs.core.async.untap_STAR_[goog.typeOf(x__8148__auto__)];
      if (or__7504__auto__) {
        return or__7504__auto__;
      } else {
        var or__7504__auto____$1 = cljs.core.async.untap_STAR_["_"];
        if (or__7504__auto____$1) {
          return or__7504__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Mult.untap*", m);
        }
      }
    }().call(null, m, ch);
  }
};
cljs.core.async.untap_all_STAR_ = function untap_all_STAR_(m) {
  if (function() {
    var and__7492__auto__ = m;
    if (and__7492__auto__) {
      return m.cljs$core$async$Mult$untap_all_STAR_$arity$1;
    } else {
      return and__7492__auto__;
    }
  }()) {
    return m.cljs$core$async$Mult$untap_all_STAR_$arity$1(m);
  } else {
    var x__8148__auto__ = m == null ? null : m;
    return function() {
      var or__7504__auto__ = cljs.core.async.untap_all_STAR_[goog.typeOf(x__8148__auto__)];
      if (or__7504__auto__) {
        return or__7504__auto__;
      } else {
        var or__7504__auto____$1 = cljs.core.async.untap_all_STAR_["_"];
        if (or__7504__auto____$1) {
          return or__7504__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Mult.untap-all*", m);
        }
      }
    }().call(null, m);
  }
};
cljs.core.async.mult = function mult(ch) {
  var cs = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var m = function() {
    if (typeof cljs.core.async.t25129 !== "undefined") {
    } else {
      cljs.core.async.t25129 = function(cs, ch, mult, meta25130) {
        this.cs = cs;
        this.ch = ch;
        this.mult = mult;
        this.meta25130 = meta25130;
        this.cljs$lang$protocol_mask$partition1$ = 0;
        this.cljs$lang$protocol_mask$partition0$ = 393216;
      };
      cljs.core.async.t25129.prototype.cljs$core$async$Mult$ = true;
      cljs.core.async.t25129.prototype.cljs$core$async$Mult$tap_STAR_$arity$3 = function(cs) {
        return function(_, ch__$1, close_QMARK_) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.swap_BANG_.call(null, self__.cs, cljs.core.assoc, ch__$1, close_QMARK_);
          return null;
        };
      }(cs);
      cljs.core.async.t25129.prototype.cljs$core$async$Mult$untap_STAR_$arity$2 = function(cs) {
        return function(_, ch__$1) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.swap_BANG_.call(null, self__.cs, cljs.core.dissoc, ch__$1);
          return null;
        };
      }(cs);
      cljs.core.async.t25129.prototype.cljs$core$async$Mult$untap_all_STAR_$arity$1 = function(cs) {
        return function(_) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.reset_BANG_.call(null, self__.cs, cljs.core.PersistentArrayMap.EMPTY);
          return null;
        };
      }(cs);
      cljs.core.async.t25129.prototype.cljs$core$async$Mux$ = true;
      cljs.core.async.t25129.prototype.cljs$core$async$Mux$muxch_STAR_$arity$1 = function(cs) {
        return function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.ch;
        };
      }(cs);
      cljs.core.async.t25129.prototype.cljs$core$IMeta$_meta$arity$1 = function(cs) {
        return function(_25131) {
          var self__ = this;
          var _25131__$1 = this;
          return self__.meta25130;
        };
      }(cs);
      cljs.core.async.t25129.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(cs) {
        return function(_25131, meta25130__$1) {
          var self__ = this;
          var _25131__$1 = this;
          return new cljs.core.async.t25129(self__.cs, self__.ch, self__.mult, meta25130__$1);
        };
      }(cs);
      cljs.core.async.t25129.cljs$lang$type = true;
      cljs.core.async.t25129.cljs$lang$ctorStr = "cljs.core.async/t25129";
      cljs.core.async.t25129.cljs$lang$ctorPrWriter = function(cs) {
        return function(this__8091__auto__, writer__8092__auto__, opt__8093__auto__) {
          return cljs.core._write.call(null, writer__8092__auto__, "cljs.core.async/t25129");
        };
      }(cs);
      cljs.core.async.__GT_t25129 = function(cs) {
        return function __GT_t25129(cs__$1, ch__$1, mult__$1, meta25130) {
          return new cljs.core.async.t25129(cs__$1, ch__$1, mult__$1, meta25130);
        };
      }(cs);
    }
    return new cljs.core.async.t25129(cs, ch, mult, cljs.core.PersistentArrayMap.EMPTY);
  }();
  var dchan = cljs.core.async.chan.call(null, 1);
  var dctr = cljs.core.atom.call(null, null);
  var done = function(cs, m, dchan, dctr) {
    return function(_) {
      if (cljs.core.swap_BANG_.call(null, dctr, cljs.core.dec) === 0) {
        return cljs.core.async.put_BANG_.call(null, dchan, true);
      } else {
        return null;
      }
    };
  }(cs, m, dchan, dctr);
  var c__10282__auto___25350 = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__10282__auto___25350, cs, m, dchan, dctr, done) {
    return function() {
      var f__10283__auto__ = function() {
        var switch__10226__auto__ = function(c__10282__auto___25350, cs, m, dchan, dctr, done) {
          return function(state_25262) {
            var state_val_25263 = state_25262[1];
            if (state_val_25263 === 7) {
              var inst_25258 = state_25262[2];
              var state_25262__$1 = state_25262;
              var statearr_25264_25351 = state_25262__$1;
              statearr_25264_25351[2] = inst_25258;
              statearr_25264_25351[1] = 3;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_25263 === 20) {
                var inst_25163 = state_25262[7];
                var inst_25173 = cljs.core.first.call(null, inst_25163);
                var inst_25174 = cljs.core.nth.call(null, inst_25173, 0, null);
                var inst_25175 = cljs.core.nth.call(null, inst_25173, 1, null);
                var state_25262__$1 = function() {
                  var statearr_25265 = state_25262;
                  statearr_25265[8] = inst_25174;
                  return statearr_25265;
                }();
                if (cljs.core.truth_(inst_25175)) {
                  var statearr_25266_25352 = state_25262__$1;
                  statearr_25266_25352[1] = 22;
                } else {
                  var statearr_25267_25353 = state_25262__$1;
                  statearr_25267_25353[1] = 23;
                }
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_25263 === 27) {
                  var inst_25210 = state_25262[9];
                  var inst_25203 = state_25262[10];
                  var inst_25134 = state_25262[11];
                  var inst_25205 = state_25262[12];
                  var inst_25210__$1 = cljs.core._nth.call(null, inst_25203, inst_25205);
                  var inst_25211 = cljs.core.async.put_BANG_.call(null, inst_25210__$1, inst_25134, done);
                  var state_25262__$1 = function() {
                    var statearr_25268 = state_25262;
                    statearr_25268[9] = inst_25210__$1;
                    return statearr_25268;
                  }();
                  if (cljs.core.truth_(inst_25211)) {
                    var statearr_25269_25354 = state_25262__$1;
                    statearr_25269_25354[1] = 30;
                  } else {
                    var statearr_25270_25355 = state_25262__$1;
                    statearr_25270_25355[1] = 31;
                  }
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_25263 === 1) {
                    var state_25262__$1 = state_25262;
                    var statearr_25271_25356 = state_25262__$1;
                    statearr_25271_25356[2] = null;
                    statearr_25271_25356[1] = 2;
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_25263 === 24) {
                      var inst_25163 = state_25262[7];
                      var inst_25180 = state_25262[2];
                      var inst_25181 = cljs.core.next.call(null, inst_25163);
                      var inst_25143 = inst_25181;
                      var inst_25144 = null;
                      var inst_25145 = 0;
                      var inst_25146 = 0;
                      var state_25262__$1 = function() {
                        var statearr_25272 = state_25262;
                        statearr_25272[13] = inst_25143;
                        statearr_25272[14] = inst_25146;
                        statearr_25272[15] = inst_25145;
                        statearr_25272[16] = inst_25144;
                        statearr_25272[17] = inst_25180;
                        return statearr_25272;
                      }();
                      var statearr_25273_25357 = state_25262__$1;
                      statearr_25273_25357[2] = null;
                      statearr_25273_25357[1] = 8;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_25263 === 39) {
                        var state_25262__$1 = state_25262;
                        var statearr_25277_25358 = state_25262__$1;
                        statearr_25277_25358[2] = null;
                        statearr_25277_25358[1] = 41;
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_25263 === 4) {
                          var inst_25134 = state_25262[11];
                          var inst_25134__$1 = state_25262[2];
                          var inst_25135 = inst_25134__$1 == null;
                          var state_25262__$1 = function() {
                            var statearr_25278 = state_25262;
                            statearr_25278[11] = inst_25134__$1;
                            return statearr_25278;
                          }();
                          if (cljs.core.truth_(inst_25135)) {
                            var statearr_25279_25359 = state_25262__$1;
                            statearr_25279_25359[1] = 5;
                          } else {
                            var statearr_25280_25360 = state_25262__$1;
                            statearr_25280_25360[1] = 6;
                          }
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_25263 === 15) {
                            var inst_25143 = state_25262[13];
                            var inst_25146 = state_25262[14];
                            var inst_25145 = state_25262[15];
                            var inst_25144 = state_25262[16];
                            var inst_25159 = state_25262[2];
                            var inst_25160 = inst_25146 + 1;
                            var tmp25274 = inst_25143;
                            var tmp25275 = inst_25145;
                            var tmp25276 = inst_25144;
                            var inst_25143__$1 = tmp25274;
                            var inst_25144__$1 = tmp25276;
                            var inst_25145__$1 = tmp25275;
                            var inst_25146__$1 = inst_25160;
                            var state_25262__$1 = function() {
                              var statearr_25281 = state_25262;
                              statearr_25281[18] = inst_25159;
                              statearr_25281[13] = inst_25143__$1;
                              statearr_25281[14] = inst_25146__$1;
                              statearr_25281[15] = inst_25145__$1;
                              statearr_25281[16] = inst_25144__$1;
                              return statearr_25281;
                            }();
                            var statearr_25282_25361 = state_25262__$1;
                            statearr_25282_25361[2] = null;
                            statearr_25282_25361[1] = 8;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_25263 === 21) {
                              var inst_25184 = state_25262[2];
                              var state_25262__$1 = state_25262;
                              var statearr_25286_25362 = state_25262__$1;
                              statearr_25286_25362[2] = inst_25184;
                              statearr_25286_25362[1] = 18;
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_25263 === 31) {
                                var inst_25210 = state_25262[9];
                                var inst_25214 = done.call(null, null);
                                var inst_25215 = cljs.core.async.untap_STAR_.call(null, m, inst_25210);
                                var state_25262__$1 = function() {
                                  var statearr_25287 = state_25262;
                                  statearr_25287[19] = inst_25214;
                                  return statearr_25287;
                                }();
                                var statearr_25288_25363 = state_25262__$1;
                                statearr_25288_25363[2] = inst_25215;
                                statearr_25288_25363[1] = 32;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_25263 === 32) {
                                  var inst_25203 = state_25262[10];
                                  var inst_25204 = state_25262[20];
                                  var inst_25202 = state_25262[21];
                                  var inst_25205 = state_25262[12];
                                  var inst_25217 = state_25262[2];
                                  var inst_25218 = inst_25205 + 1;
                                  var tmp25283 = inst_25203;
                                  var tmp25284 = inst_25204;
                                  var tmp25285 = inst_25202;
                                  var inst_25202__$1 = tmp25285;
                                  var inst_25203__$1 = tmp25283;
                                  var inst_25204__$1 = tmp25284;
                                  var inst_25205__$1 = inst_25218;
                                  var state_25262__$1 = function() {
                                    var statearr_25289 = state_25262;
                                    statearr_25289[10] = inst_25203__$1;
                                    statearr_25289[20] = inst_25204__$1;
                                    statearr_25289[22] = inst_25217;
                                    statearr_25289[21] = inst_25202__$1;
                                    statearr_25289[12] = inst_25205__$1;
                                    return statearr_25289;
                                  }();
                                  var statearr_25290_25364 = state_25262__$1;
                                  statearr_25290_25364[2] = null;
                                  statearr_25290_25364[1] = 25;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_25263 === 40) {
                                    var inst_25230 = state_25262[23];
                                    var inst_25234 = done.call(null, null);
                                    var inst_25235 = cljs.core.async.untap_STAR_.call(null, m, inst_25230);
                                    var state_25262__$1 = function() {
                                      var statearr_25291 = state_25262;
                                      statearr_25291[24] = inst_25234;
                                      return statearr_25291;
                                    }();
                                    var statearr_25292_25365 = state_25262__$1;
                                    statearr_25292_25365[2] = inst_25235;
                                    statearr_25292_25365[1] = 41;
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_25263 === 33) {
                                      var inst_25221 = state_25262[25];
                                      var inst_25223 = cljs.core.chunked_seq_QMARK_.call(null, inst_25221);
                                      var state_25262__$1 = state_25262;
                                      if (inst_25223) {
                                        var statearr_25293_25366 = state_25262__$1;
                                        statearr_25293_25366[1] = 36;
                                      } else {
                                        var statearr_25294_25367 = state_25262__$1;
                                        statearr_25294_25367[1] = 37;
                                      }
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      if (state_val_25263 === 13) {
                                        var inst_25153 = state_25262[26];
                                        var inst_25156 = cljs.core.async.close_BANG_.call(null, inst_25153);
                                        var state_25262__$1 = state_25262;
                                        var statearr_25295_25368 = state_25262__$1;
                                        statearr_25295_25368[2] = inst_25156;
                                        statearr_25295_25368[1] = 15;
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        if (state_val_25263 === 22) {
                                          var inst_25174 = state_25262[8];
                                          var inst_25177 = cljs.core.async.close_BANG_.call(null, inst_25174);
                                          var state_25262__$1 = state_25262;
                                          var statearr_25296_25369 = state_25262__$1;
                                          statearr_25296_25369[2] = inst_25177;
                                          statearr_25296_25369[1] = 24;
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          if (state_val_25263 === 36) {
                                            var inst_25221 = state_25262[25];
                                            var inst_25225 = cljs.core.chunk_first.call(null, inst_25221);
                                            var inst_25226 = cljs.core.chunk_rest.call(null, inst_25221);
                                            var inst_25227 = cljs.core.count.call(null, inst_25225);
                                            var inst_25202 = inst_25226;
                                            var inst_25203 = inst_25225;
                                            var inst_25204 = inst_25227;
                                            var inst_25205 = 0;
                                            var state_25262__$1 = function() {
                                              var statearr_25297 = state_25262;
                                              statearr_25297[10] = inst_25203;
                                              statearr_25297[20] = inst_25204;
                                              statearr_25297[21] = inst_25202;
                                              statearr_25297[12] = inst_25205;
                                              return statearr_25297;
                                            }();
                                            var statearr_25298_25370 = state_25262__$1;
                                            statearr_25298_25370[2] = null;
                                            statearr_25298_25370[1] = 25;
                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                          } else {
                                            if (state_val_25263 === 41) {
                                              var inst_25221 = state_25262[25];
                                              var inst_25237 = state_25262[2];
                                              var inst_25238 = cljs.core.next.call(null, inst_25221);
                                              var inst_25202 = inst_25238;
                                              var inst_25203 = null;
                                              var inst_25204 = 0;
                                              var inst_25205 = 0;
                                              var state_25262__$1 = function() {
                                                var statearr_25299 = state_25262;
                                                statearr_25299[10] = inst_25203;
                                                statearr_25299[20] = inst_25204;
                                                statearr_25299[27] = inst_25237;
                                                statearr_25299[21] = inst_25202;
                                                statearr_25299[12] = inst_25205;
                                                return statearr_25299;
                                              }();
                                              var statearr_25300_25371 = state_25262__$1;
                                              statearr_25300_25371[2] = null;
                                              statearr_25300_25371[1] = 25;
                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                            } else {
                                              if (state_val_25263 === 43) {
                                                var state_25262__$1 = state_25262;
                                                var statearr_25301_25372 = state_25262__$1;
                                                statearr_25301_25372[2] = null;
                                                statearr_25301_25372[1] = 44;
                                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                              } else {
                                                if (state_val_25263 === 29) {
                                                  var inst_25246 = state_25262[2];
                                                  var state_25262__$1 = state_25262;
                                                  var statearr_25302_25373 = state_25262__$1;
                                                  statearr_25302_25373[2] = inst_25246;
                                                  statearr_25302_25373[1] = 26;
                                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                } else {
                                                  if (state_val_25263 === 44) {
                                                    var inst_25255 = state_25262[2];
                                                    var state_25262__$1 = function() {
                                                      var statearr_25303 = state_25262;
                                                      statearr_25303[28] = inst_25255;
                                                      return statearr_25303;
                                                    }();
                                                    var statearr_25304_25374 = state_25262__$1;
                                                    statearr_25304_25374[2] = null;
                                                    statearr_25304_25374[1] = 2;
                                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                  } else {
                                                    if (state_val_25263 === 6) {
                                                      var inst_25194 = state_25262[29];
                                                      var inst_25193 = cljs.core.deref.call(null, cs);
                                                      var inst_25194__$1 = cljs.core.keys.call(null, inst_25193);
                                                      var inst_25195 = cljs.core.count.call(null, inst_25194__$1);
                                                      var inst_25196 = cljs.core.reset_BANG_.call(null, dctr, inst_25195);
                                                      var inst_25201 = cljs.core.seq.call(null, inst_25194__$1);
                                                      var inst_25202 = inst_25201;
                                                      var inst_25203 = null;
                                                      var inst_25204 = 0;
                                                      var inst_25205 = 0;
                                                      var state_25262__$1 = function() {
                                                        var statearr_25305 = state_25262;
                                                        statearr_25305[10] = inst_25203;
                                                        statearr_25305[30] = inst_25196;
                                                        statearr_25305[20] = inst_25204;
                                                        statearr_25305[29] = inst_25194__$1;
                                                        statearr_25305[21] = inst_25202;
                                                        statearr_25305[12] = inst_25205;
                                                        return statearr_25305;
                                                      }();
                                                      var statearr_25306_25375 = state_25262__$1;
                                                      statearr_25306_25375[2] = null;
                                                      statearr_25306_25375[1] = 25;
                                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                    } else {
                                                      if (state_val_25263 === 28) {
                                                        var inst_25221 = state_25262[25];
                                                        var inst_25202 = state_25262[21];
                                                        var inst_25221__$1 = cljs.core.seq.call(null, inst_25202);
                                                        var state_25262__$1 = function() {
                                                          var statearr_25307 = state_25262;
                                                          statearr_25307[25] = inst_25221__$1;
                                                          return statearr_25307;
                                                        }();
                                                        if (inst_25221__$1) {
                                                          var statearr_25308_25376 = state_25262__$1;
                                                          statearr_25308_25376[1] = 33;
                                                        } else {
                                                          var statearr_25309_25377 = state_25262__$1;
                                                          statearr_25309_25377[1] = 34;
                                                        }
                                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                      } else {
                                                        if (state_val_25263 === 25) {
                                                          var inst_25204 = state_25262[20];
                                                          var inst_25205 = state_25262[12];
                                                          var inst_25207 = inst_25205 < inst_25204;
                                                          var inst_25208 = inst_25207;
                                                          var state_25262__$1 = state_25262;
                                                          if (cljs.core.truth_(inst_25208)) {
                                                            var statearr_25310_25378 = state_25262__$1;
                                                            statearr_25310_25378[1] = 27;
                                                          } else {
                                                            var statearr_25311_25379 = state_25262__$1;
                                                            statearr_25311_25379[1] = 28;
                                                          }
                                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                        } else {
                                                          if (state_val_25263 === 34) {
                                                            var state_25262__$1 = state_25262;
                                                            var statearr_25312_25380 = state_25262__$1;
                                                            statearr_25312_25380[2] = null;
                                                            statearr_25312_25380[1] = 35;
                                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                          } else {
                                                            if (state_val_25263 === 17) {
                                                              var state_25262__$1 = state_25262;
                                                              var statearr_25313_25381 = state_25262__$1;
                                                              statearr_25313_25381[2] = null;
                                                              statearr_25313_25381[1] = 18;
                                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                            } else {
                                                              if (state_val_25263 === 3) {
                                                                var inst_25260 = state_25262[2];
                                                                var state_25262__$1 = state_25262;
                                                                return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_25262__$1, inst_25260);
                                                              } else {
                                                                if (state_val_25263 === 12) {
                                                                  var inst_25189 = state_25262[2];
                                                                  var state_25262__$1 = state_25262;
                                                                  var statearr_25314_25382 = state_25262__$1;
                                                                  statearr_25314_25382[2] = inst_25189;
                                                                  statearr_25314_25382[1] = 9;
                                                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                } else {
                                                                  if (state_val_25263 === 2) {
                                                                    var state_25262__$1 = state_25262;
                                                                    return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_25262__$1, 4, ch);
                                                                  } else {
                                                                    if (state_val_25263 === 23) {
                                                                      var state_25262__$1 = state_25262;
                                                                      var statearr_25315_25383 = state_25262__$1;
                                                                      statearr_25315_25383[2] = null;
                                                                      statearr_25315_25383[1] = 24;
                                                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                    } else {
                                                                      if (state_val_25263 === 35) {
                                                                        var inst_25244 = state_25262[2];
                                                                        var state_25262__$1 = state_25262;
                                                                        var statearr_25316_25384 = state_25262__$1;
                                                                        statearr_25316_25384[2] = inst_25244;
                                                                        statearr_25316_25384[1] = 29;
                                                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                      } else {
                                                                        if (state_val_25263 === 19) {
                                                                          var inst_25163 = state_25262[7];
                                                                          var inst_25167 = cljs.core.chunk_first.call(null, inst_25163);
                                                                          var inst_25168 = cljs.core.chunk_rest.call(null, inst_25163);
                                                                          var inst_25169 = cljs.core.count.call(null, inst_25167);
                                                                          var inst_25143 = inst_25168;
                                                                          var inst_25144 = inst_25167;
                                                                          var inst_25145 = inst_25169;
                                                                          var inst_25146 = 0;
                                                                          var state_25262__$1 = function() {
                                                                            var statearr_25317 = state_25262;
                                                                            statearr_25317[13] = inst_25143;
                                                                            statearr_25317[14] = inst_25146;
                                                                            statearr_25317[15] = inst_25145;
                                                                            statearr_25317[16] = inst_25144;
                                                                            return statearr_25317;
                                                                          }();
                                                                          var statearr_25318_25385 = state_25262__$1;
                                                                          statearr_25318_25385[2] = null;
                                                                          statearr_25318_25385[1] = 8;
                                                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                        } else {
                                                                          if (state_val_25263 === 11) {
                                                                            var inst_25143 = state_25262[13];
                                                                            var inst_25163 = state_25262[7];
                                                                            var inst_25163__$1 = cljs.core.seq.call(null, inst_25143);
                                                                            var state_25262__$1 = function() {
                                                                              var statearr_25319 = state_25262;
                                                                              statearr_25319[7] = inst_25163__$1;
                                                                              return statearr_25319;
                                                                            }();
                                                                            if (inst_25163__$1) {
                                                                              var statearr_25320_25386 = state_25262__$1;
                                                                              statearr_25320_25386[1] = 16;
                                                                            } else {
                                                                              var statearr_25321_25387 = state_25262__$1;
                                                                              statearr_25321_25387[1] = 17;
                                                                            }
                                                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                          } else {
                                                                            if (state_val_25263 === 9) {
                                                                              var inst_25191 = state_25262[2];
                                                                              var state_25262__$1 = state_25262;
                                                                              var statearr_25322_25388 = state_25262__$1;
                                                                              statearr_25322_25388[2] = inst_25191;
                                                                              statearr_25322_25388[1] = 7;
                                                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                            } else {
                                                                              if (state_val_25263 === 5) {
                                                                                var inst_25141 = cljs.core.deref.call(null, cs);
                                                                                var inst_25142 = cljs.core.seq.call(null, inst_25141);
                                                                                var inst_25143 = inst_25142;
                                                                                var inst_25144 = null;
                                                                                var inst_25145 = 0;
                                                                                var inst_25146 = 0;
                                                                                var state_25262__$1 = function() {
                                                                                  var statearr_25323 = state_25262;
                                                                                  statearr_25323[13] = inst_25143;
                                                                                  statearr_25323[14] = inst_25146;
                                                                                  statearr_25323[15] = inst_25145;
                                                                                  statearr_25323[16] = inst_25144;
                                                                                  return statearr_25323;
                                                                                }();
                                                                                var statearr_25324_25389 = state_25262__$1;
                                                                                statearr_25324_25389[2] = null;
                                                                                statearr_25324_25389[1] = 8;
                                                                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                              } else {
                                                                                if (state_val_25263 === 14) {
                                                                                  var state_25262__$1 = state_25262;
                                                                                  var statearr_25325_25390 = state_25262__$1;
                                                                                  statearr_25325_25390[2] = null;
                                                                                  statearr_25325_25390[1] = 15;
                                                                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                } else {
                                                                                  if (state_val_25263 === 45) {
                                                                                    var inst_25252 = state_25262[2];
                                                                                    var state_25262__$1 = state_25262;
                                                                                    var statearr_25326_25391 = state_25262__$1;
                                                                                    statearr_25326_25391[2] = inst_25252;
                                                                                    statearr_25326_25391[1] = 44;
                                                                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                  } else {
                                                                                    if (state_val_25263 === 26) {
                                                                                      var inst_25194 = state_25262[29];
                                                                                      var inst_25248 = state_25262[2];
                                                                                      var inst_25249 = cljs.core.seq.call(null, inst_25194);
                                                                                      var state_25262__$1 = function() {
                                                                                        var statearr_25327 = state_25262;
                                                                                        statearr_25327[31] = inst_25248;
                                                                                        return statearr_25327;
                                                                                      }();
                                                                                      if (inst_25249) {
                                                                                        var statearr_25328_25392 = state_25262__$1;
                                                                                        statearr_25328_25392[1] = 42;
                                                                                      } else {
                                                                                        var statearr_25329_25393 = state_25262__$1;
                                                                                        statearr_25329_25393[1] = 43;
                                                                                      }
                                                                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                    } else {
                                                                                      if (state_val_25263 === 16) {
                                                                                        var inst_25163 = state_25262[7];
                                                                                        var inst_25165 = cljs.core.chunked_seq_QMARK_.call(null, inst_25163);
                                                                                        var state_25262__$1 = state_25262;
                                                                                        if (inst_25165) {
                                                                                          var statearr_25330_25394 = state_25262__$1;
                                                                                          statearr_25330_25394[1] = 19;
                                                                                        } else {
                                                                                          var statearr_25331_25395 = state_25262__$1;
                                                                                          statearr_25331_25395[1] = 20;
                                                                                        }
                                                                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                      } else {
                                                                                        if (state_val_25263 === 38) {
                                                                                          var inst_25241 = state_25262[2];
                                                                                          var state_25262__$1 = state_25262;
                                                                                          var statearr_25332_25396 = state_25262__$1;
                                                                                          statearr_25332_25396[2] = inst_25241;
                                                                                          statearr_25332_25396[1] = 35;
                                                                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                        } else {
                                                                                          if (state_val_25263 === 30) {
                                                                                            var state_25262__$1 = state_25262;
                                                                                            var statearr_25333_25397 = state_25262__$1;
                                                                                            statearr_25333_25397[2] = null;
                                                                                            statearr_25333_25397[1] = 32;
                                                                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                          } else {
                                                                                            if (state_val_25263 === 10) {
                                                                                              var inst_25146 = state_25262[14];
                                                                                              var inst_25144 = state_25262[16];
                                                                                              var inst_25152 = cljs.core._nth.call(null, inst_25144, inst_25146);
                                                                                              var inst_25153 = cljs.core.nth.call(null, inst_25152, 0, null);
                                                                                              var inst_25154 = cljs.core.nth.call(null, inst_25152, 1, null);
                                                                                              var state_25262__$1 = function() {
                                                                                                var statearr_25334 = state_25262;
                                                                                                statearr_25334[26] = inst_25153;
                                                                                                return statearr_25334;
                                                                                              }();
                                                                                              if (cljs.core.truth_(inst_25154)) {
                                                                                                var statearr_25335_25398 = state_25262__$1;
                                                                                                statearr_25335_25398[1] = 13;
                                                                                              } else {
                                                                                                var statearr_25336_25399 = state_25262__$1;
                                                                                                statearr_25336_25399[1] = 14;
                                                                                              }
                                                                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                            } else {
                                                                                              if (state_val_25263 === 18) {
                                                                                                var inst_25187 = state_25262[2];
                                                                                                var state_25262__$1 = state_25262;
                                                                                                var statearr_25337_25400 = state_25262__$1;
                                                                                                statearr_25337_25400[2] = inst_25187;
                                                                                                statearr_25337_25400[1] = 12;
                                                                                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                              } else {
                                                                                                if (state_val_25263 === 42) {
                                                                                                  var state_25262__$1 = state_25262;
                                                                                                  return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_25262__$1, 45, dchan);
                                                                                                } else {
                                                                                                  if (state_val_25263 === 37) {
                                                                                                    var inst_25221 = state_25262[25];
                                                                                                    var inst_25134 = state_25262[11];
                                                                                                    var inst_25230 = state_25262[23];
                                                                                                    var inst_25230__$1 = cljs.core.first.call(null, inst_25221);
                                                                                                    var inst_25231 = cljs.core.async.put_BANG_.call(null, inst_25230__$1, inst_25134, done);
                                                                                                    var state_25262__$1 = function() {
                                                                                                      var statearr_25338 = state_25262;
                                                                                                      statearr_25338[23] = inst_25230__$1;
                                                                                                      return statearr_25338;
                                                                                                    }();
                                                                                                    if (cljs.core.truth_(inst_25231)) {
                                                                                                      var statearr_25339_25401 = state_25262__$1;
                                                                                                      statearr_25339_25401[1] = 39;
                                                                                                    } else {
                                                                                                      var statearr_25340_25402 = state_25262__$1;
                                                                                                      statearr_25340_25402[1] = 40;
                                                                                                    }
                                                                                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                                  } else {
                                                                                                    if (state_val_25263 === 8) {
                                                                                                      var inst_25146 = state_25262[14];
                                                                                                      var inst_25145 = state_25262[15];
                                                                                                      var inst_25148 = inst_25146 < inst_25145;
                                                                                                      var inst_25149 = inst_25148;
                                                                                                      var state_25262__$1 = state_25262;
                                                                                                      if (cljs.core.truth_(inst_25149)) {
                                                                                                        var statearr_25341_25403 = state_25262__$1;
                                                                                                        statearr_25341_25403[1] = 10;
                                                                                                      } else {
                                                                                                        var statearr_25342_25404 = state_25262__$1;
                                                                                                        statearr_25342_25404[1] = 11;
                                                                                                      }
                                                                                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                                    } else {
                                                                                                      return null;
                                                                                                    }
                                                                                                  }
                                                                                                }
                                                                                              }
                                                                                            }
                                                                                          }
                                                                                        }
                                                                                      }
                                                                                    }
                                                                                  }
                                                                                }
                                                                              }
                                                                            }
                                                                          }
                                                                        }
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__10282__auto___25350, cs, m, dchan, dctr, done);
        return function(switch__10226__auto__, c__10282__auto___25350, cs, m, dchan, dctr, done) {
          return function() {
            var state_machine__10227__auto__ = null;
            var state_machine__10227__auto____0 = function() {
              var statearr_25346 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
              statearr_25346[0] = state_machine__10227__auto__;
              statearr_25346[1] = 1;
              return statearr_25346;
            };
            var state_machine__10227__auto____1 = function(state_25262) {
              while (true) {
                var ret_value__10228__auto__ = function() {
                  try {
                    while (true) {
                      var result__10229__auto__ = switch__10226__auto__.call(null, state_25262);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__10229__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__10229__auto__;
                      }
                      break;
                    }
                  } catch (e25347) {
                    if (e25347 instanceof Object) {
                      var ex__10230__auto__ = e25347;
                      var statearr_25348_25405 = state_25262;
                      statearr_25348_25405[5] = ex__10230__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_25262);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e25347;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__10228__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__25406 = state_25262;
                  state_25262 = G__25406;
                  continue;
                } else {
                  return ret_value__10228__auto__;
                }
                break;
              }
            };
            state_machine__10227__auto__ = function(state_25262) {
              switch(arguments.length) {
                case 0:
                  return state_machine__10227__auto____0.call(this);
                case 1:
                  return state_machine__10227__auto____1.call(this, state_25262);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__10227__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__10227__auto____0;
            state_machine__10227__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__10227__auto____1;
            return state_machine__10227__auto__;
          }();
        }(switch__10226__auto__, c__10282__auto___25350, cs, m, dchan, dctr, done);
      }();
      var state__10284__auto__ = function() {
        var statearr_25349 = f__10283__auto__.call(null);
        statearr_25349[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__10282__auto___25350;
        return statearr_25349;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__10284__auto__);
    };
  }(c__10282__auto___25350, cs, m, dchan, dctr, done));
  return m;
};
cljs.core.async.tap = function() {
  var tap = null;
  var tap__2 = function(mult, ch) {
    return tap.call(null, mult, ch, true);
  };
  var tap__3 = function(mult, ch, close_QMARK_) {
    cljs.core.async.tap_STAR_.call(null, mult, ch, close_QMARK_);
    return ch;
  };
  tap = function(mult, ch, close_QMARK_) {
    switch(arguments.length) {
      case 2:
        return tap__2.call(this, mult, ch);
      case 3:
        return tap__3.call(this, mult, ch, close_QMARK_);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  tap.cljs$core$IFn$_invoke$arity$2 = tap__2;
  tap.cljs$core$IFn$_invoke$arity$3 = tap__3;
  return tap;
}();
cljs.core.async.untap = function untap(mult, ch) {
  return cljs.core.async.untap_STAR_.call(null, mult, ch);
};
cljs.core.async.untap_all = function untap_all(mult) {
  return cljs.core.async.untap_all_STAR_.call(null, mult);
};
cljs.core.async.Mix = function() {
  var obj25408 = {};
  return obj25408;
}();
cljs.core.async.admix_STAR_ = function admix_STAR_(m, ch) {
  if (function() {
    var and__7492__auto__ = m;
    if (and__7492__auto__) {
      return m.cljs$core$async$Mix$admix_STAR_$arity$2;
    } else {
      return and__7492__auto__;
    }
  }()) {
    return m.cljs$core$async$Mix$admix_STAR_$arity$2(m, ch);
  } else {
    var x__8148__auto__ = m == null ? null : m;
    return function() {
      var or__7504__auto__ = cljs.core.async.admix_STAR_[goog.typeOf(x__8148__auto__)];
      if (or__7504__auto__) {
        return or__7504__auto__;
      } else {
        var or__7504__auto____$1 = cljs.core.async.admix_STAR_["_"];
        if (or__7504__auto____$1) {
          return or__7504__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Mix.admix*", m);
        }
      }
    }().call(null, m, ch);
  }
};
cljs.core.async.unmix_STAR_ = function unmix_STAR_(m, ch) {
  if (function() {
    var and__7492__auto__ = m;
    if (and__7492__auto__) {
      return m.cljs$core$async$Mix$unmix_STAR_$arity$2;
    } else {
      return and__7492__auto__;
    }
  }()) {
    return m.cljs$core$async$Mix$unmix_STAR_$arity$2(m, ch);
  } else {
    var x__8148__auto__ = m == null ? null : m;
    return function() {
      var or__7504__auto__ = cljs.core.async.unmix_STAR_[goog.typeOf(x__8148__auto__)];
      if (or__7504__auto__) {
        return or__7504__auto__;
      } else {
        var or__7504__auto____$1 = cljs.core.async.unmix_STAR_["_"];
        if (or__7504__auto____$1) {
          return or__7504__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Mix.unmix*", m);
        }
      }
    }().call(null, m, ch);
  }
};
cljs.core.async.unmix_all_STAR_ = function unmix_all_STAR_(m) {
  if (function() {
    var and__7492__auto__ = m;
    if (and__7492__auto__) {
      return m.cljs$core$async$Mix$unmix_all_STAR_$arity$1;
    } else {
      return and__7492__auto__;
    }
  }()) {
    return m.cljs$core$async$Mix$unmix_all_STAR_$arity$1(m);
  } else {
    var x__8148__auto__ = m == null ? null : m;
    return function() {
      var or__7504__auto__ = cljs.core.async.unmix_all_STAR_[goog.typeOf(x__8148__auto__)];
      if (or__7504__auto__) {
        return or__7504__auto__;
      } else {
        var or__7504__auto____$1 = cljs.core.async.unmix_all_STAR_["_"];
        if (or__7504__auto____$1) {
          return or__7504__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Mix.unmix-all*", m);
        }
      }
    }().call(null, m);
  }
};
cljs.core.async.toggle_STAR_ = function toggle_STAR_(m, state_map) {
  if (function() {
    var and__7492__auto__ = m;
    if (and__7492__auto__) {
      return m.cljs$core$async$Mix$toggle_STAR_$arity$2;
    } else {
      return and__7492__auto__;
    }
  }()) {
    return m.cljs$core$async$Mix$toggle_STAR_$arity$2(m, state_map);
  } else {
    var x__8148__auto__ = m == null ? null : m;
    return function() {
      var or__7504__auto__ = cljs.core.async.toggle_STAR_[goog.typeOf(x__8148__auto__)];
      if (or__7504__auto__) {
        return or__7504__auto__;
      } else {
        var or__7504__auto____$1 = cljs.core.async.toggle_STAR_["_"];
        if (or__7504__auto____$1) {
          return or__7504__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Mix.toggle*", m);
        }
      }
    }().call(null, m, state_map);
  }
};
cljs.core.async.solo_mode_STAR_ = function solo_mode_STAR_(m, mode) {
  if (function() {
    var and__7492__auto__ = m;
    if (and__7492__auto__) {
      return m.cljs$core$async$Mix$solo_mode_STAR_$arity$2;
    } else {
      return and__7492__auto__;
    }
  }()) {
    return m.cljs$core$async$Mix$solo_mode_STAR_$arity$2(m, mode);
  } else {
    var x__8148__auto__ = m == null ? null : m;
    return function() {
      var or__7504__auto__ = cljs.core.async.solo_mode_STAR_[goog.typeOf(x__8148__auto__)];
      if (or__7504__auto__) {
        return or__7504__auto__;
      } else {
        var or__7504__auto____$1 = cljs.core.async.solo_mode_STAR_["_"];
        if (or__7504__auto____$1) {
          return or__7504__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Mix.solo-mode*", m);
        }
      }
    }().call(null, m, mode);
  }
};
cljs.core.async.ioc_alts_BANG_ = function() {
  var ioc_alts_BANG___delegate = function(state, cont_block, ports, p__25409) {
    var map__25414 = p__25409;
    var map__25414__$1 = cljs.core.seq_QMARK_.call(null, map__25414) ? cljs.core.apply.call(null, cljs.core.hash_map, map__25414) : map__25414;
    var opts = map__25414__$1;
    var statearr_25415_25418 = state;
    statearr_25415_25418[cljs.core.async.impl.ioc_helpers.STATE_IDX] = cont_block;
    var temp__4126__auto__ = cljs.core.async.do_alts.call(null, function(map__25414, map__25414__$1, opts) {
      return function(val) {
        var statearr_25416_25419 = state;
        statearr_25416_25419[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = val;
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state);
      };
    }(map__25414, map__25414__$1, opts), ports, opts);
    if (cljs.core.truth_(temp__4126__auto__)) {
      var cb = temp__4126__auto__;
      var statearr_25417_25420 = state;
      statearr_25417_25420[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = cljs.core.deref.call(null, cb);
      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
    } else {
      return null;
    }
  };
  var ioc_alts_BANG_ = function(state, cont_block, ports, var_args) {
    var p__25409 = null;
    if (arguments.length > 3) {
      var G__25421__i = 0, G__25421__a = new Array(arguments.length - 3);
      while (G__25421__i < G__25421__a.length) {
        G__25421__a[G__25421__i] = arguments[G__25421__i + 3];
        ++G__25421__i;
      }
      p__25409 = new cljs.core.IndexedSeq(G__25421__a, 0);
    }
    return ioc_alts_BANG___delegate.call(this, state, cont_block, ports, p__25409);
  };
  ioc_alts_BANG_.cljs$lang$maxFixedArity = 3;
  ioc_alts_BANG_.cljs$lang$applyTo = function(arglist__25422) {
    var state = cljs.core.first(arglist__25422);
    arglist__25422 = cljs.core.next(arglist__25422);
    var cont_block = cljs.core.first(arglist__25422);
    arglist__25422 = cljs.core.next(arglist__25422);
    var ports = cljs.core.first(arglist__25422);
    var p__25409 = cljs.core.rest(arglist__25422);
    return ioc_alts_BANG___delegate(state, cont_block, ports, p__25409);
  };
  ioc_alts_BANG_.cljs$core$IFn$_invoke$arity$variadic = ioc_alts_BANG___delegate;
  return ioc_alts_BANG_;
}();
cljs.core.async.mix = function mix(out) {
  var cs = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var solo_modes = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "pause", "pause", -2095325672), null, new cljs.core.Keyword(null, "mute", "mute", 1151223646), null], null), null);
  var attrs = cljs.core.conj.call(null, solo_modes, new cljs.core.Keyword(null, "solo", "solo", -316350075));
  var solo_mode = cljs.core.atom.call(null, new cljs.core.Keyword(null, "mute", "mute", 1151223646));
  var change = cljs.core.async.chan.call(null);
  var changed = function(cs, solo_modes, attrs, solo_mode, change) {
    return function() {
      return cljs.core.async.put_BANG_.call(null, change, true);
    };
  }(cs, solo_modes, attrs, solo_mode, change);
  var pick = function(cs, solo_modes, attrs, solo_mode, change, changed) {
    return function(attr, chs) {
      return cljs.core.reduce_kv.call(null, function(cs, solo_modes, attrs, solo_mode, change, changed) {
        return function(ret, c, v) {
          if (cljs.core.truth_(attr.call(null, v))) {
            return cljs.core.conj.call(null, ret, c);
          } else {
            return ret;
          }
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed), cljs.core.PersistentHashSet.EMPTY, chs);
    };
  }(cs, solo_modes, attrs, solo_mode, change, changed);
  var calc_state = function(cs, solo_modes, attrs, solo_mode, change, changed, pick) {
    return function() {
      var chs = cljs.core.deref.call(null, cs);
      var mode = cljs.core.deref.call(null, solo_mode);
      var solos = pick.call(null, new cljs.core.Keyword(null, "solo", "solo", -316350075), chs);
      var pauses = pick.call(null, new cljs.core.Keyword(null, "pause", "pause", -2095325672), chs);
      return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "solos", "solos", 1441458643), solos, new cljs.core.Keyword(null, "mutes", "mutes", 1068806309), pick.call(null, new cljs.core.Keyword(null, "mute", "mute", 1151223646), chs), new cljs.core.Keyword(null, "reads", "reads", -1215067361), cljs.core.conj.call(null, cljs.core._EQ_.call(null, mode, new cljs.core.Keyword(null, "pause", "pause", -2095325672)) && !cljs.core.empty_QMARK_.call(null, solos) ? cljs.core.vec.call(null, 
      solos) : cljs.core.vec.call(null, cljs.core.remove.call(null, pauses, cljs.core.keys.call(null, chs))), change)], null);
    };
  }(cs, solo_modes, attrs, solo_mode, change, changed, pick);
  var m = function() {
    if (typeof cljs.core.async.t25542 !== "undefined") {
    } else {
      cljs.core.async.t25542 = function(change, mix, solo_mode, pick, cs, calc_state, out, changed, solo_modes, attrs, meta25543) {
        this.change = change;
        this.mix = mix;
        this.solo_mode = solo_mode;
        this.pick = pick;
        this.cs = cs;
        this.calc_state = calc_state;
        this.out = out;
        this.changed = changed;
        this.solo_modes = solo_modes;
        this.attrs = attrs;
        this.meta25543 = meta25543;
        this.cljs$lang$protocol_mask$partition1$ = 0;
        this.cljs$lang$protocol_mask$partition0$ = 393216;
      };
      cljs.core.async.t25542.prototype.cljs$core$async$Mix$ = true;
      cljs.core.async.t25542.prototype.cljs$core$async$Mix$admix_STAR_$arity$2 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_, ch) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.swap_BANG_.call(null, self__.cs, cljs.core.assoc, ch, cljs.core.PersistentArrayMap.EMPTY);
          return self__.changed.call(null);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t25542.prototype.cljs$core$async$Mix$unmix_STAR_$arity$2 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_, ch) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.swap_BANG_.call(null, self__.cs, cljs.core.dissoc, ch);
          return self__.changed.call(null);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t25542.prototype.cljs$core$async$Mix$unmix_all_STAR_$arity$1 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.reset_BANG_.call(null, self__.cs, cljs.core.PersistentArrayMap.EMPTY);
          return self__.changed.call(null);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t25542.prototype.cljs$core$async$Mix$toggle_STAR_$arity$2 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_, state_map) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.swap_BANG_.call(null, self__.cs, cljs.core.partial.call(null, cljs.core.merge_with, cljs.core.merge), state_map);
          return self__.changed.call(null);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t25542.prototype.cljs$core$async$Mix$solo_mode_STAR_$arity$2 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_, mode) {
          var self__ = this;
          var ___$1 = this;
          if (cljs.core.truth_(self__.solo_modes.call(null, mode))) {
          } else {
            throw new Error([cljs.core.str("Assert failed: "), cljs.core.str([cljs.core.str("mode must be one of: "), cljs.core.str(self__.solo_modes)].join("")), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "solo-modes", "solo-modes", 882180540, null), new cljs.core.Symbol(null, "mode", "mode", -2000032078, null))))].join(""));
          }
          cljs.core.reset_BANG_.call(null, self__.solo_mode, mode);
          return self__.changed.call(null);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t25542.prototype.cljs$core$async$Mux$ = true;
      cljs.core.async.t25542.prototype.cljs$core$async$Mux$muxch_STAR_$arity$1 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.out;
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t25542.prototype.cljs$core$IMeta$_meta$arity$1 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_25544) {
          var self__ = this;
          var _25544__$1 = this;
          return self__.meta25543;
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t25542.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_25544, meta25543__$1) {
          var self__ = this;
          var _25544__$1 = this;
          return new cljs.core.async.t25542(self__.change, self__.mix, self__.solo_mode, self__.pick, self__.cs, self__.calc_state, self__.out, self__.changed, self__.solo_modes, self__.attrs, meta25543__$1);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t25542.cljs$lang$type = true;
      cljs.core.async.t25542.cljs$lang$ctorStr = "cljs.core.async/t25542";
      cljs.core.async.t25542.cljs$lang$ctorPrWriter = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(this__8091__auto__, writer__8092__auto__, opt__8093__auto__) {
          return cljs.core._write.call(null, writer__8092__auto__, "cljs.core.async/t25542");
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.__GT_t25542 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function __GT_t25542(change__$1, mix__$1, solo_mode__$1, pick__$1, cs__$1, calc_state__$1, out__$1, changed__$1, solo_modes__$1, attrs__$1, meta25543) {
          return new cljs.core.async.t25542(change__$1, mix__$1, solo_mode__$1, pick__$1, cs__$1, calc_state__$1, out__$1, changed__$1, solo_modes__$1, attrs__$1, meta25543);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
    }
    return new cljs.core.async.t25542(change, mix, solo_mode, pick, cs, calc_state, out, changed, solo_modes, attrs, cljs.core.PersistentArrayMap.EMPTY);
  }();
  var c__10282__auto___25661 = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__10282__auto___25661, cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state, m) {
    return function() {
      var f__10283__auto__ = function() {
        var switch__10226__auto__ = function(c__10282__auto___25661, cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state, m) {
          return function(state_25614) {
            var state_val_25615 = state_25614[1];
            if (state_val_25615 === 7) {
              var inst_25558 = state_25614[7];
              var inst_25563 = cljs.core.apply.call(null, cljs.core.hash_map, inst_25558);
              var state_25614__$1 = state_25614;
              var statearr_25616_25662 = state_25614__$1;
              statearr_25616_25662[2] = inst_25563;
              statearr_25616_25662[1] = 9;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_25615 === 20) {
                var inst_25573 = state_25614[8];
                var state_25614__$1 = state_25614;
                return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_25614__$1, 23, out, inst_25573);
              } else {
                if (state_val_25615 === 1) {
                  var inst_25548 = state_25614[9];
                  var inst_25548__$1 = calc_state.call(null);
                  var inst_25549 = cljs.core.seq_QMARK_.call(null, inst_25548__$1);
                  var state_25614__$1 = function() {
                    var statearr_25617 = state_25614;
                    statearr_25617[9] = inst_25548__$1;
                    return statearr_25617;
                  }();
                  if (inst_25549) {
                    var statearr_25618_25663 = state_25614__$1;
                    statearr_25618_25663[1] = 2;
                  } else {
                    var statearr_25619_25664 = state_25614__$1;
                    statearr_25619_25664[1] = 3;
                  }
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_25615 === 24) {
                    var inst_25566 = state_25614[10];
                    var inst_25558 = inst_25566;
                    var state_25614__$1 = function() {
                      var statearr_25620 = state_25614;
                      statearr_25620[7] = inst_25558;
                      return statearr_25620;
                    }();
                    var statearr_25621_25665 = state_25614__$1;
                    statearr_25621_25665[2] = null;
                    statearr_25621_25665[1] = 5;
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_25615 === 4) {
                      var inst_25548 = state_25614[9];
                      var inst_25554 = state_25614[2];
                      var inst_25555 = cljs.core.get.call(null, inst_25554, new cljs.core.Keyword(null, "reads", "reads", -1215067361));
                      var inst_25556 = cljs.core.get.call(null, inst_25554, new cljs.core.Keyword(null, "mutes", "mutes", 1068806309));
                      var inst_25557 = cljs.core.get.call(null, inst_25554, new cljs.core.Keyword(null, "solos", "solos", 1441458643));
                      var inst_25558 = inst_25548;
                      var state_25614__$1 = function() {
                        var statearr_25622 = state_25614;
                        statearr_25622[11] = inst_25555;
                        statearr_25622[7] = inst_25558;
                        statearr_25622[12] = inst_25557;
                        statearr_25622[13] = inst_25556;
                        return statearr_25622;
                      }();
                      var statearr_25623_25666 = state_25614__$1;
                      statearr_25623_25666[2] = null;
                      statearr_25623_25666[1] = 5;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_25615 === 15) {
                        var state_25614__$1 = state_25614;
                        var statearr_25624_25667 = state_25614__$1;
                        statearr_25624_25667[2] = null;
                        statearr_25624_25667[1] = 16;
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_25615 === 21) {
                          var inst_25566 = state_25614[10];
                          var inst_25558 = inst_25566;
                          var state_25614__$1 = function() {
                            var statearr_25625 = state_25614;
                            statearr_25625[7] = inst_25558;
                            return statearr_25625;
                          }();
                          var statearr_25626_25668 = state_25614__$1;
                          statearr_25626_25668[2] = null;
                          statearr_25626_25668[1] = 5;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_25615 === 13) {
                            var inst_25610 = state_25614[2];
                            var state_25614__$1 = state_25614;
                            var statearr_25627_25669 = state_25614__$1;
                            statearr_25627_25669[2] = inst_25610;
                            statearr_25627_25669[1] = 6;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_25615 === 22) {
                              var inst_25608 = state_25614[2];
                              var state_25614__$1 = state_25614;
                              var statearr_25628_25670 = state_25614__$1;
                              statearr_25628_25670[2] = inst_25608;
                              statearr_25628_25670[1] = 13;
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_25615 === 6) {
                                var inst_25612 = state_25614[2];
                                var state_25614__$1 = state_25614;
                                return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_25614__$1, inst_25612);
                              } else {
                                if (state_val_25615 === 25) {
                                  var state_25614__$1 = state_25614;
                                  var statearr_25629_25671 = state_25614__$1;
                                  statearr_25629_25671[2] = null;
                                  statearr_25629_25671[1] = 26;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_25615 === 17) {
                                    var inst_25588 = state_25614[14];
                                    var state_25614__$1 = state_25614;
                                    var statearr_25630_25672 = state_25614__$1;
                                    statearr_25630_25672[2] = inst_25588;
                                    statearr_25630_25672[1] = 19;
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_25615 === 3) {
                                      var inst_25548 = state_25614[9];
                                      var state_25614__$1 = state_25614;
                                      var statearr_25631_25673 = state_25614__$1;
                                      statearr_25631_25673[2] = inst_25548;
                                      statearr_25631_25673[1] = 4;
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      if (state_val_25615 === 12) {
                                        var inst_25569 = state_25614[15];
                                        var inst_25574 = state_25614[16];
                                        var inst_25588 = state_25614[14];
                                        var inst_25588__$1 = inst_25569.call(null, inst_25574);
                                        var state_25614__$1 = function() {
                                          var statearr_25632 = state_25614;
                                          statearr_25632[14] = inst_25588__$1;
                                          return statearr_25632;
                                        }();
                                        if (cljs.core.truth_(inst_25588__$1)) {
                                          var statearr_25633_25674 = state_25614__$1;
                                          statearr_25633_25674[1] = 17;
                                        } else {
                                          var statearr_25634_25675 = state_25614__$1;
                                          statearr_25634_25675[1] = 18;
                                        }
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        if (state_val_25615 === 2) {
                                          var inst_25548 = state_25614[9];
                                          var inst_25551 = cljs.core.apply.call(null, cljs.core.hash_map, inst_25548);
                                          var state_25614__$1 = state_25614;
                                          var statearr_25635_25676 = state_25614__$1;
                                          statearr_25635_25676[2] = inst_25551;
                                          statearr_25635_25676[1] = 4;
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          if (state_val_25615 === 23) {
                                            var inst_25599 = state_25614[2];
                                            var state_25614__$1 = state_25614;
                                            if (cljs.core.truth_(inst_25599)) {
                                              var statearr_25636_25677 = state_25614__$1;
                                              statearr_25636_25677[1] = 24;
                                            } else {
                                              var statearr_25637_25678 = state_25614__$1;
                                              statearr_25637_25678[1] = 25;
                                            }
                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                          } else {
                                            if (state_val_25615 === 19) {
                                              var inst_25596 = state_25614[2];
                                              var state_25614__$1 = state_25614;
                                              if (cljs.core.truth_(inst_25596)) {
                                                var statearr_25638_25679 = state_25614__$1;
                                                statearr_25638_25679[1] = 20;
                                              } else {
                                                var statearr_25639_25680 = state_25614__$1;
                                                statearr_25639_25680[1] = 21;
                                              }
                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                            } else {
                                              if (state_val_25615 === 11) {
                                                var inst_25573 = state_25614[8];
                                                var inst_25579 = inst_25573 == null;
                                                var state_25614__$1 = state_25614;
                                                if (cljs.core.truth_(inst_25579)) {
                                                  var statearr_25640_25681 = state_25614__$1;
                                                  statearr_25640_25681[1] = 14;
                                                } else {
                                                  var statearr_25641_25682 = state_25614__$1;
                                                  statearr_25641_25682[1] = 15;
                                                }
                                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                              } else {
                                                if (state_val_25615 === 9) {
                                                  var inst_25566 = state_25614[10];
                                                  var inst_25566__$1 = state_25614[2];
                                                  var inst_25567 = cljs.core.get.call(null, inst_25566__$1, new cljs.core.Keyword(null, "reads", "reads", -1215067361));
                                                  var inst_25568 = cljs.core.get.call(null, inst_25566__$1, new cljs.core.Keyword(null, "mutes", "mutes", 1068806309));
                                                  var inst_25569 = cljs.core.get.call(null, inst_25566__$1, new cljs.core.Keyword(null, "solos", "solos", 1441458643));
                                                  var state_25614__$1 = function() {
                                                    var statearr_25642 = state_25614;
                                                    statearr_25642[15] = inst_25569;
                                                    statearr_25642[17] = inst_25568;
                                                    statearr_25642[10] = inst_25566__$1;
                                                    return statearr_25642;
                                                  }();
                                                  return cljs.core.async.ioc_alts_BANG_.call(null, state_25614__$1, 10, inst_25567);
                                                } else {
                                                  if (state_val_25615 === 5) {
                                                    var inst_25558 = state_25614[7];
                                                    var inst_25561 = cljs.core.seq_QMARK_.call(null, inst_25558);
                                                    var state_25614__$1 = state_25614;
                                                    if (inst_25561) {
                                                      var statearr_25643_25683 = state_25614__$1;
                                                      statearr_25643_25683[1] = 7;
                                                    } else {
                                                      var statearr_25644_25684 = state_25614__$1;
                                                      statearr_25644_25684[1] = 8;
                                                    }
                                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                  } else {
                                                    if (state_val_25615 === 14) {
                                                      var inst_25574 = state_25614[16];
                                                      var inst_25581 = cljs.core.swap_BANG_.call(null, cs, cljs.core.dissoc, inst_25574);
                                                      var state_25614__$1 = state_25614;
                                                      var statearr_25645_25685 = state_25614__$1;
                                                      statearr_25645_25685[2] = inst_25581;
                                                      statearr_25645_25685[1] = 16;
                                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                    } else {
                                                      if (state_val_25615 === 26) {
                                                        var inst_25604 = state_25614[2];
                                                        var state_25614__$1 = state_25614;
                                                        var statearr_25646_25686 = state_25614__$1;
                                                        statearr_25646_25686[2] = inst_25604;
                                                        statearr_25646_25686[1] = 22;
                                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                      } else {
                                                        if (state_val_25615 === 16) {
                                                          var inst_25584 = state_25614[2];
                                                          var inst_25585 = calc_state.call(null);
                                                          var inst_25558 = inst_25585;
                                                          var state_25614__$1 = function() {
                                                            var statearr_25647 = state_25614;
                                                            statearr_25647[18] = inst_25584;
                                                            statearr_25647[7] = inst_25558;
                                                            return statearr_25647;
                                                          }();
                                                          var statearr_25648_25687 = state_25614__$1;
                                                          statearr_25648_25687[2] = null;
                                                          statearr_25648_25687[1] = 5;
                                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                        } else {
                                                          if (state_val_25615 === 10) {
                                                            var inst_25573 = state_25614[8];
                                                            var inst_25574 = state_25614[16];
                                                            var inst_25572 = state_25614[2];
                                                            var inst_25573__$1 = cljs.core.nth.call(null, inst_25572, 0, null);
                                                            var inst_25574__$1 = cljs.core.nth.call(null, inst_25572, 1, null);
                                                            var inst_25575 = inst_25573__$1 == null;
                                                            var inst_25576 = cljs.core._EQ_.call(null, inst_25574__$1, change);
                                                            var inst_25577 = inst_25575 || inst_25576;
                                                            var state_25614__$1 = function() {
                                                              var statearr_25649 = state_25614;
                                                              statearr_25649[8] = inst_25573__$1;
                                                              statearr_25649[16] = inst_25574__$1;
                                                              return statearr_25649;
                                                            }();
                                                            if (cljs.core.truth_(inst_25577)) {
                                                              var statearr_25650_25688 = state_25614__$1;
                                                              statearr_25650_25688[1] = 11;
                                                            } else {
                                                              var statearr_25651_25689 = state_25614__$1;
                                                              statearr_25651_25689[1] = 12;
                                                            }
                                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                          } else {
                                                            if (state_val_25615 === 18) {
                                                              var inst_25569 = state_25614[15];
                                                              var inst_25574 = state_25614[16];
                                                              var inst_25568 = state_25614[17];
                                                              var inst_25591 = cljs.core.empty_QMARK_.call(null, inst_25569);
                                                              var inst_25592 = inst_25568.call(null, inst_25574);
                                                              var inst_25593 = cljs.core.not.call(null, inst_25592);
                                                              var inst_25594 = inst_25591 && inst_25593;
                                                              var state_25614__$1 = state_25614;
                                                              var statearr_25652_25690 = state_25614__$1;
                                                              statearr_25652_25690[2] = inst_25594;
                                                              statearr_25652_25690[1] = 19;
                                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                            } else {
                                                              if (state_val_25615 === 8) {
                                                                var inst_25558 = state_25614[7];
                                                                var state_25614__$1 = state_25614;
                                                                var statearr_25653_25691 = state_25614__$1;
                                                                statearr_25653_25691[2] = inst_25558;
                                                                statearr_25653_25691[1] = 9;
                                                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                              } else {
                                                                return null;
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__10282__auto___25661, cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state, m);
        return function(switch__10226__auto__, c__10282__auto___25661, cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state, m) {
          return function() {
            var state_machine__10227__auto__ = null;
            var state_machine__10227__auto____0 = function() {
              var statearr_25657 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
              statearr_25657[0] = state_machine__10227__auto__;
              statearr_25657[1] = 1;
              return statearr_25657;
            };
            var state_machine__10227__auto____1 = function(state_25614) {
              while (true) {
                var ret_value__10228__auto__ = function() {
                  try {
                    while (true) {
                      var result__10229__auto__ = switch__10226__auto__.call(null, state_25614);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__10229__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__10229__auto__;
                      }
                      break;
                    }
                  } catch (e25658) {
                    if (e25658 instanceof Object) {
                      var ex__10230__auto__ = e25658;
                      var statearr_25659_25692 = state_25614;
                      statearr_25659_25692[5] = ex__10230__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_25614);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e25658;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__10228__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__25693 = state_25614;
                  state_25614 = G__25693;
                  continue;
                } else {
                  return ret_value__10228__auto__;
                }
                break;
              }
            };
            state_machine__10227__auto__ = function(state_25614) {
              switch(arguments.length) {
                case 0:
                  return state_machine__10227__auto____0.call(this);
                case 1:
                  return state_machine__10227__auto____1.call(this, state_25614);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__10227__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__10227__auto____0;
            state_machine__10227__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__10227__auto____1;
            return state_machine__10227__auto__;
          }();
        }(switch__10226__auto__, c__10282__auto___25661, cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state, m);
      }();
      var state__10284__auto__ = function() {
        var statearr_25660 = f__10283__auto__.call(null);
        statearr_25660[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__10282__auto___25661;
        return statearr_25660;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__10284__auto__);
    };
  }(c__10282__auto___25661, cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state, m));
  return m;
};
cljs.core.async.admix = function admix(mix, ch) {
  return cljs.core.async.admix_STAR_.call(null, mix, ch);
};
cljs.core.async.unmix = function unmix(mix, ch) {
  return cljs.core.async.unmix_STAR_.call(null, mix, ch);
};
cljs.core.async.unmix_all = function unmix_all(mix) {
  return cljs.core.async.unmix_all_STAR_.call(null, mix);
};
cljs.core.async.toggle = function toggle(mix, state_map) {
  return cljs.core.async.toggle_STAR_.call(null, mix, state_map);
};
cljs.core.async.solo_mode = function solo_mode(mix, mode) {
  return cljs.core.async.solo_mode_STAR_.call(null, mix, mode);
};
cljs.core.async.Pub = function() {
  var obj25695 = {};
  return obj25695;
}();
cljs.core.async.sub_STAR_ = function sub_STAR_(p, v, ch, close_QMARK_) {
  if (function() {
    var and__7492__auto__ = p;
    if (and__7492__auto__) {
      return p.cljs$core$async$Pub$sub_STAR_$arity$4;
    } else {
      return and__7492__auto__;
    }
  }()) {
    return p.cljs$core$async$Pub$sub_STAR_$arity$4(p, v, ch, close_QMARK_);
  } else {
    var x__8148__auto__ = p == null ? null : p;
    return function() {
      var or__7504__auto__ = cljs.core.async.sub_STAR_[goog.typeOf(x__8148__auto__)];
      if (or__7504__auto__) {
        return or__7504__auto__;
      } else {
        var or__7504__auto____$1 = cljs.core.async.sub_STAR_["_"];
        if (or__7504__auto____$1) {
          return or__7504__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Pub.sub*", p);
        }
      }
    }().call(null, p, v, ch, close_QMARK_);
  }
};
cljs.core.async.unsub_STAR_ = function unsub_STAR_(p, v, ch) {
  if (function() {
    var and__7492__auto__ = p;
    if (and__7492__auto__) {
      return p.cljs$core$async$Pub$unsub_STAR_$arity$3;
    } else {
      return and__7492__auto__;
    }
  }()) {
    return p.cljs$core$async$Pub$unsub_STAR_$arity$3(p, v, ch);
  } else {
    var x__8148__auto__ = p == null ? null : p;
    return function() {
      var or__7504__auto__ = cljs.core.async.unsub_STAR_[goog.typeOf(x__8148__auto__)];
      if (or__7504__auto__) {
        return or__7504__auto__;
      } else {
        var or__7504__auto____$1 = cljs.core.async.unsub_STAR_["_"];
        if (or__7504__auto____$1) {
          return or__7504__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Pub.unsub*", p);
        }
      }
    }().call(null, p, v, ch);
  }
};
cljs.core.async.unsub_all_STAR_ = function() {
  var unsub_all_STAR_ = null;
  var unsub_all_STAR___1 = function(p) {
    if (function() {
      var and__7492__auto__ = p;
      if (and__7492__auto__) {
        return p.cljs$core$async$Pub$unsub_all_STAR_$arity$1;
      } else {
        return and__7492__auto__;
      }
    }()) {
      return p.cljs$core$async$Pub$unsub_all_STAR_$arity$1(p);
    } else {
      var x__8148__auto__ = p == null ? null : p;
      return function() {
        var or__7504__auto__ = cljs.core.async.unsub_all_STAR_[goog.typeOf(x__8148__auto__)];
        if (or__7504__auto__) {
          return or__7504__auto__;
        } else {
          var or__7504__auto____$1 = cljs.core.async.unsub_all_STAR_["_"];
          if (or__7504__auto____$1) {
            return or__7504__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "Pub.unsub-all*", p);
          }
        }
      }().call(null, p);
    }
  };
  var unsub_all_STAR___2 = function(p, v) {
    if (function() {
      var and__7492__auto__ = p;
      if (and__7492__auto__) {
        return p.cljs$core$async$Pub$unsub_all_STAR_$arity$2;
      } else {
        return and__7492__auto__;
      }
    }()) {
      return p.cljs$core$async$Pub$unsub_all_STAR_$arity$2(p, v);
    } else {
      var x__8148__auto__ = p == null ? null : p;
      return function() {
        var or__7504__auto__ = cljs.core.async.unsub_all_STAR_[goog.typeOf(x__8148__auto__)];
        if (or__7504__auto__) {
          return or__7504__auto__;
        } else {
          var or__7504__auto____$1 = cljs.core.async.unsub_all_STAR_["_"];
          if (or__7504__auto____$1) {
            return or__7504__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "Pub.unsub-all*", p);
          }
        }
      }().call(null, p, v);
    }
  };
  unsub_all_STAR_ = function(p, v) {
    switch(arguments.length) {
      case 1:
        return unsub_all_STAR___1.call(this, p);
      case 2:
        return unsub_all_STAR___2.call(this, p, v);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unsub_all_STAR_.cljs$core$IFn$_invoke$arity$1 = unsub_all_STAR___1;
  unsub_all_STAR_.cljs$core$IFn$_invoke$arity$2 = unsub_all_STAR___2;
  return unsub_all_STAR_;
}();
cljs.core.async.pub = function() {
  var pub = null;
  var pub__2 = function(ch, topic_fn) {
    return pub.call(null, ch, topic_fn, cljs.core.constantly.call(null, null));
  };
  var pub__3 = function(ch, topic_fn, buf_fn) {
    var mults = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var ensure_mult = function(mults) {
      return function(topic) {
        var or__7504__auto__ = cljs.core.get.call(null, cljs.core.deref.call(null, mults), topic);
        if (cljs.core.truth_(or__7504__auto__)) {
          return or__7504__auto__;
        } else {
          return cljs.core.get.call(null, cljs.core.swap_BANG_.call(null, mults, function(or__7504__auto__, mults) {
            return function(p1__25696_SHARP_) {
              if (cljs.core.truth_(p1__25696_SHARP_.call(null, topic))) {
                return p1__25696_SHARP_;
              } else {
                return cljs.core.assoc.call(null, p1__25696_SHARP_, topic, cljs.core.async.mult.call(null, cljs.core.async.chan.call(null, buf_fn.call(null, topic))));
              }
            };
          }(or__7504__auto__, mults)), topic);
        }
      };
    }(mults);
    var p = function() {
      if (typeof cljs.core.async.t25819 !== "undefined") {
      } else {
        cljs.core.async.t25819 = function(ensure_mult, mults, buf_fn, topic_fn, ch, pub, meta25820) {
          this.ensure_mult = ensure_mult;
          this.mults = mults;
          this.buf_fn = buf_fn;
          this.topic_fn = topic_fn;
          this.ch = ch;
          this.pub = pub;
          this.meta25820 = meta25820;
          this.cljs$lang$protocol_mask$partition1$ = 0;
          this.cljs$lang$protocol_mask$partition0$ = 393216;
        };
        cljs.core.async.t25819.prototype.cljs$core$async$Pub$ = true;
        cljs.core.async.t25819.prototype.cljs$core$async$Pub$sub_STAR_$arity$4 = function(mults, ensure_mult) {
          return function(p, topic, ch__$1, close_QMARK_) {
            var self__ = this;
            var p__$1 = this;
            var m = self__.ensure_mult.call(null, topic);
            return cljs.core.async.tap.call(null, m, ch__$1, close_QMARK_);
          };
        }(mults, ensure_mult);
        cljs.core.async.t25819.prototype.cljs$core$async$Pub$unsub_STAR_$arity$3 = function(mults, ensure_mult) {
          return function(p, topic, ch__$1) {
            var self__ = this;
            var p__$1 = this;
            var temp__4126__auto__ = cljs.core.get.call(null, cljs.core.deref.call(null, self__.mults), topic);
            if (cljs.core.truth_(temp__4126__auto__)) {
              var m = temp__4126__auto__;
              return cljs.core.async.untap.call(null, m, ch__$1);
            } else {
              return null;
            }
          };
        }(mults, ensure_mult);
        cljs.core.async.t25819.prototype.cljs$core$async$Pub$unsub_all_STAR_$arity$1 = function(mults, ensure_mult) {
          return function(_) {
            var self__ = this;
            var ___$1 = this;
            return cljs.core.reset_BANG_.call(null, self__.mults, cljs.core.PersistentArrayMap.EMPTY);
          };
        }(mults, ensure_mult);
        cljs.core.async.t25819.prototype.cljs$core$async$Pub$unsub_all_STAR_$arity$2 = function(mults, ensure_mult) {
          return function(_, topic) {
            var self__ = this;
            var ___$1 = this;
            return cljs.core.swap_BANG_.call(null, self__.mults, cljs.core.dissoc, topic);
          };
        }(mults, ensure_mult);
        cljs.core.async.t25819.prototype.cljs$core$async$Mux$ = true;
        cljs.core.async.t25819.prototype.cljs$core$async$Mux$muxch_STAR_$arity$1 = function(mults, ensure_mult) {
          return function(_) {
            var self__ = this;
            var ___$1 = this;
            return self__.ch;
          };
        }(mults, ensure_mult);
        cljs.core.async.t25819.prototype.cljs$core$IMeta$_meta$arity$1 = function(mults, ensure_mult) {
          return function(_25821) {
            var self__ = this;
            var _25821__$1 = this;
            return self__.meta25820;
          };
        }(mults, ensure_mult);
        cljs.core.async.t25819.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(mults, ensure_mult) {
          return function(_25821, meta25820__$1) {
            var self__ = this;
            var _25821__$1 = this;
            return new cljs.core.async.t25819(self__.ensure_mult, self__.mults, self__.buf_fn, self__.topic_fn, self__.ch, self__.pub, meta25820__$1);
          };
        }(mults, ensure_mult);
        cljs.core.async.t25819.cljs$lang$type = true;
        cljs.core.async.t25819.cljs$lang$ctorStr = "cljs.core.async/t25819";
        cljs.core.async.t25819.cljs$lang$ctorPrWriter = function(mults, ensure_mult) {
          return function(this__8091__auto__, writer__8092__auto__, opt__8093__auto__) {
            return cljs.core._write.call(null, writer__8092__auto__, "cljs.core.async/t25819");
          };
        }(mults, ensure_mult);
        cljs.core.async.__GT_t25819 = function(mults, ensure_mult) {
          return function __GT_t25819(ensure_mult__$1, mults__$1, buf_fn__$1, topic_fn__$1, ch__$1, pub__$1, meta25820) {
            return new cljs.core.async.t25819(ensure_mult__$1, mults__$1, buf_fn__$1, topic_fn__$1, ch__$1, pub__$1, meta25820);
          };
        }(mults, ensure_mult);
      }
      return new cljs.core.async.t25819(ensure_mult, mults, buf_fn, topic_fn, ch, pub, cljs.core.PersistentArrayMap.EMPTY);
    }();
    var c__10282__auto___25941 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__10282__auto___25941, mults, ensure_mult, p) {
      return function() {
        var f__10283__auto__ = function() {
          var switch__10226__auto__ = function(c__10282__auto___25941, mults, ensure_mult, p) {
            return function(state_25893) {
              var state_val_25894 = state_25893[1];
              if (state_val_25894 === 7) {
                var inst_25889 = state_25893[2];
                var state_25893__$1 = state_25893;
                var statearr_25895_25942 = state_25893__$1;
                statearr_25895_25942[2] = inst_25889;
                statearr_25895_25942[1] = 3;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_25894 === 20) {
                  var state_25893__$1 = state_25893;
                  var statearr_25896_25943 = state_25893__$1;
                  statearr_25896_25943[2] = null;
                  statearr_25896_25943[1] = 21;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_25894 === 1) {
                    var state_25893__$1 = state_25893;
                    var statearr_25897_25944 = state_25893__$1;
                    statearr_25897_25944[2] = null;
                    statearr_25897_25944[1] = 2;
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_25894 === 24) {
                      var inst_25872 = state_25893[7];
                      var inst_25881 = cljs.core.swap_BANG_.call(null, mults, cljs.core.dissoc, inst_25872);
                      var state_25893__$1 = state_25893;
                      var statearr_25898_25945 = state_25893__$1;
                      statearr_25898_25945[2] = inst_25881;
                      statearr_25898_25945[1] = 25;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_25894 === 4) {
                        var inst_25824 = state_25893[8];
                        var inst_25824__$1 = state_25893[2];
                        var inst_25825 = inst_25824__$1 == null;
                        var state_25893__$1 = function() {
                          var statearr_25899 = state_25893;
                          statearr_25899[8] = inst_25824__$1;
                          return statearr_25899;
                        }();
                        if (cljs.core.truth_(inst_25825)) {
                          var statearr_25900_25946 = state_25893__$1;
                          statearr_25900_25946[1] = 5;
                        } else {
                          var statearr_25901_25947 = state_25893__$1;
                          statearr_25901_25947[1] = 6;
                        }
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_25894 === 15) {
                          var inst_25866 = state_25893[2];
                          var state_25893__$1 = state_25893;
                          var statearr_25902_25948 = state_25893__$1;
                          statearr_25902_25948[2] = inst_25866;
                          statearr_25902_25948[1] = 12;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_25894 === 21) {
                            var inst_25886 = state_25893[2];
                            var state_25893__$1 = function() {
                              var statearr_25903 = state_25893;
                              statearr_25903[9] = inst_25886;
                              return statearr_25903;
                            }();
                            var statearr_25904_25949 = state_25893__$1;
                            statearr_25904_25949[2] = null;
                            statearr_25904_25949[1] = 2;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_25894 === 13) {
                              var inst_25848 = state_25893[10];
                              var inst_25850 = cljs.core.chunked_seq_QMARK_.call(null, inst_25848);
                              var state_25893__$1 = state_25893;
                              if (inst_25850) {
                                var statearr_25905_25950 = state_25893__$1;
                                statearr_25905_25950[1] = 16;
                              } else {
                                var statearr_25906_25951 = state_25893__$1;
                                statearr_25906_25951[1] = 17;
                              }
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_25894 === 22) {
                                var inst_25878 = state_25893[2];
                                var state_25893__$1 = state_25893;
                                if (cljs.core.truth_(inst_25878)) {
                                  var statearr_25907_25952 = state_25893__$1;
                                  statearr_25907_25952[1] = 23;
                                } else {
                                  var statearr_25908_25953 = state_25893__$1;
                                  statearr_25908_25953[1] = 24;
                                }
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_25894 === 6) {
                                  var inst_25874 = state_25893[11];
                                  var inst_25872 = state_25893[7];
                                  var inst_25824 = state_25893[8];
                                  var inst_25872__$1 = topic_fn.call(null, inst_25824);
                                  var inst_25873 = cljs.core.deref.call(null, mults);
                                  var inst_25874__$1 = cljs.core.get.call(null, inst_25873, inst_25872__$1);
                                  var state_25893__$1 = function() {
                                    var statearr_25909 = state_25893;
                                    statearr_25909[11] = inst_25874__$1;
                                    statearr_25909[7] = inst_25872__$1;
                                    return statearr_25909;
                                  }();
                                  if (cljs.core.truth_(inst_25874__$1)) {
                                    var statearr_25910_25954 = state_25893__$1;
                                    statearr_25910_25954[1] = 19;
                                  } else {
                                    var statearr_25911_25955 = state_25893__$1;
                                    statearr_25911_25955[1] = 20;
                                  }
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_25894 === 25) {
                                    var inst_25883 = state_25893[2];
                                    var state_25893__$1 = state_25893;
                                    var statearr_25912_25956 = state_25893__$1;
                                    statearr_25912_25956[2] = inst_25883;
                                    statearr_25912_25956[1] = 21;
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_25894 === 17) {
                                      var inst_25848 = state_25893[10];
                                      var inst_25857 = cljs.core.first.call(null, inst_25848);
                                      var inst_25858 = cljs.core.async.muxch_STAR_.call(null, inst_25857);
                                      var inst_25859 = cljs.core.async.close_BANG_.call(null, inst_25858);
                                      var inst_25860 = cljs.core.next.call(null, inst_25848);
                                      var inst_25834 = inst_25860;
                                      var inst_25835 = null;
                                      var inst_25836 = 0;
                                      var inst_25837 = 0;
                                      var state_25893__$1 = function() {
                                        var statearr_25913 = state_25893;
                                        statearr_25913[12] = inst_25859;
                                        statearr_25913[13] = inst_25836;
                                        statearr_25913[14] = inst_25835;
                                        statearr_25913[15] = inst_25834;
                                        statearr_25913[16] = inst_25837;
                                        return statearr_25913;
                                      }();
                                      var statearr_25914_25957 = state_25893__$1;
                                      statearr_25914_25957[2] = null;
                                      statearr_25914_25957[1] = 8;
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      if (state_val_25894 === 3) {
                                        var inst_25891 = state_25893[2];
                                        var state_25893__$1 = state_25893;
                                        return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_25893__$1, inst_25891);
                                      } else {
                                        if (state_val_25894 === 12) {
                                          var inst_25868 = state_25893[2];
                                          var state_25893__$1 = state_25893;
                                          var statearr_25915_25958 = state_25893__$1;
                                          statearr_25915_25958[2] = inst_25868;
                                          statearr_25915_25958[1] = 9;
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          if (state_val_25894 === 2) {
                                            var state_25893__$1 = state_25893;
                                            return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_25893__$1, 4, ch);
                                          } else {
                                            if (state_val_25894 === 23) {
                                              var state_25893__$1 = state_25893;
                                              var statearr_25916_25959 = state_25893__$1;
                                              statearr_25916_25959[2] = null;
                                              statearr_25916_25959[1] = 25;
                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                            } else {
                                              if (state_val_25894 === 19) {
                                                var inst_25874 = state_25893[11];
                                                var inst_25824 = state_25893[8];
                                                var inst_25876 = cljs.core.async.muxch_STAR_.call(null, inst_25874);
                                                var state_25893__$1 = state_25893;
                                                return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_25893__$1, 22, inst_25876, inst_25824);
                                              } else {
                                                if (state_val_25894 === 11) {
                                                  var inst_25848 = state_25893[10];
                                                  var inst_25834 = state_25893[15];
                                                  var inst_25848__$1 = cljs.core.seq.call(null, inst_25834);
                                                  var state_25893__$1 = function() {
                                                    var statearr_25917 = state_25893;
                                                    statearr_25917[10] = inst_25848__$1;
                                                    return statearr_25917;
                                                  }();
                                                  if (inst_25848__$1) {
                                                    var statearr_25918_25960 = state_25893__$1;
                                                    statearr_25918_25960[1] = 13;
                                                  } else {
                                                    var statearr_25919_25961 = state_25893__$1;
                                                    statearr_25919_25961[1] = 14;
                                                  }
                                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                } else {
                                                  if (state_val_25894 === 9) {
                                                    var inst_25870 = state_25893[2];
                                                    var state_25893__$1 = state_25893;
                                                    var statearr_25920_25962 = state_25893__$1;
                                                    statearr_25920_25962[2] = inst_25870;
                                                    statearr_25920_25962[1] = 7;
                                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                  } else {
                                                    if (state_val_25894 === 5) {
                                                      var inst_25831 = cljs.core.deref.call(null, mults);
                                                      var inst_25832 = cljs.core.vals.call(null, inst_25831);
                                                      var inst_25833 = cljs.core.seq.call(null, inst_25832);
                                                      var inst_25834 = inst_25833;
                                                      var inst_25835 = null;
                                                      var inst_25836 = 0;
                                                      var inst_25837 = 0;
                                                      var state_25893__$1 = function() {
                                                        var statearr_25921 = state_25893;
                                                        statearr_25921[13] = inst_25836;
                                                        statearr_25921[14] = inst_25835;
                                                        statearr_25921[15] = inst_25834;
                                                        statearr_25921[16] = inst_25837;
                                                        return statearr_25921;
                                                      }();
                                                      var statearr_25922_25963 = state_25893__$1;
                                                      statearr_25922_25963[2] = null;
                                                      statearr_25922_25963[1] = 8;
                                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                    } else {
                                                      if (state_val_25894 === 14) {
                                                        var state_25893__$1 = state_25893;
                                                        var statearr_25926_25964 = state_25893__$1;
                                                        statearr_25926_25964[2] = null;
                                                        statearr_25926_25964[1] = 15;
                                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                      } else {
                                                        if (state_val_25894 === 16) {
                                                          var inst_25848 = state_25893[10];
                                                          var inst_25852 = cljs.core.chunk_first.call(null, inst_25848);
                                                          var inst_25853 = cljs.core.chunk_rest.call(null, inst_25848);
                                                          var inst_25854 = cljs.core.count.call(null, inst_25852);
                                                          var inst_25834 = inst_25853;
                                                          var inst_25835 = inst_25852;
                                                          var inst_25836 = inst_25854;
                                                          var inst_25837 = 0;
                                                          var state_25893__$1 = function() {
                                                            var statearr_25927 = state_25893;
                                                            statearr_25927[13] = inst_25836;
                                                            statearr_25927[14] = inst_25835;
                                                            statearr_25927[15] = inst_25834;
                                                            statearr_25927[16] = inst_25837;
                                                            return statearr_25927;
                                                          }();
                                                          var statearr_25928_25965 = state_25893__$1;
                                                          statearr_25928_25965[2] = null;
                                                          statearr_25928_25965[1] = 8;
                                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                        } else {
                                                          if (state_val_25894 === 10) {
                                                            var inst_25836 = state_25893[13];
                                                            var inst_25835 = state_25893[14];
                                                            var inst_25834 = state_25893[15];
                                                            var inst_25837 = state_25893[16];
                                                            var inst_25842 = cljs.core._nth.call(null, inst_25835, inst_25837);
                                                            var inst_25843 = cljs.core.async.muxch_STAR_.call(null, inst_25842);
                                                            var inst_25844 = cljs.core.async.close_BANG_.call(null, inst_25843);
                                                            var inst_25845 = inst_25837 + 1;
                                                            var tmp25923 = inst_25836;
                                                            var tmp25924 = inst_25835;
                                                            var tmp25925 = inst_25834;
                                                            var inst_25834__$1 = tmp25925;
                                                            var inst_25835__$1 = tmp25924;
                                                            var inst_25836__$1 = tmp25923;
                                                            var inst_25837__$1 = inst_25845;
                                                            var state_25893__$1 = function() {
                                                              var statearr_25929 = state_25893;
                                                              statearr_25929[13] = inst_25836__$1;
                                                              statearr_25929[17] = inst_25844;
                                                              statearr_25929[14] = inst_25835__$1;
                                                              statearr_25929[15] = inst_25834__$1;
                                                              statearr_25929[16] = inst_25837__$1;
                                                              return statearr_25929;
                                                            }();
                                                            var statearr_25930_25966 = state_25893__$1;
                                                            statearr_25930_25966[2] = null;
                                                            statearr_25930_25966[1] = 8;
                                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                          } else {
                                                            if (state_val_25894 === 18) {
                                                              var inst_25863 = state_25893[2];
                                                              var state_25893__$1 = state_25893;
                                                              var statearr_25931_25967 = state_25893__$1;
                                                              statearr_25931_25967[2] = inst_25863;
                                                              statearr_25931_25967[1] = 15;
                                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                            } else {
                                                              if (state_val_25894 === 8) {
                                                                var inst_25836 = state_25893[13];
                                                                var inst_25837 = state_25893[16];
                                                                var inst_25839 = inst_25837 < inst_25836;
                                                                var inst_25840 = inst_25839;
                                                                var state_25893__$1 = state_25893;
                                                                if (cljs.core.truth_(inst_25840)) {
                                                                  var statearr_25932_25968 = state_25893__$1;
                                                                  statearr_25932_25968[1] = 10;
                                                                } else {
                                                                  var statearr_25933_25969 = state_25893__$1;
                                                                  statearr_25933_25969[1] = 11;
                                                                }
                                                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                              } else {
                                                                return null;
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            };
          }(c__10282__auto___25941, mults, ensure_mult, p);
          return function(switch__10226__auto__, c__10282__auto___25941, mults, ensure_mult, p) {
            return function() {
              var state_machine__10227__auto__ = null;
              var state_machine__10227__auto____0 = function() {
                var statearr_25937 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
                statearr_25937[0] = state_machine__10227__auto__;
                statearr_25937[1] = 1;
                return statearr_25937;
              };
              var state_machine__10227__auto____1 = function(state_25893) {
                while (true) {
                  var ret_value__10228__auto__ = function() {
                    try {
                      while (true) {
                        var result__10229__auto__ = switch__10226__auto__.call(null, state_25893);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__10229__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          continue;
                        } else {
                          return result__10229__auto__;
                        }
                        break;
                      }
                    } catch (e25938) {
                      if (e25938 instanceof Object) {
                        var ex__10230__auto__ = e25938;
                        var statearr_25939_25970 = state_25893;
                        statearr_25939_25970[5] = ex__10230__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_25893);
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        throw e25938;
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__10228__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                    var G__25971 = state_25893;
                    state_25893 = G__25971;
                    continue;
                  } else {
                    return ret_value__10228__auto__;
                  }
                  break;
                }
              };
              state_machine__10227__auto__ = function(state_25893) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__10227__auto____0.call(this);
                  case 1:
                    return state_machine__10227__auto____1.call(this, state_25893);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__10227__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__10227__auto____0;
              state_machine__10227__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__10227__auto____1;
              return state_machine__10227__auto__;
            }();
          }(switch__10226__auto__, c__10282__auto___25941, mults, ensure_mult, p);
        }();
        var state__10284__auto__ = function() {
          var statearr_25940 = f__10283__auto__.call(null);
          statearr_25940[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__10282__auto___25941;
          return statearr_25940;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__10284__auto__);
      };
    }(c__10282__auto___25941, mults, ensure_mult, p));
    return p;
  };
  pub = function(ch, topic_fn, buf_fn) {
    switch(arguments.length) {
      case 2:
        return pub__2.call(this, ch, topic_fn);
      case 3:
        return pub__3.call(this, ch, topic_fn, buf_fn);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  pub.cljs$core$IFn$_invoke$arity$2 = pub__2;
  pub.cljs$core$IFn$_invoke$arity$3 = pub__3;
  return pub;
}();
cljs.core.async.sub = function() {
  var sub = null;
  var sub__3 = function(p, topic, ch) {
    return sub.call(null, p, topic, ch, true);
  };
  var sub__4 = function(p, topic, ch, close_QMARK_) {
    return cljs.core.async.sub_STAR_.call(null, p, topic, ch, close_QMARK_);
  };
  sub = function(p, topic, ch, close_QMARK_) {
    switch(arguments.length) {
      case 3:
        return sub__3.call(this, p, topic, ch);
      case 4:
        return sub__4.call(this, p, topic, ch, close_QMARK_);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  sub.cljs$core$IFn$_invoke$arity$3 = sub__3;
  sub.cljs$core$IFn$_invoke$arity$4 = sub__4;
  return sub;
}();
cljs.core.async.unsub = function unsub(p, topic, ch) {
  return cljs.core.async.unsub_STAR_.call(null, p, topic, ch);
};
cljs.core.async.unsub_all = function() {
  var unsub_all = null;
  var unsub_all__1 = function(p) {
    return cljs.core.async.unsub_all_STAR_.call(null, p);
  };
  var unsub_all__2 = function(p, topic) {
    return cljs.core.async.unsub_all_STAR_.call(null, p, topic);
  };
  unsub_all = function(p, topic) {
    switch(arguments.length) {
      case 1:
        return unsub_all__1.call(this, p);
      case 2:
        return unsub_all__2.call(this, p, topic);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unsub_all.cljs$core$IFn$_invoke$arity$1 = unsub_all__1;
  unsub_all.cljs$core$IFn$_invoke$arity$2 = unsub_all__2;
  return unsub_all;
}();
cljs.core.async.map = function() {
  var map = null;
  var map__2 = function(f, chs) {
    return map.call(null, f, chs, null);
  };
  var map__3 = function(f, chs, buf_or_n) {
    var chs__$1 = cljs.core.vec.call(null, chs);
    var out = cljs.core.async.chan.call(null, buf_or_n);
    var cnt = cljs.core.count.call(null, chs__$1);
    var rets = cljs.core.object_array.call(null, cnt);
    var dchan = cljs.core.async.chan.call(null, 1);
    var dctr = cljs.core.atom.call(null, null);
    var done = cljs.core.mapv.call(null, function(chs__$1, out, cnt, rets, dchan, dctr) {
      return function(i) {
        return function(chs__$1, out, cnt, rets, dchan, dctr) {
          return function(ret) {
            rets[i] = ret;
            if (cljs.core.swap_BANG_.call(null, dctr, cljs.core.dec) === 0) {
              return cljs.core.async.put_BANG_.call(null, dchan, rets.slice(0));
            } else {
              return null;
            }
          };
        }(chs__$1, out, cnt, rets, dchan, dctr);
      };
    }(chs__$1, out, cnt, rets, dchan, dctr), cljs.core.range.call(null, cnt));
    var c__10282__auto___26108 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__10282__auto___26108, chs__$1, out, cnt, rets, dchan, dctr, done) {
      return function() {
        var f__10283__auto__ = function() {
          var switch__10226__auto__ = function(c__10282__auto___26108, chs__$1, out, cnt, rets, dchan, dctr, done) {
            return function(state_26078) {
              var state_val_26079 = state_26078[1];
              if (state_val_26079 === 7) {
                var state_26078__$1 = state_26078;
                var statearr_26080_26109 = state_26078__$1;
                statearr_26080_26109[2] = null;
                statearr_26080_26109[1] = 8;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_26079 === 1) {
                  var state_26078__$1 = state_26078;
                  var statearr_26081_26110 = state_26078__$1;
                  statearr_26081_26110[2] = null;
                  statearr_26081_26110[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_26079 === 4) {
                    var inst_26042 = state_26078[7];
                    var inst_26044 = inst_26042 < cnt;
                    var state_26078__$1 = state_26078;
                    if (cljs.core.truth_(inst_26044)) {
                      var statearr_26082_26111 = state_26078__$1;
                      statearr_26082_26111[1] = 6;
                    } else {
                      var statearr_26083_26112 = state_26078__$1;
                      statearr_26083_26112[1] = 7;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_26079 === 15) {
                      var inst_26074 = state_26078[2];
                      var state_26078__$1 = state_26078;
                      var statearr_26084_26113 = state_26078__$1;
                      statearr_26084_26113[2] = inst_26074;
                      statearr_26084_26113[1] = 3;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_26079 === 13) {
                        var inst_26067 = cljs.core.async.close_BANG_.call(null, out);
                        var state_26078__$1 = state_26078;
                        var statearr_26085_26114 = state_26078__$1;
                        statearr_26085_26114[2] = inst_26067;
                        statearr_26085_26114[1] = 15;
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_26079 === 6) {
                          var state_26078__$1 = state_26078;
                          var statearr_26086_26115 = state_26078__$1;
                          statearr_26086_26115[2] = null;
                          statearr_26086_26115[1] = 11;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_26079 === 3) {
                            var inst_26076 = state_26078[2];
                            var state_26078__$1 = state_26078;
                            return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_26078__$1, inst_26076);
                          } else {
                            if (state_val_26079 === 12) {
                              var inst_26064 = state_26078[8];
                              var inst_26064__$1 = state_26078[2];
                              var inst_26065 = cljs.core.some.call(null, cljs.core.nil_QMARK_, inst_26064__$1);
                              var state_26078__$1 = function() {
                                var statearr_26087 = state_26078;
                                statearr_26087[8] = inst_26064__$1;
                                return statearr_26087;
                              }();
                              if (cljs.core.truth_(inst_26065)) {
                                var statearr_26088_26116 = state_26078__$1;
                                statearr_26088_26116[1] = 13;
                              } else {
                                var statearr_26089_26117 = state_26078__$1;
                                statearr_26089_26117[1] = 14;
                              }
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_26079 === 2) {
                                var inst_26041 = cljs.core.reset_BANG_.call(null, dctr, cnt);
                                var inst_26042 = 0;
                                var state_26078__$1 = function() {
                                  var statearr_26090 = state_26078;
                                  statearr_26090[9] = inst_26041;
                                  statearr_26090[7] = inst_26042;
                                  return statearr_26090;
                                }();
                                var statearr_26091_26118 = state_26078__$1;
                                statearr_26091_26118[2] = null;
                                statearr_26091_26118[1] = 4;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_26079 === 11) {
                                  var inst_26042 = state_26078[7];
                                  var _ = cljs.core.async.impl.ioc_helpers.add_exception_frame.call(null, state_26078, 10, Object, null, 9);
                                  var inst_26051 = chs__$1.call(null, inst_26042);
                                  var inst_26052 = done.call(null, inst_26042);
                                  var inst_26053 = cljs.core.async.take_BANG_.call(null, inst_26051, inst_26052);
                                  var state_26078__$1 = state_26078;
                                  var statearr_26092_26119 = state_26078__$1;
                                  statearr_26092_26119[2] = inst_26053;
                                  cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_26078__$1);
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_26079 === 9) {
                                    var inst_26042 = state_26078[7];
                                    var inst_26055 = state_26078[2];
                                    var inst_26056 = inst_26042 + 1;
                                    var inst_26042__$1 = inst_26056;
                                    var state_26078__$1 = function() {
                                      var statearr_26093 = state_26078;
                                      statearr_26093[7] = inst_26042__$1;
                                      statearr_26093[10] = inst_26055;
                                      return statearr_26093;
                                    }();
                                    var statearr_26094_26120 = state_26078__$1;
                                    statearr_26094_26120[2] = null;
                                    statearr_26094_26120[1] = 4;
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_26079 === 5) {
                                      var inst_26062 = state_26078[2];
                                      var state_26078__$1 = function() {
                                        var statearr_26095 = state_26078;
                                        statearr_26095[11] = inst_26062;
                                        return statearr_26095;
                                      }();
                                      return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_26078__$1, 12, dchan);
                                    } else {
                                      if (state_val_26079 === 14) {
                                        var inst_26064 = state_26078[8];
                                        var inst_26069 = cljs.core.apply.call(null, f, inst_26064);
                                        var state_26078__$1 = state_26078;
                                        return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_26078__$1, 16, out, inst_26069);
                                      } else {
                                        if (state_val_26079 === 16) {
                                          var inst_26071 = state_26078[2];
                                          var state_26078__$1 = function() {
                                            var statearr_26096 = state_26078;
                                            statearr_26096[12] = inst_26071;
                                            return statearr_26096;
                                          }();
                                          var statearr_26097_26121 = state_26078__$1;
                                          statearr_26097_26121[2] = null;
                                          statearr_26097_26121[1] = 2;
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          if (state_val_26079 === 10) {
                                            var inst_26046 = state_26078[2];
                                            var inst_26047 = cljs.core.swap_BANG_.call(null, dctr, cljs.core.dec);
                                            var state_26078__$1 = function() {
                                              var statearr_26098 = state_26078;
                                              statearr_26098[13] = inst_26046;
                                              return statearr_26098;
                                            }();
                                            var statearr_26099_26122 = state_26078__$1;
                                            statearr_26099_26122[2] = inst_26047;
                                            cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_26078__$1);
                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                          } else {
                                            if (state_val_26079 === 8) {
                                              var inst_26060 = state_26078[2];
                                              var state_26078__$1 = state_26078;
                                              var statearr_26100_26123 = state_26078__$1;
                                              statearr_26100_26123[2] = inst_26060;
                                              statearr_26100_26123[1] = 5;
                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                            } else {
                                              return null;
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            };
          }(c__10282__auto___26108, chs__$1, out, cnt, rets, dchan, dctr, done);
          return function(switch__10226__auto__, c__10282__auto___26108, chs__$1, out, cnt, rets, dchan, dctr, done) {
            return function() {
              var state_machine__10227__auto__ = null;
              var state_machine__10227__auto____0 = function() {
                var statearr_26104 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null];
                statearr_26104[0] = state_machine__10227__auto__;
                statearr_26104[1] = 1;
                return statearr_26104;
              };
              var state_machine__10227__auto____1 = function(state_26078) {
                while (true) {
                  var ret_value__10228__auto__ = function() {
                    try {
                      while (true) {
                        var result__10229__auto__ = switch__10226__auto__.call(null, state_26078);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__10229__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          continue;
                        } else {
                          return result__10229__auto__;
                        }
                        break;
                      }
                    } catch (e26105) {
                      if (e26105 instanceof Object) {
                        var ex__10230__auto__ = e26105;
                        var statearr_26106_26124 = state_26078;
                        statearr_26106_26124[5] = ex__10230__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_26078);
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        throw e26105;
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__10228__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                    var G__26125 = state_26078;
                    state_26078 = G__26125;
                    continue;
                  } else {
                    return ret_value__10228__auto__;
                  }
                  break;
                }
              };
              state_machine__10227__auto__ = function(state_26078) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__10227__auto____0.call(this);
                  case 1:
                    return state_machine__10227__auto____1.call(this, state_26078);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__10227__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__10227__auto____0;
              state_machine__10227__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__10227__auto____1;
              return state_machine__10227__auto__;
            }();
          }(switch__10226__auto__, c__10282__auto___26108, chs__$1, out, cnt, rets, dchan, dctr, done);
        }();
        var state__10284__auto__ = function() {
          var statearr_26107 = f__10283__auto__.call(null);
          statearr_26107[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__10282__auto___26108;
          return statearr_26107;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__10284__auto__);
      };
    }(c__10282__auto___26108, chs__$1, out, cnt, rets, dchan, dctr, done));
    return out;
  };
  map = function(f, chs, buf_or_n) {
    switch(arguments.length) {
      case 2:
        return map__2.call(this, f, chs);
      case 3:
        return map__3.call(this, f, chs, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  map.cljs$core$IFn$_invoke$arity$2 = map__2;
  map.cljs$core$IFn$_invoke$arity$3 = map__3;
  return map;
}();
cljs.core.async.merge = function() {
  var merge = null;
  var merge__1 = function(chs) {
    return merge.call(null, chs, null);
  };
  var merge__2 = function(chs, buf_or_n) {
    var out = cljs.core.async.chan.call(null, buf_or_n);
    var c__10282__auto___26233 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__10282__auto___26233, out) {
      return function() {
        var f__10283__auto__ = function() {
          var switch__10226__auto__ = function(c__10282__auto___26233, out) {
            return function(state_26209) {
              var state_val_26210 = state_26209[1];
              if (state_val_26210 === 7) {
                var inst_26189 = state_26209[7];
                var inst_26188 = state_26209[8];
                var inst_26188__$1 = state_26209[2];
                var inst_26189__$1 = cljs.core.nth.call(null, inst_26188__$1, 0, null);
                var inst_26190 = cljs.core.nth.call(null, inst_26188__$1, 1, null);
                var inst_26191 = inst_26189__$1 == null;
                var state_26209__$1 = function() {
                  var statearr_26211 = state_26209;
                  statearr_26211[9] = inst_26190;
                  statearr_26211[7] = inst_26189__$1;
                  statearr_26211[8] = inst_26188__$1;
                  return statearr_26211;
                }();
                if (cljs.core.truth_(inst_26191)) {
                  var statearr_26212_26234 = state_26209__$1;
                  statearr_26212_26234[1] = 8;
                } else {
                  var statearr_26213_26235 = state_26209__$1;
                  statearr_26213_26235[1] = 9;
                }
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_26210 === 1) {
                  var inst_26180 = cljs.core.vec.call(null, chs);
                  var inst_26181 = inst_26180;
                  var state_26209__$1 = function() {
                    var statearr_26214 = state_26209;
                    statearr_26214[10] = inst_26181;
                    return statearr_26214;
                  }();
                  var statearr_26215_26236 = state_26209__$1;
                  statearr_26215_26236[2] = null;
                  statearr_26215_26236[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_26210 === 4) {
                    var inst_26181 = state_26209[10];
                    var state_26209__$1 = state_26209;
                    return cljs.core.async.ioc_alts_BANG_.call(null, state_26209__$1, 7, inst_26181);
                  } else {
                    if (state_val_26210 === 6) {
                      var inst_26205 = state_26209[2];
                      var state_26209__$1 = state_26209;
                      var statearr_26216_26237 = state_26209__$1;
                      statearr_26216_26237[2] = inst_26205;
                      statearr_26216_26237[1] = 3;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_26210 === 3) {
                        var inst_26207 = state_26209[2];
                        var state_26209__$1 = state_26209;
                        return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_26209__$1, inst_26207);
                      } else {
                        if (state_val_26210 === 2) {
                          var inst_26181 = state_26209[10];
                          var inst_26183 = cljs.core.count.call(null, inst_26181);
                          var inst_26184 = inst_26183 > 0;
                          var state_26209__$1 = state_26209;
                          if (cljs.core.truth_(inst_26184)) {
                            var statearr_26218_26238 = state_26209__$1;
                            statearr_26218_26238[1] = 4;
                          } else {
                            var statearr_26219_26239 = state_26209__$1;
                            statearr_26219_26239[1] = 5;
                          }
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_26210 === 11) {
                            var inst_26181 = state_26209[10];
                            var inst_26198 = state_26209[2];
                            var tmp26217 = inst_26181;
                            var inst_26181__$1 = tmp26217;
                            var state_26209__$1 = function() {
                              var statearr_26220 = state_26209;
                              statearr_26220[11] = inst_26198;
                              statearr_26220[10] = inst_26181__$1;
                              return statearr_26220;
                            }();
                            var statearr_26221_26240 = state_26209__$1;
                            statearr_26221_26240[2] = null;
                            statearr_26221_26240[1] = 2;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_26210 === 9) {
                              var inst_26189 = state_26209[7];
                              var state_26209__$1 = state_26209;
                              return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_26209__$1, 11, out, inst_26189);
                            } else {
                              if (state_val_26210 === 5) {
                                var inst_26203 = cljs.core.async.close_BANG_.call(null, out);
                                var state_26209__$1 = state_26209;
                                var statearr_26222_26241 = state_26209__$1;
                                statearr_26222_26241[2] = inst_26203;
                                statearr_26222_26241[1] = 6;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_26210 === 10) {
                                  var inst_26201 = state_26209[2];
                                  var state_26209__$1 = state_26209;
                                  var statearr_26223_26242 = state_26209__$1;
                                  statearr_26223_26242[2] = inst_26201;
                                  statearr_26223_26242[1] = 6;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_26210 === 8) {
                                    var inst_26190 = state_26209[9];
                                    var inst_26189 = state_26209[7];
                                    var inst_26188 = state_26209[8];
                                    var inst_26181 = state_26209[10];
                                    var inst_26193 = function() {
                                      var c = inst_26190;
                                      var v = inst_26189;
                                      var vec__26186 = inst_26188;
                                      var cs = inst_26181;
                                      return function(c, v, vec__26186, cs, inst_26190, inst_26189, inst_26188, inst_26181, state_val_26210, c__10282__auto___26233, out) {
                                        return function(p1__26126_SHARP_) {
                                          return cljs.core.not_EQ_.call(null, c, p1__26126_SHARP_);
                                        };
                                      }(c, v, vec__26186, cs, inst_26190, inst_26189, inst_26188, inst_26181, state_val_26210, c__10282__auto___26233, out);
                                    }();
                                    var inst_26194 = cljs.core.filterv.call(null, inst_26193, inst_26181);
                                    var inst_26181__$1 = inst_26194;
                                    var state_26209__$1 = function() {
                                      var statearr_26224 = state_26209;
                                      statearr_26224[10] = inst_26181__$1;
                                      return statearr_26224;
                                    }();
                                    var statearr_26225_26243 = state_26209__$1;
                                    statearr_26225_26243[2] = null;
                                    statearr_26225_26243[1] = 2;
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    return null;
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            };
          }(c__10282__auto___26233, out);
          return function(switch__10226__auto__, c__10282__auto___26233, out) {
            return function() {
              var state_machine__10227__auto__ = null;
              var state_machine__10227__auto____0 = function() {
                var statearr_26229 = [null, null, null, null, null, null, null, null, null, null, null, null];
                statearr_26229[0] = state_machine__10227__auto__;
                statearr_26229[1] = 1;
                return statearr_26229;
              };
              var state_machine__10227__auto____1 = function(state_26209) {
                while (true) {
                  var ret_value__10228__auto__ = function() {
                    try {
                      while (true) {
                        var result__10229__auto__ = switch__10226__auto__.call(null, state_26209);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__10229__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          continue;
                        } else {
                          return result__10229__auto__;
                        }
                        break;
                      }
                    } catch (e26230) {
                      if (e26230 instanceof Object) {
                        var ex__10230__auto__ = e26230;
                        var statearr_26231_26244 = state_26209;
                        statearr_26231_26244[5] = ex__10230__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_26209);
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        throw e26230;
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__10228__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                    var G__26245 = state_26209;
                    state_26209 = G__26245;
                    continue;
                  } else {
                    return ret_value__10228__auto__;
                  }
                  break;
                }
              };
              state_machine__10227__auto__ = function(state_26209) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__10227__auto____0.call(this);
                  case 1:
                    return state_machine__10227__auto____1.call(this, state_26209);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__10227__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__10227__auto____0;
              state_machine__10227__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__10227__auto____1;
              return state_machine__10227__auto__;
            }();
          }(switch__10226__auto__, c__10282__auto___26233, out);
        }();
        var state__10284__auto__ = function() {
          var statearr_26232 = f__10283__auto__.call(null);
          statearr_26232[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__10282__auto___26233;
          return statearr_26232;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__10284__auto__);
      };
    }(c__10282__auto___26233, out));
    return out;
  };
  merge = function(chs, buf_or_n) {
    switch(arguments.length) {
      case 1:
        return merge__1.call(this, chs);
      case 2:
        return merge__2.call(this, chs, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  merge.cljs$core$IFn$_invoke$arity$1 = merge__1;
  merge.cljs$core$IFn$_invoke$arity$2 = merge__2;
  return merge;
}();
cljs.core.async.into = function into(coll, ch) {
  return cljs.core.async.reduce.call(null, cljs.core.conj, coll, ch);
};
cljs.core.async.take = function() {
  var take = null;
  var take__2 = function(n, ch) {
    return take.call(null, n, ch, null);
  };
  var take__3 = function(n, ch, buf_or_n) {
    var out = cljs.core.async.chan.call(null, buf_or_n);
    var c__10282__auto___26338 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__10282__auto___26338, out) {
      return function() {
        var f__10283__auto__ = function() {
          var switch__10226__auto__ = function(c__10282__auto___26338, out) {
            return function(state_26315) {
              var state_val_26316 = state_26315[1];
              if (state_val_26316 === 7) {
                var inst_26297 = state_26315[7];
                var inst_26297__$1 = state_26315[2];
                var inst_26298 = inst_26297__$1 == null;
                var inst_26299 = cljs.core.not.call(null, inst_26298);
                var state_26315__$1 = function() {
                  var statearr_26317 = state_26315;
                  statearr_26317[7] = inst_26297__$1;
                  return statearr_26317;
                }();
                if (inst_26299) {
                  var statearr_26318_26339 = state_26315__$1;
                  statearr_26318_26339[1] = 8;
                } else {
                  var statearr_26319_26340 = state_26315__$1;
                  statearr_26319_26340[1] = 9;
                }
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_26316 === 1) {
                  var inst_26292 = 0;
                  var state_26315__$1 = function() {
                    var statearr_26320 = state_26315;
                    statearr_26320[8] = inst_26292;
                    return statearr_26320;
                  }();
                  var statearr_26321_26341 = state_26315__$1;
                  statearr_26321_26341[2] = null;
                  statearr_26321_26341[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_26316 === 4) {
                    var state_26315__$1 = state_26315;
                    return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_26315__$1, 7, ch);
                  } else {
                    if (state_val_26316 === 6) {
                      var inst_26310 = state_26315[2];
                      var state_26315__$1 = state_26315;
                      var statearr_26322_26342 = state_26315__$1;
                      statearr_26322_26342[2] = inst_26310;
                      statearr_26322_26342[1] = 3;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_26316 === 3) {
                        var inst_26312 = state_26315[2];
                        var inst_26313 = cljs.core.async.close_BANG_.call(null, out);
                        var state_26315__$1 = function() {
                          var statearr_26323 = state_26315;
                          statearr_26323[9] = inst_26312;
                          return statearr_26323;
                        }();
                        return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_26315__$1, inst_26313);
                      } else {
                        if (state_val_26316 === 2) {
                          var inst_26292 = state_26315[8];
                          var inst_26294 = inst_26292 < n;
                          var state_26315__$1 = state_26315;
                          if (cljs.core.truth_(inst_26294)) {
                            var statearr_26324_26343 = state_26315__$1;
                            statearr_26324_26343[1] = 4;
                          } else {
                            var statearr_26325_26344 = state_26315__$1;
                            statearr_26325_26344[1] = 5;
                          }
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_26316 === 11) {
                            var inst_26292 = state_26315[8];
                            var inst_26302 = state_26315[2];
                            var inst_26303 = inst_26292 + 1;
                            var inst_26292__$1 = inst_26303;
                            var state_26315__$1 = function() {
                              var statearr_26326 = state_26315;
                              statearr_26326[8] = inst_26292__$1;
                              statearr_26326[10] = inst_26302;
                              return statearr_26326;
                            }();
                            var statearr_26327_26345 = state_26315__$1;
                            statearr_26327_26345[2] = null;
                            statearr_26327_26345[1] = 2;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_26316 === 9) {
                              var state_26315__$1 = state_26315;
                              var statearr_26328_26346 = state_26315__$1;
                              statearr_26328_26346[2] = null;
                              statearr_26328_26346[1] = 10;
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_26316 === 5) {
                                var state_26315__$1 = state_26315;
                                var statearr_26329_26347 = state_26315__$1;
                                statearr_26329_26347[2] = null;
                                statearr_26329_26347[1] = 6;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_26316 === 10) {
                                  var inst_26307 = state_26315[2];
                                  var state_26315__$1 = state_26315;
                                  var statearr_26330_26348 = state_26315__$1;
                                  statearr_26330_26348[2] = inst_26307;
                                  statearr_26330_26348[1] = 6;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_26316 === 8) {
                                    var inst_26297 = state_26315[7];
                                    var state_26315__$1 = state_26315;
                                    return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_26315__$1, 11, out, inst_26297);
                                  } else {
                                    return null;
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            };
          }(c__10282__auto___26338, out);
          return function(switch__10226__auto__, c__10282__auto___26338, out) {
            return function() {
              var state_machine__10227__auto__ = null;
              var state_machine__10227__auto____0 = function() {
                var statearr_26334 = [null, null, null, null, null, null, null, null, null, null, null];
                statearr_26334[0] = state_machine__10227__auto__;
                statearr_26334[1] = 1;
                return statearr_26334;
              };
              var state_machine__10227__auto____1 = function(state_26315) {
                while (true) {
                  var ret_value__10228__auto__ = function() {
                    try {
                      while (true) {
                        var result__10229__auto__ = switch__10226__auto__.call(null, state_26315);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__10229__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          continue;
                        } else {
                          return result__10229__auto__;
                        }
                        break;
                      }
                    } catch (e26335) {
                      if (e26335 instanceof Object) {
                        var ex__10230__auto__ = e26335;
                        var statearr_26336_26349 = state_26315;
                        statearr_26336_26349[5] = ex__10230__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_26315);
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        throw e26335;
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__10228__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                    var G__26350 = state_26315;
                    state_26315 = G__26350;
                    continue;
                  } else {
                    return ret_value__10228__auto__;
                  }
                  break;
                }
              };
              state_machine__10227__auto__ = function(state_26315) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__10227__auto____0.call(this);
                  case 1:
                    return state_machine__10227__auto____1.call(this, state_26315);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__10227__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__10227__auto____0;
              state_machine__10227__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__10227__auto____1;
              return state_machine__10227__auto__;
            }();
          }(switch__10226__auto__, c__10282__auto___26338, out);
        }();
        var state__10284__auto__ = function() {
          var statearr_26337 = f__10283__auto__.call(null);
          statearr_26337[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__10282__auto___26338;
          return statearr_26337;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__10284__auto__);
      };
    }(c__10282__auto___26338, out));
    return out;
  };
  take = function(n, ch, buf_or_n) {
    switch(arguments.length) {
      case 2:
        return take__2.call(this, n, ch);
      case 3:
        return take__3.call(this, n, ch, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  take.cljs$core$IFn$_invoke$arity$2 = take__2;
  take.cljs$core$IFn$_invoke$arity$3 = take__3;
  return take;
}();
cljs.core.async.map_LT_ = function map_LT_(f, ch) {
  if (typeof cljs.core.async.t26358 !== "undefined") {
  } else {
    cljs.core.async.t26358 = function(ch, f, map_LT_, meta26359) {
      this.ch = ch;
      this.f = f;
      this.map_LT_ = map_LT_;
      this.meta26359 = meta26359;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    cljs.core.async.t26358.prototype.cljs$core$async$impl$protocols$WritePort$ = true;
    cljs.core.async.t26358.prototype.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3 = function(_, val, fn1) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.put_BANG_.call(null, self__.ch, val, fn1);
    };
    cljs.core.async.t26358.prototype.cljs$core$async$impl$protocols$ReadPort$ = true;
    cljs.core.async.t26358.prototype.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2 = function(_, fn1) {
      var self__ = this;
      var ___$1 = this;
      var ret = cljs.core.async.impl.protocols.take_BANG_.call(null, self__.ch, function() {
        if (typeof cljs.core.async.t26361 !== "undefined") {
        } else {
          cljs.core.async.t26361 = function(fn1, _, meta26359, map_LT_, f, ch, meta26362) {
            this.fn1 = fn1;
            this._ = _;
            this.meta26359 = meta26359;
            this.map_LT_ = map_LT_;
            this.f = f;
            this.ch = ch;
            this.meta26362 = meta26362;
            this.cljs$lang$protocol_mask$partition1$ = 0;
            this.cljs$lang$protocol_mask$partition0$ = 393216;
          };
          cljs.core.async.t26361.prototype.cljs$core$async$impl$protocols$Handler$ = true;
          cljs.core.async.t26361.prototype.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1 = function(___$1) {
            return function(___$1) {
              var self__ = this;
              var ___$2 = this;
              return cljs.core.async.impl.protocols.active_QMARK_.call(null, self__.fn1);
            };
          }(___$1);
          cljs.core.async.t26361.prototype.cljs$core$async$impl$protocols$Handler$commit$arity$1 = function(___$1) {
            return function(___$1) {
              var self__ = this;
              var ___$2 = this;
              var f1 = cljs.core.async.impl.protocols.commit.call(null, self__.fn1);
              return function(f1, ___$2, ___$1) {
                return function(p1__26351_SHARP_) {
                  return f1.call(null, p1__26351_SHARP_ == null ? null : self__.f.call(null, p1__26351_SHARP_));
                };
              }(f1, ___$2, ___$1);
            };
          }(___$1);
          cljs.core.async.t26361.prototype.cljs$core$IMeta$_meta$arity$1 = function(___$1) {
            return function(_26363) {
              var self__ = this;
              var _26363__$1 = this;
              return self__.meta26362;
            };
          }(___$1);
          cljs.core.async.t26361.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(___$1) {
            return function(_26363, meta26362__$1) {
              var self__ = this;
              var _26363__$1 = this;
              return new cljs.core.async.t26361(self__.fn1, self__._, self__.meta26359, self__.map_LT_, self__.f, self__.ch, meta26362__$1);
            };
          }(___$1);
          cljs.core.async.t26361.cljs$lang$type = true;
          cljs.core.async.t26361.cljs$lang$ctorStr = "cljs.core.async/t26361";
          cljs.core.async.t26361.cljs$lang$ctorPrWriter = function(___$1) {
            return function(this__8091__auto__, writer__8092__auto__, opt__8093__auto__) {
              return cljs.core._write.call(null, writer__8092__auto__, "cljs.core.async/t26361");
            };
          }(___$1);
          cljs.core.async.__GT_t26361 = function(___$1) {
            return function __GT_t26361(fn1__$1, ___$2, meta26359__$1, map_LT___$1, f__$1, ch__$1, meta26362) {
              return new cljs.core.async.t26361(fn1__$1, ___$2, meta26359__$1, map_LT___$1, f__$1, ch__$1, meta26362);
            };
          }(___$1);
        }
        return new cljs.core.async.t26361(fn1, ___$1, self__.meta26359, self__.map_LT_, self__.f, self__.ch, cljs.core.PersistentArrayMap.EMPTY);
      }());
      if (cljs.core.truth_(function() {
        var and__7492__auto__ = ret;
        if (cljs.core.truth_(and__7492__auto__)) {
          return!(cljs.core.deref.call(null, ret) == null);
        } else {
          return and__7492__auto__;
        }
      }())) {
        return cljs.core.async.impl.channels.box.call(null, self__.f.call(null, cljs.core.deref.call(null, ret)));
      } else {
        return ret;
      }
    };
    cljs.core.async.t26358.prototype.cljs$core$async$impl$protocols$Channel$ = true;
    cljs.core.async.t26358.prototype.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.close_BANG_.call(null, self__.ch);
    };
    cljs.core.async.t26358.prototype.cljs$core$async$impl$protocols$Channel$closed_QMARK_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.closed_QMARK_.call(null, self__.ch);
    };
    cljs.core.async.t26358.prototype.cljs$core$IMeta$_meta$arity$1 = function(_26360) {
      var self__ = this;
      var _26360__$1 = this;
      return self__.meta26359;
    };
    cljs.core.async.t26358.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_26360, meta26359__$1) {
      var self__ = this;
      var _26360__$1 = this;
      return new cljs.core.async.t26358(self__.ch, self__.f, self__.map_LT_, meta26359__$1);
    };
    cljs.core.async.t26358.cljs$lang$type = true;
    cljs.core.async.t26358.cljs$lang$ctorStr = "cljs.core.async/t26358";
    cljs.core.async.t26358.cljs$lang$ctorPrWriter = function(this__8091__auto__, writer__8092__auto__, opt__8093__auto__) {
      return cljs.core._write.call(null, writer__8092__auto__, "cljs.core.async/t26358");
    };
    cljs.core.async.__GT_t26358 = function __GT_t26358(ch__$1, f__$1, map_LT___$1, meta26359) {
      return new cljs.core.async.t26358(ch__$1, f__$1, map_LT___$1, meta26359);
    };
  }
  return new cljs.core.async.t26358(ch, f, map_LT_, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.core.async.map_GT_ = function map_GT_(f, ch) {
  if (typeof cljs.core.async.t26367 !== "undefined") {
  } else {
    cljs.core.async.t26367 = function(ch, f, map_GT_, meta26368) {
      this.ch = ch;
      this.f = f;
      this.map_GT_ = map_GT_;
      this.meta26368 = meta26368;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    cljs.core.async.t26367.prototype.cljs$core$async$impl$protocols$WritePort$ = true;
    cljs.core.async.t26367.prototype.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3 = function(_, val, fn1) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.put_BANG_.call(null, self__.ch, self__.f.call(null, val), fn1);
    };
    cljs.core.async.t26367.prototype.cljs$core$async$impl$protocols$ReadPort$ = true;
    cljs.core.async.t26367.prototype.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2 = function(_, fn1) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.take_BANG_.call(null, self__.ch, fn1);
    };
    cljs.core.async.t26367.prototype.cljs$core$async$impl$protocols$Channel$ = true;
    cljs.core.async.t26367.prototype.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.close_BANG_.call(null, self__.ch);
    };
    cljs.core.async.t26367.prototype.cljs$core$IMeta$_meta$arity$1 = function(_26369) {
      var self__ = this;
      var _26369__$1 = this;
      return self__.meta26368;
    };
    cljs.core.async.t26367.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_26369, meta26368__$1) {
      var self__ = this;
      var _26369__$1 = this;
      return new cljs.core.async.t26367(self__.ch, self__.f, self__.map_GT_, meta26368__$1);
    };
    cljs.core.async.t26367.cljs$lang$type = true;
    cljs.core.async.t26367.cljs$lang$ctorStr = "cljs.core.async/t26367";
    cljs.core.async.t26367.cljs$lang$ctorPrWriter = function(this__8091__auto__, writer__8092__auto__, opt__8093__auto__) {
      return cljs.core._write.call(null, writer__8092__auto__, "cljs.core.async/t26367");
    };
    cljs.core.async.__GT_t26367 = function __GT_t26367(ch__$1, f__$1, map_GT___$1, meta26368) {
      return new cljs.core.async.t26367(ch__$1, f__$1, map_GT___$1, meta26368);
    };
  }
  return new cljs.core.async.t26367(ch, f, map_GT_, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.core.async.filter_GT_ = function filter_GT_(p, ch) {
  if (typeof cljs.core.async.t26373 !== "undefined") {
  } else {
    cljs.core.async.t26373 = function(ch, p, filter_GT_, meta26374) {
      this.ch = ch;
      this.p = p;
      this.filter_GT_ = filter_GT_;
      this.meta26374 = meta26374;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    cljs.core.async.t26373.prototype.cljs$core$async$impl$protocols$WritePort$ = true;
    cljs.core.async.t26373.prototype.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3 = function(_, val, fn1) {
      var self__ = this;
      var ___$1 = this;
      if (cljs.core.truth_(self__.p.call(null, val))) {
        return cljs.core.async.impl.protocols.put_BANG_.call(null, self__.ch, val, fn1);
      } else {
        return cljs.core.async.impl.channels.box.call(null, cljs.core.not.call(null, cljs.core.async.impl.protocols.closed_QMARK_.call(null, self__.ch)));
      }
    };
    cljs.core.async.t26373.prototype.cljs$core$async$impl$protocols$ReadPort$ = true;
    cljs.core.async.t26373.prototype.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2 = function(_, fn1) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.take_BANG_.call(null, self__.ch, fn1);
    };
    cljs.core.async.t26373.prototype.cljs$core$async$impl$protocols$Channel$ = true;
    cljs.core.async.t26373.prototype.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.close_BANG_.call(null, self__.ch);
    };
    cljs.core.async.t26373.prototype.cljs$core$async$impl$protocols$Channel$closed_QMARK_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.closed_QMARK_.call(null, self__.ch);
    };
    cljs.core.async.t26373.prototype.cljs$core$IMeta$_meta$arity$1 = function(_26375) {
      var self__ = this;
      var _26375__$1 = this;
      return self__.meta26374;
    };
    cljs.core.async.t26373.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_26375, meta26374__$1) {
      var self__ = this;
      var _26375__$1 = this;
      return new cljs.core.async.t26373(self__.ch, self__.p, self__.filter_GT_, meta26374__$1);
    };
    cljs.core.async.t26373.cljs$lang$type = true;
    cljs.core.async.t26373.cljs$lang$ctorStr = "cljs.core.async/t26373";
    cljs.core.async.t26373.cljs$lang$ctorPrWriter = function(this__8091__auto__, writer__8092__auto__, opt__8093__auto__) {
      return cljs.core._write.call(null, writer__8092__auto__, "cljs.core.async/t26373");
    };
    cljs.core.async.__GT_t26373 = function __GT_t26373(ch__$1, p__$1, filter_GT___$1, meta26374) {
      return new cljs.core.async.t26373(ch__$1, p__$1, filter_GT___$1, meta26374);
    };
  }
  return new cljs.core.async.t26373(ch, p, filter_GT_, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.core.async.remove_GT_ = function remove_GT_(p, ch) {
  return cljs.core.async.filter_GT_.call(null, cljs.core.complement.call(null, p), ch);
};
cljs.core.async.filter_LT_ = function() {
  var filter_LT_ = null;
  var filter_LT___2 = function(p, ch) {
    return filter_LT_.call(null, p, ch, null);
  };
  var filter_LT___3 = function(p, ch, buf_or_n) {
    var out = cljs.core.async.chan.call(null, buf_or_n);
    var c__10282__auto___26458 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__10282__auto___26458, out) {
      return function() {
        var f__10283__auto__ = function() {
          var switch__10226__auto__ = function(c__10282__auto___26458, out) {
            return function(state_26437) {
              var state_val_26438 = state_26437[1];
              if (state_val_26438 === 7) {
                var inst_26433 = state_26437[2];
                var state_26437__$1 = state_26437;
                var statearr_26439_26459 = state_26437__$1;
                statearr_26439_26459[2] = inst_26433;
                statearr_26439_26459[1] = 3;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_26438 === 1) {
                  var state_26437__$1 = state_26437;
                  var statearr_26440_26460 = state_26437__$1;
                  statearr_26440_26460[2] = null;
                  statearr_26440_26460[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_26438 === 4) {
                    var inst_26419 = state_26437[7];
                    var inst_26419__$1 = state_26437[2];
                    var inst_26420 = inst_26419__$1 == null;
                    var state_26437__$1 = function() {
                      var statearr_26441 = state_26437;
                      statearr_26441[7] = inst_26419__$1;
                      return statearr_26441;
                    }();
                    if (cljs.core.truth_(inst_26420)) {
                      var statearr_26442_26461 = state_26437__$1;
                      statearr_26442_26461[1] = 5;
                    } else {
                      var statearr_26443_26462 = state_26437__$1;
                      statearr_26443_26462[1] = 6;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_26438 === 6) {
                      var inst_26419 = state_26437[7];
                      var inst_26424 = p.call(null, inst_26419);
                      var state_26437__$1 = state_26437;
                      if (cljs.core.truth_(inst_26424)) {
                        var statearr_26444_26463 = state_26437__$1;
                        statearr_26444_26463[1] = 8;
                      } else {
                        var statearr_26445_26464 = state_26437__$1;
                        statearr_26445_26464[1] = 9;
                      }
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_26438 === 3) {
                        var inst_26435 = state_26437[2];
                        var state_26437__$1 = state_26437;
                        return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_26437__$1, inst_26435);
                      } else {
                        if (state_val_26438 === 2) {
                          var state_26437__$1 = state_26437;
                          return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_26437__$1, 4, ch);
                        } else {
                          if (state_val_26438 === 11) {
                            var inst_26427 = state_26437[2];
                            var state_26437__$1 = state_26437;
                            var statearr_26446_26465 = state_26437__$1;
                            statearr_26446_26465[2] = inst_26427;
                            statearr_26446_26465[1] = 10;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_26438 === 9) {
                              var state_26437__$1 = state_26437;
                              var statearr_26447_26466 = state_26437__$1;
                              statearr_26447_26466[2] = null;
                              statearr_26447_26466[1] = 10;
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_26438 === 5) {
                                var inst_26422 = cljs.core.async.close_BANG_.call(null, out);
                                var state_26437__$1 = state_26437;
                                var statearr_26448_26467 = state_26437__$1;
                                statearr_26448_26467[2] = inst_26422;
                                statearr_26448_26467[1] = 7;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_26438 === 10) {
                                  var inst_26430 = state_26437[2];
                                  var state_26437__$1 = function() {
                                    var statearr_26449 = state_26437;
                                    statearr_26449[8] = inst_26430;
                                    return statearr_26449;
                                  }();
                                  var statearr_26450_26468 = state_26437__$1;
                                  statearr_26450_26468[2] = null;
                                  statearr_26450_26468[1] = 2;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_26438 === 8) {
                                    var inst_26419 = state_26437[7];
                                    var state_26437__$1 = state_26437;
                                    return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_26437__$1, 11, out, inst_26419);
                                  } else {
                                    return null;
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            };
          }(c__10282__auto___26458, out);
          return function(switch__10226__auto__, c__10282__auto___26458, out) {
            return function() {
              var state_machine__10227__auto__ = null;
              var state_machine__10227__auto____0 = function() {
                var statearr_26454 = [null, null, null, null, null, null, null, null, null];
                statearr_26454[0] = state_machine__10227__auto__;
                statearr_26454[1] = 1;
                return statearr_26454;
              };
              var state_machine__10227__auto____1 = function(state_26437) {
                while (true) {
                  var ret_value__10228__auto__ = function() {
                    try {
                      while (true) {
                        var result__10229__auto__ = switch__10226__auto__.call(null, state_26437);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__10229__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          continue;
                        } else {
                          return result__10229__auto__;
                        }
                        break;
                      }
                    } catch (e26455) {
                      if (e26455 instanceof Object) {
                        var ex__10230__auto__ = e26455;
                        var statearr_26456_26469 = state_26437;
                        statearr_26456_26469[5] = ex__10230__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_26437);
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        throw e26455;
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__10228__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                    var G__26470 = state_26437;
                    state_26437 = G__26470;
                    continue;
                  } else {
                    return ret_value__10228__auto__;
                  }
                  break;
                }
              };
              state_machine__10227__auto__ = function(state_26437) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__10227__auto____0.call(this);
                  case 1:
                    return state_machine__10227__auto____1.call(this, state_26437);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__10227__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__10227__auto____0;
              state_machine__10227__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__10227__auto____1;
              return state_machine__10227__auto__;
            }();
          }(switch__10226__auto__, c__10282__auto___26458, out);
        }();
        var state__10284__auto__ = function() {
          var statearr_26457 = f__10283__auto__.call(null);
          statearr_26457[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__10282__auto___26458;
          return statearr_26457;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__10284__auto__);
      };
    }(c__10282__auto___26458, out));
    return out;
  };
  filter_LT_ = function(p, ch, buf_or_n) {
    switch(arguments.length) {
      case 2:
        return filter_LT___2.call(this, p, ch);
      case 3:
        return filter_LT___3.call(this, p, ch, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  filter_LT_.cljs$core$IFn$_invoke$arity$2 = filter_LT___2;
  filter_LT_.cljs$core$IFn$_invoke$arity$3 = filter_LT___3;
  return filter_LT_;
}();
cljs.core.async.remove_LT_ = function() {
  var remove_LT_ = null;
  var remove_LT___2 = function(p, ch) {
    return remove_LT_.call(null, p, ch, null);
  };
  var remove_LT___3 = function(p, ch, buf_or_n) {
    return cljs.core.async.filter_LT_.call(null, cljs.core.complement.call(null, p), ch, buf_or_n);
  };
  remove_LT_ = function(p, ch, buf_or_n) {
    switch(arguments.length) {
      case 2:
        return remove_LT___2.call(this, p, ch);
      case 3:
        return remove_LT___3.call(this, p, ch, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  remove_LT_.cljs$core$IFn$_invoke$arity$2 = remove_LT___2;
  remove_LT_.cljs$core$IFn$_invoke$arity$3 = remove_LT___3;
  return remove_LT_;
}();
cljs.core.async.mapcat_STAR_ = function mapcat_STAR_(f, in$, out) {
  var c__10282__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__10282__auto__) {
    return function() {
      var f__10283__auto__ = function() {
        var switch__10226__auto__ = function(c__10282__auto__) {
          return function(state_26636) {
            var state_val_26637 = state_26636[1];
            if (state_val_26637 === 7) {
              var inst_26632 = state_26636[2];
              var state_26636__$1 = state_26636;
              var statearr_26638_26679 = state_26636__$1;
              statearr_26638_26679[2] = inst_26632;
              statearr_26638_26679[1] = 3;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_26637 === 20) {
                var inst_26602 = state_26636[7];
                var inst_26613 = state_26636[2];
                var inst_26614 = cljs.core.next.call(null, inst_26602);
                var inst_26588 = inst_26614;
                var inst_26589 = null;
                var inst_26590 = 0;
                var inst_26591 = 0;
                var state_26636__$1 = function() {
                  var statearr_26639 = state_26636;
                  statearr_26639[8] = inst_26589;
                  statearr_26639[9] = inst_26588;
                  statearr_26639[10] = inst_26590;
                  statearr_26639[11] = inst_26613;
                  statearr_26639[12] = inst_26591;
                  return statearr_26639;
                }();
                var statearr_26640_26680 = state_26636__$1;
                statearr_26640_26680[2] = null;
                statearr_26640_26680[1] = 8;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_26637 === 1) {
                  var state_26636__$1 = state_26636;
                  var statearr_26641_26681 = state_26636__$1;
                  statearr_26641_26681[2] = null;
                  statearr_26641_26681[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_26637 === 4) {
                    var inst_26577 = state_26636[13];
                    var inst_26577__$1 = state_26636[2];
                    var inst_26578 = inst_26577__$1 == null;
                    var state_26636__$1 = function() {
                      var statearr_26642 = state_26636;
                      statearr_26642[13] = inst_26577__$1;
                      return statearr_26642;
                    }();
                    if (cljs.core.truth_(inst_26578)) {
                      var statearr_26643_26682 = state_26636__$1;
                      statearr_26643_26682[1] = 5;
                    } else {
                      var statearr_26644_26683 = state_26636__$1;
                      statearr_26644_26683[1] = 6;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_26637 === 15) {
                      var state_26636__$1 = state_26636;
                      var statearr_26648_26684 = state_26636__$1;
                      statearr_26648_26684[2] = null;
                      statearr_26648_26684[1] = 16;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_26637 === 21) {
                        var state_26636__$1 = state_26636;
                        var statearr_26649_26685 = state_26636__$1;
                        statearr_26649_26685[2] = null;
                        statearr_26649_26685[1] = 23;
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_26637 === 13) {
                          var inst_26589 = state_26636[8];
                          var inst_26588 = state_26636[9];
                          var inst_26590 = state_26636[10];
                          var inst_26591 = state_26636[12];
                          var inst_26598 = state_26636[2];
                          var inst_26599 = inst_26591 + 1;
                          var tmp26645 = inst_26589;
                          var tmp26646 = inst_26588;
                          var tmp26647 = inst_26590;
                          var inst_26588__$1 = tmp26646;
                          var inst_26589__$1 = tmp26645;
                          var inst_26590__$1 = tmp26647;
                          var inst_26591__$1 = inst_26599;
                          var state_26636__$1 = function() {
                            var statearr_26650 = state_26636;
                            statearr_26650[8] = inst_26589__$1;
                            statearr_26650[9] = inst_26588__$1;
                            statearr_26650[10] = inst_26590__$1;
                            statearr_26650[14] = inst_26598;
                            statearr_26650[12] = inst_26591__$1;
                            return statearr_26650;
                          }();
                          var statearr_26651_26686 = state_26636__$1;
                          statearr_26651_26686[2] = null;
                          statearr_26651_26686[1] = 8;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_26637 === 22) {
                            var state_26636__$1 = state_26636;
                            var statearr_26652_26687 = state_26636__$1;
                            statearr_26652_26687[2] = null;
                            statearr_26652_26687[1] = 2;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_26637 === 6) {
                              var inst_26577 = state_26636[13];
                              var inst_26586 = f.call(null, inst_26577);
                              var inst_26587 = cljs.core.seq.call(null, inst_26586);
                              var inst_26588 = inst_26587;
                              var inst_26589 = null;
                              var inst_26590 = 0;
                              var inst_26591 = 0;
                              var state_26636__$1 = function() {
                                var statearr_26653 = state_26636;
                                statearr_26653[8] = inst_26589;
                                statearr_26653[9] = inst_26588;
                                statearr_26653[10] = inst_26590;
                                statearr_26653[12] = inst_26591;
                                return statearr_26653;
                              }();
                              var statearr_26654_26688 = state_26636__$1;
                              statearr_26654_26688[2] = null;
                              statearr_26654_26688[1] = 8;
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_26637 === 17) {
                                var inst_26602 = state_26636[7];
                                var inst_26606 = cljs.core.chunk_first.call(null, inst_26602);
                                var inst_26607 = cljs.core.chunk_rest.call(null, inst_26602);
                                var inst_26608 = cljs.core.count.call(null, inst_26606);
                                var inst_26588 = inst_26607;
                                var inst_26589 = inst_26606;
                                var inst_26590 = inst_26608;
                                var inst_26591 = 0;
                                var state_26636__$1 = function() {
                                  var statearr_26655 = state_26636;
                                  statearr_26655[8] = inst_26589;
                                  statearr_26655[9] = inst_26588;
                                  statearr_26655[10] = inst_26590;
                                  statearr_26655[12] = inst_26591;
                                  return statearr_26655;
                                }();
                                var statearr_26656_26689 = state_26636__$1;
                                statearr_26656_26689[2] = null;
                                statearr_26656_26689[1] = 8;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_26637 === 3) {
                                  var inst_26634 = state_26636[2];
                                  var state_26636__$1 = state_26636;
                                  return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_26636__$1, inst_26634);
                                } else {
                                  if (state_val_26637 === 12) {
                                    var inst_26622 = state_26636[2];
                                    var state_26636__$1 = state_26636;
                                    var statearr_26657_26690 = state_26636__$1;
                                    statearr_26657_26690[2] = inst_26622;
                                    statearr_26657_26690[1] = 9;
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_26637 === 2) {
                                      var state_26636__$1 = state_26636;
                                      return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_26636__$1, 4, in$);
                                    } else {
                                      if (state_val_26637 === 23) {
                                        var inst_26630 = state_26636[2];
                                        var state_26636__$1 = state_26636;
                                        var statearr_26658_26691 = state_26636__$1;
                                        statearr_26658_26691[2] = inst_26630;
                                        statearr_26658_26691[1] = 7;
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        if (state_val_26637 === 19) {
                                          var inst_26617 = state_26636[2];
                                          var state_26636__$1 = state_26636;
                                          var statearr_26659_26692 = state_26636__$1;
                                          statearr_26659_26692[2] = inst_26617;
                                          statearr_26659_26692[1] = 16;
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          if (state_val_26637 === 11) {
                                            var inst_26588 = state_26636[9];
                                            var inst_26602 = state_26636[7];
                                            var inst_26602__$1 = cljs.core.seq.call(null, inst_26588);
                                            var state_26636__$1 = function() {
                                              var statearr_26660 = state_26636;
                                              statearr_26660[7] = inst_26602__$1;
                                              return statearr_26660;
                                            }();
                                            if (inst_26602__$1) {
                                              var statearr_26661_26693 = state_26636__$1;
                                              statearr_26661_26693[1] = 14;
                                            } else {
                                              var statearr_26662_26694 = state_26636__$1;
                                              statearr_26662_26694[1] = 15;
                                            }
                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                          } else {
                                            if (state_val_26637 === 9) {
                                              var inst_26624 = state_26636[2];
                                              var inst_26625 = cljs.core.async.impl.protocols.closed_QMARK_.call(null, out);
                                              var state_26636__$1 = function() {
                                                var statearr_26663 = state_26636;
                                                statearr_26663[15] = inst_26624;
                                                return statearr_26663;
                                              }();
                                              if (cljs.core.truth_(inst_26625)) {
                                                var statearr_26664_26695 = state_26636__$1;
                                                statearr_26664_26695[1] = 21;
                                              } else {
                                                var statearr_26665_26696 = state_26636__$1;
                                                statearr_26665_26696[1] = 22;
                                              }
                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                            } else {
                                              if (state_val_26637 === 5) {
                                                var inst_26580 = cljs.core.async.close_BANG_.call(null, out);
                                                var state_26636__$1 = state_26636;
                                                var statearr_26666_26697 = state_26636__$1;
                                                statearr_26666_26697[2] = inst_26580;
                                                statearr_26666_26697[1] = 7;
                                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                              } else {
                                                if (state_val_26637 === 14) {
                                                  var inst_26602 = state_26636[7];
                                                  var inst_26604 = cljs.core.chunked_seq_QMARK_.call(null, inst_26602);
                                                  var state_26636__$1 = state_26636;
                                                  if (inst_26604) {
                                                    var statearr_26667_26698 = state_26636__$1;
                                                    statearr_26667_26698[1] = 17;
                                                  } else {
                                                    var statearr_26668_26699 = state_26636__$1;
                                                    statearr_26668_26699[1] = 18;
                                                  }
                                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                } else {
                                                  if (state_val_26637 === 16) {
                                                    var inst_26620 = state_26636[2];
                                                    var state_26636__$1 = state_26636;
                                                    var statearr_26669_26700 = state_26636__$1;
                                                    statearr_26669_26700[2] = inst_26620;
                                                    statearr_26669_26700[1] = 12;
                                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                  } else {
                                                    if (state_val_26637 === 10) {
                                                      var inst_26589 = state_26636[8];
                                                      var inst_26591 = state_26636[12];
                                                      var inst_26596 = cljs.core._nth.call(null, inst_26589, inst_26591);
                                                      var state_26636__$1 = state_26636;
                                                      return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_26636__$1, 13, out, inst_26596);
                                                    } else {
                                                      if (state_val_26637 === 18) {
                                                        var inst_26602 = state_26636[7];
                                                        var inst_26611 = cljs.core.first.call(null, inst_26602);
                                                        var state_26636__$1 = state_26636;
                                                        return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_26636__$1, 20, out, inst_26611);
                                                      } else {
                                                        if (state_val_26637 === 8) {
                                                          var inst_26590 = state_26636[10];
                                                          var inst_26591 = state_26636[12];
                                                          var inst_26593 = inst_26591 < inst_26590;
                                                          var inst_26594 = inst_26593;
                                                          var state_26636__$1 = state_26636;
                                                          if (cljs.core.truth_(inst_26594)) {
                                                            var statearr_26670_26701 = state_26636__$1;
                                                            statearr_26670_26701[1] = 10;
                                                          } else {
                                                            var statearr_26671_26702 = state_26636__$1;
                                                            statearr_26671_26702[1] = 11;
                                                          }
                                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                        } else {
                                                          return null;
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__10282__auto__);
        return function(switch__10226__auto__, c__10282__auto__) {
          return function() {
            var state_machine__10227__auto__ = null;
            var state_machine__10227__auto____0 = function() {
              var statearr_26675 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
              statearr_26675[0] = state_machine__10227__auto__;
              statearr_26675[1] = 1;
              return statearr_26675;
            };
            var state_machine__10227__auto____1 = function(state_26636) {
              while (true) {
                var ret_value__10228__auto__ = function() {
                  try {
                    while (true) {
                      var result__10229__auto__ = switch__10226__auto__.call(null, state_26636);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__10229__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__10229__auto__;
                      }
                      break;
                    }
                  } catch (e26676) {
                    if (e26676 instanceof Object) {
                      var ex__10230__auto__ = e26676;
                      var statearr_26677_26703 = state_26636;
                      statearr_26677_26703[5] = ex__10230__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_26636);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e26676;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__10228__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__26704 = state_26636;
                  state_26636 = G__26704;
                  continue;
                } else {
                  return ret_value__10228__auto__;
                }
                break;
              }
            };
            state_machine__10227__auto__ = function(state_26636) {
              switch(arguments.length) {
                case 0:
                  return state_machine__10227__auto____0.call(this);
                case 1:
                  return state_machine__10227__auto____1.call(this, state_26636);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__10227__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__10227__auto____0;
            state_machine__10227__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__10227__auto____1;
            return state_machine__10227__auto__;
          }();
        }(switch__10226__auto__, c__10282__auto__);
      }();
      var state__10284__auto__ = function() {
        var statearr_26678 = f__10283__auto__.call(null);
        statearr_26678[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__10282__auto__;
        return statearr_26678;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__10284__auto__);
    };
  }(c__10282__auto__));
  return c__10282__auto__;
};
cljs.core.async.mapcat_LT_ = function() {
  var mapcat_LT_ = null;
  var mapcat_LT___2 = function(f, in$) {
    return mapcat_LT_.call(null, f, in$, null);
  };
  var mapcat_LT___3 = function(f, in$, buf_or_n) {
    var out = cljs.core.async.chan.call(null, buf_or_n);
    cljs.core.async.mapcat_STAR_.call(null, f, in$, out);
    return out;
  };
  mapcat_LT_ = function(f, in$, buf_or_n) {
    switch(arguments.length) {
      case 2:
        return mapcat_LT___2.call(this, f, in$);
      case 3:
        return mapcat_LT___3.call(this, f, in$, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  mapcat_LT_.cljs$core$IFn$_invoke$arity$2 = mapcat_LT___2;
  mapcat_LT_.cljs$core$IFn$_invoke$arity$3 = mapcat_LT___3;
  return mapcat_LT_;
}();
cljs.core.async.mapcat_GT_ = function() {
  var mapcat_GT_ = null;
  var mapcat_GT___2 = function(f, out) {
    return mapcat_GT_.call(null, f, out, null);
  };
  var mapcat_GT___3 = function(f, out, buf_or_n) {
    var in$ = cljs.core.async.chan.call(null, buf_or_n);
    cljs.core.async.mapcat_STAR_.call(null, f, in$, out);
    return in$;
  };
  mapcat_GT_ = function(f, out, buf_or_n) {
    switch(arguments.length) {
      case 2:
        return mapcat_GT___2.call(this, f, out);
      case 3:
        return mapcat_GT___3.call(this, f, out, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  mapcat_GT_.cljs$core$IFn$_invoke$arity$2 = mapcat_GT___2;
  mapcat_GT_.cljs$core$IFn$_invoke$arity$3 = mapcat_GT___3;
  return mapcat_GT_;
}();
cljs.core.async.unique = function() {
  var unique = null;
  var unique__1 = function(ch) {
    return unique.call(null, ch, null);
  };
  var unique__2 = function(ch, buf_or_n) {
    var out = cljs.core.async.chan.call(null, buf_or_n);
    var c__10282__auto___26801 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__10282__auto___26801, out) {
      return function() {
        var f__10283__auto__ = function() {
          var switch__10226__auto__ = function(c__10282__auto___26801, out) {
            return function(state_26776) {
              var state_val_26777 = state_26776[1];
              if (state_val_26777 === 7) {
                var inst_26771 = state_26776[2];
                var state_26776__$1 = state_26776;
                var statearr_26778_26802 = state_26776__$1;
                statearr_26778_26802[2] = inst_26771;
                statearr_26778_26802[1] = 3;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_26777 === 1) {
                  var inst_26753 = null;
                  var state_26776__$1 = function() {
                    var statearr_26779 = state_26776;
                    statearr_26779[7] = inst_26753;
                    return statearr_26779;
                  }();
                  var statearr_26780_26803 = state_26776__$1;
                  statearr_26780_26803[2] = null;
                  statearr_26780_26803[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_26777 === 4) {
                    var inst_26756 = state_26776[8];
                    var inst_26756__$1 = state_26776[2];
                    var inst_26757 = inst_26756__$1 == null;
                    var inst_26758 = cljs.core.not.call(null, inst_26757);
                    var state_26776__$1 = function() {
                      var statearr_26781 = state_26776;
                      statearr_26781[8] = inst_26756__$1;
                      return statearr_26781;
                    }();
                    if (inst_26758) {
                      var statearr_26782_26804 = state_26776__$1;
                      statearr_26782_26804[1] = 5;
                    } else {
                      var statearr_26783_26805 = state_26776__$1;
                      statearr_26783_26805[1] = 6;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_26777 === 6) {
                      var state_26776__$1 = state_26776;
                      var statearr_26784_26806 = state_26776__$1;
                      statearr_26784_26806[2] = null;
                      statearr_26784_26806[1] = 7;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_26777 === 3) {
                        var inst_26773 = state_26776[2];
                        var inst_26774 = cljs.core.async.close_BANG_.call(null, out);
                        var state_26776__$1 = function() {
                          var statearr_26785 = state_26776;
                          statearr_26785[9] = inst_26773;
                          return statearr_26785;
                        }();
                        return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_26776__$1, inst_26774);
                      } else {
                        if (state_val_26777 === 2) {
                          var state_26776__$1 = state_26776;
                          return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_26776__$1, 4, ch);
                        } else {
                          if (state_val_26777 === 11) {
                            var inst_26756 = state_26776[8];
                            var inst_26765 = state_26776[2];
                            var inst_26753 = inst_26756;
                            var state_26776__$1 = function() {
                              var statearr_26786 = state_26776;
                              statearr_26786[7] = inst_26753;
                              statearr_26786[10] = inst_26765;
                              return statearr_26786;
                            }();
                            var statearr_26787_26807 = state_26776__$1;
                            statearr_26787_26807[2] = null;
                            statearr_26787_26807[1] = 2;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_26777 === 9) {
                              var inst_26756 = state_26776[8];
                              var state_26776__$1 = state_26776;
                              return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_26776__$1, 11, out, inst_26756);
                            } else {
                              if (state_val_26777 === 5) {
                                var inst_26753 = state_26776[7];
                                var inst_26756 = state_26776[8];
                                var inst_26760 = cljs.core._EQ_.call(null, inst_26756, inst_26753);
                                var state_26776__$1 = state_26776;
                                if (inst_26760) {
                                  var statearr_26789_26808 = state_26776__$1;
                                  statearr_26789_26808[1] = 8;
                                } else {
                                  var statearr_26790_26809 = state_26776__$1;
                                  statearr_26790_26809[1] = 9;
                                }
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_26777 === 10) {
                                  var inst_26768 = state_26776[2];
                                  var state_26776__$1 = state_26776;
                                  var statearr_26791_26810 = state_26776__$1;
                                  statearr_26791_26810[2] = inst_26768;
                                  statearr_26791_26810[1] = 7;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_26777 === 8) {
                                    var inst_26753 = state_26776[7];
                                    var tmp26788 = inst_26753;
                                    var inst_26753__$1 = tmp26788;
                                    var state_26776__$1 = function() {
                                      var statearr_26792 = state_26776;
                                      statearr_26792[7] = inst_26753__$1;
                                      return statearr_26792;
                                    }();
                                    var statearr_26793_26811 = state_26776__$1;
                                    statearr_26793_26811[2] = null;
                                    statearr_26793_26811[1] = 2;
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    return null;
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            };
          }(c__10282__auto___26801, out);
          return function(switch__10226__auto__, c__10282__auto___26801, out) {
            return function() {
              var state_machine__10227__auto__ = null;
              var state_machine__10227__auto____0 = function() {
                var statearr_26797 = [null, null, null, null, null, null, null, null, null, null, null];
                statearr_26797[0] = state_machine__10227__auto__;
                statearr_26797[1] = 1;
                return statearr_26797;
              };
              var state_machine__10227__auto____1 = function(state_26776) {
                while (true) {
                  var ret_value__10228__auto__ = function() {
                    try {
                      while (true) {
                        var result__10229__auto__ = switch__10226__auto__.call(null, state_26776);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__10229__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          continue;
                        } else {
                          return result__10229__auto__;
                        }
                        break;
                      }
                    } catch (e26798) {
                      if (e26798 instanceof Object) {
                        var ex__10230__auto__ = e26798;
                        var statearr_26799_26812 = state_26776;
                        statearr_26799_26812[5] = ex__10230__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_26776);
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        throw e26798;
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__10228__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                    var G__26813 = state_26776;
                    state_26776 = G__26813;
                    continue;
                  } else {
                    return ret_value__10228__auto__;
                  }
                  break;
                }
              };
              state_machine__10227__auto__ = function(state_26776) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__10227__auto____0.call(this);
                  case 1:
                    return state_machine__10227__auto____1.call(this, state_26776);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__10227__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__10227__auto____0;
              state_machine__10227__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__10227__auto____1;
              return state_machine__10227__auto__;
            }();
          }(switch__10226__auto__, c__10282__auto___26801, out);
        }();
        var state__10284__auto__ = function() {
          var statearr_26800 = f__10283__auto__.call(null);
          statearr_26800[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__10282__auto___26801;
          return statearr_26800;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__10284__auto__);
      };
    }(c__10282__auto___26801, out));
    return out;
  };
  unique = function(ch, buf_or_n) {
    switch(arguments.length) {
      case 1:
        return unique__1.call(this, ch);
      case 2:
        return unique__2.call(this, ch, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unique.cljs$core$IFn$_invoke$arity$1 = unique__1;
  unique.cljs$core$IFn$_invoke$arity$2 = unique__2;
  return unique;
}();
cljs.core.async.partition = function() {
  var partition = null;
  var partition__2 = function(n, ch) {
    return partition.call(null, n, ch, null);
  };
  var partition__3 = function(n, ch, buf_or_n) {
    var out = cljs.core.async.chan.call(null, buf_or_n);
    var c__10282__auto___26948 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__10282__auto___26948, out) {
      return function() {
        var f__10283__auto__ = function() {
          var switch__10226__auto__ = function(c__10282__auto___26948, out) {
            return function(state_26918) {
              var state_val_26919 = state_26918[1];
              if (state_val_26919 === 7) {
                var inst_26914 = state_26918[2];
                var state_26918__$1 = state_26918;
                var statearr_26920_26949 = state_26918__$1;
                statearr_26920_26949[2] = inst_26914;
                statearr_26920_26949[1] = 3;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_26919 === 1) {
                  var inst_26881 = new Array(n);
                  var inst_26882 = inst_26881;
                  var inst_26883 = 0;
                  var state_26918__$1 = function() {
                    var statearr_26921 = state_26918;
                    statearr_26921[7] = inst_26883;
                    statearr_26921[8] = inst_26882;
                    return statearr_26921;
                  }();
                  var statearr_26922_26950 = state_26918__$1;
                  statearr_26922_26950[2] = null;
                  statearr_26922_26950[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_26919 === 4) {
                    var inst_26886 = state_26918[9];
                    var inst_26886__$1 = state_26918[2];
                    var inst_26887 = inst_26886__$1 == null;
                    var inst_26888 = cljs.core.not.call(null, inst_26887);
                    var state_26918__$1 = function() {
                      var statearr_26923 = state_26918;
                      statearr_26923[9] = inst_26886__$1;
                      return statearr_26923;
                    }();
                    if (inst_26888) {
                      var statearr_26924_26951 = state_26918__$1;
                      statearr_26924_26951[1] = 5;
                    } else {
                      var statearr_26925_26952 = state_26918__$1;
                      statearr_26925_26952[1] = 6;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_26919 === 15) {
                      var inst_26908 = state_26918[2];
                      var state_26918__$1 = state_26918;
                      var statearr_26926_26953 = state_26918__$1;
                      statearr_26926_26953[2] = inst_26908;
                      statearr_26926_26953[1] = 14;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_26919 === 13) {
                        var state_26918__$1 = state_26918;
                        var statearr_26927_26954 = state_26918__$1;
                        statearr_26927_26954[2] = null;
                        statearr_26927_26954[1] = 14;
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_26919 === 6) {
                          var inst_26883 = state_26918[7];
                          var inst_26904 = inst_26883 > 0;
                          var state_26918__$1 = state_26918;
                          if (cljs.core.truth_(inst_26904)) {
                            var statearr_26928_26955 = state_26918__$1;
                            statearr_26928_26955[1] = 12;
                          } else {
                            var statearr_26929_26956 = state_26918__$1;
                            statearr_26929_26956[1] = 13;
                          }
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_26919 === 3) {
                            var inst_26916 = state_26918[2];
                            var state_26918__$1 = state_26918;
                            return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_26918__$1, inst_26916);
                          } else {
                            if (state_val_26919 === 12) {
                              var inst_26882 = state_26918[8];
                              var inst_26906 = cljs.core.vec.call(null, inst_26882);
                              var state_26918__$1 = state_26918;
                              return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_26918__$1, 15, out, inst_26906);
                            } else {
                              if (state_val_26919 === 2) {
                                var state_26918__$1 = state_26918;
                                return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_26918__$1, 4, ch);
                              } else {
                                if (state_val_26919 === 11) {
                                  var inst_26898 = state_26918[2];
                                  var inst_26899 = new Array(n);
                                  var inst_26882 = inst_26899;
                                  var inst_26883 = 0;
                                  var state_26918__$1 = function() {
                                    var statearr_26930 = state_26918;
                                    statearr_26930[7] = inst_26883;
                                    statearr_26930[10] = inst_26898;
                                    statearr_26930[8] = inst_26882;
                                    return statearr_26930;
                                  }();
                                  var statearr_26931_26957 = state_26918__$1;
                                  statearr_26931_26957[2] = null;
                                  statearr_26931_26957[1] = 2;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_26919 === 9) {
                                    var inst_26882 = state_26918[8];
                                    var inst_26896 = cljs.core.vec.call(null, inst_26882);
                                    var state_26918__$1 = state_26918;
                                    return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_26918__$1, 11, out, inst_26896);
                                  } else {
                                    if (state_val_26919 === 5) {
                                      var inst_26883 = state_26918[7];
                                      var inst_26886 = state_26918[9];
                                      var inst_26891 = state_26918[11];
                                      var inst_26882 = state_26918[8];
                                      var inst_26890 = inst_26882[inst_26883] = inst_26886;
                                      var inst_26891__$1 = inst_26883 + 1;
                                      var inst_26892 = inst_26891__$1 < n;
                                      var state_26918__$1 = function() {
                                        var statearr_26932 = state_26918;
                                        statearr_26932[12] = inst_26890;
                                        statearr_26932[11] = inst_26891__$1;
                                        return statearr_26932;
                                      }();
                                      if (cljs.core.truth_(inst_26892)) {
                                        var statearr_26933_26958 = state_26918__$1;
                                        statearr_26933_26958[1] = 8;
                                      } else {
                                        var statearr_26934_26959 = state_26918__$1;
                                        statearr_26934_26959[1] = 9;
                                      }
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      if (state_val_26919 === 14) {
                                        var inst_26911 = state_26918[2];
                                        var inst_26912 = cljs.core.async.close_BANG_.call(null, out);
                                        var state_26918__$1 = function() {
                                          var statearr_26936 = state_26918;
                                          statearr_26936[13] = inst_26911;
                                          return statearr_26936;
                                        }();
                                        var statearr_26937_26960 = state_26918__$1;
                                        statearr_26937_26960[2] = inst_26912;
                                        statearr_26937_26960[1] = 7;
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        if (state_val_26919 === 10) {
                                          var inst_26902 = state_26918[2];
                                          var state_26918__$1 = state_26918;
                                          var statearr_26938_26961 = state_26918__$1;
                                          statearr_26938_26961[2] = inst_26902;
                                          statearr_26938_26961[1] = 7;
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          if (state_val_26919 === 8) {
                                            var inst_26891 = state_26918[11];
                                            var inst_26882 = state_26918[8];
                                            var tmp26935 = inst_26882;
                                            var inst_26882__$1 = tmp26935;
                                            var inst_26883 = inst_26891;
                                            var state_26918__$1 = function() {
                                              var statearr_26939 = state_26918;
                                              statearr_26939[7] = inst_26883;
                                              statearr_26939[8] = inst_26882__$1;
                                              return statearr_26939;
                                            }();
                                            var statearr_26940_26962 = state_26918__$1;
                                            statearr_26940_26962[2] = null;
                                            statearr_26940_26962[1] = 2;
                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                          } else {
                                            return null;
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            };
          }(c__10282__auto___26948, out);
          return function(switch__10226__auto__, c__10282__auto___26948, out) {
            return function() {
              var state_machine__10227__auto__ = null;
              var state_machine__10227__auto____0 = function() {
                var statearr_26944 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null];
                statearr_26944[0] = state_machine__10227__auto__;
                statearr_26944[1] = 1;
                return statearr_26944;
              };
              var state_machine__10227__auto____1 = function(state_26918) {
                while (true) {
                  var ret_value__10228__auto__ = function() {
                    try {
                      while (true) {
                        var result__10229__auto__ = switch__10226__auto__.call(null, state_26918);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__10229__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          continue;
                        } else {
                          return result__10229__auto__;
                        }
                        break;
                      }
                    } catch (e26945) {
                      if (e26945 instanceof Object) {
                        var ex__10230__auto__ = e26945;
                        var statearr_26946_26963 = state_26918;
                        statearr_26946_26963[5] = ex__10230__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_26918);
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        throw e26945;
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__10228__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                    var G__26964 = state_26918;
                    state_26918 = G__26964;
                    continue;
                  } else {
                    return ret_value__10228__auto__;
                  }
                  break;
                }
              };
              state_machine__10227__auto__ = function(state_26918) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__10227__auto____0.call(this);
                  case 1:
                    return state_machine__10227__auto____1.call(this, state_26918);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__10227__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__10227__auto____0;
              state_machine__10227__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__10227__auto____1;
              return state_machine__10227__auto__;
            }();
          }(switch__10226__auto__, c__10282__auto___26948, out);
        }();
        var state__10284__auto__ = function() {
          var statearr_26947 = f__10283__auto__.call(null);
          statearr_26947[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__10282__auto___26948;
          return statearr_26947;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__10284__auto__);
      };
    }(c__10282__auto___26948, out));
    return out;
  };
  partition = function(n, ch, buf_or_n) {
    switch(arguments.length) {
      case 2:
        return partition__2.call(this, n, ch);
      case 3:
        return partition__3.call(this, n, ch, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  partition.cljs$core$IFn$_invoke$arity$2 = partition__2;
  partition.cljs$core$IFn$_invoke$arity$3 = partition__3;
  return partition;
}();
cljs.core.async.partition_by = function() {
  var partition_by = null;
  var partition_by__2 = function(f, ch) {
    return partition_by.call(null, f, ch, null);
  };
  var partition_by__3 = function(f, ch, buf_or_n) {
    var out = cljs.core.async.chan.call(null, buf_or_n);
    var c__10282__auto___27107 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__10282__auto___27107, out) {
      return function() {
        var f__10283__auto__ = function() {
          var switch__10226__auto__ = function(c__10282__auto___27107, out) {
            return function(state_27077) {
              var state_val_27078 = state_27077[1];
              if (state_val_27078 === 7) {
                var inst_27073 = state_27077[2];
                var state_27077__$1 = state_27077;
                var statearr_27079_27108 = state_27077__$1;
                statearr_27079_27108[2] = inst_27073;
                statearr_27079_27108[1] = 3;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_27078 === 1) {
                  var inst_27036 = [];
                  var inst_27037 = inst_27036;
                  var inst_27038 = new cljs.core.Keyword("cljs.core.async", "nothing", "cljs.core.async/nothing", -69252123);
                  var state_27077__$1 = function() {
                    var statearr_27080 = state_27077;
                    statearr_27080[7] = inst_27037;
                    statearr_27080[8] = inst_27038;
                    return statearr_27080;
                  }();
                  var statearr_27081_27109 = state_27077__$1;
                  statearr_27081_27109[2] = null;
                  statearr_27081_27109[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_27078 === 4) {
                    var inst_27041 = state_27077[9];
                    var inst_27041__$1 = state_27077[2];
                    var inst_27042 = inst_27041__$1 == null;
                    var inst_27043 = cljs.core.not.call(null, inst_27042);
                    var state_27077__$1 = function() {
                      var statearr_27082 = state_27077;
                      statearr_27082[9] = inst_27041__$1;
                      return statearr_27082;
                    }();
                    if (inst_27043) {
                      var statearr_27083_27110 = state_27077__$1;
                      statearr_27083_27110[1] = 5;
                    } else {
                      var statearr_27084_27111 = state_27077__$1;
                      statearr_27084_27111[1] = 6;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_27078 === 15) {
                      var inst_27067 = state_27077[2];
                      var state_27077__$1 = state_27077;
                      var statearr_27085_27112 = state_27077__$1;
                      statearr_27085_27112[2] = inst_27067;
                      statearr_27085_27112[1] = 14;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_27078 === 13) {
                        var state_27077__$1 = state_27077;
                        var statearr_27086_27113 = state_27077__$1;
                        statearr_27086_27113[2] = null;
                        statearr_27086_27113[1] = 14;
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_27078 === 6) {
                          var inst_27037 = state_27077[7];
                          var inst_27062 = inst_27037.length;
                          var inst_27063 = inst_27062 > 0;
                          var state_27077__$1 = state_27077;
                          if (cljs.core.truth_(inst_27063)) {
                            var statearr_27087_27114 = state_27077__$1;
                            statearr_27087_27114[1] = 12;
                          } else {
                            var statearr_27088_27115 = state_27077__$1;
                            statearr_27088_27115[1] = 13;
                          }
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_27078 === 3) {
                            var inst_27075 = state_27077[2];
                            var state_27077__$1 = state_27077;
                            return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_27077__$1, inst_27075);
                          } else {
                            if (state_val_27078 === 12) {
                              var inst_27037 = state_27077[7];
                              var inst_27065 = cljs.core.vec.call(null, inst_27037);
                              var state_27077__$1 = state_27077;
                              return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_27077__$1, 15, out, inst_27065);
                            } else {
                              if (state_val_27078 === 2) {
                                var state_27077__$1 = state_27077;
                                return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_27077__$1, 4, ch);
                              } else {
                                if (state_val_27078 === 11) {
                                  var inst_27045 = state_27077[10];
                                  var inst_27041 = state_27077[9];
                                  var inst_27055 = state_27077[2];
                                  var inst_27056 = [];
                                  var inst_27057 = inst_27056.push(inst_27041);
                                  var inst_27037 = inst_27056;
                                  var inst_27038 = inst_27045;
                                  var state_27077__$1 = function() {
                                    var statearr_27089 = state_27077;
                                    statearr_27089[11] = inst_27055;
                                    statearr_27089[7] = inst_27037;
                                    statearr_27089[8] = inst_27038;
                                    statearr_27089[12] = inst_27057;
                                    return statearr_27089;
                                  }();
                                  var statearr_27090_27116 = state_27077__$1;
                                  statearr_27090_27116[2] = null;
                                  statearr_27090_27116[1] = 2;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_27078 === 9) {
                                    var inst_27037 = state_27077[7];
                                    var inst_27053 = cljs.core.vec.call(null, inst_27037);
                                    var state_27077__$1 = state_27077;
                                    return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_27077__$1, 11, out, inst_27053);
                                  } else {
                                    if (state_val_27078 === 5) {
                                      var inst_27038 = state_27077[8];
                                      var inst_27045 = state_27077[10];
                                      var inst_27041 = state_27077[9];
                                      var inst_27045__$1 = f.call(null, inst_27041);
                                      var inst_27046 = cljs.core._EQ_.call(null, inst_27045__$1, inst_27038);
                                      var inst_27047 = cljs.core.keyword_identical_QMARK_.call(null, inst_27038, new cljs.core.Keyword("cljs.core.async", "nothing", "cljs.core.async/nothing", -69252123));
                                      var inst_27048 = inst_27046 || inst_27047;
                                      var state_27077__$1 = function() {
                                        var statearr_27091 = state_27077;
                                        statearr_27091[10] = inst_27045__$1;
                                        return statearr_27091;
                                      }();
                                      if (cljs.core.truth_(inst_27048)) {
                                        var statearr_27092_27117 = state_27077__$1;
                                        statearr_27092_27117[1] = 8;
                                      } else {
                                        var statearr_27093_27118 = state_27077__$1;
                                        statearr_27093_27118[1] = 9;
                                      }
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      if (state_val_27078 === 14) {
                                        var inst_27070 = state_27077[2];
                                        var inst_27071 = cljs.core.async.close_BANG_.call(null, out);
                                        var state_27077__$1 = function() {
                                          var statearr_27095 = state_27077;
                                          statearr_27095[13] = inst_27070;
                                          return statearr_27095;
                                        }();
                                        var statearr_27096_27119 = state_27077__$1;
                                        statearr_27096_27119[2] = inst_27071;
                                        statearr_27096_27119[1] = 7;
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        if (state_val_27078 === 10) {
                                          var inst_27060 = state_27077[2];
                                          var state_27077__$1 = state_27077;
                                          var statearr_27097_27120 = state_27077__$1;
                                          statearr_27097_27120[2] = inst_27060;
                                          statearr_27097_27120[1] = 7;
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          if (state_val_27078 === 8) {
                                            var inst_27037 = state_27077[7];
                                            var inst_27045 = state_27077[10];
                                            var inst_27041 = state_27077[9];
                                            var inst_27050 = inst_27037.push(inst_27041);
                                            var tmp27094 = inst_27037;
                                            var inst_27037__$1 = tmp27094;
                                            var inst_27038 = inst_27045;
                                            var state_27077__$1 = function() {
                                              var statearr_27098 = state_27077;
                                              statearr_27098[14] = inst_27050;
                                              statearr_27098[7] = inst_27037__$1;
                                              statearr_27098[8] = inst_27038;
                                              return statearr_27098;
                                            }();
                                            var statearr_27099_27121 = state_27077__$1;
                                            statearr_27099_27121[2] = null;
                                            statearr_27099_27121[1] = 2;
                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                          } else {
                                            return null;
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            };
          }(c__10282__auto___27107, out);
          return function(switch__10226__auto__, c__10282__auto___27107, out) {
            return function() {
              var state_machine__10227__auto__ = null;
              var state_machine__10227__auto____0 = function() {
                var statearr_27103 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
                statearr_27103[0] = state_machine__10227__auto__;
                statearr_27103[1] = 1;
                return statearr_27103;
              };
              var state_machine__10227__auto____1 = function(state_27077) {
                while (true) {
                  var ret_value__10228__auto__ = function() {
                    try {
                      while (true) {
                        var result__10229__auto__ = switch__10226__auto__.call(null, state_27077);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__10229__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          continue;
                        } else {
                          return result__10229__auto__;
                        }
                        break;
                      }
                    } catch (e27104) {
                      if (e27104 instanceof Object) {
                        var ex__10230__auto__ = e27104;
                        var statearr_27105_27122 = state_27077;
                        statearr_27105_27122[5] = ex__10230__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_27077);
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        throw e27104;
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__10228__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                    var G__27123 = state_27077;
                    state_27077 = G__27123;
                    continue;
                  } else {
                    return ret_value__10228__auto__;
                  }
                  break;
                }
              };
              state_machine__10227__auto__ = function(state_27077) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__10227__auto____0.call(this);
                  case 1:
                    return state_machine__10227__auto____1.call(this, state_27077);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__10227__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__10227__auto____0;
              state_machine__10227__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__10227__auto____1;
              return state_machine__10227__auto__;
            }();
          }(switch__10226__auto__, c__10282__auto___27107, out);
        }();
        var state__10284__auto__ = function() {
          var statearr_27106 = f__10283__auto__.call(null);
          statearr_27106[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__10282__auto___27107;
          return statearr_27106;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__10284__auto__);
      };
    }(c__10282__auto___27107, out));
    return out;
  };
  partition_by = function(f, ch, buf_or_n) {
    switch(arguments.length) {
      case 2:
        return partition_by__2.call(this, f, ch);
      case 3:
        return partition_by__3.call(this, f, ch, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  partition_by.cljs$core$IFn$_invoke$arity$2 = partition_by__2;
  partition_by.cljs$core$IFn$_invoke$arity$3 = partition_by__3;
  return partition_by;
}();
goog.provide("quiescent");
goog.require("cljs.core");
quiescent.js_props = function js_props(obj) {
  if (cljs.core.map_QMARK_.call(null, obj)) {
    var o = function() {
      var obj31252 = {};
      return obj31252;
    }();
    var seq__31253_31259 = cljs.core.seq.call(null, obj);
    var chunk__31254_31260 = null;
    var count__31255_31261 = 0;
    var i__31256_31262 = 0;
    while (true) {
      if (i__31256_31262 < count__31255_31261) {
        var vec__31257_31263 = cljs.core._nth.call(null, chunk__31254_31260, i__31256_31262);
        var k_31264 = cljs.core.nth.call(null, vec__31257_31263, 0, null);
        var v_31265 = cljs.core.nth.call(null, vec__31257_31263, 1, null);
        o[cljs.core.name.call(null, k_31264)] = js_props.call(null, v_31265);
        var G__31266 = seq__31253_31259;
        var G__31267 = chunk__31254_31260;
        var G__31268 = count__31255_31261;
        var G__31269 = i__31256_31262 + 1;
        seq__31253_31259 = G__31266;
        chunk__31254_31260 = G__31267;
        count__31255_31261 = G__31268;
        i__31256_31262 = G__31269;
        continue;
      } else {
        var temp__4126__auto___31270 = cljs.core.seq.call(null, seq__31253_31259);
        if (temp__4126__auto___31270) {
          var seq__31253_31271__$1 = temp__4126__auto___31270;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__31253_31271__$1)) {
            var c__8291__auto___31272 = cljs.core.chunk_first.call(null, seq__31253_31271__$1);
            var G__31273 = cljs.core.chunk_rest.call(null, seq__31253_31271__$1);
            var G__31274 = c__8291__auto___31272;
            var G__31275 = cljs.core.count.call(null, c__8291__auto___31272);
            var G__31276 = 0;
            seq__31253_31259 = G__31273;
            chunk__31254_31260 = G__31274;
            count__31255_31261 = G__31275;
            i__31256_31262 = G__31276;
            continue;
          } else {
            var vec__31258_31277 = cljs.core.first.call(null, seq__31253_31271__$1);
            var k_31278 = cljs.core.nth.call(null, vec__31258_31277, 0, null);
            var v_31279 = cljs.core.nth.call(null, vec__31258_31277, 1, null);
            o[cljs.core.name.call(null, k_31278)] = js_props.call(null, v_31279);
            var G__31280 = cljs.core.next.call(null, seq__31253_31271__$1);
            var G__31281 = null;
            var G__31282 = 0;
            var G__31283 = 0;
            seq__31253_31259 = G__31280;
            chunk__31254_31260 = G__31281;
            count__31255_31261 = G__31282;
            i__31256_31262 = G__31283;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return o;
  } else {
    return obj;
  }
};
quiescent._STAR_component_STAR_ = null;
quiescent.component = function component(renderer) {
  var react_component = React.createClass({"render":function() {
    var this$ = this;
    var _STAR_component_STAR_31285 = quiescent._STAR_component_STAR_;
    quiescent._STAR_component_STAR_ = this$;
    try {
      return cljs.core.apply.call(null, renderer, this$.props["value"], this$.props["statics"]);
    } finally {
      quiescent._STAR_component_STAR_ = _STAR_component_STAR_31285;
    }
  }, "shouldComponentUpdate":function(next_props, _) {
    var this$ = this;
    return cljs.core.not_EQ_.call(null, this$.props["value"], next_props["value"]);
  }});
  return function(react_component) {
    return function() {
      var G__31286__delegate = function(value, static_args) {
        return react_component.call(null, {"statics":static_args, "value":value});
      };
      var G__31286 = function(value, var_args) {
        var static_args = null;
        if (arguments.length > 1) {
          var G__31287__i = 0, G__31287__a = new Array(arguments.length - 1);
          while (G__31287__i < G__31287__a.length) {
            G__31287__a[G__31287__i] = arguments[G__31287__i + 1];
            ++G__31287__i;
          }
          static_args = new cljs.core.IndexedSeq(G__31287__a, 0);
        }
        return G__31286__delegate.call(this, value, static_args);
      };
      G__31286.cljs$lang$maxFixedArity = 1;
      G__31286.cljs$lang$applyTo = function(arglist__31288) {
        var value = cljs.core.first(arglist__31288);
        var static_args = cljs.core.rest(arglist__31288);
        return G__31286__delegate(value, static_args);
      };
      G__31286.cljs$core$IFn$_invoke$arity$variadic = G__31286__delegate;
      return G__31286;
    }();
  }(react_component);
};
quiescent.WrapperComponent = React.createClass({"componentWillUnmount":function() {
  var this$ = this;
  var temp__4126__auto__ = this$.props["onWillUnmount"];
  if (cljs.core.truth_(temp__4126__auto__)) {
    var f = temp__4126__auto__;
    var _STAR_component_STAR_31293 = quiescent._STAR_component_STAR_;
    quiescent._STAR_component_STAR_ = this$;
    try {
      return f.call(null);
    } finally {
      quiescent._STAR_component_STAR_ = _STAR_component_STAR_31293;
    }
  } else {
    return null;
  }
}, "componentWillUpdate":function(_, ___$1) {
  var this$ = this;
  var temp__4126__auto__ = this$.props["onWillUpdate"];
  if (cljs.core.truth_(temp__4126__auto__)) {
    var f = temp__4126__auto__;
    var _STAR_component_STAR_31292 = quiescent._STAR_component_STAR_;
    quiescent._STAR_component_STAR_ = this$;
    try {
      return f.call(null);
    } finally {
      quiescent._STAR_component_STAR_ = _STAR_component_STAR_31292;
    }
  } else {
    return null;
  }
}, "componentWillMount":function() {
  var this$ = this;
  var temp__4126__auto__ = this$.props["onWillMount"];
  if (cljs.core.truth_(temp__4126__auto__)) {
    var f = temp__4126__auto__;
    var _STAR_component_STAR_31291 = quiescent._STAR_component_STAR_;
    quiescent._STAR_component_STAR_ = this$;
    try {
      return f.call(null);
    } finally {
      quiescent._STAR_component_STAR_ = _STAR_component_STAR_31291;
    }
  } else {
    return null;
  }
}, "componentDidMount":function() {
  var this$ = this;
  var temp__4126__auto__ = this$.props["onMount"];
  if (cljs.core.truth_(temp__4126__auto__)) {
    var f = temp__4126__auto__;
    var _STAR_component_STAR_31290 = quiescent._STAR_component_STAR_;
    quiescent._STAR_component_STAR_ = this$;
    try {
      return f.call(null, this$.getDOMNode());
    } finally {
      quiescent._STAR_component_STAR_ = _STAR_component_STAR_31290;
    }
  } else {
    return null;
  }
}, "componentDidUpdate":function(prev_props, prev_state) {
  var this$ = this;
  var temp__4126__auto__ = this$.props["onUpdate"];
  if (cljs.core.truth_(temp__4126__auto__)) {
    var f = temp__4126__auto__;
    var _STAR_component_STAR_31289 = quiescent._STAR_component_STAR_;
    quiescent._STAR_component_STAR_ = this$;
    try {
      return f.call(null, this$.getDOMNode());
    } finally {
      quiescent._STAR_component_STAR_ = _STAR_component_STAR_31289;
    }
  } else {
    return null;
  }
}, "render":function() {
  var this$ = this;
  return this$.props["wrappee"];
}});
quiescent.wrapper = function() {
  var wrapper__delegate = function(child, kvs) {
    var props = quiescent.js_props.call(null, cljs.core.apply.call(null, cljs.core.array_map, new cljs.core.Keyword(null, "wrappee", "wrappee", 876822573), child, kvs));
    var temp__4126__auto___31294 = child.props["key"];
    if (cljs.core.truth_(temp__4126__auto___31294)) {
      var key_31295 = temp__4126__auto___31294;
      props["key"] = key_31295;
    } else {
    }
    return quiescent.WrapperComponent.call(null, props);
  };
  var wrapper = function(child, var_args) {
    var kvs = null;
    if (arguments.length > 1) {
      var G__31296__i = 0, G__31296__a = new Array(arguments.length - 1);
      while (G__31296__i < G__31296__a.length) {
        G__31296__a[G__31296__i] = arguments[G__31296__i + 1];
        ++G__31296__i;
      }
      kvs = new cljs.core.IndexedSeq(G__31296__a, 0);
    }
    return wrapper__delegate.call(this, child, kvs);
  };
  wrapper.cljs$lang$maxFixedArity = 1;
  wrapper.cljs$lang$applyTo = function(arglist__31297) {
    var child = cljs.core.first(arglist__31297);
    var kvs = cljs.core.rest(arglist__31297);
    return wrapper__delegate(child, kvs);
  };
  wrapper.cljs$core$IFn$_invoke$arity$variadic = wrapper__delegate;
  return wrapper;
}();
quiescent.on_update = function on_update(child, f) {
  return quiescent.wrapper.call(null, child, new cljs.core.Keyword(null, "onUpdate", "onUpdate", -315358968), f);
};
quiescent.on_mount = function on_mount(child, f) {
  return quiescent.wrapper.call(null, child, new cljs.core.Keyword(null, "onMount", "onMount", -876858467), f);
};
quiescent.on_render = function on_render(child, f) {
  return quiescent.wrapper.call(null, child, new cljs.core.Keyword(null, "onMount", "onMount", -876858467), f, new cljs.core.Keyword(null, "onUpdate", "onUpdate", -315358968), f);
};
quiescent.on_will_mount = function on_will_mount(child, f) {
  return quiescent.wrapper.call(null, child, new cljs.core.Keyword(null, "onWillMount", "onWillMount", -2065876946), f);
};
quiescent.on_will_update = function on_will_update(child, f) {
  return quiescent.wrapper.call(null, child, new cljs.core.Keyword(null, "onWillUpdate", "onWillUpdate", 1307659073), f);
};
quiescent.on_will_render = function on_will_render(child, f) {
  return quiescent.wrapper.call(null, child, new cljs.core.Keyword(null, "onWillMount", "onWillMount", -2065876946), f, new cljs.core.Keyword(null, "onWillUpdate", "onWillUpdate", 1307659073), f);
};
quiescent.on_will_unmount = function on_will_unmount(child, f) {
  return quiescent.wrapper.call(null, child, new cljs.core.Keyword(null, "onWillUnmount", "onWillUnmount", -16104606), f);
};
quiescent.render = function render(component, node) {
  return React.renderComponent(component, node);
};
goog.provide("quiescent.dom");
goog.require("cljs.core");
goog.require("quiescent");
quiescent.dom.a = function() {
  var a__delegate = function(args__13069__auto__) {
    var a__13070__auto__ = [];
    a__13070__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__13069__auto__)));
    var seq__27526_28474 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__13069__auto__));
    var chunk__27527_28475 = null;
    var count__27528_28476 = 0;
    var i__27529_28477 = 0;
    while (true) {
      if (i__27529_28477 < count__27528_28476) {
        var arg__13071__auto___28478 = cljs.core._nth.call(null, chunk__27527_28475, i__27529_28477);
        a__13070__auto__.push(arg__13071__auto___28478);
        var G__28479 = seq__27526_28474;
        var G__28480 = chunk__27527_28475;
        var G__28481 = count__27528_28476;
        var G__28482 = i__27529_28477 + 1;
        seq__27526_28474 = G__28479;
        chunk__27527_28475 = G__28480;
        count__27528_28476 = G__28481;
        i__27529_28477 = G__28482;
        continue;
      } else {
        var temp__4126__auto___28483 = cljs.core.seq.call(null, seq__27526_28474);
        if (temp__4126__auto___28483) {
          var seq__27526_28484__$1 = temp__4126__auto___28483;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__27526_28484__$1)) {
            var c__8291__auto___28485 = cljs.core.chunk_first.call(null, seq__27526_28484__$1);
            var G__28486 = cljs.core.chunk_rest.call(null, seq__27526_28484__$1);
            var G__28487 = c__8291__auto___28485;
            var G__28488 = cljs.core.count.call(null, c__8291__auto___28485);
            var G__28489 = 0;
            seq__27526_28474 = G__28486;
            chunk__27527_28475 = G__28487;
            count__27528_28476 = G__28488;
            i__27529_28477 = G__28489;
            continue;
          } else {
            var arg__13071__auto___28490 = cljs.core.first.call(null, seq__27526_28484__$1);
            a__13070__auto__.push(arg__13071__auto___28490);
            var G__28491 = cljs.core.next.call(null, seq__27526_28484__$1);
            var G__28492 = null;
            var G__28493 = 0;
            var G__28494 = 0;
            seq__27526_28474 = G__28491;
            chunk__27527_28475 = G__28492;
            count__27528_28476 = G__28493;
            i__27529_28477 = G__28494;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.a.apply(null, a__13070__auto__);
  };
  var a = function(var_args) {
    var args__13069__auto__ = null;
    if (arguments.length > 0) {
      var G__28495__i = 0, G__28495__a = new Array(arguments.length - 0);
      while (G__28495__i < G__28495__a.length) {
        G__28495__a[G__28495__i] = arguments[G__28495__i + 0];
        ++G__28495__i;
      }
      args__13069__auto__ = new cljs.core.IndexedSeq(G__28495__a, 0);
    }
    return a__delegate.call(this, args__13069__auto__);
  };
  a.cljs$lang$maxFixedArity = 0;
  a.cljs$lang$applyTo = function(arglist__28496) {
    var args__13069__auto__ = cljs.core.seq(arglist__28496);
    return a__delegate(args__13069__auto__);
  };
  a.cljs$core$IFn$_invoke$arity$variadic = a__delegate;
  return a;
}();
quiescent.dom.abbr = function() {
  var abbr__delegate = function(args__13069__auto__) {
    var a__13070__auto__ = [];
    a__13070__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__13069__auto__)));
    var seq__27534_28497 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__13069__auto__));
    var chunk__27535_28498 = null;
    var count__27536_28499 = 0;
    var i__27537_28500 = 0;
    while (true) {
      if (i__27537_28500 < count__27536_28499) {
        var arg__13071__auto___28501 = cljs.core._nth.call(null, chunk__27535_28498, i__27537_28500);
        a__13070__auto__.push(arg__13071__auto___28501);
        var G__28502 = seq__27534_28497;
        var G__28503 = chunk__27535_28498;
        var G__28504 = count__27536_28499;
        var G__28505 = i__27537_28500 + 1;
        seq__27534_28497 = G__28502;
        chunk__27535_28498 = G__28503;
        count__27536_28499 = G__28504;
        i__27537_28500 = G__28505;
        continue;
      } else {
        var temp__4126__auto___28506 = cljs.core.seq.call(null, seq__27534_28497);
        if (temp__4126__auto___28506) {
          var seq__27534_28507__$1 = temp__4126__auto___28506;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__27534_28507__$1)) {
            var c__8291__auto___28508 = cljs.core.chunk_first.call(null, seq__27534_28507__$1);
            var G__28509 = cljs.core.chunk_rest.call(null, seq__27534_28507__$1);
            var G__28510 = c__8291__auto___28508;
            var G__28511 = cljs.core.count.call(null, c__8291__auto___28508);
            var G__28512 = 0;
            seq__27534_28497 = G__28509;
            chunk__27535_28498 = G__28510;
            count__27536_28499 = G__28511;
            i__27537_28500 = G__28512;
            continue;
          } else {
            var arg__13071__auto___28513 = cljs.core.first.call(null, seq__27534_28507__$1);
            a__13070__auto__.push(arg__13071__auto___28513);
            var G__28514 = cljs.core.next.call(null, seq__27534_28507__$1);
            var G__28515 = null;
            var G__28516 = 0;
            var G__28517 = 0;
            seq__27534_28497 = G__28514;
            chunk__27535_28498 = G__28515;
            count__27536_28499 = G__28516;
            i__27537_28500 = G__28517;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.abbr.apply(null, a__13070__auto__);
  };
  var abbr = function(var_args) {
    var args__13069__auto__ = null;
    if (arguments.length > 0) {
      var G__28518__i = 0, G__28518__a = new Array(arguments.length - 0);
      while (G__28518__i < G__28518__a.length) {
        G__28518__a[G__28518__i] = arguments[G__28518__i + 0];
        ++G__28518__i;
      }
      args__13069__auto__ = new cljs.core.IndexedSeq(G__28518__a, 0);
    }
    return abbr__delegate.call(this, args__13069__auto__);
  };
  abbr.cljs$lang$maxFixedArity = 0;
  abbr.cljs$lang$applyTo = function(arglist__28519) {
    var args__13069__auto__ = cljs.core.seq(arglist__28519);
    return abbr__delegate(args__13069__auto__);
  };
  abbr.cljs$core$IFn$_invoke$arity$variadic = abbr__delegate;
  return abbr;
}();
quiescent.dom.address = function() {
  var address__delegate = function(args__13069__auto__) {
    var a__13070__auto__ = [];
    a__13070__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__13069__auto__)));
    var seq__27542_28520 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__13069__auto__));
    var chunk__27543_28521 = null;
    var count__27544_28522 = 0;
    var i__27545_28523 = 0;
    while (true) {
      if (i__27545_28523 < count__27544_28522) {
        var arg__13071__auto___28524 = cljs.core._nth.call(null, chunk__27543_28521, i__27545_28523);
        a__13070__auto__.push(arg__13071__auto___28524);
        var G__28525 = seq__27542_28520;
        var G__28526 = chunk__27543_28521;
        var G__28527 = count__27544_28522;
        var G__28528 = i__27545_28523 + 1;
        seq__27542_28520 = G__28525;
        chunk__27543_28521 = G__28526;
        count__27544_28522 = G__28527;
        i__27545_28523 = G__28528;
        continue;
      } else {
        var temp__4126__auto___28529 = cljs.core.seq.call(null, seq__27542_28520);
        if (temp__4126__auto___28529) {
          var seq__27542_28530__$1 = temp__4126__auto___28529;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__27542_28530__$1)) {
            var c__8291__auto___28531 = cljs.core.chunk_first.call(null, seq__27542_28530__$1);
            var G__28532 = cljs.core.chunk_rest.call(null, seq__27542_28530__$1);
            var G__28533 = c__8291__auto___28531;
            var G__28534 = cljs.core.count.call(null, c__8291__auto___28531);
            var G__28535 = 0;
            seq__27542_28520 = G__28532;
            chunk__27543_28521 = G__28533;
            count__27544_28522 = G__28534;
            i__27545_28523 = G__28535;
            continue;
          } else {
            var arg__13071__auto___28536 = cljs.core.first.call(null, seq__27542_28530__$1);
            a__13070__auto__.push(arg__13071__auto___28536);
            var G__28537 = cljs.core.next.call(null, seq__27542_28530__$1);
            var G__28538 = null;
            var G__28539 = 0;
            var G__28540 = 0;
            seq__27542_28520 = G__28537;
            chunk__27543_28521 = G__28538;
            count__27544_28522 = G__28539;
            i__27545_28523 = G__28540;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.address.apply(null, a__13070__auto__);
  };
  var address = function(var_args) {
    var args__13069__auto__ = null;
    if (arguments.length > 0) {
      var G__28541__i = 0, G__28541__a = new Array(arguments.length - 0);
      while (G__28541__i < G__28541__a.length) {
        G__28541__a[G__28541__i] = arguments[G__28541__i + 0];
        ++G__28541__i;
      }
      args__13069__auto__ = new cljs.core.IndexedSeq(G__28541__a, 0);
    }
    return address__delegate.call(this, args__13069__auto__);
  };
  address.cljs$lang$maxFixedArity = 0;
  address.cljs$lang$applyTo = function(arglist__28542) {
    var args__13069__auto__ = cljs.core.seq(arglist__28542);
    return address__delegate(args__13069__auto__);
  };
  address.cljs$core$IFn$_invoke$arity$variadic = address__delegate;
  return address;
}();
quiescent.dom.area = function() {
  var area__delegate = function(args__13069__auto__) {
    var a__13070__auto__ = [];
    a__13070__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__13069__auto__)));
    var seq__27550_28543 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__13069__auto__));
    var chunk__27551_28544 = null;
    var count__27552_28545 = 0;
    var i__27553_28546 = 0;
    while (true) {
      if (i__27553_28546 < count__27552_28545) {
        var arg__13071__auto___28547 = cljs.core._nth.call(null, chunk__27551_28544, i__27553_28546);
        a__13070__auto__.push(arg__13071__auto___28547);
        var G__28548 = seq__27550_28543;
        var G__28549 = chunk__27551_28544;
        var G__28550 = count__27552_28545;
        var G__28551 = i__27553_28546 + 1;
        seq__27550_28543 = G__28548;
        chunk__27551_28544 = G__28549;
        count__27552_28545 = G__28550;
        i__27553_28546 = G__28551;
        continue;
      } else {
        var temp__4126__auto___28552 = cljs.core.seq.call(null, seq__27550_28543);
        if (temp__4126__auto___28552) {
          var seq__27550_28553__$1 = temp__4126__auto___28552;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__27550_28553__$1)) {
            var c__8291__auto___28554 = cljs.core.chunk_first.call(null, seq__27550_28553__$1);
            var G__28555 = cljs.core.chunk_rest.call(null, seq__27550_28553__$1);
            var G__28556 = c__8291__auto___28554;
            var G__28557 = cljs.core.count.call(null, c__8291__auto___28554);
            var G__28558 = 0;
            seq__27550_28543 = G__28555;
            chunk__27551_28544 = G__28556;
            count__27552_28545 = G__28557;
            i__27553_28546 = G__28558;
            continue;
          } else {
            var arg__13071__auto___28559 = cljs.core.first.call(null, seq__27550_28553__$1);
            a__13070__auto__.push(arg__13071__auto___28559);
            var G__28560 = cljs.core.next.call(null, seq__27550_28553__$1);
            var G__28561 = null;
            var G__28562 = 0;
            var G__28563 = 0;
            seq__27550_28543 = G__28560;
            chunk__27551_28544 = G__28561;
            count__27552_28545 = G__28562;
            i__27553_28546 = G__28563;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.area.apply(null, a__13070__auto__);
  };
  var area = function(var_args) {
    var args__13069__auto__ = null;
    if (arguments.length > 0) {
      var G__28564__i = 0, G__28564__a = new Array(arguments.length - 0);
      while (G__28564__i < G__28564__a.length) {
        G__28564__a[G__28564__i] = arguments[G__28564__i + 0];
        ++G__28564__i;
      }
      args__13069__auto__ = new cljs.core.IndexedSeq(G__28564__a, 0);
    }
    return area__delegate.call(this, args__13069__auto__);
  };
  area.cljs$lang$maxFixedArity = 0;
  area.cljs$lang$applyTo = function(arglist__28565) {
    var args__13069__auto__ = cljs.core.seq(arglist__28565);
    return area__delegate(args__13069__auto__);
  };
  area.cljs$core$IFn$_invoke$arity$variadic = area__delegate;
  return area;
}();
quiescent.dom.article = function() {
  var article__delegate = function(args__13069__auto__) {
    var a__13070__auto__ = [];
    a__13070__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__13069__auto__)));
    var seq__27558_28566 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__13069__auto__));
    var chunk__27559_28567 = null;
    var count__27560_28568 = 0;
    var i__27561_28569 = 0;
    while (true) {
      if (i__27561_28569 < count__27560_28568) {
        var arg__13071__auto___28570 = cljs.core._nth.call(null, chunk__27559_28567, i__27561_28569);
        a__13070__auto__.push(arg__13071__auto___28570);
        var G__28571 = seq__27558_28566;
        var G__28572 = chunk__27559_28567;
        var G__28573 = count__27560_28568;
        var G__28574 = i__27561_28569 + 1;
        seq__27558_28566 = G__28571;
        chunk__27559_28567 = G__28572;
        count__27560_28568 = G__28573;
        i__27561_28569 = G__28574;
        continue;
      } else {
        var temp__4126__auto___28575 = cljs.core.seq.call(null, seq__27558_28566);
        if (temp__4126__auto___28575) {
          var seq__27558_28576__$1 = temp__4126__auto___28575;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__27558_28576__$1)) {
            var c__8291__auto___28577 = cljs.core.chunk_first.call(null, seq__27558_28576__$1);
            var G__28578 = cljs.core.chunk_rest.call(null, seq__27558_28576__$1);
            var G__28579 = c__8291__auto___28577;
            var G__28580 = cljs.core.count.call(null, c__8291__auto___28577);
            var G__28581 = 0;
            seq__27558_28566 = G__28578;
            chunk__27559_28567 = G__28579;
            count__27560_28568 = G__28580;
            i__27561_28569 = G__28581;
            continue;
          } else {
            var arg__13071__auto___28582 = cljs.core.first.call(null, seq__27558_28576__$1);
            a__13070__auto__.push(arg__13071__auto___28582);
            var G__28583 = cljs.core.next.call(null, seq__27558_28576__$1);
            var G__28584 = null;
            var G__28585 = 0;
            var G__28586 = 0;
            seq__27558_28566 = G__28583;
            chunk__27559_28567 = G__28584;
            count__27560_28568 = G__28585;
            i__27561_28569 = G__28586;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.article.apply(null, a__13070__auto__);
  };
  var article = function(var_args) {
    var args__13069__auto__ = null;
    if (arguments.length > 0) {
      var G__28587__i = 0, G__28587__a = new Array(arguments.length - 0);
      while (G__28587__i < G__28587__a.length) {
        G__28587__a[G__28587__i] = arguments[G__28587__i + 0];
        ++G__28587__i;
      }
      args__13069__auto__ = new cljs.core.IndexedSeq(G__28587__a, 0);
    }
    return article__delegate.call(this, args__13069__auto__);
  };
  article.cljs$lang$maxFixedArity = 0;
  article.cljs$lang$applyTo = function(arglist__28588) {
    var args__13069__auto__ = cljs.core.seq(arglist__28588);
    return article__delegate(args__13069__auto__);
  };
  article.cljs$core$IFn$_invoke$arity$variadic = article__delegate;
  return article;
}();
quiescent.dom.aside = function() {
  var aside__delegate = function(args__13069__auto__) {
    var a__13070__auto__ = [];
    a__13070__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__13069__auto__)));
    var seq__27566_28589 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__13069__auto__));
    var chunk__27567_28590 = null;
    var count__27568_28591 = 0;
    var i__27569_28592 = 0;
    while (true) {
      if (i__27569_28592 < count__27568_28591) {
        var arg__13071__auto___28593 = cljs.core._nth.call(null, chunk__27567_28590, i__27569_28592);
        a__13070__auto__.push(arg__13071__auto___28593);
        var G__28594 = seq__27566_28589;
        var G__28595 = chunk__27567_28590;
        var G__28596 = count__27568_28591;
        var G__28597 = i__27569_28592 + 1;
        seq__27566_28589 = G__28594;
        chunk__27567_28590 = G__28595;
        count__27568_28591 = G__28596;
        i__27569_28592 = G__28597;
        continue;
      } else {
        var temp__4126__auto___28598 = cljs.core.seq.call(null, seq__27566_28589);
        if (temp__4126__auto___28598) {
          var seq__27566_28599__$1 = temp__4126__auto___28598;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__27566_28599__$1)) {
            var c__8291__auto___28600 = cljs.core.chunk_first.call(null, seq__27566_28599__$1);
            var G__28601 = cljs.core.chunk_rest.call(null, seq__27566_28599__$1);
            var G__28602 = c__8291__auto___28600;
            var G__28603 = cljs.core.count.call(null, c__8291__auto___28600);
            var G__28604 = 0;
            seq__27566_28589 = G__28601;
            chunk__27567_28590 = G__28602;
            count__27568_28591 = G__28603;
            i__27569_28592 = G__28604;
            continue;
          } else {
            var arg__13071__auto___28605 = cljs.core.first.call(null, seq__27566_28599__$1);
            a__13070__auto__.push(arg__13071__auto___28605);
            var G__28606 = cljs.core.next.call(null, seq__27566_28599__$1);
            var G__28607 = null;
            var G__28608 = 0;
            var G__28609 = 0;
            seq__27566_28589 = G__28606;
            chunk__27567_28590 = G__28607;
            count__27568_28591 = G__28608;
            i__27569_28592 = G__28609;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.aside.apply(null, a__13070__auto__);
  };
  var aside = function(var_args) {
    var args__13069__auto__ = null;
    if (arguments.length > 0) {
      var G__28610__i = 0, G__28610__a = new Array(arguments.length - 0);
      while (G__28610__i < G__28610__a.length) {
        G__28610__a[G__28610__i] = arguments[G__28610__i + 0];
        ++G__28610__i;
      }
      args__13069__auto__ = new cljs.core.IndexedSeq(G__28610__a, 0);
    }
    return aside__delegate.call(this, args__13069__auto__);
  };
  aside.cljs$lang$maxFixedArity = 0;
  aside.cljs$lang$applyTo = function(arglist__28611) {
    var args__13069__auto__ = cljs.core.seq(arglist__28611);
    return aside__delegate(args__13069__auto__);
  };
  aside.cljs$core$IFn$_invoke$arity$variadic = aside__delegate;
  return aside;
}();
quiescent.dom.audio = function() {
  var audio__delegate = function(args__13069__auto__) {
    var a__13070__auto__ = [];
    a__13070__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__13069__auto__)));
    var seq__27574_28612 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__13069__auto__));
    var chunk__27575_28613 = null;
    var count__27576_28614 = 0;
    var i__27577_28615 = 0;
    while (true) {
      if (i__27577_28615 < count__27576_28614) {
        var arg__13071__auto___28616 = cljs.core._nth.call(null, chunk__27575_28613, i__27577_28615);
        a__13070__auto__.push(arg__13071__auto___28616);
        var G__28617 = seq__27574_28612;
        var G__28618 = chunk__27575_28613;
        var G__28619 = count__27576_28614;
        var G__28620 = i__27577_28615 + 1;
        seq__27574_28612 = G__28617;
        chunk__27575_28613 = G__28618;
        count__27576_28614 = G__28619;
        i__27577_28615 = G__28620;
        continue;
      } else {
        var temp__4126__auto___28621 = cljs.core.seq.call(null, seq__27574_28612);
        if (temp__4126__auto___28621) {
          var seq__27574_28622__$1 = temp__4126__auto___28621;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__27574_28622__$1)) {
            var c__8291__auto___28623 = cljs.core.chunk_first.call(null, seq__27574_28622__$1);
            var G__28624 = cljs.core.chunk_rest.call(null, seq__27574_28622__$1);
            var G__28625 = c__8291__auto___28623;
            var G__28626 = cljs.core.count.call(null, c__8291__auto___28623);
            var G__28627 = 0;
            seq__27574_28612 = G__28624;
            chunk__27575_28613 = G__28625;
            count__27576_28614 = G__28626;
            i__27577_28615 = G__28627;
            continue;
          } else {
            var arg__13071__auto___28628 = cljs.core.first.call(null, seq__27574_28622__$1);
            a__13070__auto__.push(arg__13071__auto___28628);
            var G__28629 = cljs.core.next.call(null, seq__27574_28622__$1);
            var G__28630 = null;
            var G__28631 = 0;
            var G__28632 = 0;
            seq__27574_28612 = G__28629;
            chunk__27575_28613 = G__28630;
            count__27576_28614 = G__28631;
            i__27577_28615 = G__28632;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.audio.apply(null, a__13070__auto__);
  };
  var audio = function(var_args) {
    var args__13069__auto__ = null;
    if (arguments.length > 0) {
      var G__28633__i = 0, G__28633__a = new Array(arguments.length - 0);
      while (G__28633__i < G__28633__a.length) {
        G__28633__a[G__28633__i] = arguments[G__28633__i + 0];
        ++G__28633__i;
      }
      args__13069__auto__ = new cljs.core.IndexedSeq(G__28633__a, 0);
    }
    return audio__delegate.call(this, args__13069__auto__);
  };
  audio.cljs$lang$maxFixedArity = 0;
  audio.cljs$lang$applyTo = function(arglist__28634) {
    var args__13069__auto__ = cljs.core.seq(arglist__28634);
    return audio__delegate(args__13069__auto__);
  };
  audio.cljs$core$IFn$_invoke$arity$variadic = audio__delegate;
  return audio;
}();
quiescent.dom.b = function() {
  var b__delegate = function(args__13069__auto__) {
    var a__13070__auto__ = [];
    a__13070__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__13069__auto__)));
    var seq__27582_28635 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__13069__auto__));
    var chunk__27583_28636 = null;
    var count__27584_28637 = 0;
    var i__27585_28638 = 0;
    while (true) {
      if (i__27585_28638 < count__27584_28637) {
        var arg__13071__auto___28639 = cljs.core._nth.call(null, chunk__27583_28636, i__27585_28638);
        a__13070__auto__.push(arg__13071__auto___28639);
        var G__28640 = seq__27582_28635;
        var G__28641 = chunk__27583_28636;
        var G__28642 = count__27584_28637;
        var G__28643 = i__27585_28638 + 1;
        seq__27582_28635 = G__28640;
        chunk__27583_28636 = G__28641;
        count__27584_28637 = G__28642;
        i__27585_28638 = G__28643;
        continue;
      } else {
        var temp__4126__auto___28644 = cljs.core.seq.call(null, seq__27582_28635);
        if (temp__4126__auto___28644) {
          var seq__27582_28645__$1 = temp__4126__auto___28644;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__27582_28645__$1)) {
            var c__8291__auto___28646 = cljs.core.chunk_first.call(null, seq__27582_28645__$1);
            var G__28647 = cljs.core.chunk_rest.call(null, seq__27582_28645__$1);
            var G__28648 = c__8291__auto___28646;
            var G__28649 = cljs.core.count.call(null, c__8291__auto___28646);
            var G__28650 = 0;
            seq__27582_28635 = G__28647;
            chunk__27583_28636 = G__28648;
            count__27584_28637 = G__28649;
            i__27585_28638 = G__28650;
            continue;
          } else {
            var arg__13071__auto___28651 = cljs.core.first.call(null, seq__27582_28645__$1);
            a__13070__auto__.push(arg__13071__auto___28651);
            var G__28652 = cljs.core.next.call(null, seq__27582_28645__$1);
            var G__28653 = null;
            var G__28654 = 0;
            var G__28655 = 0;
            seq__27582_28635 = G__28652;
            chunk__27583_28636 = G__28653;
            count__27584_28637 = G__28654;
            i__27585_28638 = G__28655;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.b.apply(null, a__13070__auto__);
  };
  var b = function(var_args) {
    var args__13069__auto__ = null;
    if (arguments.length > 0) {
      var G__28656__i = 0, G__28656__a = new Array(arguments.length - 0);
      while (G__28656__i < G__28656__a.length) {
        G__28656__a[G__28656__i] = arguments[G__28656__i + 0];
        ++G__28656__i;
      }
      args__13069__auto__ = new cljs.core.IndexedSeq(G__28656__a, 0);
    }
    return b__delegate.call(this, args__13069__auto__);
  };
  b.cljs$lang$maxFixedArity = 0;
  b.cljs$lang$applyTo = function(arglist__28657) {
    var args__13069__auto__ = cljs.core.seq(arglist__28657);
    return b__delegate(args__13069__auto__);
  };
  b.cljs$core$IFn$_invoke$arity$variadic = b__delegate;
  return b;
}();
quiescent.dom.base = function() {
  var base__delegate = function(args__13069__auto__) {
    var a__13070__auto__ = [];
    a__13070__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__13069__auto__)));
    var seq__27590_28658 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__13069__auto__));
    var chunk__27591_28659 = null;
    var count__27592_28660 = 0;
    var i__27593_28661 = 0;
    while (true) {
      if (i__27593_28661 < count__27592_28660) {
        var arg__13071__auto___28662 = cljs.core._nth.call(null, chunk__27591_28659, i__27593_28661);
        a__13070__auto__.push(arg__13071__auto___28662);
        var G__28663 = seq__27590_28658;
        var G__28664 = chunk__27591_28659;
        var G__28665 = count__27592_28660;
        var G__28666 = i__27593_28661 + 1;
        seq__27590_28658 = G__28663;
        chunk__27591_28659 = G__28664;
        count__27592_28660 = G__28665;
        i__27593_28661 = G__28666;
        continue;
      } else {
        var temp__4126__auto___28667 = cljs.core.seq.call(null, seq__27590_28658);
        if (temp__4126__auto___28667) {
          var seq__27590_28668__$1 = temp__4126__auto___28667;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__27590_28668__$1)) {
            var c__8291__auto___28669 = cljs.core.chunk_first.call(null, seq__27590_28668__$1);
            var G__28670 = cljs.core.chunk_rest.call(null, seq__27590_28668__$1);
            var G__28671 = c__8291__auto___28669;
            var G__28672 = cljs.core.count.call(null, c__8291__auto___28669);
            var G__28673 = 0;
            seq__27590_28658 = G__28670;
            chunk__27591_28659 = G__28671;
            count__27592_28660 = G__28672;
            i__27593_28661 = G__28673;
            continue;
          } else {
            var arg__13071__auto___28674 = cljs.core.first.call(null, seq__27590_28668__$1);
            a__13070__auto__.push(arg__13071__auto___28674);
            var G__28675 = cljs.core.next.call(null, seq__27590_28668__$1);
            var G__28676 = null;
            var G__28677 = 0;
            var G__28678 = 0;
            seq__27590_28658 = G__28675;
            chunk__27591_28659 = G__28676;
            count__27592_28660 = G__28677;
            i__27593_28661 = G__28678;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.base.apply(null, a__13070__auto__);
  };
  var base = function(var_args) {
    var args__13069__auto__ = null;
    if (arguments.length > 0) {
      var G__28679__i = 0, G__28679__a = new Array(arguments.length - 0);
      while (G__28679__i < G__28679__a.length) {
        G__28679__a[G__28679__i] = arguments[G__28679__i + 0];
        ++G__28679__i;
      }
      args__13069__auto__ = new cljs.core.IndexedSeq(G__28679__a, 0);
    }
    return base__delegate.call(this, args__13069__auto__);
  };
  base.cljs$lang$maxFixedArity = 0;
  base.cljs$lang$applyTo = function(arglist__28680) {
    var args__13069__auto__ = cljs.core.seq(arglist__28680);
    return base__delegate(args__13069__auto__);
  };
  base.cljs$core$IFn$_invoke$arity$variadic = base__delegate;
  return base;
}();
quiescent.dom.bdi = function() {
  var bdi__delegate = function(args__13069__auto__) {
    var a__13070__auto__ = [];
    a__13070__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__13069__auto__)));
    var seq__27598_28681 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__13069__auto__));
    var chunk__27599_28682 = null;
    var count__27600_28683 = 0;
    var i__27601_28684 = 0;
    while (true) {
      if (i__27601_28684 < count__27600_28683) {
        var arg__13071__auto___28685 = cljs.core._nth.call(null, chunk__27599_28682, i__27601_28684);
        a__13070__auto__.push(arg__13071__auto___28685);
        var G__28686 = seq__27598_28681;
        var G__28687 = chunk__27599_28682;
        var G__28688 = count__27600_28683;
        var G__28689 = i__27601_28684 + 1;
        seq__27598_28681 = G__28686;
        chunk__27599_28682 = G__28687;
        count__27600_28683 = G__28688;
        i__27601_28684 = G__28689;
        continue;
      } else {
        var temp__4126__auto___28690 = cljs.core.seq.call(null, seq__27598_28681);
        if (temp__4126__auto___28690) {
          var seq__27598_28691__$1 = temp__4126__auto___28690;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__27598_28691__$1)) {
            var c__8291__auto___28692 = cljs.core.chunk_first.call(null, seq__27598_28691__$1);
            var G__28693 = cljs.core.chunk_rest.call(null, seq__27598_28691__$1);
            var G__28694 = c__8291__auto___28692;
            var G__28695 = cljs.core.count.call(null, c__8291__auto___28692);
            var G__28696 = 0;
            seq__27598_28681 = G__28693;
            chunk__27599_28682 = G__28694;
            count__27600_28683 = G__28695;
            i__27601_28684 = G__28696;
            continue;
          } else {
            var arg__13071__auto___28697 = cljs.core.first.call(null, seq__27598_28691__$1);
            a__13070__auto__.push(arg__13071__auto___28697);
            var G__28698 = cljs.core.next.call(null, seq__27598_28691__$1);
            var G__28699 = null;
            var G__28700 = 0;
            var G__28701 = 0;
            seq__27598_28681 = G__28698;
            chunk__27599_28682 = G__28699;
            count__27600_28683 = G__28700;
            i__27601_28684 = G__28701;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.bdi.apply(null, a__13070__auto__);
  };
  var bdi = function(var_args) {
    var args__13069__auto__ = null;
    if (arguments.length > 0) {
      var G__28702__i = 0, G__28702__a = new Array(arguments.length - 0);
      while (G__28702__i < G__28702__a.length) {
        G__28702__a[G__28702__i] = arguments[G__28702__i + 0];
        ++G__28702__i;
      }
      args__13069__auto__ = new cljs.core.IndexedSeq(G__28702__a, 0);
    }
    return bdi__delegate.call(this, args__13069__auto__);
  };
  bdi.cljs$lang$maxFixedArity = 0;
  bdi.cljs$lang$applyTo = function(arglist__28703) {
    var args__13069__auto__ = cljs.core.seq(arglist__28703);
    return bdi__delegate(args__13069__auto__);
  };
  bdi.cljs$core$IFn$_invoke$arity$variadic = bdi__delegate;
  return bdi;
}();
quiescent.dom.bdo = function() {
  var bdo__delegate = function(args__13069__auto__) {
    var a__13070__auto__ = [];
    a__13070__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__13069__auto__)));
    var seq__27606_28704 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__13069__auto__));
    var chunk__27607_28705 = null;
    var count__27608_28706 = 0;
    var i__27609_28707 = 0;
    while (true) {
      if (i__27609_28707 < count__27608_28706) {
        var arg__13071__auto___28708 = cljs.core._nth.call(null, chunk__27607_28705, i__27609_28707);
        a__13070__auto__.push(arg__13071__auto___28708);
        var G__28709 = seq__27606_28704;
        var G__28710 = chunk__27607_28705;
        var G__28711 = count__27608_28706;
        var G__28712 = i__27609_28707 + 1;
        seq__27606_28704 = G__28709;
        chunk__27607_28705 = G__28710;
        count__27608_28706 = G__28711;
        i__27609_28707 = G__28712;
        continue;
      } else {
        var temp__4126__auto___28713 = cljs.core.seq.call(null, seq__27606_28704);
        if (temp__4126__auto___28713) {
          var seq__27606_28714__$1 = temp__4126__auto___28713;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__27606_28714__$1)) {
            var c__8291__auto___28715 = cljs.core.chunk_first.call(null, seq__27606_28714__$1);
            var G__28716 = cljs.core.chunk_rest.call(null, seq__27606_28714__$1);
            var G__28717 = c__8291__auto___28715;
            var G__28718 = cljs.core.count.call(null, c__8291__auto___28715);
            var G__28719 = 0;
            seq__27606_28704 = G__28716;
            chunk__27607_28705 = G__28717;
            count__27608_28706 = G__28718;
            i__27609_28707 = G__28719;
            continue;
          } else {
            var arg__13071__auto___28720 = cljs.core.first.call(null, seq__27606_28714__$1);
            a__13070__auto__.push(arg__13071__auto___28720);
            var G__28721 = cljs.core.next.call(null, seq__27606_28714__$1);
            var G__28722 = null;
            var G__28723 = 0;
            var G__28724 = 0;
            seq__27606_28704 = G__28721;
            chunk__27607_28705 = G__28722;
            count__27608_28706 = G__28723;
            i__27609_28707 = G__28724;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.bdo.apply(null, a__13070__auto__);
  };
  var bdo = function(var_args) {
    var args__13069__auto__ = null;
    if (arguments.length > 0) {
      var G__28725__i = 0, G__28725__a = new Array(arguments.length - 0);
      while (G__28725__i < G__28725__a.length) {
        G__28725__a[G__28725__i] = arguments[G__28725__i + 0];
        ++G__28725__i;
      }
      args__13069__auto__ = new cljs.core.IndexedSeq(G__28725__a, 0);
    }
    return bdo__delegate.call(this, args__13069__auto__);
  };
  bdo.cljs$lang$maxFixedArity = 0;
  bdo.cljs$lang$applyTo = function(arglist__28726) {
    var args__13069__auto__ = cljs.core.seq(arglist__28726);
    return bdo__delegate(args__13069__auto__);
  };
  bdo.cljs$core$IFn$_invoke$arity$variadic = bdo__delegate;
  return bdo;
}();
quiescent.dom.big = function() {
  var big__delegate = function(args__13069__auto__) {
    var a__13070__auto__ = [];
    a__13070__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__13069__auto__)));
    var seq__27614_28727 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__13069__auto__));
    var chunk__27615_28728 = null;
    var count__27616_28729 = 0;
    var i__27617_28730 = 0;
    while (true) {
      if (i__27617_28730 < count__27616_28729) {
        var arg__13071__auto___28731 = cljs.core._nth.call(null, chunk__27615_28728, i__27617_28730);
        a__13070__auto__.push(arg__13071__auto___28731);
        var G__28732 = seq__27614_28727;
        var G__28733 = chunk__27615_28728;
        var G__28734 = count__27616_28729;
        var G__28735 = i__27617_28730 + 1;
        seq__27614_28727 = G__28732;
        chunk__27615_28728 = G__28733;
        count__27616_28729 = G__28734;
        i__27617_28730 = G__28735;
        continue;
      } else {
        var temp__4126__auto___28736 = cljs.core.seq.call(null, seq__27614_28727);
        if (temp__4126__auto___28736) {
          var seq__27614_28737__$1 = temp__4126__auto___28736;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__27614_28737__$1)) {
            var c__8291__auto___28738 = cljs.core.chunk_first.call(null, seq__27614_28737__$1);
            var G__28739 = cljs.core.chunk_rest.call(null, seq__27614_28737__$1);
            var G__28740 = c__8291__auto___28738;
            var G__28741 = cljs.core.count.call(null, c__8291__auto___28738);
            var G__28742 = 0;
            seq__27614_28727 = G__28739;
            chunk__27615_28728 = G__28740;
            count__27616_28729 = G__28741;
            i__27617_28730 = G__28742;
            continue;
          } else {
            var arg__13071__auto___28743 = cljs.core.first.call(null, seq__27614_28737__$1);
            a__13070__auto__.push(arg__13071__auto___28743);
            var G__28744 = cljs.core.next.call(null, seq__27614_28737__$1);
            var G__28745 = null;
            var G__28746 = 0;
            var G__28747 = 0;
            seq__27614_28727 = G__28744;
            chunk__27615_28728 = G__28745;
            count__27616_28729 = G__28746;
            i__27617_28730 = G__28747;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.big.apply(null, a__13070__auto__);
  };
  var big = function(var_args) {
    var args__13069__auto__ = null;
    if (arguments.length > 0) {
      var G__28748__i = 0, G__28748__a = new Array(arguments.length - 0);
      while (G__28748__i < G__28748__a.length) {
        G__28748__a[G__28748__i] = arguments[G__28748__i + 0];
        ++G__28748__i;
      }
      args__13069__auto__ = new cljs.core.IndexedSeq(G__28748__a, 0);
    }
    return big__delegate.call(this, args__13069__auto__);
  };
  big.cljs$lang$maxFixedArity = 0;
  big.cljs$lang$applyTo = function(arglist__28749) {
    var args__13069__auto__ = cljs.core.seq(arglist__28749);
    return big__delegate(args__13069__auto__);
  };
  big.cljs$core$IFn$_invoke$arity$variadic = big__delegate;
  return big;
}();
quiescent.dom.blockquote = function() {
  var blockquote__delegate = function(args__13069__auto__) {
    var a__13070__auto__ = [];
    a__13070__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__13069__auto__)));
    var seq__27622_28750 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__13069__auto__));
    var chunk__27623_28751 = null;
    var count__27624_28752 = 0;
    var i__27625_28753 = 0;
    while (true) {
      if (i__27625_28753 < count__27624_28752) {
        var arg__13071__auto___28754 = cljs.core._nth.call(null, chunk__27623_28751, i__27625_28753);
        a__13070__auto__.push(arg__13071__auto___28754);
        var G__28755 = seq__27622_28750;
        var G__28756 = chunk__27623_28751;
        var G__28757 = count__27624_28752;
        var G__28758 = i__27625_28753 + 1;
        seq__27622_28750 = G__28755;
        chunk__27623_28751 = G__28756;
        count__27624_28752 = G__28757;
        i__27625_28753 = G__28758;
        continue;
      } else {
        var temp__4126__auto___28759 = cljs.core.seq.call(null, seq__27622_28750);
        if (temp__4126__auto___28759) {
          var seq__27622_28760__$1 = temp__4126__auto___28759;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__27622_28760__$1)) {
            var c__8291__auto___28761 = cljs.core.chunk_first.call(null, seq__27622_28760__$1);
            var G__28762 = cljs.core.chunk_rest.call(null, seq__27622_28760__$1);
            var G__28763 = c__8291__auto___28761;
            var G__28764 = cljs.core.count.call(null, c__8291__auto___28761);
            var G__28765 = 0;
            seq__27622_28750 = G__28762;
            chunk__27623_28751 = G__28763;
            count__27624_28752 = G__28764;
            i__27625_28753 = G__28765;
            continue;
          } else {
            var arg__13071__auto___28766 = cljs.core.first.call(null, seq__27622_28760__$1);
            a__13070__auto__.push(arg__13071__auto___28766);
            var G__28767 = cljs.core.next.call(null, seq__27622_28760__$1);
            var G__28768 = null;
            var G__28769 = 0;
            var G__28770 = 0;
            seq__27622_28750 = G__28767;
            chunk__27623_28751 = G__28768;
            count__27624_28752 = G__28769;
            i__27625_28753 = G__28770;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.blockquote.apply(null, a__13070__auto__);
  };
  var blockquote = function(var_args) {
    var args__13069__auto__ = null;
    if (arguments.length > 0) {
      var G__28771__i = 0, G__28771__a = new Array(arguments.length - 0);
      while (G__28771__i < G__28771__a.length) {
        G__28771__a[G__28771__i] = arguments[G__28771__i + 0];
        ++G__28771__i;
      }
      args__13069__auto__ = new cljs.core.IndexedSeq(G__28771__a, 0);
    }
    return blockquote__delegate.call(this, args__13069__auto__);
  };
  blockquote.cljs$lang$maxFixedArity = 0;
  blockquote.cljs$lang$applyTo = function(arglist__28772) {
    var args__13069__auto__ = cljs.core.seq(arglist__28772);
    return blockquote__delegate(args__13069__auto__);
  };
  blockquote.cljs$core$IFn$_invoke$arity$variadic = blockquote__delegate;
  return blockquote;
}();
quiescent.dom.body = function() {
  var body__delegate = function(args__13069__auto__) {
    var a__13070__auto__ = [];
    a__13070__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__13069__auto__)));
    var seq__27630_28773 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__13069__auto__));
    var chunk__27631_28774 = null;
    var count__27632_28775 = 0;
    var i__27633_28776 = 0;
    while (true) {
      if (i__27633_28776 < count__27632_28775) {
        var arg__13071__auto___28777 = cljs.core._nth.call(null, chunk__27631_28774, i__27633_28776);
        a__13070__auto__.push(arg__13071__auto___28777);
        var G__28778 = seq__27630_28773;
        var G__28779 = chunk__27631_28774;
        var G__28780 = count__27632_28775;
        var G__28781 = i__27633_28776 + 1;
        seq__27630_28773 = G__28778;
        chunk__27631_28774 = G__28779;
        count__27632_28775 = G__28780;
        i__27633_28776 = G__28781;
        continue;
      } else {
        var temp__4126__auto___28782 = cljs.core.seq.call(null, seq__27630_28773);
        if (temp__4126__auto___28782) {
          var seq__27630_28783__$1 = temp__4126__auto___28782;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__27630_28783__$1)) {
            var c__8291__auto___28784 = cljs.core.chunk_first.call(null, seq__27630_28783__$1);
            var G__28785 = cljs.core.chunk_rest.call(null, seq__27630_28783__$1);
            var G__28786 = c__8291__auto___28784;
            var G__28787 = cljs.core.count.call(null, c__8291__auto___28784);
            var G__28788 = 0;
            seq__27630_28773 = G__28785;
            chunk__27631_28774 = G__28786;
            count__27632_28775 = G__28787;
            i__27633_28776 = G__28788;
            continue;
          } else {
            var arg__13071__auto___28789 = cljs.core.first.call(null, seq__27630_28783__$1);
            a__13070__auto__.push(arg__13071__auto___28789);
            var G__28790 = cljs.core.next.call(null, seq__27630_28783__$1);
            var G__28791 = null;
            var G__28792 = 0;
            var G__28793 = 0;
            seq__27630_28773 = G__28790;
            chunk__27631_28774 = G__28791;
            count__27632_28775 = G__28792;
            i__27633_28776 = G__28793;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.body.apply(null, a__13070__auto__);
  };
  var body = function(var_args) {
    var args__13069__auto__ = null;
    if (arguments.length > 0) {
      var G__28794__i = 0, G__28794__a = new Array(arguments.length - 0);
      while (G__28794__i < G__28794__a.length) {
        G__28794__a[G__28794__i] = arguments[G__28794__i + 0];
        ++G__28794__i;
      }
      args__13069__auto__ = new cljs.core.IndexedSeq(G__28794__a, 0);
    }
    return body__delegate.call(this, args__13069__auto__);
  };
  body.cljs$lang$maxFixedArity = 0;
  body.cljs$lang$applyTo = function(arglist__28795) {
    var args__13069__auto__ = cljs.core.seq(arglist__28795);
    return body__delegate(args__13069__auto__);
  };
  body.cljs$core$IFn$_invoke$arity$variadic = body__delegate;
  return body;
}();
quiescent.dom.br = function() {
  var br__delegate = function(args__13069__auto__) {
    var a__13070__auto__ = [];
    a__13070__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__13069__auto__)));
    var seq__27638_28796 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__13069__auto__));
    var chunk__27639_28797 = null;
    var count__27640_28798 = 0;
    var i__27641_28799 = 0;
    while (true) {
      if (i__27641_28799 < count__27640_28798) {
        var arg__13071__auto___28800 = cljs.core._nth.call(null, chunk__27639_28797, i__27641_28799);
        a__13070__auto__.push(arg__13071__auto___28800);
        var G__28801 = seq__27638_28796;
        var G__28802 = chunk__27639_28797;
        var G__28803 = count__27640_28798;
        var G__28804 = i__27641_28799 + 1;
        seq__27638_28796 = G__28801;
        chunk__27639_28797 = G__28802;
        count__27640_28798 = G__28803;
        i__27641_28799 = G__28804;
        continue;
      } else {
        var temp__4126__auto___28805 = cljs.core.seq.call(null, seq__27638_28796);
        if (temp__4126__auto___28805) {
          var seq__27638_28806__$1 = temp__4126__auto___28805;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__27638_28806__$1)) {
            var c__8291__auto___28807 = cljs.core.chunk_first.call(null, seq__27638_28806__$1);
            var G__28808 = cljs.core.chunk_rest.call(null, seq__27638_28806__$1);
            var G__28809 = c__8291__auto___28807;
            var G__28810 = cljs.core.count.call(null, c__8291__auto___28807);
            var G__28811 = 0;
            seq__27638_28796 = G__28808;
            chunk__27639_28797 = G__28809;
            count__27640_28798 = G__28810;
            i__27641_28799 = G__28811;
            continue;
          } else {
            var arg__13071__auto___28812 = cljs.core.first.call(null, seq__27638_28806__$1);
            a__13070__auto__.push(arg__13071__auto___28812);
            var G__28813 = cljs.core.next.call(null, seq__27638_28806__$1);
            var G__28814 = null;
            var G__28815 = 0;
            var G__28816 = 0;
            seq__27638_28796 = G__28813;
            chunk__27639_28797 = G__28814;
            count__27640_28798 = G__28815;
            i__27641_28799 = G__28816;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.br.apply(null, a__13070__auto__);
  };
  var br = function(var_args) {
    var args__13069__auto__ = null;
    if (arguments.length > 0) {
      var G__28817__i = 0, G__28817__a = new Array(arguments.length - 0);
      while (G__28817__i < G__28817__a.length) {
        G__28817__a[G__28817__i] = arguments[G__28817__i + 0];
        ++G__28817__i;
      }
      args__13069__auto__ = new cljs.core.IndexedSeq(G__28817__a, 0);
    }
    return br__delegate.call(this, args__13069__auto__);
  };
  br.cljs$lang$maxFixedArity = 0;
  br.cljs$lang$applyTo = function(arglist__28818) {
    var args__13069__auto__ = cljs.core.seq(arglist__28818);
    return br__delegate(args__13069__auto__);
  };
  br.cljs$core$IFn$_invoke$arity$variadic = br__delegate;
  return br;
}();
quiescent.dom.button = function() {
  var button__delegate = function(args__13069__auto__) {
    var a__13070__auto__ = [];
    a__13070__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__13069__auto__)));
    var seq__27646_28819 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__13069__auto__));
    var chunk__27647_28820 = null;
    var count__27648_28821 = 0;
    var i__27649_28822 = 0;
    while (true) {
      if (i__27649_28822 < count__27648_28821) {
        var arg__13071__auto___28823 = cljs.core._nth.call(null, chunk__27647_28820, i__27649_28822);
        a__13070__auto__.push(arg__13071__auto___28823);
        var G__28824 = seq__27646_28819;
        var G__28825 = chunk__27647_28820;
        var G__28826 = count__27648_28821;
        var G__28827 = i__27649_28822 + 1;
        seq__27646_28819 = G__28824;
        chunk__27647_28820 = G__28825;
        count__27648_28821 = G__28826;
        i__27649_28822 = G__28827;
        continue;
      } else {
        var temp__4126__auto___28828 = cljs.core.seq.call(null, seq__27646_28819);
        if (temp__4126__auto___28828) {
          var seq__27646_28829__$1 = temp__4126__auto___28828;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__27646_28829__$1)) {
            var c__8291__auto___28830 = cljs.core.chunk_first.call(null, seq__27646_28829__$1);
            var G__28831 = cljs.core.chunk_rest.call(null, seq__27646_28829__$1);
            var G__28832 = c__8291__auto___28830;
            var G__28833 = cljs.core.count.call(null, c__8291__auto___28830);
            var G__28834 = 0;
            seq__27646_28819 = G__28831;
            chunk__27647_28820 = G__28832;
            count__27648_28821 = G__28833;
            i__27649_28822 = G__28834;
            continue;
          } else {
            var arg__13071__auto___28835 = cljs.core.first.call(null, seq__27646_28829__$1);
            a__13070__auto__.push(arg__13071__auto___28835);
            var G__28836 = cljs.core.next.call(null, seq__27646_28829__$1);
            var G__28837 = null;
            var G__28838 = 0;
            var G__28839 = 0;
            seq__27646_28819 = G__28836;
            chunk__27647_28820 = G__28837;
            count__27648_28821 = G__28838;
            i__27649_28822 = G__28839;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.button.apply(null, a__13070__auto__);
  };
  var button = function(var_args) {
    var args__13069__auto__ = null;
    if (arguments.length > 0) {
      var G__28840__i = 0, G__28840__a = new Array(arguments.length - 0);
      while (G__28840__i < G__28840__a.length) {
        G__28840__a[G__28840__i] = arguments[G__28840__i + 0];
        ++G__28840__i;
      }
      args__13069__auto__ = new cljs.core.IndexedSeq(G__28840__a, 0);
    }
    return button__delegate.call(this, args__13069__auto__);
  };
  button.cljs$lang$maxFixedArity = 0;
  button.cljs$lang$applyTo = function(arglist__28841) {
    var args__13069__auto__ = cljs.core.seq(arglist__28841);
    return button__delegate(args__13069__auto__);
  };
  button.cljs$core$IFn$_invoke$arity$variadic = button__delegate;
  return button;
}();
quiescent.dom.canvas = function() {
  var canvas__delegate = function(args__13069__auto__) {
    var a__13070__auto__ = [];
    a__13070__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__13069__auto__)));
    var seq__27654_28842 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__13069__auto__));
    var chunk__27655_28843 = null;
    var count__27656_28844 = 0;
    var i__27657_28845 = 0;
    while (true) {
      if (i__27657_28845 < count__27656_28844) {
        var arg__13071__auto___28846 = cljs.core._nth.call(null, chunk__27655_28843, i__27657_28845);
        a__13070__auto__.push(arg__13071__auto___28846);
        var G__28847 = seq__27654_28842;
        var G__28848 = chunk__27655_28843;
        var G__28849 = count__27656_28844;
        var G__28850 = i__27657_28845 + 1;
        seq__27654_28842 = G__28847;
        chunk__27655_28843 = G__28848;
        count__27656_28844 = G__28849;
        i__27657_28845 = G__28850;
        continue;
      } else {
        var temp__4126__auto___28851 = cljs.core.seq.call(null, seq__27654_28842);
        if (temp__4126__auto___28851) {
          var seq__27654_28852__$1 = temp__4126__auto___28851;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__27654_28852__$1)) {
            var c__8291__auto___28853 = cljs.core.chunk_first.call(null, seq__27654_28852__$1);
            var G__28854 = cljs.core.chunk_rest.call(null, seq__27654_28852__$1);
            var G__28855 = c__8291__auto___28853;
            var G__28856 = cljs.core.count.call(null, c__8291__auto___28853);
            var G__28857 = 0;
            seq__27654_28842 = G__28854;
            chunk__27655_28843 = G__28855;
            count__27656_28844 = G__28856;
            i__27657_28845 = G__28857;
            continue;
          } else {
            var arg__13071__auto___28858 = cljs.core.first.call(null, seq__27654_28852__$1);
            a__13070__auto__.push(arg__13071__auto___28858);
            var G__28859 = cljs.core.next.call(null, seq__27654_28852__$1);
            var G__28860 = null;
            var G__28861 = 0;
            var G__28862 = 0;
            seq__27654_28842 = G__28859;
            chunk__27655_28843 = G__28860;
            count__27656_28844 = G__28861;
            i__27657_28845 = G__28862;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.canvas.apply(null, a__13070__auto__);
  };
  var canvas = function(var_args) {
    var args__13069__auto__ = null;
    if (arguments.length > 0) {
      var G__28863__i = 0, G__28863__a = new Array(arguments.length - 0);
      while (G__28863__i < G__28863__a.length) {
        G__28863__a[G__28863__i] = arguments[G__28863__i + 0];
        ++G__28863__i;
      }
      args__13069__auto__ = new cljs.core.IndexedSeq(G__28863__a, 0);
    }
    return canvas__delegate.call(this, args__13069__auto__);
  };
  canvas.cljs$lang$maxFixedArity = 0;
  canvas.cljs$lang$applyTo = function(arglist__28864) {
    var args__13069__auto__ = cljs.core.seq(arglist__28864);
    return canvas__delegate(args__13069__auto__);
  };
  canvas.cljs$core$IFn$_invoke$arity$variadic = canvas__delegate;
  return canvas;
}();
quiescent.dom.caption = function() {
  var caption__delegate = function(args__13069__auto__) {
    var a__13070__auto__ = [];
    a__13070__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__13069__auto__)));
    var seq__27662_28865 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__13069__auto__));
    var chunk__27663_28866 = null;
    var count__27664_28867 = 0;
    var i__27665_28868 = 0;
    while (true) {
      if (i__27665_28868 < count__27664_28867) {
        var arg__13071__auto___28869 = cljs.core._nth.call(null, chunk__27663_28866, i__27665_28868);
        a__13070__auto__.push(arg__13071__auto___28869);
        var G__28870 = seq__27662_28865;
        var G__28871 = chunk__27663_28866;
        var G__28872 = count__27664_28867;
        var G__28873 = i__27665_28868 + 1;
        seq__27662_28865 = G__28870;
        chunk__27663_28866 = G__28871;
        count__27664_28867 = G__28872;
        i__27665_28868 = G__28873;
        continue;
      } else {
        var temp__4126__auto___28874 = cljs.core.seq.call(null, seq__27662_28865);
        if (temp__4126__auto___28874) {
          var seq__27662_28875__$1 = temp__4126__auto___28874;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__27662_28875__$1)) {
            var c__8291__auto___28876 = cljs.core.chunk_first.call(null, seq__27662_28875__$1);
            var G__28877 = cljs.core.chunk_rest.call(null, seq__27662_28875__$1);
            var G__28878 = c__8291__auto___28876;
            var G__28879 = cljs.core.count.call(null, c__8291__auto___28876);
            var G__28880 = 0;
            seq__27662_28865 = G__28877;
            chunk__27663_28866 = G__28878;
            count__27664_28867 = G__28879;
            i__27665_28868 = G__28880;
            continue;
          } else {
            var arg__13071__auto___28881 = cljs.core.first.call(null, seq__27662_28875__$1);
            a__13070__auto__.push(arg__13071__auto___28881);
            var G__28882 = cljs.core.next.call(null, seq__27662_28875__$1);
            var G__28883 = null;
            var G__28884 = 0;
            var G__28885 = 0;
            seq__27662_28865 = G__28882;
            chunk__27663_28866 = G__28883;
            count__27664_28867 = G__28884;
            i__27665_28868 = G__28885;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.caption.apply(null, a__13070__auto__);
  };
  var caption = function(var_args) {
    var args__13069__auto__ = null;
    if (arguments.length > 0) {
      var G__28886__i = 0, G__28886__a = new Array(arguments.length - 0);
      while (G__28886__i < G__28886__a.length) {
        G__28886__a[G__28886__i] = arguments[G__28886__i + 0];
        ++G__28886__i;
      }
      args__13069__auto__ = new cljs.core.IndexedSeq(G__28886__a, 0);
    }
    return caption__delegate.call(this, args__13069__auto__);
  };
  caption.cljs$lang$maxFixedArity = 0;
  caption.cljs$lang$applyTo = function(arglist__28887) {
    var args__13069__auto__ = cljs.core.seq(arglist__28887);
    return caption__delegate(args__13069__auto__);
  };
  caption.cljs$core$IFn$_invoke$arity$variadic = caption__delegate;
  return caption;
}();
quiescent.dom.cite = function() {
  var cite__delegate = function(args__13069__auto__) {
    var a__13070__auto__ = [];
    a__13070__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__13069__auto__)));
    var seq__27670_28888 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__13069__auto__));
    var chunk__27671_28889 = null;
    var count__27672_28890 = 0;
    var i__27673_28891 = 0;
    while (true) {
      if (i__27673_28891 < count__27672_28890) {
        var arg__13071__auto___28892 = cljs.core._nth.call(null, chunk__27671_28889, i__27673_28891);
        a__13070__auto__.push(arg__13071__auto___28892);
        var G__28893 = seq__27670_28888;
        var G__28894 = chunk__27671_28889;
        var G__28895 = count__27672_28890;
        var G__28896 = i__27673_28891 + 1;
        seq__27670_28888 = G__28893;
        chunk__27671_28889 = G__28894;
        count__27672_28890 = G__28895;
        i__27673_28891 = G__28896;
        continue;
      } else {
        var temp__4126__auto___28897 = cljs.core.seq.call(null, seq__27670_28888);
        if (temp__4126__auto___28897) {
          var seq__27670_28898__$1 = temp__4126__auto___28897;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__27670_28898__$1)) {
            var c__8291__auto___28899 = cljs.core.chunk_first.call(null, seq__27670_28898__$1);
            var G__28900 = cljs.core.chunk_rest.call(null, seq__27670_28898__$1);
            var G__28901 = c__8291__auto___28899;
            var G__28902 = cljs.core.count.call(null, c__8291__auto___28899);
            var G__28903 = 0;
            seq__27670_28888 = G__28900;
            chunk__27671_28889 = G__28901;
            count__27672_28890 = G__28902;
            i__27673_28891 = G__28903;
            continue;
          } else {
            var arg__13071__auto___28904 = cljs.core.first.call(null, seq__27670_28898__$1);
            a__13070__auto__.push(arg__13071__auto___28904);
            var G__28905 = cljs.core.next.call(null, seq__27670_28898__$1);
            var G__28906 = null;
            var G__28907 = 0;
            var G__28908 = 0;
            seq__27670_28888 = G__28905;
            chunk__27671_28889 = G__28906;
            count__27672_28890 = G__28907;
            i__27673_28891 = G__28908;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.cite.apply(null, a__13070__auto__);
  };
  var cite = function(var_args) {
    var args__13069__auto__ = null;
    if (arguments.length > 0) {
      var G__28909__i = 0, G__28909__a = new Array(arguments.length - 0);
      while (G__28909__i < G__28909__a.length) {
        G__28909__a[G__28909__i] = arguments[G__28909__i + 0];
        ++G__28909__i;
      }
      args__13069__auto__ = new cljs.core.IndexedSeq(G__28909__a, 0);
    }
    return cite__delegate.call(this, args__13069__auto__);
  };
  cite.cljs$lang$maxFixedArity = 0;
  cite.cljs$lang$applyTo = function(arglist__28910) {
    var args__13069__auto__ = cljs.core.seq(arglist__28910);
    return cite__delegate(args__13069__auto__);
  };
  cite.cljs$core$IFn$_invoke$arity$variadic = cite__delegate;
  return cite;
}();
quiescent.dom.code = function() {
  var code__delegate = function(args__13069__auto__) {
    var a__13070__auto__ = [];
    a__13070__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__13069__auto__)));
    var seq__27678_28911 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__13069__auto__));
    var chunk__27679_28912 = null;
    var count__27680_28913 = 0;
    var i__27681_28914 = 0;
    while (true) {
      if (i__27681_28914 < count__27680_28913) {
        var arg__13071__auto___28915 = cljs.core._nth.call(null, chunk__27679_28912, i__27681_28914);
        a__13070__auto__.push(arg__13071__auto___28915);
        var G__28916 = seq__27678_28911;
        var G__28917 = chunk__27679_28912;
        var G__28918 = count__27680_28913;
        var G__28919 = i__27681_28914 + 1;
        seq__27678_28911 = G__28916;
        chunk__27679_28912 = G__28917;
        count__27680_28913 = G__28918;
        i__27681_28914 = G__28919;
        continue;
      } else {
        var temp__4126__auto___28920 = cljs.core.seq.call(null, seq__27678_28911);
        if (temp__4126__auto___28920) {
          var seq__27678_28921__$1 = temp__4126__auto___28920;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__27678_28921__$1)) {
            var c__8291__auto___28922 = cljs.core.chunk_first.call(null, seq__27678_28921__$1);
            var G__28923 = cljs.core.chunk_rest.call(null, seq__27678_28921__$1);
            var G__28924 = c__8291__auto___28922;
            var G__28925 = cljs.core.count.call(null, c__8291__auto___28922);
            var G__28926 = 0;
            seq__27678_28911 = G__28923;
            chunk__27679_28912 = G__28924;
            count__27680_28913 = G__28925;
            i__27681_28914 = G__28926;
            continue;
          } else {
            var arg__13071__auto___28927 = cljs.core.first.call(null, seq__27678_28921__$1);
            a__13070__auto__.push(arg__13071__auto___28927);
            var G__28928 = cljs.core.next.call(null, seq__27678_28921__$1);
            var G__28929 = null;
            var G__28930 = 0;
            var G__28931 = 0;
            seq__27678_28911 = G__28928;
            chunk__27679_28912 = G__28929;
            count__27680_28913 = G__28930;
            i__27681_28914 = G__28931;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.code.apply(null, a__13070__auto__);
  };
  var code = function(var_args) {
    var args__13069__auto__ = null;
    if (arguments.length > 0) {
      var G__28932__i = 0, G__28932__a = new Array(arguments.length - 0);
      while (G__28932__i < G__28932__a.length) {
        G__28932__a[G__28932__i] = arguments[G__28932__i + 0];
        ++G__28932__i;
      }
      args__13069__auto__ = new cljs.core.IndexedSeq(G__28932__a, 0);
    }
    return code__delegate.call(this, args__13069__auto__);
  };
  code.cljs$lang$maxFixedArity = 0;
  code.cljs$lang$applyTo = function(arglist__28933) {
    var args__13069__auto__ = cljs.core.seq(arglist__28933);
    return code__delegate(args__13069__auto__);
  };
  code.cljs$core$IFn$_invoke$arity$variadic = code__delegate;
  return code;
}();
quiescent.dom.col = function() {
  var col__delegate = function(args__13069__auto__) {
    var a__13070__auto__ = [];
    a__13070__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__13069__auto__)));
    var seq__27686_28934 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__13069__auto__));
    var chunk__27687_28935 = null;
    var count__27688_28936 = 0;
    var i__27689_28937 = 0;
    while (true) {
      if (i__27689_28937 < count__27688_28936) {
        var arg__13071__auto___28938 = cljs.core._nth.call(null, chunk__27687_28935, i__27689_28937);
        a__13070__auto__.push(arg__13071__auto___28938);
        var G__28939 = seq__27686_28934;
        var G__28940 = chunk__27687_28935;
        var G__28941 = count__27688_28936;
        var G__28942 = i__27689_28937 + 1;
        seq__27686_28934 = G__28939;
        chunk__27687_28935 = G__28940;
        count__27688_28936 = G__28941;
        i__27689_28937 = G__28942;
        continue;
      } else {
        var temp__4126__auto___28943 = cljs.core.seq.call(null, seq__27686_28934);
        if (temp__4126__auto___28943) {
          var seq__27686_28944__$1 = temp__4126__auto___28943;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__27686_28944__$1)) {
            var c__8291__auto___28945 = cljs.core.chunk_first.call(null, seq__27686_28944__$1);
            var G__28946 = cljs.core.chunk_rest.call(null, seq__27686_28944__$1);
            var G__28947 = c__8291__auto___28945;
            var G__28948 = cljs.core.count.call(null, c__8291__auto___28945);
            var G__28949 = 0;
            seq__27686_28934 = G__28946;
            chunk__27687_28935 = G__28947;
            count__27688_28936 = G__28948;
            i__27689_28937 = G__28949;
            continue;
          } else {
            var arg__13071__auto___28950 = cljs.core.first.call(null, seq__27686_28944__$1);
            a__13070__auto__.push(arg__13071__auto___28950);
            var G__28951 = cljs.core.next.call(null, seq__27686_28944__$1);
            var G__28952 = null;
            var G__28953 = 0;
            var G__28954 = 0;
            seq__27686_28934 = G__28951;
            chunk__27687_28935 = G__28952;
            count__27688_28936 = G__28953;
            i__27689_28937 = G__28954;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.col.apply(null, a__13070__auto__);
  };
  var col = function(var_args) {
    var args__13069__auto__ = null;
    if (arguments.length > 0) {
      var G__28955__i = 0, G__28955__a = new Array(arguments.length - 0);
      while (G__28955__i < G__28955__a.length) {
        G__28955__a[G__28955__i] = arguments[G__28955__i + 0];
        ++G__28955__i;
      }
      args__13069__auto__ = new cljs.core.IndexedSeq(G__28955__a, 0);
    }
    return col__delegate.call(this, args__13069__auto__);
  };
  col.cljs$lang$maxFixedArity = 0;
  col.cljs$lang$applyTo = function(arglist__28956) {
    var args__13069__auto__ = cljs.core.seq(arglist__28956);
    return col__delegate(args__13069__auto__);
  };
  col.cljs$core$IFn$_invoke$arity$variadic = col__delegate;
  return col;
}();
quiescent.dom.colgroup = function() {
  var colgroup__delegate = function(args__13069__auto__) {
    var a__13070__auto__ = [];
    a__13070__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__13069__auto__)));
    var seq__27694_28957 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__13069__auto__));
    var chunk__27695_28958 = null;
    var count__27696_28959 = 0;
    var i__27697_28960 = 0;
    while (true) {
      if (i__27697_28960 < count__27696_28959) {
        var arg__13071__auto___28961 = cljs.core._nth.call(null, chunk__27695_28958, i__27697_28960);
        a__13070__auto__.push(arg__13071__auto___28961);
        var G__28962 = seq__27694_28957;
        var G__28963 = chunk__27695_28958;
        var G__28964 = count__27696_28959;
        var G__28965 = i__27697_28960 + 1;
        seq__27694_28957 = G__28962;
        chunk__27695_28958 = G__28963;
        count__27696_28959 = G__28964;
        i__27697_28960 = G__28965;
        continue;
      } else {
        var temp__4126__auto___28966 = cljs.core.seq.call(null, seq__27694_28957);
        if (temp__4126__auto___28966) {
          var seq__27694_28967__$1 = temp__4126__auto___28966;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__27694_28967__$1)) {
            var c__8291__auto___28968 = cljs.core.chunk_first.call(null, seq__27694_28967__$1);
            var G__28969 = cljs.core.chunk_rest.call(null, seq__27694_28967__$1);
            var G__28970 = c__8291__auto___28968;
            var G__28971 = cljs.core.count.call(null, c__8291__auto___28968);
            var G__28972 = 0;
            seq__27694_28957 = G__28969;
            chunk__27695_28958 = G__28970;
            count__27696_28959 = G__28971;
            i__27697_28960 = G__28972;
            continue;
          } else {
            var arg__13071__auto___28973 = cljs.core.first.call(null, seq__27694_28967__$1);
            a__13070__auto__.push(arg__13071__auto___28973);
            var G__28974 = cljs.core.next.call(null, seq__27694_28967__$1);
            var G__28975 = null;
            var G__28976 = 0;
            var G__28977 = 0;
            seq__27694_28957 = G__28974;
            chunk__27695_28958 = G__28975;
            count__27696_28959 = G__28976;
            i__27697_28960 = G__28977;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.colgroup.apply(null, a__13070__auto__);
  };
  var colgroup = function(var_args) {
    var args__13069__auto__ = null;
    if (arguments.length > 0) {
      var G__28978__i = 0, G__28978__a = new Array(arguments.length - 0);
      while (G__28978__i < G__28978__a.length) {
        G__28978__a[G__28978__i] = arguments[G__28978__i + 0];
        ++G__28978__i;
      }
      args__13069__auto__ = new cljs.core.IndexedSeq(G__28978__a, 0);
    }
    return colgroup__delegate.call(this, args__13069__auto__);
  };
  colgroup.cljs$lang$maxFixedArity = 0;
  colgroup.cljs$lang$applyTo = function(arglist__28979) {
    var args__13069__auto__ = cljs.core.seq(arglist__28979);
    return colgroup__delegate(args__13069__auto__);
  };
  colgroup.cljs$core$IFn$_invoke$arity$variadic = colgroup__delegate;
  return colgroup;
}();
quiescent.dom.data = function() {
  var data__delegate = function(args__13069__auto__) {
    var a__13070__auto__ = [];
    a__13070__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__13069__auto__)));
    var seq__27702_28980 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__13069__auto__));
    var chunk__27703_28981 = null;
    var count__27704_28982 = 0;
    var i__27705_28983 = 0;
    while (true) {
      if (i__27705_28983 < count__27704_28982) {
        var arg__13071__auto___28984 = cljs.core._nth.call(null, chunk__27703_28981, i__27705_28983);
        a__13070__auto__.push(arg__13071__auto___28984);
        var G__28985 = seq__27702_28980;
        var G__28986 = chunk__27703_28981;
        var G__28987 = count__27704_28982;
        var G__28988 = i__27705_28983 + 1;
        seq__27702_28980 = G__28985;
        chunk__27703_28981 = G__28986;
        count__27704_28982 = G__28987;
        i__27705_28983 = G__28988;
        continue;
      } else {
        var temp__4126__auto___28989 = cljs.core.seq.call(null, seq__27702_28980);
        if (temp__4126__auto___28989) {
          var seq__27702_28990__$1 = temp__4126__auto___28989;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__27702_28990__$1)) {
            var c__8291__auto___28991 = cljs.core.chunk_first.call(null, seq__27702_28990__$1);
            var G__28992 = cljs.core.chunk_rest.call(null, seq__27702_28990__$1);
            var G__28993 = c__8291__auto___28991;
            var G__28994 = cljs.core.count.call(null, c__8291__auto___28991);
            var G__28995 = 0;
            seq__27702_28980 = G__28992;
            chunk__27703_28981 = G__28993;
            count__27704_28982 = G__28994;
            i__27705_28983 = G__28995;
            continue;
          } else {
            var arg__13071__auto___28996 = cljs.core.first.call(null, seq__27702_28990__$1);
            a__13070__auto__.push(arg__13071__auto___28996);
            var G__28997 = cljs.core.next.call(null, seq__27702_28990__$1);
            var G__28998 = null;
            var G__28999 = 0;
            var G__29000 = 0;
            seq__27702_28980 = G__28997;
            chunk__27703_28981 = G__28998;
            count__27704_28982 = G__28999;
            i__27705_28983 = G__29000;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.data.apply(null, a__13070__auto__);
  };
  var data = function(var_args) {
    var args__13069__auto__ = null;
    if (arguments.length > 0) {
      var G__29001__i = 0, G__29001__a = new Array(arguments.length - 0);
      while (G__29001__i < G__29001__a.length) {
        G__29001__a[G__29001__i] = arguments[G__29001__i + 0];
        ++G__29001__i;
      }
      args__13069__auto__ = new cljs.core.IndexedSeq(G__29001__a, 0);
    }
    return data__delegate.call(this, args__13069__auto__);
  };
  data.cljs$lang$maxFixedArity = 0;
  data.cljs$lang$applyTo = function(arglist__29002) {
    var args__13069__auto__ = cljs.core.seq(arglist__29002);
    return data__delegate(args__13069__auto__);
  };
  data.cljs$core$IFn$_invoke$arity$variadic = data__delegate;
  return data;
}();
quiescent.dom.datalist = function() {
  var datalist__delegate = function(args__13069__auto__) {
    var a__13070__auto__ = [];
    a__13070__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__13069__auto__)));
    var seq__27710_29003 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__13069__auto__));
    var chunk__27711_29004 = null;
    var count__27712_29005 = 0;
    var i__27713_29006 = 0;
    while (true) {
      if (i__27713_29006 < count__27712_29005) {
        var arg__13071__auto___29007 = cljs.core._nth.call(null, chunk__27711_29004, i__27713_29006);
        a__13070__auto__.push(arg__13071__auto___29007);
        var G__29008 = seq__27710_29003;
        var G__29009 = chunk__27711_29004;
        var G__29010 = count__27712_29005;
        var G__29011 = i__27713_29006 + 1;
        seq__27710_29003 = G__29008;
        chunk__27711_29004 = G__29009;
        count__27712_29005 = G__29010;
        i__27713_29006 = G__29011;
        continue;
      } else {
        var temp__4126__auto___29012 = cljs.core.seq.call(null, seq__27710_29003);
        if (temp__4126__auto___29012) {
          var seq__27710_29013__$1 = temp__4126__auto___29012;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__27710_29013__$1)) {
            var c__8291__auto___29014 = cljs.core.chunk_first.call(null, seq__27710_29013__$1);
            var G__29015 = cljs.core.chunk_rest.call(null, seq__27710_29013__$1);
            var G__29016 = c__8291__auto___29014;
            var G__29017 = cljs.core.count.call(null, c__8291__auto___29014);
            var G__29018 = 0;
            seq__27710_29003 = G__29015;
            chunk__27711_29004 = G__29016;
            count__27712_29005 = G__29017;
            i__27713_29006 = G__29018;
            continue;
          } else {
            var arg__13071__auto___29019 = cljs.core.first.call(null, seq__27710_29013__$1);
            a__13070__auto__.push(arg__13071__auto___29019);
            var G__29020 = cljs.core.next.call(null, seq__27710_29013__$1);
            var G__29021 = null;
            var G__29022 = 0;
            var G__29023 = 0;
            seq__27710_29003 = G__29020;
            chunk__27711_29004 = G__29021;
            count__27712_29005 = G__29022;
            i__27713_29006 = G__29023;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.datalist.apply(null, a__13070__auto__);
  };
  var datalist = function(var_args) {
    var args__13069__auto__ = null;
    if (arguments.length > 0) {
      var G__29024__i = 0, G__29024__a = new Array(arguments.length - 0);
      while (G__29024__i < G__29024__a.length) {
        G__29024__a[G__29024__i] = arguments[G__29024__i + 0];
        ++G__29024__i;
      }
      args__13069__auto__ = new cljs.core.IndexedSeq(G__29024__a, 0);
    }
    return datalist__delegate.call(this, args__13069__auto__);
  };
  datalist.cljs$lang$maxFixedArity = 0;
  datalist.cljs$lang$applyTo = function(arglist__29025) {
    var args__13069__auto__ = cljs.core.seq(arglist__29025);
    return datalist__delegate(args__13069__auto__);
  };
  datalist.cljs$core$IFn$_invoke$arity$variadic = datalist__delegate;
  return datalist;
}();
quiescent.dom.dd = function() {
  var dd__delegate = function(args__13069__auto__) {
    var a__13070__auto__ = [];
    a__13070__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__13069__auto__)));
    var seq__27718_29026 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__13069__auto__));
    var chunk__27719_29027 = null;
    var count__27720_29028 = 0;
    var i__27721_29029 = 0;
    while (true) {
      if (i__27721_29029 < count__27720_29028) {
        var arg__13071__auto___29030 = cljs.core._nth.call(null, chunk__27719_29027, i__27721_29029);
        a__13070__auto__.push(arg__13071__auto___29030);
        var G__29031 = seq__27718_29026;
        var G__29032 = chunk__27719_29027;
        var G__29033 = count__27720_29028;
        var G__29034 = i__27721_29029 + 1;
        seq__27718_29026 = G__29031;
        chunk__27719_29027 = G__29032;
        count__27720_29028 = G__29033;
        i__27721_29029 = G__29034;
        continue;
      } else {
        var temp__4126__auto___29035 = cljs.core.seq.call(null, seq__27718_29026);
        if (temp__4126__auto___29035) {
          var seq__27718_29036__$1 = temp__4126__auto___29035;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__27718_29036__$1)) {
            var c__8291__auto___29037 = cljs.core.chunk_first.call(null, seq__27718_29036__$1);
            var G__29038 = cljs.core.chunk_rest.call(null, seq__27718_29036__$1);
            var G__29039 = c__8291__auto___29037;
            var G__29040 = cljs.core.count.call(null, c__8291__auto___29037);
            var G__29041 = 0;
            seq__27718_29026 = G__29038;
            chunk__27719_29027 = G__29039;
            count__27720_29028 = G__29040;
            i__27721_29029 = G__29041;
            continue;
          } else {
            var arg__13071__auto___29042 = cljs.core.first.call(null, seq__27718_29036__$1);
            a__13070__auto__.push(arg__13071__auto___29042);
            var G__29043 = cljs.core.next.call(null, seq__27718_29036__$1);
            var G__29044 = null;
            var G__29045 = 0;
            var G__29046 = 0;
            seq__27718_29026 = G__29043;
            chunk__27719_29027 = G__29044;
            count__27720_29028 = G__29045;
            i__27721_29029 = G__29046;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.dd.apply(null, a__13070__auto__);
  };
  var dd = function(var_args) {
    var args__13069__auto__ = null;
    if (arguments.length > 0) {
      var G__29047__i = 0, G__29047__a = new Array(arguments.length - 0);
      while (G__29047__i < G__29047__a.length) {
        G__29047__a[G__29047__i] = arguments[G__29047__i + 0];
        ++G__29047__i;
      }
      args__13069__auto__ = new cljs.core.IndexedSeq(G__29047__a, 0);
    }
    return dd__delegate.call(this, args__13069__auto__);
  };
  dd.cljs$lang$maxFixedArity = 0;
  dd.cljs$lang$applyTo = function(arglist__29048) {
    var args__13069__auto__ = cljs.core.seq(arglist__29048);
    return dd__delegate(args__13069__auto__);
  };
  dd.cljs$core$IFn$_invoke$arity$variadic = dd__delegate;
  return dd;
}();
quiescent.dom.del = function() {
  var del__delegate = function(args__13069__auto__) {
    var a__13070__auto__ = [];
    a__13070__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__13069__auto__)));
    var seq__27726_29049 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__13069__auto__));
    var chunk__27727_29050 = null;
    var count__27728_29051 = 0;
    var i__27729_29052 = 0;
    while (true) {
      if (i__27729_29052 < count__27728_29051) {
        var arg__13071__auto___29053 = cljs.core._nth.call(null, chunk__27727_29050, i__27729_29052);
        a__13070__auto__.push(arg__13071__auto___29053);
        var G__29054 = seq__27726_29049;
        var G__29055 = chunk__27727_29050;
        var G__29056 = count__27728_29051;
        var G__29057 = i__27729_29052 + 1;
        seq__27726_29049 = G__29054;
        chunk__27727_29050 = G__29055;
        count__27728_29051 = G__29056;
        i__27729_29052 = G__29057;
        continue;
      } else {
        var temp__4126__auto___29058 = cljs.core.seq.call(null, seq__27726_29049);
        if (temp__4126__auto___29058) {
          var seq__27726_29059__$1 = temp__4126__auto___29058;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__27726_29059__$1)) {
            var c__8291__auto___29060 = cljs.core.chunk_first.call(null, seq__27726_29059__$1);
            var G__29061 = cljs.core.chunk_rest.call(null, seq__27726_29059__$1);
            var G__29062 = c__8291__auto___29060;
            var G__29063 = cljs.core.count.call(null, c__8291__auto___29060);
            var G__29064 = 0;
            seq__27726_29049 = G__29061;
            chunk__27727_29050 = G__29062;
            count__27728_29051 = G__29063;
            i__27729_29052 = G__29064;
            continue;
          } else {
            var arg__13071__auto___29065 = cljs.core.first.call(null, seq__27726_29059__$1);
            a__13070__auto__.push(arg__13071__auto___29065);
            var G__29066 = cljs.core.next.call(null, seq__27726_29059__$1);
            var G__29067 = null;
            var G__29068 = 0;
            var G__29069 = 0;
            seq__27726_29049 = G__29066;
            chunk__27727_29050 = G__29067;
            count__27728_29051 = G__29068;
            i__27729_29052 = G__29069;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.del.apply(null, a__13070__auto__);
  };
  var del = function(var_args) {
    var args__13069__auto__ = null;
    if (arguments.length > 0) {
      var G__29070__i = 0, G__29070__a = new Array(arguments.length - 0);
      while (G__29070__i < G__29070__a.length) {
        G__29070__a[G__29070__i] = arguments[G__29070__i + 0];
        ++G__29070__i;
      }
      args__13069__auto__ = new cljs.core.IndexedSeq(G__29070__a, 0);
    }
    return del__delegate.call(this, args__13069__auto__);
  };
  del.cljs$lang$maxFixedArity = 0;
  del.cljs$lang$applyTo = function(arglist__29071) {
    var args__13069__auto__ = cljs.core.seq(arglist__29071);
    return del__delegate(args__13069__auto__);
  };
  del.cljs$core$IFn$_invoke$arity$variadic = del__delegate;
  return del;
}();
quiescent.dom.details = function() {
  var details__delegate = function(args__13069__auto__) {
    var a__13070__auto__ = [];
    a__13070__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__13069__auto__)));
    var seq__27734_29072 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__13069__auto__));
    var chunk__27735_29073 = null;
    var count__27736_29074 = 0;
    var i__27737_29075 = 0;
    while (true) {
      if (i__27737_29075 < count__27736_29074) {
        var arg__13071__auto___29076 = cljs.core._nth.call(null, chunk__27735_29073, i__27737_29075);
        a__13070__auto__.push(arg__13071__auto___29076);
        var G__29077 = seq__27734_29072;
        var G__29078 = chunk__27735_29073;
        var G__29079 = count__27736_29074;
        var G__29080 = i__27737_29075 + 1;
        seq__27734_29072 = G__29077;
        chunk__27735_29073 = G__29078;
        count__27736_29074 = G__29079;
        i__27737_29075 = G__29080;
        continue;
      } else {
        var temp__4126__auto___29081 = cljs.core.seq.call(null, seq__27734_29072);
        if (temp__4126__auto___29081) {
          var seq__27734_29082__$1 = temp__4126__auto___29081;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__27734_29082__$1)) {
            var c__8291__auto___29083 = cljs.core.chunk_first.call(null, seq__27734_29082__$1);
            var G__29084 = cljs.core.chunk_rest.call(null, seq__27734_29082__$1);
            var G__29085 = c__8291__auto___29083;
            var G__29086 = cljs.core.count.call(null, c__8291__auto___29083);
            var G__29087 = 0;
            seq__27734_29072 = G__29084;
            chunk__27735_29073 = G__29085;
            count__27736_29074 = G__29086;
            i__27737_29075 = G__29087;
            continue;
          } else {
            var arg__13071__auto___29088 = cljs.core.first.call(null, seq__27734_29082__$1);
            a__13070__auto__.push(arg__13071__auto___29088);
            var G__29089 = cljs.core.next.call(null, seq__27734_29082__$1);
            var G__29090 = null;
            var G__29091 = 0;
            var G__29092 = 0;
            seq__27734_29072 = G__29089;
            chunk__27735_29073 = G__29090;
            count__27736_29074 = G__29091;
            i__27737_29075 = G__29092;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.details.apply(null, a__13070__auto__);
  };
  var details = function(var_args) {
    var args__13069__auto__ = null;
    if (arguments.length > 0) {
      var G__29093__i = 0, G__29093__a = new Array(arguments.length - 0);
      while (G__29093__i < G__29093__a.length) {
        G__29093__a[G__29093__i] = arguments[G__29093__i + 0];
        ++G__29093__i;
      }
      args__13069__auto__ = new cljs.core.IndexedSeq(G__29093__a, 0);
    }
    return details__delegate.call(this, args__13069__auto__);
  };
  details.cljs$lang$maxFixedArity = 0;
  details.cljs$lang$applyTo = function(arglist__29094) {
    var args__13069__auto__ = cljs.core.seq(arglist__29094);
    return details__delegate(args__13069__auto__);
  };
  details.cljs$core$IFn$_invoke$arity$variadic = details__delegate;
  return details;
}();
quiescent.dom.dfn = function() {
  var dfn__delegate = function(args__13069__auto__) {
    var a__13070__auto__ = [];
    a__13070__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__13069__auto__)));
    var seq__27742_29095 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__13069__auto__));
    var chunk__27743_29096 = null;
    var count__27744_29097 = 0;
    var i__27745_29098 = 0;
    while (true) {
      if (i__27745_29098 < count__27744_29097) {
        var arg__13071__auto___29099 = cljs.core._nth.call(null, chunk__27743_29096, i__27745_29098);
        a__13070__auto__.push(arg__13071__auto___29099);
        var G__29100 = seq__27742_29095;
        var G__29101 = chunk__27743_29096;
        var G__29102 = count__27744_29097;
        var G__29103 = i__27745_29098 + 1;
        seq__27742_29095 = G__29100;
        chunk__27743_29096 = G__29101;
        count__27744_29097 = G__29102;
        i__27745_29098 = G__29103;
        continue;
      } else {
        var temp__4126__auto___29104 = cljs.core.seq.call(null, seq__27742_29095);
        if (temp__4126__auto___29104) {
          var seq__27742_29105__$1 = temp__4126__auto___29104;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__27742_29105__$1)) {
            var c__8291__auto___29106 = cljs.core.chunk_first.call(null, seq__27742_29105__$1);
            var G__29107 = cljs.core.chunk_rest.call(null, seq__27742_29105__$1);
            var G__29108 = c__8291__auto___29106;
            var G__29109 = cljs.core.count.call(null, c__8291__auto___29106);
            var G__29110 = 0;
            seq__27742_29095 = G__29107;
            chunk__27743_29096 = G__29108;
            count__27744_29097 = G__29109;
            i__27745_29098 = G__29110;
            continue;
          } else {
            var arg__13071__auto___29111 = cljs.core.first.call(null, seq__27742_29105__$1);
            a__13070__auto__.push(arg__13071__auto___29111);
            var G__29112 = cljs.core.next.call(null, seq__27742_29105__$1);
            var G__29113 = null;
            var G__29114 = 0;
            var G__29115 = 0;
            seq__27742_29095 = G__29112;
            chunk__27743_29096 = G__29113;
            count__27744_29097 = G__29114;
            i__27745_29098 = G__29115;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.dfn.apply(null, a__13070__auto__);
  };
  var dfn = function(var_args) {
    var args__13069__auto__ = null;
    if (arguments.length > 0) {
      var G__29116__i = 0, G__29116__a = new Array(arguments.length - 0);
      while (G__29116__i < G__29116__a.length) {
        G__29116__a[G__29116__i] = arguments[G__29116__i + 0];
        ++G__29116__i;
      }
      args__13069__auto__ = new cljs.core.IndexedSeq(G__29116__a, 0);
    }
    return dfn__delegate.call(this, args__13069__auto__);
  };
  dfn.cljs$lang$maxFixedArity = 0;
  dfn.cljs$lang$applyTo = function(arglist__29117) {
    var args__13069__auto__ = cljs.core.seq(arglist__29117);
    return dfn__delegate(args__13069__auto__);
  };
  dfn.cljs$core$IFn$_invoke$arity$variadic = dfn__delegate;
  return dfn;
}();
quiescent.dom.div = function() {
  var div__delegate = function(args__13069__auto__) {
    var a__13070__auto__ = [];
    a__13070__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__13069__auto__)));
    var seq__27750_29118 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__13069__auto__));
    var chunk__27751_29119 = null;
    var count__27752_29120 = 0;
    var i__27753_29121 = 0;
    while (true) {
      if (i__27753_29121 < count__27752_29120) {
        var arg__13071__auto___29122 = cljs.core._nth.call(null, chunk__27751_29119, i__27753_29121);
        a__13070__auto__.push(arg__13071__auto___29122);
        var G__29123 = seq__27750_29118;
        var G__29124 = chunk__27751_29119;
        var G__29125 = count__27752_29120;
        var G__29126 = i__27753_29121 + 1;
        seq__27750_29118 = G__29123;
        chunk__27751_29119 = G__29124;
        count__27752_29120 = G__29125;
        i__27753_29121 = G__29126;
        continue;
      } else {
        var temp__4126__auto___29127 = cljs.core.seq.call(null, seq__27750_29118);
        if (temp__4126__auto___29127) {
          var seq__27750_29128__$1 = temp__4126__auto___29127;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__27750_29128__$1)) {
            var c__8291__auto___29129 = cljs.core.chunk_first.call(null, seq__27750_29128__$1);
            var G__29130 = cljs.core.chunk_rest.call(null, seq__27750_29128__$1);
            var G__29131 = c__8291__auto___29129;
            var G__29132 = cljs.core.count.call(null, c__8291__auto___29129);
            var G__29133 = 0;
            seq__27750_29118 = G__29130;
            chunk__27751_29119 = G__29131;
            count__27752_29120 = G__29132;
            i__27753_29121 = G__29133;
            continue;
          } else {
            var arg__13071__auto___29134 = cljs.core.first.call(null, seq__27750_29128__$1);
            a__13070__auto__.push(arg__13071__auto___29134);
            var G__29135 = cljs.core.next.call(null, seq__27750_29128__$1);
            var G__29136 = null;
            var G__29137 = 0;
            var G__29138 = 0;
            seq__27750_29118 = G__29135;
            chunk__27751_29119 = G__29136;
            count__27752_29120 = G__29137;
            i__27753_29121 = G__29138;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.div.apply(null, a__13070__auto__);
  };
  var div = function(var_args) {
    var args__13069__auto__ = null;
    if (arguments.length > 0) {
      var G__29139__i = 0, G__29139__a = new Array(arguments.length - 0);
      while (G__29139__i < G__29139__a.length) {
        G__29139__a[G__29139__i] = arguments[G__29139__i + 0];
        ++G__29139__i;
      }
      args__13069__auto__ = new cljs.core.IndexedSeq(G__29139__a, 0);
    }
    return div__delegate.call(this, args__13069__auto__);
  };
  div.cljs$lang$maxFixedArity = 0;
  div.cljs$lang$applyTo = function(arglist__29140) {
    var args__13069__auto__ = cljs.core.seq(arglist__29140);
    return div__delegate(args__13069__auto__);
  };
  div.cljs$core$IFn$_invoke$arity$variadic = div__delegate;
  return div;
}();
quiescent.dom.dl = function() {
  var dl__delegate = function(args__13069__auto__) {
    var a__13070__auto__ = [];
    a__13070__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__13069__auto__)));
    var seq__27758_29141 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__13069__auto__));
    var chunk__27759_29142 = null;
    var count__27760_29143 = 0;
    var i__27761_29144 = 0;
    while (true) {
      if (i__27761_29144 < count__27760_29143) {
        var arg__13071__auto___29145 = cljs.core._nth.call(null, chunk__27759_29142, i__27761_29144);
        a__13070__auto__.push(arg__13071__auto___29145);
        var G__29146 = seq__27758_29141;
        var G__29147 = chunk__27759_29142;
        var G__29148 = count__27760_29143;
        var G__29149 = i__27761_29144 + 1;
        seq__27758_29141 = G__29146;
        chunk__27759_29142 = G__29147;
        count__27760_29143 = G__29148;
        i__27761_29144 = G__29149;
        continue;
      } else {
        var temp__4126__auto___29150 = cljs.core.seq.call(null, seq__27758_29141);
        if (temp__4126__auto___29150) {
          var seq__27758_29151__$1 = temp__4126__auto___29150;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__27758_29151__$1)) {
            var c__8291__auto___29152 = cljs.core.chunk_first.call(null, seq__27758_29151__$1);
            var G__29153 = cljs.core.chunk_rest.call(null, seq__27758_29151__$1);
            var G__29154 = c__8291__auto___29152;
            var G__29155 = cljs.core.count.call(null, c__8291__auto___29152);
            var G__29156 = 0;
            seq__27758_29141 = G__29153;
            chunk__27759_29142 = G__29154;
            count__27760_29143 = G__29155;
            i__27761_29144 = G__29156;
            continue;
          } else {
            var arg__13071__auto___29157 = cljs.core.first.call(null, seq__27758_29151__$1);
            a__13070__auto__.push(arg__13071__auto___29157);
            var G__29158 = cljs.core.next.call(null, seq__27758_29151__$1);
            var G__29159 = null;
            var G__29160 = 0;
            var G__29161 = 0;
            seq__27758_29141 = G__29158;
            chunk__27759_29142 = G__29159;
            count__27760_29143 = G__29160;
            i__27761_29144 = G__29161;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.dl.apply(null, a__13070__auto__);
  };
  var dl = function(var_args) {
    var args__13069__auto__ = null;
    if (arguments.length > 0) {
      var G__29162__i = 0, G__29162__a = new Array(arguments.length - 0);
      while (G__29162__i < G__29162__a.length) {
        G__29162__a[G__29162__i] = arguments[G__29162__i + 0];
        ++G__29162__i;
      }
      args__13069__auto__ = new cljs.core.IndexedSeq(G__29162__a, 0);
    }
    return dl__delegate.call(this, args__13069__auto__);
  };
  dl.cljs$lang$maxFixedArity = 0;
  dl.cljs$lang$applyTo = function(arglist__29163) {
    var args__13069__auto__ = cljs.core.seq(arglist__29163);
    return dl__delegate(args__13069__auto__);
  };
  dl.cljs$core$IFn$_invoke$arity$variadic = dl__delegate;
  return dl;
}();
quiescent.dom.dt = function() {
  var dt__delegate = function(args__13069__auto__) {
    var a__13070__auto__ = [];
    a__13070__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__13069__auto__)));
    var seq__27766_29164 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__13069__auto__));
    var chunk__27767_29165 = null;
    var count__27768_29166 = 0;
    var i__27769_29167 = 0;
    while (true) {
      if (i__27769_29167 < count__27768_29166) {
        var arg__13071__auto___29168 = cljs.core._nth.call(null, chunk__27767_29165, i__27769_29167);
        a__13070__auto__.push(arg__13071__auto___29168);
        var G__29169 = seq__27766_29164;
        var G__29170 = chunk__27767_29165;
        var G__29171 = count__27768_29166;
        var G__29172 = i__27769_29167 + 1;
        seq__27766_29164 = G__29169;
        chunk__27767_29165 = G__29170;
        count__27768_29166 = G__29171;
        i__27769_29167 = G__29172;
        continue;
      } else {
        var temp__4126__auto___29173 = cljs.core.seq.call(null, seq__27766_29164);
        if (temp__4126__auto___29173) {
          var seq__27766_29174__$1 = temp__4126__auto___29173;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__27766_29174__$1)) {
            var c__8291__auto___29175 = cljs.core.chunk_first.call(null, seq__27766_29174__$1);
            var G__29176 = cljs.core.chunk_rest.call(null, seq__27766_29174__$1);
            var G__29177 = c__8291__auto___29175;
            var G__29178 = cljs.core.count.call(null, c__8291__auto___29175);
            var G__29179 = 0;
            seq__27766_29164 = G__29176;
            chunk__27767_29165 = G__29177;
            count__27768_29166 = G__29178;
            i__27769_29167 = G__29179;
            continue;
          } else {
            var arg__13071__auto___29180 = cljs.core.first.call(null, seq__27766_29174__$1);
            a__13070__auto__.push(arg__13071__auto___29180);
            var G__29181 = cljs.core.next.call(null, seq__27766_29174__$1);
            var G__29182 = null;
            var G__29183 = 0;
            var G__29184 = 0;
            seq__27766_29164 = G__29181;
            chunk__27767_29165 = G__29182;
            count__27768_29166 = G__29183;
            i__27769_29167 = G__29184;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.dt.apply(null, a__13070__auto__);
  };
  var dt = function(var_args) {
    var args__13069__auto__ = null;
    if (arguments.length > 0) {
      var G__29185__i = 0, G__29185__a = new Array(arguments.length - 0);
      while (G__29185__i < G__29185__a.length) {
        G__29185__a[G__29185__i] = arguments[G__29185__i + 0];
        ++G__29185__i;
      }
      args__13069__auto__ = new cljs.core.IndexedSeq(G__29185__a, 0);
    }
    return dt__delegate.call(this, args__13069__auto__);
  };
  dt.cljs$lang$maxFixedArity = 0;
  dt.cljs$lang$applyTo = function(arglist__29186) {
    var args__13069__auto__ = cljs.core.seq(arglist__29186);
    return dt__delegate(args__13069__auto__);
  };
  dt.cljs$core$IFn$_invoke$arity$variadic = dt__delegate;
  return dt;
}();
quiescent.dom.em = function() {
  var em__delegate = function(args__13069__auto__) {
    var a__13070__auto__ = [];
    a__13070__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__13069__auto__)));
    var seq__27774_29187 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__13069__auto__));
    var chunk__27775_29188 = null;
    var count__27776_29189 = 0;
    var i__27777_29190 = 0;
    while (true) {
      if (i__27777_29190 < count__27776_29189) {
        var arg__13071__auto___29191 = cljs.core._nth.call(null, chunk__27775_29188, i__27777_29190);
        a__13070__auto__.push(arg__13071__auto___29191);
        var G__29192 = seq__27774_29187;
        var G__29193 = chunk__27775_29188;
        var G__29194 = count__27776_29189;
        var G__29195 = i__27777_29190 + 1;
        seq__27774_29187 = G__29192;
        chunk__27775_29188 = G__29193;
        count__27776_29189 = G__29194;
        i__27777_29190 = G__29195;
        continue;
      } else {
        var temp__4126__auto___29196 = cljs.core.seq.call(null, seq__27774_29187);
        if (temp__4126__auto___29196) {
          var seq__27774_29197__$1 = temp__4126__auto___29196;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__27774_29197__$1)) {
            var c__8291__auto___29198 = cljs.core.chunk_first.call(null, seq__27774_29197__$1);
            var G__29199 = cljs.core.chunk_rest.call(null, seq__27774_29197__$1);
            var G__29200 = c__8291__auto___29198;
            var G__29201 = cljs.core.count.call(null, c__8291__auto___29198);
            var G__29202 = 0;
            seq__27774_29187 = G__29199;
            chunk__27775_29188 = G__29200;
            count__27776_29189 = G__29201;
            i__27777_29190 = G__29202;
            continue;
          } else {
            var arg__13071__auto___29203 = cljs.core.first.call(null, seq__27774_29197__$1);
            a__13070__auto__.push(arg__13071__auto___29203);
            var G__29204 = cljs.core.next.call(null, seq__27774_29197__$1);
            var G__29205 = null;
            var G__29206 = 0;
            var G__29207 = 0;
            seq__27774_29187 = G__29204;
            chunk__27775_29188 = G__29205;
            count__27776_29189 = G__29206;
            i__27777_29190 = G__29207;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.em.apply(null, a__13070__auto__);
  };
  var em = function(var_args) {
    var args__13069__auto__ = null;
    if (arguments.length > 0) {
      var G__29208__i = 0, G__29208__a = new Array(arguments.length - 0);
      while (G__29208__i < G__29208__a.length) {
        G__29208__a[G__29208__i] = arguments[G__29208__i + 0];
        ++G__29208__i;
      }
      args__13069__auto__ = new cljs.core.IndexedSeq(G__29208__a, 0);
    }
    return em__delegate.call(this, args__13069__auto__);
  };
  em.cljs$lang$maxFixedArity = 0;
  em.cljs$lang$applyTo = function(arglist__29209) {
    var args__13069__auto__ = cljs.core.seq(arglist__29209);
    return em__delegate(args__13069__auto__);
  };
  em.cljs$core$IFn$_invoke$arity$variadic = em__delegate;
  return em;
}();
quiescent.dom.embed = function() {
  var embed__delegate = function(args__13069__auto__) {
    var a__13070__auto__ = [];
    a__13070__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__13069__auto__)));
    var seq__27790_29210 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__13069__auto__));
    var chunk__27791_29211 = null;
    var count__27792_29212 = 0;
    var i__27793_29213 = 0;
    while (true) {
      if (i__27793_29213 < count__27792_29212) {
        var arg__13071__auto___29214 = cljs.core._nth.call(null, chunk__27791_29211, i__27793_29213);
        a__13070__auto__.push(arg__13071__auto___29214);
        var G__29215 = seq__27790_29210;
        var G__29216 = chunk__27791_29211;
        var G__29217 = count__27792_29212;
        var G__29218 = i__27793_29213 + 1;
        seq__27790_29210 = G__29215;
        chunk__27791_29211 = G__29216;
        count__27792_29212 = G__29217;
        i__27793_29213 = G__29218;
        continue;
      } else {
        var temp__4126__auto___29219 = cljs.core.seq.call(null, seq__27790_29210);
        if (temp__4126__auto___29219) {
          var seq__27790_29220__$1 = temp__4126__auto___29219;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__27790_29220__$1)) {
            var c__8291__auto___29221 = cljs.core.chunk_first.call(null, seq__27790_29220__$1);
            var G__29222 = cljs.core.chunk_rest.call(null, seq__27790_29220__$1);
            var G__29223 = c__8291__auto___29221;
            var G__29224 = cljs.core.count.call(null, c__8291__auto___29221);
            var G__29225 = 0;
            seq__27790_29210 = G__29222;
            chunk__27791_29211 = G__29223;
            count__27792_29212 = G__29224;
            i__27793_29213 = G__29225;
            continue;
          } else {
            var arg__13071__auto___29226 = cljs.core.first.call(null, seq__27790_29220__$1);
            a__13070__auto__.push(arg__13071__auto___29226);
            var G__29227 = cljs.core.next.call(null, seq__27790_29220__$1);
            var G__29228 = null;
            var G__29229 = 0;
            var G__29230 = 0;
            seq__27790_29210 = G__29227;
            chunk__27791_29211 = G__29228;
            count__27792_29212 = G__29229;
            i__27793_29213 = G__29230;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.embed.apply(null, a__13070__auto__);
  };
  var embed = function(var_args) {
    var args__13069__auto__ = null;
    if (arguments.length > 0) {
      var G__29231__i = 0, G__29231__a = new Array(arguments.length - 0);
      while (G__29231__i < G__29231__a.length) {
        G__29231__a[G__29231__i] = arguments[G__29231__i + 0];
        ++G__29231__i;
      }
      args__13069__auto__ = new cljs.core.IndexedSeq(G__29231__a, 0);
    }
    return embed__delegate.call(this, args__13069__auto__);
  };
  embed.cljs$lang$maxFixedArity = 0;
  embed.cljs$lang$applyTo = function(arglist__29232) {
    var args__13069__auto__ = cljs.core.seq(arglist__29232);
    return embed__delegate(args__13069__auto__);
  };
  embed.cljs$core$IFn$_invoke$arity$variadic = embed__delegate;
  return embed;
}();
quiescent.dom.fieldset = function() {
  var fieldset__delegate = function(args__13069__auto__) {
    var a__13070__auto__ = [];
    a__13070__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__13069__auto__)));
    var seq__27798_29233 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__13069__auto__));
    var chunk__27799_29234 = null;
    var count__27800_29235 = 0;
    var i__27801_29236 = 0;
    while (true) {
      if (i__27801_29236 < count__27800_29235) {
        var arg__13071__auto___29237 = cljs.core._nth.call(null, chunk__27799_29234, i__27801_29236);
        a__13070__auto__.push(arg__13071__auto___29237);
        var G__29238 = seq__27798_29233;
        var G__29239 = chunk__27799_29234;
        var G__29240 = count__27800_29235;
        var G__29241 = i__27801_29236 + 1;
        seq__27798_29233 = G__29238;
        chunk__27799_29234 = G__29239;
        count__27800_29235 = G__29240;
        i__27801_29236 = G__29241;
        continue;
      } else {
        var temp__4126__auto___29242 = cljs.core.seq.call(null, seq__27798_29233);
        if (temp__4126__auto___29242) {
          var seq__27798_29243__$1 = temp__4126__auto___29242;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__27798_29243__$1)) {
            var c__8291__auto___29244 = cljs.core.chunk_first.call(null, seq__27798_29243__$1);
            var G__29245 = cljs.core.chunk_rest.call(null, seq__27798_29243__$1);
            var G__29246 = c__8291__auto___29244;
            var G__29247 = cljs.core.count.call(null, c__8291__auto___29244);
            var G__29248 = 0;
            seq__27798_29233 = G__29245;
            chunk__27799_29234 = G__29246;
            count__27800_29235 = G__29247;
            i__27801_29236 = G__29248;
            continue;
          } else {
            var arg__13071__auto___29249 = cljs.core.first.call(null, seq__27798_29243__$1);
            a__13070__auto__.push(arg__13071__auto___29249);
            var G__29250 = cljs.core.next.call(null, seq__27798_29243__$1);
            var G__29251 = null;
            var G__29252 = 0;
            var G__29253 = 0;
            seq__27798_29233 = G__29250;
            chunk__27799_29234 = G__29251;
            count__27800_29235 = G__29252;
            i__27801_29236 = G__29253;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.fieldset.apply(null, a__13070__auto__);
  };
  var fieldset = function(var_args) {
    var args__13069__auto__ = null;
    if (arguments.length > 0) {
      var G__29254__i = 0, G__29254__a = new Array(arguments.length - 0);
      while (G__29254__i < G__29254__a.length) {
        G__29254__a[G__29254__i] = arguments[G__29254__i + 0];
        ++G__29254__i;
      }
      args__13069__auto__ = new cljs.core.IndexedSeq(G__29254__a, 0);
    }
    return fieldset__delegate.call(this, args__13069__auto__);
  };
  fieldset.cljs$lang$maxFixedArity = 0;
  fieldset.cljs$lang$applyTo = function(arglist__29255) {
    var args__13069__auto__ = cljs.core.seq(arglist__29255);
    return fieldset__delegate(args__13069__auto__);
  };
  fieldset.cljs$core$IFn$_invoke$arity$variadic = fieldset__delegate;
  return fieldset;
}();
quiescent.dom.figcaption = function() {
  var figcaption__delegate = function(args__13069__auto__) {
    var a__13070__auto__ = [];
    a__13070__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__13069__auto__)));
    var seq__27806_29256 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__13069__auto__));
    var chunk__27807_29257 = null;
    var count__27808_29258 = 0;
    var i__27809_29259 = 0;
    while (true) {
      if (i__27809_29259 < count__27808_29258) {
        var arg__13071__auto___29260 = cljs.core._nth.call(null, chunk__27807_29257, i__27809_29259);
        a__13070__auto__.push(arg__13071__auto___29260);
        var G__29261 = seq__27806_29256;
        var G__29262 = chunk__27807_29257;
        var G__29263 = count__27808_29258;
        var G__29264 = i__27809_29259 + 1;
        seq__27806_29256 = G__29261;
        chunk__27807_29257 = G__29262;
        count__27808_29258 = G__29263;
        i__27809_29259 = G__29264;
        continue;
      } else {
        var temp__4126__auto___29265 = cljs.core.seq.call(null, seq__27806_29256);
        if (temp__4126__auto___29265) {
          var seq__27806_29266__$1 = temp__4126__auto___29265;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__27806_29266__$1)) {
            var c__8291__auto___29267 = cljs.core.chunk_first.call(null, seq__27806_29266__$1);
            var G__29268 = cljs.core.chunk_rest.call(null, seq__27806_29266__$1);
            var G__29269 = c__8291__auto___29267;
            var G__29270 = cljs.core.count.call(null, c__8291__auto___29267);
            var G__29271 = 0;
            seq__27806_29256 = G__29268;
            chunk__27807_29257 = G__29269;
            count__27808_29258 = G__29270;
            i__27809_29259 = G__29271;
            continue;
          } else {
            var arg__13071__auto___29272 = cljs.core.first.call(null, seq__27806_29266__$1);
            a__13070__auto__.push(arg__13071__auto___29272);
            var G__29273 = cljs.core.next.call(null, seq__27806_29266__$1);
            var G__29274 = null;
            var G__29275 = 0;
            var G__29276 = 0;
            seq__27806_29256 = G__29273;
            chunk__27807_29257 = G__29274;
            count__27808_29258 = G__29275;
            i__27809_29259 = G__29276;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.figcaption.apply(null, a__13070__auto__);
  };
  var figcaption = function(var_args) {
    var args__13069__auto__ = null;
    if (arguments.length > 0) {
      var G__29277__i = 0, G__29277__a = new Array(arguments.length - 0);
      while (G__29277__i < G__29277__a.length) {
        G__29277__a[G__29277__i] = arguments[G__29277__i + 0];
        ++G__29277__i;
      }
      args__13069__auto__ = new cljs.core.IndexedSeq(G__29277__a, 0);
    }
    return figcaption__delegate.call(this, args__13069__auto__);
  };
  figcaption.cljs$lang$maxFixedArity = 0;
  figcaption.cljs$lang$applyTo = function(arglist__29278) {
    var args__13069__auto__ = cljs.core.seq(arglist__29278);
    return figcaption__delegate(args__13069__auto__);
  };
  figcaption.cljs$core$IFn$_invoke$arity$variadic = figcaption__delegate;
  return figcaption;
}();
quiescent.dom.figure = function() {
  var figure__delegate = function(args__13069__auto__) {
    var a__13070__auto__ = [];
    a__13070__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__13069__auto__)));
    var seq__27814_29279 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__13069__auto__));
    var chunk__27815_29280 = null;
    var count__27816_29281 = 0;
    var i__27817_29282 = 0;
    while (true) {
      if (i__27817_29282 < count__27816_29281) {
        var arg__13071__auto___29283 = cljs.core._nth.call(null, chunk__27815_29280, i__27817_29282);
        a__13070__auto__.push(arg__13071__auto___29283);
        var G__29284 = seq__27814_29279;
        var G__29285 = chunk__27815_29280;
        var G__29286 = count__27816_29281;
        var G__29287 = i__27817_29282 + 1;
        seq__27814_29279 = G__29284;
        chunk__27815_29280 = G__29285;
        count__27816_29281 = G__29286;
        i__27817_29282 = G__29287;
        continue;
      } else {
        var temp__4126__auto___29288 = cljs.core.seq.call(null, seq__27814_29279);
        if (temp__4126__auto___29288) {
          var seq__27814_29289__$1 = temp__4126__auto___29288;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__27814_29289__$1)) {
            var c__8291__auto___29290 = cljs.core.chunk_first.call(null, seq__27814_29289__$1);
            var G__29291 = cljs.core.chunk_rest.call(null, seq__27814_29289__$1);
            var G__29292 = c__8291__auto___29290;
            var G__29293 = cljs.core.count.call(null, c__8291__auto___29290);
            var G__29294 = 0;
            seq__27814_29279 = G__29291;
            chunk__27815_29280 = G__29292;
            count__27816_29281 = G__29293;
            i__27817_29282 = G__29294;
            continue;
          } else {
            var arg__13071__auto___29295 = cljs.core.first.call(null, seq__27814_29289__$1);
            a__13070__auto__.push(arg__13071__auto___29295);
            var G__29296 = cljs.core.next.call(null, seq__27814_29289__$1);
            var G__29297 = null;
            var G__29298 = 0;
            var G__29299 = 0;
            seq__27814_29279 = G__29296;
            chunk__27815_29280 = G__29297;
            count__27816_29281 = G__29298;
            i__27817_29282 = G__29299;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.figure.apply(null, a__13070__auto__);
  };
  var figure = function(var_args) {
    var args__13069__auto__ = null;
    if (arguments.length > 0) {
      var G__29300__i = 0, G__29300__a = new Array(arguments.length - 0);
      while (G__29300__i < G__29300__a.length) {
        G__29300__a[G__29300__i] = arguments[G__29300__i + 0];
        ++G__29300__i;
      }
      args__13069__auto__ = new cljs.core.IndexedSeq(G__29300__a, 0);
    }
    return figure__delegate.call(this, args__13069__auto__);
  };
  figure.cljs$lang$maxFixedArity = 0;
  figure.cljs$lang$applyTo = function(arglist__29301) {
    var args__13069__auto__ = cljs.core.seq(arglist__29301);
    return figure__delegate(args__13069__auto__);
  };
  figure.cljs$core$IFn$_invoke$arity$variadic = figure__delegate;
  return figure;
}();
quiescent.dom.footer = function() {
  var footer__delegate = function(args__13069__auto__) {
    var a__13070__auto__ = [];
    a__13070__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__13069__auto__)));
    var seq__27822_29302 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__13069__auto__));
    var chunk__27823_29303 = null;
    var count__27824_29304 = 0;
    var i__27825_29305 = 0;
    while (true) {
      if (i__27825_29305 < count__27824_29304) {
        var arg__13071__auto___29306 = cljs.core._nth.call(null, chunk__27823_29303, i__27825_29305);
        a__13070__auto__.push(arg__13071__auto___29306);
        var G__29307 = seq__27822_29302;
        var G__29308 = chunk__27823_29303;
        var G__29309 = count__27824_29304;
        var G__29310 = i__27825_29305 + 1;
        seq__27822_29302 = G__29307;
        chunk__27823_29303 = G__29308;
        count__27824_29304 = G__29309;
        i__27825_29305 = G__29310;
        continue;
      } else {
        var temp__4126__auto___29311 = cljs.core.seq.call(null, seq__27822_29302);
        if (temp__4126__auto___29311) {
          var seq__27822_29312__$1 = temp__4126__auto___29311;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__27822_29312__$1)) {
            var c__8291__auto___29313 = cljs.core.chunk_first.call(null, seq__27822_29312__$1);
            var G__29314 = cljs.core.chunk_rest.call(null, seq__27822_29312__$1);
            var G__29315 = c__8291__auto___29313;
            var G__29316 = cljs.core.count.call(null, c__8291__auto___29313);
            var G__29317 = 0;
            seq__27822_29302 = G__29314;
            chunk__27823_29303 = G__29315;
            count__27824_29304 = G__29316;
            i__27825_29305 = G__29317;
            continue;
          } else {
            var arg__13071__auto___29318 = cljs.core.first.call(null, seq__27822_29312__$1);
            a__13070__auto__.push(arg__13071__auto___29318);
            var G__29319 = cljs.core.next.call(null, seq__27822_29312__$1);
            var G__29320 = null;
            var G__29321 = 0;
            var G__29322 = 0;
            seq__27822_29302 = G__29319;
            chunk__27823_29303 = G__29320;
            count__27824_29304 = G__29321;
            i__27825_29305 = G__29322;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.footer.apply(null, a__13070__auto__);
  };
  var footer = function(var_args) {
    var args__13069__auto__ = null;
    if (arguments.length > 0) {
      var G__29323__i = 0, G__29323__a = new Array(arguments.length - 0);
      while (G__29323__i < G__29323__a.length) {
        G__29323__a[G__29323__i] = arguments[G__29323__i + 0];
        ++G__29323__i;
      }
      args__13069__auto__ = new cljs.core.IndexedSeq(G__29323__a, 0);
    }
    return footer__delegate.call(this, args__13069__auto__);
  };
  footer.cljs$lang$maxFixedArity = 0;
  footer.cljs$lang$applyTo = function(arglist__29324) {
    var args__13069__auto__ = cljs.core.seq(arglist__29324);
    return footer__delegate(args__13069__auto__);
  };
  footer.cljs$core$IFn$_invoke$arity$variadic = footer__delegate;
  return footer;
}();
quiescent.dom.form = function() {
  var form__delegate = function(args__13069__auto__) {
    var a__13070__auto__ = [];
    a__13070__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__13069__auto__)));
    var seq__27830_29325 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__13069__auto__));
    var chunk__27831_29326 = null;
    var count__27832_29327 = 0;
    var i__27833_29328 = 0;
    while (true) {
      if (i__27833_29328 < count__27832_29327) {
        var arg__13071__auto___29329 = cljs.core._nth.call(null, chunk__27831_29326, i__27833_29328);
        a__13070__auto__.push(arg__13071__auto___29329);
        var G__29330 = seq__27830_29325;
        var G__29331 = chunk__27831_29326;
        var G__29332 = count__27832_29327;
        var G__29333 = i__27833_29328 + 1;
        seq__27830_29325 = G__29330;
        chunk__27831_29326 = G__29331;
        count__27832_29327 = G__29332;
        i__27833_29328 = G__29333;
        continue;
      } else {
        var temp__4126__auto___29334 = cljs.core.seq.call(null, seq__27830_29325);
        if (temp__4126__auto___29334) {
          var seq__27830_29335__$1 = temp__4126__auto___29334;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__27830_29335__$1)) {
            var c__8291__auto___29336 = cljs.core.chunk_first.call(null, seq__27830_29335__$1);
            var G__29337 = cljs.core.chunk_rest.call(null, seq__27830_29335__$1);
            var G__29338 = c__8291__auto___29336;
            var G__29339 = cljs.core.count.call(null, c__8291__auto___29336);
            var G__29340 = 0;
            seq__27830_29325 = G__29337;
            chunk__27831_29326 = G__29338;
            count__27832_29327 = G__29339;
            i__27833_29328 = G__29340;
            continue;
          } else {
            var arg__13071__auto___29341 = cljs.core.first.call(null, seq__27830_29335__$1);
            a__13070__auto__.push(arg__13071__auto___29341);
            var G__29342 = cljs.core.next.call(null, seq__27830_29335__$1);
            var G__29343 = null;
            var G__29344 = 0;
            var G__29345 = 0;
            seq__27830_29325 = G__29342;
            chunk__27831_29326 = G__29343;
            count__27832_29327 = G__29344;
            i__27833_29328 = G__29345;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.form.apply(null, a__13070__auto__);
  };
  var form = function(var_args) {
    var args__13069__auto__ = null;
    if (arguments.length > 0) {
      var G__29346__i = 0, G__29346__a = new Array(arguments.length - 0);
      while (G__29346__i < G__29346__a.length) {
        G__29346__a[G__29346__i] = arguments[G__29346__i + 0];
        ++G__29346__i;
      }
      args__13069__auto__ = new cljs.core.IndexedSeq(G__29346__a, 0);
    }
    return form__delegate.call(this, args__13069__auto__);
  };
  form.cljs$lang$maxFixedArity = 0;
  form.cljs$lang$applyTo = function(arglist__29347) {
    var args__13069__auto__ = cljs.core.seq(arglist__29347);
    return form__delegate(args__13069__auto__);
  };
  form.cljs$core$IFn$_invoke$arity$variadic = form__delegate;
  return form;
}();
quiescent.dom.h1 = function() {
  var h1__delegate = function(args__13069__auto__) {
    var a__13070__auto__ = [];
    a__13070__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__13069__auto__)));
    var seq__27838_29348 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__13069__auto__));
    var chunk__27839_29349 = null;
    var count__27840_29350 = 0;
    var i__27841_29351 = 0;
    while (true) {
      if (i__27841_29351 < count__27840_29350) {
        var arg__13071__auto___29352 = cljs.core._nth.call(null, chunk__27839_29349, i__27841_29351);
        a__13070__auto__.push(arg__13071__auto___29352);
        var G__29353 = seq__27838_29348;
        var G__29354 = chunk__27839_29349;
        var G__29355 = count__27840_29350;
        var G__29356 = i__27841_29351 + 1;
        seq__27838_29348 = G__29353;
        chunk__27839_29349 = G__29354;
        count__27840_29350 = G__29355;
        i__27841_29351 = G__29356;
        continue;
      } else {
        var temp__4126__auto___29357 = cljs.core.seq.call(null, seq__27838_29348);
        if (temp__4126__auto___29357) {
          var seq__27838_29358__$1 = temp__4126__auto___29357;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__27838_29358__$1)) {
            var c__8291__auto___29359 = cljs.core.chunk_first.call(null, seq__27838_29358__$1);
            var G__29360 = cljs.core.chunk_rest.call(null, seq__27838_29358__$1);
            var G__29361 = c__8291__auto___29359;
            var G__29362 = cljs.core.count.call(null, c__8291__auto___29359);
            var G__29363 = 0;
            seq__27838_29348 = G__29360;
            chunk__27839_29349 = G__29361;
            count__27840_29350 = G__29362;
            i__27841_29351 = G__29363;
            continue;
          } else {
            var arg__13071__auto___29364 = cljs.core.first.call(null, seq__27838_29358__$1);
            a__13070__auto__.push(arg__13071__auto___29364);
            var G__29365 = cljs.core.next.call(null, seq__27838_29358__$1);
            var G__29366 = null;
            var G__29367 = 0;
            var G__29368 = 0;
            seq__27838_29348 = G__29365;
            chunk__27839_29349 = G__29366;
            count__27840_29350 = G__29367;
            i__27841_29351 = G__29368;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.h1.apply(null, a__13070__auto__);
  };
  var h1 = function(var_args) {
    var args__13069__auto__ = null;
    if (arguments.length > 0) {
      var G__29369__i = 0, G__29369__a = new Array(arguments.length - 0);
      while (G__29369__i < G__29369__a.length) {
        G__29369__a[G__29369__i] = arguments[G__29369__i + 0];
        ++G__29369__i;
      }
      args__13069__auto__ = new cljs.core.IndexedSeq(G__29369__a, 0);
    }
    return h1__delegate.call(this, args__13069__auto__);
  };
  h1.cljs$lang$maxFixedArity = 0;
  h1.cljs$lang$applyTo = function(arglist__29370) {
    var args__13069__auto__ = cljs.core.seq(arglist__29370);
    return h1__delegate(args__13069__auto__);
  };
  h1.cljs$core$IFn$_invoke$arity$variadic = h1__delegate;
  return h1;
}();
quiescent.dom.h2 = function() {
  var h2__delegate = function(args__13069__auto__) {
    var a__13070__auto__ = [];
    a__13070__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__13069__auto__)));
    var seq__27846_29371 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__13069__auto__));
    var chunk__27847_29372 = null;
    var count__27848_29373 = 0;
    var i__27849_29374 = 0;
    while (true) {
      if (i__27849_29374 < count__27848_29373) {
        var arg__13071__auto___29375 = cljs.core._nth.call(null, chunk__27847_29372, i__27849_29374);
        a__13070__auto__.push(arg__13071__auto___29375);
        var G__29376 = seq__27846_29371;
        var G__29377 = chunk__27847_29372;
        var G__29378 = count__27848_29373;
        var G__29379 = i__27849_29374 + 1;
        seq__27846_29371 = G__29376;
        chunk__27847_29372 = G__29377;
        count__27848_29373 = G__29378;
        i__27849_29374 = G__29379;
        continue;
      } else {
        var temp__4126__auto___29380 = cljs.core.seq.call(null, seq__27846_29371);
        if (temp__4126__auto___29380) {
          var seq__27846_29381__$1 = temp__4126__auto___29380;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__27846_29381__$1)) {
            var c__8291__auto___29382 = cljs.core.chunk_first.call(null, seq__27846_29381__$1);
            var G__29383 = cljs.core.chunk_rest.call(null, seq__27846_29381__$1);
            var G__29384 = c__8291__auto___29382;
            var G__29385 = cljs.core.count.call(null, c__8291__auto___29382);
            var G__29386 = 0;
            seq__27846_29371 = G__29383;
            chunk__27847_29372 = G__29384;
            count__27848_29373 = G__29385;
            i__27849_29374 = G__29386;
            continue;
          } else {
            var arg__13071__auto___29387 = cljs.core.first.call(null, seq__27846_29381__$1);
            a__13070__auto__.push(arg__13071__auto___29387);
            var G__29388 = cljs.core.next.call(null, seq__27846_29381__$1);
            var G__29389 = null;
            var G__29390 = 0;
            var G__29391 = 0;
            seq__27846_29371 = G__29388;
            chunk__27847_29372 = G__29389;
            count__27848_29373 = G__29390;
            i__27849_29374 = G__29391;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.h2.apply(null, a__13070__auto__);
  };
  var h2 = function(var_args) {
    var args__13069__auto__ = null;
    if (arguments.length > 0) {
      var G__29392__i = 0, G__29392__a = new Array(arguments.length - 0);
      while (G__29392__i < G__29392__a.length) {
        G__29392__a[G__29392__i] = arguments[G__29392__i + 0];
        ++G__29392__i;
      }
      args__13069__auto__ = new cljs.core.IndexedSeq(G__29392__a, 0);
    }
    return h2__delegate.call(this, args__13069__auto__);
  };
  h2.cljs$lang$maxFixedArity = 0;
  h2.cljs$lang$applyTo = function(arglist__29393) {
    var args__13069__auto__ = cljs.core.seq(arglist__29393);
    return h2__delegate(args__13069__auto__);
  };
  h2.cljs$core$IFn$_invoke$arity$variadic = h2__delegate;
  return h2;
}();
quiescent.dom.h3 = function() {
  var h3__delegate = function(args__13069__auto__) {
    var a__13070__auto__ = [];
    a__13070__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__13069__auto__)));
    var seq__27854_29394 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__13069__auto__));
    var chunk__27855_29395 = null;
    var count__27856_29396 = 0;
    var i__27857_29397 = 0;
    while (true) {
      if (i__27857_29397 < count__27856_29396) {
        var arg__13071__auto___29398 = cljs.core._nth.call(null, chunk__27855_29395, i__27857_29397);
        a__13070__auto__.push(arg__13071__auto___29398);
        var G__29399 = seq__27854_29394;
        var G__29400 = chunk__27855_29395;
        var G__29401 = count__27856_29396;
        var G__29402 = i__27857_29397 + 1;
        seq__27854_29394 = G__29399;
        chunk__27855_29395 = G__29400;
        count__27856_29396 = G__29401;
        i__27857_29397 = G__29402;
        continue;
      } else {
        var temp__4126__auto___29403 = cljs.core.seq.call(null, seq__27854_29394);
        if (temp__4126__auto___29403) {
          var seq__27854_29404__$1 = temp__4126__auto___29403;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__27854_29404__$1)) {
            var c__8291__auto___29405 = cljs.core.chunk_first.call(null, seq__27854_29404__$1);
            var G__29406 = cljs.core.chunk_rest.call(null, seq__27854_29404__$1);
            var G__29407 = c__8291__auto___29405;
            var G__29408 = cljs.core.count.call(null, c__8291__auto___29405);
            var G__29409 = 0;
            seq__27854_29394 = G__29406;
            chunk__27855_29395 = G__29407;
            count__27856_29396 = G__29408;
            i__27857_29397 = G__29409;
            continue;
          } else {
            var arg__13071__auto___29410 = cljs.core.first.call(null, seq__27854_29404__$1);
            a__13070__auto__.push(arg__13071__auto___29410);
            var G__29411 = cljs.core.next.call(null, seq__27854_29404__$1);
            var G__29412 = null;
            var G__29413 = 0;
            var G__29414 = 0;
            seq__27854_29394 = G__29411;
            chunk__27855_29395 = G__29412;
            count__27856_29396 = G__29413;
            i__27857_29397 = G__29414;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.h3.apply(null, a__13070__auto__);
  };
  var h3 = function(var_args) {
    var args__13069__auto__ = null;
    if (arguments.length > 0) {
      var G__29415__i = 0, G__29415__a = new Array(arguments.length - 0);
      while (G__29415__i < G__29415__a.length) {
        G__29415__a[G__29415__i] = arguments[G__29415__i + 0];
        ++G__29415__i;
      }
      args__13069__auto__ = new cljs.core.IndexedSeq(G__29415__a, 0);
    }
    return h3__delegate.call(this, args__13069__auto__);
  };
  h3.cljs$lang$maxFixedArity = 0;
  h3.cljs$lang$applyTo = function(arglist__29416) {
    var args__13069__auto__ = cljs.core.seq(arglist__29416);
    return h3__delegate(args__13069__auto__);
  };
  h3.cljs$core$IFn$_invoke$arity$variadic = h3__delegate;
  return h3;
}();
quiescent.dom.h4 = function() {
  var h4__delegate = function(args__13069__auto__) {
    var a__13070__auto__ = [];
    a__13070__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__13069__auto__)));
    var seq__27862_29417 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__13069__auto__));
    var chunk__27863_29418 = null;
    var count__27864_29419 = 0;
    var i__27865_29420 = 0;
    while (true) {
      if (i__27865_29420 < count__27864_29419) {
        var arg__13071__auto___29421 = cljs.core._nth.call(null, chunk__27863_29418, i__27865_29420);
        a__13070__auto__.push(arg__13071__auto___29421);
        var G__29422 = seq__27862_29417;
        var G__29423 = chunk__27863_29418;
        var G__29424 = count__27864_29419;
        var G__29425 = i__27865_29420 + 1;
        seq__27862_29417 = G__29422;
        chunk__27863_29418 = G__29423;
        count__27864_29419 = G__29424;
        i__27865_29420 = G__29425;
        continue;
      } else {
        var temp__4126__auto___29426 = cljs.core.seq.call(null, seq__27862_29417);
        if (temp__4126__auto___29426) {
          var seq__27862_29427__$1 = temp__4126__auto___29426;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__27862_29427__$1)) {
            var c__8291__auto___29428 = cljs.core.chunk_first.call(null, seq__27862_29427__$1);
            var G__29429 = cljs.core.chunk_rest.call(null, seq__27862_29427__$1);
            var G__29430 = c__8291__auto___29428;
            var G__29431 = cljs.core.count.call(null, c__8291__auto___29428);
            var G__29432 = 0;
            seq__27862_29417 = G__29429;
            chunk__27863_29418 = G__29430;
            count__27864_29419 = G__29431;
            i__27865_29420 = G__29432;
            continue;
          } else {
            var arg__13071__auto___29433 = cljs.core.first.call(null, seq__27862_29427__$1);
            a__13070__auto__.push(arg__13071__auto___29433);
            var G__29434 = cljs.core.next.call(null, seq__27862_29427__$1);
            var G__29435 = null;
            var G__29436 = 0;
            var G__29437 = 0;
            seq__27862_29417 = G__29434;
            chunk__27863_29418 = G__29435;
            count__27864_29419 = G__29436;
            i__27865_29420 = G__29437;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.h4.apply(null, a__13070__auto__);
  };
  var h4 = function(var_args) {
    var args__13069__auto__ = null;
    if (arguments.length > 0) {
      var G__29438__i = 0, G__29438__a = new Array(arguments.length - 0);
      while (G__29438__i < G__29438__a.length) {
        G__29438__a[G__29438__i] = arguments[G__29438__i + 0];
        ++G__29438__i;
      }
      args__13069__auto__ = new cljs.core.IndexedSeq(G__29438__a, 0);
    }
    return h4__delegate.call(this, args__13069__auto__);
  };
  h4.cljs$lang$maxFixedArity = 0;
  h4.cljs$lang$applyTo = function(arglist__29439) {
    var args__13069__auto__ = cljs.core.seq(arglist__29439);
    return h4__delegate(args__13069__auto__);
  };
  h4.cljs$core$IFn$_invoke$arity$variadic = h4__delegate;
  return h4;
}();
quiescent.dom.h5 = function() {
  var h5__delegate = function(args__13069__auto__) {
    var a__13070__auto__ = [];
    a__13070__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__13069__auto__)));
    var seq__27870_29440 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__13069__auto__));
    var chunk__27871_29441 = null;
    var count__27872_29442 = 0;
    var i__27873_29443 = 0;
    while (true) {
      if (i__27873_29443 < count__27872_29442) {
        var arg__13071__auto___29444 = cljs.core._nth.call(null, chunk__27871_29441, i__27873_29443);
        a__13070__auto__.push(arg__13071__auto___29444);
        var G__29445 = seq__27870_29440;
        var G__29446 = chunk__27871_29441;
        var G__29447 = count__27872_29442;
        var G__29448 = i__27873_29443 + 1;
        seq__27870_29440 = G__29445;
        chunk__27871_29441 = G__29446;
        count__27872_29442 = G__29447;
        i__27873_29443 = G__29448;
        continue;
      } else {
        var temp__4126__auto___29449 = cljs.core.seq.call(null, seq__27870_29440);
        if (temp__4126__auto___29449) {
          var seq__27870_29450__$1 = temp__4126__auto___29449;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__27870_29450__$1)) {
            var c__8291__auto___29451 = cljs.core.chunk_first.call(null, seq__27870_29450__$1);
            var G__29452 = cljs.core.chunk_rest.call(null, seq__27870_29450__$1);
            var G__29453 = c__8291__auto___29451;
            var G__29454 = cljs.core.count.call(null, c__8291__auto___29451);
            var G__29455 = 0;
            seq__27870_29440 = G__29452;
            chunk__27871_29441 = G__29453;
            count__27872_29442 = G__29454;
            i__27873_29443 = G__29455;
            continue;
          } else {
            var arg__13071__auto___29456 = cljs.core.first.call(null, seq__27870_29450__$1);
            a__13070__auto__.push(arg__13071__auto___29456);
            var G__29457 = cljs.core.next.call(null, seq__27870_29450__$1);
            var G__29458 = null;
            var G__29459 = 0;
            var G__29460 = 0;
            seq__27870_29440 = G__29457;
            chunk__27871_29441 = G__29458;
            count__27872_29442 = G__29459;
            i__27873_29443 = G__29460;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.h5.apply(null, a__13070__auto__);
  };
  var h5 = function(var_args) {
    var args__13069__auto__ = null;
    if (arguments.length > 0) {
      var G__29461__i = 0, G__29461__a = new Array(arguments.length - 0);
      while (G__29461__i < G__29461__a.length) {
        G__29461__a[G__29461__i] = arguments[G__29461__i + 0];
        ++G__29461__i;
      }
      args__13069__auto__ = new cljs.core.IndexedSeq(G__29461__a, 0);
    }
    return h5__delegate.call(this, args__13069__auto__);
  };
  h5.cljs$lang$maxFixedArity = 0;
  h5.cljs$lang$applyTo = function(arglist__29462) {
    var args__13069__auto__ = cljs.core.seq(arglist__29462);
    return h5__delegate(args__13069__auto__);
  };
  h5.cljs$core$IFn$_invoke$arity$variadic = h5__delegate;
  return h5;
}();
quiescent.dom.h6 = function() {
  var h6__delegate = function(args__13069__auto__) {
    var a__13070__auto__ = [];
    a__13070__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__13069__auto__)));
    var seq__27878_29463 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__13069__auto__));
    var chunk__27879_29464 = null;
    var count__27880_29465 = 0;
    var i__27881_29466 = 0;
    while (true) {
      if (i__27881_29466 < count__27880_29465) {
        var arg__13071__auto___29467 = cljs.core._nth.call(null, chunk__27879_29464, i__27881_29466);
        a__13070__auto__.push(arg__13071__auto___29467);
        var G__29468 = seq__27878_29463;
        var G__29469 = chunk__27879_29464;
        var G__29470 = count__27880_29465;
        var G__29471 = i__27881_29466 + 1;
        seq__27878_29463 = G__29468;
        chunk__27879_29464 = G__29469;
        count__27880_29465 = G__29470;
        i__27881_29466 = G__29471;
        continue;
      } else {
        var temp__4126__auto___29472 = cljs.core.seq.call(null, seq__27878_29463);
        if (temp__4126__auto___29472) {
          var seq__27878_29473__$1 = temp__4126__auto___29472;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__27878_29473__$1)) {
            var c__8291__auto___29474 = cljs.core.chunk_first.call(null, seq__27878_29473__$1);
            var G__29475 = cljs.core.chunk_rest.call(null, seq__27878_29473__$1);
            var G__29476 = c__8291__auto___29474;
            var G__29477 = cljs.core.count.call(null, c__8291__auto___29474);
            var G__29478 = 0;
            seq__27878_29463 = G__29475;
            chunk__27879_29464 = G__29476;
            count__27880_29465 = G__29477;
            i__27881_29466 = G__29478;
            continue;
          } else {
            var arg__13071__auto___29479 = cljs.core.first.call(null, seq__27878_29473__$1);
            a__13070__auto__.push(arg__13071__auto___29479);
            var G__29480 = cljs.core.next.call(null, seq__27878_29473__$1);
            var G__29481 = null;
            var G__29482 = 0;
            var G__29483 = 0;
            seq__27878_29463 = G__29480;
            chunk__27879_29464 = G__29481;
            count__27880_29465 = G__29482;
            i__27881_29466 = G__29483;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.h6.apply(null, a__13070__auto__);
  };
  var h6 = function(var_args) {
    var args__13069__auto__ = null;
    if (arguments.length > 0) {
      var G__29484__i = 0, G__29484__a = new Array(arguments.length - 0);
      while (G__29484__i < G__29484__a.length) {
        G__29484__a[G__29484__i] = arguments[G__29484__i + 0];
        ++G__29484__i;
      }
      args__13069__auto__ = new cljs.core.IndexedSeq(G__29484__a, 0);
    }
    return h6__delegate.call(this, args__13069__auto__);
  };
  h6.cljs$lang$maxFixedArity = 0;
  h6.cljs$lang$applyTo = function(arglist__29485) {
    var args__13069__auto__ = cljs.core.seq(arglist__29485);
    return h6__delegate(args__13069__auto__);
  };
  h6.cljs$core$IFn$_invoke$arity$variadic = h6__delegate;
  return h6;
}();
quiescent.dom.head = function() {
  var head__delegate = function(args__13069__auto__) {
    var a__13070__auto__ = [];
    a__13070__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__13069__auto__)));
    var seq__27886_29486 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__13069__auto__));
    var chunk__27887_29487 = null;
    var count__27888_29488 = 0;
    var i__27889_29489 = 0;
    while (true) {
      if (i__27889_29489 < count__27888_29488) {
        var arg__13071__auto___29490 = cljs.core._nth.call(null, chunk__27887_29487, i__27889_29489);
        a__13070__auto__.push(arg__13071__auto___29490);
        var G__29491 = seq__27886_29486;
        var G__29492 = chunk__27887_29487;
        var G__29493 = count__27888_29488;
        var G__29494 = i__27889_29489 + 1;
        seq__27886_29486 = G__29491;
        chunk__27887_29487 = G__29492;
        count__27888_29488 = G__29493;
        i__27889_29489 = G__29494;
        continue;
      } else {
        var temp__4126__auto___29495 = cljs.core.seq.call(null, seq__27886_29486);
        if (temp__4126__auto___29495) {
          var seq__27886_29496__$1 = temp__4126__auto___29495;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__27886_29496__$1)) {
            var c__8291__auto___29497 = cljs.core.chunk_first.call(null, seq__27886_29496__$1);
            var G__29498 = cljs.core.chunk_rest.call(null, seq__27886_29496__$1);
            var G__29499 = c__8291__auto___29497;
            var G__29500 = cljs.core.count.call(null, c__8291__auto___29497);
            var G__29501 = 0;
            seq__27886_29486 = G__29498;
            chunk__27887_29487 = G__29499;
            count__27888_29488 = G__29500;
            i__27889_29489 = G__29501;
            continue;
          } else {
            var arg__13071__auto___29502 = cljs.core.first.call(null, seq__27886_29496__$1);
            a__13070__auto__.push(arg__13071__auto___29502);
            var G__29503 = cljs.core.next.call(null, seq__27886_29496__$1);
            var G__29504 = null;
            var G__29505 = 0;
            var G__29506 = 0;
            seq__27886_29486 = G__29503;
            chunk__27887_29487 = G__29504;
            count__27888_29488 = G__29505;
            i__27889_29489 = G__29506;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.head.apply(null, a__13070__auto__);
  };
  var head = function(var_args) {
    var args__13069__auto__ = null;
    if (arguments.length > 0) {
      var G__29507__i = 0, G__29507__a = new Array(arguments.length - 0);
      while (G__29507__i < G__29507__a.length) {
        G__29507__a[G__29507__i] = arguments[G__29507__i + 0];
        ++G__29507__i;
      }
      args__13069__auto__ = new cljs.core.IndexedSeq(G__29507__a, 0);
    }
    return head__delegate.call(this, args__13069__auto__);
  };
  head.cljs$lang$maxFixedArity = 0;
  head.cljs$lang$applyTo = function(arglist__29508) {
    var args__13069__auto__ = cljs.core.seq(arglist__29508);
    return head__delegate(args__13069__auto__);
  };
  head.cljs$core$IFn$_invoke$arity$variadic = head__delegate;
  return head;
}();
quiescent.dom.header = function() {
  var header__delegate = function(args__13069__auto__) {
    var a__13070__auto__ = [];
    a__13070__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__13069__auto__)));
    var seq__27894_29509 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__13069__auto__));
    var chunk__27895_29510 = null;
    var count__27896_29511 = 0;
    var i__27897_29512 = 0;
    while (true) {
      if (i__27897_29512 < count__27896_29511) {
        var arg__13071__auto___29513 = cljs.core._nth.call(null, chunk__27895_29510, i__27897_29512);
        a__13070__auto__.push(arg__13071__auto___29513);
        var G__29514 = seq__27894_29509;
        var G__29515 = chunk__27895_29510;
        var G__29516 = count__27896_29511;
        var G__29517 = i__27897_29512 + 1;
        seq__27894_29509 = G__29514;
        chunk__27895_29510 = G__29515;
        count__27896_29511 = G__29516;
        i__27897_29512 = G__29517;
        continue;
      } else {
        var temp__4126__auto___29518 = cljs.core.seq.call(null, seq__27894_29509);
        if (temp__4126__auto___29518) {
          var seq__27894_29519__$1 = temp__4126__auto___29518;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__27894_29519__$1)) {
            var c__8291__auto___29520 = cljs.core.chunk_first.call(null, seq__27894_29519__$1);
            var G__29521 = cljs.core.chunk_rest.call(null, seq__27894_29519__$1);
            var G__29522 = c__8291__auto___29520;
            var G__29523 = cljs.core.count.call(null, c__8291__auto___29520);
            var G__29524 = 0;
            seq__27894_29509 = G__29521;
            chunk__27895_29510 = G__29522;
            count__27896_29511 = G__29523;
            i__27897_29512 = G__29524;
            continue;
          } else {
            var arg__13071__auto___29525 = cljs.core.first.call(null, seq__27894_29519__$1);
            a__13070__auto__.push(arg__13071__auto___29525);
            var G__29526 = cljs.core.next.call(null, seq__27894_29519__$1);
            var G__29527 = null;
            var G__29528 = 0;
            var G__29529 = 0;
            seq__27894_29509 = G__29526;
            chunk__27895_29510 = G__29527;
            count__27896_29511 = G__29528;
            i__27897_29512 = G__29529;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.header.apply(null, a__13070__auto__);
  };
  var header = function(var_args) {
    var args__13069__auto__ = null;
    if (arguments.length > 0) {
      var G__29530__i = 0, G__29530__a = new Array(arguments.length - 0);
      while (G__29530__i < G__29530__a.length) {
        G__29530__a[G__29530__i] = arguments[G__29530__i + 0];
        ++G__29530__i;
      }
      args__13069__auto__ = new cljs.core.IndexedSeq(G__29530__a, 0);
    }
    return header__delegate.call(this, args__13069__auto__);
  };
  header.cljs$lang$maxFixedArity = 0;
  header.cljs$lang$applyTo = function(arglist__29531) {
    var args__13069__auto__ = cljs.core.seq(arglist__29531);
    return header__delegate(args__13069__auto__);
  };
  header.cljs$core$IFn$_invoke$arity$variadic = header__delegate;
  return header;
}();
quiescent.dom.hr = function() {
  var hr__delegate = function(args__13069__auto__) {
    var a__13070__auto__ = [];
    a__13070__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__13069__auto__)));
    var seq__27902_29532 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__13069__auto__));
    var chunk__27903_29533 = null;
    var count__27904_29534 = 0;
    var i__27905_29535 = 0;
    while (true) {
      if (i__27905_29535 < count__27904_29534) {
        var arg__13071__auto___29536 = cljs.core._nth.call(null, chunk__27903_29533, i__27905_29535);
        a__13070__auto__.push(arg__13071__auto___29536);
        var G__29537 = seq__27902_29532;
        var G__29538 = chunk__27903_29533;
        var G__29539 = count__27904_29534;
        var G__29540 = i__27905_29535 + 1;
        seq__27902_29532 = G__29537;
        chunk__27903_29533 = G__29538;
        count__27904_29534 = G__29539;
        i__27905_29535 = G__29540;
        continue;
      } else {
        var temp__4126__auto___29541 = cljs.core.seq.call(null, seq__27902_29532);
        if (temp__4126__auto___29541) {
          var seq__27902_29542__$1 = temp__4126__auto___29541;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__27902_29542__$1)) {
            var c__8291__auto___29543 = cljs.core.chunk_first.call(null, seq__27902_29542__$1);
            var G__29544 = cljs.core.chunk_rest.call(null, seq__27902_29542__$1);
            var G__29545 = c__8291__auto___29543;
            var G__29546 = cljs.core.count.call(null, c__8291__auto___29543);
            var G__29547 = 0;
            seq__27902_29532 = G__29544;
            chunk__27903_29533 = G__29545;
            count__27904_29534 = G__29546;
            i__27905_29535 = G__29547;
            continue;
          } else {
            var arg__13071__auto___29548 = cljs.core.first.call(null, seq__27902_29542__$1);
            a__13070__auto__.push(arg__13071__auto___29548);
            var G__29549 = cljs.core.next.call(null, seq__27902_29542__$1);
            var G__29550 = null;
            var G__29551 = 0;
            var G__29552 = 0;
            seq__27902_29532 = G__29549;
            chunk__27903_29533 = G__29550;
            count__27904_29534 = G__29551;
            i__27905_29535 = G__29552;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.hr.apply(null, a__13070__auto__);
  };
  var hr = function(var_args) {
    var args__13069__auto__ = null;
    if (arguments.length > 0) {
      var G__29553__i = 0, G__29553__a = new Array(arguments.length - 0);
      while (G__29553__i < G__29553__a.length) {
        G__29553__a[G__29553__i] = arguments[G__29553__i + 0];
        ++G__29553__i;
      }
      args__13069__auto__ = new cljs.core.IndexedSeq(G__29553__a, 0);
    }
    return hr__delegate.call(this, args__13069__auto__);
  };
  hr.cljs$lang$maxFixedArity = 0;
  hr.cljs$lang$applyTo = function(arglist__29554) {
    var args__13069__auto__ = cljs.core.seq(arglist__29554);
    return hr__delegate(args__13069__auto__);
  };
  hr.cljs$core$IFn$_invoke$arity$variadic = hr__delegate;
  return hr;
}();
quiescent.dom.html = function() {
  var html__delegate = function(args__13069__auto__) {
    var a__13070__auto__ = [];
    a__13070__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__13069__auto__)));
    var seq__27910_29555 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__13069__auto__));
    var chunk__27911_29556 = null;
    var count__27912_29557 = 0;
    var i__27913_29558 = 0;
    while (true) {
      if (i__27913_29558 < count__27912_29557) {
        var arg__13071__auto___29559 = cljs.core._nth.call(null, chunk__27911_29556, i__27913_29558);
        a__13070__auto__.push(arg__13071__auto___29559);
        var G__29560 = seq__27910_29555;
        var G__29561 = chunk__27911_29556;
        var G__29562 = count__27912_29557;
        var G__29563 = i__27913_29558 + 1;
        seq__27910_29555 = G__29560;
        chunk__27911_29556 = G__29561;
        count__27912_29557 = G__29562;
        i__27913_29558 = G__29563;
        continue;
      } else {
        var temp__4126__auto___29564 = cljs.core.seq.call(null, seq__27910_29555);
        if (temp__4126__auto___29564) {
          var seq__27910_29565__$1 = temp__4126__auto___29564;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__27910_29565__$1)) {
            var c__8291__auto___29566 = cljs.core.chunk_first.call(null, seq__27910_29565__$1);
            var G__29567 = cljs.core.chunk_rest.call(null, seq__27910_29565__$1);
            var G__29568 = c__8291__auto___29566;
            var G__29569 = cljs.core.count.call(null, c__8291__auto___29566);
            var G__29570 = 0;
            seq__27910_29555 = G__29567;
            chunk__27911_29556 = G__29568;
            count__27912_29557 = G__29569;
            i__27913_29558 = G__29570;
            continue;
          } else {
            var arg__13071__auto___29571 = cljs.core.first.call(null, seq__27910_29565__$1);
            a__13070__auto__.push(arg__13071__auto___29571);
            var G__29572 = cljs.core.next.call(null, seq__27910_29565__$1);
            var G__29573 = null;
            var G__29574 = 0;
            var G__29575 = 0;
            seq__27910_29555 = G__29572;
            chunk__27911_29556 = G__29573;
            count__27912_29557 = G__29574;
            i__27913_29558 = G__29575;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.html.apply(null, a__13070__auto__);
  };
  var html = function(var_args) {
    var args__13069__auto__ = null;
    if (arguments.length > 0) {
      var G__29576__i = 0, G__29576__a = new Array(arguments.length - 0);
      while (G__29576__i < G__29576__a.length) {
        G__29576__a[G__29576__i] = arguments[G__29576__i + 0];
        ++G__29576__i;
      }
      args__13069__auto__ = new cljs.core.IndexedSeq(G__29576__a, 0);
    }
    return html__delegate.call(this, args__13069__auto__);
  };
  html.cljs$lang$maxFixedArity = 0;
  html.cljs$lang$applyTo = function(arglist__29577) {
    var args__13069__auto__ = cljs.core.seq(arglist__29577);
    return html__delegate(args__13069__auto__);
  };
  html.cljs$core$IFn$_invoke$arity$variadic = html__delegate;
  return html;
}();
quiescent.dom.i = function() {
  var i__delegate = function(args__13069__auto__) {
    var a__13070__auto__ = [];
    a__13070__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__13069__auto__)));
    var seq__27918_29578 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__13069__auto__));
    var chunk__27919_29579 = null;
    var count__27920_29580 = 0;
    var i__27921_29581 = 0;
    while (true) {
      if (i__27921_29581 < count__27920_29580) {
        var arg__13071__auto___29582 = cljs.core._nth.call(null, chunk__27919_29579, i__27921_29581);
        a__13070__auto__.push(arg__13071__auto___29582);
        var G__29583 = seq__27918_29578;
        var G__29584 = chunk__27919_29579;
        var G__29585 = count__27920_29580;
        var G__29586 = i__27921_29581 + 1;
        seq__27918_29578 = G__29583;
        chunk__27919_29579 = G__29584;
        count__27920_29580 = G__29585;
        i__27921_29581 = G__29586;
        continue;
      } else {
        var temp__4126__auto___29587 = cljs.core.seq.call(null, seq__27918_29578);
        if (temp__4126__auto___29587) {
          var seq__27918_29588__$1 = temp__4126__auto___29587;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__27918_29588__$1)) {
            var c__8291__auto___29589 = cljs.core.chunk_first.call(null, seq__27918_29588__$1);
            var G__29590 = cljs.core.chunk_rest.call(null, seq__27918_29588__$1);
            var G__29591 = c__8291__auto___29589;
            var G__29592 = cljs.core.count.call(null, c__8291__auto___29589);
            var G__29593 = 0;
            seq__27918_29578 = G__29590;
            chunk__27919_29579 = G__29591;
            count__27920_29580 = G__29592;
            i__27921_29581 = G__29593;
            continue;
          } else {
            var arg__13071__auto___29594 = cljs.core.first.call(null, seq__27918_29588__$1);
            a__13070__auto__.push(arg__13071__auto___29594);
            var G__29595 = cljs.core.next.call(null, seq__27918_29588__$1);
            var G__29596 = null;
            var G__29597 = 0;
            var G__29598 = 0;
            seq__27918_29578 = G__29595;
            chunk__27919_29579 = G__29596;
            count__27920_29580 = G__29597;
            i__27921_29581 = G__29598;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.i.apply(null, a__13070__auto__);
  };
  var i = function(var_args) {
    var args__13069__auto__ = null;
    if (arguments.length > 0) {
      var G__29599__i = 0, G__29599__a = new Array(arguments.length - 0);
      while (G__29599__i < G__29599__a.length) {
        G__29599__a[G__29599__i] = arguments[G__29599__i + 0];
        ++G__29599__i;
      }
      args__13069__auto__ = new cljs.core.IndexedSeq(G__29599__a, 0);
    }
    return i__delegate.call(this, args__13069__auto__);
  };
  i.cljs$lang$maxFixedArity = 0;
  i.cljs$lang$applyTo = function(arglist__29600) {
    var args__13069__auto__ = cljs.core.seq(arglist__29600);
    return i__delegate(args__13069__auto__);
  };
  i.cljs$core$IFn$_invoke$arity$variadic = i__delegate;
  return i;
}();
quiescent.dom.iframe = function() {
  var iframe__delegate = function(args__13069__auto__) {
    var a__13070__auto__ = [];
    a__13070__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__13069__auto__)));
    var seq__27926_29601 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__13069__auto__));
    var chunk__27927_29602 = null;
    var count__27928_29603 = 0;
    var i__27929_29604 = 0;
    while (true) {
      if (i__27929_29604 < count__27928_29603) {
        var arg__13071__auto___29605 = cljs.core._nth.call(null, chunk__27927_29602, i__27929_29604);
        a__13070__auto__.push(arg__13071__auto___29605);
        var G__29606 = seq__27926_29601;
        var G__29607 = chunk__27927_29602;
        var G__29608 = count__27928_29603;
        var G__29609 = i__27929_29604 + 1;
        seq__27926_29601 = G__29606;
        chunk__27927_29602 = G__29607;
        count__27928_29603 = G__29608;
        i__27929_29604 = G__29609;
        continue;
      } else {
        var temp__4126__auto___29610 = cljs.core.seq.call(null, seq__27926_29601);
        if (temp__4126__auto___29610) {
          var seq__27926_29611__$1 = temp__4126__auto___29610;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__27926_29611__$1)) {
            var c__8291__auto___29612 = cljs.core.chunk_first.call(null, seq__27926_29611__$1);
            var G__29613 = cljs.core.chunk_rest.call(null, seq__27926_29611__$1);
            var G__29614 = c__8291__auto___29612;
            var G__29615 = cljs.core.count.call(null, c__8291__auto___29612);
            var G__29616 = 0;
            seq__27926_29601 = G__29613;
            chunk__27927_29602 = G__29614;
            count__27928_29603 = G__29615;
            i__27929_29604 = G__29616;
            continue;
          } else {
            var arg__13071__auto___29617 = cljs.core.first.call(null, seq__27926_29611__$1);
            a__13070__auto__.push(arg__13071__auto___29617);
            var G__29618 = cljs.core.next.call(null, seq__27926_29611__$1);
            var G__29619 = null;
            var G__29620 = 0;
            var G__29621 = 0;
            seq__27926_29601 = G__29618;
            chunk__27927_29602 = G__29619;
            count__27928_29603 = G__29620;
            i__27929_29604 = G__29621;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.iframe.apply(null, a__13070__auto__);
  };
  var iframe = function(var_args) {
    var args__13069__auto__ = null;
    if (arguments.length > 0) {
      var G__29622__i = 0, G__29622__a = new Array(arguments.length - 0);
      while (G__29622__i < G__29622__a.length) {
        G__29622__a[G__29622__i] = arguments[G__29622__i + 0];
        ++G__29622__i;
      }
      args__13069__auto__ = new cljs.core.IndexedSeq(G__29622__a, 0);
    }
    return iframe__delegate.call(this, args__13069__auto__);
  };
  iframe.cljs$lang$maxFixedArity = 0;
  iframe.cljs$lang$applyTo = function(arglist__29623) {
    var args__13069__auto__ = cljs.core.seq(arglist__29623);
    return iframe__delegate(args__13069__auto__);
  };
  iframe.cljs$core$IFn$_invoke$arity$variadic = iframe__delegate;
  return iframe;
}();
quiescent.dom.img = function() {
  var img__delegate = function(args__13069__auto__) {
    var a__13070__auto__ = [];
    a__13070__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__13069__auto__)));
    var seq__27934_29624 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__13069__auto__));
    var chunk__27935_29625 = null;
    var count__27936_29626 = 0;
    var i__27937_29627 = 0;
    while (true) {
      if (i__27937_29627 < count__27936_29626) {
        var arg__13071__auto___29628 = cljs.core._nth.call(null, chunk__27935_29625, i__27937_29627);
        a__13070__auto__.push(arg__13071__auto___29628);
        var G__29629 = seq__27934_29624;
        var G__29630 = chunk__27935_29625;
        var G__29631 = count__27936_29626;
        var G__29632 = i__27937_29627 + 1;
        seq__27934_29624 = G__29629;
        chunk__27935_29625 = G__29630;
        count__27936_29626 = G__29631;
        i__27937_29627 = G__29632;
        continue;
      } else {
        var temp__4126__auto___29633 = cljs.core.seq.call(null, seq__27934_29624);
        if (temp__4126__auto___29633) {
          var seq__27934_29634__$1 = temp__4126__auto___29633;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__27934_29634__$1)) {
            var c__8291__auto___29635 = cljs.core.chunk_first.call(null, seq__27934_29634__$1);
            var G__29636 = cljs.core.chunk_rest.call(null, seq__27934_29634__$1);
            var G__29637 = c__8291__auto___29635;
            var G__29638 = cljs.core.count.call(null, c__8291__auto___29635);
            var G__29639 = 0;
            seq__27934_29624 = G__29636;
            chunk__27935_29625 = G__29637;
            count__27936_29626 = G__29638;
            i__27937_29627 = G__29639;
            continue;
          } else {
            var arg__13071__auto___29640 = cljs.core.first.call(null, seq__27934_29634__$1);
            a__13070__auto__.push(arg__13071__auto___29640);
            var G__29641 = cljs.core.next.call(null, seq__27934_29634__$1);
            var G__29642 = null;
            var G__29643 = 0;
            var G__29644 = 0;
            seq__27934_29624 = G__29641;
            chunk__27935_29625 = G__29642;
            count__27936_29626 = G__29643;
            i__27937_29627 = G__29644;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.img.apply(null, a__13070__auto__);
  };
  var img = function(var_args) {
    var args__13069__auto__ = null;
    if (arguments.length > 0) {
      var G__29645__i = 0, G__29645__a = new Array(arguments.length - 0);
      while (G__29645__i < G__29645__a.length) {
        G__29645__a[G__29645__i] = arguments[G__29645__i + 0];
        ++G__29645__i;
      }
      args__13069__auto__ = new cljs.core.IndexedSeq(G__29645__a, 0);
    }
    return img__delegate.call(this, args__13069__auto__);
  };
  img.cljs$lang$maxFixedArity = 0;
  img.cljs$lang$applyTo = function(arglist__29646) {
    var args__13069__auto__ = cljs.core.seq(arglist__29646);
    return img__delegate(args__13069__auto__);
  };
  img.cljs$core$IFn$_invoke$arity$variadic = img__delegate;
  return img;
}();
quiescent.dom.input = function() {
  var input__delegate = function(args__13069__auto__) {
    var a__13070__auto__ = [];
    a__13070__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__13069__auto__)));
    var seq__27942_29647 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__13069__auto__));
    var chunk__27943_29648 = null;
    var count__27944_29649 = 0;
    var i__27945_29650 = 0;
    while (true) {
      if (i__27945_29650 < count__27944_29649) {
        var arg__13071__auto___29651 = cljs.core._nth.call(null, chunk__27943_29648, i__27945_29650);
        a__13070__auto__.push(arg__13071__auto___29651);
        var G__29652 = seq__27942_29647;
        var G__29653 = chunk__27943_29648;
        var G__29654 = count__27944_29649;
        var G__29655 = i__27945_29650 + 1;
        seq__27942_29647 = G__29652;
        chunk__27943_29648 = G__29653;
        count__27944_29649 = G__29654;
        i__27945_29650 = G__29655;
        continue;
      } else {
        var temp__4126__auto___29656 = cljs.core.seq.call(null, seq__27942_29647);
        if (temp__4126__auto___29656) {
          var seq__27942_29657__$1 = temp__4126__auto___29656;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__27942_29657__$1)) {
            var c__8291__auto___29658 = cljs.core.chunk_first.call(null, seq__27942_29657__$1);
            var G__29659 = cljs.core.chunk_rest.call(null, seq__27942_29657__$1);
            var G__29660 = c__8291__auto___29658;
            var G__29661 = cljs.core.count.call(null, c__8291__auto___29658);
            var G__29662 = 0;
            seq__27942_29647 = G__29659;
            chunk__27943_29648 = G__29660;
            count__27944_29649 = G__29661;
            i__27945_29650 = G__29662;
            continue;
          } else {
            var arg__13071__auto___29663 = cljs.core.first.call(null, seq__27942_29657__$1);
            a__13070__auto__.push(arg__13071__auto___29663);
            var G__29664 = cljs.core.next.call(null, seq__27942_29657__$1);
            var G__29665 = null;
            var G__29666 = 0;
            var G__29667 = 0;
            seq__27942_29647 = G__29664;
            chunk__27943_29648 = G__29665;
            count__27944_29649 = G__29666;
            i__27945_29650 = G__29667;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.input.apply(null, a__13070__auto__);
  };
  var input = function(var_args) {
    var args__13069__auto__ = null;
    if (arguments.length > 0) {
      var G__29668__i = 0, G__29668__a = new Array(arguments.length - 0);
      while (G__29668__i < G__29668__a.length) {
        G__29668__a[G__29668__i] = arguments[G__29668__i + 0];
        ++G__29668__i;
      }
      args__13069__auto__ = new cljs.core.IndexedSeq(G__29668__a, 0);
    }
    return input__delegate.call(this, args__13069__auto__);
  };
  input.cljs$lang$maxFixedArity = 0;
  input.cljs$lang$applyTo = function(arglist__29669) {
    var args__13069__auto__ = cljs.core.seq(arglist__29669);
    return input__delegate(args__13069__auto__);
  };
  input.cljs$core$IFn$_invoke$arity$variadic = input__delegate;
  return input;
}();
quiescent.dom.ins = function() {
  var ins__delegate = function(args__13069__auto__) {
    var a__13070__auto__ = [];
    a__13070__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__13069__auto__)));
    var seq__27950_29670 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__13069__auto__));
    var chunk__27951_29671 = null;
    var count__27952_29672 = 0;
    var i__27953_29673 = 0;
    while (true) {
      if (i__27953_29673 < count__27952_29672) {
        var arg__13071__auto___29674 = cljs.core._nth.call(null, chunk__27951_29671, i__27953_29673);
        a__13070__auto__.push(arg__13071__auto___29674);
        var G__29675 = seq__27950_29670;
        var G__29676 = chunk__27951_29671;
        var G__29677 = count__27952_29672;
        var G__29678 = i__27953_29673 + 1;
        seq__27950_29670 = G__29675;
        chunk__27951_29671 = G__29676;
        count__27952_29672 = G__29677;
        i__27953_29673 = G__29678;
        continue;
      } else {
        var temp__4126__auto___29679 = cljs.core.seq.call(null, seq__27950_29670);
        if (temp__4126__auto___29679) {
          var seq__27950_29680__$1 = temp__4126__auto___29679;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__27950_29680__$1)) {
            var c__8291__auto___29681 = cljs.core.chunk_first.call(null, seq__27950_29680__$1);
            var G__29682 = cljs.core.chunk_rest.call(null, seq__27950_29680__$1);
            var G__29683 = c__8291__auto___29681;
            var G__29684 = cljs.core.count.call(null, c__8291__auto___29681);
            var G__29685 = 0;
            seq__27950_29670 = G__29682;
            chunk__27951_29671 = G__29683;
            count__27952_29672 = G__29684;
            i__27953_29673 = G__29685;
            continue;
          } else {
            var arg__13071__auto___29686 = cljs.core.first.call(null, seq__27950_29680__$1);
            a__13070__auto__.push(arg__13071__auto___29686);
            var G__29687 = cljs.core.next.call(null, seq__27950_29680__$1);
            var G__29688 = null;
            var G__29689 = 0;
            var G__29690 = 0;
            seq__27950_29670 = G__29687;
            chunk__27951_29671 = G__29688;
            count__27952_29672 = G__29689;
            i__27953_29673 = G__29690;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.ins.apply(null, a__13070__auto__);
  };
  var ins = function(var_args) {
    var args__13069__auto__ = null;
    if (arguments.length > 0) {
      var G__29691__i = 0, G__29691__a = new Array(arguments.length - 0);
      while (G__29691__i < G__29691__a.length) {
        G__29691__a[G__29691__i] = arguments[G__29691__i + 0];
        ++G__29691__i;
      }
      args__13069__auto__ = new cljs.core.IndexedSeq(G__29691__a, 0);
    }
    return ins__delegate.call(this, args__13069__auto__);
  };
  ins.cljs$lang$maxFixedArity = 0;
  ins.cljs$lang$applyTo = function(arglist__29692) {
    var args__13069__auto__ = cljs.core.seq(arglist__29692);
    return ins__delegate(args__13069__auto__);
  };
  ins.cljs$core$IFn$_invoke$arity$variadic = ins__delegate;
  return ins;
}();
quiescent.dom.kbd = function() {
  var kbd__delegate = function(args__13069__auto__) {
    var a__13070__auto__ = [];
    a__13070__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__13069__auto__)));
    var seq__27958_29693 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__13069__auto__));
    var chunk__27959_29694 = null;
    var count__27960_29695 = 0;
    var i__27961_29696 = 0;
    while (true) {
      if (i__27961_29696 < count__27960_29695) {
        var arg__13071__auto___29697 = cljs.core._nth.call(null, chunk__27959_29694, i__27961_29696);
        a__13070__auto__.push(arg__13071__auto___29697);
        var G__29698 = seq__27958_29693;
        var G__29699 = chunk__27959_29694;
        var G__29700 = count__27960_29695;
        var G__29701 = i__27961_29696 + 1;
        seq__27958_29693 = G__29698;
        chunk__27959_29694 = G__29699;
        count__27960_29695 = G__29700;
        i__27961_29696 = G__29701;
        continue;
      } else {
        var temp__4126__auto___29702 = cljs.core.seq.call(null, seq__27958_29693);
        if (temp__4126__auto___29702) {
          var seq__27958_29703__$1 = temp__4126__auto___29702;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__27958_29703__$1)) {
            var c__8291__auto___29704 = cljs.core.chunk_first.call(null, seq__27958_29703__$1);
            var G__29705 = cljs.core.chunk_rest.call(null, seq__27958_29703__$1);
            var G__29706 = c__8291__auto___29704;
            var G__29707 = cljs.core.count.call(null, c__8291__auto___29704);
            var G__29708 = 0;
            seq__27958_29693 = G__29705;
            chunk__27959_29694 = G__29706;
            count__27960_29695 = G__29707;
            i__27961_29696 = G__29708;
            continue;
          } else {
            var arg__13071__auto___29709 = cljs.core.first.call(null, seq__27958_29703__$1);
            a__13070__auto__.push(arg__13071__auto___29709);
            var G__29710 = cljs.core.next.call(null, seq__27958_29703__$1);
            var G__29711 = null;
            var G__29712 = 0;
            var G__29713 = 0;
            seq__27958_29693 = G__29710;
            chunk__27959_29694 = G__29711;
            count__27960_29695 = G__29712;
            i__27961_29696 = G__29713;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.kbd.apply(null, a__13070__auto__);
  };
  var kbd = function(var_args) {
    var args__13069__auto__ = null;
    if (arguments.length > 0) {
      var G__29714__i = 0, G__29714__a = new Array(arguments.length - 0);
      while (G__29714__i < G__29714__a.length) {
        G__29714__a[G__29714__i] = arguments[G__29714__i + 0];
        ++G__29714__i;
      }
      args__13069__auto__ = new cljs.core.IndexedSeq(G__29714__a, 0);
    }
    return kbd__delegate.call(this, args__13069__auto__);
  };
  kbd.cljs$lang$maxFixedArity = 0;
  kbd.cljs$lang$applyTo = function(arglist__29715) {
    var args__13069__auto__ = cljs.core.seq(arglist__29715);
    return kbd__delegate(args__13069__auto__);
  };
  kbd.cljs$core$IFn$_invoke$arity$variadic = kbd__delegate;
  return kbd;
}();
quiescent.dom.keygen = function() {
  var keygen__delegate = function(args__13069__auto__) {
    var a__13070__auto__ = [];
    a__13070__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__13069__auto__)));
    var seq__27966_29716 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__13069__auto__));
    var chunk__27967_29717 = null;
    var count__27968_29718 = 0;
    var i__27969_29719 = 0;
    while (true) {
      if (i__27969_29719 < count__27968_29718) {
        var arg__13071__auto___29720 = cljs.core._nth.call(null, chunk__27967_29717, i__27969_29719);
        a__13070__auto__.push(arg__13071__auto___29720);
        var G__29721 = seq__27966_29716;
        var G__29722 = chunk__27967_29717;
        var G__29723 = count__27968_29718;
        var G__29724 = i__27969_29719 + 1;
        seq__27966_29716 = G__29721;
        chunk__27967_29717 = G__29722;
        count__27968_29718 = G__29723;
        i__27969_29719 = G__29724;
        continue;
      } else {
        var temp__4126__auto___29725 = cljs.core.seq.call(null, seq__27966_29716);
        if (temp__4126__auto___29725) {
          var seq__27966_29726__$1 = temp__4126__auto___29725;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__27966_29726__$1)) {
            var c__8291__auto___29727 = cljs.core.chunk_first.call(null, seq__27966_29726__$1);
            var G__29728 = cljs.core.chunk_rest.call(null, seq__27966_29726__$1);
            var G__29729 = c__8291__auto___29727;
            var G__29730 = cljs.core.count.call(null, c__8291__auto___29727);
            var G__29731 = 0;
            seq__27966_29716 = G__29728;
            chunk__27967_29717 = G__29729;
            count__27968_29718 = G__29730;
            i__27969_29719 = G__29731;
            continue;
          } else {
            var arg__13071__auto___29732 = cljs.core.first.call(null, seq__27966_29726__$1);
            a__13070__auto__.push(arg__13071__auto___29732);
            var G__29733 = cljs.core.next.call(null, seq__27966_29726__$1);
            var G__29734 = null;
            var G__29735 = 0;
            var G__29736 = 0;
            seq__27966_29716 = G__29733;
            chunk__27967_29717 = G__29734;
            count__27968_29718 = G__29735;
            i__27969_29719 = G__29736;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.keygen.apply(null, a__13070__auto__);
  };
  var keygen = function(var_args) {
    var args__13069__auto__ = null;
    if (arguments.length > 0) {
      var G__29737__i = 0, G__29737__a = new Array(arguments.length - 0);
      while (G__29737__i < G__29737__a.length) {
        G__29737__a[G__29737__i] = arguments[G__29737__i + 0];
        ++G__29737__i;
      }
      args__13069__auto__ = new cljs.core.IndexedSeq(G__29737__a, 0);
    }
    return keygen__delegate.call(this, args__13069__auto__);
  };
  keygen.cljs$lang$maxFixedArity = 0;
  keygen.cljs$lang$applyTo = function(arglist__29738) {
    var args__13069__auto__ = cljs.core.seq(arglist__29738);
    return keygen__delegate(args__13069__auto__);
  };
  keygen.cljs$core$IFn$_invoke$arity$variadic = keygen__delegate;
  return keygen;
}();
quiescent.dom.label = function() {
  var label__delegate = function(args__13069__auto__) {
    var a__13070__auto__ = [];
    a__13070__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__13069__auto__)));
    var seq__27974_29739 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__13069__auto__));
    var chunk__27975_29740 = null;
    var count__27976_29741 = 0;
    var i__27977_29742 = 0;
    while (true) {
      if (i__27977_29742 < count__27976_29741) {
        var arg__13071__auto___29743 = cljs.core._nth.call(null, chunk__27975_29740, i__27977_29742);
        a__13070__auto__.push(arg__13071__auto___29743);
        var G__29744 = seq__27974_29739;
        var G__29745 = chunk__27975_29740;
        var G__29746 = count__27976_29741;
        var G__29747 = i__27977_29742 + 1;
        seq__27974_29739 = G__29744;
        chunk__27975_29740 = G__29745;
        count__27976_29741 = G__29746;
        i__27977_29742 = G__29747;
        continue;
      } else {
        var temp__4126__auto___29748 = cljs.core.seq.call(null, seq__27974_29739);
        if (temp__4126__auto___29748) {
          var seq__27974_29749__$1 = temp__4126__auto___29748;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__27974_29749__$1)) {
            var c__8291__auto___29750 = cljs.core.chunk_first.call(null, seq__27974_29749__$1);
            var G__29751 = cljs.core.chunk_rest.call(null, seq__27974_29749__$1);
            var G__29752 = c__8291__auto___29750;
            var G__29753 = cljs.core.count.call(null, c__8291__auto___29750);
            var G__29754 = 0;
            seq__27974_29739 = G__29751;
            chunk__27975_29740 = G__29752;
            count__27976_29741 = G__29753;
            i__27977_29742 = G__29754;
            continue;
          } else {
            var arg__13071__auto___29755 = cljs.core.first.call(null, seq__27974_29749__$1);
            a__13070__auto__.push(arg__13071__auto___29755);
            var G__29756 = cljs.core.next.call(null, seq__27974_29749__$1);
            var G__29757 = null;
            var G__29758 = 0;
            var G__29759 = 0;
            seq__27974_29739 = G__29756;
            chunk__27975_29740 = G__29757;
            count__27976_29741 = G__29758;
            i__27977_29742 = G__29759;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.label.apply(null, a__13070__auto__);
  };
  var label = function(var_args) {
    var args__13069__auto__ = null;
    if (arguments.length > 0) {
      var G__29760__i = 0, G__29760__a = new Array(arguments.length - 0);
      while (G__29760__i < G__29760__a.length) {
        G__29760__a[G__29760__i] = arguments[G__29760__i + 0];
        ++G__29760__i;
      }
      args__13069__auto__ = new cljs.core.IndexedSeq(G__29760__a, 0);
    }
    return label__delegate.call(this, args__13069__auto__);
  };
  label.cljs$lang$maxFixedArity = 0;
  label.cljs$lang$applyTo = function(arglist__29761) {
    var args__13069__auto__ = cljs.core.seq(arglist__29761);
    return label__delegate(args__13069__auto__);
  };
  label.cljs$core$IFn$_invoke$arity$variadic = label__delegate;
  return label;
}();
quiescent.dom.legend = function() {
  var legend__delegate = function(args__13069__auto__) {
    var a__13070__auto__ = [];
    a__13070__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__13069__auto__)));
    var seq__27982_29762 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__13069__auto__));
    var chunk__27983_29763 = null;
    var count__27984_29764 = 0;
    var i__27985_29765 = 0;
    while (true) {
      if (i__27985_29765 < count__27984_29764) {
        var arg__13071__auto___29766 = cljs.core._nth.call(null, chunk__27983_29763, i__27985_29765);
        a__13070__auto__.push(arg__13071__auto___29766);
        var G__29767 = seq__27982_29762;
        var G__29768 = chunk__27983_29763;
        var G__29769 = count__27984_29764;
        var G__29770 = i__27985_29765 + 1;
        seq__27982_29762 = G__29767;
        chunk__27983_29763 = G__29768;
        count__27984_29764 = G__29769;
        i__27985_29765 = G__29770;
        continue;
      } else {
        var temp__4126__auto___29771 = cljs.core.seq.call(null, seq__27982_29762);
        if (temp__4126__auto___29771) {
          var seq__27982_29772__$1 = temp__4126__auto___29771;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__27982_29772__$1)) {
            var c__8291__auto___29773 = cljs.core.chunk_first.call(null, seq__27982_29772__$1);
            var G__29774 = cljs.core.chunk_rest.call(null, seq__27982_29772__$1);
            var G__29775 = c__8291__auto___29773;
            var G__29776 = cljs.core.count.call(null, c__8291__auto___29773);
            var G__29777 = 0;
            seq__27982_29762 = G__29774;
            chunk__27983_29763 = G__29775;
            count__27984_29764 = G__29776;
            i__27985_29765 = G__29777;
            continue;
          } else {
            var arg__13071__auto___29778 = cljs.core.first.call(null, seq__27982_29772__$1);
            a__13070__auto__.push(arg__13071__auto___29778);
            var G__29779 = cljs.core.next.call(null, seq__27982_29772__$1);
            var G__29780 = null;
            var G__29781 = 0;
            var G__29782 = 0;
            seq__27982_29762 = G__29779;
            chunk__27983_29763 = G__29780;
            count__27984_29764 = G__29781;
            i__27985_29765 = G__29782;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.legend.apply(null, a__13070__auto__);
  };
  var legend = function(var_args) {
    var args__13069__auto__ = null;
    if (arguments.length > 0) {
      var G__29783__i = 0, G__29783__a = new Array(arguments.length - 0);
      while (G__29783__i < G__29783__a.length) {
        G__29783__a[G__29783__i] = arguments[G__29783__i + 0];
        ++G__29783__i;
      }
      args__13069__auto__ = new cljs.core.IndexedSeq(G__29783__a, 0);
    }
    return legend__delegate.call(this, args__13069__auto__);
  };
  legend.cljs$lang$maxFixedArity = 0;
  legend.cljs$lang$applyTo = function(arglist__29784) {
    var args__13069__auto__ = cljs.core.seq(arglist__29784);
    return legend__delegate(args__13069__auto__);
  };
  legend.cljs$core$IFn$_invoke$arity$variadic = legend__delegate;
  return legend;
}();
quiescent.dom.li = function() {
  var li__delegate = function(args__13069__auto__) {
    var a__13070__auto__ = [];
    a__13070__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__13069__auto__)));
    var seq__27990_29785 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__13069__auto__));
    var chunk__27991_29786 = null;
    var count__27992_29787 = 0;
    var i__27993_29788 = 0;
    while (true) {
      if (i__27993_29788 < count__27992_29787) {
        var arg__13071__auto___29789 = cljs.core._nth.call(null, chunk__27991_29786, i__27993_29788);
        a__13070__auto__.push(arg__13071__auto___29789);
        var G__29790 = seq__27990_29785;
        var G__29791 = chunk__27991_29786;
        var G__29792 = count__27992_29787;
        var G__29793 = i__27993_29788 + 1;
        seq__27990_29785 = G__29790;
        chunk__27991_29786 = G__29791;
        count__27992_29787 = G__29792;
        i__27993_29788 = G__29793;
        continue;
      } else {
        var temp__4126__auto___29794 = cljs.core.seq.call(null, seq__27990_29785);
        if (temp__4126__auto___29794) {
          var seq__27990_29795__$1 = temp__4126__auto___29794;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__27990_29795__$1)) {
            var c__8291__auto___29796 = cljs.core.chunk_first.call(null, seq__27990_29795__$1);
            var G__29797 = cljs.core.chunk_rest.call(null, seq__27990_29795__$1);
            var G__29798 = c__8291__auto___29796;
            var G__29799 = cljs.core.count.call(null, c__8291__auto___29796);
            var G__29800 = 0;
            seq__27990_29785 = G__29797;
            chunk__27991_29786 = G__29798;
            count__27992_29787 = G__29799;
            i__27993_29788 = G__29800;
            continue;
          } else {
            var arg__13071__auto___29801 = cljs.core.first.call(null, seq__27990_29795__$1);
            a__13070__auto__.push(arg__13071__auto___29801);
            var G__29802 = cljs.core.next.call(null, seq__27990_29795__$1);
            var G__29803 = null;
            var G__29804 = 0;
            var G__29805 = 0;
            seq__27990_29785 = G__29802;
            chunk__27991_29786 = G__29803;
            count__27992_29787 = G__29804;
            i__27993_29788 = G__29805;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.li.apply(null, a__13070__auto__);
  };
  var li = function(var_args) {
    var args__13069__auto__ = null;
    if (arguments.length > 0) {
      var G__29806__i = 0, G__29806__a = new Array(arguments.length - 0);
      while (G__29806__i < G__29806__a.length) {
        G__29806__a[G__29806__i] = arguments[G__29806__i + 0];
        ++G__29806__i;
      }
      args__13069__auto__ = new cljs.core.IndexedSeq(G__29806__a, 0);
    }
    return li__delegate.call(this, args__13069__auto__);
  };
  li.cljs$lang$maxFixedArity = 0;
  li.cljs$lang$applyTo = function(arglist__29807) {
    var args__13069__auto__ = cljs.core.seq(arglist__29807);
    return li__delegate(args__13069__auto__);
  };
  li.cljs$core$IFn$_invoke$arity$variadic = li__delegate;
  return li;
}();
quiescent.dom.link = function() {
  var link__delegate = function(args__13069__auto__) {
    var a__13070__auto__ = [];
    a__13070__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__13069__auto__)));
    var seq__27998_29808 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__13069__auto__));
    var chunk__27999_29809 = null;
    var count__28000_29810 = 0;
    var i__28001_29811 = 0;
    while (true) {
      if (i__28001_29811 < count__28000_29810) {
        var arg__13071__auto___29812 = cljs.core._nth.call(null, chunk__27999_29809, i__28001_29811);
        a__13070__auto__.push(arg__13071__auto___29812);
        var G__29813 = seq__27998_29808;
        var G__29814 = chunk__27999_29809;
        var G__29815 = count__28000_29810;
        var G__29816 = i__28001_29811 + 1;
        seq__27998_29808 = G__29813;
        chunk__27999_29809 = G__29814;
        count__28000_29810 = G__29815;
        i__28001_29811 = G__29816;
        continue;
      } else {
        var temp__4126__auto___29817 = cljs.core.seq.call(null, seq__27998_29808);
        if (temp__4126__auto___29817) {
          var seq__27998_29818__$1 = temp__4126__auto___29817;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__27998_29818__$1)) {
            var c__8291__auto___29819 = cljs.core.chunk_first.call(null, seq__27998_29818__$1);
            var G__29820 = cljs.core.chunk_rest.call(null, seq__27998_29818__$1);
            var G__29821 = c__8291__auto___29819;
            var G__29822 = cljs.core.count.call(null, c__8291__auto___29819);
            var G__29823 = 0;
            seq__27998_29808 = G__29820;
            chunk__27999_29809 = G__29821;
            count__28000_29810 = G__29822;
            i__28001_29811 = G__29823;
            continue;
          } else {
            var arg__13071__auto___29824 = cljs.core.first.call(null, seq__27998_29818__$1);
            a__13070__auto__.push(arg__13071__auto___29824);
            var G__29825 = cljs.core.next.call(null, seq__27998_29818__$1);
            var G__29826 = null;
            var G__29827 = 0;
            var G__29828 = 0;
            seq__27998_29808 = G__29825;
            chunk__27999_29809 = G__29826;
            count__28000_29810 = G__29827;
            i__28001_29811 = G__29828;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.link.apply(null, a__13070__auto__);
  };
  var link = function(var_args) {
    var args__13069__auto__ = null;
    if (arguments.length > 0) {
      var G__29829__i = 0, G__29829__a = new Array(arguments.length - 0);
      while (G__29829__i < G__29829__a.length) {
        G__29829__a[G__29829__i] = arguments[G__29829__i + 0];
        ++G__29829__i;
      }
      args__13069__auto__ = new cljs.core.IndexedSeq(G__29829__a, 0);
    }
    return link__delegate.call(this, args__13069__auto__);
  };
  link.cljs$lang$maxFixedArity = 0;
  link.cljs$lang$applyTo = function(arglist__29830) {
    var args__13069__auto__ = cljs.core.seq(arglist__29830);
    return link__delegate(args__13069__auto__);
  };
  link.cljs$core$IFn$_invoke$arity$variadic = link__delegate;
  return link;
}();
quiescent.dom.main = function() {
  var main__delegate = function(args__13069__auto__) {
    var a__13070__auto__ = [];
    a__13070__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__13069__auto__)));
    var seq__28006_29831 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__13069__auto__));
    var chunk__28007_29832 = null;
    var count__28008_29833 = 0;
    var i__28009_29834 = 0;
    while (true) {
      if (i__28009_29834 < count__28008_29833) {
        var arg__13071__auto___29835 = cljs.core._nth.call(null, chunk__28007_29832, i__28009_29834);
        a__13070__auto__.push(arg__13071__auto___29835);
        var G__29836 = seq__28006_29831;
        var G__29837 = chunk__28007_29832;
        var G__29838 = count__28008_29833;
        var G__29839 = i__28009_29834 + 1;
        seq__28006_29831 = G__29836;
        chunk__28007_29832 = G__29837;
        count__28008_29833 = G__29838;
        i__28009_29834 = G__29839;
        continue;
      } else {
        var temp__4126__auto___29840 = cljs.core.seq.call(null, seq__28006_29831);
        if (temp__4126__auto___29840) {
          var seq__28006_29841__$1 = temp__4126__auto___29840;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__28006_29841__$1)) {
            var c__8291__auto___29842 = cljs.core.chunk_first.call(null, seq__28006_29841__$1);
            var G__29843 = cljs.core.chunk_rest.call(null, seq__28006_29841__$1);
            var G__29844 = c__8291__auto___29842;
            var G__29845 = cljs.core.count.call(null, c__8291__auto___29842);
            var G__29846 = 0;
            seq__28006_29831 = G__29843;
            chunk__28007_29832 = G__29844;
            count__28008_29833 = G__29845;
            i__28009_29834 = G__29846;
            continue;
          } else {
            var arg__13071__auto___29847 = cljs.core.first.call(null, seq__28006_29841__$1);
            a__13070__auto__.push(arg__13071__auto___29847);
            var G__29848 = cljs.core.next.call(null, seq__28006_29841__$1);
            var G__29849 = null;
            var G__29850 = 0;
            var G__29851 = 0;
            seq__28006_29831 = G__29848;
            chunk__28007_29832 = G__29849;
            count__28008_29833 = G__29850;
            i__28009_29834 = G__29851;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.main.apply(null, a__13070__auto__);
  };
  var main = function(var_args) {
    var args__13069__auto__ = null;
    if (arguments.length > 0) {
      var G__29852__i = 0, G__29852__a = new Array(arguments.length - 0);
      while (G__29852__i < G__29852__a.length) {
        G__29852__a[G__29852__i] = arguments[G__29852__i + 0];
        ++G__29852__i;
      }
      args__13069__auto__ = new cljs.core.IndexedSeq(G__29852__a, 0);
    }
    return main__delegate.call(this, args__13069__auto__);
  };
  main.cljs$lang$maxFixedArity = 0;
  main.cljs$lang$applyTo = function(arglist__29853) {
    var args__13069__auto__ = cljs.core.seq(arglist__29853);
    return main__delegate(args__13069__auto__);
  };
  main.cljs$core$IFn$_invoke$arity$variadic = main__delegate;
  return main;
}();
quiescent.dom.map = function() {
  var map__delegate = function(args__13069__auto__) {
    var a__13070__auto__ = [];
    a__13070__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__13069__auto__)));
    var seq__28014_29854 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__13069__auto__));
    var chunk__28015_29855 = null;
    var count__28016_29856 = 0;
    var i__28017_29857 = 0;
    while (true) {
      if (i__28017_29857 < count__28016_29856) {
        var arg__13071__auto___29858 = cljs.core._nth.call(null, chunk__28015_29855, i__28017_29857);
        a__13070__auto__.push(arg__13071__auto___29858);
        var G__29859 = seq__28014_29854;
        var G__29860 = chunk__28015_29855;
        var G__29861 = count__28016_29856;
        var G__29862 = i__28017_29857 + 1;
        seq__28014_29854 = G__29859;
        chunk__28015_29855 = G__29860;
        count__28016_29856 = G__29861;
        i__28017_29857 = G__29862;
        continue;
      } else {
        var temp__4126__auto___29863 = cljs.core.seq.call(null, seq__28014_29854);
        if (temp__4126__auto___29863) {
          var seq__28014_29864__$1 = temp__4126__auto___29863;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__28014_29864__$1)) {
            var c__8291__auto___29865 = cljs.core.chunk_first.call(null, seq__28014_29864__$1);
            var G__29866 = cljs.core.chunk_rest.call(null, seq__28014_29864__$1);
            var G__29867 = c__8291__auto___29865;
            var G__29868 = cljs.core.count.call(null, c__8291__auto___29865);
            var G__29869 = 0;
            seq__28014_29854 = G__29866;
            chunk__28015_29855 = G__29867;
            count__28016_29856 = G__29868;
            i__28017_29857 = G__29869;
            continue;
          } else {
            var arg__13071__auto___29870 = cljs.core.first.call(null, seq__28014_29864__$1);
            a__13070__auto__.push(arg__13071__auto___29870);
            var G__29871 = cljs.core.next.call(null, seq__28014_29864__$1);
            var G__29872 = null;
            var G__29873 = 0;
            var G__29874 = 0;
            seq__28014_29854 = G__29871;
            chunk__28015_29855 = G__29872;
            count__28016_29856 = G__29873;
            i__28017_29857 = G__29874;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.map.apply(null, a__13070__auto__);
  };
  var map = function(var_args) {
    var args__13069__auto__ = null;
    if (arguments.length > 0) {
      var G__29875__i = 0, G__29875__a = new Array(arguments.length - 0);
      while (G__29875__i < G__29875__a.length) {
        G__29875__a[G__29875__i] = arguments[G__29875__i + 0];
        ++G__29875__i;
      }
      args__13069__auto__ = new cljs.core.IndexedSeq(G__29875__a, 0);
    }
    return map__delegate.call(this, args__13069__auto__);
  };
  map.cljs$lang$maxFixedArity = 0;
  map.cljs$lang$applyTo = function(arglist__29876) {
    var args__13069__auto__ = cljs.core.seq(arglist__29876);
    return map__delegate(args__13069__auto__);
  };
  map.cljs$core$IFn$_invoke$arity$variadic = map__delegate;
  return map;
}();
quiescent.dom.mark = function() {
  var mark__delegate = function(args__13069__auto__) {
    var a__13070__auto__ = [];
    a__13070__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__13069__auto__)));
    var seq__28022_29877 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__13069__auto__));
    var chunk__28023_29878 = null;
    var count__28024_29879 = 0;
    var i__28025_29880 = 0;
    while (true) {
      if (i__28025_29880 < count__28024_29879) {
        var arg__13071__auto___29881 = cljs.core._nth.call(null, chunk__28023_29878, i__28025_29880);
        a__13070__auto__.push(arg__13071__auto___29881);
        var G__29882 = seq__28022_29877;
        var G__29883 = chunk__28023_29878;
        var G__29884 = count__28024_29879;
        var G__29885 = i__28025_29880 + 1;
        seq__28022_29877 = G__29882;
        chunk__28023_29878 = G__29883;
        count__28024_29879 = G__29884;
        i__28025_29880 = G__29885;
        continue;
      } else {
        var temp__4126__auto___29886 = cljs.core.seq.call(null, seq__28022_29877);
        if (temp__4126__auto___29886) {
          var seq__28022_29887__$1 = temp__4126__auto___29886;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__28022_29887__$1)) {
            var c__8291__auto___29888 = cljs.core.chunk_first.call(null, seq__28022_29887__$1);
            var G__29889 = cljs.core.chunk_rest.call(null, seq__28022_29887__$1);
            var G__29890 = c__8291__auto___29888;
            var G__29891 = cljs.core.count.call(null, c__8291__auto___29888);
            var G__29892 = 0;
            seq__28022_29877 = G__29889;
            chunk__28023_29878 = G__29890;
            count__28024_29879 = G__29891;
            i__28025_29880 = G__29892;
            continue;
          } else {
            var arg__13071__auto___29893 = cljs.core.first.call(null, seq__28022_29887__$1);
            a__13070__auto__.push(arg__13071__auto___29893);
            var G__29894 = cljs.core.next.call(null, seq__28022_29887__$1);
            var G__29895 = null;
            var G__29896 = 0;
            var G__29897 = 0;
            seq__28022_29877 = G__29894;
            chunk__28023_29878 = G__29895;
            count__28024_29879 = G__29896;
            i__28025_29880 = G__29897;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.mark.apply(null, a__13070__auto__);
  };
  var mark = function(var_args) {
    var args__13069__auto__ = null;
    if (arguments.length > 0) {
      var G__29898__i = 0, G__29898__a = new Array(arguments.length - 0);
      while (G__29898__i < G__29898__a.length) {
        G__29898__a[G__29898__i] = arguments[G__29898__i + 0];
        ++G__29898__i;
      }
      args__13069__auto__ = new cljs.core.IndexedSeq(G__29898__a, 0);
    }
    return mark__delegate.call(this, args__13069__auto__);
  };
  mark.cljs$lang$maxFixedArity = 0;
  mark.cljs$lang$applyTo = function(arglist__29899) {
    var args__13069__auto__ = cljs.core.seq(arglist__29899);
    return mark__delegate(args__13069__auto__);
  };
  mark.cljs$core$IFn$_invoke$arity$variadic = mark__delegate;
  return mark;
}();
quiescent.dom.menu = function() {
  var menu__delegate = function(args__13069__auto__) {
    var a__13070__auto__ = [];
    a__13070__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__13069__auto__)));
    var seq__28030_29900 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__13069__auto__));
    var chunk__28031_29901 = null;
    var count__28032_29902 = 0;
    var i__28033_29903 = 0;
    while (true) {
      if (i__28033_29903 < count__28032_29902) {
        var arg__13071__auto___29904 = cljs.core._nth.call(null, chunk__28031_29901, i__28033_29903);
        a__13070__auto__.push(arg__13071__auto___29904);
        var G__29905 = seq__28030_29900;
        var G__29906 = chunk__28031_29901;
        var G__29907 = count__28032_29902;
        var G__29908 = i__28033_29903 + 1;
        seq__28030_29900 = G__29905;
        chunk__28031_29901 = G__29906;
        count__28032_29902 = G__29907;
        i__28033_29903 = G__29908;
        continue;
      } else {
        var temp__4126__auto___29909 = cljs.core.seq.call(null, seq__28030_29900);
        if (temp__4126__auto___29909) {
          var seq__28030_29910__$1 = temp__4126__auto___29909;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__28030_29910__$1)) {
            var c__8291__auto___29911 = cljs.core.chunk_first.call(null, seq__28030_29910__$1);
            var G__29912 = cljs.core.chunk_rest.call(null, seq__28030_29910__$1);
            var G__29913 = c__8291__auto___29911;
            var G__29914 = cljs.core.count.call(null, c__8291__auto___29911);
            var G__29915 = 0;
            seq__28030_29900 = G__29912;
            chunk__28031_29901 = G__29913;
            count__28032_29902 = G__29914;
            i__28033_29903 = G__29915;
            continue;
          } else {
            var arg__13071__auto___29916 = cljs.core.first.call(null, seq__28030_29910__$1);
            a__13070__auto__.push(arg__13071__auto___29916);
            var G__29917 = cljs.core.next.call(null, seq__28030_29910__$1);
            var G__29918 = null;
            var G__29919 = 0;
            var G__29920 = 0;
            seq__28030_29900 = G__29917;
            chunk__28031_29901 = G__29918;
            count__28032_29902 = G__29919;
            i__28033_29903 = G__29920;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.menu.apply(null, a__13070__auto__);
  };
  var menu = function(var_args) {
    var args__13069__auto__ = null;
    if (arguments.length > 0) {
      var G__29921__i = 0, G__29921__a = new Array(arguments.length - 0);
      while (G__29921__i < G__29921__a.length) {
        G__29921__a[G__29921__i] = arguments[G__29921__i + 0];
        ++G__29921__i;
      }
      args__13069__auto__ = new cljs.core.IndexedSeq(G__29921__a, 0);
    }
    return menu__delegate.call(this, args__13069__auto__);
  };
  menu.cljs$lang$maxFixedArity = 0;
  menu.cljs$lang$applyTo = function(arglist__29922) {
    var args__13069__auto__ = cljs.core.seq(arglist__29922);
    return menu__delegate(args__13069__auto__);
  };
  menu.cljs$core$IFn$_invoke$arity$variadic = menu__delegate;
  return menu;
}();
quiescent.dom.menuitem = function() {
  var menuitem__delegate = function(args__13069__auto__) {
    var a__13070__auto__ = [];
    a__13070__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__13069__auto__)));
    var seq__28038_29923 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__13069__auto__));
    var chunk__28039_29924 = null;
    var count__28040_29925 = 0;
    var i__28041_29926 = 0;
    while (true) {
      if (i__28041_29926 < count__28040_29925) {
        var arg__13071__auto___29927 = cljs.core._nth.call(null, chunk__28039_29924, i__28041_29926);
        a__13070__auto__.push(arg__13071__auto___29927);
        var G__29928 = seq__28038_29923;
        var G__29929 = chunk__28039_29924;
        var G__29930 = count__28040_29925;
        var G__29931 = i__28041_29926 + 1;
        seq__28038_29923 = G__29928;
        chunk__28039_29924 = G__29929;
        count__28040_29925 = G__29930;
        i__28041_29926 = G__29931;
        continue;
      } else {
        var temp__4126__auto___29932 = cljs.core.seq.call(null, seq__28038_29923);
        if (temp__4126__auto___29932) {
          var seq__28038_29933__$1 = temp__4126__auto___29932;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__28038_29933__$1)) {
            var c__8291__auto___29934 = cljs.core.chunk_first.call(null, seq__28038_29933__$1);
            var G__29935 = cljs.core.chunk_rest.call(null, seq__28038_29933__$1);
            var G__29936 = c__8291__auto___29934;
            var G__29937 = cljs.core.count.call(null, c__8291__auto___29934);
            var G__29938 = 0;
            seq__28038_29923 = G__29935;
            chunk__28039_29924 = G__29936;
            count__28040_29925 = G__29937;
            i__28041_29926 = G__29938;
            continue;
          } else {
            var arg__13071__auto___29939 = cljs.core.first.call(null, seq__28038_29933__$1);
            a__13070__auto__.push(arg__13071__auto___29939);
            var G__29940 = cljs.core.next.call(null, seq__28038_29933__$1);
            var G__29941 = null;
            var G__29942 = 0;
            var G__29943 = 0;
            seq__28038_29923 = G__29940;
            chunk__28039_29924 = G__29941;
            count__28040_29925 = G__29942;
            i__28041_29926 = G__29943;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.menuitem.apply(null, a__13070__auto__);
  };
  var menuitem = function(var_args) {
    var args__13069__auto__ = null;
    if (arguments.length > 0) {
      var G__29944__i = 0, G__29944__a = new Array(arguments.length - 0);
      while (G__29944__i < G__29944__a.length) {
        G__29944__a[G__29944__i] = arguments[G__29944__i + 0];
        ++G__29944__i;
      }
      args__13069__auto__ = new cljs.core.IndexedSeq(G__29944__a, 0);
    }
    return menuitem__delegate.call(this, args__13069__auto__);
  };
  menuitem.cljs$lang$maxFixedArity = 0;
  menuitem.cljs$lang$applyTo = function(arglist__29945) {
    var args__13069__auto__ = cljs.core.seq(arglist__29945);
    return menuitem__delegate(args__13069__auto__);
  };
  menuitem.cljs$core$IFn$_invoke$arity$variadic = menuitem__delegate;
  return menuitem;
}();
quiescent.dom.meta = function() {
  var meta__delegate = function(args__13069__auto__) {
    var a__13070__auto__ = [];
    a__13070__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__13069__auto__)));
    var seq__28046_29946 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__13069__auto__));
    var chunk__28047_29947 = null;
    var count__28048_29948 = 0;
    var i__28049_29949 = 0;
    while (true) {
      if (i__28049_29949 < count__28048_29948) {
        var arg__13071__auto___29950 = cljs.core._nth.call(null, chunk__28047_29947, i__28049_29949);
        a__13070__auto__.push(arg__13071__auto___29950);
        var G__29951 = seq__28046_29946;
        var G__29952 = chunk__28047_29947;
        var G__29953 = count__28048_29948;
        var G__29954 = i__28049_29949 + 1;
        seq__28046_29946 = G__29951;
        chunk__28047_29947 = G__29952;
        count__28048_29948 = G__29953;
        i__28049_29949 = G__29954;
        continue;
      } else {
        var temp__4126__auto___29955 = cljs.core.seq.call(null, seq__28046_29946);
        if (temp__4126__auto___29955) {
          var seq__28046_29956__$1 = temp__4126__auto___29955;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__28046_29956__$1)) {
            var c__8291__auto___29957 = cljs.core.chunk_first.call(null, seq__28046_29956__$1);
            var G__29958 = cljs.core.chunk_rest.call(null, seq__28046_29956__$1);
            var G__29959 = c__8291__auto___29957;
            var G__29960 = cljs.core.count.call(null, c__8291__auto___29957);
            var G__29961 = 0;
            seq__28046_29946 = G__29958;
            chunk__28047_29947 = G__29959;
            count__28048_29948 = G__29960;
            i__28049_29949 = G__29961;
            continue;
          } else {
            var arg__13071__auto___29962 = cljs.core.first.call(null, seq__28046_29956__$1);
            a__13070__auto__.push(arg__13071__auto___29962);
            var G__29963 = cljs.core.next.call(null, seq__28046_29956__$1);
            var G__29964 = null;
            var G__29965 = 0;
            var G__29966 = 0;
            seq__28046_29946 = G__29963;
            chunk__28047_29947 = G__29964;
            count__28048_29948 = G__29965;
            i__28049_29949 = G__29966;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.meta.apply(null, a__13070__auto__);
  };
  var meta = function(var_args) {
    var args__13069__auto__ = null;
    if (arguments.length > 0) {
      var G__29967__i = 0, G__29967__a = new Array(arguments.length - 0);
      while (G__29967__i < G__29967__a.length) {
        G__29967__a[G__29967__i] = arguments[G__29967__i + 0];
        ++G__29967__i;
      }
      args__13069__auto__ = new cljs.core.IndexedSeq(G__29967__a, 0);
    }
    return meta__delegate.call(this, args__13069__auto__);
  };
  meta.cljs$lang$maxFixedArity = 0;
  meta.cljs$lang$applyTo = function(arglist__29968) {
    var args__13069__auto__ = cljs.core.seq(arglist__29968);
    return meta__delegate(args__13069__auto__);
  };
  meta.cljs$core$IFn$_invoke$arity$variadic = meta__delegate;
  return meta;
}();
quiescent.dom.meter = function() {
  var meter__delegate = function(args__13069__auto__) {
    var a__13070__auto__ = [];
    a__13070__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__13069__auto__)));
    var seq__28054_29969 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__13069__auto__));
    var chunk__28055_29970 = null;
    var count__28056_29971 = 0;
    var i__28057_29972 = 0;
    while (true) {
      if (i__28057_29972 < count__28056_29971) {
        var arg__13071__auto___29973 = cljs.core._nth.call(null, chunk__28055_29970, i__28057_29972);
        a__13070__auto__.push(arg__13071__auto___29973);
        var G__29974 = seq__28054_29969;
        var G__29975 = chunk__28055_29970;
        var G__29976 = count__28056_29971;
        var G__29977 = i__28057_29972 + 1;
        seq__28054_29969 = G__29974;
        chunk__28055_29970 = G__29975;
        count__28056_29971 = G__29976;
        i__28057_29972 = G__29977;
        continue;
      } else {
        var temp__4126__auto___29978 = cljs.core.seq.call(null, seq__28054_29969);
        if (temp__4126__auto___29978) {
          var seq__28054_29979__$1 = temp__4126__auto___29978;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__28054_29979__$1)) {
            var c__8291__auto___29980 = cljs.core.chunk_first.call(null, seq__28054_29979__$1);
            var G__29981 = cljs.core.chunk_rest.call(null, seq__28054_29979__$1);
            var G__29982 = c__8291__auto___29980;
            var G__29983 = cljs.core.count.call(null, c__8291__auto___29980);
            var G__29984 = 0;
            seq__28054_29969 = G__29981;
            chunk__28055_29970 = G__29982;
            count__28056_29971 = G__29983;
            i__28057_29972 = G__29984;
            continue;
          } else {
            var arg__13071__auto___29985 = cljs.core.first.call(null, seq__28054_29979__$1);
            a__13070__auto__.push(arg__13071__auto___29985);
            var G__29986 = cljs.core.next.call(null, seq__28054_29979__$1);
            var G__29987 = null;
            var G__29988 = 0;
            var G__29989 = 0;
            seq__28054_29969 = G__29986;
            chunk__28055_29970 = G__29987;
            count__28056_29971 = G__29988;
            i__28057_29972 = G__29989;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.meter.apply(null, a__13070__auto__);
  };
  var meter = function(var_args) {
    var args__13069__auto__ = null;
    if (arguments.length > 0) {
      var G__29990__i = 0, G__29990__a = new Array(arguments.length - 0);
      while (G__29990__i < G__29990__a.length) {
        G__29990__a[G__29990__i] = arguments[G__29990__i + 0];
        ++G__29990__i;
      }
      args__13069__auto__ = new cljs.core.IndexedSeq(G__29990__a, 0);
    }
    return meter__delegate.call(this, args__13069__auto__);
  };
  meter.cljs$lang$maxFixedArity = 0;
  meter.cljs$lang$applyTo = function(arglist__29991) {
    var args__13069__auto__ = cljs.core.seq(arglist__29991);
    return meter__delegate(args__13069__auto__);
  };
  meter.cljs$core$IFn$_invoke$arity$variadic = meter__delegate;
  return meter;
}();
quiescent.dom.nav = function() {
  var nav__delegate = function(args__13069__auto__) {
    var a__13070__auto__ = [];
    a__13070__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__13069__auto__)));
    var seq__28062_29992 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__13069__auto__));
    var chunk__28063_29993 = null;
    var count__28064_29994 = 0;
    var i__28065_29995 = 0;
    while (true) {
      if (i__28065_29995 < count__28064_29994) {
        var arg__13071__auto___29996 = cljs.core._nth.call(null, chunk__28063_29993, i__28065_29995);
        a__13070__auto__.push(arg__13071__auto___29996);
        var G__29997 = seq__28062_29992;
        var G__29998 = chunk__28063_29993;
        var G__29999 = count__28064_29994;
        var G__30000 = i__28065_29995 + 1;
        seq__28062_29992 = G__29997;
        chunk__28063_29993 = G__29998;
        count__28064_29994 = G__29999;
        i__28065_29995 = G__30000;
        continue;
      } else {
        var temp__4126__auto___30001 = cljs.core.seq.call(null, seq__28062_29992);
        if (temp__4126__auto___30001) {
          var seq__28062_30002__$1 = temp__4126__auto___30001;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__28062_30002__$1)) {
            var c__8291__auto___30003 = cljs.core.chunk_first.call(null, seq__28062_30002__$1);
            var G__30004 = cljs.core.chunk_rest.call(null, seq__28062_30002__$1);
            var G__30005 = c__8291__auto___30003;
            var G__30006 = cljs.core.count.call(null, c__8291__auto___30003);
            var G__30007 = 0;
            seq__28062_29992 = G__30004;
            chunk__28063_29993 = G__30005;
            count__28064_29994 = G__30006;
            i__28065_29995 = G__30007;
            continue;
          } else {
            var arg__13071__auto___30008 = cljs.core.first.call(null, seq__28062_30002__$1);
            a__13070__auto__.push(arg__13071__auto___30008);
            var G__30009 = cljs.core.next.call(null, seq__28062_30002__$1);
            var G__30010 = null;
            var G__30011 = 0;
            var G__30012 = 0;
            seq__28062_29992 = G__30009;
            chunk__28063_29993 = G__30010;
            count__28064_29994 = G__30011;
            i__28065_29995 = G__30012;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.nav.apply(null, a__13070__auto__);
  };
  var nav = function(var_args) {
    var args__13069__auto__ = null;
    if (arguments.length > 0) {
      var G__30013__i = 0, G__30013__a = new Array(arguments.length - 0);
      while (G__30013__i < G__30013__a.length) {
        G__30013__a[G__30013__i] = arguments[G__30013__i + 0];
        ++G__30013__i;
      }
      args__13069__auto__ = new cljs.core.IndexedSeq(G__30013__a, 0);
    }
    return nav__delegate.call(this, args__13069__auto__);
  };
  nav.cljs$lang$maxFixedArity = 0;
  nav.cljs$lang$applyTo = function(arglist__30014) {
    var args__13069__auto__ = cljs.core.seq(arglist__30014);
    return nav__delegate(args__13069__auto__);
  };
  nav.cljs$core$IFn$_invoke$arity$variadic = nav__delegate;
  return nav;
}();
quiescent.dom.noscript = function() {
  var noscript__delegate = function(args__13069__auto__) {
    var a__13070__auto__ = [];
    a__13070__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__13069__auto__)));
    var seq__28070_30015 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__13069__auto__));
    var chunk__28071_30016 = null;
    var count__28072_30017 = 0;
    var i__28073_30018 = 0;
    while (true) {
      if (i__28073_30018 < count__28072_30017) {
        var arg__13071__auto___30019 = cljs.core._nth.call(null, chunk__28071_30016, i__28073_30018);
        a__13070__auto__.push(arg__13071__auto___30019);
        var G__30020 = seq__28070_30015;
        var G__30021 = chunk__28071_30016;
        var G__30022 = count__28072_30017;
        var G__30023 = i__28073_30018 + 1;
        seq__28070_30015 = G__30020;
        chunk__28071_30016 = G__30021;
        count__28072_30017 = G__30022;
        i__28073_30018 = G__30023;
        continue;
      } else {
        var temp__4126__auto___30024 = cljs.core.seq.call(null, seq__28070_30015);
        if (temp__4126__auto___30024) {
          var seq__28070_30025__$1 = temp__4126__auto___30024;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__28070_30025__$1)) {
            var c__8291__auto___30026 = cljs.core.chunk_first.call(null, seq__28070_30025__$1);
            var G__30027 = cljs.core.chunk_rest.call(null, seq__28070_30025__$1);
            var G__30028 = c__8291__auto___30026;
            var G__30029 = cljs.core.count.call(null, c__8291__auto___30026);
            var G__30030 = 0;
            seq__28070_30015 = G__30027;
            chunk__28071_30016 = G__30028;
            count__28072_30017 = G__30029;
            i__28073_30018 = G__30030;
            continue;
          } else {
            var arg__13071__auto___30031 = cljs.core.first.call(null, seq__28070_30025__$1);
            a__13070__auto__.push(arg__13071__auto___30031);
            var G__30032 = cljs.core.next.call(null, seq__28070_30025__$1);
            var G__30033 = null;
            var G__30034 = 0;
            var G__30035 = 0;
            seq__28070_30015 = G__30032;
            chunk__28071_30016 = G__30033;
            count__28072_30017 = G__30034;
            i__28073_30018 = G__30035;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.noscript.apply(null, a__13070__auto__);
  };
  var noscript = function(var_args) {
    var args__13069__auto__ = null;
    if (arguments.length > 0) {
      var G__30036__i = 0, G__30036__a = new Array(arguments.length - 0);
      while (G__30036__i < G__30036__a.length) {
        G__30036__a[G__30036__i] = arguments[G__30036__i + 0];
        ++G__30036__i;
      }
      args__13069__auto__ = new cljs.core.IndexedSeq(G__30036__a, 0);
    }
    return noscript__delegate.call(this, args__13069__auto__);
  };
  noscript.cljs$lang$maxFixedArity = 0;
  noscript.cljs$lang$applyTo = function(arglist__30037) {
    var args__13069__auto__ = cljs.core.seq(arglist__30037);
    return noscript__delegate(args__13069__auto__);
  };
  noscript.cljs$core$IFn$_invoke$arity$variadic = noscript__delegate;
  return noscript;
}();
quiescent.dom.object = function() {
  var object__delegate = function(args__13069__auto__) {
    var a__13070__auto__ = [];
    a__13070__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__13069__auto__)));
    var seq__28078_30038 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__13069__auto__));
    var chunk__28079_30039 = null;
    var count__28080_30040 = 0;
    var i__28081_30041 = 0;
    while (true) {
      if (i__28081_30041 < count__28080_30040) {
        var arg__13071__auto___30042 = cljs.core._nth.call(null, chunk__28079_30039, i__28081_30041);
        a__13070__auto__.push(arg__13071__auto___30042);
        var G__30043 = seq__28078_30038;
        var G__30044 = chunk__28079_30039;
        var G__30045 = count__28080_30040;
        var G__30046 = i__28081_30041 + 1;
        seq__28078_30038 = G__30043;
        chunk__28079_30039 = G__30044;
        count__28080_30040 = G__30045;
        i__28081_30041 = G__30046;
        continue;
      } else {
        var temp__4126__auto___30047 = cljs.core.seq.call(null, seq__28078_30038);
        if (temp__4126__auto___30047) {
          var seq__28078_30048__$1 = temp__4126__auto___30047;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__28078_30048__$1)) {
            var c__8291__auto___30049 = cljs.core.chunk_first.call(null, seq__28078_30048__$1);
            var G__30050 = cljs.core.chunk_rest.call(null, seq__28078_30048__$1);
            var G__30051 = c__8291__auto___30049;
            var G__30052 = cljs.core.count.call(null, c__8291__auto___30049);
            var G__30053 = 0;
            seq__28078_30038 = G__30050;
            chunk__28079_30039 = G__30051;
            count__28080_30040 = G__30052;
            i__28081_30041 = G__30053;
            continue;
          } else {
            var arg__13071__auto___30054 = cljs.core.first.call(null, seq__28078_30048__$1);
            a__13070__auto__.push(arg__13071__auto___30054);
            var G__30055 = cljs.core.next.call(null, seq__28078_30048__$1);
            var G__30056 = null;
            var G__30057 = 0;
            var G__30058 = 0;
            seq__28078_30038 = G__30055;
            chunk__28079_30039 = G__30056;
            count__28080_30040 = G__30057;
            i__28081_30041 = G__30058;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.object.apply(null, a__13070__auto__);
  };
  var object = function(var_args) {
    var args__13069__auto__ = null;
    if (arguments.length > 0) {
      var G__30059__i = 0, G__30059__a = new Array(arguments.length - 0);
      while (G__30059__i < G__30059__a.length) {
        G__30059__a[G__30059__i] = arguments[G__30059__i + 0];
        ++G__30059__i;
      }
      args__13069__auto__ = new cljs.core.IndexedSeq(G__30059__a, 0);
    }
    return object__delegate.call(this, args__13069__auto__);
  };
  object.cljs$lang$maxFixedArity = 0;
  object.cljs$lang$applyTo = function(arglist__30060) {
    var args__13069__auto__ = cljs.core.seq(arglist__30060);
    return object__delegate(args__13069__auto__);
  };
  object.cljs$core$IFn$_invoke$arity$variadic = object__delegate;
  return object;
}();
quiescent.dom.ol = function() {
  var ol__delegate = function(args__13069__auto__) {
    var a__13070__auto__ = [];
    a__13070__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__13069__auto__)));
    var seq__28086_30061 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__13069__auto__));
    var chunk__28087_30062 = null;
    var count__28088_30063 = 0;
    var i__28089_30064 = 0;
    while (true) {
      if (i__28089_30064 < count__28088_30063) {
        var arg__13071__auto___30065 = cljs.core._nth.call(null, chunk__28087_30062, i__28089_30064);
        a__13070__auto__.push(arg__13071__auto___30065);
        var G__30066 = seq__28086_30061;
        var G__30067 = chunk__28087_30062;
        var G__30068 = count__28088_30063;
        var G__30069 = i__28089_30064 + 1;
        seq__28086_30061 = G__30066;
        chunk__28087_30062 = G__30067;
        count__28088_30063 = G__30068;
        i__28089_30064 = G__30069;
        continue;
      } else {
        var temp__4126__auto___30070 = cljs.core.seq.call(null, seq__28086_30061);
        if (temp__4126__auto___30070) {
          var seq__28086_30071__$1 = temp__4126__auto___30070;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__28086_30071__$1)) {
            var c__8291__auto___30072 = cljs.core.chunk_first.call(null, seq__28086_30071__$1);
            var G__30073 = cljs.core.chunk_rest.call(null, seq__28086_30071__$1);
            var G__30074 = c__8291__auto___30072;
            var G__30075 = cljs.core.count.call(null, c__8291__auto___30072);
            var G__30076 = 0;
            seq__28086_30061 = G__30073;
            chunk__28087_30062 = G__30074;
            count__28088_30063 = G__30075;
            i__28089_30064 = G__30076;
            continue;
          } else {
            var arg__13071__auto___30077 = cljs.core.first.call(null, seq__28086_30071__$1);
            a__13070__auto__.push(arg__13071__auto___30077);
            var G__30078 = cljs.core.next.call(null, seq__28086_30071__$1);
            var G__30079 = null;
            var G__30080 = 0;
            var G__30081 = 0;
            seq__28086_30061 = G__30078;
            chunk__28087_30062 = G__30079;
            count__28088_30063 = G__30080;
            i__28089_30064 = G__30081;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.ol.apply(null, a__13070__auto__);
  };
  var ol = function(var_args) {
    var args__13069__auto__ = null;
    if (arguments.length > 0) {
      var G__30082__i = 0, G__30082__a = new Array(arguments.length - 0);
      while (G__30082__i < G__30082__a.length) {
        G__30082__a[G__30082__i] = arguments[G__30082__i + 0];
        ++G__30082__i;
      }
      args__13069__auto__ = new cljs.core.IndexedSeq(G__30082__a, 0);
    }
    return ol__delegate.call(this, args__13069__auto__);
  };
  ol.cljs$lang$maxFixedArity = 0;
  ol.cljs$lang$applyTo = function(arglist__30083) {
    var args__13069__auto__ = cljs.core.seq(arglist__30083);
    return ol__delegate(args__13069__auto__);
  };
  ol.cljs$core$IFn$_invoke$arity$variadic = ol__delegate;
  return ol;
}();
quiescent.dom.optgroup = function() {
  var optgroup__delegate = function(args__13069__auto__) {
    var a__13070__auto__ = [];
    a__13070__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__13069__auto__)));
    var seq__28094_30084 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__13069__auto__));
    var chunk__28095_30085 = null;
    var count__28096_30086 = 0;
    var i__28097_30087 = 0;
    while (true) {
      if (i__28097_30087 < count__28096_30086) {
        var arg__13071__auto___30088 = cljs.core._nth.call(null, chunk__28095_30085, i__28097_30087);
        a__13070__auto__.push(arg__13071__auto___30088);
        var G__30089 = seq__28094_30084;
        var G__30090 = chunk__28095_30085;
        var G__30091 = count__28096_30086;
        var G__30092 = i__28097_30087 + 1;
        seq__28094_30084 = G__30089;
        chunk__28095_30085 = G__30090;
        count__28096_30086 = G__30091;
        i__28097_30087 = G__30092;
        continue;
      } else {
        var temp__4126__auto___30093 = cljs.core.seq.call(null, seq__28094_30084);
        if (temp__4126__auto___30093) {
          var seq__28094_30094__$1 = temp__4126__auto___30093;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__28094_30094__$1)) {
            var c__8291__auto___30095 = cljs.core.chunk_first.call(null, seq__28094_30094__$1);
            var G__30096 = cljs.core.chunk_rest.call(null, seq__28094_30094__$1);
            var G__30097 = c__8291__auto___30095;
            var G__30098 = cljs.core.count.call(null, c__8291__auto___30095);
            var G__30099 = 0;
            seq__28094_30084 = G__30096;
            chunk__28095_30085 = G__30097;
            count__28096_30086 = G__30098;
            i__28097_30087 = G__30099;
            continue;
          } else {
            var arg__13071__auto___30100 = cljs.core.first.call(null, seq__28094_30094__$1);
            a__13070__auto__.push(arg__13071__auto___30100);
            var G__30101 = cljs.core.next.call(null, seq__28094_30094__$1);
            var G__30102 = null;
            var G__30103 = 0;
            var G__30104 = 0;
            seq__28094_30084 = G__30101;
            chunk__28095_30085 = G__30102;
            count__28096_30086 = G__30103;
            i__28097_30087 = G__30104;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.optgroup.apply(null, a__13070__auto__);
  };
  var optgroup = function(var_args) {
    var args__13069__auto__ = null;
    if (arguments.length > 0) {
      var G__30105__i = 0, G__30105__a = new Array(arguments.length - 0);
      while (G__30105__i < G__30105__a.length) {
        G__30105__a[G__30105__i] = arguments[G__30105__i + 0];
        ++G__30105__i;
      }
      args__13069__auto__ = new cljs.core.IndexedSeq(G__30105__a, 0);
    }
    return optgroup__delegate.call(this, args__13069__auto__);
  };
  optgroup.cljs$lang$maxFixedArity = 0;
  optgroup.cljs$lang$applyTo = function(arglist__30106) {
    var args__13069__auto__ = cljs.core.seq(arglist__30106);
    return optgroup__delegate(args__13069__auto__);
  };
  optgroup.cljs$core$IFn$_invoke$arity$variadic = optgroup__delegate;
  return optgroup;
}();
quiescent.dom.option = function() {
  var option__delegate = function(args__13069__auto__) {
    var a__13070__auto__ = [];
    a__13070__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__13069__auto__)));
    var seq__28102_30107 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__13069__auto__));
    var chunk__28103_30108 = null;
    var count__28104_30109 = 0;
    var i__28105_30110 = 0;
    while (true) {
      if (i__28105_30110 < count__28104_30109) {
        var arg__13071__auto___30111 = cljs.core._nth.call(null, chunk__28103_30108, i__28105_30110);
        a__13070__auto__.push(arg__13071__auto___30111);
        var G__30112 = seq__28102_30107;
        var G__30113 = chunk__28103_30108;
        var G__30114 = count__28104_30109;
        var G__30115 = i__28105_30110 + 1;
        seq__28102_30107 = G__30112;
        chunk__28103_30108 = G__30113;
        count__28104_30109 = G__30114;
        i__28105_30110 = G__30115;
        continue;
      } else {
        var temp__4126__auto___30116 = cljs.core.seq.call(null, seq__28102_30107);
        if (temp__4126__auto___30116) {
          var seq__28102_30117__$1 = temp__4126__auto___30116;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__28102_30117__$1)) {
            var c__8291__auto___30118 = cljs.core.chunk_first.call(null, seq__28102_30117__$1);
            var G__30119 = cljs.core.chunk_rest.call(null, seq__28102_30117__$1);
            var G__30120 = c__8291__auto___30118;
            var G__30121 = cljs.core.count.call(null, c__8291__auto___30118);
            var G__30122 = 0;
            seq__28102_30107 = G__30119;
            chunk__28103_30108 = G__30120;
            count__28104_30109 = G__30121;
            i__28105_30110 = G__30122;
            continue;
          } else {
            var arg__13071__auto___30123 = cljs.core.first.call(null, seq__28102_30117__$1);
            a__13070__auto__.push(arg__13071__auto___30123);
            var G__30124 = cljs.core.next.call(null, seq__28102_30117__$1);
            var G__30125 = null;
            var G__30126 = 0;
            var G__30127 = 0;
            seq__28102_30107 = G__30124;
            chunk__28103_30108 = G__30125;
            count__28104_30109 = G__30126;
            i__28105_30110 = G__30127;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.option.apply(null, a__13070__auto__);
  };
  var option = function(var_args) {
    var args__13069__auto__ = null;
    if (arguments.length > 0) {
      var G__30128__i = 0, G__30128__a = new Array(arguments.length - 0);
      while (G__30128__i < G__30128__a.length) {
        G__30128__a[G__30128__i] = arguments[G__30128__i + 0];
        ++G__30128__i;
      }
      args__13069__auto__ = new cljs.core.IndexedSeq(G__30128__a, 0);
    }
    return option__delegate.call(this, args__13069__auto__);
  };
  option.cljs$lang$maxFixedArity = 0;
  option.cljs$lang$applyTo = function(arglist__30129) {
    var args__13069__auto__ = cljs.core.seq(arglist__30129);
    return option__delegate(args__13069__auto__);
  };
  option.cljs$core$IFn$_invoke$arity$variadic = option__delegate;
  return option;
}();
quiescent.dom.output = function() {
  var output__delegate = function(args__13069__auto__) {
    var a__13070__auto__ = [];
    a__13070__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__13069__auto__)));
    var seq__28110_30130 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__13069__auto__));
    var chunk__28111_30131 = null;
    var count__28112_30132 = 0;
    var i__28113_30133 = 0;
    while (true) {
      if (i__28113_30133 < count__28112_30132) {
        var arg__13071__auto___30134 = cljs.core._nth.call(null, chunk__28111_30131, i__28113_30133);
        a__13070__auto__.push(arg__13071__auto___30134);
        var G__30135 = seq__28110_30130;
        var G__30136 = chunk__28111_30131;
        var G__30137 = count__28112_30132;
        var G__30138 = i__28113_30133 + 1;
        seq__28110_30130 = G__30135;
        chunk__28111_30131 = G__30136;
        count__28112_30132 = G__30137;
        i__28113_30133 = G__30138;
        continue;
      } else {
        var temp__4126__auto___30139 = cljs.core.seq.call(null, seq__28110_30130);
        if (temp__4126__auto___30139) {
          var seq__28110_30140__$1 = temp__4126__auto___30139;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__28110_30140__$1)) {
            var c__8291__auto___30141 = cljs.core.chunk_first.call(null, seq__28110_30140__$1);
            var G__30142 = cljs.core.chunk_rest.call(null, seq__28110_30140__$1);
            var G__30143 = c__8291__auto___30141;
            var G__30144 = cljs.core.count.call(null, c__8291__auto___30141);
            var G__30145 = 0;
            seq__28110_30130 = G__30142;
            chunk__28111_30131 = G__30143;
            count__28112_30132 = G__30144;
            i__28113_30133 = G__30145;
            continue;
          } else {
            var arg__13071__auto___30146 = cljs.core.first.call(null, seq__28110_30140__$1);
            a__13070__auto__.push(arg__13071__auto___30146);
            var G__30147 = cljs.core.next.call(null, seq__28110_30140__$1);
            var G__30148 = null;
            var G__30149 = 0;
            var G__30150 = 0;
            seq__28110_30130 = G__30147;
            chunk__28111_30131 = G__30148;
            count__28112_30132 = G__30149;
            i__28113_30133 = G__30150;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.output.apply(null, a__13070__auto__);
  };
  var output = function(var_args) {
    var args__13069__auto__ = null;
    if (arguments.length > 0) {
      var G__30151__i = 0, G__30151__a = new Array(arguments.length - 0);
      while (G__30151__i < G__30151__a.length) {
        G__30151__a[G__30151__i] = arguments[G__30151__i + 0];
        ++G__30151__i;
      }
      args__13069__auto__ = new cljs.core.IndexedSeq(G__30151__a, 0);
    }
    return output__delegate.call(this, args__13069__auto__);
  };
  output.cljs$lang$maxFixedArity = 0;
  output.cljs$lang$applyTo = function(arglist__30152) {
    var args__13069__auto__ = cljs.core.seq(arglist__30152);
    return output__delegate(args__13069__auto__);
  };
  output.cljs$core$IFn$_invoke$arity$variadic = output__delegate;
  return output;
}();
quiescent.dom.p = function() {
  var p__delegate = function(args__13069__auto__) {
    var a__13070__auto__ = [];
    a__13070__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__13069__auto__)));
    var seq__28118_30153 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__13069__auto__));
    var chunk__28119_30154 = null;
    var count__28120_30155 = 0;
    var i__28121_30156 = 0;
    while (true) {
      if (i__28121_30156 < count__28120_30155) {
        var arg__13071__auto___30157 = cljs.core._nth.call(null, chunk__28119_30154, i__28121_30156);
        a__13070__auto__.push(arg__13071__auto___30157);
        var G__30158 = seq__28118_30153;
        var G__30159 = chunk__28119_30154;
        var G__30160 = count__28120_30155;
        var G__30161 = i__28121_30156 + 1;
        seq__28118_30153 = G__30158;
        chunk__28119_30154 = G__30159;
        count__28120_30155 = G__30160;
        i__28121_30156 = G__30161;
        continue;
      } else {
        var temp__4126__auto___30162 = cljs.core.seq.call(null, seq__28118_30153);
        if (temp__4126__auto___30162) {
          var seq__28118_30163__$1 = temp__4126__auto___30162;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__28118_30163__$1)) {
            var c__8291__auto___30164 = cljs.core.chunk_first.call(null, seq__28118_30163__$1);
            var G__30165 = cljs.core.chunk_rest.call(null, seq__28118_30163__$1);
            var G__30166 = c__8291__auto___30164;
            var G__30167 = cljs.core.count.call(null, c__8291__auto___30164);
            var G__30168 = 0;
            seq__28118_30153 = G__30165;
            chunk__28119_30154 = G__30166;
            count__28120_30155 = G__30167;
            i__28121_30156 = G__30168;
            continue;
          } else {
            var arg__13071__auto___30169 = cljs.core.first.call(null, seq__28118_30163__$1);
            a__13070__auto__.push(arg__13071__auto___30169);
            var G__30170 = cljs.core.next.call(null, seq__28118_30163__$1);
            var G__30171 = null;
            var G__30172 = 0;
            var G__30173 = 0;
            seq__28118_30153 = G__30170;
            chunk__28119_30154 = G__30171;
            count__28120_30155 = G__30172;
            i__28121_30156 = G__30173;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.p.apply(null, a__13070__auto__);
  };
  var p = function(var_args) {
    var args__13069__auto__ = null;
    if (arguments.length > 0) {
      var G__30174__i = 0, G__30174__a = new Array(arguments.length - 0);
      while (G__30174__i < G__30174__a.length) {
        G__30174__a[G__30174__i] = arguments[G__30174__i + 0];
        ++G__30174__i;
      }
      args__13069__auto__ = new cljs.core.IndexedSeq(G__30174__a, 0);
    }
    return p__delegate.call(this, args__13069__auto__);
  };
  p.cljs$lang$maxFixedArity = 0;
  p.cljs$lang$applyTo = function(arglist__30175) {
    var args__13069__auto__ = cljs.core.seq(arglist__30175);
    return p__delegate(args__13069__auto__);
  };
  p.cljs$core$IFn$_invoke$arity$variadic = p__delegate;
  return p;
}();
quiescent.dom.param = function() {
  var param__delegate = function(args__13069__auto__) {
    var a__13070__auto__ = [];
    a__13070__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__13069__auto__)));
    var seq__28126_30176 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__13069__auto__));
    var chunk__28127_30177 = null;
    var count__28128_30178 = 0;
    var i__28129_30179 = 0;
    while (true) {
      if (i__28129_30179 < count__28128_30178) {
        var arg__13071__auto___30180 = cljs.core._nth.call(null, chunk__28127_30177, i__28129_30179);
        a__13070__auto__.push(arg__13071__auto___30180);
        var G__30181 = seq__28126_30176;
        var G__30182 = chunk__28127_30177;
        var G__30183 = count__28128_30178;
        var G__30184 = i__28129_30179 + 1;
        seq__28126_30176 = G__30181;
        chunk__28127_30177 = G__30182;
        count__28128_30178 = G__30183;
        i__28129_30179 = G__30184;
        continue;
      } else {
        var temp__4126__auto___30185 = cljs.core.seq.call(null, seq__28126_30176);
        if (temp__4126__auto___30185) {
          var seq__28126_30186__$1 = temp__4126__auto___30185;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__28126_30186__$1)) {
            var c__8291__auto___30187 = cljs.core.chunk_first.call(null, seq__28126_30186__$1);
            var G__30188 = cljs.core.chunk_rest.call(null, seq__28126_30186__$1);
            var G__30189 = c__8291__auto___30187;
            var G__30190 = cljs.core.count.call(null, c__8291__auto___30187);
            var G__30191 = 0;
            seq__28126_30176 = G__30188;
            chunk__28127_30177 = G__30189;
            count__28128_30178 = G__30190;
            i__28129_30179 = G__30191;
            continue;
          } else {
            var arg__13071__auto___30192 = cljs.core.first.call(null, seq__28126_30186__$1);
            a__13070__auto__.push(arg__13071__auto___30192);
            var G__30193 = cljs.core.next.call(null, seq__28126_30186__$1);
            var G__30194 = null;
            var G__30195 = 0;
            var G__30196 = 0;
            seq__28126_30176 = G__30193;
            chunk__28127_30177 = G__30194;
            count__28128_30178 = G__30195;
            i__28129_30179 = G__30196;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.param.apply(null, a__13070__auto__);
  };
  var param = function(var_args) {
    var args__13069__auto__ = null;
    if (arguments.length > 0) {
      var G__30197__i = 0, G__30197__a = new Array(arguments.length - 0);
      while (G__30197__i < G__30197__a.length) {
        G__30197__a[G__30197__i] = arguments[G__30197__i + 0];
        ++G__30197__i;
      }
      args__13069__auto__ = new cljs.core.IndexedSeq(G__30197__a, 0);
    }
    return param__delegate.call(this, args__13069__auto__);
  };
  param.cljs$lang$maxFixedArity = 0;
  param.cljs$lang$applyTo = function(arglist__30198) {
    var args__13069__auto__ = cljs.core.seq(arglist__30198);
    return param__delegate(args__13069__auto__);
  };
  param.cljs$core$IFn$_invoke$arity$variadic = param__delegate;
  return param;
}();
quiescent.dom.pre = function() {
  var pre__delegate = function(args__13069__auto__) {
    var a__13070__auto__ = [];
    a__13070__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__13069__auto__)));
    var seq__28134_30199 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__13069__auto__));
    var chunk__28135_30200 = null;
    var count__28136_30201 = 0;
    var i__28137_30202 = 0;
    while (true) {
      if (i__28137_30202 < count__28136_30201) {
        var arg__13071__auto___30203 = cljs.core._nth.call(null, chunk__28135_30200, i__28137_30202);
        a__13070__auto__.push(arg__13071__auto___30203);
        var G__30204 = seq__28134_30199;
        var G__30205 = chunk__28135_30200;
        var G__30206 = count__28136_30201;
        var G__30207 = i__28137_30202 + 1;
        seq__28134_30199 = G__30204;
        chunk__28135_30200 = G__30205;
        count__28136_30201 = G__30206;
        i__28137_30202 = G__30207;
        continue;
      } else {
        var temp__4126__auto___30208 = cljs.core.seq.call(null, seq__28134_30199);
        if (temp__4126__auto___30208) {
          var seq__28134_30209__$1 = temp__4126__auto___30208;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__28134_30209__$1)) {
            var c__8291__auto___30210 = cljs.core.chunk_first.call(null, seq__28134_30209__$1);
            var G__30211 = cljs.core.chunk_rest.call(null, seq__28134_30209__$1);
            var G__30212 = c__8291__auto___30210;
            var G__30213 = cljs.core.count.call(null, c__8291__auto___30210);
            var G__30214 = 0;
            seq__28134_30199 = G__30211;
            chunk__28135_30200 = G__30212;
            count__28136_30201 = G__30213;
            i__28137_30202 = G__30214;
            continue;
          } else {
            var arg__13071__auto___30215 = cljs.core.first.call(null, seq__28134_30209__$1);
            a__13070__auto__.push(arg__13071__auto___30215);
            var G__30216 = cljs.core.next.call(null, seq__28134_30209__$1);
            var G__30217 = null;
            var G__30218 = 0;
            var G__30219 = 0;
            seq__28134_30199 = G__30216;
            chunk__28135_30200 = G__30217;
            count__28136_30201 = G__30218;
            i__28137_30202 = G__30219;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.pre.apply(null, a__13070__auto__);
  };
  var pre = function(var_args) {
    var args__13069__auto__ = null;
    if (arguments.length > 0) {
      var G__30220__i = 0, G__30220__a = new Array(arguments.length - 0);
      while (G__30220__i < G__30220__a.length) {
        G__30220__a[G__30220__i] = arguments[G__30220__i + 0];
        ++G__30220__i;
      }
      args__13069__auto__ = new cljs.core.IndexedSeq(G__30220__a, 0);
    }
    return pre__delegate.call(this, args__13069__auto__);
  };
  pre.cljs$lang$maxFixedArity = 0;
  pre.cljs$lang$applyTo = function(arglist__30221) {
    var args__13069__auto__ = cljs.core.seq(arglist__30221);
    return pre__delegate(args__13069__auto__);
  };
  pre.cljs$core$IFn$_invoke$arity$variadic = pre__delegate;
  return pre;
}();
quiescent.dom.progress = function() {
  var progress__delegate = function(args__13069__auto__) {
    var a__13070__auto__ = [];
    a__13070__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__13069__auto__)));
    var seq__28142_30222 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__13069__auto__));
    var chunk__28143_30223 = null;
    var count__28144_30224 = 0;
    var i__28145_30225 = 0;
    while (true) {
      if (i__28145_30225 < count__28144_30224) {
        var arg__13071__auto___30226 = cljs.core._nth.call(null, chunk__28143_30223, i__28145_30225);
        a__13070__auto__.push(arg__13071__auto___30226);
        var G__30227 = seq__28142_30222;
        var G__30228 = chunk__28143_30223;
        var G__30229 = count__28144_30224;
        var G__30230 = i__28145_30225 + 1;
        seq__28142_30222 = G__30227;
        chunk__28143_30223 = G__30228;
        count__28144_30224 = G__30229;
        i__28145_30225 = G__30230;
        continue;
      } else {
        var temp__4126__auto___30231 = cljs.core.seq.call(null, seq__28142_30222);
        if (temp__4126__auto___30231) {
          var seq__28142_30232__$1 = temp__4126__auto___30231;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__28142_30232__$1)) {
            var c__8291__auto___30233 = cljs.core.chunk_first.call(null, seq__28142_30232__$1);
            var G__30234 = cljs.core.chunk_rest.call(null, seq__28142_30232__$1);
            var G__30235 = c__8291__auto___30233;
            var G__30236 = cljs.core.count.call(null, c__8291__auto___30233);
            var G__30237 = 0;
            seq__28142_30222 = G__30234;
            chunk__28143_30223 = G__30235;
            count__28144_30224 = G__30236;
            i__28145_30225 = G__30237;
            continue;
          } else {
            var arg__13071__auto___30238 = cljs.core.first.call(null, seq__28142_30232__$1);
            a__13070__auto__.push(arg__13071__auto___30238);
            var G__30239 = cljs.core.next.call(null, seq__28142_30232__$1);
            var G__30240 = null;
            var G__30241 = 0;
            var G__30242 = 0;
            seq__28142_30222 = G__30239;
            chunk__28143_30223 = G__30240;
            count__28144_30224 = G__30241;
            i__28145_30225 = G__30242;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.progress.apply(null, a__13070__auto__);
  };
  var progress = function(var_args) {
    var args__13069__auto__ = null;
    if (arguments.length > 0) {
      var G__30243__i = 0, G__30243__a = new Array(arguments.length - 0);
      while (G__30243__i < G__30243__a.length) {
        G__30243__a[G__30243__i] = arguments[G__30243__i + 0];
        ++G__30243__i;
      }
      args__13069__auto__ = new cljs.core.IndexedSeq(G__30243__a, 0);
    }
    return progress__delegate.call(this, args__13069__auto__);
  };
  progress.cljs$lang$maxFixedArity = 0;
  progress.cljs$lang$applyTo = function(arglist__30244) {
    var args__13069__auto__ = cljs.core.seq(arglist__30244);
    return progress__delegate(args__13069__auto__);
  };
  progress.cljs$core$IFn$_invoke$arity$variadic = progress__delegate;
  return progress;
}();
quiescent.dom.q = function() {
  var q__delegate = function(args__13069__auto__) {
    var a__13070__auto__ = [];
    a__13070__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__13069__auto__)));
    var seq__28150_30245 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__13069__auto__));
    var chunk__28151_30246 = null;
    var count__28152_30247 = 0;
    var i__28153_30248 = 0;
    while (true) {
      if (i__28153_30248 < count__28152_30247) {
        var arg__13071__auto___30249 = cljs.core._nth.call(null, chunk__28151_30246, i__28153_30248);
        a__13070__auto__.push(arg__13071__auto___30249);
        var G__30250 = seq__28150_30245;
        var G__30251 = chunk__28151_30246;
        var G__30252 = count__28152_30247;
        var G__30253 = i__28153_30248 + 1;
        seq__28150_30245 = G__30250;
        chunk__28151_30246 = G__30251;
        count__28152_30247 = G__30252;
        i__28153_30248 = G__30253;
        continue;
      } else {
        var temp__4126__auto___30254 = cljs.core.seq.call(null, seq__28150_30245);
        if (temp__4126__auto___30254) {
          var seq__28150_30255__$1 = temp__4126__auto___30254;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__28150_30255__$1)) {
            var c__8291__auto___30256 = cljs.core.chunk_first.call(null, seq__28150_30255__$1);
            var G__30257 = cljs.core.chunk_rest.call(null, seq__28150_30255__$1);
            var G__30258 = c__8291__auto___30256;
            var G__30259 = cljs.core.count.call(null, c__8291__auto___30256);
            var G__30260 = 0;
            seq__28150_30245 = G__30257;
            chunk__28151_30246 = G__30258;
            count__28152_30247 = G__30259;
            i__28153_30248 = G__30260;
            continue;
          } else {
            var arg__13071__auto___30261 = cljs.core.first.call(null, seq__28150_30255__$1);
            a__13070__auto__.push(arg__13071__auto___30261);
            var G__30262 = cljs.core.next.call(null, seq__28150_30255__$1);
            var G__30263 = null;
            var G__30264 = 0;
            var G__30265 = 0;
            seq__28150_30245 = G__30262;
            chunk__28151_30246 = G__30263;
            count__28152_30247 = G__30264;
            i__28153_30248 = G__30265;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.q.apply(null, a__13070__auto__);
  };
  var q = function(var_args) {
    var args__13069__auto__ = null;
    if (arguments.length > 0) {
      var G__30266__i = 0, G__30266__a = new Array(arguments.length - 0);
      while (G__30266__i < G__30266__a.length) {
        G__30266__a[G__30266__i] = arguments[G__30266__i + 0];
        ++G__30266__i;
      }
      args__13069__auto__ = new cljs.core.IndexedSeq(G__30266__a, 0);
    }
    return q__delegate.call(this, args__13069__auto__);
  };
  q.cljs$lang$maxFixedArity = 0;
  q.cljs$lang$applyTo = function(arglist__30267) {
    var args__13069__auto__ = cljs.core.seq(arglist__30267);
    return q__delegate(args__13069__auto__);
  };
  q.cljs$core$IFn$_invoke$arity$variadic = q__delegate;
  return q;
}();
quiescent.dom.rp = function() {
  var rp__delegate = function(args__13069__auto__) {
    var a__13070__auto__ = [];
    a__13070__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__13069__auto__)));
    var seq__28158_30268 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__13069__auto__));
    var chunk__28159_30269 = null;
    var count__28160_30270 = 0;
    var i__28161_30271 = 0;
    while (true) {
      if (i__28161_30271 < count__28160_30270) {
        var arg__13071__auto___30272 = cljs.core._nth.call(null, chunk__28159_30269, i__28161_30271);
        a__13070__auto__.push(arg__13071__auto___30272);
        var G__30273 = seq__28158_30268;
        var G__30274 = chunk__28159_30269;
        var G__30275 = count__28160_30270;
        var G__30276 = i__28161_30271 + 1;
        seq__28158_30268 = G__30273;
        chunk__28159_30269 = G__30274;
        count__28160_30270 = G__30275;
        i__28161_30271 = G__30276;
        continue;
      } else {
        var temp__4126__auto___30277 = cljs.core.seq.call(null, seq__28158_30268);
        if (temp__4126__auto___30277) {
          var seq__28158_30278__$1 = temp__4126__auto___30277;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__28158_30278__$1)) {
            var c__8291__auto___30279 = cljs.core.chunk_first.call(null, seq__28158_30278__$1);
            var G__30280 = cljs.core.chunk_rest.call(null, seq__28158_30278__$1);
            var G__30281 = c__8291__auto___30279;
            var G__30282 = cljs.core.count.call(null, c__8291__auto___30279);
            var G__30283 = 0;
            seq__28158_30268 = G__30280;
            chunk__28159_30269 = G__30281;
            count__28160_30270 = G__30282;
            i__28161_30271 = G__30283;
            continue;
          } else {
            var arg__13071__auto___30284 = cljs.core.first.call(null, seq__28158_30278__$1);
            a__13070__auto__.push(arg__13071__auto___30284);
            var G__30285 = cljs.core.next.call(null, seq__28158_30278__$1);
            var G__30286 = null;
            var G__30287 = 0;
            var G__30288 = 0;
            seq__28158_30268 = G__30285;
            chunk__28159_30269 = G__30286;
            count__28160_30270 = G__30287;
            i__28161_30271 = G__30288;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.rp.apply(null, a__13070__auto__);
  };
  var rp = function(var_args) {
    var args__13069__auto__ = null;
    if (arguments.length > 0) {
      var G__30289__i = 0, G__30289__a = new Array(arguments.length - 0);
      while (G__30289__i < G__30289__a.length) {
        G__30289__a[G__30289__i] = arguments[G__30289__i + 0];
        ++G__30289__i;
      }
      args__13069__auto__ = new cljs.core.IndexedSeq(G__30289__a, 0);
    }
    return rp__delegate.call(this, args__13069__auto__);
  };
  rp.cljs$lang$maxFixedArity = 0;
  rp.cljs$lang$applyTo = function(arglist__30290) {
    var args__13069__auto__ = cljs.core.seq(arglist__30290);
    return rp__delegate(args__13069__auto__);
  };
  rp.cljs$core$IFn$_invoke$arity$variadic = rp__delegate;
  return rp;
}();
quiescent.dom.rt = function() {
  var rt__delegate = function(args__13069__auto__) {
    var a__13070__auto__ = [];
    a__13070__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__13069__auto__)));
    var seq__28166_30291 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__13069__auto__));
    var chunk__28167_30292 = null;
    var count__28168_30293 = 0;
    var i__28169_30294 = 0;
    while (true) {
      if (i__28169_30294 < count__28168_30293) {
        var arg__13071__auto___30295 = cljs.core._nth.call(null, chunk__28167_30292, i__28169_30294);
        a__13070__auto__.push(arg__13071__auto___30295);
        var G__30296 = seq__28166_30291;
        var G__30297 = chunk__28167_30292;
        var G__30298 = count__28168_30293;
        var G__30299 = i__28169_30294 + 1;
        seq__28166_30291 = G__30296;
        chunk__28167_30292 = G__30297;
        count__28168_30293 = G__30298;
        i__28169_30294 = G__30299;
        continue;
      } else {
        var temp__4126__auto___30300 = cljs.core.seq.call(null, seq__28166_30291);
        if (temp__4126__auto___30300) {
          var seq__28166_30301__$1 = temp__4126__auto___30300;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__28166_30301__$1)) {
            var c__8291__auto___30302 = cljs.core.chunk_first.call(null, seq__28166_30301__$1);
            var G__30303 = cljs.core.chunk_rest.call(null, seq__28166_30301__$1);
            var G__30304 = c__8291__auto___30302;
            var G__30305 = cljs.core.count.call(null, c__8291__auto___30302);
            var G__30306 = 0;
            seq__28166_30291 = G__30303;
            chunk__28167_30292 = G__30304;
            count__28168_30293 = G__30305;
            i__28169_30294 = G__30306;
            continue;
          } else {
            var arg__13071__auto___30307 = cljs.core.first.call(null, seq__28166_30301__$1);
            a__13070__auto__.push(arg__13071__auto___30307);
            var G__30308 = cljs.core.next.call(null, seq__28166_30301__$1);
            var G__30309 = null;
            var G__30310 = 0;
            var G__30311 = 0;
            seq__28166_30291 = G__30308;
            chunk__28167_30292 = G__30309;
            count__28168_30293 = G__30310;
            i__28169_30294 = G__30311;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.rt.apply(null, a__13070__auto__);
  };
  var rt = function(var_args) {
    var args__13069__auto__ = null;
    if (arguments.length > 0) {
      var G__30312__i = 0, G__30312__a = new Array(arguments.length - 0);
      while (G__30312__i < G__30312__a.length) {
        G__30312__a[G__30312__i] = arguments[G__30312__i + 0];
        ++G__30312__i;
      }
      args__13069__auto__ = new cljs.core.IndexedSeq(G__30312__a, 0);
    }
    return rt__delegate.call(this, args__13069__auto__);
  };
  rt.cljs$lang$maxFixedArity = 0;
  rt.cljs$lang$applyTo = function(arglist__30313) {
    var args__13069__auto__ = cljs.core.seq(arglist__30313);
    return rt__delegate(args__13069__auto__);
  };
  rt.cljs$core$IFn$_invoke$arity$variadic = rt__delegate;
  return rt;
}();
quiescent.dom.ruby = function() {
  var ruby__delegate = function(args__13069__auto__) {
    var a__13070__auto__ = [];
    a__13070__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__13069__auto__)));
    var seq__28174_30314 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__13069__auto__));
    var chunk__28175_30315 = null;
    var count__28176_30316 = 0;
    var i__28177_30317 = 0;
    while (true) {
      if (i__28177_30317 < count__28176_30316) {
        var arg__13071__auto___30318 = cljs.core._nth.call(null, chunk__28175_30315, i__28177_30317);
        a__13070__auto__.push(arg__13071__auto___30318);
        var G__30319 = seq__28174_30314;
        var G__30320 = chunk__28175_30315;
        var G__30321 = count__28176_30316;
        var G__30322 = i__28177_30317 + 1;
        seq__28174_30314 = G__30319;
        chunk__28175_30315 = G__30320;
        count__28176_30316 = G__30321;
        i__28177_30317 = G__30322;
        continue;
      } else {
        var temp__4126__auto___30323 = cljs.core.seq.call(null, seq__28174_30314);
        if (temp__4126__auto___30323) {
          var seq__28174_30324__$1 = temp__4126__auto___30323;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__28174_30324__$1)) {
            var c__8291__auto___30325 = cljs.core.chunk_first.call(null, seq__28174_30324__$1);
            var G__30326 = cljs.core.chunk_rest.call(null, seq__28174_30324__$1);
            var G__30327 = c__8291__auto___30325;
            var G__30328 = cljs.core.count.call(null, c__8291__auto___30325);
            var G__30329 = 0;
            seq__28174_30314 = G__30326;
            chunk__28175_30315 = G__30327;
            count__28176_30316 = G__30328;
            i__28177_30317 = G__30329;
            continue;
          } else {
            var arg__13071__auto___30330 = cljs.core.first.call(null, seq__28174_30324__$1);
            a__13070__auto__.push(arg__13071__auto___30330);
            var G__30331 = cljs.core.next.call(null, seq__28174_30324__$1);
            var G__30332 = null;
            var G__30333 = 0;
            var G__30334 = 0;
            seq__28174_30314 = G__30331;
            chunk__28175_30315 = G__30332;
            count__28176_30316 = G__30333;
            i__28177_30317 = G__30334;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.ruby.apply(null, a__13070__auto__);
  };
  var ruby = function(var_args) {
    var args__13069__auto__ = null;
    if (arguments.length > 0) {
      var G__30335__i = 0, G__30335__a = new Array(arguments.length - 0);
      while (G__30335__i < G__30335__a.length) {
        G__30335__a[G__30335__i] = arguments[G__30335__i + 0];
        ++G__30335__i;
      }
      args__13069__auto__ = new cljs.core.IndexedSeq(G__30335__a, 0);
    }
    return ruby__delegate.call(this, args__13069__auto__);
  };
  ruby.cljs$lang$maxFixedArity = 0;
  ruby.cljs$lang$applyTo = function(arglist__30336) {
    var args__13069__auto__ = cljs.core.seq(arglist__30336);
    return ruby__delegate(args__13069__auto__);
  };
  ruby.cljs$core$IFn$_invoke$arity$variadic = ruby__delegate;
  return ruby;
}();
quiescent.dom.s = function() {
  var s__delegate = function(args__13069__auto__) {
    var a__13070__auto__ = [];
    a__13070__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__13069__auto__)));
    var seq__28182_30337 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__13069__auto__));
    var chunk__28183_30338 = null;
    var count__28184_30339 = 0;
    var i__28185_30340 = 0;
    while (true) {
      if (i__28185_30340 < count__28184_30339) {
        var arg__13071__auto___30341 = cljs.core._nth.call(null, chunk__28183_30338, i__28185_30340);
        a__13070__auto__.push(arg__13071__auto___30341);
        var G__30342 = seq__28182_30337;
        var G__30343 = chunk__28183_30338;
        var G__30344 = count__28184_30339;
        var G__30345 = i__28185_30340 + 1;
        seq__28182_30337 = G__30342;
        chunk__28183_30338 = G__30343;
        count__28184_30339 = G__30344;
        i__28185_30340 = G__30345;
        continue;
      } else {
        var temp__4126__auto___30346 = cljs.core.seq.call(null, seq__28182_30337);
        if (temp__4126__auto___30346) {
          var seq__28182_30347__$1 = temp__4126__auto___30346;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__28182_30347__$1)) {
            var c__8291__auto___30348 = cljs.core.chunk_first.call(null, seq__28182_30347__$1);
            var G__30349 = cljs.core.chunk_rest.call(null, seq__28182_30347__$1);
            var G__30350 = c__8291__auto___30348;
            var G__30351 = cljs.core.count.call(null, c__8291__auto___30348);
            var G__30352 = 0;
            seq__28182_30337 = G__30349;
            chunk__28183_30338 = G__30350;
            count__28184_30339 = G__30351;
            i__28185_30340 = G__30352;
            continue;
          } else {
            var arg__13071__auto___30353 = cljs.core.first.call(null, seq__28182_30347__$1);
            a__13070__auto__.push(arg__13071__auto___30353);
            var G__30354 = cljs.core.next.call(null, seq__28182_30347__$1);
            var G__30355 = null;
            var G__30356 = 0;
            var G__30357 = 0;
            seq__28182_30337 = G__30354;
            chunk__28183_30338 = G__30355;
            count__28184_30339 = G__30356;
            i__28185_30340 = G__30357;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.s.apply(null, a__13070__auto__);
  };
  var s = function(var_args) {
    var args__13069__auto__ = null;
    if (arguments.length > 0) {
      var G__30358__i = 0, G__30358__a = new Array(arguments.length - 0);
      while (G__30358__i < G__30358__a.length) {
        G__30358__a[G__30358__i] = arguments[G__30358__i + 0];
        ++G__30358__i;
      }
      args__13069__auto__ = new cljs.core.IndexedSeq(G__30358__a, 0);
    }
    return s__delegate.call(this, args__13069__auto__);
  };
  s.cljs$lang$maxFixedArity = 0;
  s.cljs$lang$applyTo = function(arglist__30359) {
    var args__13069__auto__ = cljs.core.seq(arglist__30359);
    return s__delegate(args__13069__auto__);
  };
  s.cljs$core$IFn$_invoke$arity$variadic = s__delegate;
  return s;
}();
quiescent.dom.samp = function() {
  var samp__delegate = function(args__13069__auto__) {
    var a__13070__auto__ = [];
    a__13070__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__13069__auto__)));
    var seq__28190_30360 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__13069__auto__));
    var chunk__28191_30361 = null;
    var count__28192_30362 = 0;
    var i__28193_30363 = 0;
    while (true) {
      if (i__28193_30363 < count__28192_30362) {
        var arg__13071__auto___30364 = cljs.core._nth.call(null, chunk__28191_30361, i__28193_30363);
        a__13070__auto__.push(arg__13071__auto___30364);
        var G__30365 = seq__28190_30360;
        var G__30366 = chunk__28191_30361;
        var G__30367 = count__28192_30362;
        var G__30368 = i__28193_30363 + 1;
        seq__28190_30360 = G__30365;
        chunk__28191_30361 = G__30366;
        count__28192_30362 = G__30367;
        i__28193_30363 = G__30368;
        continue;
      } else {
        var temp__4126__auto___30369 = cljs.core.seq.call(null, seq__28190_30360);
        if (temp__4126__auto___30369) {
          var seq__28190_30370__$1 = temp__4126__auto___30369;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__28190_30370__$1)) {
            var c__8291__auto___30371 = cljs.core.chunk_first.call(null, seq__28190_30370__$1);
            var G__30372 = cljs.core.chunk_rest.call(null, seq__28190_30370__$1);
            var G__30373 = c__8291__auto___30371;
            var G__30374 = cljs.core.count.call(null, c__8291__auto___30371);
            var G__30375 = 0;
            seq__28190_30360 = G__30372;
            chunk__28191_30361 = G__30373;
            count__28192_30362 = G__30374;
            i__28193_30363 = G__30375;
            continue;
          } else {
            var arg__13071__auto___30376 = cljs.core.first.call(null, seq__28190_30370__$1);
            a__13070__auto__.push(arg__13071__auto___30376);
            var G__30377 = cljs.core.next.call(null, seq__28190_30370__$1);
            var G__30378 = null;
            var G__30379 = 0;
            var G__30380 = 0;
            seq__28190_30360 = G__30377;
            chunk__28191_30361 = G__30378;
            count__28192_30362 = G__30379;
            i__28193_30363 = G__30380;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.samp.apply(null, a__13070__auto__);
  };
  var samp = function(var_args) {
    var args__13069__auto__ = null;
    if (arguments.length > 0) {
      var G__30381__i = 0, G__30381__a = new Array(arguments.length - 0);
      while (G__30381__i < G__30381__a.length) {
        G__30381__a[G__30381__i] = arguments[G__30381__i + 0];
        ++G__30381__i;
      }
      args__13069__auto__ = new cljs.core.IndexedSeq(G__30381__a, 0);
    }
    return samp__delegate.call(this, args__13069__auto__);
  };
  samp.cljs$lang$maxFixedArity = 0;
  samp.cljs$lang$applyTo = function(arglist__30382) {
    var args__13069__auto__ = cljs.core.seq(arglist__30382);
    return samp__delegate(args__13069__auto__);
  };
  samp.cljs$core$IFn$_invoke$arity$variadic = samp__delegate;
  return samp;
}();
quiescent.dom.script = function() {
  var script__delegate = function(args__13069__auto__) {
    var a__13070__auto__ = [];
    a__13070__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__13069__auto__)));
    var seq__28198_30383 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__13069__auto__));
    var chunk__28199_30384 = null;
    var count__28200_30385 = 0;
    var i__28201_30386 = 0;
    while (true) {
      if (i__28201_30386 < count__28200_30385) {
        var arg__13071__auto___30387 = cljs.core._nth.call(null, chunk__28199_30384, i__28201_30386);
        a__13070__auto__.push(arg__13071__auto___30387);
        var G__30388 = seq__28198_30383;
        var G__30389 = chunk__28199_30384;
        var G__30390 = count__28200_30385;
        var G__30391 = i__28201_30386 + 1;
        seq__28198_30383 = G__30388;
        chunk__28199_30384 = G__30389;
        count__28200_30385 = G__30390;
        i__28201_30386 = G__30391;
        continue;
      } else {
        var temp__4126__auto___30392 = cljs.core.seq.call(null, seq__28198_30383);
        if (temp__4126__auto___30392) {
          var seq__28198_30393__$1 = temp__4126__auto___30392;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__28198_30393__$1)) {
            var c__8291__auto___30394 = cljs.core.chunk_first.call(null, seq__28198_30393__$1);
            var G__30395 = cljs.core.chunk_rest.call(null, seq__28198_30393__$1);
            var G__30396 = c__8291__auto___30394;
            var G__30397 = cljs.core.count.call(null, c__8291__auto___30394);
            var G__30398 = 0;
            seq__28198_30383 = G__30395;
            chunk__28199_30384 = G__30396;
            count__28200_30385 = G__30397;
            i__28201_30386 = G__30398;
            continue;
          } else {
            var arg__13071__auto___30399 = cljs.core.first.call(null, seq__28198_30393__$1);
            a__13070__auto__.push(arg__13071__auto___30399);
            var G__30400 = cljs.core.next.call(null, seq__28198_30393__$1);
            var G__30401 = null;
            var G__30402 = 0;
            var G__30403 = 0;
            seq__28198_30383 = G__30400;
            chunk__28199_30384 = G__30401;
            count__28200_30385 = G__30402;
            i__28201_30386 = G__30403;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.script.apply(null, a__13070__auto__);
  };
  var script = function(var_args) {
    var args__13069__auto__ = null;
    if (arguments.length > 0) {
      var G__30404__i = 0, G__30404__a = new Array(arguments.length - 0);
      while (G__30404__i < G__30404__a.length) {
        G__30404__a[G__30404__i] = arguments[G__30404__i + 0];
        ++G__30404__i;
      }
      args__13069__auto__ = new cljs.core.IndexedSeq(G__30404__a, 0);
    }
    return script__delegate.call(this, args__13069__auto__);
  };
  script.cljs$lang$maxFixedArity = 0;
  script.cljs$lang$applyTo = function(arglist__30405) {
    var args__13069__auto__ = cljs.core.seq(arglist__30405);
    return script__delegate(args__13069__auto__);
  };
  script.cljs$core$IFn$_invoke$arity$variadic = script__delegate;
  return script;
}();
quiescent.dom.section = function() {
  var section__delegate = function(args__13069__auto__) {
    var a__13070__auto__ = [];
    a__13070__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__13069__auto__)));
    var seq__28206_30406 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__13069__auto__));
    var chunk__28207_30407 = null;
    var count__28208_30408 = 0;
    var i__28209_30409 = 0;
    while (true) {
      if (i__28209_30409 < count__28208_30408) {
        var arg__13071__auto___30410 = cljs.core._nth.call(null, chunk__28207_30407, i__28209_30409);
        a__13070__auto__.push(arg__13071__auto___30410);
        var G__30411 = seq__28206_30406;
        var G__30412 = chunk__28207_30407;
        var G__30413 = count__28208_30408;
        var G__30414 = i__28209_30409 + 1;
        seq__28206_30406 = G__30411;
        chunk__28207_30407 = G__30412;
        count__28208_30408 = G__30413;
        i__28209_30409 = G__30414;
        continue;
      } else {
        var temp__4126__auto___30415 = cljs.core.seq.call(null, seq__28206_30406);
        if (temp__4126__auto___30415) {
          var seq__28206_30416__$1 = temp__4126__auto___30415;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__28206_30416__$1)) {
            var c__8291__auto___30417 = cljs.core.chunk_first.call(null, seq__28206_30416__$1);
            var G__30418 = cljs.core.chunk_rest.call(null, seq__28206_30416__$1);
            var G__30419 = c__8291__auto___30417;
            var G__30420 = cljs.core.count.call(null, c__8291__auto___30417);
            var G__30421 = 0;
            seq__28206_30406 = G__30418;
            chunk__28207_30407 = G__30419;
            count__28208_30408 = G__30420;
            i__28209_30409 = G__30421;
            continue;
          } else {
            var arg__13071__auto___30422 = cljs.core.first.call(null, seq__28206_30416__$1);
            a__13070__auto__.push(arg__13071__auto___30422);
            var G__30423 = cljs.core.next.call(null, seq__28206_30416__$1);
            var G__30424 = null;
            var G__30425 = 0;
            var G__30426 = 0;
            seq__28206_30406 = G__30423;
            chunk__28207_30407 = G__30424;
            count__28208_30408 = G__30425;
            i__28209_30409 = G__30426;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.section.apply(null, a__13070__auto__);
  };
  var section = function(var_args) {
    var args__13069__auto__ = null;
    if (arguments.length > 0) {
      var G__30427__i = 0, G__30427__a = new Array(arguments.length - 0);
      while (G__30427__i < G__30427__a.length) {
        G__30427__a[G__30427__i] = arguments[G__30427__i + 0];
        ++G__30427__i;
      }
      args__13069__auto__ = new cljs.core.IndexedSeq(G__30427__a, 0);
    }
    return section__delegate.call(this, args__13069__auto__);
  };
  section.cljs$lang$maxFixedArity = 0;
  section.cljs$lang$applyTo = function(arglist__30428) {
    var args__13069__auto__ = cljs.core.seq(arglist__30428);
    return section__delegate(args__13069__auto__);
  };
  section.cljs$core$IFn$_invoke$arity$variadic = section__delegate;
  return section;
}();
quiescent.dom.select = function() {
  var select__delegate = function(args__13069__auto__) {
    var a__13070__auto__ = [];
    a__13070__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__13069__auto__)));
    var seq__28214_30429 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__13069__auto__));
    var chunk__28215_30430 = null;
    var count__28216_30431 = 0;
    var i__28217_30432 = 0;
    while (true) {
      if (i__28217_30432 < count__28216_30431) {
        var arg__13071__auto___30433 = cljs.core._nth.call(null, chunk__28215_30430, i__28217_30432);
        a__13070__auto__.push(arg__13071__auto___30433);
        var G__30434 = seq__28214_30429;
        var G__30435 = chunk__28215_30430;
        var G__30436 = count__28216_30431;
        var G__30437 = i__28217_30432 + 1;
        seq__28214_30429 = G__30434;
        chunk__28215_30430 = G__30435;
        count__28216_30431 = G__30436;
        i__28217_30432 = G__30437;
        continue;
      } else {
        var temp__4126__auto___30438 = cljs.core.seq.call(null, seq__28214_30429);
        if (temp__4126__auto___30438) {
          var seq__28214_30439__$1 = temp__4126__auto___30438;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__28214_30439__$1)) {
            var c__8291__auto___30440 = cljs.core.chunk_first.call(null, seq__28214_30439__$1);
            var G__30441 = cljs.core.chunk_rest.call(null, seq__28214_30439__$1);
            var G__30442 = c__8291__auto___30440;
            var G__30443 = cljs.core.count.call(null, c__8291__auto___30440);
            var G__30444 = 0;
            seq__28214_30429 = G__30441;
            chunk__28215_30430 = G__30442;
            count__28216_30431 = G__30443;
            i__28217_30432 = G__30444;
            continue;
          } else {
            var arg__13071__auto___30445 = cljs.core.first.call(null, seq__28214_30439__$1);
            a__13070__auto__.push(arg__13071__auto___30445);
            var G__30446 = cljs.core.next.call(null, seq__28214_30439__$1);
            var G__30447 = null;
            var G__30448 = 0;
            var G__30449 = 0;
            seq__28214_30429 = G__30446;
            chunk__28215_30430 = G__30447;
            count__28216_30431 = G__30448;
            i__28217_30432 = G__30449;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.select.apply(null, a__13070__auto__);
  };
  var select = function(var_args) {
    var args__13069__auto__ = null;
    if (arguments.length > 0) {
      var G__30450__i = 0, G__30450__a = new Array(arguments.length - 0);
      while (G__30450__i < G__30450__a.length) {
        G__30450__a[G__30450__i] = arguments[G__30450__i + 0];
        ++G__30450__i;
      }
      args__13069__auto__ = new cljs.core.IndexedSeq(G__30450__a, 0);
    }
    return select__delegate.call(this, args__13069__auto__);
  };
  select.cljs$lang$maxFixedArity = 0;
  select.cljs$lang$applyTo = function(arglist__30451) {
    var args__13069__auto__ = cljs.core.seq(arglist__30451);
    return select__delegate(args__13069__auto__);
  };
  select.cljs$core$IFn$_invoke$arity$variadic = select__delegate;
  return select;
}();
quiescent.dom.small = function() {
  var small__delegate = function(args__13069__auto__) {
    var a__13070__auto__ = [];
    a__13070__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__13069__auto__)));
    var seq__28222_30452 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__13069__auto__));
    var chunk__28223_30453 = null;
    var count__28224_30454 = 0;
    var i__28225_30455 = 0;
    while (true) {
      if (i__28225_30455 < count__28224_30454) {
        var arg__13071__auto___30456 = cljs.core._nth.call(null, chunk__28223_30453, i__28225_30455);
        a__13070__auto__.push(arg__13071__auto___30456);
        var G__30457 = seq__28222_30452;
        var G__30458 = chunk__28223_30453;
        var G__30459 = count__28224_30454;
        var G__30460 = i__28225_30455 + 1;
        seq__28222_30452 = G__30457;
        chunk__28223_30453 = G__30458;
        count__28224_30454 = G__30459;
        i__28225_30455 = G__30460;
        continue;
      } else {
        var temp__4126__auto___30461 = cljs.core.seq.call(null, seq__28222_30452);
        if (temp__4126__auto___30461) {
          var seq__28222_30462__$1 = temp__4126__auto___30461;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__28222_30462__$1)) {
            var c__8291__auto___30463 = cljs.core.chunk_first.call(null, seq__28222_30462__$1);
            var G__30464 = cljs.core.chunk_rest.call(null, seq__28222_30462__$1);
            var G__30465 = c__8291__auto___30463;
            var G__30466 = cljs.core.count.call(null, c__8291__auto___30463);
            var G__30467 = 0;
            seq__28222_30452 = G__30464;
            chunk__28223_30453 = G__30465;
            count__28224_30454 = G__30466;
            i__28225_30455 = G__30467;
            continue;
          } else {
            var arg__13071__auto___30468 = cljs.core.first.call(null, seq__28222_30462__$1);
            a__13070__auto__.push(arg__13071__auto___30468);
            var G__30469 = cljs.core.next.call(null, seq__28222_30462__$1);
            var G__30470 = null;
            var G__30471 = 0;
            var G__30472 = 0;
            seq__28222_30452 = G__30469;
            chunk__28223_30453 = G__30470;
            count__28224_30454 = G__30471;
            i__28225_30455 = G__30472;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.small.apply(null, a__13070__auto__);
  };
  var small = function(var_args) {
    var args__13069__auto__ = null;
    if (arguments.length > 0) {
      var G__30473__i = 0, G__30473__a = new Array(arguments.length - 0);
      while (G__30473__i < G__30473__a.length) {
        G__30473__a[G__30473__i] = arguments[G__30473__i + 0];
        ++G__30473__i;
      }
      args__13069__auto__ = new cljs.core.IndexedSeq(G__30473__a, 0);
    }
    return small__delegate.call(this, args__13069__auto__);
  };
  small.cljs$lang$maxFixedArity = 0;
  small.cljs$lang$applyTo = function(arglist__30474) {
    var args__13069__auto__ = cljs.core.seq(arglist__30474);
    return small__delegate(args__13069__auto__);
  };
  small.cljs$core$IFn$_invoke$arity$variadic = small__delegate;
  return small;
}();
quiescent.dom.source = function() {
  var source__delegate = function(args__13069__auto__) {
    var a__13070__auto__ = [];
    a__13070__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__13069__auto__)));
    var seq__28230_30475 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__13069__auto__));
    var chunk__28231_30476 = null;
    var count__28232_30477 = 0;
    var i__28233_30478 = 0;
    while (true) {
      if (i__28233_30478 < count__28232_30477) {
        var arg__13071__auto___30479 = cljs.core._nth.call(null, chunk__28231_30476, i__28233_30478);
        a__13070__auto__.push(arg__13071__auto___30479);
        var G__30480 = seq__28230_30475;
        var G__30481 = chunk__28231_30476;
        var G__30482 = count__28232_30477;
        var G__30483 = i__28233_30478 + 1;
        seq__28230_30475 = G__30480;
        chunk__28231_30476 = G__30481;
        count__28232_30477 = G__30482;
        i__28233_30478 = G__30483;
        continue;
      } else {
        var temp__4126__auto___30484 = cljs.core.seq.call(null, seq__28230_30475);
        if (temp__4126__auto___30484) {
          var seq__28230_30485__$1 = temp__4126__auto___30484;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__28230_30485__$1)) {
            var c__8291__auto___30486 = cljs.core.chunk_first.call(null, seq__28230_30485__$1);
            var G__30487 = cljs.core.chunk_rest.call(null, seq__28230_30485__$1);
            var G__30488 = c__8291__auto___30486;
            var G__30489 = cljs.core.count.call(null, c__8291__auto___30486);
            var G__30490 = 0;
            seq__28230_30475 = G__30487;
            chunk__28231_30476 = G__30488;
            count__28232_30477 = G__30489;
            i__28233_30478 = G__30490;
            continue;
          } else {
            var arg__13071__auto___30491 = cljs.core.first.call(null, seq__28230_30485__$1);
            a__13070__auto__.push(arg__13071__auto___30491);
            var G__30492 = cljs.core.next.call(null, seq__28230_30485__$1);
            var G__30493 = null;
            var G__30494 = 0;
            var G__30495 = 0;
            seq__28230_30475 = G__30492;
            chunk__28231_30476 = G__30493;
            count__28232_30477 = G__30494;
            i__28233_30478 = G__30495;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.source.apply(null, a__13070__auto__);
  };
  var source = function(var_args) {
    var args__13069__auto__ = null;
    if (arguments.length > 0) {
      var G__30496__i = 0, G__30496__a = new Array(arguments.length - 0);
      while (G__30496__i < G__30496__a.length) {
        G__30496__a[G__30496__i] = arguments[G__30496__i + 0];
        ++G__30496__i;
      }
      args__13069__auto__ = new cljs.core.IndexedSeq(G__30496__a, 0);
    }
    return source__delegate.call(this, args__13069__auto__);
  };
  source.cljs$lang$maxFixedArity = 0;
  source.cljs$lang$applyTo = function(arglist__30497) {
    var args__13069__auto__ = cljs.core.seq(arglist__30497);
    return source__delegate(args__13069__auto__);
  };
  source.cljs$core$IFn$_invoke$arity$variadic = source__delegate;
  return source;
}();
quiescent.dom.span = function() {
  var span__delegate = function(args__13069__auto__) {
    var a__13070__auto__ = [];
    a__13070__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__13069__auto__)));
    var seq__28238_30498 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__13069__auto__));
    var chunk__28239_30499 = null;
    var count__28240_30500 = 0;
    var i__28241_30501 = 0;
    while (true) {
      if (i__28241_30501 < count__28240_30500) {
        var arg__13071__auto___30502 = cljs.core._nth.call(null, chunk__28239_30499, i__28241_30501);
        a__13070__auto__.push(arg__13071__auto___30502);
        var G__30503 = seq__28238_30498;
        var G__30504 = chunk__28239_30499;
        var G__30505 = count__28240_30500;
        var G__30506 = i__28241_30501 + 1;
        seq__28238_30498 = G__30503;
        chunk__28239_30499 = G__30504;
        count__28240_30500 = G__30505;
        i__28241_30501 = G__30506;
        continue;
      } else {
        var temp__4126__auto___30507 = cljs.core.seq.call(null, seq__28238_30498);
        if (temp__4126__auto___30507) {
          var seq__28238_30508__$1 = temp__4126__auto___30507;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__28238_30508__$1)) {
            var c__8291__auto___30509 = cljs.core.chunk_first.call(null, seq__28238_30508__$1);
            var G__30510 = cljs.core.chunk_rest.call(null, seq__28238_30508__$1);
            var G__30511 = c__8291__auto___30509;
            var G__30512 = cljs.core.count.call(null, c__8291__auto___30509);
            var G__30513 = 0;
            seq__28238_30498 = G__30510;
            chunk__28239_30499 = G__30511;
            count__28240_30500 = G__30512;
            i__28241_30501 = G__30513;
            continue;
          } else {
            var arg__13071__auto___30514 = cljs.core.first.call(null, seq__28238_30508__$1);
            a__13070__auto__.push(arg__13071__auto___30514);
            var G__30515 = cljs.core.next.call(null, seq__28238_30508__$1);
            var G__30516 = null;
            var G__30517 = 0;
            var G__30518 = 0;
            seq__28238_30498 = G__30515;
            chunk__28239_30499 = G__30516;
            count__28240_30500 = G__30517;
            i__28241_30501 = G__30518;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.span.apply(null, a__13070__auto__);
  };
  var span = function(var_args) {
    var args__13069__auto__ = null;
    if (arguments.length > 0) {
      var G__30519__i = 0, G__30519__a = new Array(arguments.length - 0);
      while (G__30519__i < G__30519__a.length) {
        G__30519__a[G__30519__i] = arguments[G__30519__i + 0];
        ++G__30519__i;
      }
      args__13069__auto__ = new cljs.core.IndexedSeq(G__30519__a, 0);
    }
    return span__delegate.call(this, args__13069__auto__);
  };
  span.cljs$lang$maxFixedArity = 0;
  span.cljs$lang$applyTo = function(arglist__30520) {
    var args__13069__auto__ = cljs.core.seq(arglist__30520);
    return span__delegate(args__13069__auto__);
  };
  span.cljs$core$IFn$_invoke$arity$variadic = span__delegate;
  return span;
}();
quiescent.dom.strong = function() {
  var strong__delegate = function(args__13069__auto__) {
    var a__13070__auto__ = [];
    a__13070__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__13069__auto__)));
    var seq__28246_30521 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__13069__auto__));
    var chunk__28247_30522 = null;
    var count__28248_30523 = 0;
    var i__28249_30524 = 0;
    while (true) {
      if (i__28249_30524 < count__28248_30523) {
        var arg__13071__auto___30525 = cljs.core._nth.call(null, chunk__28247_30522, i__28249_30524);
        a__13070__auto__.push(arg__13071__auto___30525);
        var G__30526 = seq__28246_30521;
        var G__30527 = chunk__28247_30522;
        var G__30528 = count__28248_30523;
        var G__30529 = i__28249_30524 + 1;
        seq__28246_30521 = G__30526;
        chunk__28247_30522 = G__30527;
        count__28248_30523 = G__30528;
        i__28249_30524 = G__30529;
        continue;
      } else {
        var temp__4126__auto___30530 = cljs.core.seq.call(null, seq__28246_30521);
        if (temp__4126__auto___30530) {
          var seq__28246_30531__$1 = temp__4126__auto___30530;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__28246_30531__$1)) {
            var c__8291__auto___30532 = cljs.core.chunk_first.call(null, seq__28246_30531__$1);
            var G__30533 = cljs.core.chunk_rest.call(null, seq__28246_30531__$1);
            var G__30534 = c__8291__auto___30532;
            var G__30535 = cljs.core.count.call(null, c__8291__auto___30532);
            var G__30536 = 0;
            seq__28246_30521 = G__30533;
            chunk__28247_30522 = G__30534;
            count__28248_30523 = G__30535;
            i__28249_30524 = G__30536;
            continue;
          } else {
            var arg__13071__auto___30537 = cljs.core.first.call(null, seq__28246_30531__$1);
            a__13070__auto__.push(arg__13071__auto___30537);
            var G__30538 = cljs.core.next.call(null, seq__28246_30531__$1);
            var G__30539 = null;
            var G__30540 = 0;
            var G__30541 = 0;
            seq__28246_30521 = G__30538;
            chunk__28247_30522 = G__30539;
            count__28248_30523 = G__30540;
            i__28249_30524 = G__30541;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.strong.apply(null, a__13070__auto__);
  };
  var strong = function(var_args) {
    var args__13069__auto__ = null;
    if (arguments.length > 0) {
      var G__30542__i = 0, G__30542__a = new Array(arguments.length - 0);
      while (G__30542__i < G__30542__a.length) {
        G__30542__a[G__30542__i] = arguments[G__30542__i + 0];
        ++G__30542__i;
      }
      args__13069__auto__ = new cljs.core.IndexedSeq(G__30542__a, 0);
    }
    return strong__delegate.call(this, args__13069__auto__);
  };
  strong.cljs$lang$maxFixedArity = 0;
  strong.cljs$lang$applyTo = function(arglist__30543) {
    var args__13069__auto__ = cljs.core.seq(arglist__30543);
    return strong__delegate(args__13069__auto__);
  };
  strong.cljs$core$IFn$_invoke$arity$variadic = strong__delegate;
  return strong;
}();
quiescent.dom.style = function() {
  var style__delegate = function(args__13069__auto__) {
    var a__13070__auto__ = [];
    a__13070__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__13069__auto__)));
    var seq__28254_30544 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__13069__auto__));
    var chunk__28255_30545 = null;
    var count__28256_30546 = 0;
    var i__28257_30547 = 0;
    while (true) {
      if (i__28257_30547 < count__28256_30546) {
        var arg__13071__auto___30548 = cljs.core._nth.call(null, chunk__28255_30545, i__28257_30547);
        a__13070__auto__.push(arg__13071__auto___30548);
        var G__30549 = seq__28254_30544;
        var G__30550 = chunk__28255_30545;
        var G__30551 = count__28256_30546;
        var G__30552 = i__28257_30547 + 1;
        seq__28254_30544 = G__30549;
        chunk__28255_30545 = G__30550;
        count__28256_30546 = G__30551;
        i__28257_30547 = G__30552;
        continue;
      } else {
        var temp__4126__auto___30553 = cljs.core.seq.call(null, seq__28254_30544);
        if (temp__4126__auto___30553) {
          var seq__28254_30554__$1 = temp__4126__auto___30553;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__28254_30554__$1)) {
            var c__8291__auto___30555 = cljs.core.chunk_first.call(null, seq__28254_30554__$1);
            var G__30556 = cljs.core.chunk_rest.call(null, seq__28254_30554__$1);
            var G__30557 = c__8291__auto___30555;
            var G__30558 = cljs.core.count.call(null, c__8291__auto___30555);
            var G__30559 = 0;
            seq__28254_30544 = G__30556;
            chunk__28255_30545 = G__30557;
            count__28256_30546 = G__30558;
            i__28257_30547 = G__30559;
            continue;
          } else {
            var arg__13071__auto___30560 = cljs.core.first.call(null, seq__28254_30554__$1);
            a__13070__auto__.push(arg__13071__auto___30560);
            var G__30561 = cljs.core.next.call(null, seq__28254_30554__$1);
            var G__30562 = null;
            var G__30563 = 0;
            var G__30564 = 0;
            seq__28254_30544 = G__30561;
            chunk__28255_30545 = G__30562;
            count__28256_30546 = G__30563;
            i__28257_30547 = G__30564;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.style.apply(null, a__13070__auto__);
  };
  var style = function(var_args) {
    var args__13069__auto__ = null;
    if (arguments.length > 0) {
      var G__30565__i = 0, G__30565__a = new Array(arguments.length - 0);
      while (G__30565__i < G__30565__a.length) {
        G__30565__a[G__30565__i] = arguments[G__30565__i + 0];
        ++G__30565__i;
      }
      args__13069__auto__ = new cljs.core.IndexedSeq(G__30565__a, 0);
    }
    return style__delegate.call(this, args__13069__auto__);
  };
  style.cljs$lang$maxFixedArity = 0;
  style.cljs$lang$applyTo = function(arglist__30566) {
    var args__13069__auto__ = cljs.core.seq(arglist__30566);
    return style__delegate(args__13069__auto__);
  };
  style.cljs$core$IFn$_invoke$arity$variadic = style__delegate;
  return style;
}();
quiescent.dom.sub = function() {
  var sub__delegate = function(args__13069__auto__) {
    var a__13070__auto__ = [];
    a__13070__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__13069__auto__)));
    var seq__28262_30567 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__13069__auto__));
    var chunk__28263_30568 = null;
    var count__28264_30569 = 0;
    var i__28265_30570 = 0;
    while (true) {
      if (i__28265_30570 < count__28264_30569) {
        var arg__13071__auto___30571 = cljs.core._nth.call(null, chunk__28263_30568, i__28265_30570);
        a__13070__auto__.push(arg__13071__auto___30571);
        var G__30572 = seq__28262_30567;
        var G__30573 = chunk__28263_30568;
        var G__30574 = count__28264_30569;
        var G__30575 = i__28265_30570 + 1;
        seq__28262_30567 = G__30572;
        chunk__28263_30568 = G__30573;
        count__28264_30569 = G__30574;
        i__28265_30570 = G__30575;
        continue;
      } else {
        var temp__4126__auto___30576 = cljs.core.seq.call(null, seq__28262_30567);
        if (temp__4126__auto___30576) {
          var seq__28262_30577__$1 = temp__4126__auto___30576;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__28262_30577__$1)) {
            var c__8291__auto___30578 = cljs.core.chunk_first.call(null, seq__28262_30577__$1);
            var G__30579 = cljs.core.chunk_rest.call(null, seq__28262_30577__$1);
            var G__30580 = c__8291__auto___30578;
            var G__30581 = cljs.core.count.call(null, c__8291__auto___30578);
            var G__30582 = 0;
            seq__28262_30567 = G__30579;
            chunk__28263_30568 = G__30580;
            count__28264_30569 = G__30581;
            i__28265_30570 = G__30582;
            continue;
          } else {
            var arg__13071__auto___30583 = cljs.core.first.call(null, seq__28262_30577__$1);
            a__13070__auto__.push(arg__13071__auto___30583);
            var G__30584 = cljs.core.next.call(null, seq__28262_30577__$1);
            var G__30585 = null;
            var G__30586 = 0;
            var G__30587 = 0;
            seq__28262_30567 = G__30584;
            chunk__28263_30568 = G__30585;
            count__28264_30569 = G__30586;
            i__28265_30570 = G__30587;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.sub.apply(null, a__13070__auto__);
  };
  var sub = function(var_args) {
    var args__13069__auto__ = null;
    if (arguments.length > 0) {
      var G__30588__i = 0, G__30588__a = new Array(arguments.length - 0);
      while (G__30588__i < G__30588__a.length) {
        G__30588__a[G__30588__i] = arguments[G__30588__i + 0];
        ++G__30588__i;
      }
      args__13069__auto__ = new cljs.core.IndexedSeq(G__30588__a, 0);
    }
    return sub__delegate.call(this, args__13069__auto__);
  };
  sub.cljs$lang$maxFixedArity = 0;
  sub.cljs$lang$applyTo = function(arglist__30589) {
    var args__13069__auto__ = cljs.core.seq(arglist__30589);
    return sub__delegate(args__13069__auto__);
  };
  sub.cljs$core$IFn$_invoke$arity$variadic = sub__delegate;
  return sub;
}();
quiescent.dom.summary = function() {
  var summary__delegate = function(args__13069__auto__) {
    var a__13070__auto__ = [];
    a__13070__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__13069__auto__)));
    var seq__28270_30590 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__13069__auto__));
    var chunk__28271_30591 = null;
    var count__28272_30592 = 0;
    var i__28273_30593 = 0;
    while (true) {
      if (i__28273_30593 < count__28272_30592) {
        var arg__13071__auto___30594 = cljs.core._nth.call(null, chunk__28271_30591, i__28273_30593);
        a__13070__auto__.push(arg__13071__auto___30594);
        var G__30595 = seq__28270_30590;
        var G__30596 = chunk__28271_30591;
        var G__30597 = count__28272_30592;
        var G__30598 = i__28273_30593 + 1;
        seq__28270_30590 = G__30595;
        chunk__28271_30591 = G__30596;
        count__28272_30592 = G__30597;
        i__28273_30593 = G__30598;
        continue;
      } else {
        var temp__4126__auto___30599 = cljs.core.seq.call(null, seq__28270_30590);
        if (temp__4126__auto___30599) {
          var seq__28270_30600__$1 = temp__4126__auto___30599;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__28270_30600__$1)) {
            var c__8291__auto___30601 = cljs.core.chunk_first.call(null, seq__28270_30600__$1);
            var G__30602 = cljs.core.chunk_rest.call(null, seq__28270_30600__$1);
            var G__30603 = c__8291__auto___30601;
            var G__30604 = cljs.core.count.call(null, c__8291__auto___30601);
            var G__30605 = 0;
            seq__28270_30590 = G__30602;
            chunk__28271_30591 = G__30603;
            count__28272_30592 = G__30604;
            i__28273_30593 = G__30605;
            continue;
          } else {
            var arg__13071__auto___30606 = cljs.core.first.call(null, seq__28270_30600__$1);
            a__13070__auto__.push(arg__13071__auto___30606);
            var G__30607 = cljs.core.next.call(null, seq__28270_30600__$1);
            var G__30608 = null;
            var G__30609 = 0;
            var G__30610 = 0;
            seq__28270_30590 = G__30607;
            chunk__28271_30591 = G__30608;
            count__28272_30592 = G__30609;
            i__28273_30593 = G__30610;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.summary.apply(null, a__13070__auto__);
  };
  var summary = function(var_args) {
    var args__13069__auto__ = null;
    if (arguments.length > 0) {
      var G__30611__i = 0, G__30611__a = new Array(arguments.length - 0);
      while (G__30611__i < G__30611__a.length) {
        G__30611__a[G__30611__i] = arguments[G__30611__i + 0];
        ++G__30611__i;
      }
      args__13069__auto__ = new cljs.core.IndexedSeq(G__30611__a, 0);
    }
    return summary__delegate.call(this, args__13069__auto__);
  };
  summary.cljs$lang$maxFixedArity = 0;
  summary.cljs$lang$applyTo = function(arglist__30612) {
    var args__13069__auto__ = cljs.core.seq(arglist__30612);
    return summary__delegate(args__13069__auto__);
  };
  summary.cljs$core$IFn$_invoke$arity$variadic = summary__delegate;
  return summary;
}();
quiescent.dom.sup = function() {
  var sup__delegate = function(args__13069__auto__) {
    var a__13070__auto__ = [];
    a__13070__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__13069__auto__)));
    var seq__28278_30613 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__13069__auto__));
    var chunk__28279_30614 = null;
    var count__28280_30615 = 0;
    var i__28281_30616 = 0;
    while (true) {
      if (i__28281_30616 < count__28280_30615) {
        var arg__13071__auto___30617 = cljs.core._nth.call(null, chunk__28279_30614, i__28281_30616);
        a__13070__auto__.push(arg__13071__auto___30617);
        var G__30618 = seq__28278_30613;
        var G__30619 = chunk__28279_30614;
        var G__30620 = count__28280_30615;
        var G__30621 = i__28281_30616 + 1;
        seq__28278_30613 = G__30618;
        chunk__28279_30614 = G__30619;
        count__28280_30615 = G__30620;
        i__28281_30616 = G__30621;
        continue;
      } else {
        var temp__4126__auto___30622 = cljs.core.seq.call(null, seq__28278_30613);
        if (temp__4126__auto___30622) {
          var seq__28278_30623__$1 = temp__4126__auto___30622;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__28278_30623__$1)) {
            var c__8291__auto___30624 = cljs.core.chunk_first.call(null, seq__28278_30623__$1);
            var G__30625 = cljs.core.chunk_rest.call(null, seq__28278_30623__$1);
            var G__30626 = c__8291__auto___30624;
            var G__30627 = cljs.core.count.call(null, c__8291__auto___30624);
            var G__30628 = 0;
            seq__28278_30613 = G__30625;
            chunk__28279_30614 = G__30626;
            count__28280_30615 = G__30627;
            i__28281_30616 = G__30628;
            continue;
          } else {
            var arg__13071__auto___30629 = cljs.core.first.call(null, seq__28278_30623__$1);
            a__13070__auto__.push(arg__13071__auto___30629);
            var G__30630 = cljs.core.next.call(null, seq__28278_30623__$1);
            var G__30631 = null;
            var G__30632 = 0;
            var G__30633 = 0;
            seq__28278_30613 = G__30630;
            chunk__28279_30614 = G__30631;
            count__28280_30615 = G__30632;
            i__28281_30616 = G__30633;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.sup.apply(null, a__13070__auto__);
  };
  var sup = function(var_args) {
    var args__13069__auto__ = null;
    if (arguments.length > 0) {
      var G__30634__i = 0, G__30634__a = new Array(arguments.length - 0);
      while (G__30634__i < G__30634__a.length) {
        G__30634__a[G__30634__i] = arguments[G__30634__i + 0];
        ++G__30634__i;
      }
      args__13069__auto__ = new cljs.core.IndexedSeq(G__30634__a, 0);
    }
    return sup__delegate.call(this, args__13069__auto__);
  };
  sup.cljs$lang$maxFixedArity = 0;
  sup.cljs$lang$applyTo = function(arglist__30635) {
    var args__13069__auto__ = cljs.core.seq(arglist__30635);
    return sup__delegate(args__13069__auto__);
  };
  sup.cljs$core$IFn$_invoke$arity$variadic = sup__delegate;
  return sup;
}();
quiescent.dom.table = function() {
  var table__delegate = function(args__13069__auto__) {
    var a__13070__auto__ = [];
    a__13070__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__13069__auto__)));
    var seq__28286_30636 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__13069__auto__));
    var chunk__28287_30637 = null;
    var count__28288_30638 = 0;
    var i__28289_30639 = 0;
    while (true) {
      if (i__28289_30639 < count__28288_30638) {
        var arg__13071__auto___30640 = cljs.core._nth.call(null, chunk__28287_30637, i__28289_30639);
        a__13070__auto__.push(arg__13071__auto___30640);
        var G__30641 = seq__28286_30636;
        var G__30642 = chunk__28287_30637;
        var G__30643 = count__28288_30638;
        var G__30644 = i__28289_30639 + 1;
        seq__28286_30636 = G__30641;
        chunk__28287_30637 = G__30642;
        count__28288_30638 = G__30643;
        i__28289_30639 = G__30644;
        continue;
      } else {
        var temp__4126__auto___30645 = cljs.core.seq.call(null, seq__28286_30636);
        if (temp__4126__auto___30645) {
          var seq__28286_30646__$1 = temp__4126__auto___30645;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__28286_30646__$1)) {
            var c__8291__auto___30647 = cljs.core.chunk_first.call(null, seq__28286_30646__$1);
            var G__30648 = cljs.core.chunk_rest.call(null, seq__28286_30646__$1);
            var G__30649 = c__8291__auto___30647;
            var G__30650 = cljs.core.count.call(null, c__8291__auto___30647);
            var G__30651 = 0;
            seq__28286_30636 = G__30648;
            chunk__28287_30637 = G__30649;
            count__28288_30638 = G__30650;
            i__28289_30639 = G__30651;
            continue;
          } else {
            var arg__13071__auto___30652 = cljs.core.first.call(null, seq__28286_30646__$1);
            a__13070__auto__.push(arg__13071__auto___30652);
            var G__30653 = cljs.core.next.call(null, seq__28286_30646__$1);
            var G__30654 = null;
            var G__30655 = 0;
            var G__30656 = 0;
            seq__28286_30636 = G__30653;
            chunk__28287_30637 = G__30654;
            count__28288_30638 = G__30655;
            i__28289_30639 = G__30656;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.table.apply(null, a__13070__auto__);
  };
  var table = function(var_args) {
    var args__13069__auto__ = null;
    if (arguments.length > 0) {
      var G__30657__i = 0, G__30657__a = new Array(arguments.length - 0);
      while (G__30657__i < G__30657__a.length) {
        G__30657__a[G__30657__i] = arguments[G__30657__i + 0];
        ++G__30657__i;
      }
      args__13069__auto__ = new cljs.core.IndexedSeq(G__30657__a, 0);
    }
    return table__delegate.call(this, args__13069__auto__);
  };
  table.cljs$lang$maxFixedArity = 0;
  table.cljs$lang$applyTo = function(arglist__30658) {
    var args__13069__auto__ = cljs.core.seq(arglist__30658);
    return table__delegate(args__13069__auto__);
  };
  table.cljs$core$IFn$_invoke$arity$variadic = table__delegate;
  return table;
}();
quiescent.dom.tbody = function() {
  var tbody__delegate = function(args__13069__auto__) {
    var a__13070__auto__ = [];
    a__13070__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__13069__auto__)));
    var seq__28294_30659 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__13069__auto__));
    var chunk__28295_30660 = null;
    var count__28296_30661 = 0;
    var i__28297_30662 = 0;
    while (true) {
      if (i__28297_30662 < count__28296_30661) {
        var arg__13071__auto___30663 = cljs.core._nth.call(null, chunk__28295_30660, i__28297_30662);
        a__13070__auto__.push(arg__13071__auto___30663);
        var G__30664 = seq__28294_30659;
        var G__30665 = chunk__28295_30660;
        var G__30666 = count__28296_30661;
        var G__30667 = i__28297_30662 + 1;
        seq__28294_30659 = G__30664;
        chunk__28295_30660 = G__30665;
        count__28296_30661 = G__30666;
        i__28297_30662 = G__30667;
        continue;
      } else {
        var temp__4126__auto___30668 = cljs.core.seq.call(null, seq__28294_30659);
        if (temp__4126__auto___30668) {
          var seq__28294_30669__$1 = temp__4126__auto___30668;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__28294_30669__$1)) {
            var c__8291__auto___30670 = cljs.core.chunk_first.call(null, seq__28294_30669__$1);
            var G__30671 = cljs.core.chunk_rest.call(null, seq__28294_30669__$1);
            var G__30672 = c__8291__auto___30670;
            var G__30673 = cljs.core.count.call(null, c__8291__auto___30670);
            var G__30674 = 0;
            seq__28294_30659 = G__30671;
            chunk__28295_30660 = G__30672;
            count__28296_30661 = G__30673;
            i__28297_30662 = G__30674;
            continue;
          } else {
            var arg__13071__auto___30675 = cljs.core.first.call(null, seq__28294_30669__$1);
            a__13070__auto__.push(arg__13071__auto___30675);
            var G__30676 = cljs.core.next.call(null, seq__28294_30669__$1);
            var G__30677 = null;
            var G__30678 = 0;
            var G__30679 = 0;
            seq__28294_30659 = G__30676;
            chunk__28295_30660 = G__30677;
            count__28296_30661 = G__30678;
            i__28297_30662 = G__30679;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.tbody.apply(null, a__13070__auto__);
  };
  var tbody = function(var_args) {
    var args__13069__auto__ = null;
    if (arguments.length > 0) {
      var G__30680__i = 0, G__30680__a = new Array(arguments.length - 0);
      while (G__30680__i < G__30680__a.length) {
        G__30680__a[G__30680__i] = arguments[G__30680__i + 0];
        ++G__30680__i;
      }
      args__13069__auto__ = new cljs.core.IndexedSeq(G__30680__a, 0);
    }
    return tbody__delegate.call(this, args__13069__auto__);
  };
  tbody.cljs$lang$maxFixedArity = 0;
  tbody.cljs$lang$applyTo = function(arglist__30681) {
    var args__13069__auto__ = cljs.core.seq(arglist__30681);
    return tbody__delegate(args__13069__auto__);
  };
  tbody.cljs$core$IFn$_invoke$arity$variadic = tbody__delegate;
  return tbody;
}();
quiescent.dom.td = function() {
  var td__delegate = function(args__13069__auto__) {
    var a__13070__auto__ = [];
    a__13070__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__13069__auto__)));
    var seq__28302_30682 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__13069__auto__));
    var chunk__28303_30683 = null;
    var count__28304_30684 = 0;
    var i__28305_30685 = 0;
    while (true) {
      if (i__28305_30685 < count__28304_30684) {
        var arg__13071__auto___30686 = cljs.core._nth.call(null, chunk__28303_30683, i__28305_30685);
        a__13070__auto__.push(arg__13071__auto___30686);
        var G__30687 = seq__28302_30682;
        var G__30688 = chunk__28303_30683;
        var G__30689 = count__28304_30684;
        var G__30690 = i__28305_30685 + 1;
        seq__28302_30682 = G__30687;
        chunk__28303_30683 = G__30688;
        count__28304_30684 = G__30689;
        i__28305_30685 = G__30690;
        continue;
      } else {
        var temp__4126__auto___30691 = cljs.core.seq.call(null, seq__28302_30682);
        if (temp__4126__auto___30691) {
          var seq__28302_30692__$1 = temp__4126__auto___30691;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__28302_30692__$1)) {
            var c__8291__auto___30693 = cljs.core.chunk_first.call(null, seq__28302_30692__$1);
            var G__30694 = cljs.core.chunk_rest.call(null, seq__28302_30692__$1);
            var G__30695 = c__8291__auto___30693;
            var G__30696 = cljs.core.count.call(null, c__8291__auto___30693);
            var G__30697 = 0;
            seq__28302_30682 = G__30694;
            chunk__28303_30683 = G__30695;
            count__28304_30684 = G__30696;
            i__28305_30685 = G__30697;
            continue;
          } else {
            var arg__13071__auto___30698 = cljs.core.first.call(null, seq__28302_30692__$1);
            a__13070__auto__.push(arg__13071__auto___30698);
            var G__30699 = cljs.core.next.call(null, seq__28302_30692__$1);
            var G__30700 = null;
            var G__30701 = 0;
            var G__30702 = 0;
            seq__28302_30682 = G__30699;
            chunk__28303_30683 = G__30700;
            count__28304_30684 = G__30701;
            i__28305_30685 = G__30702;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.td.apply(null, a__13070__auto__);
  };
  var td = function(var_args) {
    var args__13069__auto__ = null;
    if (arguments.length > 0) {
      var G__30703__i = 0, G__30703__a = new Array(arguments.length - 0);
      while (G__30703__i < G__30703__a.length) {
        G__30703__a[G__30703__i] = arguments[G__30703__i + 0];
        ++G__30703__i;
      }
      args__13069__auto__ = new cljs.core.IndexedSeq(G__30703__a, 0);
    }
    return td__delegate.call(this, args__13069__auto__);
  };
  td.cljs$lang$maxFixedArity = 0;
  td.cljs$lang$applyTo = function(arglist__30704) {
    var args__13069__auto__ = cljs.core.seq(arglist__30704);
    return td__delegate(args__13069__auto__);
  };
  td.cljs$core$IFn$_invoke$arity$variadic = td__delegate;
  return td;
}();
quiescent.dom.textarea = function() {
  var textarea__delegate = function(args__13069__auto__) {
    var a__13070__auto__ = [];
    a__13070__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__13069__auto__)));
    var seq__28310_30705 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__13069__auto__));
    var chunk__28311_30706 = null;
    var count__28312_30707 = 0;
    var i__28313_30708 = 0;
    while (true) {
      if (i__28313_30708 < count__28312_30707) {
        var arg__13071__auto___30709 = cljs.core._nth.call(null, chunk__28311_30706, i__28313_30708);
        a__13070__auto__.push(arg__13071__auto___30709);
        var G__30710 = seq__28310_30705;
        var G__30711 = chunk__28311_30706;
        var G__30712 = count__28312_30707;
        var G__30713 = i__28313_30708 + 1;
        seq__28310_30705 = G__30710;
        chunk__28311_30706 = G__30711;
        count__28312_30707 = G__30712;
        i__28313_30708 = G__30713;
        continue;
      } else {
        var temp__4126__auto___30714 = cljs.core.seq.call(null, seq__28310_30705);
        if (temp__4126__auto___30714) {
          var seq__28310_30715__$1 = temp__4126__auto___30714;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__28310_30715__$1)) {
            var c__8291__auto___30716 = cljs.core.chunk_first.call(null, seq__28310_30715__$1);
            var G__30717 = cljs.core.chunk_rest.call(null, seq__28310_30715__$1);
            var G__30718 = c__8291__auto___30716;
            var G__30719 = cljs.core.count.call(null, c__8291__auto___30716);
            var G__30720 = 0;
            seq__28310_30705 = G__30717;
            chunk__28311_30706 = G__30718;
            count__28312_30707 = G__30719;
            i__28313_30708 = G__30720;
            continue;
          } else {
            var arg__13071__auto___30721 = cljs.core.first.call(null, seq__28310_30715__$1);
            a__13070__auto__.push(arg__13071__auto___30721);
            var G__30722 = cljs.core.next.call(null, seq__28310_30715__$1);
            var G__30723 = null;
            var G__30724 = 0;
            var G__30725 = 0;
            seq__28310_30705 = G__30722;
            chunk__28311_30706 = G__30723;
            count__28312_30707 = G__30724;
            i__28313_30708 = G__30725;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.textarea.apply(null, a__13070__auto__);
  };
  var textarea = function(var_args) {
    var args__13069__auto__ = null;
    if (arguments.length > 0) {
      var G__30726__i = 0, G__30726__a = new Array(arguments.length - 0);
      while (G__30726__i < G__30726__a.length) {
        G__30726__a[G__30726__i] = arguments[G__30726__i + 0];
        ++G__30726__i;
      }
      args__13069__auto__ = new cljs.core.IndexedSeq(G__30726__a, 0);
    }
    return textarea__delegate.call(this, args__13069__auto__);
  };
  textarea.cljs$lang$maxFixedArity = 0;
  textarea.cljs$lang$applyTo = function(arglist__30727) {
    var args__13069__auto__ = cljs.core.seq(arglist__30727);
    return textarea__delegate(args__13069__auto__);
  };
  textarea.cljs$core$IFn$_invoke$arity$variadic = textarea__delegate;
  return textarea;
}();
quiescent.dom.tfoot = function() {
  var tfoot__delegate = function(args__13069__auto__) {
    var a__13070__auto__ = [];
    a__13070__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__13069__auto__)));
    var seq__28318_30728 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__13069__auto__));
    var chunk__28319_30729 = null;
    var count__28320_30730 = 0;
    var i__28321_30731 = 0;
    while (true) {
      if (i__28321_30731 < count__28320_30730) {
        var arg__13071__auto___30732 = cljs.core._nth.call(null, chunk__28319_30729, i__28321_30731);
        a__13070__auto__.push(arg__13071__auto___30732);
        var G__30733 = seq__28318_30728;
        var G__30734 = chunk__28319_30729;
        var G__30735 = count__28320_30730;
        var G__30736 = i__28321_30731 + 1;
        seq__28318_30728 = G__30733;
        chunk__28319_30729 = G__30734;
        count__28320_30730 = G__30735;
        i__28321_30731 = G__30736;
        continue;
      } else {
        var temp__4126__auto___30737 = cljs.core.seq.call(null, seq__28318_30728);
        if (temp__4126__auto___30737) {
          var seq__28318_30738__$1 = temp__4126__auto___30737;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__28318_30738__$1)) {
            var c__8291__auto___30739 = cljs.core.chunk_first.call(null, seq__28318_30738__$1);
            var G__30740 = cljs.core.chunk_rest.call(null, seq__28318_30738__$1);
            var G__30741 = c__8291__auto___30739;
            var G__30742 = cljs.core.count.call(null, c__8291__auto___30739);
            var G__30743 = 0;
            seq__28318_30728 = G__30740;
            chunk__28319_30729 = G__30741;
            count__28320_30730 = G__30742;
            i__28321_30731 = G__30743;
            continue;
          } else {
            var arg__13071__auto___30744 = cljs.core.first.call(null, seq__28318_30738__$1);
            a__13070__auto__.push(arg__13071__auto___30744);
            var G__30745 = cljs.core.next.call(null, seq__28318_30738__$1);
            var G__30746 = null;
            var G__30747 = 0;
            var G__30748 = 0;
            seq__28318_30728 = G__30745;
            chunk__28319_30729 = G__30746;
            count__28320_30730 = G__30747;
            i__28321_30731 = G__30748;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.tfoot.apply(null, a__13070__auto__);
  };
  var tfoot = function(var_args) {
    var args__13069__auto__ = null;
    if (arguments.length > 0) {
      var G__30749__i = 0, G__30749__a = new Array(arguments.length - 0);
      while (G__30749__i < G__30749__a.length) {
        G__30749__a[G__30749__i] = arguments[G__30749__i + 0];
        ++G__30749__i;
      }
      args__13069__auto__ = new cljs.core.IndexedSeq(G__30749__a, 0);
    }
    return tfoot__delegate.call(this, args__13069__auto__);
  };
  tfoot.cljs$lang$maxFixedArity = 0;
  tfoot.cljs$lang$applyTo = function(arglist__30750) {
    var args__13069__auto__ = cljs.core.seq(arglist__30750);
    return tfoot__delegate(args__13069__auto__);
  };
  tfoot.cljs$core$IFn$_invoke$arity$variadic = tfoot__delegate;
  return tfoot;
}();
quiescent.dom.th = function() {
  var th__delegate = function(args__13069__auto__) {
    var a__13070__auto__ = [];
    a__13070__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__13069__auto__)));
    var seq__28326_30751 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__13069__auto__));
    var chunk__28327_30752 = null;
    var count__28328_30753 = 0;
    var i__28329_30754 = 0;
    while (true) {
      if (i__28329_30754 < count__28328_30753) {
        var arg__13071__auto___30755 = cljs.core._nth.call(null, chunk__28327_30752, i__28329_30754);
        a__13070__auto__.push(arg__13071__auto___30755);
        var G__30756 = seq__28326_30751;
        var G__30757 = chunk__28327_30752;
        var G__30758 = count__28328_30753;
        var G__30759 = i__28329_30754 + 1;
        seq__28326_30751 = G__30756;
        chunk__28327_30752 = G__30757;
        count__28328_30753 = G__30758;
        i__28329_30754 = G__30759;
        continue;
      } else {
        var temp__4126__auto___30760 = cljs.core.seq.call(null, seq__28326_30751);
        if (temp__4126__auto___30760) {
          var seq__28326_30761__$1 = temp__4126__auto___30760;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__28326_30761__$1)) {
            var c__8291__auto___30762 = cljs.core.chunk_first.call(null, seq__28326_30761__$1);
            var G__30763 = cljs.core.chunk_rest.call(null, seq__28326_30761__$1);
            var G__30764 = c__8291__auto___30762;
            var G__30765 = cljs.core.count.call(null, c__8291__auto___30762);
            var G__30766 = 0;
            seq__28326_30751 = G__30763;
            chunk__28327_30752 = G__30764;
            count__28328_30753 = G__30765;
            i__28329_30754 = G__30766;
            continue;
          } else {
            var arg__13071__auto___30767 = cljs.core.first.call(null, seq__28326_30761__$1);
            a__13070__auto__.push(arg__13071__auto___30767);
            var G__30768 = cljs.core.next.call(null, seq__28326_30761__$1);
            var G__30769 = null;
            var G__30770 = 0;
            var G__30771 = 0;
            seq__28326_30751 = G__30768;
            chunk__28327_30752 = G__30769;
            count__28328_30753 = G__30770;
            i__28329_30754 = G__30771;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.th.apply(null, a__13070__auto__);
  };
  var th = function(var_args) {
    var args__13069__auto__ = null;
    if (arguments.length > 0) {
      var G__30772__i = 0, G__30772__a = new Array(arguments.length - 0);
      while (G__30772__i < G__30772__a.length) {
        G__30772__a[G__30772__i] = arguments[G__30772__i + 0];
        ++G__30772__i;
      }
      args__13069__auto__ = new cljs.core.IndexedSeq(G__30772__a, 0);
    }
    return th__delegate.call(this, args__13069__auto__);
  };
  th.cljs$lang$maxFixedArity = 0;
  th.cljs$lang$applyTo = function(arglist__30773) {
    var args__13069__auto__ = cljs.core.seq(arglist__30773);
    return th__delegate(args__13069__auto__);
  };
  th.cljs$core$IFn$_invoke$arity$variadic = th__delegate;
  return th;
}();
quiescent.dom.thead = function() {
  var thead__delegate = function(args__13069__auto__) {
    var a__13070__auto__ = [];
    a__13070__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__13069__auto__)));
    var seq__28334_30774 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__13069__auto__));
    var chunk__28335_30775 = null;
    var count__28336_30776 = 0;
    var i__28337_30777 = 0;
    while (true) {
      if (i__28337_30777 < count__28336_30776) {
        var arg__13071__auto___30778 = cljs.core._nth.call(null, chunk__28335_30775, i__28337_30777);
        a__13070__auto__.push(arg__13071__auto___30778);
        var G__30779 = seq__28334_30774;
        var G__30780 = chunk__28335_30775;
        var G__30781 = count__28336_30776;
        var G__30782 = i__28337_30777 + 1;
        seq__28334_30774 = G__30779;
        chunk__28335_30775 = G__30780;
        count__28336_30776 = G__30781;
        i__28337_30777 = G__30782;
        continue;
      } else {
        var temp__4126__auto___30783 = cljs.core.seq.call(null, seq__28334_30774);
        if (temp__4126__auto___30783) {
          var seq__28334_30784__$1 = temp__4126__auto___30783;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__28334_30784__$1)) {
            var c__8291__auto___30785 = cljs.core.chunk_first.call(null, seq__28334_30784__$1);
            var G__30786 = cljs.core.chunk_rest.call(null, seq__28334_30784__$1);
            var G__30787 = c__8291__auto___30785;
            var G__30788 = cljs.core.count.call(null, c__8291__auto___30785);
            var G__30789 = 0;
            seq__28334_30774 = G__30786;
            chunk__28335_30775 = G__30787;
            count__28336_30776 = G__30788;
            i__28337_30777 = G__30789;
            continue;
          } else {
            var arg__13071__auto___30790 = cljs.core.first.call(null, seq__28334_30784__$1);
            a__13070__auto__.push(arg__13071__auto___30790);
            var G__30791 = cljs.core.next.call(null, seq__28334_30784__$1);
            var G__30792 = null;
            var G__30793 = 0;
            var G__30794 = 0;
            seq__28334_30774 = G__30791;
            chunk__28335_30775 = G__30792;
            count__28336_30776 = G__30793;
            i__28337_30777 = G__30794;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.thead.apply(null, a__13070__auto__);
  };
  var thead = function(var_args) {
    var args__13069__auto__ = null;
    if (arguments.length > 0) {
      var G__30795__i = 0, G__30795__a = new Array(arguments.length - 0);
      while (G__30795__i < G__30795__a.length) {
        G__30795__a[G__30795__i] = arguments[G__30795__i + 0];
        ++G__30795__i;
      }
      args__13069__auto__ = new cljs.core.IndexedSeq(G__30795__a, 0);
    }
    return thead__delegate.call(this, args__13069__auto__);
  };
  thead.cljs$lang$maxFixedArity = 0;
  thead.cljs$lang$applyTo = function(arglist__30796) {
    var args__13069__auto__ = cljs.core.seq(arglist__30796);
    return thead__delegate(args__13069__auto__);
  };
  thead.cljs$core$IFn$_invoke$arity$variadic = thead__delegate;
  return thead;
}();
quiescent.dom.time = function() {
  var time__delegate = function(args__13069__auto__) {
    var a__13070__auto__ = [];
    a__13070__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__13069__auto__)));
    var seq__28342_30797 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__13069__auto__));
    var chunk__28343_30798 = null;
    var count__28344_30799 = 0;
    var i__28345_30800 = 0;
    while (true) {
      if (i__28345_30800 < count__28344_30799) {
        var arg__13071__auto___30801 = cljs.core._nth.call(null, chunk__28343_30798, i__28345_30800);
        a__13070__auto__.push(arg__13071__auto___30801);
        var G__30802 = seq__28342_30797;
        var G__30803 = chunk__28343_30798;
        var G__30804 = count__28344_30799;
        var G__30805 = i__28345_30800 + 1;
        seq__28342_30797 = G__30802;
        chunk__28343_30798 = G__30803;
        count__28344_30799 = G__30804;
        i__28345_30800 = G__30805;
        continue;
      } else {
        var temp__4126__auto___30806 = cljs.core.seq.call(null, seq__28342_30797);
        if (temp__4126__auto___30806) {
          var seq__28342_30807__$1 = temp__4126__auto___30806;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__28342_30807__$1)) {
            var c__8291__auto___30808 = cljs.core.chunk_first.call(null, seq__28342_30807__$1);
            var G__30809 = cljs.core.chunk_rest.call(null, seq__28342_30807__$1);
            var G__30810 = c__8291__auto___30808;
            var G__30811 = cljs.core.count.call(null, c__8291__auto___30808);
            var G__30812 = 0;
            seq__28342_30797 = G__30809;
            chunk__28343_30798 = G__30810;
            count__28344_30799 = G__30811;
            i__28345_30800 = G__30812;
            continue;
          } else {
            var arg__13071__auto___30813 = cljs.core.first.call(null, seq__28342_30807__$1);
            a__13070__auto__.push(arg__13071__auto___30813);
            var G__30814 = cljs.core.next.call(null, seq__28342_30807__$1);
            var G__30815 = null;
            var G__30816 = 0;
            var G__30817 = 0;
            seq__28342_30797 = G__30814;
            chunk__28343_30798 = G__30815;
            count__28344_30799 = G__30816;
            i__28345_30800 = G__30817;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.time.apply(null, a__13070__auto__);
  };
  var time = function(var_args) {
    var args__13069__auto__ = null;
    if (arguments.length > 0) {
      var G__30818__i = 0, G__30818__a = new Array(arguments.length - 0);
      while (G__30818__i < G__30818__a.length) {
        G__30818__a[G__30818__i] = arguments[G__30818__i + 0];
        ++G__30818__i;
      }
      args__13069__auto__ = new cljs.core.IndexedSeq(G__30818__a, 0);
    }
    return time__delegate.call(this, args__13069__auto__);
  };
  time.cljs$lang$maxFixedArity = 0;
  time.cljs$lang$applyTo = function(arglist__30819) {
    var args__13069__auto__ = cljs.core.seq(arglist__30819);
    return time__delegate(args__13069__auto__);
  };
  time.cljs$core$IFn$_invoke$arity$variadic = time__delegate;
  return time;
}();
quiescent.dom.title = function() {
  var title__delegate = function(args__13069__auto__) {
    var a__13070__auto__ = [];
    a__13070__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__13069__auto__)));
    var seq__28350_30820 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__13069__auto__));
    var chunk__28351_30821 = null;
    var count__28352_30822 = 0;
    var i__28353_30823 = 0;
    while (true) {
      if (i__28353_30823 < count__28352_30822) {
        var arg__13071__auto___30824 = cljs.core._nth.call(null, chunk__28351_30821, i__28353_30823);
        a__13070__auto__.push(arg__13071__auto___30824);
        var G__30825 = seq__28350_30820;
        var G__30826 = chunk__28351_30821;
        var G__30827 = count__28352_30822;
        var G__30828 = i__28353_30823 + 1;
        seq__28350_30820 = G__30825;
        chunk__28351_30821 = G__30826;
        count__28352_30822 = G__30827;
        i__28353_30823 = G__30828;
        continue;
      } else {
        var temp__4126__auto___30829 = cljs.core.seq.call(null, seq__28350_30820);
        if (temp__4126__auto___30829) {
          var seq__28350_30830__$1 = temp__4126__auto___30829;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__28350_30830__$1)) {
            var c__8291__auto___30831 = cljs.core.chunk_first.call(null, seq__28350_30830__$1);
            var G__30832 = cljs.core.chunk_rest.call(null, seq__28350_30830__$1);
            var G__30833 = c__8291__auto___30831;
            var G__30834 = cljs.core.count.call(null, c__8291__auto___30831);
            var G__30835 = 0;
            seq__28350_30820 = G__30832;
            chunk__28351_30821 = G__30833;
            count__28352_30822 = G__30834;
            i__28353_30823 = G__30835;
            continue;
          } else {
            var arg__13071__auto___30836 = cljs.core.first.call(null, seq__28350_30830__$1);
            a__13070__auto__.push(arg__13071__auto___30836);
            var G__30837 = cljs.core.next.call(null, seq__28350_30830__$1);
            var G__30838 = null;
            var G__30839 = 0;
            var G__30840 = 0;
            seq__28350_30820 = G__30837;
            chunk__28351_30821 = G__30838;
            count__28352_30822 = G__30839;
            i__28353_30823 = G__30840;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.title.apply(null, a__13070__auto__);
  };
  var title = function(var_args) {
    var args__13069__auto__ = null;
    if (arguments.length > 0) {
      var G__30841__i = 0, G__30841__a = new Array(arguments.length - 0);
      while (G__30841__i < G__30841__a.length) {
        G__30841__a[G__30841__i] = arguments[G__30841__i + 0];
        ++G__30841__i;
      }
      args__13069__auto__ = new cljs.core.IndexedSeq(G__30841__a, 0);
    }
    return title__delegate.call(this, args__13069__auto__);
  };
  title.cljs$lang$maxFixedArity = 0;
  title.cljs$lang$applyTo = function(arglist__30842) {
    var args__13069__auto__ = cljs.core.seq(arglist__30842);
    return title__delegate(args__13069__auto__);
  };
  title.cljs$core$IFn$_invoke$arity$variadic = title__delegate;
  return title;
}();
quiescent.dom.tr = function() {
  var tr__delegate = function(args__13069__auto__) {
    var a__13070__auto__ = [];
    a__13070__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__13069__auto__)));
    var seq__28358_30843 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__13069__auto__));
    var chunk__28359_30844 = null;
    var count__28360_30845 = 0;
    var i__28361_30846 = 0;
    while (true) {
      if (i__28361_30846 < count__28360_30845) {
        var arg__13071__auto___30847 = cljs.core._nth.call(null, chunk__28359_30844, i__28361_30846);
        a__13070__auto__.push(arg__13071__auto___30847);
        var G__30848 = seq__28358_30843;
        var G__30849 = chunk__28359_30844;
        var G__30850 = count__28360_30845;
        var G__30851 = i__28361_30846 + 1;
        seq__28358_30843 = G__30848;
        chunk__28359_30844 = G__30849;
        count__28360_30845 = G__30850;
        i__28361_30846 = G__30851;
        continue;
      } else {
        var temp__4126__auto___30852 = cljs.core.seq.call(null, seq__28358_30843);
        if (temp__4126__auto___30852) {
          var seq__28358_30853__$1 = temp__4126__auto___30852;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__28358_30853__$1)) {
            var c__8291__auto___30854 = cljs.core.chunk_first.call(null, seq__28358_30853__$1);
            var G__30855 = cljs.core.chunk_rest.call(null, seq__28358_30853__$1);
            var G__30856 = c__8291__auto___30854;
            var G__30857 = cljs.core.count.call(null, c__8291__auto___30854);
            var G__30858 = 0;
            seq__28358_30843 = G__30855;
            chunk__28359_30844 = G__30856;
            count__28360_30845 = G__30857;
            i__28361_30846 = G__30858;
            continue;
          } else {
            var arg__13071__auto___30859 = cljs.core.first.call(null, seq__28358_30853__$1);
            a__13070__auto__.push(arg__13071__auto___30859);
            var G__30860 = cljs.core.next.call(null, seq__28358_30853__$1);
            var G__30861 = null;
            var G__30862 = 0;
            var G__30863 = 0;
            seq__28358_30843 = G__30860;
            chunk__28359_30844 = G__30861;
            count__28360_30845 = G__30862;
            i__28361_30846 = G__30863;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.tr.apply(null, a__13070__auto__);
  };
  var tr = function(var_args) {
    var args__13069__auto__ = null;
    if (arguments.length > 0) {
      var G__30864__i = 0, G__30864__a = new Array(arguments.length - 0);
      while (G__30864__i < G__30864__a.length) {
        G__30864__a[G__30864__i] = arguments[G__30864__i + 0];
        ++G__30864__i;
      }
      args__13069__auto__ = new cljs.core.IndexedSeq(G__30864__a, 0);
    }
    return tr__delegate.call(this, args__13069__auto__);
  };
  tr.cljs$lang$maxFixedArity = 0;
  tr.cljs$lang$applyTo = function(arglist__30865) {
    var args__13069__auto__ = cljs.core.seq(arglist__30865);
    return tr__delegate(args__13069__auto__);
  };
  tr.cljs$core$IFn$_invoke$arity$variadic = tr__delegate;
  return tr;
}();
quiescent.dom.track = function() {
  var track__delegate = function(args__13069__auto__) {
    var a__13070__auto__ = [];
    a__13070__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__13069__auto__)));
    var seq__28366_30866 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__13069__auto__));
    var chunk__28367_30867 = null;
    var count__28368_30868 = 0;
    var i__28369_30869 = 0;
    while (true) {
      if (i__28369_30869 < count__28368_30868) {
        var arg__13071__auto___30870 = cljs.core._nth.call(null, chunk__28367_30867, i__28369_30869);
        a__13070__auto__.push(arg__13071__auto___30870);
        var G__30871 = seq__28366_30866;
        var G__30872 = chunk__28367_30867;
        var G__30873 = count__28368_30868;
        var G__30874 = i__28369_30869 + 1;
        seq__28366_30866 = G__30871;
        chunk__28367_30867 = G__30872;
        count__28368_30868 = G__30873;
        i__28369_30869 = G__30874;
        continue;
      } else {
        var temp__4126__auto___30875 = cljs.core.seq.call(null, seq__28366_30866);
        if (temp__4126__auto___30875) {
          var seq__28366_30876__$1 = temp__4126__auto___30875;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__28366_30876__$1)) {
            var c__8291__auto___30877 = cljs.core.chunk_first.call(null, seq__28366_30876__$1);
            var G__30878 = cljs.core.chunk_rest.call(null, seq__28366_30876__$1);
            var G__30879 = c__8291__auto___30877;
            var G__30880 = cljs.core.count.call(null, c__8291__auto___30877);
            var G__30881 = 0;
            seq__28366_30866 = G__30878;
            chunk__28367_30867 = G__30879;
            count__28368_30868 = G__30880;
            i__28369_30869 = G__30881;
            continue;
          } else {
            var arg__13071__auto___30882 = cljs.core.first.call(null, seq__28366_30876__$1);
            a__13070__auto__.push(arg__13071__auto___30882);
            var G__30883 = cljs.core.next.call(null, seq__28366_30876__$1);
            var G__30884 = null;
            var G__30885 = 0;
            var G__30886 = 0;
            seq__28366_30866 = G__30883;
            chunk__28367_30867 = G__30884;
            count__28368_30868 = G__30885;
            i__28369_30869 = G__30886;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.track.apply(null, a__13070__auto__);
  };
  var track = function(var_args) {
    var args__13069__auto__ = null;
    if (arguments.length > 0) {
      var G__30887__i = 0, G__30887__a = new Array(arguments.length - 0);
      while (G__30887__i < G__30887__a.length) {
        G__30887__a[G__30887__i] = arguments[G__30887__i + 0];
        ++G__30887__i;
      }
      args__13069__auto__ = new cljs.core.IndexedSeq(G__30887__a, 0);
    }
    return track__delegate.call(this, args__13069__auto__);
  };
  track.cljs$lang$maxFixedArity = 0;
  track.cljs$lang$applyTo = function(arglist__30888) {
    var args__13069__auto__ = cljs.core.seq(arglist__30888);
    return track__delegate(args__13069__auto__);
  };
  track.cljs$core$IFn$_invoke$arity$variadic = track__delegate;
  return track;
}();
quiescent.dom.u = function() {
  var u__delegate = function(args__13069__auto__) {
    var a__13070__auto__ = [];
    a__13070__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__13069__auto__)));
    var seq__28374_30889 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__13069__auto__));
    var chunk__28375_30890 = null;
    var count__28376_30891 = 0;
    var i__28377_30892 = 0;
    while (true) {
      if (i__28377_30892 < count__28376_30891) {
        var arg__13071__auto___30893 = cljs.core._nth.call(null, chunk__28375_30890, i__28377_30892);
        a__13070__auto__.push(arg__13071__auto___30893);
        var G__30894 = seq__28374_30889;
        var G__30895 = chunk__28375_30890;
        var G__30896 = count__28376_30891;
        var G__30897 = i__28377_30892 + 1;
        seq__28374_30889 = G__30894;
        chunk__28375_30890 = G__30895;
        count__28376_30891 = G__30896;
        i__28377_30892 = G__30897;
        continue;
      } else {
        var temp__4126__auto___30898 = cljs.core.seq.call(null, seq__28374_30889);
        if (temp__4126__auto___30898) {
          var seq__28374_30899__$1 = temp__4126__auto___30898;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__28374_30899__$1)) {
            var c__8291__auto___30900 = cljs.core.chunk_first.call(null, seq__28374_30899__$1);
            var G__30901 = cljs.core.chunk_rest.call(null, seq__28374_30899__$1);
            var G__30902 = c__8291__auto___30900;
            var G__30903 = cljs.core.count.call(null, c__8291__auto___30900);
            var G__30904 = 0;
            seq__28374_30889 = G__30901;
            chunk__28375_30890 = G__30902;
            count__28376_30891 = G__30903;
            i__28377_30892 = G__30904;
            continue;
          } else {
            var arg__13071__auto___30905 = cljs.core.first.call(null, seq__28374_30899__$1);
            a__13070__auto__.push(arg__13071__auto___30905);
            var G__30906 = cljs.core.next.call(null, seq__28374_30899__$1);
            var G__30907 = null;
            var G__30908 = 0;
            var G__30909 = 0;
            seq__28374_30889 = G__30906;
            chunk__28375_30890 = G__30907;
            count__28376_30891 = G__30908;
            i__28377_30892 = G__30909;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.u.apply(null, a__13070__auto__);
  };
  var u = function(var_args) {
    var args__13069__auto__ = null;
    if (arguments.length > 0) {
      var G__30910__i = 0, G__30910__a = new Array(arguments.length - 0);
      while (G__30910__i < G__30910__a.length) {
        G__30910__a[G__30910__i] = arguments[G__30910__i + 0];
        ++G__30910__i;
      }
      args__13069__auto__ = new cljs.core.IndexedSeq(G__30910__a, 0);
    }
    return u__delegate.call(this, args__13069__auto__);
  };
  u.cljs$lang$maxFixedArity = 0;
  u.cljs$lang$applyTo = function(arglist__30911) {
    var args__13069__auto__ = cljs.core.seq(arglist__30911);
    return u__delegate(args__13069__auto__);
  };
  u.cljs$core$IFn$_invoke$arity$variadic = u__delegate;
  return u;
}();
quiescent.dom.ul = function() {
  var ul__delegate = function(args__13069__auto__) {
    var a__13070__auto__ = [];
    a__13070__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__13069__auto__)));
    var seq__28382_30912 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__13069__auto__));
    var chunk__28383_30913 = null;
    var count__28384_30914 = 0;
    var i__28385_30915 = 0;
    while (true) {
      if (i__28385_30915 < count__28384_30914) {
        var arg__13071__auto___30916 = cljs.core._nth.call(null, chunk__28383_30913, i__28385_30915);
        a__13070__auto__.push(arg__13071__auto___30916);
        var G__30917 = seq__28382_30912;
        var G__30918 = chunk__28383_30913;
        var G__30919 = count__28384_30914;
        var G__30920 = i__28385_30915 + 1;
        seq__28382_30912 = G__30917;
        chunk__28383_30913 = G__30918;
        count__28384_30914 = G__30919;
        i__28385_30915 = G__30920;
        continue;
      } else {
        var temp__4126__auto___30921 = cljs.core.seq.call(null, seq__28382_30912);
        if (temp__4126__auto___30921) {
          var seq__28382_30922__$1 = temp__4126__auto___30921;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__28382_30922__$1)) {
            var c__8291__auto___30923 = cljs.core.chunk_first.call(null, seq__28382_30922__$1);
            var G__30924 = cljs.core.chunk_rest.call(null, seq__28382_30922__$1);
            var G__30925 = c__8291__auto___30923;
            var G__30926 = cljs.core.count.call(null, c__8291__auto___30923);
            var G__30927 = 0;
            seq__28382_30912 = G__30924;
            chunk__28383_30913 = G__30925;
            count__28384_30914 = G__30926;
            i__28385_30915 = G__30927;
            continue;
          } else {
            var arg__13071__auto___30928 = cljs.core.first.call(null, seq__28382_30922__$1);
            a__13070__auto__.push(arg__13071__auto___30928);
            var G__30929 = cljs.core.next.call(null, seq__28382_30922__$1);
            var G__30930 = null;
            var G__30931 = 0;
            var G__30932 = 0;
            seq__28382_30912 = G__30929;
            chunk__28383_30913 = G__30930;
            count__28384_30914 = G__30931;
            i__28385_30915 = G__30932;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.ul.apply(null, a__13070__auto__);
  };
  var ul = function(var_args) {
    var args__13069__auto__ = null;
    if (arguments.length > 0) {
      var G__30933__i = 0, G__30933__a = new Array(arguments.length - 0);
      while (G__30933__i < G__30933__a.length) {
        G__30933__a[G__30933__i] = arguments[G__30933__i + 0];
        ++G__30933__i;
      }
      args__13069__auto__ = new cljs.core.IndexedSeq(G__30933__a, 0);
    }
    return ul__delegate.call(this, args__13069__auto__);
  };
  ul.cljs$lang$maxFixedArity = 0;
  ul.cljs$lang$applyTo = function(arglist__30934) {
    var args__13069__auto__ = cljs.core.seq(arglist__30934);
    return ul__delegate(args__13069__auto__);
  };
  ul.cljs$core$IFn$_invoke$arity$variadic = ul__delegate;
  return ul;
}();
quiescent.dom.var$ = function() {
  var var$__delegate = function(args__13069__auto__) {
    var a__13070__auto__ = [];
    a__13070__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__13069__auto__)));
    var seq__28390_30935 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__13069__auto__));
    var chunk__28391_30936 = null;
    var count__28392_30937 = 0;
    var i__28393_30938 = 0;
    while (true) {
      if (i__28393_30938 < count__28392_30937) {
        var arg__13071__auto___30939 = cljs.core._nth.call(null, chunk__28391_30936, i__28393_30938);
        a__13070__auto__.push(arg__13071__auto___30939);
        var G__30940 = seq__28390_30935;
        var G__30941 = chunk__28391_30936;
        var G__30942 = count__28392_30937;
        var G__30943 = i__28393_30938 + 1;
        seq__28390_30935 = G__30940;
        chunk__28391_30936 = G__30941;
        count__28392_30937 = G__30942;
        i__28393_30938 = G__30943;
        continue;
      } else {
        var temp__4126__auto___30944 = cljs.core.seq.call(null, seq__28390_30935);
        if (temp__4126__auto___30944) {
          var seq__28390_30945__$1 = temp__4126__auto___30944;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__28390_30945__$1)) {
            var c__8291__auto___30946 = cljs.core.chunk_first.call(null, seq__28390_30945__$1);
            var G__30947 = cljs.core.chunk_rest.call(null, seq__28390_30945__$1);
            var G__30948 = c__8291__auto___30946;
            var G__30949 = cljs.core.count.call(null, c__8291__auto___30946);
            var G__30950 = 0;
            seq__28390_30935 = G__30947;
            chunk__28391_30936 = G__30948;
            count__28392_30937 = G__30949;
            i__28393_30938 = G__30950;
            continue;
          } else {
            var arg__13071__auto___30951 = cljs.core.first.call(null, seq__28390_30945__$1);
            a__13070__auto__.push(arg__13071__auto___30951);
            var G__30952 = cljs.core.next.call(null, seq__28390_30945__$1);
            var G__30953 = null;
            var G__30954 = 0;
            var G__30955 = 0;
            seq__28390_30935 = G__30952;
            chunk__28391_30936 = G__30953;
            count__28392_30937 = G__30954;
            i__28393_30938 = G__30955;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.var$.apply(null, a__13070__auto__);
  };
  var var$ = function(var_args) {
    var args__13069__auto__ = null;
    if (arguments.length > 0) {
      var G__30956__i = 0, G__30956__a = new Array(arguments.length - 0);
      while (G__30956__i < G__30956__a.length) {
        G__30956__a[G__30956__i] = arguments[G__30956__i + 0];
        ++G__30956__i;
      }
      args__13069__auto__ = new cljs.core.IndexedSeq(G__30956__a, 0);
    }
    return var$__delegate.call(this, args__13069__auto__);
  };
  var$.cljs$lang$maxFixedArity = 0;
  var$.cljs$lang$applyTo = function(arglist__30957) {
    var args__13069__auto__ = cljs.core.seq(arglist__30957);
    return var$__delegate(args__13069__auto__);
  };
  var$.cljs$core$IFn$_invoke$arity$variadic = var$__delegate;
  return var$;
}();
quiescent.dom.video = function() {
  var video__delegate = function(args__13069__auto__) {
    var a__13070__auto__ = [];
    a__13070__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__13069__auto__)));
    var seq__28398_30958 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__13069__auto__));
    var chunk__28399_30959 = null;
    var count__28400_30960 = 0;
    var i__28401_30961 = 0;
    while (true) {
      if (i__28401_30961 < count__28400_30960) {
        var arg__13071__auto___30962 = cljs.core._nth.call(null, chunk__28399_30959, i__28401_30961);
        a__13070__auto__.push(arg__13071__auto___30962);
        var G__30963 = seq__28398_30958;
        var G__30964 = chunk__28399_30959;
        var G__30965 = count__28400_30960;
        var G__30966 = i__28401_30961 + 1;
        seq__28398_30958 = G__30963;
        chunk__28399_30959 = G__30964;
        count__28400_30960 = G__30965;
        i__28401_30961 = G__30966;
        continue;
      } else {
        var temp__4126__auto___30967 = cljs.core.seq.call(null, seq__28398_30958);
        if (temp__4126__auto___30967) {
          var seq__28398_30968__$1 = temp__4126__auto___30967;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__28398_30968__$1)) {
            var c__8291__auto___30969 = cljs.core.chunk_first.call(null, seq__28398_30968__$1);
            var G__30970 = cljs.core.chunk_rest.call(null, seq__28398_30968__$1);
            var G__30971 = c__8291__auto___30969;
            var G__30972 = cljs.core.count.call(null, c__8291__auto___30969);
            var G__30973 = 0;
            seq__28398_30958 = G__30970;
            chunk__28399_30959 = G__30971;
            count__28400_30960 = G__30972;
            i__28401_30961 = G__30973;
            continue;
          } else {
            var arg__13071__auto___30974 = cljs.core.first.call(null, seq__28398_30968__$1);
            a__13070__auto__.push(arg__13071__auto___30974);
            var G__30975 = cljs.core.next.call(null, seq__28398_30968__$1);
            var G__30976 = null;
            var G__30977 = 0;
            var G__30978 = 0;
            seq__28398_30958 = G__30975;
            chunk__28399_30959 = G__30976;
            count__28400_30960 = G__30977;
            i__28401_30961 = G__30978;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.video.apply(null, a__13070__auto__);
  };
  var video = function(var_args) {
    var args__13069__auto__ = null;
    if (arguments.length > 0) {
      var G__30979__i = 0, G__30979__a = new Array(arguments.length - 0);
      while (G__30979__i < G__30979__a.length) {
        G__30979__a[G__30979__i] = arguments[G__30979__i + 0];
        ++G__30979__i;
      }
      args__13069__auto__ = new cljs.core.IndexedSeq(G__30979__a, 0);
    }
    return video__delegate.call(this, args__13069__auto__);
  };
  video.cljs$lang$maxFixedArity = 0;
  video.cljs$lang$applyTo = function(arglist__30980) {
    var args__13069__auto__ = cljs.core.seq(arglist__30980);
    return video__delegate(args__13069__auto__);
  };
  video.cljs$core$IFn$_invoke$arity$variadic = video__delegate;
  return video;
}();
quiescent.dom.wbr = function() {
  var wbr__delegate = function(args__13069__auto__) {
    var a__13070__auto__ = [];
    a__13070__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__13069__auto__)));
    var seq__28406_30981 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__13069__auto__));
    var chunk__28407_30982 = null;
    var count__28408_30983 = 0;
    var i__28409_30984 = 0;
    while (true) {
      if (i__28409_30984 < count__28408_30983) {
        var arg__13071__auto___30985 = cljs.core._nth.call(null, chunk__28407_30982, i__28409_30984);
        a__13070__auto__.push(arg__13071__auto___30985);
        var G__30986 = seq__28406_30981;
        var G__30987 = chunk__28407_30982;
        var G__30988 = count__28408_30983;
        var G__30989 = i__28409_30984 + 1;
        seq__28406_30981 = G__30986;
        chunk__28407_30982 = G__30987;
        count__28408_30983 = G__30988;
        i__28409_30984 = G__30989;
        continue;
      } else {
        var temp__4126__auto___30990 = cljs.core.seq.call(null, seq__28406_30981);
        if (temp__4126__auto___30990) {
          var seq__28406_30991__$1 = temp__4126__auto___30990;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__28406_30991__$1)) {
            var c__8291__auto___30992 = cljs.core.chunk_first.call(null, seq__28406_30991__$1);
            var G__30993 = cljs.core.chunk_rest.call(null, seq__28406_30991__$1);
            var G__30994 = c__8291__auto___30992;
            var G__30995 = cljs.core.count.call(null, c__8291__auto___30992);
            var G__30996 = 0;
            seq__28406_30981 = G__30993;
            chunk__28407_30982 = G__30994;
            count__28408_30983 = G__30995;
            i__28409_30984 = G__30996;
            continue;
          } else {
            var arg__13071__auto___30997 = cljs.core.first.call(null, seq__28406_30991__$1);
            a__13070__auto__.push(arg__13071__auto___30997);
            var G__30998 = cljs.core.next.call(null, seq__28406_30991__$1);
            var G__30999 = null;
            var G__31000 = 0;
            var G__31001 = 0;
            seq__28406_30981 = G__30998;
            chunk__28407_30982 = G__30999;
            count__28408_30983 = G__31000;
            i__28409_30984 = G__31001;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.wbr.apply(null, a__13070__auto__);
  };
  var wbr = function(var_args) {
    var args__13069__auto__ = null;
    if (arguments.length > 0) {
      var G__31002__i = 0, G__31002__a = new Array(arguments.length - 0);
      while (G__31002__i < G__31002__a.length) {
        G__31002__a[G__31002__i] = arguments[G__31002__i + 0];
        ++G__31002__i;
      }
      args__13069__auto__ = new cljs.core.IndexedSeq(G__31002__a, 0);
    }
    return wbr__delegate.call(this, args__13069__auto__);
  };
  wbr.cljs$lang$maxFixedArity = 0;
  wbr.cljs$lang$applyTo = function(arglist__31003) {
    var args__13069__auto__ = cljs.core.seq(arglist__31003);
    return wbr__delegate(args__13069__auto__);
  };
  wbr.cljs$core$IFn$_invoke$arity$variadic = wbr__delegate;
  return wbr;
}();
quiescent.dom.circle = function() {
  var circle__delegate = function(args__13069__auto__) {
    var a__13070__auto__ = [];
    a__13070__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__13069__auto__)));
    var seq__28414_31004 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__13069__auto__));
    var chunk__28415_31005 = null;
    var count__28416_31006 = 0;
    var i__28417_31007 = 0;
    while (true) {
      if (i__28417_31007 < count__28416_31006) {
        var arg__13071__auto___31008 = cljs.core._nth.call(null, chunk__28415_31005, i__28417_31007);
        a__13070__auto__.push(arg__13071__auto___31008);
        var G__31009 = seq__28414_31004;
        var G__31010 = chunk__28415_31005;
        var G__31011 = count__28416_31006;
        var G__31012 = i__28417_31007 + 1;
        seq__28414_31004 = G__31009;
        chunk__28415_31005 = G__31010;
        count__28416_31006 = G__31011;
        i__28417_31007 = G__31012;
        continue;
      } else {
        var temp__4126__auto___31013 = cljs.core.seq.call(null, seq__28414_31004);
        if (temp__4126__auto___31013) {
          var seq__28414_31014__$1 = temp__4126__auto___31013;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__28414_31014__$1)) {
            var c__8291__auto___31015 = cljs.core.chunk_first.call(null, seq__28414_31014__$1);
            var G__31016 = cljs.core.chunk_rest.call(null, seq__28414_31014__$1);
            var G__31017 = c__8291__auto___31015;
            var G__31018 = cljs.core.count.call(null, c__8291__auto___31015);
            var G__31019 = 0;
            seq__28414_31004 = G__31016;
            chunk__28415_31005 = G__31017;
            count__28416_31006 = G__31018;
            i__28417_31007 = G__31019;
            continue;
          } else {
            var arg__13071__auto___31020 = cljs.core.first.call(null, seq__28414_31014__$1);
            a__13070__auto__.push(arg__13071__auto___31020);
            var G__31021 = cljs.core.next.call(null, seq__28414_31014__$1);
            var G__31022 = null;
            var G__31023 = 0;
            var G__31024 = 0;
            seq__28414_31004 = G__31021;
            chunk__28415_31005 = G__31022;
            count__28416_31006 = G__31023;
            i__28417_31007 = G__31024;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.circle.apply(null, a__13070__auto__);
  };
  var circle = function(var_args) {
    var args__13069__auto__ = null;
    if (arguments.length > 0) {
      var G__31025__i = 0, G__31025__a = new Array(arguments.length - 0);
      while (G__31025__i < G__31025__a.length) {
        G__31025__a[G__31025__i] = arguments[G__31025__i + 0];
        ++G__31025__i;
      }
      args__13069__auto__ = new cljs.core.IndexedSeq(G__31025__a, 0);
    }
    return circle__delegate.call(this, args__13069__auto__);
  };
  circle.cljs$lang$maxFixedArity = 0;
  circle.cljs$lang$applyTo = function(arglist__31026) {
    var args__13069__auto__ = cljs.core.seq(arglist__31026);
    return circle__delegate(args__13069__auto__);
  };
  circle.cljs$core$IFn$_invoke$arity$variadic = circle__delegate;
  return circle;
}();
quiescent.dom.g = function() {
  var g__delegate = function(args__13069__auto__) {
    var a__13070__auto__ = [];
    a__13070__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__13069__auto__)));
    var seq__28422_31027 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__13069__auto__));
    var chunk__28423_31028 = null;
    var count__28424_31029 = 0;
    var i__28425_31030 = 0;
    while (true) {
      if (i__28425_31030 < count__28424_31029) {
        var arg__13071__auto___31031 = cljs.core._nth.call(null, chunk__28423_31028, i__28425_31030);
        a__13070__auto__.push(arg__13071__auto___31031);
        var G__31032 = seq__28422_31027;
        var G__31033 = chunk__28423_31028;
        var G__31034 = count__28424_31029;
        var G__31035 = i__28425_31030 + 1;
        seq__28422_31027 = G__31032;
        chunk__28423_31028 = G__31033;
        count__28424_31029 = G__31034;
        i__28425_31030 = G__31035;
        continue;
      } else {
        var temp__4126__auto___31036 = cljs.core.seq.call(null, seq__28422_31027);
        if (temp__4126__auto___31036) {
          var seq__28422_31037__$1 = temp__4126__auto___31036;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__28422_31037__$1)) {
            var c__8291__auto___31038 = cljs.core.chunk_first.call(null, seq__28422_31037__$1);
            var G__31039 = cljs.core.chunk_rest.call(null, seq__28422_31037__$1);
            var G__31040 = c__8291__auto___31038;
            var G__31041 = cljs.core.count.call(null, c__8291__auto___31038);
            var G__31042 = 0;
            seq__28422_31027 = G__31039;
            chunk__28423_31028 = G__31040;
            count__28424_31029 = G__31041;
            i__28425_31030 = G__31042;
            continue;
          } else {
            var arg__13071__auto___31043 = cljs.core.first.call(null, seq__28422_31037__$1);
            a__13070__auto__.push(arg__13071__auto___31043);
            var G__31044 = cljs.core.next.call(null, seq__28422_31037__$1);
            var G__31045 = null;
            var G__31046 = 0;
            var G__31047 = 0;
            seq__28422_31027 = G__31044;
            chunk__28423_31028 = G__31045;
            count__28424_31029 = G__31046;
            i__28425_31030 = G__31047;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.g.apply(null, a__13070__auto__);
  };
  var g = function(var_args) {
    var args__13069__auto__ = null;
    if (arguments.length > 0) {
      var G__31048__i = 0, G__31048__a = new Array(arguments.length - 0);
      while (G__31048__i < G__31048__a.length) {
        G__31048__a[G__31048__i] = arguments[G__31048__i + 0];
        ++G__31048__i;
      }
      args__13069__auto__ = new cljs.core.IndexedSeq(G__31048__a, 0);
    }
    return g__delegate.call(this, args__13069__auto__);
  };
  g.cljs$lang$maxFixedArity = 0;
  g.cljs$lang$applyTo = function(arglist__31049) {
    var args__13069__auto__ = cljs.core.seq(arglist__31049);
    return g__delegate(args__13069__auto__);
  };
  g.cljs$core$IFn$_invoke$arity$variadic = g__delegate;
  return g;
}();
quiescent.dom.line = function() {
  var line__delegate = function(args__13069__auto__) {
    var a__13070__auto__ = [];
    a__13070__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__13069__auto__)));
    var seq__28430_31050 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__13069__auto__));
    var chunk__28431_31051 = null;
    var count__28432_31052 = 0;
    var i__28433_31053 = 0;
    while (true) {
      if (i__28433_31053 < count__28432_31052) {
        var arg__13071__auto___31054 = cljs.core._nth.call(null, chunk__28431_31051, i__28433_31053);
        a__13070__auto__.push(arg__13071__auto___31054);
        var G__31055 = seq__28430_31050;
        var G__31056 = chunk__28431_31051;
        var G__31057 = count__28432_31052;
        var G__31058 = i__28433_31053 + 1;
        seq__28430_31050 = G__31055;
        chunk__28431_31051 = G__31056;
        count__28432_31052 = G__31057;
        i__28433_31053 = G__31058;
        continue;
      } else {
        var temp__4126__auto___31059 = cljs.core.seq.call(null, seq__28430_31050);
        if (temp__4126__auto___31059) {
          var seq__28430_31060__$1 = temp__4126__auto___31059;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__28430_31060__$1)) {
            var c__8291__auto___31061 = cljs.core.chunk_first.call(null, seq__28430_31060__$1);
            var G__31062 = cljs.core.chunk_rest.call(null, seq__28430_31060__$1);
            var G__31063 = c__8291__auto___31061;
            var G__31064 = cljs.core.count.call(null, c__8291__auto___31061);
            var G__31065 = 0;
            seq__28430_31050 = G__31062;
            chunk__28431_31051 = G__31063;
            count__28432_31052 = G__31064;
            i__28433_31053 = G__31065;
            continue;
          } else {
            var arg__13071__auto___31066 = cljs.core.first.call(null, seq__28430_31060__$1);
            a__13070__auto__.push(arg__13071__auto___31066);
            var G__31067 = cljs.core.next.call(null, seq__28430_31060__$1);
            var G__31068 = null;
            var G__31069 = 0;
            var G__31070 = 0;
            seq__28430_31050 = G__31067;
            chunk__28431_31051 = G__31068;
            count__28432_31052 = G__31069;
            i__28433_31053 = G__31070;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.line.apply(null, a__13070__auto__);
  };
  var line = function(var_args) {
    var args__13069__auto__ = null;
    if (arguments.length > 0) {
      var G__31071__i = 0, G__31071__a = new Array(arguments.length - 0);
      while (G__31071__i < G__31071__a.length) {
        G__31071__a[G__31071__i] = arguments[G__31071__i + 0];
        ++G__31071__i;
      }
      args__13069__auto__ = new cljs.core.IndexedSeq(G__31071__a, 0);
    }
    return line__delegate.call(this, args__13069__auto__);
  };
  line.cljs$lang$maxFixedArity = 0;
  line.cljs$lang$applyTo = function(arglist__31072) {
    var args__13069__auto__ = cljs.core.seq(arglist__31072);
    return line__delegate(args__13069__auto__);
  };
  line.cljs$core$IFn$_invoke$arity$variadic = line__delegate;
  return line;
}();
quiescent.dom.path = function() {
  var path__delegate = function(args__13069__auto__) {
    var a__13070__auto__ = [];
    a__13070__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__13069__auto__)));
    var seq__28438_31073 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__13069__auto__));
    var chunk__28439_31074 = null;
    var count__28440_31075 = 0;
    var i__28441_31076 = 0;
    while (true) {
      if (i__28441_31076 < count__28440_31075) {
        var arg__13071__auto___31077 = cljs.core._nth.call(null, chunk__28439_31074, i__28441_31076);
        a__13070__auto__.push(arg__13071__auto___31077);
        var G__31078 = seq__28438_31073;
        var G__31079 = chunk__28439_31074;
        var G__31080 = count__28440_31075;
        var G__31081 = i__28441_31076 + 1;
        seq__28438_31073 = G__31078;
        chunk__28439_31074 = G__31079;
        count__28440_31075 = G__31080;
        i__28441_31076 = G__31081;
        continue;
      } else {
        var temp__4126__auto___31082 = cljs.core.seq.call(null, seq__28438_31073);
        if (temp__4126__auto___31082) {
          var seq__28438_31083__$1 = temp__4126__auto___31082;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__28438_31083__$1)) {
            var c__8291__auto___31084 = cljs.core.chunk_first.call(null, seq__28438_31083__$1);
            var G__31085 = cljs.core.chunk_rest.call(null, seq__28438_31083__$1);
            var G__31086 = c__8291__auto___31084;
            var G__31087 = cljs.core.count.call(null, c__8291__auto___31084);
            var G__31088 = 0;
            seq__28438_31073 = G__31085;
            chunk__28439_31074 = G__31086;
            count__28440_31075 = G__31087;
            i__28441_31076 = G__31088;
            continue;
          } else {
            var arg__13071__auto___31089 = cljs.core.first.call(null, seq__28438_31083__$1);
            a__13070__auto__.push(arg__13071__auto___31089);
            var G__31090 = cljs.core.next.call(null, seq__28438_31083__$1);
            var G__31091 = null;
            var G__31092 = 0;
            var G__31093 = 0;
            seq__28438_31073 = G__31090;
            chunk__28439_31074 = G__31091;
            count__28440_31075 = G__31092;
            i__28441_31076 = G__31093;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.path.apply(null, a__13070__auto__);
  };
  var path = function(var_args) {
    var args__13069__auto__ = null;
    if (arguments.length > 0) {
      var G__31094__i = 0, G__31094__a = new Array(arguments.length - 0);
      while (G__31094__i < G__31094__a.length) {
        G__31094__a[G__31094__i] = arguments[G__31094__i + 0];
        ++G__31094__i;
      }
      args__13069__auto__ = new cljs.core.IndexedSeq(G__31094__a, 0);
    }
    return path__delegate.call(this, args__13069__auto__);
  };
  path.cljs$lang$maxFixedArity = 0;
  path.cljs$lang$applyTo = function(arglist__31095) {
    var args__13069__auto__ = cljs.core.seq(arglist__31095);
    return path__delegate(args__13069__auto__);
  };
  path.cljs$core$IFn$_invoke$arity$variadic = path__delegate;
  return path;
}();
quiescent.dom.polygon = function() {
  var polygon__delegate = function(args__13069__auto__) {
    var a__13070__auto__ = [];
    a__13070__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__13069__auto__)));
    var seq__28446_31096 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__13069__auto__));
    var chunk__28447_31097 = null;
    var count__28448_31098 = 0;
    var i__28449_31099 = 0;
    while (true) {
      if (i__28449_31099 < count__28448_31098) {
        var arg__13071__auto___31100 = cljs.core._nth.call(null, chunk__28447_31097, i__28449_31099);
        a__13070__auto__.push(arg__13071__auto___31100);
        var G__31101 = seq__28446_31096;
        var G__31102 = chunk__28447_31097;
        var G__31103 = count__28448_31098;
        var G__31104 = i__28449_31099 + 1;
        seq__28446_31096 = G__31101;
        chunk__28447_31097 = G__31102;
        count__28448_31098 = G__31103;
        i__28449_31099 = G__31104;
        continue;
      } else {
        var temp__4126__auto___31105 = cljs.core.seq.call(null, seq__28446_31096);
        if (temp__4126__auto___31105) {
          var seq__28446_31106__$1 = temp__4126__auto___31105;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__28446_31106__$1)) {
            var c__8291__auto___31107 = cljs.core.chunk_first.call(null, seq__28446_31106__$1);
            var G__31108 = cljs.core.chunk_rest.call(null, seq__28446_31106__$1);
            var G__31109 = c__8291__auto___31107;
            var G__31110 = cljs.core.count.call(null, c__8291__auto___31107);
            var G__31111 = 0;
            seq__28446_31096 = G__31108;
            chunk__28447_31097 = G__31109;
            count__28448_31098 = G__31110;
            i__28449_31099 = G__31111;
            continue;
          } else {
            var arg__13071__auto___31112 = cljs.core.first.call(null, seq__28446_31106__$1);
            a__13070__auto__.push(arg__13071__auto___31112);
            var G__31113 = cljs.core.next.call(null, seq__28446_31106__$1);
            var G__31114 = null;
            var G__31115 = 0;
            var G__31116 = 0;
            seq__28446_31096 = G__31113;
            chunk__28447_31097 = G__31114;
            count__28448_31098 = G__31115;
            i__28449_31099 = G__31116;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.polygon.apply(null, a__13070__auto__);
  };
  var polygon = function(var_args) {
    var args__13069__auto__ = null;
    if (arguments.length > 0) {
      var G__31117__i = 0, G__31117__a = new Array(arguments.length - 0);
      while (G__31117__i < G__31117__a.length) {
        G__31117__a[G__31117__i] = arguments[G__31117__i + 0];
        ++G__31117__i;
      }
      args__13069__auto__ = new cljs.core.IndexedSeq(G__31117__a, 0);
    }
    return polygon__delegate.call(this, args__13069__auto__);
  };
  polygon.cljs$lang$maxFixedArity = 0;
  polygon.cljs$lang$applyTo = function(arglist__31118) {
    var args__13069__auto__ = cljs.core.seq(arglist__31118);
    return polygon__delegate(args__13069__auto__);
  };
  polygon.cljs$core$IFn$_invoke$arity$variadic = polygon__delegate;
  return polygon;
}();
quiescent.dom.polyline = function() {
  var polyline__delegate = function(args__13069__auto__) {
    var a__13070__auto__ = [];
    a__13070__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__13069__auto__)));
    var seq__28454_31119 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__13069__auto__));
    var chunk__28455_31120 = null;
    var count__28456_31121 = 0;
    var i__28457_31122 = 0;
    while (true) {
      if (i__28457_31122 < count__28456_31121) {
        var arg__13071__auto___31123 = cljs.core._nth.call(null, chunk__28455_31120, i__28457_31122);
        a__13070__auto__.push(arg__13071__auto___31123);
        var G__31124 = seq__28454_31119;
        var G__31125 = chunk__28455_31120;
        var G__31126 = count__28456_31121;
        var G__31127 = i__28457_31122 + 1;
        seq__28454_31119 = G__31124;
        chunk__28455_31120 = G__31125;
        count__28456_31121 = G__31126;
        i__28457_31122 = G__31127;
        continue;
      } else {
        var temp__4126__auto___31128 = cljs.core.seq.call(null, seq__28454_31119);
        if (temp__4126__auto___31128) {
          var seq__28454_31129__$1 = temp__4126__auto___31128;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__28454_31129__$1)) {
            var c__8291__auto___31130 = cljs.core.chunk_first.call(null, seq__28454_31129__$1);
            var G__31131 = cljs.core.chunk_rest.call(null, seq__28454_31129__$1);
            var G__31132 = c__8291__auto___31130;
            var G__31133 = cljs.core.count.call(null, c__8291__auto___31130);
            var G__31134 = 0;
            seq__28454_31119 = G__31131;
            chunk__28455_31120 = G__31132;
            count__28456_31121 = G__31133;
            i__28457_31122 = G__31134;
            continue;
          } else {
            var arg__13071__auto___31135 = cljs.core.first.call(null, seq__28454_31129__$1);
            a__13070__auto__.push(arg__13071__auto___31135);
            var G__31136 = cljs.core.next.call(null, seq__28454_31129__$1);
            var G__31137 = null;
            var G__31138 = 0;
            var G__31139 = 0;
            seq__28454_31119 = G__31136;
            chunk__28455_31120 = G__31137;
            count__28456_31121 = G__31138;
            i__28457_31122 = G__31139;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.polyline.apply(null, a__13070__auto__);
  };
  var polyline = function(var_args) {
    var args__13069__auto__ = null;
    if (arguments.length > 0) {
      var G__31140__i = 0, G__31140__a = new Array(arguments.length - 0);
      while (G__31140__i < G__31140__a.length) {
        G__31140__a[G__31140__i] = arguments[G__31140__i + 0];
        ++G__31140__i;
      }
      args__13069__auto__ = new cljs.core.IndexedSeq(G__31140__a, 0);
    }
    return polyline__delegate.call(this, args__13069__auto__);
  };
  polyline.cljs$lang$maxFixedArity = 0;
  polyline.cljs$lang$applyTo = function(arglist__31141) {
    var args__13069__auto__ = cljs.core.seq(arglist__31141);
    return polyline__delegate(args__13069__auto__);
  };
  polyline.cljs$core$IFn$_invoke$arity$variadic = polyline__delegate;
  return polyline;
}();
quiescent.dom.rect = function() {
  var rect__delegate = function(args__13069__auto__) {
    var a__13070__auto__ = [];
    a__13070__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__13069__auto__)));
    var seq__28462_31142 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__13069__auto__));
    var chunk__28463_31143 = null;
    var count__28464_31144 = 0;
    var i__28465_31145 = 0;
    while (true) {
      if (i__28465_31145 < count__28464_31144) {
        var arg__13071__auto___31146 = cljs.core._nth.call(null, chunk__28463_31143, i__28465_31145);
        a__13070__auto__.push(arg__13071__auto___31146);
        var G__31147 = seq__28462_31142;
        var G__31148 = chunk__28463_31143;
        var G__31149 = count__28464_31144;
        var G__31150 = i__28465_31145 + 1;
        seq__28462_31142 = G__31147;
        chunk__28463_31143 = G__31148;
        count__28464_31144 = G__31149;
        i__28465_31145 = G__31150;
        continue;
      } else {
        var temp__4126__auto___31151 = cljs.core.seq.call(null, seq__28462_31142);
        if (temp__4126__auto___31151) {
          var seq__28462_31152__$1 = temp__4126__auto___31151;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__28462_31152__$1)) {
            var c__8291__auto___31153 = cljs.core.chunk_first.call(null, seq__28462_31152__$1);
            var G__31154 = cljs.core.chunk_rest.call(null, seq__28462_31152__$1);
            var G__31155 = c__8291__auto___31153;
            var G__31156 = cljs.core.count.call(null, c__8291__auto___31153);
            var G__31157 = 0;
            seq__28462_31142 = G__31154;
            chunk__28463_31143 = G__31155;
            count__28464_31144 = G__31156;
            i__28465_31145 = G__31157;
            continue;
          } else {
            var arg__13071__auto___31158 = cljs.core.first.call(null, seq__28462_31152__$1);
            a__13070__auto__.push(arg__13071__auto___31158);
            var G__31159 = cljs.core.next.call(null, seq__28462_31152__$1);
            var G__31160 = null;
            var G__31161 = 0;
            var G__31162 = 0;
            seq__28462_31142 = G__31159;
            chunk__28463_31143 = G__31160;
            count__28464_31144 = G__31161;
            i__28465_31145 = G__31162;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.rect.apply(null, a__13070__auto__);
  };
  var rect = function(var_args) {
    var args__13069__auto__ = null;
    if (arguments.length > 0) {
      var G__31163__i = 0, G__31163__a = new Array(arguments.length - 0);
      while (G__31163__i < G__31163__a.length) {
        G__31163__a[G__31163__i] = arguments[G__31163__i + 0];
        ++G__31163__i;
      }
      args__13069__auto__ = new cljs.core.IndexedSeq(G__31163__a, 0);
    }
    return rect__delegate.call(this, args__13069__auto__);
  };
  rect.cljs$lang$maxFixedArity = 0;
  rect.cljs$lang$applyTo = function(arglist__31164) {
    var args__13069__auto__ = cljs.core.seq(arglist__31164);
    return rect__delegate(args__13069__auto__);
  };
  rect.cljs$core$IFn$_invoke$arity$variadic = rect__delegate;
  return rect;
}();
quiescent.dom.svg = function() {
  var svg__delegate = function(args__13069__auto__) {
    var a__13070__auto__ = [];
    a__13070__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__13069__auto__)));
    var seq__28470_31165 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__13069__auto__));
    var chunk__28471_31166 = null;
    var count__28472_31167 = 0;
    var i__28473_31168 = 0;
    while (true) {
      if (i__28473_31168 < count__28472_31167) {
        var arg__13071__auto___31169 = cljs.core._nth.call(null, chunk__28471_31166, i__28473_31168);
        a__13070__auto__.push(arg__13071__auto___31169);
        var G__31170 = seq__28470_31165;
        var G__31171 = chunk__28471_31166;
        var G__31172 = count__28472_31167;
        var G__31173 = i__28473_31168 + 1;
        seq__28470_31165 = G__31170;
        chunk__28471_31166 = G__31171;
        count__28472_31167 = G__31172;
        i__28473_31168 = G__31173;
        continue;
      } else {
        var temp__4126__auto___31174 = cljs.core.seq.call(null, seq__28470_31165);
        if (temp__4126__auto___31174) {
          var seq__28470_31175__$1 = temp__4126__auto___31174;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__28470_31175__$1)) {
            var c__8291__auto___31176 = cljs.core.chunk_first.call(null, seq__28470_31175__$1);
            var G__31177 = cljs.core.chunk_rest.call(null, seq__28470_31175__$1);
            var G__31178 = c__8291__auto___31176;
            var G__31179 = cljs.core.count.call(null, c__8291__auto___31176);
            var G__31180 = 0;
            seq__28470_31165 = G__31177;
            chunk__28471_31166 = G__31178;
            count__28472_31167 = G__31179;
            i__28473_31168 = G__31180;
            continue;
          } else {
            var arg__13071__auto___31181 = cljs.core.first.call(null, seq__28470_31175__$1);
            a__13070__auto__.push(arg__13071__auto___31181);
            var G__31182 = cljs.core.next.call(null, seq__28470_31175__$1);
            var G__31183 = null;
            var G__31184 = 0;
            var G__31185 = 0;
            seq__28470_31165 = G__31182;
            chunk__28471_31166 = G__31183;
            count__28472_31167 = G__31184;
            i__28473_31168 = G__31185;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.svg.apply(null, a__13070__auto__);
  };
  var svg = function(var_args) {
    var args__13069__auto__ = null;
    if (arguments.length > 0) {
      var G__31186__i = 0, G__31186__a = new Array(arguments.length - 0);
      while (G__31186__i < G__31186__a.length) {
        G__31186__a[G__31186__i] = arguments[G__31186__i + 0];
        ++G__31186__i;
      }
      args__13069__auto__ = new cljs.core.IndexedSeq(G__31186__a, 0);
    }
    return svg__delegate.call(this, args__13069__auto__);
  };
  svg.cljs$lang$maxFixedArity = 0;
  svg.cljs$lang$applyTo = function(arglist__31187) {
    var args__13069__auto__ = cljs.core.seq(arglist__31187);
    return svg__delegate(args__13069__auto__);
  };
  svg.cljs$core$IFn$_invoke$arity$variadic = svg__delegate;
  return svg;
}();
quiescent.dom.text = function() {
  var text__delegate = function(args__13069__auto__) {
    var a__13070__auto__ = [];
    a__13070__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__13069__auto__)));
    var seq__27782_31188 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__13069__auto__));
    var chunk__27783_31189 = null;
    var count__27784_31190 = 0;
    var i__27785_31191 = 0;
    while (true) {
      if (i__27785_31191 < count__27784_31190) {
        var arg__13071__auto___31192 = cljs.core._nth.call(null, chunk__27783_31189, i__27785_31191);
        a__13070__auto__.push(arg__13071__auto___31192);
        var G__31193 = seq__27782_31188;
        var G__31194 = chunk__27783_31189;
        var G__31195 = count__27784_31190;
        var G__31196 = i__27785_31191 + 1;
        seq__27782_31188 = G__31193;
        chunk__27783_31189 = G__31194;
        count__27784_31190 = G__31195;
        i__27785_31191 = G__31196;
        continue;
      } else {
        var temp__4126__auto___31197 = cljs.core.seq.call(null, seq__27782_31188);
        if (temp__4126__auto___31197) {
          var seq__27782_31198__$1 = temp__4126__auto___31197;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__27782_31198__$1)) {
            var c__8291__auto___31199 = cljs.core.chunk_first.call(null, seq__27782_31198__$1);
            var G__31200 = cljs.core.chunk_rest.call(null, seq__27782_31198__$1);
            var G__31201 = c__8291__auto___31199;
            var G__31202 = cljs.core.count.call(null, c__8291__auto___31199);
            var G__31203 = 0;
            seq__27782_31188 = G__31200;
            chunk__27783_31189 = G__31201;
            count__27784_31190 = G__31202;
            i__27785_31191 = G__31203;
            continue;
          } else {
            var arg__13071__auto___31204 = cljs.core.first.call(null, seq__27782_31198__$1);
            a__13070__auto__.push(arg__13071__auto___31204);
            var G__31205 = cljs.core.next.call(null, seq__27782_31198__$1);
            var G__31206 = null;
            var G__31207 = 0;
            var G__31208 = 0;
            seq__27782_31188 = G__31205;
            chunk__27783_31189 = G__31206;
            count__27784_31190 = G__31207;
            i__27785_31191 = G__31208;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.text.apply(null, a__13070__auto__);
  };
  var text = function(var_args) {
    var args__13069__auto__ = null;
    if (arguments.length > 0) {
      var G__31209__i = 0, G__31209__a = new Array(arguments.length - 0);
      while (G__31209__i < G__31209__a.length) {
        G__31209__a[G__31209__i] = arguments[G__31209__i + 0];
        ++G__31209__i;
      }
      args__13069__auto__ = new cljs.core.IndexedSeq(G__31209__a, 0);
    }
    return text__delegate.call(this, args__13069__auto__);
  };
  text.cljs$lang$maxFixedArity = 0;
  text.cljs$lang$applyTo = function(arglist__31210) {
    var args__13069__auto__ = cljs.core.seq(arglist__31210);
    return text__delegate(args__13069__auto__);
  };
  text.cljs$core$IFn$_invoke$arity$variadic = text__delegate;
  return text;
}();
quiescent.dom.defined_tags = cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "thead", "thead", -291875296), new cljs.core.Keyword(null, "path", "path", -188191168), new cljs.core.Keyword(null, "del", "del", 574975584), new cljs.core.Keyword(null, "fieldset", "fieldset", -1949770816), new cljs.core.Keyword(null, "q", "q", 689001697), new cljs.core.Keyword(null, "figure", "figure", -561394079), new cljs.core.Keyword(null, "aside", "aside", 1414397537), new cljs.core.Keyword(null, 
"figcaption", "figcaption", -1790122047), new cljs.core.Keyword(null, "video", "video", 156888130), new cljs.core.Keyword(null, "address", "address", 559499426), new cljs.core.Keyword(null, "caption", "caption", -855383902), new cljs.core.Keyword(null, "bdi", "bdi", -1323025886), new cljs.core.Keyword(null, "rp", "rp", 2006698083), new cljs.core.Keyword(null, "hr", "hr", 1377740067), new cljs.core.Keyword(null, "dd", "dd", -1340437629), new cljs.core.Keyword(null, "meta", "meta", 1499536964), new cljs.core.Keyword(null, 
"tbody", "tbody", -80678300), new cljs.core.Keyword(null, "table", "table", -564943036), new cljs.core.Keyword(null, "ul", "ul", -1349521403), new cljs.core.Keyword(null, "pre", "pre", 2118456869), new cljs.core.Keyword(null, "sup", "sup", -2039492346), new cljs.core.Keyword(null, "script", "script", -1304443801), new cljs.core.Keyword(null, "big", "big", 903550151), new cljs.core.Keyword(null, "button", "button", 1456579943), new cljs.core.Keyword(null, "dfn", "dfn", 241908167), new cljs.core.Keyword(null, 
"sub", "sub", -2093760025), new cljs.core.Keyword(null, "mark", "mark", -373816345), new cljs.core.Keyword(null, "wbr", "wbr", 228661800), new cljs.core.Keyword(null, "strong", "strong", 269529E3), new cljs.core.Keyword(null, "td", "td", 1479933353), new cljs.core.Keyword(null, "li", "li", 723558921), new cljs.core.Keyword(null, "dt", "dt", -368444759), new cljs.core.Keyword(null, "section", "section", -300141526), new cljs.core.Keyword(null, "th", "th", -545608566), new cljs.core.Keyword(null, "time", 
"time", 1385887882), new cljs.core.Keyword(null, "optgroup", "optgroup", 1738282218), new cljs.core.Keyword(null, "iframe", "iframe", 884422026), new cljs.core.Keyword(null, "tr", "tr", -1424774646), new cljs.core.Keyword(null, "circle", "circle", 1903212362), new cljs.core.Keyword(null, "article", "article", -21685045), new cljs.core.Keyword(null, "legend", "legend", -1027192245), new cljs.core.Keyword(null, "em", "em", 707813035), new cljs.core.Keyword(null, "kbd", "kbd", 316156875), new cljs.core.Keyword(null, 
"abbr", "abbr", 2088591884), new cljs.core.Keyword(null, "source", "source", -433931539), new cljs.core.Keyword(null, "output", "output", -1105869043), new cljs.core.Keyword(null, "ins", "ins", -1021983570), new cljs.core.Keyword(null, "footer", "footer", 1606445390), new cljs.core.Keyword(null, "header", "header", 119441134), new cljs.core.Keyword(null, "datalist", "datalist", -1235043474), new cljs.core.Keyword(null, "tfoot", "tfoot", -701599890), new cljs.core.Keyword(null, "s", "s", 1705939918), 
new cljs.core.Keyword(null, "h5", "h5", -1829156625), new cljs.core.Keyword(null, "canvas", "canvas", -1798817489), new cljs.core.Keyword(null, "param", "param", 2013631823), new cljs.core.Keyword(null, "title", "title", 636505583), new cljs.core.Keyword(null, "small", "small", 2133478704), new cljs.core.Keyword(null, "style", "style", -496642736), new cljs.core.Keyword(null, "textarea", "textarea", -650375824), new cljs.core.Keyword(null, "div", "div", 1057191632), new cljs.core.Keyword(null, "option", 
"option", 65132272), new cljs.core.Keyword(null, "summary", "summary", 380847952), new cljs.core.Keyword(null, "samp", "samp", 1506141136), new cljs.core.Keyword(null, "h4", "h4", 2004862993), new cljs.core.Keyword(null, "head", "head", -771383919), new cljs.core.Keyword(null, "g", "g", 1738089905), new cljs.core.Keyword(null, "ol", "ol", 932524051), new cljs.core.Keyword(null, "details", "details", 1956795411), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "var", 
"var", -769682797), new cljs.core.Keyword(null, "h6", "h6", 557293780), new cljs.core.Keyword(null, "link", "link", -1769163468), new cljs.core.Keyword(null, "col", "col", -1959363084), new cljs.core.Keyword(null, "label", "label", 1718410804), new cljs.core.Keyword(null, "rt", "rt", 623480692), new cljs.core.Keyword(null, "colgroup", "colgroup", 651118645), new cljs.core.Keyword(null, "meter", "meter", -187641611), new cljs.core.Keyword(null, "svg", "svg", 856789142), new cljs.core.Keyword(null, 
"code", "code", 1586293142), new cljs.core.Keyword(null, "bdo", "bdo", -2131148202), new cljs.core.Keyword(null, "b", "b", 1482224470), new cljs.core.Keyword(null, "noscript", "noscript", -704777289), new cljs.core.Keyword(null, "h2", "h2", -372662728), new cljs.core.Keyword(null, "area", "area", 472007256), new cljs.core.Keyword(null, "br", "br", 934104792), new cljs.core.Keyword(null, "form", "form", -1624062471), new cljs.core.Keyword(null, "audio", "audio", 1819127321), new cljs.core.Keyword(null, 
"input", "input", 556931961), new cljs.core.Keyword(null, "menuitem", "menuitem", 1004047353), new cljs.core.Keyword(null, "base", "base", 185279322), new cljs.core.Keyword(null, "h1", "h1", -1896887462), new cljs.core.Keyword(null, "progress", "progress", 244323547), new cljs.core.Keyword(null, "main", "main", -2117802661), new cljs.core.Keyword(null, "embed", "embed", -1354913349), new cljs.core.Keyword(null, "h3", "h3", 2067611163), new cljs.core.Keyword(null, "body", "body", -2049205669), new cljs.core.Keyword(null, 
"keygen", "keygen", -571693253), new cljs.core.Keyword(null, "polyline", "polyline", -1731551044), new cljs.core.Keyword(null, "cite", "cite", 1909439996), new cljs.core.Keyword(null, "rect", "rect", -108902628), new cljs.core.Keyword(null, "p", "p", 151049309), new cljs.core.Keyword(null, "nav", "nav", 719540477), new cljs.core.Keyword(null, "ruby", "ruby", 2000737661), new cljs.core.Keyword(null, "map", "map", 1371690461), new cljs.core.Keyword(null, "object", "object", 1474613949), new cljs.core.Keyword(null, 
"i", "i", -1386841315), new cljs.core.Keyword(null, "menu", "menu", 352255198), new cljs.core.Keyword(null, "blockquote", "blockquote", 372264190), new cljs.core.Keyword(null, "img", "img", 1442687358), new cljs.core.Keyword(null, "a", "a", -2123407586), new cljs.core.Keyword(null, "dl", "dl", -2140151713), new cljs.core.Keyword(null, "select", "select", 1147833503), new cljs.core.Keyword(null, "polygon", "polygon", 837053759), new cljs.core.Keyword(null, "html", "html", -998796897), new cljs.core.Keyword(null, 
"text", "text", -1790561697), new cljs.core.Keyword(null, "span", "span", 1394872991), new cljs.core.Keyword(null, "track", "track", 195787487), new cljs.core.Keyword(null, "data", "data", -232669377), new cljs.core.Keyword(null, "u", "u", -1156634785)], [quiescent.dom.thead, quiescent.dom.path, quiescent.dom.del, quiescent.dom.fieldset, quiescent.dom.q, quiescent.dom.figure, quiescent.dom.aside, quiescent.dom.figcaption, quiescent.dom.video, quiescent.dom.address, quiescent.dom.caption, quiescent.dom.bdi, 
quiescent.dom.rp, quiescent.dom.hr, quiescent.dom.dd, quiescent.dom.meta, quiescent.dom.tbody, quiescent.dom.table, quiescent.dom.ul, quiescent.dom.pre, quiescent.dom.sup, quiescent.dom.script, quiescent.dom.big, quiescent.dom.button, quiescent.dom.dfn, quiescent.dom.sub, quiescent.dom.mark, quiescent.dom.wbr, quiescent.dom.strong, quiescent.dom.td, quiescent.dom.li, quiescent.dom.dt, quiescent.dom.section, quiescent.dom.th, quiescent.dom.time, quiescent.dom.optgroup, quiescent.dom.iframe, quiescent.dom.tr, 
quiescent.dom.circle, quiescent.dom.article, quiescent.dom.legend, quiescent.dom.em, quiescent.dom.kbd, quiescent.dom.abbr, quiescent.dom.source, quiescent.dom.output, quiescent.dom.ins, quiescent.dom.footer, quiescent.dom.header, quiescent.dom.datalist, quiescent.dom.tfoot, quiescent.dom.s, quiescent.dom.h5, quiescent.dom.canvas, quiescent.dom.param, quiescent.dom.title, quiescent.dom.small, quiescent.dom.style, quiescent.dom.textarea, quiescent.dom.div, quiescent.dom.option, quiescent.dom.summary, 
quiescent.dom.samp, quiescent.dom.h4, quiescent.dom.head, quiescent.dom.g, quiescent.dom.ol, quiescent.dom.details, quiescent.dom.line, quiescent.dom.var$, quiescent.dom.h6, quiescent.dom.link, quiescent.dom.col, quiescent.dom.label, quiescent.dom.rt, quiescent.dom.colgroup, quiescent.dom.meter, quiescent.dom.svg, quiescent.dom.code, quiescent.dom.bdo, quiescent.dom.b, quiescent.dom.noscript, quiescent.dom.h2, quiescent.dom.area, quiescent.dom.br, quiescent.dom.form, quiescent.dom.audio, quiescent.dom.input, 
quiescent.dom.menuitem, quiescent.dom.base, quiescent.dom.h1, quiescent.dom.progress, quiescent.dom.main, quiescent.dom.embed, quiescent.dom.h3, quiescent.dom.body, quiescent.dom.keygen, quiescent.dom.polyline, quiescent.dom.cite, quiescent.dom.rect, quiescent.dom.p, quiescent.dom.nav, quiescent.dom.ruby, quiescent.dom.map, quiescent.dom.object, quiescent.dom.i, quiescent.dom.menu, quiescent.dom.blockquote, quiescent.dom.img, quiescent.dom.a, quiescent.dom.dl, quiescent.dom.select, quiescent.dom.polygon, 
quiescent.dom.html, quiescent.dom.text, quiescent.dom.span, quiescent.dom.track, quiescent.dom.data, quiescent.dom.u]);
goog.provide("clojure.string");
goog.require("cljs.core");
goog.require("goog.string.StringBuffer");
goog.require("goog.string");
clojure.string.seq_reverse = function seq_reverse(coll) {
  return cljs.core.reduce.call(null, cljs.core.conj, cljs.core.List.EMPTY, coll);
};
clojure.string.re_surrogate_pair = new RegExp("([\\uD800-\\uDBFF])([\\uDC00-\\uDFFF])", "g");
clojure.string.reverse = function reverse(s) {
  return s.replace(clojure.string.re_surrogate_pair, "$2$1").split("").reverse().join("");
};
clojure.string.replace = function replace(s, match, replacement) {
  if (typeof match === "string") {
    return s.replace(new RegExp(goog.string.regExpEscape(match), "g"), replacement);
  } else {
    if (cljs.core.truth_(match.hasOwnProperty("source"))) {
      return s.replace(new RegExp(match.source, "g"), replacement);
    } else {
      throw[cljs.core.str("Invalid match arg: "), cljs.core.str(match)].join("");
    }
  }
};
clojure.string.replace_first = function replace_first(s, match, replacement) {
  return s.replace(match, replacement);
};
clojure.string.join = function() {
  var join = null;
  var join__1 = function(coll) {
    var sb = new goog.string.StringBuffer;
    var coll__$1 = cljs.core.seq.call(null, coll);
    while (true) {
      if (coll__$1) {
        var G__31213 = sb.append([cljs.core.str(cljs.core.first.call(null, coll__$1))].join(""));
        var G__31214 = cljs.core.next.call(null, coll__$1);
        sb = G__31213;
        coll__$1 = G__31214;
        continue;
      } else {
        return sb.toString();
      }
      break;
    }
  };
  var join__2 = function(separator, coll) {
    var sb = new goog.string.StringBuffer;
    var coll__$1 = cljs.core.seq.call(null, coll);
    while (true) {
      if (coll__$1) {
        sb.append([cljs.core.str(cljs.core.first.call(null, coll__$1))].join(""));
        var coll__$2 = cljs.core.next.call(null, coll__$1);
        if (coll__$2 == null) {
        } else {
          sb.append(separator);
        }
        var G__31215 = sb;
        var G__31216 = coll__$2;
        sb = G__31215;
        coll__$1 = G__31216;
        continue;
      } else {
        return sb.toString();
      }
      break;
    }
  };
  join = function(separator, coll) {
    switch(arguments.length) {
      case 1:
        return join__1.call(this, separator);
      case 2:
        return join__2.call(this, separator, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  join.cljs$core$IFn$_invoke$arity$1 = join__1;
  join.cljs$core$IFn$_invoke$arity$2 = join__2;
  return join;
}();
clojure.string.upper_case = function upper_case(s) {
  return s.toUpperCase();
};
clojure.string.lower_case = function lower_case(s) {
  return s.toLowerCase();
};
clojure.string.capitalize = function capitalize(s) {
  if (cljs.core.count.call(null, s) < 2) {
    return clojure.string.upper_case.call(null, s);
  } else {
    return[cljs.core.str(clojure.string.upper_case.call(null, cljs.core.subs.call(null, s, 0, 1))), cljs.core.str(clojure.string.lower_case.call(null, cljs.core.subs.call(null, s, 1)))].join("");
  }
};
clojure.string.pop_last_while_empty = function pop_last_while_empty(v) {
  var v__$1 = v;
  while (true) {
    if (cljs.core._EQ_.call(null, "", cljs.core.peek.call(null, v__$1))) {
      var G__31217 = cljs.core.pop.call(null, v__$1);
      v__$1 = G__31217;
      continue;
    } else {
      return v__$1;
    }
    break;
  }
};
clojure.string.discard_trailing_if_needed = function discard_trailing_if_needed(limit, v) {
  if (cljs.core._EQ_.call(null, 0, limit)) {
    return clojure.string.pop_last_while_empty.call(null, v);
  } else {
    return v;
  }
};
clojure.string.split_with_empty_regex = function split_with_empty_regex(s, limit) {
  if (limit <= 0 || limit >= 2 + cljs.core.count.call(null, s)) {
    return cljs.core.conj.call(null, cljs.core.vec.call(null, cljs.core.cons.call(null, "", cljs.core.map.call(null, cljs.core.str, cljs.core.seq.call(null, s)))), "");
  } else {
    var pred__31221 = cljs.core._EQ_;
    var expr__31222 = limit;
    if (cljs.core.truth_(pred__31221.call(null, 1, expr__31222))) {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [s], null);
    } else {
      if (cljs.core.truth_(pred__31221.call(null, 2, expr__31222))) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["", s], null);
      } else {
        var c = limit - 2;
        return cljs.core.conj.call(null, cljs.core.vec.call(null, cljs.core.cons.call(null, "", cljs.core.subvec.call(null, cljs.core.vec.call(null, cljs.core.map.call(null, cljs.core.str, cljs.core.seq.call(null, s))), 0, c))), cljs.core.subs.call(null, s, c));
      }
    }
  }
};
clojure.string.split = function() {
  var split = null;
  var split__2 = function(s, re) {
    return split.call(null, s, re, 0);
  };
  var split__3 = function(s, re, limit) {
    return clojure.string.discard_trailing_if_needed.call(null, limit, cljs.core._EQ_.call(null, [cljs.core.str(re)].join(""), "/(?:)/") ? clojure.string.split_with_empty_regex.call(null, s, limit) : limit < 1 ? cljs.core.vec.call(null, [cljs.core.str(s)].join("").split(re)) : function() {
      var s__$1 = s;
      var limit__$1 = limit;
      var parts = cljs.core.PersistentVector.EMPTY;
      while (true) {
        if (cljs.core._EQ_.call(null, limit__$1, 1)) {
          return cljs.core.conj.call(null, parts, s__$1);
        } else {
          var temp__4124__auto__ = cljs.core.re_find.call(null, re, s__$1);
          if (cljs.core.truth_(temp__4124__auto__)) {
            var m = temp__4124__auto__;
            var index = s__$1.indexOf(m);
            var G__31224 = s__$1.substring(index + cljs.core.count.call(null, m));
            var G__31225 = limit__$1 - 1;
            var G__31226 = cljs.core.conj.call(null, parts, s__$1.substring(0, index));
            s__$1 = G__31224;
            limit__$1 = G__31225;
            parts = G__31226;
            continue;
          } else {
            return cljs.core.conj.call(null, parts, s__$1);
          }
        }
        break;
      }
    }());
  };
  split = function(s, re, limit) {
    switch(arguments.length) {
      case 2:
        return split__2.call(this, s, re);
      case 3:
        return split__3.call(this, s, re, limit);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  split.cljs$core$IFn$_invoke$arity$2 = split__2;
  split.cljs$core$IFn$_invoke$arity$3 = split__3;
  return split;
}();
clojure.string.split_lines = function split_lines(s) {
  return clojure.string.split.call(null, s, /\n|\r\n/);
};
clojure.string.trim = function trim(s) {
  return goog.string.trim(s);
};
clojure.string.triml = function triml(s) {
  return goog.string.trimLeft(s);
};
clojure.string.trimr = function trimr(s) {
  return goog.string.trimRight(s);
};
clojure.string.trim_newline = function trim_newline(s) {
  var index = s.length;
  while (true) {
    if (index === 0) {
      return "";
    } else {
      var ch = cljs.core.get.call(null, s, index - 1);
      if (cljs.core._EQ_.call(null, ch, "\n") || cljs.core._EQ_.call(null, ch, "\r")) {
        var G__31227 = index - 1;
        index = G__31227;
        continue;
      } else {
        return s.substring(0, index);
      }
    }
    break;
  }
};
clojure.string.blank_QMARK_ = function blank_QMARK_(s) {
  return goog.string.isEmptySafe(s);
};
clojure.string.escape = function escape__$1(s, cmap) {
  var buffer = new goog.string.StringBuffer;
  var length = s.length;
  var index = 0;
  while (true) {
    if (cljs.core._EQ_.call(null, length, index)) {
      return buffer.toString();
    } else {
      var ch = s.charAt(index);
      var temp__4124__auto___31228 = cljs.core.get.call(null, cmap, ch);
      if (cljs.core.truth_(temp__4124__auto___31228)) {
        var replacement_31229 = temp__4124__auto___31228;
        buffer.append([cljs.core.str(replacement_31229)].join(""));
      } else {
        buffer.append(ch);
      }
      var G__31230 = index + 1;
      index = G__31230;
      continue;
    }
    break;
  }
};
goog.provide("cljs.reader");
goog.require("cljs.core");
goog.require("goog.string.StringBuffer");
goog.require("goog.string");
cljs.reader.PushbackReader = function() {
  var obj27409 = {};
  return obj27409;
}();
cljs.reader.read_char = function read_char(reader) {
  if (function() {
    var and__7492__auto__ = reader;
    if (and__7492__auto__) {
      return reader.cljs$reader$PushbackReader$read_char$arity$1;
    } else {
      return and__7492__auto__;
    }
  }()) {
    return reader.cljs$reader$PushbackReader$read_char$arity$1(reader);
  } else {
    var x__8148__auto__ = reader == null ? null : reader;
    return function() {
      var or__7504__auto__ = cljs.reader.read_char[goog.typeOf(x__8148__auto__)];
      if (or__7504__auto__) {
        return or__7504__auto__;
      } else {
        var or__7504__auto____$1 = cljs.reader.read_char["_"];
        if (or__7504__auto____$1) {
          return or__7504__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "PushbackReader.read-char", reader);
        }
      }
    }().call(null, reader);
  }
};
cljs.reader.unread = function unread(reader, ch) {
  if (function() {
    var and__7492__auto__ = reader;
    if (and__7492__auto__) {
      return reader.cljs$reader$PushbackReader$unread$arity$2;
    } else {
      return and__7492__auto__;
    }
  }()) {
    return reader.cljs$reader$PushbackReader$unread$arity$2(reader, ch);
  } else {
    var x__8148__auto__ = reader == null ? null : reader;
    return function() {
      var or__7504__auto__ = cljs.reader.unread[goog.typeOf(x__8148__auto__)];
      if (or__7504__auto__) {
        return or__7504__auto__;
      } else {
        var or__7504__auto____$1 = cljs.reader.unread["_"];
        if (or__7504__auto____$1) {
          return or__7504__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "PushbackReader.unread", reader);
        }
      }
    }().call(null, reader, ch);
  }
};
cljs.reader.StringPushbackReader = function(s, buffer, idx) {
  this.s = s;
  this.buffer = buffer;
  this.idx = idx;
};
cljs.reader.StringPushbackReader.prototype.cljs$reader$PushbackReader$ = true;
cljs.reader.StringPushbackReader.prototype.cljs$reader$PushbackReader$read_char$arity$1 = function(reader) {
  var self__ = this;
  var reader__$1 = this;
  if (self__.buffer.length === 0) {
    self__.idx = self__.idx + 1;
    return self__.s[self__.idx];
  } else {
    return self__.buffer.pop();
  }
};
cljs.reader.StringPushbackReader.prototype.cljs$reader$PushbackReader$unread$arity$2 = function(reader, ch) {
  var self__ = this;
  var reader__$1 = this;
  return self__.buffer.push(ch);
};
cljs.reader.StringPushbackReader.cljs$lang$type = true;
cljs.reader.StringPushbackReader.cljs$lang$ctorStr = "cljs.reader/StringPushbackReader";
cljs.reader.StringPushbackReader.cljs$lang$ctorPrWriter = function(this__8091__auto__, writer__8092__auto__, opt__8093__auto__) {
  return cljs.core._write.call(null, writer__8092__auto__, "cljs.reader/StringPushbackReader");
};
cljs.reader.__GT_StringPushbackReader = function __GT_StringPushbackReader(s, buffer, idx) {
  return new cljs.reader.StringPushbackReader(s, buffer, idx);
};
cljs.reader.push_back_reader = function push_back_reader(s) {
  return new cljs.reader.StringPushbackReader(s, [], -1);
};
cljs.reader.whitespace_QMARK_ = function whitespace_QMARK_(ch) {
  var or__7504__auto__ = goog.string.isBreakingWhitespace(ch);
  if (cljs.core.truth_(or__7504__auto__)) {
    return or__7504__auto__;
  } else {
    return "," === ch;
  }
};
cljs.reader.numeric_QMARK_ = function numeric_QMARK_(ch) {
  return goog.string.isNumeric(ch);
};
cljs.reader.comment_prefix_QMARK_ = function comment_prefix_QMARK_(ch) {
  return ";" === ch;
};
cljs.reader.number_literal_QMARK_ = function number_literal_QMARK_(reader, initch) {
  return cljs.reader.numeric_QMARK_.call(null, initch) || ("+" === initch || "-" === initch) && cljs.reader.numeric_QMARK_.call(null, function() {
    var next_ch = cljs.reader.read_char.call(null, reader);
    cljs.reader.unread.call(null, reader, next_ch);
    return next_ch;
  }());
};
cljs.reader.reader_error = function() {
  var reader_error__delegate = function(rdr, msg) {
    throw new Error(cljs.core.apply.call(null, cljs.core.str, msg));
  };
  var reader_error = function(rdr, var_args) {
    var msg = null;
    if (arguments.length > 1) {
      var G__27410__i = 0, G__27410__a = new Array(arguments.length - 1);
      while (G__27410__i < G__27410__a.length) {
        G__27410__a[G__27410__i] = arguments[G__27410__i + 1];
        ++G__27410__i;
      }
      msg = new cljs.core.IndexedSeq(G__27410__a, 0);
    }
    return reader_error__delegate.call(this, rdr, msg);
  };
  reader_error.cljs$lang$maxFixedArity = 1;
  reader_error.cljs$lang$applyTo = function(arglist__27411) {
    var rdr = cljs.core.first(arglist__27411);
    var msg = cljs.core.rest(arglist__27411);
    return reader_error__delegate(rdr, msg);
  };
  reader_error.cljs$core$IFn$_invoke$arity$variadic = reader_error__delegate;
  return reader_error;
}();
cljs.reader.macro_terminating_QMARK_ = function macro_terminating_QMARK_(ch) {
  var and__7492__auto__ = !(ch === "#");
  if (and__7492__auto__) {
    var and__7492__auto____$1 = !(ch === "'");
    if (and__7492__auto____$1) {
      var and__7492__auto____$2 = !(ch === ":");
      if (and__7492__auto____$2) {
        return cljs.reader.macros.call(null, ch);
      } else {
        return and__7492__auto____$2;
      }
    } else {
      return and__7492__auto____$1;
    }
  } else {
    return and__7492__auto__;
  }
};
cljs.reader.read_token = function read_token(rdr, initch) {
  var sb = new goog.string.StringBuffer(initch);
  var ch = cljs.reader.read_char.call(null, rdr);
  while (true) {
    if (ch == null || cljs.reader.whitespace_QMARK_.call(null, ch) || cljs.reader.macro_terminating_QMARK_.call(null, ch)) {
      cljs.reader.unread.call(null, rdr, ch);
      return sb.toString();
    } else {
      var G__27412 = function() {
        sb.append(ch);
        return sb;
      }();
      var G__27413 = cljs.reader.read_char.call(null, rdr);
      sb = G__27412;
      ch = G__27413;
      continue;
    }
    break;
  }
};
cljs.reader.skip_line = function skip_line(reader, _) {
  while (true) {
    var ch = cljs.reader.read_char.call(null, reader);
    if (ch === "\n" || ch === "\r" || ch == null) {
      return reader;
    } else {
      continue;
    }
    break;
  }
};
cljs.reader.int_pattern = cljs.core.re_pattern.call(null, "^([-+]?)(?:(0)|([1-9][0-9]*)|0[xX]([0-9A-Fa-f]+)|0([0-7]+)|([1-9][0-9]?)[rR]([0-9A-Za-z]+))(N)?$");
cljs.reader.ratio_pattern = cljs.core.re_pattern.call(null, "^([-+]?[0-9]+)/([0-9]+)$");
cljs.reader.float_pattern = cljs.core.re_pattern.call(null, "^([-+]?[0-9]+(\\.[0-9]*)?([eE][-+]?[0-9]+)?)(M)?$");
cljs.reader.symbol_pattern = cljs.core.re_pattern.call(null, "^[:]?([^0-9/].*/)?([^0-9/][^/]*)$");
cljs.reader.re_matches_STAR_ = function re_matches_STAR_(re, s) {
  var matches = re.exec(s);
  if (!(matches == null) && matches[0] === s) {
    if (matches.length === 1) {
      return matches[0];
    } else {
      return matches;
    }
  } else {
    return null;
  }
};
cljs.reader.match_int = function match_int(s) {
  var groups = cljs.reader.re_matches_STAR_.call(null, cljs.reader.int_pattern, s);
  var ie8_fix = groups[2];
  var zero = cljs.core._EQ_.call(null, ie8_fix, "") ? null : ie8_fix;
  if (!(zero == null)) {
    return 0;
  } else {
    var a = cljs.core.truth_(groups[3]) ? [groups[3], 10] : cljs.core.truth_(groups[4]) ? [groups[4], 16] : cljs.core.truth_(groups[5]) ? [groups[5], 8] : cljs.core.truth_(groups[6]) ? [groups[7], parseInt(groups[6], 10)] : [null, null];
    var n = a[0];
    var radix = a[1];
    if (n == null) {
      return null;
    } else {
      var parsed = parseInt(n, radix);
      if ("-" === groups[1]) {
        return-parsed;
      } else {
        return parsed;
      }
    }
  }
};
cljs.reader.match_ratio = function match_ratio(s) {
  var groups = cljs.reader.re_matches_STAR_.call(null, cljs.reader.ratio_pattern, s);
  var numinator = groups[1];
  var denominator = groups[2];
  return parseInt(numinator, 10) / parseInt(denominator, 10);
};
cljs.reader.match_float = function match_float(s) {
  return parseFloat(s);
};
cljs.reader.match_number = function match_number(s) {
  if (cljs.core.truth_(cljs.reader.re_matches_STAR_.call(null, cljs.reader.int_pattern, s))) {
    return cljs.reader.match_int.call(null, s);
  } else {
    if (cljs.core.truth_(cljs.reader.re_matches_STAR_.call(null, cljs.reader.ratio_pattern, s))) {
      return cljs.reader.match_ratio.call(null, s);
    } else {
      if (cljs.core.truth_(cljs.reader.re_matches_STAR_.call(null, cljs.reader.float_pattern, s))) {
        return cljs.reader.match_float.call(null, s);
      } else {
        return null;
      }
    }
  }
};
cljs.reader.escape_char_map = function escape_char_map(c) {
  if (c === "t") {
    return "\t";
  } else {
    if (c === "r") {
      return "\r";
    } else {
      if (c === "n") {
        return "\n";
      } else {
        if (c === "\\") {
          return "\\";
        } else {
          if (c === '"') {
            return'"';
          } else {
            if (c === "b") {
              return "\b";
            } else {
              if (c === "f") {
                return "\f";
              } else {
                return null;
              }
            }
          }
        }
      }
    }
  }
};
cljs.reader.read_2_chars = function read_2_chars(reader) {
  return(new goog.string.StringBuffer(cljs.reader.read_char.call(null, reader), cljs.reader.read_char.call(null, reader))).toString();
};
cljs.reader.read_4_chars = function read_4_chars(reader) {
  return(new goog.string.StringBuffer(cljs.reader.read_char.call(null, reader), cljs.reader.read_char.call(null, reader), cljs.reader.read_char.call(null, reader), cljs.reader.read_char.call(null, reader))).toString();
};
cljs.reader.unicode_2_pattern = cljs.core.re_pattern.call(null, "^[0-9A-Fa-f]{2}$");
cljs.reader.unicode_4_pattern = cljs.core.re_pattern.call(null, "^[0-9A-Fa-f]{4}$");
cljs.reader.validate_unicode_escape = function validate_unicode_escape(unicode_pattern, reader, escape_char, unicode_str) {
  if (cljs.core.truth_(cljs.core.re_matches.call(null, unicode_pattern, unicode_str))) {
    return unicode_str;
  } else {
    return cljs.reader.reader_error.call(null, reader, "Unexpected unicode escape \\", escape_char, unicode_str);
  }
};
cljs.reader.make_unicode_char = function make_unicode_char(code_str) {
  var code = parseInt(code_str, 16);
  return String.fromCharCode(code);
};
cljs.reader.escape_char = function escape_char(buffer, reader) {
  var ch = cljs.reader.read_char.call(null, reader);
  var mapresult = cljs.reader.escape_char_map.call(null, ch);
  if (cljs.core.truth_(mapresult)) {
    return mapresult;
  } else {
    if (ch === "x") {
      return cljs.reader.make_unicode_char.call(null, cljs.reader.validate_unicode_escape.call(null, cljs.reader.unicode_2_pattern, reader, ch, cljs.reader.read_2_chars.call(null, reader)));
    } else {
      if (ch === "u") {
        return cljs.reader.make_unicode_char.call(null, cljs.reader.validate_unicode_escape.call(null, cljs.reader.unicode_4_pattern, reader, ch, cljs.reader.read_4_chars.call(null, reader)));
      } else {
        if (cljs.reader.numeric_QMARK_.call(null, ch)) {
          return String.fromCharCode(ch);
        } else {
          return cljs.reader.reader_error.call(null, reader, "Unexpected unicode escape \\", ch);
        }
      }
    }
  }
};
cljs.reader.read_past = function read_past(pred, rdr) {
  var ch = cljs.reader.read_char.call(null, rdr);
  while (true) {
    if (cljs.core.truth_(pred.call(null, ch))) {
      var G__27414 = cljs.reader.read_char.call(null, rdr);
      ch = G__27414;
      continue;
    } else {
      return ch;
    }
    break;
  }
};
cljs.reader.read_delimited_list = function read_delimited_list(delim, rdr, recursive_QMARK_) {
  var a = cljs.core.transient$.call(null, cljs.core.PersistentVector.EMPTY);
  while (true) {
    var ch = cljs.reader.read_past.call(null, cljs.reader.whitespace_QMARK_, rdr);
    if (cljs.core.truth_(ch)) {
    } else {
      cljs.reader.reader_error.call(null, rdr, "EOF while reading");
    }
    if (delim === ch) {
      return cljs.core.persistent_BANG_.call(null, a);
    } else {
      var temp__4124__auto__ = cljs.reader.macros.call(null, ch);
      if (cljs.core.truth_(temp__4124__auto__)) {
        var macrofn = temp__4124__auto__;
        var mret = macrofn.call(null, rdr, ch);
        var G__27415 = mret === rdr ? a : cljs.core.conj_BANG_.call(null, a, mret);
        a = G__27415;
        continue;
      } else {
        cljs.reader.unread.call(null, rdr, ch);
        var o = cljs.reader.read.call(null, rdr, true, null, recursive_QMARK_);
        var G__27416 = o === rdr ? a : cljs.core.conj_BANG_.call(null, a, o);
        a = G__27416;
        continue;
      }
    }
    break;
  }
};
cljs.reader.not_implemented = function not_implemented(rdr, ch) {
  return cljs.reader.reader_error.call(null, rdr, "Reader for ", ch, " not implemented yet");
};
cljs.reader.read_dispatch = function read_dispatch(rdr, _) {
  var ch = cljs.reader.read_char.call(null, rdr);
  var dm = cljs.reader.dispatch_macros.call(null, ch);
  if (cljs.core.truth_(dm)) {
    return dm.call(null, rdr, _);
  } else {
    var temp__4124__auto__ = cljs.reader.maybe_read_tagged_type.call(null, rdr, ch);
    if (cljs.core.truth_(temp__4124__auto__)) {
      var obj = temp__4124__auto__;
      return obj;
    } else {
      return cljs.reader.reader_error.call(null, rdr, "No dispatch macro for ", ch);
    }
  }
};
cljs.reader.read_unmatched_delimiter = function read_unmatched_delimiter(rdr, ch) {
  return cljs.reader.reader_error.call(null, rdr, "Unmatched delimiter ", ch);
};
cljs.reader.read_list = function read_list(rdr, _) {
  return cljs.core.apply.call(null, cljs.core.list, cljs.reader.read_delimited_list.call(null, ")", rdr, true));
};
cljs.reader.read_comment = cljs.reader.skip_line;
cljs.reader.read_vector = function read_vector(rdr, _) {
  return cljs.reader.read_delimited_list.call(null, "]", rdr, true);
};
cljs.reader.read_map = function read_map(rdr, _) {
  var l = cljs.reader.read_delimited_list.call(null, "}", rdr, true);
  if (cljs.core.odd_QMARK_.call(null, cljs.core.count.call(null, l))) {
    cljs.reader.reader_error.call(null, rdr, "Map literal must contain an even number of forms");
  } else {
  }
  return cljs.core.apply.call(null, cljs.core.hash_map, l);
};
cljs.reader.read_number = function read_number(reader, initch) {
  var buffer = new goog.string.StringBuffer(initch);
  var ch = cljs.reader.read_char.call(null, reader);
  while (true) {
    if (cljs.core.truth_(function() {
      var or__7504__auto__ = ch == null;
      if (or__7504__auto__) {
        return or__7504__auto__;
      } else {
        var or__7504__auto____$1 = cljs.reader.whitespace_QMARK_.call(null, ch);
        if (or__7504__auto____$1) {
          return or__7504__auto____$1;
        } else {
          return cljs.reader.macros.call(null, ch);
        }
      }
    }())) {
      cljs.reader.unread.call(null, reader, ch);
      var s = buffer.toString();
      var or__7504__auto__ = cljs.reader.match_number.call(null, s);
      if (cljs.core.truth_(or__7504__auto__)) {
        return or__7504__auto__;
      } else {
        return cljs.reader.reader_error.call(null, reader, "Invalid number format [", s, "]");
      }
    } else {
      var G__27417 = function() {
        buffer.append(ch);
        return buffer;
      }();
      var G__27418 = cljs.reader.read_char.call(null, reader);
      buffer = G__27417;
      ch = G__27418;
      continue;
    }
    break;
  }
};
cljs.reader.read_string_STAR_ = function read_string_STAR_(reader, _) {
  var buffer = new goog.string.StringBuffer;
  var ch = cljs.reader.read_char.call(null, reader);
  while (true) {
    if (ch == null) {
      return cljs.reader.reader_error.call(null, reader, "EOF while reading");
    } else {
      if ("\\" === ch) {
        var G__27419 = function() {
          buffer.append(cljs.reader.escape_char.call(null, buffer, reader));
          return buffer;
        }();
        var G__27420 = cljs.reader.read_char.call(null, reader);
        buffer = G__27419;
        ch = G__27420;
        continue;
      } else {
        if ('"' === ch) {
          return buffer.toString();
        } else {
          var G__27421 = function() {
            buffer.append(ch);
            return buffer;
          }();
          var G__27422 = cljs.reader.read_char.call(null, reader);
          buffer = G__27421;
          ch = G__27422;
          continue;
        }
      }
    }
    break;
  }
};
cljs.reader.read_raw_string_STAR_ = function read_raw_string_STAR_(reader, _) {
  var buffer = new goog.string.StringBuffer;
  var ch = cljs.reader.read_char.call(null, reader);
  while (true) {
    if (ch == null) {
      return cljs.reader.reader_error.call(null, reader, "EOF while reading");
    } else {
      if ("\\" === ch) {
        buffer.append(ch);
        var nch = cljs.reader.read_char.call(null, reader);
        if (nch == null) {
          return cljs.reader.reader_error.call(null, reader, "EOF while reading");
        } else {
          var G__27427 = function() {
            var G__27425 = buffer;
            G__27425.append(nch);
            return G__27425;
          }();
          var G__27428 = cljs.reader.read_char.call(null, reader);
          buffer = G__27427;
          ch = G__27428;
          continue;
        }
      } else {
        if ('"' === ch) {
          return buffer.toString();
        } else {
          var G__27429 = function() {
            var G__27426 = buffer;
            G__27426.append(ch);
            return G__27426;
          }();
          var G__27430 = cljs.reader.read_char.call(null, reader);
          buffer = G__27429;
          ch = G__27430;
          continue;
        }
      }
    }
    break;
  }
};
cljs.reader.special_symbols = function special_symbols(t, not_found) {
  if (t === "nil") {
    return null;
  } else {
    if (t === "true") {
      return true;
    } else {
      if (t === "false") {
        return false;
      } else {
        if (t === "/") {
          return new cljs.core.Symbol(null, "/", "/", -1371932971, null);
        } else {
          return not_found;
        }
      }
    }
  }
};
cljs.reader.read_symbol = function read_symbol(reader, initch) {
  var token = cljs.reader.read_token.call(null, reader, initch);
  if (cljs.core.truth_(function() {
    var and__7492__auto__ = goog.string.contains(token, "/");
    if (cljs.core.truth_(and__7492__auto__)) {
      return!(token.length === 1);
    } else {
      return and__7492__auto__;
    }
  }())) {
    return cljs.core.symbol.call(null, cljs.core.subs.call(null, token, 0, token.indexOf("/")), cljs.core.subs.call(null, token, token.indexOf("/") + 1, token.length));
  } else {
    return cljs.reader.special_symbols.call(null, token, cljs.core.symbol.call(null, token));
  }
};
cljs.reader.read_keyword = function read_keyword(reader, initch) {
  var token = cljs.reader.read_token.call(null, reader, cljs.reader.read_char.call(null, reader));
  var a = cljs.reader.re_matches_STAR_.call(null, cljs.reader.symbol_pattern, token);
  var token__$1 = a[0];
  var ns = a[1];
  var name = a[2];
  if (!(void 0 === ns) && ns.substring(ns.length - 2, ns.length) === ":/" || name[name.length - 1] === ":" || !(token__$1.indexOf("::", 1) === -1)) {
    return cljs.reader.reader_error.call(null, reader, "Invalid token: ", token__$1);
  } else {
    if (!(ns == null) && ns.length > 0) {
      return cljs.core.keyword.call(null, ns.substring(0, ns.indexOf("/")), name);
    } else {
      return cljs.core.keyword.call(null, token__$1);
    }
  }
};
cljs.reader.desugar_meta = function desugar_meta(f) {
  if (f instanceof cljs.core.Symbol) {
    return new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), f], null);
  } else {
    if (typeof f === "string") {
      return new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), f], null);
    } else {
      if (f instanceof cljs.core.Keyword) {
        return new cljs.core.PersistentArrayMap.fromArray([f, true], true, false);
      } else {
        return f;
      }
    }
  }
};
cljs.reader.wrapping_reader = function wrapping_reader(sym) {
  return function(rdr, _) {
    return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.reader.read.call(null, rdr, true, null, true)), sym);
  };
};
cljs.reader.throwing_reader = function throwing_reader(msg) {
  return function(rdr, _) {
    return cljs.reader.reader_error.call(null, rdr, msg);
  };
};
cljs.reader.read_meta = function read_meta(rdr, _) {
  var m = cljs.reader.desugar_meta.call(null, cljs.reader.read.call(null, rdr, true, null, true));
  if (cljs.core.map_QMARK_.call(null, m)) {
  } else {
    cljs.reader.reader_error.call(null, rdr, "Metadata must be Symbol,Keyword,String or Map");
  }
  var o = cljs.reader.read.call(null, rdr, true, null, true);
  if (function() {
    var G__27432 = o;
    if (G__27432) {
      var bit__8185__auto__ = G__27432.cljs$lang$protocol_mask$partition0$ & 262144;
      if (bit__8185__auto__ || G__27432.cljs$core$IWithMeta$) {
        return true;
      } else {
        if (!G__27432.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IWithMeta, G__27432);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IWithMeta, G__27432);
    }
  }()) {
    return cljs.core.with_meta.call(null, o, cljs.core.merge.call(null, cljs.core.meta.call(null, o), m));
  } else {
    return cljs.reader.reader_error.call(null, rdr, "Metadata can only be applied to IWithMetas");
  }
};
cljs.reader.read_set = function read_set(rdr, _) {
  return cljs.core.set.call(null, cljs.reader.read_delimited_list.call(null, "}", rdr, true));
};
cljs.reader.read_regex = function read_regex(rdr, ch) {
  return cljs.core.re_pattern.call(null, cljs.reader.read_raw_string_STAR_.call(null, rdr, ch));
};
cljs.reader.read_discard = function read_discard(rdr, _) {
  cljs.reader.read.call(null, rdr, true, null, true);
  return rdr;
};
cljs.reader.macros = function macros(c) {
  if (c === '"') {
    return cljs.reader.read_string_STAR_;
  } else {
    if (c === ":") {
      return cljs.reader.read_keyword;
    } else {
      if (c === ";") {
        return cljs.reader.read_comment;
      } else {
        if (c === "'") {
          return cljs.reader.wrapping_reader.call(null, new cljs.core.Symbol(null, "quote", "quote", 1377916282, null));
        } else {
          if (c === "@") {
            return cljs.reader.wrapping_reader.call(null, new cljs.core.Symbol(null, "deref", "deref", 1494944732, null));
          } else {
            if (c === "^") {
              return cljs.reader.read_meta;
            } else {
              if (c === "`") {
                return cljs.reader.not_implemented;
              } else {
                if (c === "~") {
                  return cljs.reader.not_implemented;
                } else {
                  if (c === "(") {
                    return cljs.reader.read_list;
                  } else {
                    if (c === ")") {
                      return cljs.reader.read_unmatched_delimiter;
                    } else {
                      if (c === "[") {
                        return cljs.reader.read_vector;
                      } else {
                        if (c === "]") {
                          return cljs.reader.read_unmatched_delimiter;
                        } else {
                          if (c === "{") {
                            return cljs.reader.read_map;
                          } else {
                            if (c === "}") {
                              return cljs.reader.read_unmatched_delimiter;
                            } else {
                              if (c === "\\") {
                                return cljs.reader.read_char;
                              } else {
                                if (c === "#") {
                                  return cljs.reader.read_dispatch;
                                } else {
                                  return null;
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.reader.dispatch_macros = function dispatch_macros(s) {
  if (s === "{") {
    return cljs.reader.read_set;
  } else {
    if (s === "\x3c") {
      return cljs.reader.throwing_reader.call(null, "Unreadable form");
    } else {
      if (s === '"') {
        return cljs.reader.read_regex;
      } else {
        if (s === "!") {
          return cljs.reader.read_comment;
        } else {
          if (s === "_") {
            return cljs.reader.read_discard;
          } else {
            return null;
          }
        }
      }
    }
  }
};
cljs.reader.read = function read(reader, eof_is_error, sentinel, is_recursive) {
  while (true) {
    var ch = cljs.reader.read_char.call(null, reader);
    if (ch == null) {
      if (cljs.core.truth_(eof_is_error)) {
        return cljs.reader.reader_error.call(null, reader, "EOF while reading");
      } else {
        return sentinel;
      }
    } else {
      if (cljs.reader.whitespace_QMARK_.call(null, ch)) {
        var G__27433 = reader;
        var G__27434 = eof_is_error;
        var G__27435 = sentinel;
        var G__27436 = is_recursive;
        reader = G__27433;
        eof_is_error = G__27434;
        sentinel = G__27435;
        is_recursive = G__27436;
        continue;
      } else {
        if (cljs.reader.comment_prefix_QMARK_.call(null, ch)) {
          var G__27437 = cljs.reader.read_comment.call(null, reader, ch);
          var G__27438 = eof_is_error;
          var G__27439 = sentinel;
          var G__27440 = is_recursive;
          reader = G__27437;
          eof_is_error = G__27438;
          sentinel = G__27439;
          is_recursive = G__27440;
          continue;
        } else {
          var f = cljs.reader.macros.call(null, ch);
          var res = cljs.core.truth_(f) ? f.call(null, reader, ch) : cljs.reader.number_literal_QMARK_.call(null, reader, ch) ? cljs.reader.read_number.call(null, reader, ch) : cljs.reader.read_symbol.call(null, reader, ch);
          if (res === reader) {
            var G__27441 = reader;
            var G__27442 = eof_is_error;
            var G__27443 = sentinel;
            var G__27444 = is_recursive;
            reader = G__27441;
            eof_is_error = G__27442;
            sentinel = G__27443;
            is_recursive = G__27444;
            continue;
          } else {
            return res;
          }
        }
      }
    }
    break;
  }
};
cljs.reader.read_string = function read_string(s) {
  var r = cljs.reader.push_back_reader.call(null, s);
  return cljs.reader.read.call(null, r, false, null, false);
};
cljs.reader.zero_fill_right_and_truncate = function zero_fill_right_and_truncate(s, width) {
  if (cljs.core._EQ_.call(null, width, cljs.core.count.call(null, s))) {
    return s;
  } else {
    if (width < cljs.core.count.call(null, s)) {
      return cljs.core.subs.call(null, s, 0, width);
    } else {
      var b = new goog.string.StringBuffer(s);
      while (true) {
        if (b.getLength() < width) {
          var G__27445 = b.append("0");
          b = G__27445;
          continue;
        } else {
          return b.toString();
        }
        break;
      }
    }
  }
};
cljs.reader.divisible_QMARK_ = function divisible_QMARK_(num, div) {
  return cljs.core.mod.call(null, num, div) === 0;
};
cljs.reader.indivisible_QMARK_ = function indivisible_QMARK_(num, div) {
  return!cljs.reader.divisible_QMARK_.call(null, num, div);
};
cljs.reader.leap_year_QMARK_ = function leap_year_QMARK_(year) {
  return cljs.reader.divisible_QMARK_.call(null, year, 4) && (cljs.reader.indivisible_QMARK_.call(null, year, 100) || cljs.reader.divisible_QMARK_.call(null, year, 400));
};
cljs.reader.days_in_month = function() {
  var dim_norm = new cljs.core.PersistentVector(null, 13, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31], null);
  var dim_leap = new cljs.core.PersistentVector(null, 13, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, 31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31], null);
  return function(dim_norm, dim_leap) {
    return function(month, leap_year_QMARK_) {
      return cljs.core.get.call(null, cljs.core.truth_(leap_year_QMARK_) ? dim_leap : dim_norm, month);
    };
  }(dim_norm, dim_leap);
}();
cljs.reader.timestamp_regex = /(\d\d\d\d)(?:-(\d\d)(?:-(\d\d)(?:[T](\d\d)(?::(\d\d)(?::(\d\d)(?:[.](\d+))?)?)?)?)?)?(?:[Z]|([-+])(\d\d):(\d\d))?/;
cljs.reader.parse_int = function parse_int(s) {
  var n = parseInt(s, 10);
  if (cljs.core.not.call(null, isNaN(n))) {
    return n;
  } else {
    return null;
  }
};
cljs.reader.check = function check(low, n, high, msg) {
  if (low <= n && n <= high) {
  } else {
    cljs.reader.reader_error.call(null, null, [cljs.core.str(msg), cljs.core.str(" Failed:  "), cljs.core.str(low), cljs.core.str("\x3c\x3d"), cljs.core.str(n), cljs.core.str("\x3c\x3d"), cljs.core.str(high)].join(""));
  }
  return n;
};
cljs.reader.parse_and_validate_timestamp = function parse_and_validate_timestamp(s) {
  var vec__27447 = cljs.core.re_matches.call(null, cljs.reader.timestamp_regex, s);
  var _ = cljs.core.nth.call(null, vec__27447, 0, null);
  var years = cljs.core.nth.call(null, vec__27447, 1, null);
  var months = cljs.core.nth.call(null, vec__27447, 2, null);
  var days = cljs.core.nth.call(null, vec__27447, 3, null);
  var hours = cljs.core.nth.call(null, vec__27447, 4, null);
  var minutes = cljs.core.nth.call(null, vec__27447, 5, null);
  var seconds = cljs.core.nth.call(null, vec__27447, 6, null);
  var fraction = cljs.core.nth.call(null, vec__27447, 7, null);
  var offset_sign = cljs.core.nth.call(null, vec__27447, 8, null);
  var offset_hours = cljs.core.nth.call(null, vec__27447, 9, null);
  var offset_minutes = cljs.core.nth.call(null, vec__27447, 10, null);
  var v = vec__27447;
  if (cljs.core.not.call(null, v)) {
    return cljs.reader.reader_error.call(null, null, [cljs.core.str("Unrecognized date/time syntax: "), cljs.core.str(s)].join(""));
  } else {
    var years__$1 = cljs.reader.parse_int.call(null, years);
    var months__$1 = function() {
      var or__7504__auto__ = cljs.reader.parse_int.call(null, months);
      if (cljs.core.truth_(or__7504__auto__)) {
        return or__7504__auto__;
      } else {
        return 1;
      }
    }();
    var days__$1 = function() {
      var or__7504__auto__ = cljs.reader.parse_int.call(null, days);
      if (cljs.core.truth_(or__7504__auto__)) {
        return or__7504__auto__;
      } else {
        return 1;
      }
    }();
    var hours__$1 = function() {
      var or__7504__auto__ = cljs.reader.parse_int.call(null, hours);
      if (cljs.core.truth_(or__7504__auto__)) {
        return or__7504__auto__;
      } else {
        return 0;
      }
    }();
    var minutes__$1 = function() {
      var or__7504__auto__ = cljs.reader.parse_int.call(null, minutes);
      if (cljs.core.truth_(or__7504__auto__)) {
        return or__7504__auto__;
      } else {
        return 0;
      }
    }();
    var seconds__$1 = function() {
      var or__7504__auto__ = cljs.reader.parse_int.call(null, seconds);
      if (cljs.core.truth_(or__7504__auto__)) {
        return or__7504__auto__;
      } else {
        return 0;
      }
    }();
    var fraction__$1 = function() {
      var or__7504__auto__ = cljs.reader.parse_int.call(null, cljs.reader.zero_fill_right_and_truncate.call(null, fraction, 3));
      if (cljs.core.truth_(or__7504__auto__)) {
        return or__7504__auto__;
      } else {
        return 0;
      }
    }();
    var offset_sign__$1 = cljs.core._EQ_.call(null, offset_sign, "-") ? -1 : 1;
    var offset_hours__$1 = function() {
      var or__7504__auto__ = cljs.reader.parse_int.call(null, offset_hours);
      if (cljs.core.truth_(or__7504__auto__)) {
        return or__7504__auto__;
      } else {
        return 0;
      }
    }();
    var offset_minutes__$1 = function() {
      var or__7504__auto__ = cljs.reader.parse_int.call(null, offset_minutes);
      if (cljs.core.truth_(or__7504__auto__)) {
        return or__7504__auto__;
      } else {
        return 0;
      }
    }();
    var offset = offset_sign__$1 * (offset_hours__$1 * 60 + offset_minutes__$1);
    return new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, [years__$1, cljs.reader.check.call(null, 1, months__$1, 12, "timestamp month field must be in range 1..12"), cljs.reader.check.call(null, 1, days__$1, cljs.reader.days_in_month.call(null, months__$1, cljs.reader.leap_year_QMARK_.call(null, years__$1)), "timestamp day field must be in range 1..last day in month"), cljs.reader.check.call(null, 0, hours__$1, 23, "timestamp hour field must be in range 0..23"), 
    cljs.reader.check.call(null, 0, minutes__$1, 59, "timestamp minute field must be in range 0..59"), cljs.reader.check.call(null, 0, seconds__$1, cljs.core._EQ_.call(null, minutes__$1, 59) ? 60 : 59, "timestamp second field must be in range 0..60"), cljs.reader.check.call(null, 0, fraction__$1, 999, "timestamp millisecond field must be in range 0..999"), offset], null);
  }
};
cljs.reader.parse_timestamp = function parse_timestamp(ts) {
  var temp__4124__auto__ = cljs.reader.parse_and_validate_timestamp.call(null, ts);
  if (cljs.core.truth_(temp__4124__auto__)) {
    var vec__27449 = temp__4124__auto__;
    var years = cljs.core.nth.call(null, vec__27449, 0, null);
    var months = cljs.core.nth.call(null, vec__27449, 1, null);
    var days = cljs.core.nth.call(null, vec__27449, 2, null);
    var hours = cljs.core.nth.call(null, vec__27449, 3, null);
    var minutes = cljs.core.nth.call(null, vec__27449, 4, null);
    var seconds = cljs.core.nth.call(null, vec__27449, 5, null);
    var ms = cljs.core.nth.call(null, vec__27449, 6, null);
    var offset = cljs.core.nth.call(null, vec__27449, 7, null);
    return new Date(Date.UTC(years, months - 1, days, hours, minutes, seconds, ms) - offset * 60 * 1E3);
  } else {
    return cljs.reader.reader_error.call(null, null, [cljs.core.str("Unrecognized date/time syntax: "), cljs.core.str(ts)].join(""));
  }
};
cljs.reader.read_date = function read_date(s) {
  if (typeof s === "string") {
    return cljs.reader.parse_timestamp.call(null, s);
  } else {
    return cljs.reader.reader_error.call(null, null, "Instance literal expects a string for its timestamp.");
  }
};
cljs.reader.read_queue = function read_queue(elems) {
  if (cljs.core.vector_QMARK_.call(null, elems)) {
    return cljs.core.into.call(null, cljs.core.PersistentQueue.EMPTY, elems);
  } else {
    return cljs.reader.reader_error.call(null, null, "Queue literal expects a vector for its elements.");
  }
};
cljs.reader.read_js = function read_js(form) {
  if (cljs.core.vector_QMARK_.call(null, form)) {
    var arr = [];
    var seq__27462_27474 = cljs.core.seq.call(null, form);
    var chunk__27463_27475 = null;
    var count__27464_27476 = 0;
    var i__27465_27477 = 0;
    while (true) {
      if (i__27465_27477 < count__27464_27476) {
        var x_27478 = cljs.core._nth.call(null, chunk__27463_27475, i__27465_27477);
        arr.push(x_27478);
        var G__27479 = seq__27462_27474;
        var G__27480 = chunk__27463_27475;
        var G__27481 = count__27464_27476;
        var G__27482 = i__27465_27477 + 1;
        seq__27462_27474 = G__27479;
        chunk__27463_27475 = G__27480;
        count__27464_27476 = G__27481;
        i__27465_27477 = G__27482;
        continue;
      } else {
        var temp__4126__auto___27483 = cljs.core.seq.call(null, seq__27462_27474);
        if (temp__4126__auto___27483) {
          var seq__27462_27484__$1 = temp__4126__auto___27483;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__27462_27484__$1)) {
            var c__8291__auto___27485 = cljs.core.chunk_first.call(null, seq__27462_27484__$1);
            var G__27486 = cljs.core.chunk_rest.call(null, seq__27462_27484__$1);
            var G__27487 = c__8291__auto___27485;
            var G__27488 = cljs.core.count.call(null, c__8291__auto___27485);
            var G__27489 = 0;
            seq__27462_27474 = G__27486;
            chunk__27463_27475 = G__27487;
            count__27464_27476 = G__27488;
            i__27465_27477 = G__27489;
            continue;
          } else {
            var x_27490 = cljs.core.first.call(null, seq__27462_27484__$1);
            arr.push(x_27490);
            var G__27491 = cljs.core.next.call(null, seq__27462_27484__$1);
            var G__27492 = null;
            var G__27493 = 0;
            var G__27494 = 0;
            seq__27462_27474 = G__27491;
            chunk__27463_27475 = G__27492;
            count__27464_27476 = G__27493;
            i__27465_27477 = G__27494;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return arr;
  } else {
    if (cljs.core.map_QMARK_.call(null, form)) {
      var obj = function() {
        var obj27467 = {};
        return obj27467;
      }();
      var seq__27468_27495 = cljs.core.seq.call(null, form);
      var chunk__27469_27496 = null;
      var count__27470_27497 = 0;
      var i__27471_27498 = 0;
      while (true) {
        if (i__27471_27498 < count__27470_27497) {
          var vec__27472_27499 = cljs.core._nth.call(null, chunk__27469_27496, i__27471_27498);
          var k_27500 = cljs.core.nth.call(null, vec__27472_27499, 0, null);
          var v_27501 = cljs.core.nth.call(null, vec__27472_27499, 1, null);
          obj[cljs.core.name.call(null, k_27500)] = v_27501;
          var G__27502 = seq__27468_27495;
          var G__27503 = chunk__27469_27496;
          var G__27504 = count__27470_27497;
          var G__27505 = i__27471_27498 + 1;
          seq__27468_27495 = G__27502;
          chunk__27469_27496 = G__27503;
          count__27470_27497 = G__27504;
          i__27471_27498 = G__27505;
          continue;
        } else {
          var temp__4126__auto___27506 = cljs.core.seq.call(null, seq__27468_27495);
          if (temp__4126__auto___27506) {
            var seq__27468_27507__$1 = temp__4126__auto___27506;
            if (cljs.core.chunked_seq_QMARK_.call(null, seq__27468_27507__$1)) {
              var c__8291__auto___27508 = cljs.core.chunk_first.call(null, seq__27468_27507__$1);
              var G__27509 = cljs.core.chunk_rest.call(null, seq__27468_27507__$1);
              var G__27510 = c__8291__auto___27508;
              var G__27511 = cljs.core.count.call(null, c__8291__auto___27508);
              var G__27512 = 0;
              seq__27468_27495 = G__27509;
              chunk__27469_27496 = G__27510;
              count__27470_27497 = G__27511;
              i__27471_27498 = G__27512;
              continue;
            } else {
              var vec__27473_27513 = cljs.core.first.call(null, seq__27468_27507__$1);
              var k_27514 = cljs.core.nth.call(null, vec__27473_27513, 0, null);
              var v_27515 = cljs.core.nth.call(null, vec__27473_27513, 1, null);
              obj[cljs.core.name.call(null, k_27514)] = v_27515;
              var G__27516 = cljs.core.next.call(null, seq__27468_27507__$1);
              var G__27517 = null;
              var G__27518 = 0;
              var G__27519 = 0;
              seq__27468_27495 = G__27516;
              chunk__27469_27496 = G__27517;
              count__27470_27497 = G__27518;
              i__27471_27498 = G__27519;
              continue;
            }
          } else {
          }
        }
        break;
      }
      return obj;
    } else {
      return cljs.reader.reader_error.call(null, null, [cljs.core.str("JS literal expects a vector or map containing "), cljs.core.str("only string or unqualified keyword keys")].join(""));
    }
  }
};
cljs.reader.read_uuid = function read_uuid(uuid) {
  if (typeof uuid === "string") {
    return new cljs.core.UUID(uuid);
  } else {
    return cljs.reader.reader_error.call(null, null, "UUID literal expects a string as its representation.");
  }
};
cljs.reader._STAR_tag_table_STAR_ = cljs.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 4, ["inst", cljs.reader.read_date, "uuid", cljs.reader.read_uuid, "queue", cljs.reader.read_queue, "js", cljs.reader.read_js], null));
cljs.reader._STAR_default_data_reader_fn_STAR_ = cljs.core.atom.call(null, null);
cljs.reader.maybe_read_tagged_type = function maybe_read_tagged_type(rdr, initch) {
  var tag = cljs.reader.read_symbol.call(null, rdr, initch);
  var pfn = cljs.core.get.call(null, cljs.core.deref.call(null, cljs.reader._STAR_tag_table_STAR_), [cljs.core.str(tag)].join(""));
  var dfn = cljs.core.deref.call(null, cljs.reader._STAR_default_data_reader_fn_STAR_);
  if (cljs.core.truth_(pfn)) {
    return pfn.call(null, cljs.reader.read.call(null, rdr, true, null, false));
  } else {
    if (cljs.core.truth_(dfn)) {
      return dfn.call(null, tag, cljs.reader.read.call(null, rdr, true, null, false));
    } else {
      return cljs.reader.reader_error.call(null, rdr, "Could not find tag parser for ", [cljs.core.str(tag)].join(""), " in ", cljs.core.pr_str.call(null, cljs.core.keys.call(null, cljs.core.deref.call(null, cljs.reader._STAR_tag_table_STAR_))));
    }
  }
};
cljs.reader.register_tag_parser_BANG_ = function register_tag_parser_BANG_(tag, f) {
  var tag__$1 = [cljs.core.str(tag)].join("");
  var old_parser = cljs.core.get.call(null, cljs.core.deref.call(null, cljs.reader._STAR_tag_table_STAR_), tag__$1);
  cljs.core.swap_BANG_.call(null, cljs.reader._STAR_tag_table_STAR_, cljs.core.assoc, tag__$1, f);
  return old_parser;
};
cljs.reader.deregister_tag_parser_BANG_ = function deregister_tag_parser_BANG_(tag) {
  var tag__$1 = [cljs.core.str(tag)].join("");
  var old_parser = cljs.core.get.call(null, cljs.core.deref.call(null, cljs.reader._STAR_tag_table_STAR_), tag__$1);
  cljs.core.swap_BANG_.call(null, cljs.reader._STAR_tag_table_STAR_, cljs.core.dissoc, tag__$1);
  return old_parser;
};
cljs.reader.register_default_tag_parser_BANG_ = function register_default_tag_parser_BANG_(f) {
  var old_parser = cljs.core.deref.call(null, cljs.reader._STAR_default_data_reader_fn_STAR_);
  cljs.core.swap_BANG_.call(null, cljs.reader._STAR_default_data_reader_fn_STAR_, function(old_parser) {
    return function(_) {
      return f;
    };
  }(old_parser));
  return old_parser;
};
cljs.reader.deregister_default_tag_parser_BANG_ = function deregister_default_tag_parser_BANG_() {
  var old_parser = cljs.core.deref.call(null, cljs.reader._STAR_default_data_reader_fn_STAR_);
  cljs.core.swap_BANG_.call(null, cljs.reader._STAR_default_data_reader_fn_STAR_, function(old_parser) {
    return function(_) {
      return null;
    };
  }(old_parser));
  return old_parser;
};
goog.provide("clojure.walk");
goog.require("cljs.core");
clojure.walk.walk = function walk(inner, outer, form) {
  if (cljs.core.seq_QMARK_.call(null, form)) {
    return outer.call(null, cljs.core.doall.call(null, cljs.core.map.call(null, inner, form)));
  } else {
    if (cljs.core.coll_QMARK_.call(null, form)) {
      return outer.call(null, cljs.core.into.call(null, cljs.core.empty.call(null, form), cljs.core.map.call(null, inner, form)));
    } else {
      return outer.call(null, form);
    }
  }
};
clojure.walk.postwalk = function postwalk(f, form) {
  return clojure.walk.walk.call(null, cljs.core.partial.call(null, postwalk, f), f, form);
};
clojure.walk.prewalk = function prewalk(f, form) {
  return clojure.walk.walk.call(null, cljs.core.partial.call(null, prewalk, f), cljs.core.identity, f.call(null, form));
};
clojure.walk.keywordize_keys = function keywordize_keys(m) {
  var f = function(p__31235) {
    var vec__31236 = p__31235;
    var k = cljs.core.nth.call(null, vec__31236, 0, null);
    var v = cljs.core.nth.call(null, vec__31236, 1, null);
    if (typeof k === "string") {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.call(null, k), v], null);
    } else {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, v], null);
    }
  };
  return clojure.walk.postwalk.call(null, function(f) {
    return function(x) {
      if (cljs.core.map_QMARK_.call(null, x)) {
        return cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.map.call(null, f, x));
      } else {
        return x;
      }
    };
  }(f), m);
};
clojure.walk.stringify_keys = function stringify_keys(m) {
  var f = function(p__31239) {
    var vec__31240 = p__31239;
    var k = cljs.core.nth.call(null, vec__31240, 0, null);
    var v = cljs.core.nth.call(null, vec__31240, 1, null);
    if (k instanceof cljs.core.Keyword) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.name.call(null, k), v], null);
    } else {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, v], null);
    }
  };
  return clojure.walk.postwalk.call(null, function(f) {
    return function(x) {
      if (cljs.core.map_QMARK_.call(null, x)) {
        return cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.map.call(null, f, x));
      } else {
        return x;
      }
    };
  }(f), m);
};
clojure.walk.prewalk_replace = function prewalk_replace(smap, form) {
  return clojure.walk.prewalk.call(null, function(x) {
    if (cljs.core.contains_QMARK_.call(null, smap, x)) {
      return smap.call(null, x);
    } else {
      return x;
    }
  }, form);
};
clojure.walk.postwalk_replace = function postwalk_replace(smap, form) {
  return clojure.walk.postwalk.call(null, function(x) {
    if (cljs.core.contains_QMARK_.call(null, smap, x)) {
      return smap.call(null, x);
    } else {
      return x;
    }
  }, form);
};
goog.provide("speicher.render");
goog.require("cljs.core");
goog.require("clojure.string");
goog.require("clojure.walk");
goog.require("quiescent.dom");
goog.require("quiescent");
goog.require("cljs.reader");
goog.require("cljs.core.async");
speicher.render.data = cljs.core.list("lernen | lernend | gelernt | ich lerne | du lernst | er/sie lernt | ich/er/sie lernte | er/sie hat/hatte gelernt | deutsch lernen :: to learn {learned, learnt; learned, learnt} | learning | learned; learnt | I learn | you learn | he/she learns | I/he/she learned; I/he/she learnt | he/she has/had learned; he/she has/had learnt | to learn German", "lernen; sich aneignen; aufschnappen :: to pick up");
speicher.render.toArray = function toArray(js_col) {
  return cljs.core.js__GT_clj.call(null, cljs.core.clj__GT_js.call(null, cljs.core.PersistentVector.EMPTY).slice.call(js_col));
};
speicher.render.serialize_form = function serialize_form(e) {
  return clojure.walk.keywordize_keys.call(null, cljs.core.reduce.call(null, function(p1__6142_SHARP_, p2__6141_SHARP_) {
    var k = p2__6141_SHARP_.name;
    var v = p2__6141_SHARP_.value;
    return cljs.core.assoc.call(null, p1__6142_SHARP_, k, v);
  }, cljs.core.PersistentArrayMap.EMPTY, cljs.core.filter.call(null, function(p1__6140_SHARP_) {
    return p1__6140_SHARP_.checked;
  }, speicher.render.toArray.call(null, e.target.elements))));
};
speicher.render.Nav = quiescent.component.call(null, function(title) {
  return quiescent.dom.div.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "className", "className", -1983287057), "navbar"], null), quiescent.dom.div.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "className", "className", -1983287057), "navbar-inner"], null), quiescent.dom.div.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "className", "className", -1983287057), "left"], null), quiescent.dom.a.call(null, 
  new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "href", "href", -793805698), "#", new cljs.core.Keyword(null, "className", "className", -1983287057), "back link"], null), quiescent.dom.i.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "className", "className", -1983287057), "icon icon-back"], null)), quiescent.dom.span.call(null, null, "Back"))), quiescent.dom.div.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, 
  "className", "className", -1983287057), "center", new cljs.core.Keyword(null, "style", "style", -496642736), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "left", "left", -399115937), "22px"], null)], null), title), quiescent.dom.div.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "className", "className", -1983287057), "right"], null))));
});
speicher.render.Wordrow = quiescent.component.call(null, function(row, input_chan) {
  return quiescent.dom.div.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "className", "className", -1983287057), "accordion-item"], null), quiescent.dom.div.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "className", "className", -1983287057), "accordion-item-toggle"], null), quiescent.dom.a.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "href", "href", -793805698), "#", new cljs.core.Keyword(null, 
  "className", "className", -1983287057), "item-content item-link"], null), quiescent.dom.div.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "className", "className", -1983287057), "item-inner"], null), quiescent.dom.div.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "className", "className", -1983287057), "item-title"], null), cljs.core.first.call(null, row))))), quiescent.dom.div.call(null, new cljs.core.PersistentArrayMap(null, 
  1, [new cljs.core.Keyword(null, "className", "className", -1983287057), "accordion-item-content"], null), quiescent.dom.div.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "className", "className", -1983287057), "content-block"], null), cljs.core.second.call(null, row))));
});
speicher.render.WordList = quiescent.component.call(null, function(state, input_chan) {
  return quiescent.dom.div.call(null, null, speicher.render.Nav.call(null, "Review"), quiescent.dom.div.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "className", "className", -1983287057), "page-content"], null), quiescent.dom.div.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "className", "className", -1983287057), "accordion-list list-block"], null), cljs.core.apply.call(null, quiescent.dom.ul, null, cljs.core.map.call(null, 
  function(p1__6143_SHARP_) {
    return speicher.render.Wordrow.call(null, p1__6143_SHARP_, input_chan);
  }, (new cljs.core.Keyword(null, "words", "words", 1924933001)).cljs$core$IFn$_invoke$arity$1(state))))));
});
speicher.render.handle_search_submit = function handle_search_submit(input_chan, e) {
  var term_6194 = document.getElementById("term").value;
  var c__6061__auto___6195 = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__6061__auto___6195, term_6194) {
    return function() {
      var f__6062__auto__ = function() {
        var switch__6046__auto__ = function(c__6061__auto___6195, term_6194) {
          return function(state_6181) {
            var state_val_6182 = state_6181[1];
            if (state_val_6182 === 5) {
              var inst_6176 = state_6181[2];
              var state_6181__$1 = state_6181;
              var statearr_6183_6196 = state_6181__$1;
              statearr_6183_6196[2] = inst_6176;
              statearr_6183_6196[1] = 4;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_6182 === 4) {
                var inst_6179 = state_6181[2];
                var state_6181__$1 = state_6181;
                return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_6181__$1, inst_6179);
              } else {
                if (state_val_6182 === 3) {
                  var state_6181__$1 = state_6181;
                  var statearr_6184_6197 = state_6181__$1;
                  statearr_6184_6197[2] = null;
                  statearr_6184_6197[1] = 4;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_6182 === 2) {
                    var inst_6172 = cljs.core.PersistentVector.EMPTY_NODE;
                    var inst_6173 = [new cljs.core.Keyword(null, "search-term", "search-term", 356193544), term_6194];
                    var inst_6174 = new cljs.core.PersistentVector(null, 2, 5, inst_6172, inst_6173, null);
                    var state_6181__$1 = state_6181;
                    return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_6181__$1, 5, input_chan, inst_6174);
                  } else {
                    if (state_val_6182 === 1) {
                      var inst_6169 = cljs.core.count.call(null, term_6194);
                      var inst_6170 = 2 < inst_6169;
                      var state_6181__$1 = state_6181;
                      if (cljs.core.truth_(inst_6170)) {
                        var statearr_6185_6198 = state_6181__$1;
                        statearr_6185_6198[1] = 2;
                      } else {
                        var statearr_6186_6199 = state_6181__$1;
                        statearr_6186_6199[1] = 3;
                      }
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      return null;
                    }
                  }
                }
              }
            }
          };
        }(c__6061__auto___6195, term_6194);
        return function(switch__6046__auto__, c__6061__auto___6195, term_6194) {
          return function() {
            var state_machine__6047__auto__ = null;
            var state_machine__6047__auto____0 = function() {
              var statearr_6190 = [null, null, null, null, null, null, null];
              statearr_6190[0] = state_machine__6047__auto__;
              statearr_6190[1] = 1;
              return statearr_6190;
            };
            var state_machine__6047__auto____1 = function(state_6181) {
              while (true) {
                var ret_value__6048__auto__ = function() {
                  try {
                    while (true) {
                      var result__6049__auto__ = switch__6046__auto__.call(null, state_6181);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__6049__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__6049__auto__;
                      }
                      break;
                    }
                  } catch (e6191) {
                    if (e6191 instanceof Object) {
                      var ex__6050__auto__ = e6191;
                      var statearr_6192_6200 = state_6181;
                      statearr_6192_6200[5] = ex__6050__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_6181);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e6191;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6048__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__6201 = state_6181;
                  state_6181 = G__6201;
                  continue;
                } else {
                  return ret_value__6048__auto__;
                }
                break;
              }
            };
            state_machine__6047__auto__ = function(state_6181) {
              switch(arguments.length) {
                case 0:
                  return state_machine__6047__auto____0.call(this);
                case 1:
                  return state_machine__6047__auto____1.call(this, state_6181);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__6047__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6047__auto____0;
            state_machine__6047__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6047__auto____1;
            return state_machine__6047__auto__;
          }();
        }(switch__6046__auto__, c__6061__auto___6195, term_6194);
      }();
      var state__6063__auto__ = function() {
        var statearr_6193 = f__6062__auto__.call(null);
        statearr_6193[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6061__auto___6195;
        return statearr_6193;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6063__auto__);
    };
  }(c__6061__auto___6195, term_6194));
  return false;
};
speicher.render.handle_new_word_submit = function handle_new_word_submit(input_chan, e) {
  var form = speicher.render.serialize_form.call(null, e);
  var c__6061__auto___6232 = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__6061__auto___6232, form) {
    return function() {
      var f__6062__auto__ = function() {
        var switch__6046__auto__ = function(c__6061__auto___6232, form) {
          return function(state_6223) {
            var state_val_6224 = state_6223[1];
            if (state_val_6224 === 2) {
              var inst_6221 = state_6223[2];
              var state_6223__$1 = state_6223;
              return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_6223__$1, inst_6221);
            } else {
              if (state_val_6224 === 1) {
                var inst_6217 = cljs.core.PersistentVector.EMPTY_NODE;
                var inst_6218 = [new cljs.core.Keyword(null, "submit-selected", "submit-selected", -548982554), form];
                var inst_6219 = new cljs.core.PersistentVector(null, 2, 5, inst_6217, inst_6218, null);
                var state_6223__$1 = state_6223;
                return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_6223__$1, 2, input_chan, inst_6219);
              } else {
                return null;
              }
            }
          };
        }(c__6061__auto___6232, form);
        return function(switch__6046__auto__, c__6061__auto___6232, form) {
          return function() {
            var state_machine__6047__auto__ = null;
            var state_machine__6047__auto____0 = function() {
              var statearr_6228 = [null, null, null, null, null, null, null];
              statearr_6228[0] = state_machine__6047__auto__;
              statearr_6228[1] = 1;
              return statearr_6228;
            };
            var state_machine__6047__auto____1 = function(state_6223) {
              while (true) {
                var ret_value__6048__auto__ = function() {
                  try {
                    while (true) {
                      var result__6049__auto__ = switch__6046__auto__.call(null, state_6223);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__6049__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__6049__auto__;
                      }
                      break;
                    }
                  } catch (e6229) {
                    if (e6229 instanceof Object) {
                      var ex__6050__auto__ = e6229;
                      var statearr_6230_6233 = state_6223;
                      statearr_6230_6233[5] = ex__6050__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_6223);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e6229;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6048__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__6234 = state_6223;
                  state_6223 = G__6234;
                  continue;
                } else {
                  return ret_value__6048__auto__;
                }
                break;
              }
            };
            state_machine__6047__auto__ = function(state_6223) {
              switch(arguments.length) {
                case 0:
                  return state_machine__6047__auto____0.call(this);
                case 1:
                  return state_machine__6047__auto____1.call(this, state_6223);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__6047__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6047__auto____0;
            state_machine__6047__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6047__auto____1;
            return state_machine__6047__auto__;
          }();
        }(switch__6046__auto__, c__6061__auto___6232, form);
      }();
      var state__6063__auto__ = function() {
        var statearr_6231 = f__6062__auto__.call(null);
        statearr_6231[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6061__auto___6232;
        return statearr_6231;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6063__auto__);
    };
  }(c__6061__auto___6232, form));
  return false;
};
speicher.render.handle_enter_word_submit = function handle_enter_word_submit(input_chan, e) {
  var ger = document.getElementById("ger");
  var eng = document.getElementById("eng");
  var g = ger.value;
  var e__$1 = eng.value;
  if (cljs.core.truth_(function() {
    var or__3829__auto__ = clojure.string.blank_QMARK_.call(null, g);
    if (cljs.core.truth_(or__3829__auto__)) {
      return or__3829__auto__;
    } else {
      return clojure.string.blank_QMARK_.call(null, e__$1);
    }
  }())) {
  } else {
    var c__6061__auto___6271 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__6061__auto___6271, ger, eng, g, e__$1) {
      return function() {
        var f__6062__auto__ = function() {
          var switch__6046__auto__ = function(c__6061__auto___6271, ger, eng, g, e__$1) {
            return function(state_6262) {
              var state_val_6263 = state_6262[1];
              if (state_val_6263 === 2) {
                var inst_6260 = state_6262[2];
                var state_6262__$1 = state_6262;
                return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_6262__$1, inst_6260);
              } else {
                if (state_val_6263 === 1) {
                  var inst_6253 = cljs.core.PersistentVector.EMPTY_NODE;
                  var inst_6254 = cljs.core.PersistentVector.EMPTY_NODE;
                  var inst_6255 = [g, e__$1];
                  var inst_6256 = new cljs.core.PersistentVector(null, 2, 5, inst_6254, inst_6255, null);
                  var inst_6257 = [new cljs.core.Keyword(null, "submit-entered", "submit-entered", -1080659330), inst_6256];
                  var inst_6258 = new cljs.core.PersistentVector(null, 2, 5, inst_6253, inst_6257, null);
                  var state_6262__$1 = state_6262;
                  return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_6262__$1, 2, input_chan, inst_6258);
                } else {
                  return null;
                }
              }
            };
          }(c__6061__auto___6271, ger, eng, g, e__$1);
          return function(switch__6046__auto__, c__6061__auto___6271, ger, eng, g, e__$1) {
            return function() {
              var state_machine__6047__auto__ = null;
              var state_machine__6047__auto____0 = function() {
                var statearr_6267 = [null, null, null, null, null, null, null];
                statearr_6267[0] = state_machine__6047__auto__;
                statearr_6267[1] = 1;
                return statearr_6267;
              };
              var state_machine__6047__auto____1 = function(state_6262) {
                while (true) {
                  var ret_value__6048__auto__ = function() {
                    try {
                      while (true) {
                        var result__6049__auto__ = switch__6046__auto__.call(null, state_6262);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__6049__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          continue;
                        } else {
                          return result__6049__auto__;
                        }
                        break;
                      }
                    } catch (e6268) {
                      if (e6268 instanceof Object) {
                        var ex__6050__auto__ = e6268;
                        var statearr_6269_6272 = state_6262;
                        statearr_6269_6272[5] = ex__6050__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_6262);
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        throw e6268;
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6048__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                    var G__6273 = state_6262;
                    state_6262 = G__6273;
                    continue;
                  } else {
                    return ret_value__6048__auto__;
                  }
                  break;
                }
              };
              state_machine__6047__auto__ = function(state_6262) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__6047__auto____0.call(this);
                  case 1:
                    return state_machine__6047__auto____1.call(this, state_6262);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__6047__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6047__auto____0;
              state_machine__6047__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6047__auto____1;
              return state_machine__6047__auto__;
            }();
          }(switch__6046__auto__, c__6061__auto___6271, ger, eng, g, e__$1);
        }();
        var state__6063__auto__ = function() {
          var statearr_6270 = f__6062__auto__.call(null);
          statearr_6270[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6061__auto___6271;
          return statearr_6270;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6063__auto__);
      };
    }(c__6061__auto___6271, ger, eng, g, e__$1));
    ger.value = "";
    eng.value = "";
  }
  return false;
};
speicher.render.format_entry = function format_entry(entry) {
  var pair = clojure.string.split.call(null, entry, / :: /);
  return cljs.core.map.call(null, function(pair) {
    return function(g, e) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [g, e], null);
    };
  }(pair), clojure.string.split.call(null, cljs.core.first.call(null, pair), / \|/), clojure.string.split.call(null, cljs.core.second.call(null, pair), / \|/));
};
speicher.render.format_entries = function format_entries(dict) {
  return cljs.core.map.call(null, speicher.render.format_entry, dict);
};
speicher.render.init_slider = function init_slider(state) {
  var app = (new cljs.core.Keyword(null, "f7", "f7", 356150168)).cljs$core$IFn$_invoke$arity$1(state);
  return app.swiper(".swiper-container", {"prevButton":".swiper-prev-button", "nextButton":".swiper-next-button"});
};
speicher.render.Slides = quiescent.component.call(null, function(ch, idx, word) {
  if (cljs.core.even_QMARK_.call(null, idx)) {
    return quiescent.dom.div.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "className", "className", -1983287057), "swiper-slide"], null), quiescent.dom.span.call(null, null, word));
  } else {
    return quiescent.dom.div.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "className", "className", -1983287057), "swiper-slide"], null), quiescent.dom.span.call(null, null, word), quiescent.dom.br.call(null, null), quiescent.dom.button.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "className", "className", -1983287057), "button button-big  color-green", new cljs.core.Keyword(null, "onClick", "onClick", -1991238530), function() {
      var c__6061__auto__ = cljs.core.async.chan.call(null, 1);
      cljs.core.async.impl.dispatch.run.call(null, function(c__6061__auto__) {
        return function() {
          var f__6062__auto__ = function() {
            var switch__6046__auto__ = function(c__6061__auto__) {
              return function(state_6281) {
                var state_val_6282 = state_6281[1];
                if (state_val_6282 === 2) {
                  var inst_6279 = state_6281[2];
                  var state_6281__$1 = state_6281;
                  return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_6281__$1, inst_6279);
                } else {
                  if (state_val_6282 === 1) {
                    var inst_6274 = cljs.core.PersistentVector.EMPTY_NODE;
                    var inst_6275 = cljs.core.quot.call(null, idx, 2);
                    var inst_6276 = [new cljs.core.Keyword(null, "correct", "correct", 984806334), inst_6275];
                    var inst_6277 = new cljs.core.PersistentVector(null, 2, 5, inst_6274, inst_6276, null);
                    var state_6281__$1 = state_6281;
                    return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_6281__$1, 2, ch, inst_6277);
                  } else {
                    return null;
                  }
                }
              };
            }(c__6061__auto__);
            return function(switch__6046__auto__, c__6061__auto__) {
              return function() {
                var state_machine__6047__auto__ = null;
                var state_machine__6047__auto____0 = function() {
                  var statearr_6286 = [null, null, null, null, null, null, null];
                  statearr_6286[0] = state_machine__6047__auto__;
                  statearr_6286[1] = 1;
                  return statearr_6286;
                };
                var state_machine__6047__auto____1 = function(state_6281) {
                  while (true) {
                    var ret_value__6048__auto__ = function() {
                      try {
                        while (true) {
                          var result__6049__auto__ = switch__6046__auto__.call(null, state_6281);
                          if (cljs.core.keyword_identical_QMARK_.call(null, result__6049__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                            continue;
                          } else {
                            return result__6049__auto__;
                          }
                          break;
                        }
                      } catch (e6287) {
                        if (e6287 instanceof Object) {
                          var ex__6050__auto__ = e6287;
                          var statearr_6288_6290 = state_6281;
                          statearr_6288_6290[5] = ex__6050__auto__;
                          cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_6281);
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          throw e6287;
                        }
                      }
                    }();
                    if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6048__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                      var G__6291 = state_6281;
                      state_6281 = G__6291;
                      continue;
                    } else {
                      return ret_value__6048__auto__;
                    }
                    break;
                  }
                };
                state_machine__6047__auto__ = function(state_6281) {
                  switch(arguments.length) {
                    case 0:
                      return state_machine__6047__auto____0.call(this);
                    case 1:
                      return state_machine__6047__auto____1.call(this, state_6281);
                  }
                  throw new Error("Invalid arity: " + arguments.length);
                };
                state_machine__6047__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6047__auto____0;
                state_machine__6047__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6047__auto____1;
                return state_machine__6047__auto__;
              }();
            }(switch__6046__auto__, c__6061__auto__);
          }();
          var state__6063__auto__ = function() {
            var statearr_6289 = f__6062__auto__.call(null);
            statearr_6289[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6061__auto__;
            return statearr_6289;
          }();
          return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6063__auto__);
        };
      }(c__6061__auto__));
      return c__6061__auto__;
    }], null), "I remember"));
  }
});
speicher.render.ReviewPage = quiescent.component.call(null, function(state) {
  return cljs.core.apply.call(null, quiescent.dom.div, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "className", "className", -1983287057), "swiper-wrapper"], null), cljs.core.map_indexed.call(null, function(idx, word) {
    return speicher.render.Slides.call(null, (new cljs.core.Keyword(null, "input-chan", "input-chan", -1487255360)).cljs$core$IFn$_invoke$arity$1(state), idx, word);
  }, cljs.core.flatten.call(null, cljs.core.map.call(null, function(x) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.first.call(null, x), cljs.core.second.call(null, x)], null);
  }, (new cljs.core.Keyword(null, "words", "words", 1924933001)).cljs$core$IFn$_invoke$arity$1(state)))));
});
speicher.render.SearchTableRow = quiescent.component.call(null, function(id, top_QMARK_, g, e) {
  return quiescent.dom.li.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "className", "className", -1983287057), "accordion-item"], null), quiescent.dom.div.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "className", "className", -1983287057), "item-content"], null), quiescent.dom.div.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "className", "className", -1983287057), "item-inner"], null), quiescent.dom.div.call(null, 
  new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "className", "className", -1983287057), "item-title"], null), g), quiescent.dom.div.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "className", "className", -1983287057), "item-after"], null), e))));
});
speicher.render.SearchPage = quiescent.component.call(null, function(p__6292) {
  var map__6293 = p__6292;
  var map__6293__$1 = cljs.core.seq_QMARK_.call(null, map__6293) ? cljs.core.apply.call(null, cljs.core.hash_map, map__6293) : map__6293;
  var dictionary = cljs.core.get.call(null, map__6293__$1, new cljs.core.Keyword(null, "dictionary", "dictionary", -2013643865));
  var input_chan = cljs.core.get.call(null, map__6293__$1, new cljs.core.Keyword(null, "input-chan", "input-chan", -1487255360));
  var handle_search = cljs.core.partial.call(null, speicher.render.handle_search_submit, input_chan);
  var handle_new_word = cljs.core.partial.call(null, speicher.render.handle_new_word_submit, input_chan);
  return quiescent.dom.div.call(null, null, speicher.render.Nav.call(null, "Enter German Word"), quiescent.dom.form.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "className", "className", -1983287057), "searchbar", new cljs.core.Keyword(null, "onSubmit", "onSubmit", 761425194), handle_search], null), quiescent.dom.div.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "className", "className", -1983287057), "searchbar-input"], null), 
  quiescent.dom.input.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), "search", new cljs.core.Keyword(null, "name", "name", 1843675177), "search", new cljs.core.Keyword(null, "id", "id", -1388402092), "term", new cljs.core.Keyword(null, "placeholder", "placeholder", -104873083), "Search"], null)), quiescent.dom.a.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "href", "href", -793805698), "#", new cljs.core.Keyword(null, 
  "className", "className", -1983287057), "searchbar-clear"], null))), quiescent.dom.button.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "type", "type", 1174270348), "submit", new cljs.core.Keyword(null, "className", "className", -1983287057), "button button-round"], null), "\x3e")), cljs.core.truth_(dictionary) ? quiescent.dom.div.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "className", "className", -1983287057), "page-content"], 
  null), quiescent.dom.div.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "className", "className", -1983287057), "accordion-item list-block"], null), cljs.core.apply.call(null, quiescent.dom.ul, cljs.core.PersistentArrayMap.EMPTY, cljs.core.map_indexed.call(null, function(handle_search, handle_new_word, map__6293, map__6293__$1, dictionary, input_chan) {
    return function(ind, entry) {
      cljs.core.println.call(null, "Search Page", entry);
      return speicher.render.SearchTableRow.call(null, ind, null, cljs.core.ffirst.call(null, entry), cljs.core.second.call(null, cljs.core.first.call(null, entry)));
    };
  }(handle_search, handle_new_word, map__6293, map__6293__$1, dictionary, input_chan), speicher.render.format_entries.call(null, dictionary))))) : null);
});
speicher.render.NextPage = quiescent.component.call(null, function(state) {
  return quiescent.dom.h3.call(null, null, "Choose another list");
});
speicher.render.Link = quiescent.component.call(null, function(state) {
  return quiescent.dom.a.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "className", "className", -1983287057), "link", new cljs.core.Keyword(null, "onClick", "onClick", -1991238530), function() {
    var c__6061__auto__ = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__6061__auto__) {
      return function() {
        var f__6062__auto__ = function() {
          var switch__6046__auto__ = function(c__6061__auto__) {
            return function(state_6304) {
              var state_val_6305 = state_6304[1];
              if (state_val_6305 === 2) {
                var inst_6302 = state_6304[2];
                var state_6304__$1 = function() {
                  var statearr_6306 = state_6304;
                  statearr_6306[7] = inst_6302;
                  return statearr_6306;
                }();
                return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_6304__$1, false);
              } else {
                if (state_val_6305 === 1) {
                  var inst_6294 = (new cljs.core.Keyword(null, "main-view", "main-view", 343997885)).cljs$core$IFn$_invoke$arity$1(state);
                  var inst_6295 = (new cljs.core.Keyword(null, "input-chan", "input-chan", -1487255360)).cljs$core$IFn$_invoke$arity$1(state);
                  var inst_6296 = inst_6294.router;
                  var inst_6297 = inst_6296.loadPage("review.html");
                  var inst_6298 = cljs.core.PersistentVector.EMPTY_NODE;
                  var inst_6299 = [new cljs.core.Keyword(null, "show-list", "show-list", -483536849), new cljs.core.Keyword(null, "daily", "daily", -697831483)];
                  var inst_6300 = new cljs.core.PersistentVector(null, 2, 5, inst_6298, inst_6299, null);
                  var state_6304__$1 = function() {
                    var statearr_6307 = state_6304;
                    statearr_6307[8] = inst_6297;
                    return statearr_6307;
                  }();
                  return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_6304__$1, 2, inst_6295, inst_6300);
                } else {
                  return null;
                }
              }
            };
          }(c__6061__auto__);
          return function(switch__6046__auto__, c__6061__auto__) {
            return function() {
              var state_machine__6047__auto__ = null;
              var state_machine__6047__auto____0 = function() {
                var statearr_6311 = [null, null, null, null, null, null, null, null, null];
                statearr_6311[0] = state_machine__6047__auto__;
                statearr_6311[1] = 1;
                return statearr_6311;
              };
              var state_machine__6047__auto____1 = function(state_6304) {
                while (true) {
                  var ret_value__6048__auto__ = function() {
                    try {
                      while (true) {
                        var result__6049__auto__ = switch__6046__auto__.call(null, state_6304);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__6049__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          continue;
                        } else {
                          return result__6049__auto__;
                        }
                        break;
                      }
                    } catch (e6312) {
                      if (e6312 instanceof Object) {
                        var ex__6050__auto__ = e6312;
                        var statearr_6313_6315 = state_6304;
                        statearr_6313_6315[5] = ex__6050__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_6304);
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        throw e6312;
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6048__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                    var G__6316 = state_6304;
                    state_6304 = G__6316;
                    continue;
                  } else {
                    return ret_value__6048__auto__;
                  }
                  break;
                }
              };
              state_machine__6047__auto__ = function(state_6304) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__6047__auto____0.call(this);
                  case 1:
                    return state_machine__6047__auto____1.call(this, state_6304);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__6047__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6047__auto____0;
              state_machine__6047__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6047__auto____1;
              return state_machine__6047__auto__;
            }();
          }(switch__6046__auto__, c__6061__auto__);
        }();
        var state__6063__auto__ = function() {
          var statearr_6314 = f__6062__auto__.call(null);
          statearr_6314[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6061__auto__;
          return statearr_6314;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6063__auto__);
      };
    }(c__6061__auto__));
    return c__6061__auto__;
  }], null), "Show List ");
});
speicher.render.Popup = quiescent.component.call(null, function(p__6317) {
  var map__6318 = p__6317;
  var map__6318__$1 = cljs.core.seq_QMARK_.call(null, map__6318) ? cljs.core.apply.call(null, cljs.core.hash_map, map__6318) : map__6318;
  var ch = cljs.core.get.call(null, map__6318__$1, new cljs.core.Keyword(null, "input-chan", "input-chan", -1487255360));
  var handle_enter_word = cljs.core.partial.call(null, speicher.render.handle_enter_word_submit, ch);
  return quiescent.dom.div.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "className", "className", -1983287057), "popup popup-add"], null), quiescent.dom.div.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "className", "className", -1983287057), "content-block"], null), quiescent.dom.div.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "className", "className", -1983287057), "content-block-title"], 
  null), "Add Words"), quiescent.dom.div.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "className", "className", -1983287057), "list-block"], null), quiescent.dom.form.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "onSubmit", "onSubmit", 761425194), handle_enter_word, new cljs.core.Keyword(null, "name", "name", 1843675177), "new-word"], null), quiescent.dom.ul.call(null, null, quiescent.dom.li.call(null, null, quiescent.dom.div.call(null, 
  new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "className", "className", -1983287057), "item-content"], null), quiescent.dom.div.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "className", "className", -1983287057), "item-inner"], null), quiescent.dom.div.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "className", "className", -1983287057), "item-input"], null), quiescent.dom.input.call(null, new cljs.core.PersistentArrayMap(null, 
  4, [new cljs.core.Keyword(null, "type", "type", 1174270348), "text", new cljs.core.Keyword(null, "placeholder", "placeholder", -104873083), "German Word", new cljs.core.Keyword(null, "name", "name", 1843675177), "ger", new cljs.core.Keyword(null, "id", "id", -1388402092), "ger"], null)))))), quiescent.dom.li.call(null, null, quiescent.dom.div.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "className", "className", -1983287057), "item-content"], null), quiescent.dom.div.call(null, 
  new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "className", "className", -1983287057), "item-inner"], null), quiescent.dom.div.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "className", "className", -1983287057), "item-input"], null), quiescent.dom.input.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), "text", new cljs.core.Keyword(null, "placeholder", "placeholder", -104873083), 
  "English Word", new cljs.core.Keyword(null, "name", "name", 1843675177), "eng", new cljs.core.Keyword(null, "id", "id", -1388402092), "eng"], null))))))), quiescent.dom.div.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "className", "className", -1983287057), "content-block"], null), quiescent.dom.div.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "className", "className", -1983287057), "row"], null), quiescent.dom.div.call(null, 
  new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "className", "className", -1983287057), "col-50"], null), quiescent.dom.a.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "href", "href", -793805698), "#", new cljs.core.Keyword(null, "className", "className", -1983287057), "button button-big button-fill color-red close-popup"], null), "Cancel")), quiescent.dom.div.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
  "className", "className", -1983287057), "col-50"], null), quiescent.dom.input.call(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "type", "type", 1174270348), "submit", new cljs.core.Keyword(null, "value", "value", 305978217), "Submit", new cljs.core.Keyword(null, "className", "className", -1983287057), "close-popup button button-big button-fill color-green"], null)))))))));
});
speicher.render.HomePage = quiescent.component.call(null, function(p__6319) {
  var map__6320 = p__6319;
  var map__6320__$1 = cljs.core.seq_QMARK_.call(null, map__6320) ? cljs.core.apply.call(null, cljs.core.hash_map, map__6320) : map__6320;
  var main_view = cljs.core.get.call(null, map__6320__$1, new cljs.core.Keyword(null, "main-view", "main-view", 343997885));
  var input_chan = cljs.core.get.call(null, map__6320__$1, new cljs.core.Keyword(null, "input-chan", "input-chan", -1487255360));
  var load_page = function(map__6320, map__6320__$1, main_view, input_chan) {
    return function load_page(file) {
      return main_view.router.loadPage(file);
    };
  }(map__6320, map__6320__$1, main_view, input_chan);
  return quiescent.dom.div.call(null, null, quiescent.dom.div.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "className", "className", -1983287057), "content-block-title"], null), "What would you like to do?"), quiescent.dom.div.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "className", "className", -1983287057), "list-block"], null), quiescent.dom.ul.call(null, null, quiescent.dom.li.call(null, null, quiescent.dom.a.call(null, 
  new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "href", "href", -793805698), "#", new cljs.core.Keyword(null, "className", "className", -1983287057), "item-link", new cljs.core.Keyword(null, "onClick", "onClick", -1991238530), function(map__6320, map__6320__$1, main_view, input_chan) {
    return function() {
      var c__6061__auto__ = cljs.core.async.chan.call(null, 1);
      cljs.core.async.impl.dispatch.run.call(null, function(c__6061__auto__, map__6320, map__6320__$1, main_view, input_chan) {
        return function() {
          var f__6062__auto__ = function() {
            var switch__6046__auto__ = function(c__6061__auto__, map__6320, map__6320__$1, main_view, input_chan) {
              return function(state_6328) {
                var state_val_6329 = state_6328[1];
                if (state_val_6329 === 2) {
                  var inst_6326 = state_6328[2];
                  var state_6328__$1 = state_6328;
                  return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_6328__$1, inst_6326);
                } else {
                  if (state_val_6329 === 1) {
                    var inst_6321 = load_page.call(null, "review.html");
                    var inst_6322 = cljs.core.PersistentVector.EMPTY_NODE;
                    var inst_6323 = [new cljs.core.Keyword(null, "show-list", "show-list", -483536849), new cljs.core.Keyword(null, "daily", "daily", -697831483)];
                    var inst_6324 = new cljs.core.PersistentVector(null, 2, 5, inst_6322, inst_6323, null);
                    var state_6328__$1 = function() {
                      var statearr_6330 = state_6328;
                      statearr_6330[7] = inst_6321;
                      return statearr_6330;
                    }();
                    return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_6328__$1, 2, input_chan, inst_6324);
                  } else {
                    return null;
                  }
                }
              };
            }(c__6061__auto__, map__6320, map__6320__$1, main_view, input_chan);
            return function(switch__6046__auto__, c__6061__auto__, map__6320, map__6320__$1, main_view, input_chan) {
              return function() {
                var state_machine__6047__auto__ = null;
                var state_machine__6047__auto____0 = function() {
                  var statearr_6334 = [null, null, null, null, null, null, null, null];
                  statearr_6334[0] = state_machine__6047__auto__;
                  statearr_6334[1] = 1;
                  return statearr_6334;
                };
                var state_machine__6047__auto____1 = function(state_6328) {
                  while (true) {
                    var ret_value__6048__auto__ = function() {
                      try {
                        while (true) {
                          var result__6049__auto__ = switch__6046__auto__.call(null, state_6328);
                          if (cljs.core.keyword_identical_QMARK_.call(null, result__6049__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                            continue;
                          } else {
                            return result__6049__auto__;
                          }
                          break;
                        }
                      } catch (e6335) {
                        if (e6335 instanceof Object) {
                          var ex__6050__auto__ = e6335;
                          var statearr_6336_6366 = state_6328;
                          statearr_6336_6366[5] = ex__6050__auto__;
                          cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_6328);
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          throw e6335;
                        }
                      }
                    }();
                    if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6048__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                      var G__6367 = state_6328;
                      state_6328 = G__6367;
                      continue;
                    } else {
                      return ret_value__6048__auto__;
                    }
                    break;
                  }
                };
                state_machine__6047__auto__ = function(state_6328) {
                  switch(arguments.length) {
                    case 0:
                      return state_machine__6047__auto____0.call(this);
                    case 1:
                      return state_machine__6047__auto____1.call(this, state_6328);
                  }
                  throw new Error("Invalid arity: " + arguments.length);
                };
                state_machine__6047__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6047__auto____0;
                state_machine__6047__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6047__auto____1;
                return state_machine__6047__auto__;
              }();
            }(switch__6046__auto__, c__6061__auto__, map__6320, map__6320__$1, main_view, input_chan);
          }();
          var state__6063__auto__ = function() {
            var statearr_6337 = f__6062__auto__.call(null);
            statearr_6337[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6061__auto__;
            return statearr_6337;
          }();
          return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6063__auto__);
        };
      }(c__6061__auto__, map__6320, map__6320__$1, main_view, input_chan));
      return c__6061__auto__;
    };
  }(map__6320, map__6320__$1, main_view, input_chan)], null), quiescent.dom.div.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "className", "className", -1983287057), "item-content"], null), quiescent.dom.div.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "className", "className", -1983287057), "item-inner"], null), quiescent.dom.div.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "className", 
  "className", -1983287057), "item-title"], null), "Review Daily List"))))), quiescent.dom.li.call(null, null, quiescent.dom.a.call(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "href", "href", -793805698), "#", new cljs.core.Keyword(null, "className", "className", -1983287057), "item-link", new cljs.core.Keyword(null, "onClick", "onClick", -1991238530), function(map__6320, map__6320__$1, main_view, input_chan) {
    return function() {
      var c__6061__auto__ = cljs.core.async.chan.call(null, 1);
      cljs.core.async.impl.dispatch.run.call(null, function(c__6061__auto__, map__6320, map__6320__$1, main_view, input_chan) {
        return function() {
          var f__6062__auto__ = function() {
            var switch__6046__auto__ = function(c__6061__auto__, map__6320, map__6320__$1, main_view, input_chan) {
              return function(state_6345) {
                var state_val_6346 = state_6345[1];
                if (state_val_6346 === 2) {
                  var inst_6343 = state_6345[2];
                  var state_6345__$1 = state_6345;
                  return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_6345__$1, inst_6343);
                } else {
                  if (state_val_6346 === 1) {
                    var inst_6338 = load_page.call(null, "review.html");
                    var inst_6339 = cljs.core.PersistentVector.EMPTY_NODE;
                    var inst_6340 = [new cljs.core.Keyword(null, "show-list", "show-list", -483536849), new cljs.core.Keyword(null, "weekly", "weekly", 319200344)];
                    var inst_6341 = new cljs.core.PersistentVector(null, 2, 5, inst_6339, inst_6340, null);
                    var state_6345__$1 = function() {
                      var statearr_6347 = state_6345;
                      statearr_6347[7] = inst_6338;
                      return statearr_6347;
                    }();
                    return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_6345__$1, 2, input_chan, inst_6341);
                  } else {
                    return null;
                  }
                }
              };
            }(c__6061__auto__, map__6320, map__6320__$1, main_view, input_chan);
            return function(switch__6046__auto__, c__6061__auto__, map__6320, map__6320__$1, main_view, input_chan) {
              return function() {
                var state_machine__6047__auto__ = null;
                var state_machine__6047__auto____0 = function() {
                  var statearr_6351 = [null, null, null, null, null, null, null, null];
                  statearr_6351[0] = state_machine__6047__auto__;
                  statearr_6351[1] = 1;
                  return statearr_6351;
                };
                var state_machine__6047__auto____1 = function(state_6345) {
                  while (true) {
                    var ret_value__6048__auto__ = function() {
                      try {
                        while (true) {
                          var result__6049__auto__ = switch__6046__auto__.call(null, state_6345);
                          if (cljs.core.keyword_identical_QMARK_.call(null, result__6049__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                            continue;
                          } else {
                            return result__6049__auto__;
                          }
                          break;
                        }
                      } catch (e6352) {
                        if (e6352 instanceof Object) {
                          var ex__6050__auto__ = e6352;
                          var statearr_6353_6368 = state_6345;
                          statearr_6353_6368[5] = ex__6050__auto__;
                          cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_6345);
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          throw e6352;
                        }
                      }
                    }();
                    if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6048__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                      var G__6369 = state_6345;
                      state_6345 = G__6369;
                      continue;
                    } else {
                      return ret_value__6048__auto__;
                    }
                    break;
                  }
                };
                state_machine__6047__auto__ = function(state_6345) {
                  switch(arguments.length) {
                    case 0:
                      return state_machine__6047__auto____0.call(this);
                    case 1:
                      return state_machine__6047__auto____1.call(this, state_6345);
                  }
                  throw new Error("Invalid arity: " + arguments.length);
                };
                state_machine__6047__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6047__auto____0;
                state_machine__6047__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6047__auto____1;
                return state_machine__6047__auto__;
              }();
            }(switch__6046__auto__, c__6061__auto__, map__6320, map__6320__$1, main_view, input_chan);
          }();
          var state__6063__auto__ = function() {
            var statearr_6354 = f__6062__auto__.call(null);
            statearr_6354[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6061__auto__;
            return statearr_6354;
          }();
          return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6063__auto__);
        };
      }(c__6061__auto__, map__6320, map__6320__$1, main_view, input_chan));
      return c__6061__auto__;
    };
  }(map__6320, map__6320__$1, main_view, input_chan)], null), quiescent.dom.div.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "className", "className", -1983287057), "item-content"], null), quiescent.dom.div.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "className", "className", -1983287057), "item-inner"], null), quiescent.dom.div.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "className", 
  "className", -1983287057), "item-title"], null), "Review Weekly List"))))), quiescent.dom.li.call(null, null, quiescent.dom.a.call(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "href", "href", -793805698), "#", new cljs.core.Keyword(null, "className", "className", -1983287057), "item-link", new cljs.core.Keyword(null, "onClick", "onClick", -1991238530), function(map__6320, map__6320__$1, main_view, input_chan) {
    return function() {
      var c__6061__auto__ = cljs.core.async.chan.call(null, 1);
      cljs.core.async.impl.dispatch.run.call(null, function(c__6061__auto__, map__6320, map__6320__$1, main_view, input_chan) {
        return function() {
          var f__6062__auto__ = function() {
            var switch__6046__auto__ = function(c__6061__auto__, map__6320, map__6320__$1, main_view, input_chan) {
              return function(state_6357) {
                var state_val_6358 = state_6357[1];
                if (state_val_6358 === 1) {
                  var inst_6355 = load_page.call(null, "search.html");
                  var state_6357__$1 = state_6357;
                  return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_6357__$1, inst_6355);
                } else {
                  return null;
                }
              };
            }(c__6061__auto__, map__6320, map__6320__$1, main_view, input_chan);
            return function(switch__6046__auto__, c__6061__auto__, map__6320, map__6320__$1, main_view, input_chan) {
              return function() {
                var state_machine__6047__auto__ = null;
                var state_machine__6047__auto____0 = function() {
                  var statearr_6362 = [null, null, null, null, null, null, null];
                  statearr_6362[0] = state_machine__6047__auto__;
                  statearr_6362[1] = 1;
                  return statearr_6362;
                };
                var state_machine__6047__auto____1 = function(state_6357) {
                  while (true) {
                    var ret_value__6048__auto__ = function() {
                      try {
                        while (true) {
                          var result__6049__auto__ = switch__6046__auto__.call(null, state_6357);
                          if (cljs.core.keyword_identical_QMARK_.call(null, result__6049__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                            continue;
                          } else {
                            return result__6049__auto__;
                          }
                          break;
                        }
                      } catch (e6363) {
                        if (e6363 instanceof Object) {
                          var ex__6050__auto__ = e6363;
                          var statearr_6364_6370 = state_6357;
                          statearr_6364_6370[5] = ex__6050__auto__;
                          cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_6357);
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          throw e6363;
                        }
                      }
                    }();
                    if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6048__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                      var G__6371 = state_6357;
                      state_6357 = G__6371;
                      continue;
                    } else {
                      return ret_value__6048__auto__;
                    }
                    break;
                  }
                };
                state_machine__6047__auto__ = function(state_6357) {
                  switch(arguments.length) {
                    case 0:
                      return state_machine__6047__auto____0.call(this);
                    case 1:
                      return state_machine__6047__auto____1.call(this, state_6357);
                  }
                  throw new Error("Invalid arity: " + arguments.length);
                };
                state_machine__6047__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6047__auto____0;
                state_machine__6047__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6047__auto____1;
                return state_machine__6047__auto__;
              }();
            }(switch__6046__auto__, c__6061__auto__, map__6320, map__6320__$1, main_view, input_chan);
          }();
          var state__6063__auto__ = function() {
            var statearr_6365 = f__6062__auto__.call(null);
            statearr_6365[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6061__auto__;
            return statearr_6365;
          }();
          return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6063__auto__);
        };
      }(c__6061__auto__, map__6320, map__6320__$1, main_view, input_chan));
      return c__6061__auto__;
    };
  }(map__6320, map__6320__$1, main_view, input_chan)], null), quiescent.dom.div.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "className", "className", -1983287057), "item-content"], null), quiescent.dom.div.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "className", "className", -1983287057), "item-inner"], null), quiescent.dom.div.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "className", 
  "className", -1983287057), "item-title"], null), "Look up new word in Dictionary"))))), quiescent.dom.li.call(null, null, quiescent.dom.a.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "href", "href", -793805698), "#", new cljs.core.Keyword(null, "className", "className", -1983287057), "item-link"], null), quiescent.dom.div.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "className", "className", -1983287057), "item-content"], 
  null), quiescent.dom.div.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "className", "className", -1983287057), "item-inner"], null), quiescent.dom.div.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "className", "className", -1983287057), "item-title"], null), "Enter new word and definition"))))))));
});
speicher.render.Page = quiescent.component.call(null, function(state) {
  return quiescent.dom.div.call(null, cljs.core.PersistentArrayMap.EMPTY, function() {
    var pred__6372 = cljs.core._EQ_;
    var expr__6373 = (new cljs.core.Keyword(null, "mode", "mode", 654403691)).cljs$core$IFn$_invoke$arity$1(state);
    if (cljs.core.truth_(pred__6372.call(null, new cljs.core.Keyword(null, "review-list", "review-list", -2126749986), expr__6373))) {
      return speicher.render.ReviewPage.call(null, state);
    } else {
      if (cljs.core.truth_(pred__6372.call(null, new cljs.core.Keyword(null, "next", "next", -117701485), expr__6373))) {
        return speicher.render.NextPage.call(null, state);
      } else {
        if (cljs.core.truth_(pred__6372.call(null, new cljs.core.Keyword(null, "search-page", "search-page", -705609891), expr__6373))) {
          return speicher.render.SearchPage.call(null, state);
        } else {
          return speicher.render.WordList.call(null, state, (new cljs.core.Keyword(null, "input-chan", "input-chan", -1487255360)).cljs$core$IFn$_invoke$arity$1(state));
        }
      }
    }
  }());
});
var render_pending_QMARK__6413 = cljs.core.atom.call(null, false);
speicher.render.request_render = function(render_pending_QMARK__6413) {
  return function request_render(state) {
    if (cljs.core.compare_and_set_BANG_.call(null, render_pending_QMARK__6413, false, true)) {
      window.requestAnimationFrame(function(render_pending_QMARK__6413) {
        return function() {
          var temp__4126__auto___6414 = document.getElementById("popup");
          if (cljs.core.truth_(temp__4126__auto___6414)) {
            var el_6415 = temp__4126__auto___6414;
            quiescent.render.call(null, speicher.render.Popup.call(null, state), el_6415);
          } else {
          }
          var pred__6394 = cljs.core._EQ_;
          var expr__6395 = (new cljs.core.Keyword(null, "mode", "mode", 654403691)).cljs$core$IFn$_invoke$arity$1(state);
          if (cljs.core.truth_(pred__6394.call(null, new cljs.core.Keyword(null, "show-list", "show-list", -483536849), expr__6395))) {
            return quiescent.render.call(null, speicher.render.WordList.call(null, state), document.getElementById("show-page"));
          } else {
            if (cljs.core.truth_(pred__6394.call(null, new cljs.core.Keyword(null, "review-list", "review-list", -2126749986), expr__6395))) {
              quiescent.render.call(null, speicher.render.ReviewPage.call(null, state), document.getElementById("swiper"));
              if (cljs.core.truth_(function() {
                var and__3817__auto__ = (new cljs.core.Keyword(null, "words", "words", 1924933001)).cljs$core$IFn$_invoke$arity$1(state);
                if (cljs.core.truth_(and__3817__auto__)) {
                  return(new cljs.core.Keyword(null, "swiper-init?", "swiper-init?", 65165134)).cljs$core$IFn$_invoke$arity$1(state) === false;
                } else {
                  return and__3817__auto__;
                }
              }())) {
                var c__6061__auto__ = cljs.core.async.chan.call(null, 1);
                cljs.core.async.impl.dispatch.run.call(null, function(c__6061__auto__, pred__6394, expr__6395, render_pending_QMARK__6413) {
                  return function() {
                    var f__6062__auto__ = function() {
                      var switch__6046__auto__ = function(c__6061__auto__, pred__6394, expr__6395, render_pending_QMARK__6413) {
                        return function(state_6404) {
                          var state_val_6405 = state_6404[1];
                          if (state_val_6405 === 2) {
                            var inst_6402 = state_6404[2];
                            var state_6404__$1 = state_6404;
                            return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_6404__$1, inst_6402);
                          } else {
                            if (state_val_6405 === 1) {
                              var inst_6397 = (new cljs.core.Keyword(null, "input-chan", "input-chan", -1487255360)).cljs$core$IFn$_invoke$arity$1(state);
                              var inst_6398 = cljs.core.PersistentVector.EMPTY_NODE;
                              var inst_6399 = [new cljs.core.Keyword(null, "init-swiper", "init-swiper", 998548847), null];
                              var inst_6400 = new cljs.core.PersistentVector(null, 2, 5, inst_6398, inst_6399, null);
                              var state_6404__$1 = state_6404;
                              return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_6404__$1, 2, inst_6397, inst_6400);
                            } else {
                              return null;
                            }
                          }
                        };
                      }(c__6061__auto__, pred__6394, expr__6395, render_pending_QMARK__6413);
                      return function(switch__6046__auto__, c__6061__auto__, pred__6394, expr__6395, render_pending_QMARK__6413) {
                        return function() {
                          var state_machine__6047__auto__ = null;
                          var state_machine__6047__auto____0 = function() {
                            var statearr_6409 = [null, null, null, null, null, null, null];
                            statearr_6409[0] = state_machine__6047__auto__;
                            statearr_6409[1] = 1;
                            return statearr_6409;
                          };
                          var state_machine__6047__auto____1 = function(state_6404) {
                            while (true) {
                              var ret_value__6048__auto__ = function() {
                                try {
                                  while (true) {
                                    var result__6049__auto__ = switch__6046__auto__.call(null, state_6404);
                                    if (cljs.core.keyword_identical_QMARK_.call(null, result__6049__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                                      continue;
                                    } else {
                                      return result__6049__auto__;
                                    }
                                    break;
                                  }
                                } catch (e6410) {
                                  if (e6410 instanceof Object) {
                                    var ex__6050__auto__ = e6410;
                                    var statearr_6411_6416 = state_6404;
                                    statearr_6411_6416[5] = ex__6050__auto__;
                                    cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_6404);
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    throw e6410;
                                  }
                                }
                              }();
                              if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6048__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                                var G__6417 = state_6404;
                                state_6404 = G__6417;
                                continue;
                              } else {
                                return ret_value__6048__auto__;
                              }
                              break;
                            }
                          };
                          state_machine__6047__auto__ = function(state_6404) {
                            switch(arguments.length) {
                              case 0:
                                return state_machine__6047__auto____0.call(this);
                              case 1:
                                return state_machine__6047__auto____1.call(this, state_6404);
                            }
                            throw new Error("Invalid arity: " + arguments.length);
                          };
                          state_machine__6047__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6047__auto____0;
                          state_machine__6047__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6047__auto____1;
                          return state_machine__6047__auto__;
                        }();
                      }(switch__6046__auto__, c__6061__auto__, pred__6394, expr__6395, render_pending_QMARK__6413);
                    }();
                    var state__6063__auto__ = function() {
                      var statearr_6412 = f__6062__auto__.call(null);
                      statearr_6412[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6061__auto__;
                      return statearr_6412;
                    }();
                    return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6063__auto__);
                  };
                }(c__6061__auto__, pred__6394, expr__6395, render_pending_QMARK__6413));
                return c__6061__auto__;
              } else {
                return null;
              }
            } else {
              if (cljs.core.truth_(pred__6394.call(null, new cljs.core.Keyword(null, "search-page", "search-page", -705609891), expr__6395))) {
                return quiescent.render.call(null, speicher.render.SearchPage.call(null, state), document.getElementById("search-page"));
              } else {
                if (cljs.core.truth_(pred__6394.call(null, new cljs.core.Keyword(null, "next", "next", -117701485), expr__6395))) {
                  return speicher.render.NextPage.call(null, state);
                } else {
                  if (cljs.core.truth_(pred__6394.call(null, new cljs.core.Keyword(null, "start", "start", -355208981), expr__6395))) {
                    return speicher.render.WordList.call(null, state, (new cljs.core.Keyword(null, "input-chan", "input-chan", -1487255360)).cljs$core$IFn$_invoke$arity$1(state), document.getElementById("nav-options"));
                  } else {
                    throw new Error([cljs.core.str("No matching clause: "), cljs.core.str(expr__6395)].join(""));
                  }
                }
              }
            }
          }
        };
      }(render_pending_QMARK__6413));
      return cljs.core.reset_BANG_.call(null, render_pending_QMARK__6413, false);
    } else {
      return null;
    }
  };
}(render_pending_QMARK__6413);
goog.provide("goog.disposable.IDisposable");
goog.disposable.IDisposable = function() {
};
goog.disposable.IDisposable.prototype.dispose = goog.abstractMethod;
goog.disposable.IDisposable.prototype.isDisposed = goog.abstractMethod;
goog.provide("goog.Disposable");
goog.provide("goog.dispose");
goog.provide("goog.disposeAll");
goog.require("goog.disposable.IDisposable");
goog.Disposable = function() {
  if (goog.Disposable.MONITORING_MODE != goog.Disposable.MonitoringMode.OFF) {
    if (goog.Disposable.INCLUDE_STACK_ON_CREATION) {
      this.creationStack = (new Error).stack;
    }
    goog.Disposable.instances_[goog.getUid(this)] = this;
  }
};
goog.Disposable.MonitoringMode = {OFF:0, PERMANENT:1, INTERACTIVE:2};
goog.define("goog.Disposable.MONITORING_MODE", 0);
goog.define("goog.Disposable.INCLUDE_STACK_ON_CREATION", true);
goog.Disposable.instances_ = {};
goog.Disposable.getUndisposedObjects = function() {
  var ret = [];
  for (var id in goog.Disposable.instances_) {
    if (goog.Disposable.instances_.hasOwnProperty(id)) {
      ret.push(goog.Disposable.instances_[Number(id)]);
    }
  }
  return ret;
};
goog.Disposable.clearUndisposedObjects = function() {
  goog.Disposable.instances_ = {};
};
goog.Disposable.prototype.disposed_ = false;
goog.Disposable.prototype.onDisposeCallbacks_;
goog.Disposable.prototype.creationStack;
goog.Disposable.prototype.isDisposed = function() {
  return this.disposed_;
};
goog.Disposable.prototype.getDisposed = goog.Disposable.prototype.isDisposed;
goog.Disposable.prototype.dispose = function() {
  if (!this.disposed_) {
    this.disposed_ = true;
    this.disposeInternal();
    if (goog.Disposable.MONITORING_MODE != goog.Disposable.MonitoringMode.OFF) {
      var uid = goog.getUid(this);
      if (goog.Disposable.MONITORING_MODE == goog.Disposable.MonitoringMode.PERMANENT && !goog.Disposable.instances_.hasOwnProperty(uid)) {
        throw Error(this + " did not call the goog.Disposable base " + "constructor or was disposed of after a clearUndisposedObjects " + "call");
      }
      delete goog.Disposable.instances_[uid];
    }
  }
};
goog.Disposable.prototype.registerDisposable = function(disposable) {
  this.addOnDisposeCallback(goog.partial(goog.dispose, disposable));
};
goog.Disposable.prototype.addOnDisposeCallback = function(callback, opt_scope) {
  if (!this.onDisposeCallbacks_) {
    this.onDisposeCallbacks_ = [];
  }
  this.onDisposeCallbacks_.push(goog.isDef(opt_scope) ? goog.bind(callback, opt_scope) : callback);
};
goog.Disposable.prototype.disposeInternal = function() {
  if (this.onDisposeCallbacks_) {
    while (this.onDisposeCallbacks_.length) {
      this.onDisposeCallbacks_.shift()();
    }
  }
};
goog.Disposable.isDisposed = function(obj) {
  if (obj && typeof obj.isDisposed == "function") {
    return obj.isDisposed();
  }
  return false;
};
goog.dispose = function(obj) {
  if (obj && typeof obj.dispose == "function") {
    obj.dispose();
  }
};
goog.disposeAll = function(var_args) {
  for (var i = 0, len = arguments.length;i < len;++i) {
    var disposable = arguments[i];
    if (goog.isArrayLike(disposable)) {
      goog.disposeAll.apply(null, disposable);
    } else {
      goog.dispose(disposable);
    }
  }
};
goog.provide("goog.labs.userAgent.util");
goog.require("goog.string");
goog.labs.userAgent.util.getNativeUserAgentString_ = function() {
  var navigator = goog.labs.userAgent.util.getNavigator_();
  if (navigator) {
    var userAgent = navigator.userAgent;
    if (userAgent) {
      return userAgent;
    }
  }
  return "";
};
goog.labs.userAgent.util.getNavigator_ = function() {
  return goog.global.navigator;
};
goog.labs.userAgent.util.userAgent_ = goog.labs.userAgent.util.getNativeUserAgentString_();
goog.labs.userAgent.util.setUserAgent = function(opt_userAgent) {
  goog.labs.userAgent.util.userAgent_ = opt_userAgent || goog.labs.userAgent.util.getNativeUserAgentString_();
};
goog.labs.userAgent.util.getUserAgent = function() {
  return goog.labs.userAgent.util.userAgent_;
};
goog.labs.userAgent.util.matchUserAgent = function(str) {
  var userAgent = goog.labs.userAgent.util.getUserAgent();
  return goog.string.contains(userAgent, str);
};
goog.labs.userAgent.util.matchUserAgentIgnoreCase = function(str) {
  var userAgent = goog.labs.userAgent.util.getUserAgent();
  return goog.string.caseInsensitiveContains(userAgent, str);
};
goog.labs.userAgent.util.extractVersionTuples = function(userAgent) {
  var versionRegExp = new RegExp("(\\w[\\w ]+)" + "/" + "([^\\s]+)" + "\\s*" + "(?:\\((.*?)\\))?", "g");
  var data = [];
  var match;
  while (match = versionRegExp.exec(userAgent)) {
    data.push([match[1], match[2], match[3] || undefined]);
  }
  return data;
};
goog.provide("goog.labs.userAgent.browser");
goog.require("goog.array");
goog.require("goog.asserts");
goog.require("goog.labs.userAgent.util");
goog.require("goog.string");
goog.labs.userAgent.browser.matchOpera_ = function() {
  return goog.labs.userAgent.util.matchUserAgent("Opera") || goog.labs.userAgent.util.matchUserAgent("OPR");
};
goog.labs.userAgent.browser.matchIE_ = function() {
  return goog.labs.userAgent.util.matchUserAgent("Trident") || goog.labs.userAgent.util.matchUserAgent("MSIE");
};
goog.labs.userAgent.browser.matchFirefox_ = function() {
  return goog.labs.userAgent.util.matchUserAgent("Firefox");
};
goog.labs.userAgent.browser.matchSafari_ = function() {
  return goog.labs.userAgent.util.matchUserAgent("Safari") && !goog.labs.userAgent.util.matchUserAgent("Chrome") && !goog.labs.userAgent.util.matchUserAgent("CriOS") && !goog.labs.userAgent.util.matchUserAgent("Android");
};
goog.labs.userAgent.browser.matchChrome_ = function() {
  return goog.labs.userAgent.util.matchUserAgent("Chrome") || goog.labs.userAgent.util.matchUserAgent("CriOS");
};
goog.labs.userAgent.browser.matchAndroidBrowser_ = function() {
  return goog.labs.userAgent.util.matchUserAgent("Android") && !goog.labs.userAgent.util.matchUserAgent("Chrome") && !goog.labs.userAgent.util.matchUserAgent("CriOS");
};
goog.labs.userAgent.browser.isOpera = goog.labs.userAgent.browser.matchOpera_;
goog.labs.userAgent.browser.isIE = goog.labs.userAgent.browser.matchIE_;
goog.labs.userAgent.browser.isFirefox = goog.labs.userAgent.browser.matchFirefox_;
goog.labs.userAgent.browser.isSafari = goog.labs.userAgent.browser.matchSafari_;
goog.labs.userAgent.browser.isChrome = goog.labs.userAgent.browser.matchChrome_;
goog.labs.userAgent.browser.isAndroidBrowser = goog.labs.userAgent.browser.matchAndroidBrowser_;
goog.labs.userAgent.browser.isSilk = function() {
  return goog.labs.userAgent.util.matchUserAgent("Silk");
};
goog.labs.userAgent.browser.getVersion = function() {
  var userAgentString = goog.labs.userAgent.util.getUserAgent();
  if (goog.labs.userAgent.browser.isIE()) {
    return goog.labs.userAgent.browser.getIEVersion_(userAgentString);
  }
  if (goog.labs.userAgent.browser.isOpera()) {
    return goog.labs.userAgent.browser.getOperaVersion_(userAgentString);
  }
  var versionTuples = goog.labs.userAgent.util.extractVersionTuples(userAgentString);
  return goog.labs.userAgent.browser.getVersionFromTuples_(versionTuples);
};
goog.labs.userAgent.browser.isVersionOrHigher = function(version) {
  return goog.string.compareVersions(goog.labs.userAgent.browser.getVersion(), version) >= 0;
};
goog.labs.userAgent.browser.getIEVersion_ = function(userAgent) {
  var rv = /rv: *([\d\.]*)/.exec(userAgent);
  if (rv && rv[1]) {
    return rv[1];
  }
  var version = "";
  var msie = /MSIE +([\d\.]+)/.exec(userAgent);
  if (msie && msie[1]) {
    var tridentVersion = /Trident\/(\d.\d)/.exec(userAgent);
    if (msie[1] == "7.0") {
      if (tridentVersion && tridentVersion[1]) {
        switch(tridentVersion[1]) {
          case "4.0":
            version = "8.0";
            break;
          case "5.0":
            version = "9.0";
            break;
          case "6.0":
            version = "10.0";
            break;
          case "7.0":
            version = "11.0";
            break;
        }
      } else {
        version = "7.0";
      }
    } else {
      version = msie[1];
    }
  }
  return version;
};
goog.labs.userAgent.browser.getOperaVersion_ = function(userAgent) {
  var versionTuples = goog.labs.userAgent.util.extractVersionTuples(userAgent);
  var lastTuple = goog.array.peek(versionTuples);
  if (lastTuple[0] == "OPR" && lastTuple[1]) {
    return lastTuple[1];
  }
  return goog.labs.userAgent.browser.getVersionFromTuples_(versionTuples);
};
goog.labs.userAgent.browser.getVersionFromTuples_ = function(versionTuples) {
  goog.asserts.assert(versionTuples.length > 2, "Couldn't extract version tuple from user agent string");
  return versionTuples[2] && versionTuples[2][1] ? versionTuples[2][1] : "";
};
goog.provide("goog.labs.userAgent.engine");
goog.require("goog.array");
goog.require("goog.labs.userAgent.util");
goog.require("goog.string");
goog.labs.userAgent.engine.isPresto = function() {
  return goog.labs.userAgent.util.matchUserAgent("Presto");
};
goog.labs.userAgent.engine.isTrident = function() {
  return goog.labs.userAgent.util.matchUserAgent("Trident") || goog.labs.userAgent.util.matchUserAgent("MSIE");
};
goog.labs.userAgent.engine.isWebKit = function() {
  return goog.labs.userAgent.util.matchUserAgentIgnoreCase("WebKit");
};
goog.labs.userAgent.engine.isGecko = function() {
  return goog.labs.userAgent.util.matchUserAgent("Gecko") && !goog.labs.userAgent.engine.isWebKit() && !goog.labs.userAgent.engine.isTrident();
};
goog.labs.userAgent.engine.getVersion = function() {
  var userAgentString = goog.labs.userAgent.util.getUserAgent();
  if (userAgentString) {
    var tuples = goog.labs.userAgent.util.extractVersionTuples(userAgentString);
    var engineTuple = tuples[1];
    if (engineTuple) {
      if (engineTuple[0] == "Gecko") {
        return goog.labs.userAgent.engine.getVersionForKey_(tuples, "Firefox");
      }
      return engineTuple[1];
    }
    var browserTuple = tuples[0];
    var info;
    if (browserTuple && (info = browserTuple[2])) {
      var match = /Trident\/([^\s;]+)/.exec(info);
      if (match) {
        return match[1];
      }
    }
  }
  return "";
};
goog.labs.userAgent.engine.isVersionOrHigher = function(version) {
  return goog.string.compareVersions(goog.labs.userAgent.engine.getVersion(), version) >= 0;
};
goog.labs.userAgent.engine.getVersionForKey_ = function(tuples, key) {
  var pair = goog.array.find(tuples, function(pair) {
    return key == pair[0];
  });
  return pair && pair[1] || "";
};
goog.provide("goog.userAgent");
goog.require("goog.labs.userAgent.browser");
goog.require("goog.labs.userAgent.engine");
goog.require("goog.labs.userAgent.util");
goog.require("goog.string");
goog.define("goog.userAgent.ASSUME_IE", false);
goog.define("goog.userAgent.ASSUME_GECKO", false);
goog.define("goog.userAgent.ASSUME_WEBKIT", false);
goog.define("goog.userAgent.ASSUME_MOBILE_WEBKIT", false);
goog.define("goog.userAgent.ASSUME_OPERA", false);
goog.define("goog.userAgent.ASSUME_ANY_VERSION", false);
goog.userAgent.BROWSER_KNOWN_ = goog.userAgent.ASSUME_IE || goog.userAgent.ASSUME_GECKO || goog.userAgent.ASSUME_MOBILE_WEBKIT || goog.userAgent.ASSUME_WEBKIT || goog.userAgent.ASSUME_OPERA;
goog.userAgent.getUserAgentString = function() {
  return goog.labs.userAgent.util.getUserAgent();
};
goog.userAgent.getNavigator = function() {
  return goog.global["navigator"] || null;
};
goog.userAgent.OPERA = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_OPERA : goog.labs.userAgent.browser.isOpera();
goog.userAgent.IE = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_IE : goog.labs.userAgent.browser.isIE();
goog.userAgent.GECKO = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_GECKO : goog.labs.userAgent.engine.isGecko();
goog.userAgent.WEBKIT = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_WEBKIT || goog.userAgent.ASSUME_MOBILE_WEBKIT : goog.labs.userAgent.engine.isWebKit();
goog.userAgent.isMobile_ = function() {
  return goog.userAgent.WEBKIT && goog.labs.userAgent.util.matchUserAgent("Mobile");
};
goog.userAgent.MOBILE = goog.userAgent.ASSUME_MOBILE_WEBKIT || goog.userAgent.isMobile_();
goog.userAgent.SAFARI = goog.userAgent.WEBKIT;
goog.userAgent.determinePlatform_ = function() {
  var navigator = goog.userAgent.getNavigator();
  return navigator && navigator.platform || "";
};
goog.userAgent.PLATFORM = goog.userAgent.determinePlatform_();
goog.define("goog.userAgent.ASSUME_MAC", false);
goog.define("goog.userAgent.ASSUME_WINDOWS", false);
goog.define("goog.userAgent.ASSUME_LINUX", false);
goog.define("goog.userAgent.ASSUME_X11", false);
goog.define("goog.userAgent.ASSUME_ANDROID", false);
goog.define("goog.userAgent.ASSUME_IPHONE", false);
goog.define("goog.userAgent.ASSUME_IPAD", false);
goog.userAgent.PLATFORM_KNOWN_ = goog.userAgent.ASSUME_MAC || goog.userAgent.ASSUME_WINDOWS || goog.userAgent.ASSUME_LINUX || goog.userAgent.ASSUME_X11 || goog.userAgent.ASSUME_ANDROID || goog.userAgent.ASSUME_IPHONE || goog.userAgent.ASSUME_IPAD;
goog.userAgent.initPlatform_ = function() {
  goog.userAgent.detectedMac_ = goog.string.contains(goog.userAgent.PLATFORM, "Mac");
  goog.userAgent.detectedWindows_ = goog.string.contains(goog.userAgent.PLATFORM, "Win");
  goog.userAgent.detectedLinux_ = goog.string.contains(goog.userAgent.PLATFORM, "Linux");
  goog.userAgent.detectedX11_ = !!goog.userAgent.getNavigator() && goog.string.contains(goog.userAgent.getNavigator()["appVersion"] || "", "X11");
  var ua = goog.userAgent.getUserAgentString();
  goog.userAgent.detectedAndroid_ = !!ua && goog.string.contains(ua, "Android");
  goog.userAgent.detectedIPhone_ = !!ua && goog.string.contains(ua, "iPhone");
  goog.userAgent.detectedIPad_ = !!ua && goog.string.contains(ua, "iPad");
};
if (!goog.userAgent.PLATFORM_KNOWN_) {
  goog.userAgent.initPlatform_();
}
goog.userAgent.MAC = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_MAC : goog.userAgent.detectedMac_;
goog.userAgent.WINDOWS = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_WINDOWS : goog.userAgent.detectedWindows_;
goog.userAgent.LINUX = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_LINUX : goog.userAgent.detectedLinux_;
goog.userAgent.X11 = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_X11 : goog.userAgent.detectedX11_;
goog.userAgent.ANDROID = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_ANDROID : goog.userAgent.detectedAndroid_;
goog.userAgent.IPHONE = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_IPHONE : goog.userAgent.detectedIPhone_;
goog.userAgent.IPAD = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_IPAD : goog.userAgent.detectedIPad_;
goog.userAgent.determineVersion_ = function() {
  var version = "", re;
  if (goog.userAgent.OPERA && goog.global["opera"]) {
    var operaVersion = goog.global["opera"].version;
    return goog.isFunction(operaVersion) ? operaVersion() : operaVersion;
  }
  if (goog.userAgent.GECKO) {
    re = /rv\:([^\);]+)(\)|;)/;
  } else {
    if (goog.userAgent.IE) {
      re = /\b(?:MSIE|rv)[: ]([^\);]+)(\)|;)/;
    } else {
      if (goog.userAgent.WEBKIT) {
        re = /WebKit\/(\S+)/;
      }
    }
  }
  if (re) {
    var arr = re.exec(goog.userAgent.getUserAgentString());
    version = arr ? arr[1] : "";
  }
  if (goog.userAgent.IE) {
    var docMode = goog.userAgent.getDocumentMode_();
    if (docMode > parseFloat(version)) {
      return String(docMode);
    }
  }
  return version;
};
goog.userAgent.getDocumentMode_ = function() {
  var doc = goog.global["document"];
  return doc ? doc["documentMode"] : undefined;
};
goog.userAgent.VERSION = goog.userAgent.determineVersion_();
goog.userAgent.compare = function(v1, v2) {
  return goog.string.compareVersions(v1, v2);
};
goog.userAgent.isVersionOrHigherCache_ = {};
goog.userAgent.isVersionOrHigher = function(version) {
  return goog.userAgent.ASSUME_ANY_VERSION || goog.userAgent.isVersionOrHigherCache_[version] || (goog.userAgent.isVersionOrHigherCache_[version] = goog.string.compareVersions(goog.userAgent.VERSION, version) >= 0);
};
goog.userAgent.isVersion = goog.userAgent.isVersionOrHigher;
goog.userAgent.isDocumentModeOrHigher = function(documentMode) {
  return goog.userAgent.IE && goog.userAgent.DOCUMENT_MODE >= documentMode;
};
goog.userAgent.isDocumentMode = goog.userAgent.isDocumentModeOrHigher;
goog.userAgent.DOCUMENT_MODE = function() {
  var doc = goog.global["document"];
  if (!doc || !goog.userAgent.IE) {
    return undefined;
  }
  var mode = goog.userAgent.getDocumentMode_();
  return mode || (doc["compatMode"] == "CSS1Compat" ? parseInt(goog.userAgent.VERSION, 10) : 5);
}();
goog.provide("goog.events.BrowserFeature");
goog.require("goog.userAgent");
goog.events.BrowserFeature = {HAS_W3C_BUTTON:!goog.userAgent.IE || goog.userAgent.isDocumentModeOrHigher(9), HAS_W3C_EVENT_SUPPORT:!goog.userAgent.IE || goog.userAgent.isDocumentModeOrHigher(9), SET_KEY_CODE_TO_PREVENT_DEFAULT:goog.userAgent.IE && !goog.userAgent.isVersionOrHigher("9"), HAS_NAVIGATOR_ONLINE_PROPERTY:!goog.userAgent.WEBKIT || goog.userAgent.isVersionOrHigher("528"), HAS_HTML5_NETWORK_EVENT_SUPPORT:goog.userAgent.GECKO && goog.userAgent.isVersionOrHigher("1.9b") || goog.userAgent.IE && 
goog.userAgent.isVersionOrHigher("8") || goog.userAgent.OPERA && goog.userAgent.isVersionOrHigher("9.5") || goog.userAgent.WEBKIT && goog.userAgent.isVersionOrHigher("528"), HTML5_NETWORK_EVENTS_FIRE_ON_BODY:goog.userAgent.GECKO && !goog.userAgent.isVersionOrHigher("8") || goog.userAgent.IE && !goog.userAgent.isVersionOrHigher("9"), TOUCH_ENABLED:"ontouchstart" in goog.global || !!(goog.global["document"] && document.documentElement && "ontouchstart" in document.documentElement) || !!(goog.global["navigator"] && 
goog.global["navigator"]["msMaxTouchPoints"])};
goog.provide("goog.events.EventId");
goog.events.EventId = function(eventId) {
  this.id = eventId;
};
goog.events.EventId.prototype.toString = function() {
  return this.id;
};
goog.provide("goog.events.Event");
goog.provide("goog.events.EventLike");
goog.require("goog.Disposable");
goog.require("goog.events.EventId");
goog.events.EventLike;
goog.events.Event = function(type, opt_target) {
  this.type = type instanceof goog.events.EventId ? String(type) : type;
  this.target = opt_target;
  this.currentTarget = this.target;
  this.propagationStopped_ = false;
  this.defaultPrevented = false;
  this.returnValue_ = true;
};
goog.events.Event.prototype.disposeInternal = function() {
};
goog.events.Event.prototype.dispose = function() {
};
goog.events.Event.prototype.stopPropagation = function() {
  this.propagationStopped_ = true;
};
goog.events.Event.prototype.preventDefault = function() {
  this.defaultPrevented = true;
  this.returnValue_ = false;
};
goog.events.Event.stopPropagation = function(e) {
  e.stopPropagation();
};
goog.events.Event.preventDefault = function(e) {
  e.preventDefault();
};
goog.provide("goog.events.EventType");
goog.require("goog.userAgent");
goog.events.getVendorPrefixedName_ = function(eventName) {
  return goog.userAgent.WEBKIT ? "webkit" + eventName : goog.userAgent.OPERA ? "o" + eventName.toLowerCase() : eventName.toLowerCase();
};
goog.events.EventType = {CLICK:"click", RIGHTCLICK:"rightclick", DBLCLICK:"dblclick", MOUSEDOWN:"mousedown", MOUSEUP:"mouseup", MOUSEOVER:"mouseover", MOUSEOUT:"mouseout", MOUSEMOVE:"mousemove", MOUSEENTER:"mouseenter", MOUSELEAVE:"mouseleave", SELECTSTART:"selectstart", KEYPRESS:"keypress", KEYDOWN:"keydown", KEYUP:"keyup", BLUR:"blur", FOCUS:"focus", DEACTIVATE:"deactivate", FOCUSIN:goog.userAgent.IE ? "focusin" : "DOMFocusIn", FOCUSOUT:goog.userAgent.IE ? "focusout" : "DOMFocusOut", CHANGE:"change", 
SELECT:"select", SUBMIT:"submit", INPUT:"input", PROPERTYCHANGE:"propertychange", DRAGSTART:"dragstart", DRAG:"drag", DRAGENTER:"dragenter", DRAGOVER:"dragover", DRAGLEAVE:"dragleave", DROP:"drop", DRAGEND:"dragend", TOUCHSTART:"touchstart", TOUCHMOVE:"touchmove", TOUCHEND:"touchend", TOUCHCANCEL:"touchcancel", BEFOREUNLOAD:"beforeunload", CONSOLEMESSAGE:"consolemessage", CONTEXTMENU:"contextmenu", DOMCONTENTLOADED:"DOMContentLoaded", ERROR:"error", HELP:"help", LOAD:"load", LOSECAPTURE:"losecapture", 
ORIENTATIONCHANGE:"orientationchange", READYSTATECHANGE:"readystatechange", RESIZE:"resize", SCROLL:"scroll", UNLOAD:"unload", HASHCHANGE:"hashchange", PAGEHIDE:"pagehide", PAGESHOW:"pageshow", POPSTATE:"popstate", COPY:"copy", PASTE:"paste", CUT:"cut", BEFORECOPY:"beforecopy", BEFORECUT:"beforecut", BEFOREPASTE:"beforepaste", ONLINE:"online", OFFLINE:"offline", MESSAGE:"message", CONNECT:"connect", ANIMATIONSTART:goog.events.getVendorPrefixedName_("AnimationStart"), ANIMATIONEND:goog.events.getVendorPrefixedName_("AnimationEnd"), 
ANIMATIONITERATION:goog.events.getVendorPrefixedName_("AnimationIteration"), TRANSITIONEND:goog.events.getVendorPrefixedName_("TransitionEnd"), POINTERDOWN:"pointerdown", POINTERUP:"pointerup", POINTERCANCEL:"pointercancel", POINTERMOVE:"pointermove", POINTEROVER:"pointerover", POINTEROUT:"pointerout", POINTERENTER:"pointerenter", POINTERLEAVE:"pointerleave", GOTPOINTERCAPTURE:"gotpointercapture", LOSTPOINTERCAPTURE:"lostpointercapture", MSGESTURECHANGE:"MSGestureChange", MSGESTUREEND:"MSGestureEnd", 
MSGESTUREHOLD:"MSGestureHold", MSGESTURESTART:"MSGestureStart", MSGESTURETAP:"MSGestureTap", MSGOTPOINTERCAPTURE:"MSGotPointerCapture", MSINERTIASTART:"MSInertiaStart", MSLOSTPOINTERCAPTURE:"MSLostPointerCapture", MSPOINTERCANCEL:"MSPointerCancel", MSPOINTERDOWN:"MSPointerDown", MSPOINTERENTER:"MSPointerEnter", MSPOINTERHOVER:"MSPointerHover", MSPOINTERLEAVE:"MSPointerLeave", MSPOINTERMOVE:"MSPointerMove", MSPOINTEROUT:"MSPointerOut", MSPOINTEROVER:"MSPointerOver", MSPOINTERUP:"MSPointerUp", TEXTINPUT:"textinput", 
COMPOSITIONSTART:"compositionstart", COMPOSITIONUPDATE:"compositionupdate", COMPOSITIONEND:"compositionend", EXIT:"exit", LOADABORT:"loadabort", LOADCOMMIT:"loadcommit", LOADREDIRECT:"loadredirect", LOADSTART:"loadstart", LOADSTOP:"loadstop", RESPONSIVE:"responsive", SIZECHANGED:"sizechanged", UNRESPONSIVE:"unresponsive", VISIBILITYCHANGE:"visibilitychange", STORAGE:"storage", DOMSUBTREEMODIFIED:"DOMSubtreeModified", DOMNODEINSERTED:"DOMNodeInserted", DOMNODEREMOVED:"DOMNodeRemoved", DOMNODEREMOVEDFROMDOCUMENT:"DOMNodeRemovedFromDocument", 
DOMNODEINSERTEDINTODOCUMENT:"DOMNodeInsertedIntoDocument", DOMATTRMODIFIED:"DOMAttrModified", DOMCHARACTERDATAMODIFIED:"DOMCharacterDataModified"};
goog.provide("goog.reflect");
goog.reflect.object = function(type, object) {
  return object;
};
goog.reflect.sinkValue = function(x) {
  goog.reflect.sinkValue[" "](x);
  return x;
};
goog.reflect.sinkValue[" "] = goog.nullFunction;
goog.reflect.canAccessProperty = function(obj, prop) {
  try {
    goog.reflect.sinkValue(obj[prop]);
    return true;
  } catch (e) {
  }
  return false;
};
goog.provide("goog.events.BrowserEvent");
goog.provide("goog.events.BrowserEvent.MouseButton");
goog.require("goog.events.BrowserFeature");
goog.require("goog.events.Event");
goog.require("goog.events.EventType");
goog.require("goog.reflect");
goog.require("goog.userAgent");
goog.events.BrowserEvent = function(opt_e, opt_currentTarget) {
  goog.events.BrowserEvent.base(this, "constructor", opt_e ? opt_e.type : "");
  this.target = null;
  this.currentTarget = null;
  this.relatedTarget = null;
  this.offsetX = 0;
  this.offsetY = 0;
  this.clientX = 0;
  this.clientY = 0;
  this.screenX = 0;
  this.screenY = 0;
  this.button = 0;
  this.keyCode = 0;
  this.charCode = 0;
  this.ctrlKey = false;
  this.altKey = false;
  this.shiftKey = false;
  this.metaKey = false;
  this.state = null;
  this.platformModifierKey = false;
  this.event_ = null;
  if (opt_e) {
    this.init(opt_e, opt_currentTarget);
  }
};
goog.inherits(goog.events.BrowserEvent, goog.events.Event);
goog.events.BrowserEvent.MouseButton = {LEFT:0, MIDDLE:1, RIGHT:2};
goog.events.BrowserEvent.IEButtonMap = [1, 4, 2];
goog.events.BrowserEvent.prototype.init = function(e, opt_currentTarget) {
  var type = this.type = e.type;
  this.target = (e.target) || e.srcElement;
  this.currentTarget = (opt_currentTarget);
  var relatedTarget = (e.relatedTarget);
  if (relatedTarget) {
    if (goog.userAgent.GECKO) {
      if (!goog.reflect.canAccessProperty(relatedTarget, "nodeName")) {
        relatedTarget = null;
      }
    }
  } else {
    if (type == goog.events.EventType.MOUSEOVER) {
      relatedTarget = e.fromElement;
    } else {
      if (type == goog.events.EventType.MOUSEOUT) {
        relatedTarget = e.toElement;
      }
    }
  }
  this.relatedTarget = relatedTarget;
  this.offsetX = goog.userAgent.WEBKIT || e.offsetX !== undefined ? e.offsetX : e.layerX;
  this.offsetY = goog.userAgent.WEBKIT || e.offsetY !== undefined ? e.offsetY : e.layerY;
  this.clientX = e.clientX !== undefined ? e.clientX : e.pageX;
  this.clientY = e.clientY !== undefined ? e.clientY : e.pageY;
  this.screenX = e.screenX || 0;
  this.screenY = e.screenY || 0;
  this.button = e.button;
  this.keyCode = e.keyCode || 0;
  this.charCode = e.charCode || (type == "keypress" ? e.keyCode : 0);
  this.ctrlKey = e.ctrlKey;
  this.altKey = e.altKey;
  this.shiftKey = e.shiftKey;
  this.metaKey = e.metaKey;
  this.platformModifierKey = goog.userAgent.MAC ? e.metaKey : e.ctrlKey;
  this.state = e.state;
  this.event_ = e;
  if (e.defaultPrevented) {
    this.preventDefault();
  }
};
goog.events.BrowserEvent.prototype.isButton = function(button) {
  if (!goog.events.BrowserFeature.HAS_W3C_BUTTON) {
    if (this.type == "click") {
      return button == goog.events.BrowserEvent.MouseButton.LEFT;
    } else {
      return!!(this.event_.button & goog.events.BrowserEvent.IEButtonMap[button]);
    }
  } else {
    return this.event_.button == button;
  }
};
goog.events.BrowserEvent.prototype.isMouseActionButton = function() {
  return this.isButton(goog.events.BrowserEvent.MouseButton.LEFT) && !(goog.userAgent.WEBKIT && goog.userAgent.MAC && this.ctrlKey);
};
goog.events.BrowserEvent.prototype.stopPropagation = function() {
  goog.events.BrowserEvent.superClass_.stopPropagation.call(this);
  if (this.event_.stopPropagation) {
    this.event_.stopPropagation();
  } else {
    this.event_.cancelBubble = true;
  }
};
goog.events.BrowserEvent.prototype.preventDefault = function() {
  goog.events.BrowserEvent.superClass_.preventDefault.call(this);
  var be = this.event_;
  if (!be.preventDefault) {
    be.returnValue = false;
    if (goog.events.BrowserFeature.SET_KEY_CODE_TO_PREVENT_DEFAULT) {
      try {
        var VK_F1 = 112;
        var VK_F12 = 123;
        if (be.ctrlKey || be.keyCode >= VK_F1 && be.keyCode <= VK_F12) {
          be.keyCode = -1;
        }
      } catch (ex) {
      }
    }
  } else {
    be.preventDefault();
  }
};
goog.events.BrowserEvent.prototype.getBrowserEvent = function() {
  return this.event_;
};
goog.events.BrowserEvent.prototype.disposeInternal = function() {
};
goog.provide("goog.events.Listenable");
goog.provide("goog.events.ListenableKey");
goog.require("goog.events.EventId");
goog.events.Listenable = function() {
};
goog.events.Listenable.IMPLEMENTED_BY_PROP = "closure_listenable_" + (Math.random() * 1E6 | 0);
goog.events.Listenable.addImplementation = function(cls) {
  cls.prototype[goog.events.Listenable.IMPLEMENTED_BY_PROP] = true;
};
goog.events.Listenable.isImplementedBy = function(obj) {
  return!!(obj && obj[goog.events.Listenable.IMPLEMENTED_BY_PROP]);
};
goog.events.Listenable.prototype.listen;
goog.events.Listenable.prototype.listenOnce;
goog.events.Listenable.prototype.unlisten;
goog.events.Listenable.prototype.unlistenByKey;
goog.events.Listenable.prototype.dispatchEvent;
goog.events.Listenable.prototype.removeAllListeners;
goog.events.Listenable.prototype.getParentEventTarget;
goog.events.Listenable.prototype.fireListeners;
goog.events.Listenable.prototype.getListeners;
goog.events.Listenable.prototype.getListener;
goog.events.Listenable.prototype.hasListener;
goog.events.ListenableKey = function() {
};
goog.events.ListenableKey.counter_ = 0;
goog.events.ListenableKey.reserveKey = function() {
  return++goog.events.ListenableKey.counter_;
};
goog.events.ListenableKey.prototype.src;
goog.events.ListenableKey.prototype.type;
goog.events.ListenableKey.prototype.listener;
goog.events.ListenableKey.prototype.capture;
goog.events.ListenableKey.prototype.handler;
goog.events.ListenableKey.prototype.key;
goog.provide("goog.events.Listener");
goog.require("goog.events.ListenableKey");
goog.events.Listener = function(listener, proxy, src, type, capture, opt_handler) {
  if (goog.events.Listener.ENABLE_MONITORING) {
    this.creationStack = (new Error).stack;
  }
  this.listener = listener;
  this.proxy = proxy;
  this.src = src;
  this.type = type;
  this.capture = !!capture;
  this.handler = opt_handler;
  this.key = goog.events.ListenableKey.reserveKey();
  this.callOnce = false;
  this.removed = false;
};
goog.define("goog.events.Listener.ENABLE_MONITORING", false);
goog.events.Listener.prototype.creationStack;
goog.events.Listener.prototype.markAsRemoved = function() {
  this.removed = true;
  this.listener = null;
  this.proxy = null;
  this.src = null;
  this.handler = null;
};
goog.provide("goog.events.ListenerMap");
goog.require("goog.array");
goog.require("goog.events.Listener");
goog.require("goog.object");
goog.events.ListenerMap = function(src) {
  this.src = src;
  this.listeners = {};
  this.typeCount_ = 0;
};
goog.events.ListenerMap.prototype.getTypeCount = function() {
  return this.typeCount_;
};
goog.events.ListenerMap.prototype.getListenerCount = function() {
  var count = 0;
  for (var type in this.listeners) {
    count += this.listeners[type].length;
  }
  return count;
};
goog.events.ListenerMap.prototype.add = function(type, listener, callOnce, opt_useCapture, opt_listenerScope) {
  var typeStr = type.toString();
  var listenerArray = this.listeners[typeStr];
  if (!listenerArray) {
    listenerArray = this.listeners[typeStr] = [];
    this.typeCount_++;
  }
  var listenerObj;
  var index = goog.events.ListenerMap.findListenerIndex_(listenerArray, listener, opt_useCapture, opt_listenerScope);
  if (index > -1) {
    listenerObj = listenerArray[index];
    if (!callOnce) {
      listenerObj.callOnce = false;
    }
  } else {
    listenerObj = new goog.events.Listener(listener, null, this.src, typeStr, !!opt_useCapture, opt_listenerScope);
    listenerObj.callOnce = callOnce;
    listenerArray.push(listenerObj);
  }
  return listenerObj;
};
goog.events.ListenerMap.prototype.remove = function(type, listener, opt_useCapture, opt_listenerScope) {
  var typeStr = type.toString();
  if (!(typeStr in this.listeners)) {
    return false;
  }
  var listenerArray = this.listeners[typeStr];
  var index = goog.events.ListenerMap.findListenerIndex_(listenerArray, listener, opt_useCapture, opt_listenerScope);
  if (index > -1) {
    var listenerObj = listenerArray[index];
    listenerObj.markAsRemoved();
    goog.array.removeAt(listenerArray, index);
    if (listenerArray.length == 0) {
      delete this.listeners[typeStr];
      this.typeCount_--;
    }
    return true;
  }
  return false;
};
goog.events.ListenerMap.prototype.removeByKey = function(listener) {
  var type = listener.type;
  if (!(type in this.listeners)) {
    return false;
  }
  var removed = goog.array.remove(this.listeners[type], listener);
  if (removed) {
    listener.markAsRemoved();
    if (this.listeners[type].length == 0) {
      delete this.listeners[type];
      this.typeCount_--;
    }
  }
  return removed;
};
goog.events.ListenerMap.prototype.removeAll = function(opt_type) {
  var typeStr = opt_type && opt_type.toString();
  var count = 0;
  for (var type in this.listeners) {
    if (!typeStr || type == typeStr) {
      var listenerArray = this.listeners[type];
      for (var i = 0;i < listenerArray.length;i++) {
        ++count;
        listenerArray[i].markAsRemoved();
      }
      delete this.listeners[type];
      this.typeCount_--;
    }
  }
  return count;
};
goog.events.ListenerMap.prototype.getListeners = function(type, capture) {
  var listenerArray = this.listeners[type.toString()];
  var rv = [];
  if (listenerArray) {
    for (var i = 0;i < listenerArray.length;++i) {
      var listenerObj = listenerArray[i];
      if (listenerObj.capture == capture) {
        rv.push(listenerObj);
      }
    }
  }
  return rv;
};
goog.events.ListenerMap.prototype.getListener = function(type, listener, capture, opt_listenerScope) {
  var listenerArray = this.listeners[type.toString()];
  var i = -1;
  if (listenerArray) {
    i = goog.events.ListenerMap.findListenerIndex_(listenerArray, listener, capture, opt_listenerScope);
  }
  return i > -1 ? listenerArray[i] : null;
};
goog.events.ListenerMap.prototype.hasListener = function(opt_type, opt_capture) {
  var hasType = goog.isDef(opt_type);
  var typeStr = hasType ? opt_type.toString() : "";
  var hasCapture = goog.isDef(opt_capture);
  return goog.object.some(this.listeners, function(listenerArray, type) {
    for (var i = 0;i < listenerArray.length;++i) {
      if ((!hasType || listenerArray[i].type == typeStr) && (!hasCapture || listenerArray[i].capture == opt_capture)) {
        return true;
      }
    }
    return false;
  });
};
goog.events.ListenerMap.findListenerIndex_ = function(listenerArray, listener, opt_useCapture, opt_listenerScope) {
  for (var i = 0;i < listenerArray.length;++i) {
    var listenerObj = listenerArray[i];
    if (!listenerObj.removed && listenerObj.listener == listener && listenerObj.capture == !!opt_useCapture && listenerObj.handler == opt_listenerScope) {
      return i;
    }
  }
  return-1;
};
goog.provide("goog.events");
goog.provide("goog.events.CaptureSimulationMode");
goog.provide("goog.events.Key");
goog.provide("goog.events.ListenableType");
goog.require("goog.asserts");
goog.require("goog.debug.entryPointRegistry");
goog.require("goog.events.BrowserEvent");
goog.require("goog.events.BrowserFeature");
goog.require("goog.events.Listenable");
goog.require("goog.events.ListenerMap");
goog.forwardDeclare("goog.debug.ErrorHandler");
goog.forwardDeclare("goog.events.EventWrapper");
goog.events.Key;
goog.events.ListenableType;
goog.events.LISTENER_MAP_PROP_ = "closure_lm_" + (Math.random() * 1E6 | 0);
goog.events.onString_ = "on";
goog.events.onStringMap_ = {};
goog.events.CaptureSimulationMode = {OFF_AND_FAIL:0, OFF_AND_SILENT:1, ON:2};
goog.define("goog.events.CAPTURE_SIMULATION_MODE", 2);
goog.events.listenerCountEstimate_ = 0;
goog.events.listen = function(src, type, listener, opt_capt, opt_handler) {
  if (goog.isArray(type)) {
    for (var i = 0;i < type.length;i++) {
      goog.events.listen(src, type[i], listener, opt_capt, opt_handler);
    }
    return null;
  }
  listener = goog.events.wrapListener(listener);
  if (goog.events.Listenable.isImplementedBy(src)) {
    return src.listen((type), listener, opt_capt, opt_handler);
  } else {
    return goog.events.listen_((src), (type), listener, false, opt_capt, opt_handler);
  }
};
goog.events.listen_ = function(src, type, listener, callOnce, opt_capt, opt_handler) {
  if (!type) {
    throw Error("Invalid event type");
  }
  var capture = !!opt_capt;
  if (capture && !goog.events.BrowserFeature.HAS_W3C_EVENT_SUPPORT) {
    if (goog.events.CAPTURE_SIMULATION_MODE == goog.events.CaptureSimulationMode.OFF_AND_FAIL) {
      goog.asserts.fail("Can not register capture listener in IE8-.");
      return null;
    } else {
      if (goog.events.CAPTURE_SIMULATION_MODE == goog.events.CaptureSimulationMode.OFF_AND_SILENT) {
        return null;
      }
    }
  }
  var listenerMap = goog.events.getListenerMap_(src);
  if (!listenerMap) {
    src[goog.events.LISTENER_MAP_PROP_] = listenerMap = new goog.events.ListenerMap(src);
  }
  var listenerObj = listenerMap.add(type, listener, callOnce, opt_capt, opt_handler);
  if (listenerObj.proxy) {
    return listenerObj;
  }
  var proxy = goog.events.getProxy();
  listenerObj.proxy = proxy;
  proxy.src = src;
  proxy.listener = listenerObj;
  if (src.addEventListener) {
    src.addEventListener(type.toString(), proxy, capture);
  } else {
    src.attachEvent(goog.events.getOnString_(type.toString()), proxy);
  }
  goog.events.listenerCountEstimate_++;
  return listenerObj;
};
goog.events.getProxy = function() {
  var proxyCallbackFunction = goog.events.handleBrowserEvent_;
  var f = goog.events.BrowserFeature.HAS_W3C_EVENT_SUPPORT ? function(eventObject) {
    return proxyCallbackFunction.call(f.src, f.listener, eventObject);
  } : function(eventObject) {
    var v = proxyCallbackFunction.call(f.src, f.listener, eventObject);
    if (!v) {
      return v;
    }
  };
  return f;
};
goog.events.listenOnce = function(src, type, listener, opt_capt, opt_handler) {
  if (goog.isArray(type)) {
    for (var i = 0;i < type.length;i++) {
      goog.events.listenOnce(src, type[i], listener, opt_capt, opt_handler);
    }
    return null;
  }
  listener = goog.events.wrapListener(listener);
  if (goog.events.Listenable.isImplementedBy(src)) {
    return src.listenOnce((type), listener, opt_capt, opt_handler);
  } else {
    return goog.events.listen_((src), (type), listener, true, opt_capt, opt_handler);
  }
};
goog.events.listenWithWrapper = function(src, wrapper, listener, opt_capt, opt_handler) {
  wrapper.listen(src, listener, opt_capt, opt_handler);
};
goog.events.unlisten = function(src, type, listener, opt_capt, opt_handler) {
  if (goog.isArray(type)) {
    for (var i = 0;i < type.length;i++) {
      goog.events.unlisten(src, type[i], listener, opt_capt, opt_handler);
    }
    return null;
  }
  listener = goog.events.wrapListener(listener);
  if (goog.events.Listenable.isImplementedBy(src)) {
    return src.unlisten((type), listener, opt_capt, opt_handler);
  }
  if (!src) {
    return false;
  }
  var capture = !!opt_capt;
  var listenerMap = goog.events.getListenerMap_((src));
  if (listenerMap) {
    var listenerObj = listenerMap.getListener((type), listener, capture, opt_handler);
    if (listenerObj) {
      return goog.events.unlistenByKey(listenerObj);
    }
  }
  return false;
};
goog.events.unlistenByKey = function(key) {
  if (goog.isNumber(key)) {
    return false;
  }
  var listener = (key);
  if (!listener || listener.removed) {
    return false;
  }
  var src = listener.src;
  if (goog.events.Listenable.isImplementedBy(src)) {
    return src.unlistenByKey(listener);
  }
  var type = listener.type;
  var proxy = listener.proxy;
  if (src.removeEventListener) {
    src.removeEventListener(type, proxy, listener.capture);
  } else {
    if (src.detachEvent) {
      src.detachEvent(goog.events.getOnString_(type), proxy);
    }
  }
  goog.events.listenerCountEstimate_--;
  var listenerMap = goog.events.getListenerMap_((src));
  if (listenerMap) {
    listenerMap.removeByKey(listener);
    if (listenerMap.getTypeCount() == 0) {
      listenerMap.src = null;
      src[goog.events.LISTENER_MAP_PROP_] = null;
    }
  } else {
    listener.markAsRemoved();
  }
  return true;
};
goog.events.unlistenWithWrapper = function(src, wrapper, listener, opt_capt, opt_handler) {
  wrapper.unlisten(src, listener, opt_capt, opt_handler);
};
goog.events.removeAll = function(obj, opt_type) {
  if (!obj) {
    return 0;
  }
  if (goog.events.Listenable.isImplementedBy(obj)) {
    return obj.removeAllListeners(opt_type);
  }
  var listenerMap = goog.events.getListenerMap_((obj));
  if (!listenerMap) {
    return 0;
  }
  var count = 0;
  var typeStr = opt_type && opt_type.toString();
  for (var type in listenerMap.listeners) {
    if (!typeStr || type == typeStr) {
      var listeners = listenerMap.listeners[type].concat();
      for (var i = 0;i < listeners.length;++i) {
        if (goog.events.unlistenByKey(listeners[i])) {
          ++count;
        }
      }
    }
  }
  return count;
};
goog.events.removeAllNativeListeners = function() {
  goog.events.listenerCountEstimate_ = 0;
  return 0;
};
goog.events.getListeners = function(obj, type, capture) {
  if (goog.events.Listenable.isImplementedBy(obj)) {
    return obj.getListeners(type, capture);
  } else {
    if (!obj) {
      return[];
    }
    var listenerMap = goog.events.getListenerMap_((obj));
    return listenerMap ? listenerMap.getListeners(type, capture) : [];
  }
};
goog.events.getListener = function(src, type, listener, opt_capt, opt_handler) {
  type = (type);
  listener = goog.events.wrapListener(listener);
  var capture = !!opt_capt;
  if (goog.events.Listenable.isImplementedBy(src)) {
    return src.getListener(type, listener, capture, opt_handler);
  }
  if (!src) {
    return null;
  }
  var listenerMap = goog.events.getListenerMap_((src));
  if (listenerMap) {
    return listenerMap.getListener(type, listener, capture, opt_handler);
  }
  return null;
};
goog.events.hasListener = function(obj, opt_type, opt_capture) {
  if (goog.events.Listenable.isImplementedBy(obj)) {
    return obj.hasListener(opt_type, opt_capture);
  }
  var listenerMap = goog.events.getListenerMap_((obj));
  return!!listenerMap && listenerMap.hasListener(opt_type, opt_capture);
};
goog.events.expose = function(e) {
  var str = [];
  for (var key in e) {
    if (e[key] && e[key].id) {
      str.push(key + " \x3d " + e[key] + " (" + e[key].id + ")");
    } else {
      str.push(key + " \x3d " + e[key]);
    }
  }
  return str.join("\n");
};
goog.events.getOnString_ = function(type) {
  if (type in goog.events.onStringMap_) {
    return goog.events.onStringMap_[type];
  }
  return goog.events.onStringMap_[type] = goog.events.onString_ + type;
};
goog.events.fireListeners = function(obj, type, capture, eventObject) {
  if (goog.events.Listenable.isImplementedBy(obj)) {
    return obj.fireListeners(type, capture, eventObject);
  }
  return goog.events.fireListeners_(obj, type, capture, eventObject);
};
goog.events.fireListeners_ = function(obj, type, capture, eventObject) {
  var retval = 1;
  var listenerMap = goog.events.getListenerMap_((obj));
  if (listenerMap) {
    var listenerArray = listenerMap.listeners[type.toString()];
    if (listenerArray) {
      listenerArray = listenerArray.concat();
      for (var i = 0;i < listenerArray.length;i++) {
        var listener = listenerArray[i];
        if (listener && listener.capture == capture && !listener.removed) {
          retval &= goog.events.fireListener(listener, eventObject) !== false;
        }
      }
    }
  }
  return Boolean(retval);
};
goog.events.fireListener = function(listener, eventObject) {
  var listenerFn = listener.listener;
  var listenerHandler = listener.handler || listener.src;
  if (listener.callOnce) {
    goog.events.unlistenByKey(listener);
  }
  return listenerFn.call(listenerHandler, eventObject);
};
goog.events.getTotalListenerCount = function() {
  return goog.events.listenerCountEstimate_;
};
goog.events.dispatchEvent = function(src, e) {
  goog.asserts.assert(goog.events.Listenable.isImplementedBy(src), "Can not use goog.events.dispatchEvent with " + "non-goog.events.Listenable instance.");
  return src.dispatchEvent(e);
};
goog.events.protectBrowserEventEntryPoint = function(errorHandler) {
  goog.events.handleBrowserEvent_ = errorHandler.protectEntryPoint(goog.events.handleBrowserEvent_);
};
goog.events.handleBrowserEvent_ = function(listener, opt_evt) {
  if (listener.removed) {
    return true;
  }
  if (!goog.events.BrowserFeature.HAS_W3C_EVENT_SUPPORT) {
    var ieEvent = opt_evt || (goog.getObjectByName("window.event"));
    var evt = new goog.events.BrowserEvent(ieEvent, this);
    var retval = true;
    if (goog.events.CAPTURE_SIMULATION_MODE == goog.events.CaptureSimulationMode.ON) {
      if (!goog.events.isMarkedIeEvent_(ieEvent)) {
        goog.events.markIeEvent_(ieEvent);
        var ancestors = [];
        for (var parent = evt.currentTarget;parent;parent = parent.parentNode) {
          ancestors.push(parent);
        }
        var type = listener.type;
        for (var i = ancestors.length - 1;!evt.propagationStopped_ && i >= 0;i--) {
          evt.currentTarget = ancestors[i];
          retval &= goog.events.fireListeners_(ancestors[i], type, true, evt);
        }
        for (var i = 0;!evt.propagationStopped_ && i < ancestors.length;i++) {
          evt.currentTarget = ancestors[i];
          retval &= goog.events.fireListeners_(ancestors[i], type, false, evt);
        }
      }
    } else {
      retval = goog.events.fireListener(listener, evt);
    }
    return retval;
  }
  return goog.events.fireListener(listener, new goog.events.BrowserEvent(opt_evt, this));
};
goog.events.markIeEvent_ = function(e) {
  var useReturnValue = false;
  if (e.keyCode == 0) {
    try {
      e.keyCode = -1;
      return;
    } catch (ex) {
      useReturnValue = true;
    }
  }
  if (useReturnValue || (e.returnValue) == undefined) {
    e.returnValue = true;
  }
};
goog.events.isMarkedIeEvent_ = function(e) {
  return e.keyCode < 0 || e.returnValue != undefined;
};
goog.events.uniqueIdCounter_ = 0;
goog.events.getUniqueId = function(identifier) {
  return identifier + "_" + goog.events.uniqueIdCounter_++;
};
goog.events.getListenerMap_ = function(src) {
  var listenerMap = src[goog.events.LISTENER_MAP_PROP_];
  return listenerMap instanceof goog.events.ListenerMap ? listenerMap : null;
};
goog.events.LISTENER_WRAPPER_PROP_ = "__closure_events_fn_" + (Math.random() * 1E9 >>> 0);
goog.events.wrapListener = function(listener) {
  goog.asserts.assert(listener, "Listener can not be null.");
  if (goog.isFunction(listener)) {
    return listener;
  }
  goog.asserts.assert(listener.handleEvent, "An object listener must have handleEvent method.");
  if (!listener[goog.events.LISTENER_WRAPPER_PROP_]) {
    listener[goog.events.LISTENER_WRAPPER_PROP_] = function(e) {
      return listener.handleEvent(e);
    };
  }
  return listener[goog.events.LISTENER_WRAPPER_PROP_];
};
goog.debug.entryPointRegistry.register(function(transformer) {
  goog.events.handleBrowserEvent_ = transformer(goog.events.handleBrowserEvent_);
});
goog.provide("goog.events.EventTarget");
goog.require("goog.Disposable");
goog.require("goog.asserts");
goog.require("goog.events");
goog.require("goog.events.Event");
goog.require("goog.events.Listenable");
goog.require("goog.events.ListenerMap");
goog.require("goog.object");
goog.events.EventTarget = function() {
  goog.Disposable.call(this);
  this.eventTargetListeners_ = new goog.events.ListenerMap(this);
  this.actualEventTarget_ = this;
  this.parentEventTarget_ = null;
};
goog.inherits(goog.events.EventTarget, goog.Disposable);
goog.events.Listenable.addImplementation(goog.events.EventTarget);
goog.events.EventTarget.MAX_ANCESTORS_ = 1E3;
goog.events.EventTarget.prototype.getParentEventTarget = function() {
  return this.parentEventTarget_;
};
goog.events.EventTarget.prototype.setParentEventTarget = function(parent) {
  this.parentEventTarget_ = parent;
};
goog.events.EventTarget.prototype.addEventListener = function(type, handler, opt_capture, opt_handlerScope) {
  goog.events.listen(this, type, handler, opt_capture, opt_handlerScope);
};
goog.events.EventTarget.prototype.removeEventListener = function(type, handler, opt_capture, opt_handlerScope) {
  goog.events.unlisten(this, type, handler, opt_capture, opt_handlerScope);
};
goog.events.EventTarget.prototype.dispatchEvent = function(e) {
  this.assertInitialized_();
  var ancestorsTree, ancestor = this.getParentEventTarget();
  if (ancestor) {
    ancestorsTree = [];
    var ancestorCount = 1;
    for (;ancestor;ancestor = ancestor.getParentEventTarget()) {
      ancestorsTree.push(ancestor);
      goog.asserts.assert(++ancestorCount < goog.events.EventTarget.MAX_ANCESTORS_, "infinite loop");
    }
  }
  return goog.events.EventTarget.dispatchEventInternal_(this.actualEventTarget_, e, ancestorsTree);
};
goog.events.EventTarget.prototype.disposeInternal = function() {
  goog.events.EventTarget.superClass_.disposeInternal.call(this);
  this.removeAllListeners();
  this.parentEventTarget_ = null;
};
goog.events.EventTarget.prototype.listen = function(type, listener, opt_useCapture, opt_listenerScope) {
  this.assertInitialized_();
  return this.eventTargetListeners_.add(String(type), listener, false, opt_useCapture, opt_listenerScope);
};
goog.events.EventTarget.prototype.listenOnce = function(type, listener, opt_useCapture, opt_listenerScope) {
  return this.eventTargetListeners_.add(String(type), listener, true, opt_useCapture, opt_listenerScope);
};
goog.events.EventTarget.prototype.unlisten = function(type, listener, opt_useCapture, opt_listenerScope) {
  return this.eventTargetListeners_.remove(String(type), listener, opt_useCapture, opt_listenerScope);
};
goog.events.EventTarget.prototype.unlistenByKey = function(key) {
  return this.eventTargetListeners_.removeByKey(key);
};
goog.events.EventTarget.prototype.removeAllListeners = function(opt_type) {
  if (!this.eventTargetListeners_) {
    return 0;
  }
  return this.eventTargetListeners_.removeAll(opt_type);
};
goog.events.EventTarget.prototype.fireListeners = function(type, capture, eventObject) {
  var listenerArray = this.eventTargetListeners_.listeners[String(type)];
  if (!listenerArray) {
    return true;
  }
  listenerArray = listenerArray.concat();
  var rv = true;
  for (var i = 0;i < listenerArray.length;++i) {
    var listener = listenerArray[i];
    if (listener && !listener.removed && listener.capture == capture) {
      var listenerFn = listener.listener;
      var listenerHandler = listener.handler || listener.src;
      if (listener.callOnce) {
        this.unlistenByKey(listener);
      }
      rv = listenerFn.call(listenerHandler, eventObject) !== false && rv;
    }
  }
  return rv && eventObject.returnValue_ != false;
};
goog.events.EventTarget.prototype.getListeners = function(type, capture) {
  return this.eventTargetListeners_.getListeners(String(type), capture);
};
goog.events.EventTarget.prototype.getListener = function(type, listener, capture, opt_listenerScope) {
  return this.eventTargetListeners_.getListener(String(type), listener, capture, opt_listenerScope);
};
goog.events.EventTarget.prototype.hasListener = function(opt_type, opt_capture) {
  var id = goog.isDef(opt_type) ? String(opt_type) : undefined;
  return this.eventTargetListeners_.hasListener(id, opt_capture);
};
goog.events.EventTarget.prototype.setTargetForTesting = function(target) {
  this.actualEventTarget_ = target;
};
goog.events.EventTarget.prototype.assertInitialized_ = function() {
  goog.asserts.assert(this.eventTargetListeners_, "Event target is not initialized. Did you call the superclass " + "(goog.events.EventTarget) constructor?");
};
goog.events.EventTarget.dispatchEventInternal_ = function(target, e, opt_ancestorsTree) {
  var type = e.type || (e);
  if (goog.isString(e)) {
    e = new goog.events.Event(e, target);
  } else {
    if (!(e instanceof goog.events.Event)) {
      var oldEvent = e;
      e = new goog.events.Event(type, target);
      goog.object.extend(e, oldEvent);
    } else {
      e.target = e.target || target;
    }
  }
  var rv = true, currentTarget;
  if (opt_ancestorsTree) {
    for (var i = opt_ancestorsTree.length - 1;!e.propagationStopped_ && i >= 0;i--) {
      currentTarget = e.currentTarget = opt_ancestorsTree[i];
      rv = currentTarget.fireListeners(type, true, e) && rv;
    }
  }
  if (!e.propagationStopped_) {
    currentTarget = e.currentTarget = target;
    rv = currentTarget.fireListeners(type, true, e) && rv;
    if (!e.propagationStopped_) {
      rv = currentTarget.fireListeners(type, false, e) && rv;
    }
  }
  if (opt_ancestorsTree) {
    for (i = 0;!e.propagationStopped_ && i < opt_ancestorsTree.length;i++) {
      currentTarget = e.currentTarget = opt_ancestorsTree[i];
      rv = currentTarget.fireListeners(type, false, e) && rv;
    }
  }
  return rv;
};
goog.provide("goog.Timer");
goog.require("goog.events.EventTarget");
goog.Timer = function(opt_interval, opt_timerObject) {
  goog.events.EventTarget.call(this);
  this.interval_ = opt_interval || 1;
  this.timerObject_ = opt_timerObject || goog.Timer.defaultTimerObject;
  this.boundTick_ = goog.bind(this.tick_, this);
  this.last_ = goog.now();
};
goog.inherits(goog.Timer, goog.events.EventTarget);
goog.Timer.MAX_TIMEOUT_ = 2147483647;
goog.Timer.prototype.enabled = false;
goog.Timer.defaultTimerObject = goog.global;
goog.Timer.intervalScale = .8;
goog.Timer.prototype.timer_ = null;
goog.Timer.prototype.getInterval = function() {
  return this.interval_;
};
goog.Timer.prototype.setInterval = function(interval) {
  this.interval_ = interval;
  if (this.timer_ && this.enabled) {
    this.stop();
    this.start();
  } else {
    if (this.timer_) {
      this.stop();
    }
  }
};
goog.Timer.prototype.tick_ = function() {
  if (this.enabled) {
    var elapsed = goog.now() - this.last_;
    if (elapsed > 0 && elapsed < this.interval_ * goog.Timer.intervalScale) {
      this.timer_ = this.timerObject_.setTimeout(this.boundTick_, this.interval_ - elapsed);
      return;
    }
    if (this.timer_) {
      this.timerObject_.clearTimeout(this.timer_);
      this.timer_ = null;
    }
    this.dispatchTick();
    if (this.enabled) {
      this.timer_ = this.timerObject_.setTimeout(this.boundTick_, this.interval_);
      this.last_ = goog.now();
    }
  }
};
goog.Timer.prototype.dispatchTick = function() {
  this.dispatchEvent(goog.Timer.TICK);
};
goog.Timer.prototype.start = function() {
  this.enabled = true;
  if (!this.timer_) {
    this.timer_ = this.timerObject_.setTimeout(this.boundTick_, this.interval_);
    this.last_ = goog.now();
  }
};
goog.Timer.prototype.stop = function() {
  this.enabled = false;
  if (this.timer_) {
    this.timerObject_.clearTimeout(this.timer_);
    this.timer_ = null;
  }
};
goog.Timer.prototype.disposeInternal = function() {
  goog.Timer.superClass_.disposeInternal.call(this);
  this.stop();
  delete this.timerObject_;
};
goog.Timer.TICK = "tick";
goog.Timer.callOnce = function(listener, opt_delay, opt_handler) {
  if (goog.isFunction(listener)) {
    if (opt_handler) {
      listener = goog.bind(listener, opt_handler);
    }
  } else {
    if (listener && typeof listener.handleEvent == "function") {
      listener = goog.bind(listener.handleEvent, listener);
    } else {
      throw Error("Invalid listener argument");
    }
  }
  if (opt_delay > goog.Timer.MAX_TIMEOUT_) {
    return-1;
  } else {
    return goog.Timer.defaultTimerObject.setTimeout(listener, opt_delay || 0);
  }
};
goog.Timer.clear = function(timerId) {
  goog.Timer.defaultTimerObject.clearTimeout(timerId);
};
goog.provide("goog.json");
goog.provide("goog.json.Replacer");
goog.provide("goog.json.Reviver");
goog.provide("goog.json.Serializer");
goog.define("goog.json.USE_NATIVE_JSON", false);
goog.json.isValid = function(s) {
  if (/^\s*$/.test(s)) {
    return false;
  }
  var backslashesRe = /\\["\\\/bfnrtu]/g;
  var simpleValuesRe = /"[^"\\\n\r\u2028\u2029\x00-\x08\x0a-\x1f]*"|true|false|null|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?/g;
  var openBracketsRe = /(?:^|:|,)(?:[\s\u2028\u2029]*\[)+/g;
  var remainderRe = /^[\],:{}\s\u2028\u2029]*$/;
  return remainderRe.test(s.replace(backslashesRe, "@").replace(simpleValuesRe, "]").replace(openBracketsRe, ""));
};
goog.json.parse = goog.json.USE_NATIVE_JSON ? (goog.global["JSON"]["parse"]) : function(s) {
  var o = String(s);
  if (goog.json.isValid(o)) {
    try {
      return(eval("(" + o + ")"));
    } catch (ex) {
    }
  }
  throw Error("Invalid JSON string: " + o);
};
goog.json.unsafeParse = goog.json.USE_NATIVE_JSON ? (goog.global["JSON"]["parse"]) : function(s) {
  return(eval("(" + s + ")"));
};
goog.json.Replacer;
goog.json.Reviver;
goog.json.serialize = goog.json.USE_NATIVE_JSON ? (goog.global["JSON"]["stringify"]) : function(object, opt_replacer) {
  return(new goog.json.Serializer(opt_replacer)).serialize(object);
};
goog.json.Serializer = function(opt_replacer) {
  this.replacer_ = opt_replacer;
};
goog.json.Serializer.prototype.serialize = function(object) {
  var sb = [];
  this.serializeInternal(object, sb);
  return sb.join("");
};
goog.json.Serializer.prototype.serializeInternal = function(object, sb) {
  switch(typeof object) {
    case "string":
      this.serializeString_((object), sb);
      break;
    case "number":
      this.serializeNumber_((object), sb);
      break;
    case "boolean":
      sb.push(object);
      break;
    case "undefined":
      sb.push("null");
      break;
    case "object":
      if (object == null) {
        sb.push("null");
        break;
      }
      if (goog.isArray(object)) {
        this.serializeArray((object), sb);
        break;
      }
      this.serializeObject_((object), sb);
      break;
    case "function":
      break;
    default:
      throw Error("Unknown type: " + typeof object);;
  }
};
goog.json.Serializer.charToJsonCharCache_ = {'"':'\\"', "\\":"\\\\", "/":"\\/", "\b":"\\b", "\f":"\\f", "\n":"\\n", "\r":"\\r", "\t":"\\t", "\x0B":"\\u000b"};
goog.json.Serializer.charsToReplace_ = /\uffff/.test("\uffff") ? /[\\\"\x00-\x1f\x7f-\uffff]/g : /[\\\"\x00-\x1f\x7f-\xff]/g;
goog.json.Serializer.prototype.serializeString_ = function(s, sb) {
  sb.push('"', s.replace(goog.json.Serializer.charsToReplace_, function(c) {
    if (c in goog.json.Serializer.charToJsonCharCache_) {
      return goog.json.Serializer.charToJsonCharCache_[c];
    }
    var cc = c.charCodeAt(0);
    var rv = "\\u";
    if (cc < 16) {
      rv += "000";
    } else {
      if (cc < 256) {
        rv += "00";
      } else {
        if (cc < 4096) {
          rv += "0";
        }
      }
    }
    return goog.json.Serializer.charToJsonCharCache_[c] = rv + cc.toString(16);
  }), '"');
};
goog.json.Serializer.prototype.serializeNumber_ = function(n, sb) {
  sb.push(isFinite(n) && !isNaN(n) ? n : "null");
};
goog.json.Serializer.prototype.serializeArray = function(arr, sb) {
  var l = arr.length;
  sb.push("[");
  var sep = "";
  for (var i = 0;i < l;i++) {
    sb.push(sep);
    var value = arr[i];
    this.serializeInternal(this.replacer_ ? this.replacer_.call(arr, String(i), value) : value, sb);
    sep = ",";
  }
  sb.push("]");
};
goog.json.Serializer.prototype.serializeObject_ = function(obj, sb) {
  sb.push("{");
  var sep = "";
  for (var key in obj) {
    if (Object.prototype.hasOwnProperty.call(obj, key)) {
      var value = obj[key];
      if (typeof value != "function") {
        sb.push(sep);
        this.serializeString_(key, sb);
        sb.push(":");
        this.serializeInternal(this.replacer_ ? this.replacer_.call(obj, key, value) : value, sb);
        sep = ",";
      }
    }
  }
  sb.push("}");
};
goog.provide("goog.structs");
goog.require("goog.array");
goog.require("goog.object");
goog.structs.getCount = function(col) {
  if (typeof col.getCount == "function") {
    return col.getCount();
  }
  if (goog.isArrayLike(col) || goog.isString(col)) {
    return col.length;
  }
  return goog.object.getCount(col);
};
goog.structs.getValues = function(col) {
  if (typeof col.getValues == "function") {
    return col.getValues();
  }
  if (goog.isString(col)) {
    return col.split("");
  }
  if (goog.isArrayLike(col)) {
    var rv = [];
    var l = col.length;
    for (var i = 0;i < l;i++) {
      rv.push(col[i]);
    }
    return rv;
  }
  return goog.object.getValues(col);
};
goog.structs.getKeys = function(col) {
  if (typeof col.getKeys == "function") {
    return col.getKeys();
  }
  if (typeof col.getValues == "function") {
    return undefined;
  }
  if (goog.isArrayLike(col) || goog.isString(col)) {
    var rv = [];
    var l = col.length;
    for (var i = 0;i < l;i++) {
      rv.push(i);
    }
    return rv;
  }
  return goog.object.getKeys(col);
};
goog.structs.contains = function(col, val) {
  if (typeof col.contains == "function") {
    return col.contains(val);
  }
  if (typeof col.containsValue == "function") {
    return col.containsValue(val);
  }
  if (goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.contains((col), val);
  }
  return goog.object.containsValue(col, val);
};
goog.structs.isEmpty = function(col) {
  if (typeof col.isEmpty == "function") {
    return col.isEmpty();
  }
  if (goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.isEmpty((col));
  }
  return goog.object.isEmpty(col);
};
goog.structs.clear = function(col) {
  if (typeof col.clear == "function") {
    col.clear();
  } else {
    if (goog.isArrayLike(col)) {
      goog.array.clear((col));
    } else {
      goog.object.clear(col);
    }
  }
};
goog.structs.forEach = function(col, f, opt_obj) {
  if (typeof col.forEach == "function") {
    col.forEach(f, opt_obj);
  } else {
    if (goog.isArrayLike(col) || goog.isString(col)) {
      goog.array.forEach((col), f, opt_obj);
    } else {
      var keys = goog.structs.getKeys(col);
      var values = goog.structs.getValues(col);
      var l = values.length;
      for (var i = 0;i < l;i++) {
        f.call(opt_obj, values[i], keys && keys[i], col);
      }
    }
  }
};
goog.structs.filter = function(col, f, opt_obj) {
  if (typeof col.filter == "function") {
    return col.filter(f, opt_obj);
  }
  if (goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.filter((col), f, opt_obj);
  }
  var rv;
  var keys = goog.structs.getKeys(col);
  var values = goog.structs.getValues(col);
  var l = values.length;
  if (keys) {
    rv = {};
    for (var i = 0;i < l;i++) {
      if (f.call(opt_obj, values[i], keys[i], col)) {
        rv[keys[i]] = values[i];
      }
    }
  } else {
    rv = [];
    for (var i = 0;i < l;i++) {
      if (f.call(opt_obj, values[i], undefined, col)) {
        rv.push(values[i]);
      }
    }
  }
  return rv;
};
goog.structs.map = function(col, f, opt_obj) {
  if (typeof col.map == "function") {
    return col.map(f, opt_obj);
  }
  if (goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.map((col), f, opt_obj);
  }
  var rv;
  var keys = goog.structs.getKeys(col);
  var values = goog.structs.getValues(col);
  var l = values.length;
  if (keys) {
    rv = {};
    for (var i = 0;i < l;i++) {
      rv[keys[i]] = f.call(opt_obj, values[i], keys[i], col);
    }
  } else {
    rv = [];
    for (var i = 0;i < l;i++) {
      rv[i] = f.call(opt_obj, values[i], undefined, col);
    }
  }
  return rv;
};
goog.structs.some = function(col, f, opt_obj) {
  if (typeof col.some == "function") {
    return col.some(f, opt_obj);
  }
  if (goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.some((col), f, opt_obj);
  }
  var keys = goog.structs.getKeys(col);
  var values = goog.structs.getValues(col);
  var l = values.length;
  for (var i = 0;i < l;i++) {
    if (f.call(opt_obj, values[i], keys && keys[i], col)) {
      return true;
    }
  }
  return false;
};
goog.structs.every = function(col, f, opt_obj) {
  if (typeof col.every == "function") {
    return col.every(f, opt_obj);
  }
  if (goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.every((col), f, opt_obj);
  }
  var keys = goog.structs.getKeys(col);
  var values = goog.structs.getValues(col);
  var l = values.length;
  for (var i = 0;i < l;i++) {
    if (!f.call(opt_obj, values[i], keys && keys[i], col)) {
      return false;
    }
  }
  return true;
};
goog.provide("goog.structs.Collection");
goog.structs.Collection = function() {
};
goog.structs.Collection.prototype.add;
goog.structs.Collection.prototype.remove;
goog.structs.Collection.prototype.contains;
goog.structs.Collection.prototype.getCount;
goog.provide("goog.math");
goog.require("goog.array");
goog.require("goog.asserts");
goog.math.randomInt = function(a) {
  return Math.floor(Math.random() * a);
};
goog.math.uniformRandom = function(a, b) {
  return a + Math.random() * (b - a);
};
goog.math.clamp = function(value, min, max) {
  return Math.min(Math.max(value, min), max);
};
goog.math.modulo = function(a, b) {
  var r = a % b;
  return r * b < 0 ? r + b : r;
};
goog.math.lerp = function(a, b, x) {
  return a + x * (b - a);
};
goog.math.nearlyEquals = function(a, b, opt_tolerance) {
  return Math.abs(a - b) <= (opt_tolerance || 1E-6);
};
goog.math.standardAngle = function(angle) {
  return goog.math.modulo(angle, 360);
};
goog.math.standardAngleInRadians = function(angle) {
  return goog.math.modulo(angle, 2 * Math.PI);
};
goog.math.toRadians = function(angleDegrees) {
  return angleDegrees * Math.PI / 180;
};
goog.math.toDegrees = function(angleRadians) {
  return angleRadians * 180 / Math.PI;
};
goog.math.angleDx = function(degrees, radius) {
  return radius * Math.cos(goog.math.toRadians(degrees));
};
goog.math.angleDy = function(degrees, radius) {
  return radius * Math.sin(goog.math.toRadians(degrees));
};
goog.math.angle = function(x1, y1, x2, y2) {
  return goog.math.standardAngle(goog.math.toDegrees(Math.atan2(y2 - y1, x2 - x1)));
};
goog.math.angleDifference = function(startAngle, endAngle) {
  var d = goog.math.standardAngle(endAngle) - goog.math.standardAngle(startAngle);
  if (d > 180) {
    d = d - 360;
  } else {
    if (d <= -180) {
      d = 360 + d;
    }
  }
  return d;
};
goog.math.sign = function(x) {
  return x == 0 ? 0 : x < 0 ? -1 : 1;
};
goog.math.longestCommonSubsequence = function(array1, array2, opt_compareFn, opt_collectorFn) {
  var compare = opt_compareFn || function(a, b) {
    return a == b;
  };
  var collect = opt_collectorFn || function(i1, i2) {
    return array1[i1];
  };
  var length1 = array1.length;
  var length2 = array2.length;
  var arr = [];
  for (var i = 0;i < length1 + 1;i++) {
    arr[i] = [];
    arr[i][0] = 0;
  }
  for (var j = 0;j < length2 + 1;j++) {
    arr[0][j] = 0;
  }
  for (i = 1;i <= length1;i++) {
    for (j = 1;j <= length2;j++) {
      if (compare(array1[i - 1], array2[j - 1])) {
        arr[i][j] = arr[i - 1][j - 1] + 1;
      } else {
        arr[i][j] = Math.max(arr[i - 1][j], arr[i][j - 1]);
      }
    }
  }
  var result = [];
  var i = length1, j = length2;
  while (i > 0 && j > 0) {
    if (compare(array1[i - 1], array2[j - 1])) {
      result.unshift(collect(i - 1, j - 1));
      i--;
      j--;
    } else {
      if (arr[i - 1][j] > arr[i][j - 1]) {
        i--;
      } else {
        j--;
      }
    }
  }
  return result;
};
goog.math.sum = function(var_args) {
  return(goog.array.reduce(arguments, function(sum, value) {
    return sum + value;
  }, 0));
};
goog.math.average = function(var_args) {
  return goog.math.sum.apply(null, arguments) / arguments.length;
};
goog.math.sampleVariance = function(var_args) {
  var sampleSize = arguments.length;
  if (sampleSize < 2) {
    return 0;
  }
  var mean = goog.math.average.apply(null, arguments);
  var variance = goog.math.sum.apply(null, goog.array.map(arguments, function(val) {
    return Math.pow(val - mean, 2);
  })) / (sampleSize - 1);
  return variance;
};
goog.math.standardDeviation = function(var_args) {
  return Math.sqrt(goog.math.sampleVariance.apply(null, arguments));
};
goog.math.isInt = function(num) {
  return isFinite(num) && num % 1 == 0;
};
goog.math.isFiniteNumber = function(num) {
  return isFinite(num) && !isNaN(num);
};
goog.math.log10Floor = function(num) {
  if (num > 0) {
    var x = Math.round(Math.log(num) * Math.LOG10E);
    return x - (parseFloat("1e" + x) > num);
  }
  return num == 0 ? -Infinity : NaN;
};
goog.math.safeFloor = function(num, opt_epsilon) {
  goog.asserts.assert(!goog.isDef(opt_epsilon) || opt_epsilon > 0);
  return Math.floor(num + (opt_epsilon || 2E-15));
};
goog.math.safeCeil = function(num, opt_epsilon) {
  goog.asserts.assert(!goog.isDef(opt_epsilon) || opt_epsilon > 0);
  return Math.ceil(num - (opt_epsilon || 2E-15));
};
goog.provide("goog.iter");
goog.provide("goog.iter.Iterable");
goog.provide("goog.iter.Iterator");
goog.provide("goog.iter.StopIteration");
goog.require("goog.array");
goog.require("goog.asserts");
goog.require("goog.functions");
goog.require("goog.math");
goog.iter.Iterable;
if ("StopIteration" in goog.global) {
  goog.iter.StopIteration = goog.global["StopIteration"];
} else {
  goog.iter.StopIteration = Error("StopIteration");
}
goog.iter.Iterator = function() {
};
goog.iter.Iterator.prototype.next = function() {
  throw goog.iter.StopIteration;
};
goog.iter.Iterator.prototype.__iterator__ = function(opt_keys) {
  return this;
};
goog.iter.toIterator = function(iterable) {
  if (iterable instanceof goog.iter.Iterator) {
    return iterable;
  }
  if (typeof iterable.__iterator__ == "function") {
    return iterable.__iterator__(false);
  }
  if (goog.isArrayLike(iterable)) {
    var i = 0;
    var newIter = new goog.iter.Iterator;
    newIter.next = function() {
      while (true) {
        if (i >= iterable.length) {
          throw goog.iter.StopIteration;
        }
        if (!(i in iterable)) {
          i++;
          continue;
        }
        return iterable[i++];
      }
    };
    return newIter;
  }
  throw Error("Not implemented");
};
goog.iter.forEach = function(iterable, f, opt_obj) {
  if (goog.isArrayLike(iterable)) {
    try {
      goog.array.forEach((iterable), f, opt_obj);
    } catch (ex) {
      if (ex !== goog.iter.StopIteration) {
        throw ex;
      }
    }
  } else {
    iterable = goog.iter.toIterator(iterable);
    try {
      while (true) {
        f.call(opt_obj, iterable.next(), undefined, iterable);
      }
    } catch (ex) {
      if (ex !== goog.iter.StopIteration) {
        throw ex;
      }
    }
  }
};
goog.iter.filter = function(iterable, f, opt_obj) {
  var iterator = goog.iter.toIterator(iterable);
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    while (true) {
      var val = iterator.next();
      if (f.call(opt_obj, val, undefined, iterator)) {
        return val;
      }
    }
  };
  return newIter;
};
goog.iter.filterFalse = function(iterable, f, opt_obj) {
  return goog.iter.filter(iterable, goog.functions.not(f), opt_obj);
};
goog.iter.range = function(startOrStop, opt_stop, opt_step) {
  var start = 0;
  var stop = startOrStop;
  var step = opt_step || 1;
  if (arguments.length > 1) {
    start = startOrStop;
    stop = opt_stop;
  }
  if (step == 0) {
    throw Error("Range step argument must not be zero");
  }
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    if (step > 0 && start >= stop || step < 0 && start <= stop) {
      throw goog.iter.StopIteration;
    }
    var rv = start;
    start += step;
    return rv;
  };
  return newIter;
};
goog.iter.join = function(iterable, deliminator) {
  return goog.iter.toArray(iterable).join(deliminator);
};
goog.iter.map = function(iterable, f, opt_obj) {
  var iterator = goog.iter.toIterator(iterable);
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    var val = iterator.next();
    return f.call(opt_obj, val, undefined, iterator);
  };
  return newIter;
};
goog.iter.reduce = function(iterable, f, val, opt_obj) {
  var rval = val;
  goog.iter.forEach(iterable, function(val) {
    rval = f.call(opt_obj, rval, val);
  });
  return rval;
};
goog.iter.some = function(iterable, f, opt_obj) {
  iterable = goog.iter.toIterator(iterable);
  try {
    while (true) {
      if (f.call(opt_obj, iterable.next(), undefined, iterable)) {
        return true;
      }
    }
  } catch (ex) {
    if (ex !== goog.iter.StopIteration) {
      throw ex;
    }
  }
  return false;
};
goog.iter.every = function(iterable, f, opt_obj) {
  iterable = goog.iter.toIterator(iterable);
  try {
    while (true) {
      if (!f.call(opt_obj, iterable.next(), undefined, iterable)) {
        return false;
      }
    }
  } catch (ex) {
    if (ex !== goog.iter.StopIteration) {
      throw ex;
    }
  }
  return true;
};
goog.iter.chain = function(var_args) {
  var iterator = goog.iter.toIterator(arguments);
  var iter = new goog.iter.Iterator;
  var current = null;
  iter.next = function() {
    while (true) {
      if (current == null) {
        var it = iterator.next();
        current = goog.iter.toIterator(it);
      }
      try {
        return current.next();
      } catch (ex) {
        if (ex !== goog.iter.StopIteration) {
          throw ex;
        }
        current = null;
      }
    }
  };
  return iter;
};
goog.iter.chainFromIterable = function(iterable) {
  return goog.iter.chain.apply(undefined, iterable);
};
goog.iter.dropWhile = function(iterable, f, opt_obj) {
  var iterator = goog.iter.toIterator(iterable);
  var newIter = new goog.iter.Iterator;
  var dropping = true;
  newIter.next = function() {
    while (true) {
      var val = iterator.next();
      if (dropping && f.call(opt_obj, val, undefined, iterator)) {
        continue;
      } else {
        dropping = false;
      }
      return val;
    }
  };
  return newIter;
};
goog.iter.takeWhile = function(iterable, f, opt_obj) {
  var iterator = goog.iter.toIterator(iterable);
  var newIter = new goog.iter.Iterator;
  var taking = true;
  newIter.next = function() {
    while (true) {
      if (taking) {
        var val = iterator.next();
        if (f.call(opt_obj, val, undefined, iterator)) {
          return val;
        } else {
          taking = false;
        }
      } else {
        throw goog.iter.StopIteration;
      }
    }
  };
  return newIter;
};
goog.iter.toArray = function(iterable) {
  if (goog.isArrayLike(iterable)) {
    return goog.array.toArray((iterable));
  }
  iterable = goog.iter.toIterator(iterable);
  var array = [];
  goog.iter.forEach(iterable, function(val) {
    array.push(val);
  });
  return array;
};
goog.iter.equals = function(iterable1, iterable2) {
  var fillValue = {};
  var pairs = goog.iter.zipLongest(fillValue, iterable1, iterable2);
  return goog.iter.every(pairs, function(pair) {
    return pair[0] == pair[1];
  });
};
goog.iter.nextOrValue = function(iterable, defaultValue) {
  try {
    return goog.iter.toIterator(iterable).next();
  } catch (e) {
    if (e != goog.iter.StopIteration) {
      throw e;
    }
    return defaultValue;
  }
};
goog.iter.product = function(var_args) {
  var someArrayEmpty = goog.array.some(arguments, function(arr) {
    return!arr.length;
  });
  if (someArrayEmpty || !arguments.length) {
    return new goog.iter.Iterator;
  }
  var iter = new goog.iter.Iterator;
  var arrays = arguments;
  var indicies = goog.array.repeat(0, arrays.length);
  iter.next = function() {
    if (indicies) {
      var retVal = goog.array.map(indicies, function(valueIndex, arrayIndex) {
        return arrays[arrayIndex][valueIndex];
      });
      for (var i = indicies.length - 1;i >= 0;i--) {
        goog.asserts.assert(indicies);
        if (indicies[i] < arrays[i].length - 1) {
          indicies[i]++;
          break;
        }
        if (i == 0) {
          indicies = null;
          break;
        }
        indicies[i] = 0;
      }
      return retVal;
    }
    throw goog.iter.StopIteration;
  };
  return iter;
};
goog.iter.cycle = function(iterable) {
  var baseIterator = goog.iter.toIterator(iterable);
  var cache = [];
  var cacheIndex = 0;
  var iter = new goog.iter.Iterator;
  var useCache = false;
  iter.next = function() {
    var returnElement = null;
    if (!useCache) {
      try {
        returnElement = baseIterator.next();
        cache.push(returnElement);
        return returnElement;
      } catch (e) {
        if (e != goog.iter.StopIteration || goog.array.isEmpty(cache)) {
          throw e;
        }
        useCache = true;
      }
    }
    returnElement = cache[cacheIndex];
    cacheIndex = (cacheIndex + 1) % cache.length;
    return returnElement;
  };
  return iter;
};
goog.iter.count = function(opt_start, opt_step) {
  var counter = opt_start || 0;
  var step = goog.isDef(opt_step) ? opt_step : 1;
  var iter = new goog.iter.Iterator;
  iter.next = function() {
    var returnValue = counter;
    counter += step;
    return returnValue;
  };
  return iter;
};
goog.iter.repeat = function(value) {
  var iter = new goog.iter.Iterator;
  iter.next = goog.functions.constant(value);
  return iter;
};
goog.iter.accumulate = function(iterable) {
  var iterator = goog.iter.toIterator(iterable);
  var total = 0;
  var iter = new goog.iter.Iterator;
  iter.next = function() {
    total += iterator.next();
    return total;
  };
  return iter;
};
goog.iter.zip = function(var_args) {
  var args = arguments;
  var iter = new goog.iter.Iterator;
  if (args.length > 0) {
    var iterators = goog.array.map(args, goog.iter.toIterator);
    iter.next = function() {
      var arr = goog.array.map(iterators, function(it) {
        return it.next();
      });
      return arr;
    };
  }
  return iter;
};
goog.iter.zipLongest = function(fillValue, var_args) {
  var args = goog.array.slice(arguments, 1);
  var iter = new goog.iter.Iterator;
  if (args.length > 0) {
    var iterators = goog.array.map(args, goog.iter.toIterator);
    iter.next = function() {
      var iteratorsHaveValues = false;
      var arr = goog.array.map(iterators, function(it) {
        var returnValue;
        try {
          returnValue = it.next();
          iteratorsHaveValues = true;
        } catch (ex) {
          if (ex !== goog.iter.StopIteration) {
            throw ex;
          }
          returnValue = fillValue;
        }
        return returnValue;
      });
      if (!iteratorsHaveValues) {
        throw goog.iter.StopIteration;
      }
      return arr;
    };
  }
  return iter;
};
goog.iter.compress = function(iterable, selectors) {
  var selectorIterator = goog.iter.toIterator(selectors);
  return goog.iter.filter(iterable, function() {
    return!!selectorIterator.next();
  });
};
goog.iter.GroupByIterator_ = function(iterable, opt_keyFunc) {
  this.iterator = goog.iter.toIterator(iterable);
  this.keyFunc = opt_keyFunc || goog.functions.identity;
  this.targetKey;
  this.currentKey;
  this.currentValue;
};
goog.inherits(goog.iter.GroupByIterator_, goog.iter.Iterator);
goog.iter.GroupByIterator_.prototype.next = function() {
  while (this.currentKey == this.targetKey) {
    this.currentValue = this.iterator.next();
    this.currentKey = this.keyFunc(this.currentValue);
  }
  this.targetKey = this.currentKey;
  return[this.currentKey, this.groupItems_(this.targetKey)];
};
goog.iter.GroupByIterator_.prototype.groupItems_ = function(targetKey) {
  var arr = [];
  while (this.currentKey == targetKey) {
    arr.push(this.currentValue);
    try {
      this.currentValue = this.iterator.next();
    } catch (ex) {
      if (ex !== goog.iter.StopIteration) {
        throw ex;
      }
      break;
    }
    this.currentKey = this.keyFunc(this.currentValue);
  }
  return arr;
};
goog.iter.groupBy = function(iterable, opt_keyFunc) {
  return new goog.iter.GroupByIterator_(iterable, opt_keyFunc);
};
goog.iter.starMap = function(iterable, f, opt_obj) {
  var iterator = goog.iter.toIterator(iterable);
  var iter = new goog.iter.Iterator;
  iter.next = function() {
    var args = goog.iter.toArray(iterator.next());
    return f.apply(opt_obj, goog.array.concat(args, undefined, iterator));
  };
  return iter;
};
goog.iter.tee = function(iterable, opt_num) {
  var iterator = goog.iter.toIterator(iterable);
  var num = goog.isNumber(opt_num) ? opt_num : 2;
  var buffers = goog.array.map(goog.array.range(num), function() {
    return[];
  });
  var addNextIteratorValueToBuffers = function() {
    var val = iterator.next();
    goog.array.forEach(buffers, function(buffer) {
      buffer.push(val);
    });
  };
  var createIterator = function(buffer) {
    var iter = new goog.iter.Iterator;
    iter.next = function() {
      if (goog.array.isEmpty(buffer)) {
        addNextIteratorValueToBuffers();
      }
      goog.asserts.assert(!goog.array.isEmpty(buffer));
      return buffer.shift();
    };
    return iter;
  };
  return goog.array.map(buffers, createIterator);
};
goog.iter.enumerate = function(iterable, opt_start) {
  return goog.iter.zip(goog.iter.count(opt_start), iterable);
};
goog.iter.limit = function(iterable, limitSize) {
  goog.asserts.assert(goog.math.isInt(limitSize) && limitSize >= 0);
  var iterator = goog.iter.toIterator(iterable);
  var iter = new goog.iter.Iterator;
  var remaining = limitSize;
  iter.next = function() {
    if (remaining-- > 0) {
      return iterator.next();
    }
    throw goog.iter.StopIteration;
  };
  return iter;
};
goog.iter.consume = function(iterable, count) {
  goog.asserts.assert(goog.math.isInt(count) && count >= 0);
  var iterator = goog.iter.toIterator(iterable);
  while (count-- > 0) {
    goog.iter.nextOrValue(iterator, null);
  }
  return iterator;
};
goog.iter.slice = function(iterable, start, opt_end) {
  goog.asserts.assert(goog.math.isInt(start) && start >= 0);
  var iterator = goog.iter.consume(iterable, start);
  if (goog.isNumber(opt_end)) {
    goog.asserts.assert(goog.math.isInt((opt_end)) && opt_end >= start);
    iterator = goog.iter.limit(iterator, opt_end - start);
  }
  return iterator;
};
goog.iter.hasDuplicates_ = function(arr) {
  var deduped = [];
  goog.array.removeDuplicates(arr, deduped);
  return arr.length != deduped.length;
};
goog.iter.permutations = function(iterable, opt_length) {
  var elements = goog.iter.toArray(iterable);
  var length = goog.isNumber(opt_length) ? opt_length : elements.length;
  var sets = goog.array.repeat(elements, length);
  var product = goog.iter.product.apply(undefined, sets);
  return goog.iter.filter(product, function(arr) {
    return!goog.iter.hasDuplicates_(arr);
  });
};
goog.iter.combinations = function(iterable, length) {
  var elements = goog.iter.toArray(iterable);
  var indexes = goog.iter.range(elements.length);
  var indexIterator = goog.iter.permutations(indexes, length);
  var sortedIndexIterator = goog.iter.filter(indexIterator, function(arr) {
    return goog.array.isSorted(arr);
  });
  var iter = new goog.iter.Iterator;
  function getIndexFromElements(index) {
    return elements[index];
  }
  iter.next = function() {
    return goog.array.map((sortedIndexIterator.next()), getIndexFromElements);
  };
  return iter;
};
goog.iter.combinationsWithReplacement = function(iterable, length) {
  var elements = goog.iter.toArray(iterable);
  var indexes = goog.array.range(elements.length);
  var sets = goog.array.repeat(indexes, length);
  var indexIterator = goog.iter.product.apply(undefined, sets);
  var sortedIndexIterator = goog.iter.filter(indexIterator, function(arr) {
    return goog.array.isSorted(arr);
  });
  var iter = new goog.iter.Iterator;
  function getIndexFromElements(index) {
    return elements[index];
  }
  iter.next = function() {
    return goog.array.map((sortedIndexIterator.next()), getIndexFromElements);
  };
  return iter;
};
goog.provide("goog.structs.Map");
goog.require("goog.iter.Iterator");
goog.require("goog.iter.StopIteration");
goog.require("goog.object");
goog.structs.Map = function(opt_map, var_args) {
  this.map_ = {};
  this.keys_ = [];
  this.count_ = 0;
  this.version_ = 0;
  var argLength = arguments.length;
  if (argLength > 1) {
    if (argLength % 2) {
      throw Error("Uneven number of arguments");
    }
    for (var i = 0;i < argLength;i += 2) {
      this.set(arguments[i], arguments[i + 1]);
    }
  } else {
    if (opt_map) {
      this.addAll((opt_map));
    }
  }
};
goog.structs.Map.prototype.getCount = function() {
  return this.count_;
};
goog.structs.Map.prototype.getValues = function() {
  this.cleanupKeysArray_();
  var rv = [];
  for (var i = 0;i < this.keys_.length;i++) {
    var key = this.keys_[i];
    rv.push(this.map_[key]);
  }
  return rv;
};
goog.structs.Map.prototype.getKeys = function() {
  this.cleanupKeysArray_();
  return(this.keys_.concat());
};
goog.structs.Map.prototype.containsKey = function(key) {
  return goog.structs.Map.hasKey_(this.map_, key);
};
goog.structs.Map.prototype.containsValue = function(val) {
  for (var i = 0;i < this.keys_.length;i++) {
    var key = this.keys_[i];
    if (goog.structs.Map.hasKey_(this.map_, key) && this.map_[key] == val) {
      return true;
    }
  }
  return false;
};
goog.structs.Map.prototype.equals = function(otherMap, opt_equalityFn) {
  if (this === otherMap) {
    return true;
  }
  if (this.count_ != otherMap.getCount()) {
    return false;
  }
  var equalityFn = opt_equalityFn || goog.structs.Map.defaultEquals;
  this.cleanupKeysArray_();
  for (var key, i = 0;key = this.keys_[i];i++) {
    if (!equalityFn(this.get(key), otherMap.get(key))) {
      return false;
    }
  }
  return true;
};
goog.structs.Map.defaultEquals = function(a, b) {
  return a === b;
};
goog.structs.Map.prototype.isEmpty = function() {
  return this.count_ == 0;
};
goog.structs.Map.prototype.clear = function() {
  this.map_ = {};
  this.keys_.length = 0;
  this.count_ = 0;
  this.version_ = 0;
};
goog.structs.Map.prototype.remove = function(key) {
  if (goog.structs.Map.hasKey_(this.map_, key)) {
    delete this.map_[key];
    this.count_--;
    this.version_++;
    if (this.keys_.length > 2 * this.count_) {
      this.cleanupKeysArray_();
    }
    return true;
  }
  return false;
};
goog.structs.Map.prototype.cleanupKeysArray_ = function() {
  if (this.count_ != this.keys_.length) {
    var srcIndex = 0;
    var destIndex = 0;
    while (srcIndex < this.keys_.length) {
      var key = this.keys_[srcIndex];
      if (goog.structs.Map.hasKey_(this.map_, key)) {
        this.keys_[destIndex++] = key;
      }
      srcIndex++;
    }
    this.keys_.length = destIndex;
  }
  if (this.count_ != this.keys_.length) {
    var seen = {};
    var srcIndex = 0;
    var destIndex = 0;
    while (srcIndex < this.keys_.length) {
      var key = this.keys_[srcIndex];
      if (!goog.structs.Map.hasKey_(seen, key)) {
        this.keys_[destIndex++] = key;
        seen[key] = 1;
      }
      srcIndex++;
    }
    this.keys_.length = destIndex;
  }
};
goog.structs.Map.prototype.get = function(key, opt_val) {
  if (goog.structs.Map.hasKey_(this.map_, key)) {
    return this.map_[key];
  }
  return opt_val;
};
goog.structs.Map.prototype.set = function(key, value) {
  if (!goog.structs.Map.hasKey_(this.map_, key)) {
    this.count_++;
    this.keys_.push(key);
    this.version_++;
  }
  this.map_[key] = value;
};
goog.structs.Map.prototype.addAll = function(map) {
  var keys, values;
  if (map instanceof goog.structs.Map) {
    keys = map.getKeys();
    values = map.getValues();
  } else {
    keys = goog.object.getKeys(map);
    values = goog.object.getValues(map);
  }
  for (var i = 0;i < keys.length;i++) {
    this.set(keys[i], values[i]);
  }
};
goog.structs.Map.prototype.forEach = function(f, opt_obj) {
  var keys = this.getKeys();
  for (var i = 0;i < keys.length;i++) {
    var key = keys[i];
    var value = this.get(key);
    f.call(opt_obj, value, key, this);
  }
};
goog.structs.Map.prototype.clone = function() {
  return new goog.structs.Map(this);
};
goog.structs.Map.prototype.transpose = function() {
  var transposed = new goog.structs.Map;
  for (var i = 0;i < this.keys_.length;i++) {
    var key = this.keys_[i];
    var value = this.map_[key];
    transposed.set(value, key);
  }
  return transposed;
};
goog.structs.Map.prototype.toObject = function() {
  this.cleanupKeysArray_();
  var obj = {};
  for (var i = 0;i < this.keys_.length;i++) {
    var key = this.keys_[i];
    obj[key] = this.map_[key];
  }
  return obj;
};
goog.structs.Map.prototype.getKeyIterator = function() {
  return this.__iterator__(true);
};
goog.structs.Map.prototype.getValueIterator = function() {
  return this.__iterator__(false);
};
goog.structs.Map.prototype.__iterator__ = function(opt_keys) {
  this.cleanupKeysArray_();
  var i = 0;
  var keys = this.keys_;
  var map = this.map_;
  var version = this.version_;
  var selfObj = this;
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    while (true) {
      if (version != selfObj.version_) {
        throw Error("The map has changed since the iterator was created");
      }
      if (i >= keys.length) {
        throw goog.iter.StopIteration;
      }
      var key = keys[i++];
      return opt_keys ? key : map[key];
    }
  };
  return newIter;
};
goog.structs.Map.hasKey_ = function(obj, key) {
  return Object.prototype.hasOwnProperty.call(obj, key);
};
goog.provide("goog.structs.Set");
goog.require("goog.structs");
goog.require("goog.structs.Collection");
goog.require("goog.structs.Map");
goog.structs.Set = function(opt_values) {
  this.map_ = new goog.structs.Map;
  if (opt_values) {
    this.addAll(opt_values);
  }
};
goog.structs.Set.getKey_ = function(val) {
  var type = typeof val;
  if (type == "object" && val || type == "function") {
    return "o" + goog.getUid((val));
  } else {
    return type.substr(0, 1) + val;
  }
};
goog.structs.Set.prototype.getCount = function() {
  return this.map_.getCount();
};
goog.structs.Set.prototype.add = function(element) {
  this.map_.set(goog.structs.Set.getKey_(element), element);
};
goog.structs.Set.prototype.addAll = function(col) {
  var values = goog.structs.getValues(col);
  var l = values.length;
  for (var i = 0;i < l;i++) {
    this.add(values[i]);
  }
};
goog.structs.Set.prototype.removeAll = function(col) {
  var values = goog.structs.getValues(col);
  var l = values.length;
  for (var i = 0;i < l;i++) {
    this.remove(values[i]);
  }
};
goog.structs.Set.prototype.remove = function(element) {
  return this.map_.remove(goog.structs.Set.getKey_(element));
};
goog.structs.Set.prototype.clear = function() {
  this.map_.clear();
};
goog.structs.Set.prototype.isEmpty = function() {
  return this.map_.isEmpty();
};
goog.structs.Set.prototype.contains = function(element) {
  return this.map_.containsKey(goog.structs.Set.getKey_(element));
};
goog.structs.Set.prototype.containsAll = function(col) {
  return goog.structs.every(col, this.contains, this);
};
goog.structs.Set.prototype.intersection = function(col) {
  var result = new goog.structs.Set;
  var values = goog.structs.getValues(col);
  for (var i = 0;i < values.length;i++) {
    var value = values[i];
    if (this.contains(value)) {
      result.add(value);
    }
  }
  return result;
};
goog.structs.Set.prototype.difference = function(col) {
  var result = this.clone();
  result.removeAll(col);
  return result;
};
goog.structs.Set.prototype.getValues = function() {
  return this.map_.getValues();
};
goog.structs.Set.prototype.clone = function() {
  return new goog.structs.Set(this);
};
goog.structs.Set.prototype.equals = function(col) {
  return this.getCount() == goog.structs.getCount(col) && this.isSubsetOf(col);
};
goog.structs.Set.prototype.isSubsetOf = function(col) {
  var colCount = goog.structs.getCount(col);
  if (this.getCount() > colCount) {
    return false;
  }
  if (!(col instanceof goog.structs.Set) && colCount > 5) {
    col = new goog.structs.Set(col);
  }
  return goog.structs.every(this, function(value) {
    return goog.structs.contains(col, value);
  });
};
goog.structs.Set.prototype.__iterator__ = function(opt_keys) {
  return this.map_.__iterator__(false);
};
goog.provide("goog.debug");
goog.require("goog.array");
goog.require("goog.string");
goog.require("goog.structs.Set");
goog.require("goog.userAgent");
goog.define("goog.debug.LOGGING_ENABLED", goog.DEBUG);
goog.debug.catchErrors = function(logFunc, opt_cancel, opt_target) {
  var target = opt_target || goog.global;
  var oldErrorHandler = target.onerror;
  var retVal = !!opt_cancel;
  if (goog.userAgent.WEBKIT && !goog.userAgent.isVersionOrHigher("535.3")) {
    retVal = !retVal;
  }
  target.onerror = function(message, url, line, opt_col, opt_error) {
    if (oldErrorHandler) {
      oldErrorHandler(message, url, line, opt_col, opt_error);
    }
    logFunc({message:message, fileName:url, line:line, col:opt_col, error:opt_error});
    return retVal;
  };
};
goog.debug.expose = function(obj, opt_showFn) {
  if (typeof obj == "undefined") {
    return "undefined";
  }
  if (obj == null) {
    return "NULL";
  }
  var str = [];
  for (var x in obj) {
    if (!opt_showFn && goog.isFunction(obj[x])) {
      continue;
    }
    var s = x + " \x3d ";
    try {
      s += obj[x];
    } catch (e) {
      s += "*** " + e + " ***";
    }
    str.push(s);
  }
  return str.join("\n");
};
goog.debug.deepExpose = function(obj, opt_showFn) {
  var str = [];
  var helper = function(obj, space, parentSeen) {
    var nestspace = space + "  ";
    var seen = new goog.structs.Set(parentSeen);
    var indentMultiline = function(str) {
      return str.replace(/\n/g, "\n" + space);
    };
    try {
      if (!goog.isDef(obj)) {
        str.push("undefined");
      } else {
        if (goog.isNull(obj)) {
          str.push("NULL");
        } else {
          if (goog.isString(obj)) {
            str.push('"' + indentMultiline(obj) + '"');
          } else {
            if (goog.isFunction(obj)) {
              str.push(indentMultiline(String(obj)));
            } else {
              if (goog.isObject(obj)) {
                if (seen.contains(obj)) {
                  str.push("*** reference loop detected ***");
                } else {
                  seen.add(obj);
                  str.push("{");
                  for (var x in obj) {
                    if (!opt_showFn && goog.isFunction(obj[x])) {
                      continue;
                    }
                    str.push("\n");
                    str.push(nestspace);
                    str.push(x + " \x3d ");
                    helper(obj[x], nestspace, seen);
                  }
                  str.push("\n" + space + "}");
                }
              } else {
                str.push(obj);
              }
            }
          }
        }
      }
    } catch (e) {
      str.push("*** " + e + " ***");
    }
  };
  helper(obj, "", new goog.structs.Set);
  return str.join("");
};
goog.debug.exposeArray = function(arr) {
  var str = [];
  for (var i = 0;i < arr.length;i++) {
    if (goog.isArray(arr[i])) {
      str.push(goog.debug.exposeArray(arr[i]));
    } else {
      str.push(arr[i]);
    }
  }
  return "[ " + str.join(", ") + " ]";
};
goog.debug.exposeException = function(err, opt_fn) {
  try {
    var e = goog.debug.normalizeErrorObject(err);
    var error = "Message: " + goog.string.htmlEscape(e.message) + '\nUrl: \x3ca href\x3d"view-source:' + e.fileName + '" target\x3d"_new"\x3e' + e.fileName + "\x3c/a\x3e\nLine: " + e.lineNumber + "\n\nBrowser stack:\n" + goog.string.htmlEscape(e.stack + "-\x3e ") + "[end]\n\nJS stack traversal:\n" + goog.string.htmlEscape(goog.debug.getStacktrace(opt_fn) + "-\x3e ");
    return error;
  } catch (e2) {
    return "Exception trying to expose exception! You win, we lose. " + e2;
  }
};
goog.debug.normalizeErrorObject = function(err) {
  var href = goog.getObjectByName("window.location.href");
  if (goog.isString(err)) {
    return{"message":err, "name":"Unknown error", "lineNumber":"Not available", "fileName":href, "stack":"Not available"};
  }
  var lineNumber, fileName;
  var threwError = false;
  try {
    lineNumber = err.lineNumber || err.line || "Not available";
  } catch (e) {
    lineNumber = "Not available";
    threwError = true;
  }
  try {
    fileName = err.fileName || err.filename || err.sourceURL || goog.global["$googDebugFname"] || href;
  } catch (e) {
    fileName = "Not available";
    threwError = true;
  }
  if (threwError || !err.lineNumber || !err.fileName || !err.stack || !err.message || !err.name) {
    return{"message":err.message || "Not available", "name":err.name || "UnknownError", "lineNumber":lineNumber, "fileName":fileName, "stack":err.stack || "Not available"};
  }
  return err;
};
goog.debug.enhanceError = function(err, opt_message) {
  var error;
  if (typeof err == "string") {
    error = Error(err);
    if (Error.captureStackTrace) {
      Error.captureStackTrace(error, goog.debug.enhanceError);
    }
  } else {
    error = err;
  }
  if (!error.stack) {
    error.stack = goog.debug.getStacktrace(goog.debug.enhanceError);
  }
  if (opt_message) {
    var x = 0;
    while (error["message" + x]) {
      ++x;
    }
    error["message" + x] = String(opt_message);
  }
  return error;
};
goog.debug.getStacktraceSimple = function(opt_depth) {
  if (goog.STRICT_MODE_COMPATIBLE) {
    var stack = goog.debug.getNativeStackTrace_(goog.debug.getStacktraceSimple);
    if (stack) {
      return stack;
    }
  }
  var sb = [];
  var fn = arguments.callee.caller;
  var depth = 0;
  while (fn && (!opt_depth || depth < opt_depth)) {
    sb.push(goog.debug.getFunctionName(fn));
    sb.push("()\n");
    try {
      fn = fn.caller;
    } catch (e) {
      sb.push("[exception trying to get caller]\n");
      break;
    }
    depth++;
    if (depth >= goog.debug.MAX_STACK_DEPTH) {
      sb.push("[...long stack...]");
      break;
    }
  }
  if (opt_depth && depth >= opt_depth) {
    sb.push("[...reached max depth limit...]");
  } else {
    sb.push("[end]");
  }
  return sb.join("");
};
goog.debug.MAX_STACK_DEPTH = 50;
goog.debug.getNativeStackTrace_ = function(fn) {
  var tempErr = new Error;
  if (Error.captureStackTrace) {
    Error.captureStackTrace(tempErr, fn);
    return String(tempErr.stack);
  } else {
    try {
      throw tempErr;
    } catch (e) {
      tempErr = e;
    }
    var stack = tempErr.stack;
    if (stack) {
      return String(stack);
    }
  }
  return null;
};
goog.debug.getStacktrace = function(opt_fn) {
  var stack;
  if (goog.STRICT_MODE_COMPATIBLE) {
    var contextFn = opt_fn || goog.debug.getStacktrace;
    stack = goog.debug.getNativeStackTrace_(contextFn);
  }
  if (!stack) {
    stack = goog.debug.getStacktraceHelper_(opt_fn || arguments.callee.caller, []);
  }
  return stack;
};
goog.debug.getStacktraceHelper_ = function(fn, visited) {
  var sb = [];
  if (goog.array.contains(visited, fn)) {
    sb.push("[...circular reference...]");
  } else {
    if (fn && visited.length < goog.debug.MAX_STACK_DEPTH) {
      sb.push(goog.debug.getFunctionName(fn) + "(");
      var args = fn.arguments;
      for (var i = 0;args && i < args.length;i++) {
        if (i > 0) {
          sb.push(", ");
        }
        var argDesc;
        var arg = args[i];
        switch(typeof arg) {
          case "object":
            argDesc = arg ? "object" : "null";
            break;
          case "string":
            argDesc = arg;
            break;
          case "number":
            argDesc = String(arg);
            break;
          case "boolean":
            argDesc = arg ? "true" : "false";
            break;
          case "function":
            argDesc = goog.debug.getFunctionName(arg);
            argDesc = argDesc ? argDesc : "[fn]";
            break;
          case "undefined":
          ;
          default:
            argDesc = typeof arg;
            break;
        }
        if (argDesc.length > 40) {
          argDesc = argDesc.substr(0, 40) + "...";
        }
        sb.push(argDesc);
      }
      visited.push(fn);
      sb.push(")\n");
      try {
        sb.push(goog.debug.getStacktraceHelper_(fn.caller, visited));
      } catch (e) {
        sb.push("[exception trying to get caller]\n");
      }
    } else {
      if (fn) {
        sb.push("[...long stack...]");
      } else {
        sb.push("[end]");
      }
    }
  }
  return sb.join("");
};
goog.debug.setFunctionResolver = function(resolver) {
  goog.debug.fnNameResolver_ = resolver;
};
goog.debug.getFunctionName = function(fn) {
  if (goog.debug.fnNameCache_[fn]) {
    return goog.debug.fnNameCache_[fn];
  }
  if (goog.debug.fnNameResolver_) {
    var name = goog.debug.fnNameResolver_(fn);
    if (name) {
      goog.debug.fnNameCache_[fn] = name;
      return name;
    }
  }
  var functionSource = String(fn);
  if (!goog.debug.fnNameCache_[functionSource]) {
    var matches = /function ([^\(]+)/.exec(functionSource);
    if (matches) {
      var method = matches[1];
      goog.debug.fnNameCache_[functionSource] = method;
    } else {
      goog.debug.fnNameCache_[functionSource] = "[Anonymous]";
    }
  }
  return goog.debug.fnNameCache_[functionSource];
};
goog.debug.makeWhitespaceVisible = function(string) {
  return string.replace(/ /g, "[_]").replace(/\f/g, "[f]").replace(/\n/g, "[n]\n").replace(/\r/g, "[r]").replace(/\t/g, "[t]");
};
goog.debug.fnNameCache_ = {};
goog.debug.fnNameResolver_;
goog.provide("goog.debug.LogRecord");
goog.debug.LogRecord = function(level, msg, loggerName, opt_time, opt_sequenceNumber) {
  this.reset(level, msg, loggerName, opt_time, opt_sequenceNumber);
};
goog.debug.LogRecord.prototype.time_;
goog.debug.LogRecord.prototype.level_;
goog.debug.LogRecord.prototype.msg_;
goog.debug.LogRecord.prototype.loggerName_;
goog.debug.LogRecord.prototype.sequenceNumber_ = 0;
goog.debug.LogRecord.prototype.exception_ = null;
goog.debug.LogRecord.prototype.exceptionText_ = null;
goog.define("goog.debug.LogRecord.ENABLE_SEQUENCE_NUMBERS", true);
goog.debug.LogRecord.nextSequenceNumber_ = 0;
goog.debug.LogRecord.prototype.reset = function(level, msg, loggerName, opt_time, opt_sequenceNumber) {
  if (goog.debug.LogRecord.ENABLE_SEQUENCE_NUMBERS) {
    this.sequenceNumber_ = typeof opt_sequenceNumber == "number" ? opt_sequenceNumber : goog.debug.LogRecord.nextSequenceNumber_++;
  }
  this.time_ = opt_time || goog.now();
  this.level_ = level;
  this.msg_ = msg;
  this.loggerName_ = loggerName;
  delete this.exception_;
  delete this.exceptionText_;
};
goog.debug.LogRecord.prototype.getLoggerName = function() {
  return this.loggerName_;
};
goog.debug.LogRecord.prototype.getException = function() {
  return this.exception_;
};
goog.debug.LogRecord.prototype.setException = function(exception) {
  this.exception_ = exception;
};
goog.debug.LogRecord.prototype.getExceptionText = function() {
  return this.exceptionText_;
};
goog.debug.LogRecord.prototype.setExceptionText = function(text) {
  this.exceptionText_ = text;
};
goog.debug.LogRecord.prototype.setLoggerName = function(loggerName) {
  this.loggerName_ = loggerName;
};
goog.debug.LogRecord.prototype.getLevel = function() {
  return this.level_;
};
goog.debug.LogRecord.prototype.setLevel = function(level) {
  this.level_ = level;
};
goog.debug.LogRecord.prototype.getMessage = function() {
  return this.msg_;
};
goog.debug.LogRecord.prototype.setMessage = function(msg) {
  this.msg_ = msg;
};
goog.debug.LogRecord.prototype.getMillis = function() {
  return this.time_;
};
goog.debug.LogRecord.prototype.setMillis = function(time) {
  this.time_ = time;
};
goog.debug.LogRecord.prototype.getSequenceNumber = function() {
  return this.sequenceNumber_;
};
goog.provide("goog.debug.LogBuffer");
goog.require("goog.asserts");
goog.require("goog.debug.LogRecord");
goog.debug.LogBuffer = function() {
  goog.asserts.assert(goog.debug.LogBuffer.isBufferingEnabled(), "Cannot use goog.debug.LogBuffer without defining " + "goog.debug.LogBuffer.CAPACITY.");
  this.clear();
};
goog.debug.LogBuffer.getInstance = function() {
  if (!goog.debug.LogBuffer.instance_) {
    goog.debug.LogBuffer.instance_ = new goog.debug.LogBuffer;
  }
  return goog.debug.LogBuffer.instance_;
};
goog.define("goog.debug.LogBuffer.CAPACITY", 0);
goog.debug.LogBuffer.prototype.buffer_;
goog.debug.LogBuffer.prototype.curIndex_;
goog.debug.LogBuffer.prototype.isFull_;
goog.debug.LogBuffer.prototype.addRecord = function(level, msg, loggerName) {
  var curIndex = (this.curIndex_ + 1) % goog.debug.LogBuffer.CAPACITY;
  this.curIndex_ = curIndex;
  if (this.isFull_) {
    var ret = this.buffer_[curIndex];
    ret.reset(level, msg, loggerName);
    return ret;
  }
  this.isFull_ = curIndex == goog.debug.LogBuffer.CAPACITY - 1;
  return this.buffer_[curIndex] = new goog.debug.LogRecord(level, msg, loggerName);
};
goog.debug.LogBuffer.isBufferingEnabled = function() {
  return goog.debug.LogBuffer.CAPACITY > 0;
};
goog.debug.LogBuffer.prototype.clear = function() {
  this.buffer_ = new Array(goog.debug.LogBuffer.CAPACITY);
  this.curIndex_ = -1;
  this.isFull_ = false;
};
goog.debug.LogBuffer.prototype.forEachRecord = function(func) {
  var buffer = this.buffer_;
  if (!buffer[0]) {
    return;
  }
  var curIndex = this.curIndex_;
  var i = this.isFull_ ? curIndex : -1;
  do {
    i = (i + 1) % goog.debug.LogBuffer.CAPACITY;
    func((buffer[i]));
  } while (i != curIndex);
};
goog.provide("goog.debug.LogManager");
goog.provide("goog.debug.Loggable");
goog.provide("goog.debug.Logger");
goog.provide("goog.debug.Logger.Level");
goog.require("goog.array");
goog.require("goog.asserts");
goog.require("goog.debug");
goog.require("goog.debug.LogBuffer");
goog.require("goog.debug.LogRecord");
goog.debug.Loggable;
goog.debug.Logger = function(name) {
  this.name_ = name;
  this.parent_ = null;
  this.level_ = null;
  this.children_ = null;
  this.handlers_ = null;
};
goog.debug.Logger.ROOT_LOGGER_NAME = "";
goog.define("goog.debug.Logger.ENABLE_HIERARCHY", true);
if (!goog.debug.Logger.ENABLE_HIERARCHY) {
  goog.debug.Logger.rootHandlers_ = [];
  goog.debug.Logger.rootLevel_;
}
goog.debug.Logger.Level = function(name, value) {
  this.name = name;
  this.value = value;
};
goog.debug.Logger.Level.prototype.toString = function() {
  return this.name;
};
goog.debug.Logger.Level.OFF = new goog.debug.Logger.Level("OFF", Infinity);
goog.debug.Logger.Level.SHOUT = new goog.debug.Logger.Level("SHOUT", 1200);
goog.debug.Logger.Level.SEVERE = new goog.debug.Logger.Level("SEVERE", 1E3);
goog.debug.Logger.Level.WARNING = new goog.debug.Logger.Level("WARNING", 900);
goog.debug.Logger.Level.INFO = new goog.debug.Logger.Level("INFO", 800);
goog.debug.Logger.Level.CONFIG = new goog.debug.Logger.Level("CONFIG", 700);
goog.debug.Logger.Level.FINE = new goog.debug.Logger.Level("FINE", 500);
goog.debug.Logger.Level.FINER = new goog.debug.Logger.Level("FINER", 400);
goog.debug.Logger.Level.FINEST = new goog.debug.Logger.Level("FINEST", 300);
goog.debug.Logger.Level.ALL = new goog.debug.Logger.Level("ALL", 0);
goog.debug.Logger.Level.PREDEFINED_LEVELS = [goog.debug.Logger.Level.OFF, goog.debug.Logger.Level.SHOUT, goog.debug.Logger.Level.SEVERE, goog.debug.Logger.Level.WARNING, goog.debug.Logger.Level.INFO, goog.debug.Logger.Level.CONFIG, goog.debug.Logger.Level.FINE, goog.debug.Logger.Level.FINER, goog.debug.Logger.Level.FINEST, goog.debug.Logger.Level.ALL];
goog.debug.Logger.Level.predefinedLevelsCache_ = null;
goog.debug.Logger.Level.createPredefinedLevelsCache_ = function() {
  goog.debug.Logger.Level.predefinedLevelsCache_ = {};
  for (var i = 0, level;level = goog.debug.Logger.Level.PREDEFINED_LEVELS[i];i++) {
    goog.debug.Logger.Level.predefinedLevelsCache_[level.value] = level;
    goog.debug.Logger.Level.predefinedLevelsCache_[level.name] = level;
  }
};
goog.debug.Logger.Level.getPredefinedLevel = function(name) {
  if (!goog.debug.Logger.Level.predefinedLevelsCache_) {
    goog.debug.Logger.Level.createPredefinedLevelsCache_();
  }
  return goog.debug.Logger.Level.predefinedLevelsCache_[name] || null;
};
goog.debug.Logger.Level.getPredefinedLevelByValue = function(value) {
  if (!goog.debug.Logger.Level.predefinedLevelsCache_) {
    goog.debug.Logger.Level.createPredefinedLevelsCache_();
  }
  if (value in goog.debug.Logger.Level.predefinedLevelsCache_) {
    return goog.debug.Logger.Level.predefinedLevelsCache_[value];
  }
  for (var i = 0;i < goog.debug.Logger.Level.PREDEFINED_LEVELS.length;++i) {
    var level = goog.debug.Logger.Level.PREDEFINED_LEVELS[i];
    if (level.value <= value) {
      return level;
    }
  }
  return null;
};
goog.debug.Logger.getLogger = function(name) {
  return goog.debug.LogManager.getLogger(name);
};
goog.debug.Logger.logToProfilers = function(msg) {
  if (goog.global["console"]) {
    if (goog.global["console"]["timeStamp"]) {
      goog.global["console"]["timeStamp"](msg);
    } else {
      if (goog.global["console"]["markTimeline"]) {
        goog.global["console"]["markTimeline"](msg);
      }
    }
  }
  if (goog.global["msWriteProfilerMark"]) {
    goog.global["msWriteProfilerMark"](msg);
  }
};
goog.debug.Logger.prototype.getName = function() {
  return this.name_;
};
goog.debug.Logger.prototype.addHandler = function(handler) {
  if (goog.debug.LOGGING_ENABLED) {
    if (goog.debug.Logger.ENABLE_HIERARCHY) {
      if (!this.handlers_) {
        this.handlers_ = [];
      }
      this.handlers_.push(handler);
    } else {
      goog.asserts.assert(!this.name_, "Cannot call addHandler on a non-root logger when " + "goog.debug.Logger.ENABLE_HIERARCHY is false.");
      goog.debug.Logger.rootHandlers_.push(handler);
    }
  }
};
goog.debug.Logger.prototype.removeHandler = function(handler) {
  if (goog.debug.LOGGING_ENABLED) {
    var handlers = goog.debug.Logger.ENABLE_HIERARCHY ? this.handlers_ : goog.debug.Logger.rootHandlers_;
    return!!handlers && goog.array.remove(handlers, handler);
  } else {
    return false;
  }
};
goog.debug.Logger.prototype.getParent = function() {
  return this.parent_;
};
goog.debug.Logger.prototype.getChildren = function() {
  if (!this.children_) {
    this.children_ = {};
  }
  return this.children_;
};
goog.debug.Logger.prototype.setLevel = function(level) {
  if (goog.debug.LOGGING_ENABLED) {
    if (goog.debug.Logger.ENABLE_HIERARCHY) {
      this.level_ = level;
    } else {
      goog.asserts.assert(!this.name_, "Cannot call setLevel() on a non-root logger when " + "goog.debug.Logger.ENABLE_HIERARCHY is false.");
      goog.debug.Logger.rootLevel_ = level;
    }
  }
};
goog.debug.Logger.prototype.getLevel = function() {
  return goog.debug.LOGGING_ENABLED ? this.level_ : goog.debug.Logger.Level.OFF;
};
goog.debug.Logger.prototype.getEffectiveLevel = function() {
  if (!goog.debug.LOGGING_ENABLED) {
    return goog.debug.Logger.Level.OFF;
  }
  if (!goog.debug.Logger.ENABLE_HIERARCHY) {
    return goog.debug.Logger.rootLevel_;
  }
  if (this.level_) {
    return this.level_;
  }
  if (this.parent_) {
    return this.parent_.getEffectiveLevel();
  }
  goog.asserts.fail("Root logger has no level set.");
  return null;
};
goog.debug.Logger.prototype.isLoggable = function(level) {
  return goog.debug.LOGGING_ENABLED && level.value >= this.getEffectiveLevel().value;
};
goog.debug.Logger.prototype.log = function(level, msg, opt_exception) {
  if (goog.debug.LOGGING_ENABLED && this.isLoggable(level)) {
    if (goog.isFunction(msg)) {
      msg = msg();
    }
    this.doLogRecord_(this.getLogRecord(level, msg, opt_exception, goog.debug.Logger.prototype.log));
  }
};
goog.debug.Logger.prototype.getLogRecord = function(level, msg, opt_exception, opt_fnStackContext) {
  if (goog.debug.LogBuffer.isBufferingEnabled()) {
    var logRecord = goog.debug.LogBuffer.getInstance().addRecord(level, msg, this.name_)
  } else {
    logRecord = new goog.debug.LogRecord(level, String(msg), this.name_);
  }
  if (opt_exception) {
    var context;
    if (goog.STRICT_MODE_COMPATIBLE) {
      context = opt_fnStackContext || goog.debug.Logger.prototype.getLogRecord;
    } else {
      context = opt_fnStackContext || arguments.callee.caller;
    }
    logRecord.setException(opt_exception);
    logRecord.setExceptionText(goog.debug.exposeException(opt_exception, opt_fnStackContext || goog.debug.Logger.prototype.getLogRecord));
  }
  return logRecord;
};
goog.debug.Logger.prototype.shout = function(msg, opt_exception) {
  if (goog.debug.LOGGING_ENABLED) {
    this.log(goog.debug.Logger.Level.SHOUT, msg, opt_exception);
  }
};
goog.debug.Logger.prototype.severe = function(msg, opt_exception) {
  if (goog.debug.LOGGING_ENABLED) {
    this.log(goog.debug.Logger.Level.SEVERE, msg, opt_exception);
  }
};
goog.debug.Logger.prototype.warning = function(msg, opt_exception) {
  if (goog.debug.LOGGING_ENABLED) {
    this.log(goog.debug.Logger.Level.WARNING, msg, opt_exception);
  }
};
goog.debug.Logger.prototype.info = function(msg, opt_exception) {
  if (goog.debug.LOGGING_ENABLED) {
    this.log(goog.debug.Logger.Level.INFO, msg, opt_exception);
  }
};
goog.debug.Logger.prototype.config = function(msg, opt_exception) {
  if (goog.debug.LOGGING_ENABLED) {
    this.log(goog.debug.Logger.Level.CONFIG, msg, opt_exception);
  }
};
goog.debug.Logger.prototype.fine = function(msg, opt_exception) {
  if (goog.debug.LOGGING_ENABLED) {
    this.log(goog.debug.Logger.Level.FINE, msg, opt_exception);
  }
};
goog.debug.Logger.prototype.finer = function(msg, opt_exception) {
  if (goog.debug.LOGGING_ENABLED) {
    this.log(goog.debug.Logger.Level.FINER, msg, opt_exception);
  }
};
goog.debug.Logger.prototype.finest = function(msg, opt_exception) {
  if (goog.debug.LOGGING_ENABLED) {
    this.log(goog.debug.Logger.Level.FINEST, msg, opt_exception);
  }
};
goog.debug.Logger.prototype.logRecord = function(logRecord) {
  if (goog.debug.LOGGING_ENABLED && this.isLoggable(logRecord.getLevel())) {
    this.doLogRecord_(logRecord);
  }
};
goog.debug.Logger.prototype.doLogRecord_ = function(logRecord) {
  goog.debug.Logger.logToProfilers("log:" + logRecord.getMessage());
  if (goog.debug.Logger.ENABLE_HIERARCHY) {
    var target = this;
    while (target) {
      target.callPublish_(logRecord);
      target = target.getParent();
    }
  } else {
    for (var i = 0, handler;handler = goog.debug.Logger.rootHandlers_[i++];) {
      handler(logRecord);
    }
  }
};
goog.debug.Logger.prototype.callPublish_ = function(logRecord) {
  if (this.handlers_) {
    for (var i = 0, handler;handler = this.handlers_[i];i++) {
      handler(logRecord);
    }
  }
};
goog.debug.Logger.prototype.setParent_ = function(parent) {
  this.parent_ = parent;
};
goog.debug.Logger.prototype.addChild_ = function(name, logger) {
  this.getChildren()[name] = logger;
};
goog.debug.LogManager = {};
goog.debug.LogManager.loggers_ = {};
goog.debug.LogManager.rootLogger_ = null;
goog.debug.LogManager.initialize = function() {
  if (!goog.debug.LogManager.rootLogger_) {
    goog.debug.LogManager.rootLogger_ = new goog.debug.Logger(goog.debug.Logger.ROOT_LOGGER_NAME);
    goog.debug.LogManager.loggers_[goog.debug.Logger.ROOT_LOGGER_NAME] = goog.debug.LogManager.rootLogger_;
    goog.debug.LogManager.rootLogger_.setLevel(goog.debug.Logger.Level.CONFIG);
  }
};
goog.debug.LogManager.getLoggers = function() {
  return goog.debug.LogManager.loggers_;
};
goog.debug.LogManager.getRoot = function() {
  goog.debug.LogManager.initialize();
  return(goog.debug.LogManager.rootLogger_);
};
goog.debug.LogManager.getLogger = function(name) {
  goog.debug.LogManager.initialize();
  var ret = goog.debug.LogManager.loggers_[name];
  return ret || goog.debug.LogManager.createLogger_(name);
};
goog.debug.LogManager.createFunctionForCatchErrors = function(opt_logger) {
  return function(info) {
    var logger = opt_logger || goog.debug.LogManager.getRoot();
    logger.severe("Error: " + info.message + " (" + info.fileName + " @ Line: " + info.line + ")");
  };
};
goog.debug.LogManager.createLogger_ = function(name) {
  var logger = new goog.debug.Logger(name);
  if (goog.debug.Logger.ENABLE_HIERARCHY) {
    var lastDotIndex = name.lastIndexOf(".");
    var parentName = name.substr(0, lastDotIndex);
    var leafName = name.substr(lastDotIndex + 1);
    var parentLogger = goog.debug.LogManager.getLogger(parentName);
    parentLogger.addChild_(leafName, logger);
    logger.setParent_(parentLogger);
  }
  goog.debug.LogManager.loggers_[name] = logger;
  return logger;
};
goog.provide("goog.log");
goog.provide("goog.log.Level");
goog.provide("goog.log.LogRecord");
goog.provide("goog.log.Logger");
goog.require("goog.debug");
goog.require("goog.debug.LogManager");
goog.require("goog.debug.LogRecord");
goog.require("goog.debug.Logger");
goog.define("goog.log.ENABLED", goog.debug.LOGGING_ENABLED);
goog.log.ROOT_LOGGER_NAME = goog.debug.Logger.ROOT_LOGGER_NAME;
goog.log.Logger = goog.debug.Logger;
goog.log.Level = goog.debug.Logger.Level;
goog.log.LogRecord = goog.debug.LogRecord;
goog.log.getLogger = function(name, opt_level) {
  if (goog.log.ENABLED) {
    var logger = goog.debug.LogManager.getLogger(name);
    if (opt_level && logger) {
      logger.setLevel(opt_level);
    }
    return logger;
  } else {
    return null;
  }
};
goog.log.addHandler = function(logger, handler) {
  if (goog.log.ENABLED && logger) {
    logger.addHandler(handler);
  }
};
goog.log.removeHandler = function(logger, handler) {
  if (goog.log.ENABLED && logger) {
    return logger.removeHandler(handler);
  } else {
    return false;
  }
};
goog.log.log = function(logger, level, msg, opt_exception) {
  if (goog.log.ENABLED && logger) {
    logger.log(level, msg, opt_exception);
  }
};
goog.log.error = function(logger, msg, opt_exception) {
  if (goog.log.ENABLED && logger) {
    logger.severe(msg, opt_exception);
  }
};
goog.log.warning = function(logger, msg, opt_exception) {
  if (goog.log.ENABLED && logger) {
    logger.warning(msg, opt_exception);
  }
};
goog.log.info = function(logger, msg, opt_exception) {
  if (goog.log.ENABLED && logger) {
    logger.info(msg, opt_exception);
  }
};
goog.log.fine = function(logger, msg, opt_exception) {
  if (goog.log.ENABLED && logger) {
    logger.fine(msg, opt_exception);
  }
};
goog.provide("goog.net.ErrorCode");
goog.net.ErrorCode = {NO_ERROR:0, ACCESS_DENIED:1, FILE_NOT_FOUND:2, FF_SILENT_ERROR:3, CUSTOM_ERROR:4, EXCEPTION:5, HTTP_ERROR:6, ABORT:7, TIMEOUT:8, OFFLINE:9};
goog.net.ErrorCode.getDebugMessage = function(errorCode) {
  switch(errorCode) {
    case goog.net.ErrorCode.NO_ERROR:
      return "No Error";
    case goog.net.ErrorCode.ACCESS_DENIED:
      return "Access denied to content document";
    case goog.net.ErrorCode.FILE_NOT_FOUND:
      return "File not found";
    case goog.net.ErrorCode.FF_SILENT_ERROR:
      return "Firefox silently errored";
    case goog.net.ErrorCode.CUSTOM_ERROR:
      return "Application custom error";
    case goog.net.ErrorCode.EXCEPTION:
      return "An exception occurred";
    case goog.net.ErrorCode.HTTP_ERROR:
      return "Http response at 400 or 500 level";
    case goog.net.ErrorCode.ABORT:
      return "Request was aborted";
    case goog.net.ErrorCode.TIMEOUT:
      return "Request timed out";
    case goog.net.ErrorCode.OFFLINE:
      return "The resource is not available offline";
    default:
      return "Unrecognized error code";
  }
};
goog.provide("goog.net.EventType");
goog.net.EventType = {COMPLETE:"complete", SUCCESS:"success", ERROR:"error", ABORT:"abort", READY:"ready", READY_STATE_CHANGE:"readystatechange", TIMEOUT:"timeout", INCREMENTAL_DATA:"incrementaldata", PROGRESS:"progress"};
goog.provide("goog.net.HttpStatus");
goog.net.HttpStatus = {CONTINUE:100, SWITCHING_PROTOCOLS:101, OK:200, CREATED:201, ACCEPTED:202, NON_AUTHORITATIVE_INFORMATION:203, NO_CONTENT:204, RESET_CONTENT:205, PARTIAL_CONTENT:206, MULTIPLE_CHOICES:300, MOVED_PERMANENTLY:301, FOUND:302, SEE_OTHER:303, NOT_MODIFIED:304, USE_PROXY:305, TEMPORARY_REDIRECT:307, BAD_REQUEST:400, UNAUTHORIZED:401, PAYMENT_REQUIRED:402, FORBIDDEN:403, NOT_FOUND:404, METHOD_NOT_ALLOWED:405, NOT_ACCEPTABLE:406, PROXY_AUTHENTICATION_REQUIRED:407, REQUEST_TIMEOUT:408, 
CONFLICT:409, GONE:410, LENGTH_REQUIRED:411, PRECONDITION_FAILED:412, REQUEST_ENTITY_TOO_LARGE:413, REQUEST_URI_TOO_LONG:414, UNSUPPORTED_MEDIA_TYPE:415, REQUEST_RANGE_NOT_SATISFIABLE:416, EXPECTATION_FAILED:417, INTERNAL_SERVER_ERROR:500, NOT_IMPLEMENTED:501, BAD_GATEWAY:502, SERVICE_UNAVAILABLE:503, GATEWAY_TIMEOUT:504, HTTP_VERSION_NOT_SUPPORTED:505, QUIRK_IE_NO_CONTENT:1223};
goog.net.HttpStatus.isSuccess = function(status) {
  switch(status) {
    case goog.net.HttpStatus.OK:
    ;
    case goog.net.HttpStatus.CREATED:
    ;
    case goog.net.HttpStatus.ACCEPTED:
    ;
    case goog.net.HttpStatus.NO_CONTENT:
    ;
    case goog.net.HttpStatus.PARTIAL_CONTENT:
    ;
    case goog.net.HttpStatus.NOT_MODIFIED:
    ;
    case goog.net.HttpStatus.QUIRK_IE_NO_CONTENT:
      return true;
    default:
      return false;
  }
};
goog.provide("goog.net.XhrLike");
goog.net.XhrLike = function() {
};
goog.net.XhrLike.OrNative;
goog.net.XhrLike.prototype.onreadystatechange;
goog.net.XhrLike.prototype.responseText;
goog.net.XhrLike.prototype.responseXML;
goog.net.XhrLike.prototype.readyState;
goog.net.XhrLike.prototype.status;
goog.net.XhrLike.prototype.statusText;
goog.net.XhrLike.prototype.open = function(method, url, opt_async, opt_user, opt_password) {
};
goog.net.XhrLike.prototype.send = function(opt_data) {
};
goog.net.XhrLike.prototype.abort = function() {
};
goog.net.XhrLike.prototype.setRequestHeader = function(header, value) {
};
goog.net.XhrLike.prototype.getResponseHeader = function(header) {
};
goog.net.XhrLike.prototype.getAllResponseHeaders = function() {
};
goog.provide("goog.net.XmlHttpFactory");
goog.require("goog.net.XhrLike");
goog.net.XmlHttpFactory = function() {
};
goog.net.XmlHttpFactory.prototype.cachedOptions_ = null;
goog.net.XmlHttpFactory.prototype.createInstance = goog.abstractMethod;
goog.net.XmlHttpFactory.prototype.getOptions = function() {
  return this.cachedOptions_ || (this.cachedOptions_ = this.internalGetOptions());
};
goog.net.XmlHttpFactory.prototype.internalGetOptions = goog.abstractMethod;
goog.provide("goog.net.WrapperXmlHttpFactory");
goog.require("goog.net.XhrLike");
goog.require("goog.net.XmlHttpFactory");
goog.net.WrapperXmlHttpFactory = function(xhrFactory, optionsFactory) {
  goog.net.XmlHttpFactory.call(this);
  this.xhrFactory_ = xhrFactory;
  this.optionsFactory_ = optionsFactory;
};
goog.inherits(goog.net.WrapperXmlHttpFactory, goog.net.XmlHttpFactory);
goog.net.WrapperXmlHttpFactory.prototype.createInstance = function() {
  return this.xhrFactory_();
};
goog.net.WrapperXmlHttpFactory.prototype.getOptions = function() {
  return this.optionsFactory_();
};
goog.provide("goog.net.DefaultXmlHttpFactory");
goog.provide("goog.net.XmlHttp");
goog.provide("goog.net.XmlHttp.OptionType");
goog.provide("goog.net.XmlHttp.ReadyState");
goog.provide("goog.net.XmlHttpDefines");
goog.require("goog.asserts");
goog.require("goog.net.WrapperXmlHttpFactory");
goog.require("goog.net.XmlHttpFactory");
goog.net.XmlHttp = function() {
  return goog.net.XmlHttp.factory_.createInstance();
};
goog.define("goog.net.XmlHttp.ASSUME_NATIVE_XHR", false);
goog.net.XmlHttpDefines = {};
goog.define("goog.net.XmlHttpDefines.ASSUME_NATIVE_XHR", false);
goog.net.XmlHttp.getOptions = function() {
  return goog.net.XmlHttp.factory_.getOptions();
};
goog.net.XmlHttp.OptionType = {USE_NULL_FUNCTION:0, LOCAL_REQUEST_ERROR:1};
goog.net.XmlHttp.ReadyState = {UNINITIALIZED:0, LOADING:1, LOADED:2, INTERACTIVE:3, COMPLETE:4};
goog.net.XmlHttp.factory_;
goog.net.XmlHttp.setFactory = function(factory, optionsFactory) {
  goog.net.XmlHttp.setGlobalFactory(new goog.net.WrapperXmlHttpFactory(goog.asserts.assert(factory), goog.asserts.assert(optionsFactory)));
};
goog.net.XmlHttp.setGlobalFactory = function(factory) {
  goog.net.XmlHttp.factory_ = factory;
};
goog.net.DefaultXmlHttpFactory = function() {
  goog.net.XmlHttpFactory.call(this);
};
goog.inherits(goog.net.DefaultXmlHttpFactory, goog.net.XmlHttpFactory);
goog.net.DefaultXmlHttpFactory.prototype.createInstance = function() {
  var progId = this.getProgId_();
  if (progId) {
    return new ActiveXObject(progId);
  } else {
    return new XMLHttpRequest;
  }
};
goog.net.DefaultXmlHttpFactory.prototype.internalGetOptions = function() {
  var progId = this.getProgId_();
  var options = {};
  if (progId) {
    options[goog.net.XmlHttp.OptionType.USE_NULL_FUNCTION] = true;
    options[goog.net.XmlHttp.OptionType.LOCAL_REQUEST_ERROR] = true;
  }
  return options;
};
goog.net.DefaultXmlHttpFactory.prototype.ieProgId_;
goog.net.DefaultXmlHttpFactory.prototype.getProgId_ = function() {
  if (goog.net.XmlHttp.ASSUME_NATIVE_XHR || goog.net.XmlHttpDefines.ASSUME_NATIVE_XHR) {
    return "";
  }
  if (!this.ieProgId_ && typeof XMLHttpRequest == "undefined" && typeof ActiveXObject != "undefined") {
    var ACTIVE_X_IDENTS = ["MSXML2.XMLHTTP.6.0", "MSXML2.XMLHTTP.3.0", "MSXML2.XMLHTTP", "Microsoft.XMLHTTP"];
    for (var i = 0;i < ACTIVE_X_IDENTS.length;i++) {
      var candidate = ACTIVE_X_IDENTS[i];
      try {
        new ActiveXObject(candidate);
        this.ieProgId_ = candidate;
        return candidate;
      } catch (e) {
      }
    }
    throw Error("Could not create ActiveXObject. ActiveX might be disabled," + " or MSXML might not be installed");
  }
  return(this.ieProgId_);
};
goog.net.XmlHttp.setGlobalFactory(new goog.net.DefaultXmlHttpFactory);
goog.provide("goog.uri.utils");
goog.provide("goog.uri.utils.ComponentIndex");
goog.provide("goog.uri.utils.QueryArray");
goog.provide("goog.uri.utils.QueryValue");
goog.provide("goog.uri.utils.StandardQueryParam");
goog.require("goog.asserts");
goog.require("goog.string");
goog.require("goog.userAgent");
goog.uri.utils.CharCode_ = {AMPERSAND:38, EQUAL:61, HASH:35, QUESTION:63};
goog.uri.utils.buildFromEncodedParts = function(opt_scheme, opt_userInfo, opt_domain, opt_port, opt_path, opt_queryData, opt_fragment) {
  var out = "";
  if (opt_scheme) {
    out += opt_scheme + ":";
  }
  if (opt_domain) {
    out += "//";
    if (opt_userInfo) {
      out += opt_userInfo + "@";
    }
    out += opt_domain;
    if (opt_port) {
      out += ":" + opt_port;
    }
  }
  if (opt_path) {
    out += opt_path;
  }
  if (opt_queryData) {
    out += "?" + opt_queryData;
  }
  if (opt_fragment) {
    out += "#" + opt_fragment;
  }
  return out;
};
goog.uri.utils.splitRe_ = new RegExp("^" + "(?:" + "([^:/?#.]+)" + ":)?" + "(?://" + "(?:([^/?#]*)@)?" + "([^/#?]*?)" + "(?::([0-9]+))?" + "(?\x3d[/#?]|$)" + ")?" + "([^?#]+)?" + "(?:\\?([^#]*))?" + "(?:#(.*))?" + "$");
goog.uri.utils.ComponentIndex = {SCHEME:1, USER_INFO:2, DOMAIN:3, PORT:4, PATH:5, QUERY_DATA:6, FRAGMENT:7};
goog.uri.utils.split = function(uri) {
  goog.uri.utils.phishingProtection_();
  return(uri.match(goog.uri.utils.splitRe_));
};
goog.uri.utils.needsPhishingProtection_ = goog.userAgent.WEBKIT;
goog.uri.utils.phishingProtection_ = function() {
  if (goog.uri.utils.needsPhishingProtection_) {
    goog.uri.utils.needsPhishingProtection_ = false;
    var location = goog.global["location"];
    if (location) {
      var href = location["href"];
      if (href) {
        var domain = goog.uri.utils.getDomain(href);
        if (domain && domain != location["hostname"]) {
          goog.uri.utils.needsPhishingProtection_ = true;
          throw Error();
        }
      }
    }
  }
};
goog.uri.utils.decodeIfPossible_ = function(uri) {
  return uri && decodeURIComponent(uri);
};
goog.uri.utils.getComponentByIndex_ = function(componentIndex, uri) {
  return goog.uri.utils.split(uri)[componentIndex] || null;
};
goog.uri.utils.getScheme = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.SCHEME, uri);
};
goog.uri.utils.getEffectiveScheme = function(uri) {
  var scheme = goog.uri.utils.getScheme(uri);
  if (!scheme && self.location) {
    var protocol = self.location.protocol;
    scheme = protocol.substr(0, protocol.length - 1);
  }
  return scheme ? scheme.toLowerCase() : "";
};
goog.uri.utils.getUserInfoEncoded = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.USER_INFO, uri);
};
goog.uri.utils.getUserInfo = function(uri) {
  return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getUserInfoEncoded(uri));
};
goog.uri.utils.getDomainEncoded = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.DOMAIN, uri);
};
goog.uri.utils.getDomain = function(uri) {
  return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getDomainEncoded(uri));
};
goog.uri.utils.getPort = function(uri) {
  return Number(goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.PORT, uri)) || null;
};
goog.uri.utils.getPathEncoded = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.PATH, uri);
};
goog.uri.utils.getPath = function(uri) {
  return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getPathEncoded(uri));
};
goog.uri.utils.getQueryData = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.QUERY_DATA, uri);
};
goog.uri.utils.getFragmentEncoded = function(uri) {
  var hashIndex = uri.indexOf("#");
  return hashIndex < 0 ? null : uri.substr(hashIndex + 1);
};
goog.uri.utils.setFragmentEncoded = function(uri, fragment) {
  return goog.uri.utils.removeFragment(uri) + (fragment ? "#" + fragment : "");
};
goog.uri.utils.getFragment = function(uri) {
  return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getFragmentEncoded(uri));
};
goog.uri.utils.getHost = function(uri) {
  var pieces = goog.uri.utils.split(uri);
  return goog.uri.utils.buildFromEncodedParts(pieces[goog.uri.utils.ComponentIndex.SCHEME], pieces[goog.uri.utils.ComponentIndex.USER_INFO], pieces[goog.uri.utils.ComponentIndex.DOMAIN], pieces[goog.uri.utils.ComponentIndex.PORT]);
};
goog.uri.utils.getPathAndAfter = function(uri) {
  var pieces = goog.uri.utils.split(uri);
  return goog.uri.utils.buildFromEncodedParts(null, null, null, null, pieces[goog.uri.utils.ComponentIndex.PATH], pieces[goog.uri.utils.ComponentIndex.QUERY_DATA], pieces[goog.uri.utils.ComponentIndex.FRAGMENT]);
};
goog.uri.utils.removeFragment = function(uri) {
  var hashIndex = uri.indexOf("#");
  return hashIndex < 0 ? uri : uri.substr(0, hashIndex);
};
goog.uri.utils.haveSameDomain = function(uri1, uri2) {
  var pieces1 = goog.uri.utils.split(uri1);
  var pieces2 = goog.uri.utils.split(uri2);
  return pieces1[goog.uri.utils.ComponentIndex.DOMAIN] == pieces2[goog.uri.utils.ComponentIndex.DOMAIN] && pieces1[goog.uri.utils.ComponentIndex.SCHEME] == pieces2[goog.uri.utils.ComponentIndex.SCHEME] && pieces1[goog.uri.utils.ComponentIndex.PORT] == pieces2[goog.uri.utils.ComponentIndex.PORT];
};
goog.uri.utils.assertNoFragmentsOrQueries_ = function(uri) {
  if (goog.DEBUG && (uri.indexOf("#") >= 0 || uri.indexOf("?") >= 0)) {
    throw Error("goog.uri.utils: Fragment or query identifiers are not " + "supported: [" + uri + "]");
  }
};
goog.uri.utils.QueryValue;
goog.uri.utils.QueryArray;
goog.uri.utils.appendQueryData_ = function(buffer) {
  if (buffer[1]) {
    var baseUri = (buffer[0]);
    var hashIndex = baseUri.indexOf("#");
    if (hashIndex >= 0) {
      buffer.push(baseUri.substr(hashIndex));
      buffer[0] = baseUri = baseUri.substr(0, hashIndex);
    }
    var questionIndex = baseUri.indexOf("?");
    if (questionIndex < 0) {
      buffer[1] = "?";
    } else {
      if (questionIndex == baseUri.length - 1) {
        buffer[1] = undefined;
      }
    }
  }
  return buffer.join("");
};
goog.uri.utils.appendKeyValuePairs_ = function(key, value, pairs) {
  if (goog.isArray(value)) {
    goog.asserts.assertArray(value);
    for (var j = 0;j < value.length;j++) {
      goog.uri.utils.appendKeyValuePairs_(key, String(value[j]), pairs);
    }
  } else {
    if (value != null) {
      pairs.push("\x26", key, value === "" ? "" : "\x3d", goog.string.urlEncode(value));
    }
  }
};
goog.uri.utils.buildQueryDataBuffer_ = function(buffer, keysAndValues, opt_startIndex) {
  goog.asserts.assert(Math.max(keysAndValues.length - (opt_startIndex || 0), 0) % 2 == 0, "goog.uri.utils: Key/value lists must be even in length.");
  for (var i = opt_startIndex || 0;i < keysAndValues.length;i += 2) {
    goog.uri.utils.appendKeyValuePairs_(keysAndValues[i], keysAndValues[i + 1], buffer);
  }
  return buffer;
};
goog.uri.utils.buildQueryData = function(keysAndValues, opt_startIndex) {
  var buffer = goog.uri.utils.buildQueryDataBuffer_([], keysAndValues, opt_startIndex);
  buffer[0] = "";
  return buffer.join("");
};
goog.uri.utils.buildQueryDataBufferFromMap_ = function(buffer, map) {
  for (var key in map) {
    goog.uri.utils.appendKeyValuePairs_(key, map[key], buffer);
  }
  return buffer;
};
goog.uri.utils.buildQueryDataFromMap = function(map) {
  var buffer = goog.uri.utils.buildQueryDataBufferFromMap_([], map);
  buffer[0] = "";
  return buffer.join("");
};
goog.uri.utils.appendParams = function(uri, var_args) {
  return goog.uri.utils.appendQueryData_(arguments.length == 2 ? goog.uri.utils.buildQueryDataBuffer_([uri], arguments[1], 0) : goog.uri.utils.buildQueryDataBuffer_([uri], arguments, 1));
};
goog.uri.utils.appendParamsFromMap = function(uri, map) {
  return goog.uri.utils.appendQueryData_(goog.uri.utils.buildQueryDataBufferFromMap_([uri], map));
};
goog.uri.utils.appendParam = function(uri, key, opt_value) {
  var paramArr = [uri, "\x26", key];
  if (goog.isDefAndNotNull(opt_value)) {
    paramArr.push("\x3d", goog.string.urlEncode(opt_value));
  }
  return goog.uri.utils.appendQueryData_(paramArr);
};
goog.uri.utils.findParam_ = function(uri, startIndex, keyEncoded, hashOrEndIndex) {
  var index = startIndex;
  var keyLength = keyEncoded.length;
  while ((index = uri.indexOf(keyEncoded, index)) >= 0 && index < hashOrEndIndex) {
    var precedingChar = uri.charCodeAt(index - 1);
    if (precedingChar == goog.uri.utils.CharCode_.AMPERSAND || precedingChar == goog.uri.utils.CharCode_.QUESTION) {
      var followingChar = uri.charCodeAt(index + keyLength);
      if (!followingChar || followingChar == goog.uri.utils.CharCode_.EQUAL || followingChar == goog.uri.utils.CharCode_.AMPERSAND || followingChar == goog.uri.utils.CharCode_.HASH) {
        return index;
      }
    }
    index += keyLength + 1;
  }
  return-1;
};
goog.uri.utils.hashOrEndRe_ = /#|$/;
goog.uri.utils.hasParam = function(uri, keyEncoded) {
  return goog.uri.utils.findParam_(uri, 0, keyEncoded, uri.search(goog.uri.utils.hashOrEndRe_)) >= 0;
};
goog.uri.utils.getParamValue = function(uri, keyEncoded) {
  var hashOrEndIndex = uri.search(goog.uri.utils.hashOrEndRe_);
  var foundIndex = goog.uri.utils.findParam_(uri, 0, keyEncoded, hashOrEndIndex);
  if (foundIndex < 0) {
    return null;
  } else {
    var endPosition = uri.indexOf("\x26", foundIndex);
    if (endPosition < 0 || endPosition > hashOrEndIndex) {
      endPosition = hashOrEndIndex;
    }
    foundIndex += keyEncoded.length + 1;
    return goog.string.urlDecode(uri.substr(foundIndex, endPosition - foundIndex));
  }
};
goog.uri.utils.getParamValues = function(uri, keyEncoded) {
  var hashOrEndIndex = uri.search(goog.uri.utils.hashOrEndRe_);
  var position = 0;
  var foundIndex;
  var result = [];
  while ((foundIndex = goog.uri.utils.findParam_(uri, position, keyEncoded, hashOrEndIndex)) >= 0) {
    position = uri.indexOf("\x26", foundIndex);
    if (position < 0 || position > hashOrEndIndex) {
      position = hashOrEndIndex;
    }
    foundIndex += keyEncoded.length + 1;
    result.push(goog.string.urlDecode(uri.substr(foundIndex, position - foundIndex)));
  }
  return result;
};
goog.uri.utils.trailingQueryPunctuationRe_ = /[?&]($|#)/;
goog.uri.utils.removeParam = function(uri, keyEncoded) {
  var hashOrEndIndex = uri.search(goog.uri.utils.hashOrEndRe_);
  var position = 0;
  var foundIndex;
  var buffer = [];
  while ((foundIndex = goog.uri.utils.findParam_(uri, position, keyEncoded, hashOrEndIndex)) >= 0) {
    buffer.push(uri.substring(position, foundIndex));
    position = Math.min(uri.indexOf("\x26", foundIndex) + 1 || hashOrEndIndex, hashOrEndIndex);
  }
  buffer.push(uri.substr(position));
  return buffer.join("").replace(goog.uri.utils.trailingQueryPunctuationRe_, "$1");
};
goog.uri.utils.setParam = function(uri, keyEncoded, value) {
  return goog.uri.utils.appendParam(goog.uri.utils.removeParam(uri, keyEncoded), keyEncoded, value);
};
goog.uri.utils.appendPath = function(baseUri, path) {
  goog.uri.utils.assertNoFragmentsOrQueries_(baseUri);
  if (goog.string.endsWith(baseUri, "/")) {
    baseUri = baseUri.substr(0, baseUri.length - 1);
  }
  if (goog.string.startsWith(path, "/")) {
    path = path.substr(1);
  }
  return goog.string.buildString(baseUri, "/", path);
};
goog.uri.utils.setPath = function(uri, path) {
  if (!goog.string.startsWith(path, "/")) {
    path = "/" + path;
  }
  var parts = goog.uri.utils.split(uri);
  return goog.uri.utils.buildFromEncodedParts(parts[goog.uri.utils.ComponentIndex.SCHEME], parts[goog.uri.utils.ComponentIndex.USER_INFO], parts[goog.uri.utils.ComponentIndex.DOMAIN], parts[goog.uri.utils.ComponentIndex.PORT], path, parts[goog.uri.utils.ComponentIndex.QUERY_DATA], parts[goog.uri.utils.ComponentIndex.FRAGMENT]);
};
goog.uri.utils.StandardQueryParam = {RANDOM:"zx"};
goog.uri.utils.makeUnique = function(uri) {
  return goog.uri.utils.setParam(uri, goog.uri.utils.StandardQueryParam.RANDOM, goog.string.getRandomString());
};
goog.provide("goog.net.XhrIo");
goog.provide("goog.net.XhrIo.ResponseType");
goog.require("goog.Timer");
goog.require("goog.array");
goog.require("goog.debug.entryPointRegistry");
goog.require("goog.events.EventTarget");
goog.require("goog.json");
goog.require("goog.log");
goog.require("goog.net.ErrorCode");
goog.require("goog.net.EventType");
goog.require("goog.net.HttpStatus");
goog.require("goog.net.XmlHttp");
goog.require("goog.object");
goog.require("goog.string");
goog.require("goog.structs");
goog.require("goog.structs.Map");
goog.require("goog.uri.utils");
goog.require("goog.userAgent");
goog.forwardDeclare("goog.Uri");
goog.net.XhrIo = function(opt_xmlHttpFactory) {
  goog.net.XhrIo.base(this, "constructor");
  this.headers = new goog.structs.Map;
  this.xmlHttpFactory_ = opt_xmlHttpFactory || null;
  this.active_ = false;
  this.xhr_ = null;
  this.xhrOptions_ = null;
  this.lastUri_ = "";
  this.lastMethod_ = "";
  this.lastErrorCode_ = goog.net.ErrorCode.NO_ERROR;
  this.lastError_ = "";
  this.errorDispatched_ = false;
  this.inSend_ = false;
  this.inOpen_ = false;
  this.inAbort_ = false;
  this.timeoutInterval_ = 0;
  this.timeoutId_ = null;
  this.responseType_ = goog.net.XhrIo.ResponseType.DEFAULT;
  this.withCredentials_ = false;
  this.useXhr2Timeout_ = false;
};
goog.inherits(goog.net.XhrIo, goog.events.EventTarget);
goog.net.XhrIo.ResponseType = {DEFAULT:"", TEXT:"text", DOCUMENT:"document", BLOB:"blob", ARRAY_BUFFER:"arraybuffer"};
goog.net.XhrIo.prototype.logger_ = goog.log.getLogger("goog.net.XhrIo");
goog.net.XhrIo.CONTENT_TYPE_HEADER = "Content-Type";
goog.net.XhrIo.HTTP_SCHEME_PATTERN = /^https?$/i;
goog.net.XhrIo.METHODS_WITH_FORM_DATA = ["POST", "PUT"];
goog.net.XhrIo.FORM_CONTENT_TYPE = "application/x-www-form-urlencoded;charset\x3dutf-8";
goog.net.XhrIo.XHR2_TIMEOUT_ = "timeout";
goog.net.XhrIo.XHR2_ON_TIMEOUT_ = "ontimeout";
goog.net.XhrIo.sendInstances_ = [];
goog.net.XhrIo.send = function(url, opt_callback, opt_method, opt_content, opt_headers, opt_timeoutInterval, opt_withCredentials) {
  var x = new goog.net.XhrIo;
  goog.net.XhrIo.sendInstances_.push(x);
  if (opt_callback) {
    x.listen(goog.net.EventType.COMPLETE, opt_callback);
  }
  x.listenOnce(goog.net.EventType.READY, x.cleanupSend_);
  if (opt_timeoutInterval) {
    x.setTimeoutInterval(opt_timeoutInterval);
  }
  if (opt_withCredentials) {
    x.setWithCredentials(opt_withCredentials);
  }
  x.send(url, opt_method, opt_content, opt_headers);
  return x;
};
goog.net.XhrIo.cleanup = function() {
  var instances = goog.net.XhrIo.sendInstances_;
  while (instances.length) {
    instances.pop().dispose();
  }
};
goog.net.XhrIo.protectEntryPoints = function(errorHandler) {
  goog.net.XhrIo.prototype.onReadyStateChangeEntryPoint_ = errorHandler.protectEntryPoint(goog.net.XhrIo.prototype.onReadyStateChangeEntryPoint_);
};
goog.net.XhrIo.prototype.cleanupSend_ = function() {
  this.dispose();
  goog.array.remove(goog.net.XhrIo.sendInstances_, this);
};
goog.net.XhrIo.prototype.getTimeoutInterval = function() {
  return this.timeoutInterval_;
};
goog.net.XhrIo.prototype.setTimeoutInterval = function(ms) {
  this.timeoutInterval_ = Math.max(0, ms);
};
goog.net.XhrIo.prototype.setResponseType = function(type) {
  this.responseType_ = type;
};
goog.net.XhrIo.prototype.getResponseType = function() {
  return this.responseType_;
};
goog.net.XhrIo.prototype.setWithCredentials = function(withCredentials) {
  this.withCredentials_ = withCredentials;
};
goog.net.XhrIo.prototype.getWithCredentials = function() {
  return this.withCredentials_;
};
goog.net.XhrIo.prototype.send = function(url, opt_method, opt_content, opt_headers) {
  if (this.xhr_) {
    throw Error("[goog.net.XhrIo] Object is active with another request\x3d" + this.lastUri_ + "; newUri\x3d" + url);
  }
  var method = opt_method ? opt_method.toUpperCase() : "GET";
  this.lastUri_ = url;
  this.lastError_ = "";
  this.lastErrorCode_ = goog.net.ErrorCode.NO_ERROR;
  this.lastMethod_ = method;
  this.errorDispatched_ = false;
  this.active_ = true;
  this.xhr_ = this.createXhr();
  this.xhrOptions_ = this.xmlHttpFactory_ ? this.xmlHttpFactory_.getOptions() : goog.net.XmlHttp.getOptions();
  this.xhr_.onreadystatechange = goog.bind(this.onReadyStateChange_, this);
  try {
    goog.log.fine(this.logger_, this.formatMsg_("Opening Xhr"));
    this.inOpen_ = true;
    this.xhr_.open(method, String(url), true);
    this.inOpen_ = false;
  } catch (err) {
    goog.log.fine(this.logger_, this.formatMsg_("Error opening Xhr: " + err.message));
    this.error_(goog.net.ErrorCode.EXCEPTION, err);
    return;
  }
  var content = opt_content || "";
  var headers = this.headers.clone();
  if (opt_headers) {
    goog.structs.forEach(opt_headers, function(value, key) {
      headers.set(key, value);
    });
  }
  var contentTypeKey = goog.array.find(headers.getKeys(), goog.net.XhrIo.isContentTypeHeader_);
  var contentIsFormData = goog.global["FormData"] && content instanceof goog.global["FormData"];
  if (goog.array.contains(goog.net.XhrIo.METHODS_WITH_FORM_DATA, method) && !contentTypeKey && !contentIsFormData) {
    headers.set(goog.net.XhrIo.CONTENT_TYPE_HEADER, goog.net.XhrIo.FORM_CONTENT_TYPE);
  }
  headers.forEach(function(value, key) {
    this.xhr_.setRequestHeader(key, value);
  }, this);
  if (this.responseType_) {
    this.xhr_.responseType = this.responseType_;
  }
  if (goog.object.containsKey(this.xhr_, "withCredentials")) {
    this.xhr_.withCredentials = this.withCredentials_;
  }
  try {
    this.cleanUpTimeoutTimer_();
    if (this.timeoutInterval_ > 0) {
      this.useXhr2Timeout_ = goog.net.XhrIo.shouldUseXhr2Timeout_(this.xhr_);
      goog.log.fine(this.logger_, this.formatMsg_("Will abort after " + this.timeoutInterval_ + "ms if incomplete, xhr2 " + this.useXhr2Timeout_));
      if (this.useXhr2Timeout_) {
        this.xhr_[goog.net.XhrIo.XHR2_TIMEOUT_] = this.timeoutInterval_;
        this.xhr_[goog.net.XhrIo.XHR2_ON_TIMEOUT_] = goog.bind(this.timeout_, this);
      } else {
        this.timeoutId_ = goog.Timer.callOnce(this.timeout_, this.timeoutInterval_, this);
      }
    }
    goog.log.fine(this.logger_, this.formatMsg_("Sending request"));
    this.inSend_ = true;
    this.xhr_.send(content);
    this.inSend_ = false;
  } catch (err) {
    goog.log.fine(this.logger_, this.formatMsg_("Send error: " + err.message));
    this.error_(goog.net.ErrorCode.EXCEPTION, err);
  }
};
goog.net.XhrIo.shouldUseXhr2Timeout_ = function(xhr) {
  return goog.userAgent.IE && goog.userAgent.isVersionOrHigher(9) && goog.isNumber(xhr[goog.net.XhrIo.XHR2_TIMEOUT_]) && goog.isDef(xhr[goog.net.XhrIo.XHR2_ON_TIMEOUT_]);
};
goog.net.XhrIo.isContentTypeHeader_ = function(header) {
  return goog.string.caseInsensitiveEquals(goog.net.XhrIo.CONTENT_TYPE_HEADER, header);
};
goog.net.XhrIo.prototype.createXhr = function() {
  return this.xmlHttpFactory_ ? this.xmlHttpFactory_.createInstance() : goog.net.XmlHttp();
};
goog.net.XhrIo.prototype.timeout_ = function() {
  if (typeof goog == "undefined") {
  } else {
    if (this.xhr_) {
      this.lastError_ = "Timed out after " + this.timeoutInterval_ + "ms, aborting";
      this.lastErrorCode_ = goog.net.ErrorCode.TIMEOUT;
      goog.log.fine(this.logger_, this.formatMsg_(this.lastError_));
      this.dispatchEvent(goog.net.EventType.TIMEOUT);
      this.abort(goog.net.ErrorCode.TIMEOUT);
    }
  }
};
goog.net.XhrIo.prototype.error_ = function(errorCode, err) {
  this.active_ = false;
  if (this.xhr_) {
    this.inAbort_ = true;
    this.xhr_.abort();
    this.inAbort_ = false;
  }
  this.lastError_ = err;
  this.lastErrorCode_ = errorCode;
  this.dispatchErrors_();
  this.cleanUpXhr_();
};
goog.net.XhrIo.prototype.dispatchErrors_ = function() {
  if (!this.errorDispatched_) {
    this.errorDispatched_ = true;
    this.dispatchEvent(goog.net.EventType.COMPLETE);
    this.dispatchEvent(goog.net.EventType.ERROR);
  }
};
goog.net.XhrIo.prototype.abort = function(opt_failureCode) {
  if (this.xhr_ && this.active_) {
    goog.log.fine(this.logger_, this.formatMsg_("Aborting"));
    this.active_ = false;
    this.inAbort_ = true;
    this.xhr_.abort();
    this.inAbort_ = false;
    this.lastErrorCode_ = opt_failureCode || goog.net.ErrorCode.ABORT;
    this.dispatchEvent(goog.net.EventType.COMPLETE);
    this.dispatchEvent(goog.net.EventType.ABORT);
    this.cleanUpXhr_();
  }
};
goog.net.XhrIo.prototype.disposeInternal = function() {
  if (this.xhr_) {
    if (this.active_) {
      this.active_ = false;
      this.inAbort_ = true;
      this.xhr_.abort();
      this.inAbort_ = false;
    }
    this.cleanUpXhr_(true);
  }
  goog.net.XhrIo.base(this, "disposeInternal");
};
goog.net.XhrIo.prototype.onReadyStateChange_ = function() {
  if (this.isDisposed()) {
    return;
  }
  if (!this.inOpen_ && !this.inSend_ && !this.inAbort_) {
    this.onReadyStateChangeEntryPoint_();
  } else {
    this.onReadyStateChangeHelper_();
  }
};
goog.net.XhrIo.prototype.onReadyStateChangeEntryPoint_ = function() {
  this.onReadyStateChangeHelper_();
};
goog.net.XhrIo.prototype.onReadyStateChangeHelper_ = function() {
  if (!this.active_) {
    return;
  }
  if (typeof goog == "undefined") {
  } else {
    if (this.xhrOptions_[goog.net.XmlHttp.OptionType.LOCAL_REQUEST_ERROR] && this.getReadyState() == goog.net.XmlHttp.ReadyState.COMPLETE && this.getStatus() == 2) {
      goog.log.fine(this.logger_, this.formatMsg_("Local request error detected and ignored"));
    } else {
      if (this.inSend_ && this.getReadyState() == goog.net.XmlHttp.ReadyState.COMPLETE) {
        goog.Timer.callOnce(this.onReadyStateChange_, 0, this);
        return;
      }
      this.dispatchEvent(goog.net.EventType.READY_STATE_CHANGE);
      if (this.isComplete()) {
        goog.log.fine(this.logger_, this.formatMsg_("Request complete"));
        this.active_ = false;
        try {
          if (this.isSuccess()) {
            this.dispatchEvent(goog.net.EventType.COMPLETE);
            this.dispatchEvent(goog.net.EventType.SUCCESS);
          } else {
            this.lastErrorCode_ = goog.net.ErrorCode.HTTP_ERROR;
            this.lastError_ = this.getStatusText() + " [" + this.getStatus() + "]";
            this.dispatchErrors_();
          }
        } finally {
          this.cleanUpXhr_();
        }
      }
    }
  }
};
goog.net.XhrIo.prototype.cleanUpXhr_ = function(opt_fromDispose) {
  if (this.xhr_) {
    this.cleanUpTimeoutTimer_();
    var xhr = this.xhr_;
    var clearedOnReadyStateChange = this.xhrOptions_[goog.net.XmlHttp.OptionType.USE_NULL_FUNCTION] ? goog.nullFunction : null;
    this.xhr_ = null;
    this.xhrOptions_ = null;
    if (!opt_fromDispose) {
      this.dispatchEvent(goog.net.EventType.READY);
    }
    try {
      xhr.onreadystatechange = clearedOnReadyStateChange;
    } catch (e) {
      goog.log.error(this.logger_, "Problem encountered resetting onreadystatechange: " + e.message);
    }
  }
};
goog.net.XhrIo.prototype.cleanUpTimeoutTimer_ = function() {
  if (this.xhr_ && this.useXhr2Timeout_) {
    this.xhr_[goog.net.XhrIo.XHR2_ON_TIMEOUT_] = null;
  }
  if (goog.isNumber(this.timeoutId_)) {
    goog.Timer.clear(this.timeoutId_);
    this.timeoutId_ = null;
  }
};
goog.net.XhrIo.prototype.isActive = function() {
  return!!this.xhr_;
};
goog.net.XhrIo.prototype.isComplete = function() {
  return this.getReadyState() == goog.net.XmlHttp.ReadyState.COMPLETE;
};
goog.net.XhrIo.prototype.isSuccess = function() {
  var status = this.getStatus();
  return goog.net.HttpStatus.isSuccess(status) || status === 0 && !this.isLastUriEffectiveSchemeHttp_();
};
goog.net.XhrIo.prototype.isLastUriEffectiveSchemeHttp_ = function() {
  var scheme = goog.uri.utils.getEffectiveScheme(String(this.lastUri_));
  return goog.net.XhrIo.HTTP_SCHEME_PATTERN.test(scheme);
};
goog.net.XhrIo.prototype.getReadyState = function() {
  return this.xhr_ ? (this.xhr_.readyState) : goog.net.XmlHttp.ReadyState.UNINITIALIZED;
};
goog.net.XhrIo.prototype.getStatus = function() {
  try {
    return this.getReadyState() > goog.net.XmlHttp.ReadyState.LOADED ? this.xhr_.status : -1;
  } catch (e) {
    return-1;
  }
};
goog.net.XhrIo.prototype.getStatusText = function() {
  try {
    return this.getReadyState() > goog.net.XmlHttp.ReadyState.LOADED ? this.xhr_.statusText : "";
  } catch (e) {
    goog.log.fine(this.logger_, "Can not get status: " + e.message);
    return "";
  }
};
goog.net.XhrIo.prototype.getLastUri = function() {
  return String(this.lastUri_);
};
goog.net.XhrIo.prototype.getResponseText = function() {
  try {
    return this.xhr_ ? this.xhr_.responseText : "";
  } catch (e) {
    goog.log.fine(this.logger_, "Can not get responseText: " + e.message);
    return "";
  }
};
goog.net.XhrIo.prototype.getResponseBody = function() {
  try {
    if (this.xhr_ && "responseBody" in this.xhr_) {
      return this.xhr_["responseBody"];
    }
  } catch (e) {
    goog.log.fine(this.logger_, "Can not get responseBody: " + e.message);
  }
  return null;
};
goog.net.XhrIo.prototype.getResponseXml = function() {
  try {
    return this.xhr_ ? this.xhr_.responseXML : null;
  } catch (e) {
    goog.log.fine(this.logger_, "Can not get responseXML: " + e.message);
    return null;
  }
};
goog.net.XhrIo.prototype.getResponseJson = function(opt_xssiPrefix) {
  if (!this.xhr_) {
    return undefined;
  }
  var responseText = this.xhr_.responseText;
  if (opt_xssiPrefix && responseText.indexOf(opt_xssiPrefix) == 0) {
    responseText = responseText.substring(opt_xssiPrefix.length);
  }
  return goog.json.parse(responseText);
};
goog.net.XhrIo.prototype.getResponse = function() {
  try {
    if (!this.xhr_) {
      return null;
    }
    if ("response" in this.xhr_) {
      return this.xhr_.response;
    }
    switch(this.responseType_) {
      case goog.net.XhrIo.ResponseType.DEFAULT:
      ;
      case goog.net.XhrIo.ResponseType.TEXT:
        return this.xhr_.responseText;
      case goog.net.XhrIo.ResponseType.ARRAY_BUFFER:
        if ("mozResponseArrayBuffer" in this.xhr_) {
          return this.xhr_.mozResponseArrayBuffer;
        }
      ;
    }
    goog.log.error(this.logger_, "Response type " + this.responseType_ + " is not " + "supported on this browser");
    return null;
  } catch (e) {
    goog.log.fine(this.logger_, "Can not get response: " + e.message);
    return null;
  }
};
goog.net.XhrIo.prototype.getResponseHeader = function(key) {
  return this.xhr_ && this.isComplete() ? this.xhr_.getResponseHeader(key) : undefined;
};
goog.net.XhrIo.prototype.getAllResponseHeaders = function() {
  return this.xhr_ && this.isComplete() ? this.xhr_.getAllResponseHeaders() : "";
};
goog.net.XhrIo.prototype.getResponseHeaders = function() {
  var headersObject = {};
  var headersArray = this.getAllResponseHeaders().split("\r\n");
  for (var i = 0;i < headersArray.length;i++) {
    if (goog.string.isEmpty(headersArray[i])) {
      continue;
    }
    var keyValue = goog.string.splitLimit(headersArray[i], ": ", 2);
    if (headersObject[keyValue[0]]) {
      headersObject[keyValue[0]] += ", " + keyValue[1];
    } else {
      headersObject[keyValue[0]] = keyValue[1];
    }
  }
  return headersObject;
};
goog.net.XhrIo.prototype.getLastErrorCode = function() {
  return this.lastErrorCode_;
};
goog.net.XhrIo.prototype.getLastError = function() {
  return goog.isString(this.lastError_) ? this.lastError_ : String(this.lastError_);
};
goog.net.XhrIo.prototype.formatMsg_ = function(msg) {
  return msg + " [" + this.lastMethod_ + " " + this.lastUri_ + " " + this.getStatus() + "]";
};
goog.debug.entryPointRegistry.register(function(transformer) {
  goog.net.XhrIo.prototype.onReadyStateChangeEntryPoint_ = transformer(goog.net.XhrIo.prototype.onReadyStateChangeEntryPoint_);
});
goog.provide("goog.crypt");
goog.require("goog.array");
goog.require("goog.asserts");
goog.crypt.stringToByteArray = function(str) {
  var output = [], p = 0;
  for (var i = 0;i < str.length;i++) {
    var c = str.charCodeAt(i);
    while (c > 255) {
      output[p++] = c & 255;
      c >>= 8;
    }
    output[p++] = c;
  }
  return output;
};
goog.crypt.byteArrayToString = function(bytes) {
  var CHUNK_SIZE = 8192;
  if (bytes.length < CHUNK_SIZE) {
    return String.fromCharCode.apply(null, bytes);
  }
  var str = "";
  for (var i = 0;i < bytes.length;i += CHUNK_SIZE) {
    var chunk = goog.array.slice(bytes, i, i + CHUNK_SIZE);
    str += String.fromCharCode.apply(null, chunk);
  }
  return str;
};
goog.crypt.byteArrayToHex = function(array) {
  return goog.array.map(array, function(numByte) {
    var hexByte = numByte.toString(16);
    return hexByte.length > 1 ? hexByte : "0" + hexByte;
  }).join("");
};
goog.crypt.hexToByteArray = function(hexString) {
  goog.asserts.assert(hexString.length % 2 == 0, "Key string length must be multiple of 2");
  var arr = [];
  for (var i = 0;i < hexString.length;i += 2) {
    arr.push(parseInt(hexString.substring(i, i + 2), 16));
  }
  return arr;
};
goog.crypt.stringToUtf8ByteArray = function(str) {
  str = str.replace(/\r\n/g, "\n");
  var out = [], p = 0;
  for (var i = 0;i < str.length;i++) {
    var c = str.charCodeAt(i);
    if (c < 128) {
      out[p++] = c;
    } else {
      if (c < 2048) {
        out[p++] = c >> 6 | 192;
        out[p++] = c & 63 | 128;
      } else {
        out[p++] = c >> 12 | 224;
        out[p++] = c >> 6 & 63 | 128;
        out[p++] = c & 63 | 128;
      }
    }
  }
  return out;
};
goog.crypt.utf8ByteArrayToString = function(bytes) {
  var out = [], pos = 0, c = 0;
  while (pos < bytes.length) {
    var c1 = bytes[pos++];
    if (c1 < 128) {
      out[c++] = String.fromCharCode(c1);
    } else {
      if (c1 > 191 && c1 < 224) {
        var c2 = bytes[pos++];
        out[c++] = String.fromCharCode((c1 & 31) << 6 | c2 & 63);
      } else {
        var c2 = bytes[pos++];
        var c3 = bytes[pos++];
        out[c++] = String.fromCharCode((c1 & 15) << 12 | (c2 & 63) << 6 | c3 & 63);
      }
    }
  }
  return out.join("");
};
goog.crypt.xorByteArray = function(bytes1, bytes2) {
  goog.asserts.assert(bytes1.length == bytes2.length, "XOR array lengths must match");
  var result = [];
  for (var i = 0;i < bytes1.length;i++) {
    result.push(bytes1[i] ^ bytes2[i]);
  }
  return result;
};
goog.provide("goog.crypt.base64");
goog.require("goog.crypt");
goog.require("goog.userAgent");
goog.crypt.base64.byteToCharMap_ = null;
goog.crypt.base64.charToByteMap_ = null;
goog.crypt.base64.byteToCharMapWebSafe_ = null;
goog.crypt.base64.charToByteMapWebSafe_ = null;
goog.crypt.base64.ENCODED_VALS_BASE = "ABCDEFGHIJKLMNOPQRSTUVWXYZ" + "abcdefghijklmnopqrstuvwxyz" + "0123456789";
goog.crypt.base64.ENCODED_VALS = goog.crypt.base64.ENCODED_VALS_BASE + "+/\x3d";
goog.crypt.base64.ENCODED_VALS_WEBSAFE = goog.crypt.base64.ENCODED_VALS_BASE + "-_.";
goog.crypt.base64.HAS_NATIVE_SUPPORT = goog.userAgent.GECKO || goog.userAgent.WEBKIT || goog.userAgent.OPERA || typeof goog.global.atob == "function";
goog.crypt.base64.encodeByteArray = function(input, opt_webSafe) {
  if (!goog.isArrayLike(input)) {
    throw Error("encodeByteArray takes an array as a parameter");
  }
  goog.crypt.base64.init_();
  var byteToCharMap = opt_webSafe ? goog.crypt.base64.byteToCharMapWebSafe_ : goog.crypt.base64.byteToCharMap_;
  var output = [];
  for (var i = 0;i < input.length;i += 3) {
    var byte1 = input[i];
    var haveByte2 = i + 1 < input.length;
    var byte2 = haveByte2 ? input[i + 1] : 0;
    var haveByte3 = i + 2 < input.length;
    var byte3 = haveByte3 ? input[i + 2] : 0;
    var outByte1 = byte1 >> 2;
    var outByte2 = (byte1 & 3) << 4 | byte2 >> 4;
    var outByte3 = (byte2 & 15) << 2 | byte3 >> 6;
    var outByte4 = byte3 & 63;
    if (!haveByte3) {
      outByte4 = 64;
      if (!haveByte2) {
        outByte3 = 64;
      }
    }
    output.push(byteToCharMap[outByte1], byteToCharMap[outByte2], byteToCharMap[outByte3], byteToCharMap[outByte4]);
  }
  return output.join("");
};
goog.crypt.base64.encodeString = function(input, opt_webSafe) {
  if (goog.crypt.base64.HAS_NATIVE_SUPPORT && !opt_webSafe) {
    return goog.global.btoa(input);
  }
  return goog.crypt.base64.encodeByteArray(goog.crypt.stringToByteArray(input), opt_webSafe);
};
goog.crypt.base64.decodeString = function(input, opt_webSafe) {
  if (goog.crypt.base64.HAS_NATIVE_SUPPORT && !opt_webSafe) {
    return goog.global.atob(input);
  }
  return goog.crypt.byteArrayToString(goog.crypt.base64.decodeStringToByteArray(input, opt_webSafe));
};
goog.crypt.base64.decodeStringToByteArray = function(input, opt_webSafe) {
  goog.crypt.base64.init_();
  var charToByteMap = opt_webSafe ? goog.crypt.base64.charToByteMapWebSafe_ : goog.crypt.base64.charToByteMap_;
  var output = [];
  for (var i = 0;i < input.length;) {
    var byte1 = charToByteMap[input.charAt(i++)];
    var haveByte2 = i < input.length;
    var byte2 = haveByte2 ? charToByteMap[input.charAt(i)] : 0;
    ++i;
    var haveByte3 = i < input.length;
    var byte3 = haveByte3 ? charToByteMap[input.charAt(i)] : 64;
    ++i;
    var haveByte4 = i < input.length;
    var byte4 = haveByte4 ? charToByteMap[input.charAt(i)] : 64;
    ++i;
    if (byte1 == null || byte2 == null || byte3 == null || byte4 == null) {
      throw Error();
    }
    var outByte1 = byte1 << 2 | byte2 >> 4;
    output.push(outByte1);
    if (byte3 != 64) {
      var outByte2 = byte2 << 4 & 240 | byte3 >> 2;
      output.push(outByte2);
      if (byte4 != 64) {
        var outByte3 = byte3 << 6 & 192 | byte4;
        output.push(outByte3);
      }
    }
  }
  return output;
};
goog.crypt.base64.init_ = function() {
  if (!goog.crypt.base64.byteToCharMap_) {
    goog.crypt.base64.byteToCharMap_ = {};
    goog.crypt.base64.charToByteMap_ = {};
    goog.crypt.base64.byteToCharMapWebSafe_ = {};
    goog.crypt.base64.charToByteMapWebSafe_ = {};
    for (var i = 0;i < goog.crypt.base64.ENCODED_VALS.length;i++) {
      goog.crypt.base64.byteToCharMap_[i] = goog.crypt.base64.ENCODED_VALS.charAt(i);
      goog.crypt.base64.charToByteMap_[goog.crypt.base64.byteToCharMap_[i]] = i;
      goog.crypt.base64.byteToCharMapWebSafe_[i] = goog.crypt.base64.ENCODED_VALS_WEBSAFE.charAt(i);
      goog.crypt.base64.charToByteMapWebSafe_[goog.crypt.base64.byteToCharMapWebSafe_[i]] = i;
    }
  }
};
goog.provide("no.en.core");
goog.require("cljs.core");
goog.require("goog.crypt.base64");
goog.require("cljs.reader");
goog.require("clojure.string");
no.en.core.port_number = new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "http", "http", 382524695), 80, new cljs.core.Keyword(null, "https", "https", -1983909665), 443, new cljs.core.Keyword(null, "mysql", "mysql", -1431590210), 3306, new cljs.core.Keyword(null, "postgresql", "postgresql", -1568339962), 5432, new cljs.core.Keyword(null, "rabbitmq", "rabbitmq", 1046897371), 5672], null);
no.en.core.url_regex = /([^:]+):\/\/(([^:]+):([^@]+)@)?(([^:\/]+)(:([0-9]+))?((\/[^?]*)(\?([^#]*))?)?)(\#(.*))?/;
no.en.core.split_by_regex = function split_by_regex(s, pattern) {
  if (cljs.core.sequential_QMARK_.call(null, s)) {
    return s;
  } else {
    if (cljs.core.not.call(null, clojure.string.blank_QMARK_.call(null, s))) {
      return clojure.string.split.call(null, s, pattern);
    } else {
      return null;
    }
  }
};
no.en.core.split_by_comma = function split_by_comma(s) {
  return no.en.core.split_by_regex.call(null, s, /\s*,\s*/);
};
no.en.core.utf8_string = function utf8_string(bytes) {
  throw cljs.core.ex_info.call(null, "utf8-string not implemented yet", bytes);
};
no.en.core.base64_encode = function base64_encode(bytes) {
  if (cljs.core.truth_(bytes)) {
    return goog.crypt.base64.encodeString(bytes, false);
  } else {
    return null;
  }
};
no.en.core.base64_decode = function base64_decode(s) {
  if (cljs.core.truth_(s)) {
    return goog.crypt.base64.decodeString(s, false);
  } else {
    return null;
  }
};
no.en.core.compact_map = function compact_map(m) {
  return cljs.core.reduce.call(null, function(m__$1, k) {
    var v = cljs.core.get.call(null, m__$1, k);
    if (v == null || (cljs.core.map_QMARK_.call(null, v) || cljs.core.sequential_QMARK_.call(null, v)) && cljs.core.empty_QMARK_.call(null, v)) {
      return cljs.core.dissoc.call(null, m__$1, k);
    } else {
      return m__$1;
    }
  }, m, cljs.core.keys.call(null, m));
};
no.en.core.url_encode = function() {
  var url_encode__delegate = function(s, p__23939) {
    var vec__23941 = p__23939;
    var encoding = cljs.core.nth.call(null, vec__23941, 0, null);
    if (cljs.core.truth_(s)) {
      return clojure.string.replace.call(null, encodeURIComponent([cljs.core.str(s)].join("")), "*", "%2A");
    } else {
      return null;
    }
  };
  var url_encode = function(s, var_args) {
    var p__23939 = null;
    if (arguments.length > 1) {
      var G__23942__i = 0, G__23942__a = new Array(arguments.length - 1);
      while (G__23942__i < G__23942__a.length) {
        G__23942__a[G__23942__i] = arguments[G__23942__i + 1];
        ++G__23942__i;
      }
      p__23939 = new cljs.core.IndexedSeq(G__23942__a, 0);
    }
    return url_encode__delegate.call(this, s, p__23939);
  };
  url_encode.cljs$lang$maxFixedArity = 1;
  url_encode.cljs$lang$applyTo = function(arglist__23943) {
    var s = cljs.core.first(arglist__23943);
    var p__23939 = cljs.core.rest(arglist__23943);
    return url_encode__delegate(s, p__23939);
  };
  url_encode.cljs$core$IFn$_invoke$arity$variadic = url_encode__delegate;
  return url_encode;
}();
no.en.core.url_decode = function() {
  var url_decode__delegate = function(s, p__23944) {
    var vec__23946 = p__23944;
    var encoding = cljs.core.nth.call(null, vec__23946, 0, null);
    if (cljs.core.truth_(s)) {
      return decodeURIComponent(s);
    } else {
      return null;
    }
  };
  var url_decode = function(s, var_args) {
    var p__23944 = null;
    if (arguments.length > 1) {
      var G__23947__i = 0, G__23947__a = new Array(arguments.length - 1);
      while (G__23947__i < G__23947__a.length) {
        G__23947__a[G__23947__i] = arguments[G__23947__i + 1];
        ++G__23947__i;
      }
      p__23944 = new cljs.core.IndexedSeq(G__23947__a, 0);
    }
    return url_decode__delegate.call(this, s, p__23944);
  };
  url_decode.cljs$lang$maxFixedArity = 1;
  url_decode.cljs$lang$applyTo = function(arglist__23948) {
    var s = cljs.core.first(arglist__23948);
    var p__23944 = cljs.core.rest(arglist__23948);
    return url_decode__delegate(s, p__23944);
  };
  url_decode.cljs$core$IFn$_invoke$arity$variadic = url_decode__delegate;
  return url_decode;
}();
no.en.core.pow = function pow(n, x) {
  return Math.pow(n, x);
};
no.en.core.byte_scale = cljs.core.PersistentHashMap.fromArrays(["T", "K", "G", "M", "Y", "Z", "E", "B", "P"], [no.en.core.pow.call(null, 1024, 4), no.en.core.pow.call(null, 1024, 1), no.en.core.pow.call(null, 1024, 3), no.en.core.pow.call(null, 1024, 2), no.en.core.pow.call(null, 1024, 8), no.en.core.pow.call(null, 1024, 7), no.en.core.pow.call(null, 1024, 6), no.en.core.pow.call(null, 1024, 0), no.en.core.pow.call(null, 1024, 5)]);
no.en.core.apply_unit = function apply_unit(number, unit) {
  if (typeof unit === "string") {
    var G__23951 = clojure.string.upper_case.call(null, unit);
    switch(G__23951) {
      default:
        var G__23952 = unit;
        switch(G__23952) {
          case "M":
            return number * 1E6;
            break;
          case "B":
            return number * 1E9;
            break;
          default:
            throw new Error([cljs.core.str("No matching clause: "), cljs.core.str(unit)].join(""));;
        }
      ;
    }
  } else {
    return number;
  }
};
no.en.core.parse_number = function parse_number(s, parse_fn) {
  var temp__4124__auto__ = cljs.core.re_matches.call(null, /\s*([-+]?[0-9]*\.?[0-9]+([eE][-+]?[0-9]+)?)(M|B)?.*/, [cljs.core.str(s)].join(""));
  if (cljs.core.truth_(temp__4124__auto__)) {
    var matches = temp__4124__auto__;
    var number = parse_fn.call(null, cljs.core.nth.call(null, matches, 1));
    var unit = cljs.core.nth.call(null, matches, 3);
    if (cljs.core.not.call(null, isNaN(number))) {
      return no.en.core.apply_unit.call(null, number, unit);
    } else {
      return null;
    }
  } else {
    return null;
  }
};
no.en.core.parse_bytes = function parse_bytes(s) {
  var temp__4124__auto__ = cljs.core.re_matches.call(null, /\s*([-+]?[0-9]*\.?[0-9]+([eE][-+]?[0-9]+)?)(B|K|M|G|T|P|E|Z|Y)?.*/, [cljs.core.str(s)].join(""));
  if (cljs.core.truth_(temp__4124__auto__)) {
    var matches = temp__4124__auto__;
    var number = cljs.reader.read_string.call(null, cljs.core.nth.call(null, matches, 1));
    var unit = cljs.core.nth.call(null, matches, 3);
    return cljs.core.long$.call(null, cljs.core.long$.call(null, cljs.reader.read_string.call(null, [cljs.core.str(cljs.core.nth.call(null, matches, 1))].join(""))) * cljs.core.get.call(null, no.en.core.byte_scale, clojure.string.upper_case.call(null, function() {
      var or__7504__auto__ = unit;
      if (cljs.core.truth_(or__7504__auto__)) {
        return or__7504__auto__;
      } else {
        return "";
      }
    }()), 1));
  } else {
    return null;
  }
};
no.en.core.parse_integer = function parse_integer(s) {
  return no.en.core.parse_number.call(null, s, function(p1__23955_SHARP_) {
    return parseInt(p1__23955_SHARP_);
  });
};
no.en.core.parse_long = function parse_long(s) {
  return no.en.core.parse_number.call(null, s, function(p1__23956_SHARP_) {
    return parseInt(p1__23956_SHARP_);
  });
};
no.en.core.parse_double = function parse_double(s) {
  return no.en.core.parse_number.call(null, s, function(p1__23957_SHARP_) {
    return parseFloat(p1__23957_SHARP_);
  });
};
no.en.core.parse_float = function parse_float(s) {
  return no.en.core.parse_number.call(null, s, function(p1__23958_SHARP_) {
    return parseFloat(p1__23958_SHARP_);
  });
};
no.en.core.format_query_params = function format_query_params(m) {
  var params = clojure.string.join.call(null, "\x26", cljs.core.map.call(null, function(p1__23961_SHARP_) {
    return clojure.string.join.call(null, "\x3d", p1__23961_SHARP_);
  }, cljs.core.map.call(null, function(p1__23960_SHARP_) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [no.en.core.url_encode.call(null, cljs.core.name.call(null, cljs.core.first.call(null, p1__23960_SHARP_))), no.en.core.url_encode.call(null, cljs.core.second.call(null, p1__23960_SHARP_))], null);
  }, cljs.core.remove.call(null, function(p1__23959_SHARP_) {
    return clojure.string.blank_QMARK_.call(null, [cljs.core.str(cljs.core.second.call(null, p1__23959_SHARP_))].join(""));
  }, cljs.core.sort_by.call(null, cljs.core.first, cljs.core.seq.call(null, m))))));
  if (cljs.core.not.call(null, clojure.string.blank_QMARK_.call(null, params))) {
    return params;
  } else {
    return null;
  }
};
no.en.core.format_url = function format_url(m) {
  if (!cljs.core.empty_QMARK_.call(null, m)) {
    var query_params = (new cljs.core.Keyword(null, "query-params", "query-params", 900640534)).cljs$core$IFn$_invoke$arity$1(m);
    return[cljs.core.str(cljs.core.truth_((new cljs.core.Keyword(null, "scheme", "scheme", 90199613)).cljs$core$IFn$_invoke$arity$1(m)) ? [cljs.core.str(cljs.core.name.call(null, (new cljs.core.Keyword(null, "scheme", "scheme", 90199613)).cljs$core$IFn$_invoke$arity$1(m))), cljs.core.str("://")].join("") : null), cljs.core.str(function() {
      var map__23963 = m;
      var map__23963__$1 = cljs.core.seq_QMARK_.call(null, map__23963) ? cljs.core.apply.call(null, cljs.core.hash_map, map__23963) : map__23963;
      var password = cljs.core.get.call(null, map__23963__$1, new cljs.core.Keyword(null, "password", "password", 417022471));
      var user = cljs.core.get.call(null, map__23963__$1, new cljs.core.Keyword(null, "user", "user", 1532431356));
      if (cljs.core.truth_(user)) {
        return[cljs.core.str(cljs.core.truth_(user) ? user : null), cljs.core.str(cljs.core.truth_(password) ? [cljs.core.str(":"), cljs.core.str(password)].join("") : null), cljs.core.str("@")].join("");
      } else {
        return null;
      }
    }()), cljs.core.str((new cljs.core.Keyword(null, "server-name", "server-name", -1012104295)).cljs$core$IFn$_invoke$arity$1(m)), cljs.core.str(function() {
      var temp__4124__auto__ = (new cljs.core.Keyword(null, "server-port", "server-port", 663745648)).cljs$core$IFn$_invoke$arity$1(m);
      if (cljs.core.truth_(temp__4124__auto__)) {
        var port = temp__4124__auto__;
        if (!cljs.core._EQ_.call(null, port, no.en.core.port_number.call(null, (new cljs.core.Keyword(null, "scheme", "scheme", 90199613)).cljs$core$IFn$_invoke$arity$1(m)))) {
          return[cljs.core.str(":"), cljs.core.str(port)].join("");
        } else {
          return null;
        }
      } else {
        return null;
      }
    }()), cljs.core.str((new cljs.core.Keyword(null, "uri", "uri", -774711847)).cljs$core$IFn$_invoke$arity$1(m) == null && !cljs.core.empty_QMARK_.call(null, query_params) ? "/" : (new cljs.core.Keyword(null, "uri", "uri", -774711847)).cljs$core$IFn$_invoke$arity$1(m)), cljs.core.str(!cljs.core.empty_QMARK_.call(null, query_params) ? [cljs.core.str("?"), cljs.core.str(no.en.core.format_query_params.call(null, query_params))].join("") : null), cljs.core.str(cljs.core.not.call(null, clojure.string.blank_QMARK_.call(null, 
    (new cljs.core.Keyword(null, "fragment", "fragment", 826775688)).cljs$core$IFn$_invoke$arity$1(m))) ? [cljs.core.str("#"), cljs.core.str((new cljs.core.Keyword(null, "fragment", "fragment", 826775688)).cljs$core$IFn$_invoke$arity$1(m))].join("") : null)].join("");
  } else {
    return null;
  }
};
no.en.core.parse_percent = function parse_percent(s) {
  return no.en.core.parse_double.call(null, clojure.string.replace.call(null, s, "%", ""));
};
no.en.core.pattern_quote = function pattern_quote(s) {
  return clojure.string.replace.call(null, cljs.core.name.call(null, s), /([\[\]\^\$\|\(\)\\\+\*\?\{\}\=\!.])/, "\\\\$1");
};
no.en.core.separator = function separator(s) {
  var temp__4124__auto__ = cljs.core.re_matches.call(null, /([a-z0-9_-]+)([^a-z0-9_-]+).*/i, s);
  if (cljs.core.truth_(temp__4124__auto__)) {
    var matches = temp__4124__auto__;
    return cljs.core.nth.call(null, matches, 2);
  } else {
    return null;
  }
};
no.en.core.parse_query_params = function parse_query_params(s) {
  if (cljs.core.truth_(s)) {
    return cljs.core.apply.call(null, cljs.core.hash_map, cljs.core.mapcat.call(null, function(p1__23966_SHARP_) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.call(null, no.en.core.url_decode.call(null, cljs.core.first.call(null, p1__23966_SHARP_))), no.en.core.url_decode.call(null, cljs.core.second.call(null, p1__23966_SHARP_))], null);
    }, cljs.core.filter.call(null, function(p1__23965_SHARP_) {
      return cljs.core._EQ_.call(null, 2, cljs.core.count.call(null, p1__23965_SHARP_));
    }, cljs.core.map.call(null, function(p1__23964_SHARP_) {
      return clojure.string.split.call(null, p1__23964_SHARP_, /=/);
    }, clojure.string.split.call(null, [cljs.core.str(s)].join(""), /&/)))));
  } else {
    return null;
  }
};
no.en.core.parse_url = function parse_url(s) {
  var temp__4124__auto__ = cljs.core.re_matches.call(null, no.en.core.url_regex, [cljs.core.str(s)].join(""));
  if (cljs.core.truth_(temp__4124__auto__)) {
    var matches = temp__4124__auto__;
    var scheme = cljs.core.keyword.call(null, cljs.core.nth.call(null, matches, 1));
    return no.en.core.compact_map.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "password", "password", 417022471), new cljs.core.Keyword(null, "fragment", "fragment", 826775688), new cljs.core.Keyword(null, "server-port", "server-port", 663745648), new cljs.core.Keyword(null, "query-params", "query-params", 900640534), new cljs.core.Keyword(null, "uri", "uri", -774711847), new cljs.core.Keyword(null, "server-name", "server-name", -1012104295), new cljs.core.Keyword(null, 
    "query-string", "query-string", -1018845061), new cljs.core.Keyword(null, "user", "user", 1532431356), new cljs.core.Keyword(null, "scheme", "scheme", 90199613)], [cljs.core.nth.call(null, matches, 4), cljs.core.nth.call(null, matches, 14), function() {
      var or__7504__auto__ = no.en.core.parse_integer.call(null, cljs.core.nth.call(null, matches, 8));
      if (cljs.core.truth_(or__7504__auto__)) {
        return or__7504__auto__;
      } else {
        return no.en.core.port_number.call(null, scheme);
      }
    }(), no.en.core.parse_query_params.call(null, cljs.core.nth.call(null, matches, 12)), cljs.core.nth.call(null, matches, 10), cljs.core.nth.call(null, matches, 6), cljs.core.nth.call(null, matches, 12), cljs.core.nth.call(null, matches, 3), scheme]));
  } else {
    return null;
  }
};
no.en.core.with_retries_STAR_ = function with_retries_STAR_(n, thunk) {
  var n__$1 = n;
  while (true) {
    var temp__4124__auto__ = function() {
      try {
        return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [thunk.call(null)], null);
      } catch (e23968) {
        if (e23968 instanceof Error) {
          var e = e23968;
          if (n__$1 === 0) {
            throw e;
          } else {
            return null;
          }
        } else {
          throw e23968;
        }
      }
    }();
    if (cljs.core.truth_(temp__4124__auto__)) {
      var result = temp__4124__auto__;
      return result.call(null, 0);
    } else {
      var G__23969 = n__$1 - 1;
      n__$1 = G__23969;
      continue;
    }
    break;
  }
};
goog.provide("goog.Uri");
goog.provide("goog.Uri.QueryData");
goog.require("goog.array");
goog.require("goog.string");
goog.require("goog.structs");
goog.require("goog.structs.Map");
goog.require("goog.uri.utils");
goog.require("goog.uri.utils.ComponentIndex");
goog.require("goog.uri.utils.StandardQueryParam");
goog.Uri = function(opt_uri, opt_ignoreCase) {
  var m;
  if (opt_uri instanceof goog.Uri) {
    this.ignoreCase_ = goog.isDef(opt_ignoreCase) ? opt_ignoreCase : opt_uri.getIgnoreCase();
    this.setScheme(opt_uri.getScheme());
    this.setUserInfo(opt_uri.getUserInfo());
    this.setDomain(opt_uri.getDomain());
    this.setPort(opt_uri.getPort());
    this.setPath(opt_uri.getPath());
    this.setQueryData(opt_uri.getQueryData().clone());
    this.setFragment(opt_uri.getFragment());
  } else {
    if (opt_uri && (m = goog.uri.utils.split(String(opt_uri)))) {
      this.ignoreCase_ = !!opt_ignoreCase;
      this.setScheme(m[goog.uri.utils.ComponentIndex.SCHEME] || "", true);
      this.setUserInfo(m[goog.uri.utils.ComponentIndex.USER_INFO] || "", true);
      this.setDomain(m[goog.uri.utils.ComponentIndex.DOMAIN] || "", true);
      this.setPort(m[goog.uri.utils.ComponentIndex.PORT]);
      this.setPath(m[goog.uri.utils.ComponentIndex.PATH] || "", true);
      this.setQueryData(m[goog.uri.utils.ComponentIndex.QUERY_DATA] || "", true);
      this.setFragment(m[goog.uri.utils.ComponentIndex.FRAGMENT] || "", true);
    } else {
      this.ignoreCase_ = !!opt_ignoreCase;
      this.queryData_ = new goog.Uri.QueryData(null, null, this.ignoreCase_);
    }
  }
};
goog.Uri.preserveParameterTypesCompatibilityFlag = false;
goog.Uri.RANDOM_PARAM = goog.uri.utils.StandardQueryParam.RANDOM;
goog.Uri.prototype.scheme_ = "";
goog.Uri.prototype.userInfo_ = "";
goog.Uri.prototype.domain_ = "";
goog.Uri.prototype.port_ = null;
goog.Uri.prototype.path_ = "";
goog.Uri.prototype.queryData_;
goog.Uri.prototype.fragment_ = "";
goog.Uri.prototype.isReadOnly_ = false;
goog.Uri.prototype.ignoreCase_ = false;
goog.Uri.prototype.toString = function() {
  var out = [];
  var scheme = this.getScheme();
  if (scheme) {
    out.push(goog.Uri.encodeSpecialChars_(scheme, goog.Uri.reDisallowedInSchemeOrUserInfo_), ":");
  }
  var domain = this.getDomain();
  if (domain) {
    out.push("//");
    var userInfo = this.getUserInfo();
    if (userInfo) {
      out.push(goog.Uri.encodeSpecialChars_(userInfo, goog.Uri.reDisallowedInSchemeOrUserInfo_), "@");
    }
    out.push(goog.string.urlEncode(domain));
    var port = this.getPort();
    if (port != null) {
      out.push(":", String(port));
    }
  }
  var path = this.getPath();
  if (path) {
    if (this.hasDomain() && path.charAt(0) != "/") {
      out.push("/");
    }
    out.push(goog.Uri.encodeSpecialChars_(path, path.charAt(0) == "/" ? goog.Uri.reDisallowedInAbsolutePath_ : goog.Uri.reDisallowedInRelativePath_));
  }
  var query = this.getEncodedQuery();
  if (query) {
    out.push("?", query);
  }
  var fragment = this.getFragment();
  if (fragment) {
    out.push("#", goog.Uri.encodeSpecialChars_(fragment, goog.Uri.reDisallowedInFragment_));
  }
  return out.join("");
};
goog.Uri.prototype.resolve = function(relativeUri) {
  var absoluteUri = this.clone();
  var overridden = relativeUri.hasScheme();
  if (overridden) {
    absoluteUri.setScheme(relativeUri.getScheme());
  } else {
    overridden = relativeUri.hasUserInfo();
  }
  if (overridden) {
    absoluteUri.setUserInfo(relativeUri.getUserInfo());
  } else {
    overridden = relativeUri.hasDomain();
  }
  if (overridden) {
    absoluteUri.setDomain(relativeUri.getDomain());
  } else {
    overridden = relativeUri.hasPort();
  }
  var path = relativeUri.getPath();
  if (overridden) {
    absoluteUri.setPort(relativeUri.getPort());
  } else {
    overridden = relativeUri.hasPath();
    if (overridden) {
      if (path.charAt(0) != "/") {
        if (this.hasDomain() && !this.hasPath()) {
          path = "/" + path;
        } else {
          var lastSlashIndex = absoluteUri.getPath().lastIndexOf("/");
          if (lastSlashIndex != -1) {
            path = absoluteUri.getPath().substr(0, lastSlashIndex + 1) + path;
          }
        }
      }
      path = goog.Uri.removeDotSegments(path);
    }
  }
  if (overridden) {
    absoluteUri.setPath(path);
  } else {
    overridden = relativeUri.hasQuery();
  }
  if (overridden) {
    absoluteUri.setQueryData(relativeUri.getDecodedQuery());
  } else {
    overridden = relativeUri.hasFragment();
  }
  if (overridden) {
    absoluteUri.setFragment(relativeUri.getFragment());
  }
  return absoluteUri;
};
goog.Uri.prototype.clone = function() {
  return new goog.Uri(this);
};
goog.Uri.prototype.getScheme = function() {
  return this.scheme_;
};
goog.Uri.prototype.setScheme = function(newScheme, opt_decode) {
  this.enforceReadOnly();
  this.scheme_ = opt_decode ? goog.Uri.decodeOrEmpty_(newScheme) : newScheme;
  if (this.scheme_) {
    this.scheme_ = this.scheme_.replace(/:$/, "");
  }
  return this;
};
goog.Uri.prototype.hasScheme = function() {
  return!!this.scheme_;
};
goog.Uri.prototype.getUserInfo = function() {
  return this.userInfo_;
};
goog.Uri.prototype.setUserInfo = function(newUserInfo, opt_decode) {
  this.enforceReadOnly();
  this.userInfo_ = opt_decode ? goog.Uri.decodeOrEmpty_(newUserInfo) : newUserInfo;
  return this;
};
goog.Uri.prototype.hasUserInfo = function() {
  return!!this.userInfo_;
};
goog.Uri.prototype.getDomain = function() {
  return this.domain_;
};
goog.Uri.prototype.setDomain = function(newDomain, opt_decode) {
  this.enforceReadOnly();
  this.domain_ = opt_decode ? goog.Uri.decodeOrEmpty_(newDomain) : newDomain;
  return this;
};
goog.Uri.prototype.hasDomain = function() {
  return!!this.domain_;
};
goog.Uri.prototype.getPort = function() {
  return this.port_;
};
goog.Uri.prototype.setPort = function(newPort) {
  this.enforceReadOnly();
  if (newPort) {
    newPort = Number(newPort);
    if (isNaN(newPort) || newPort < 0) {
      throw Error("Bad port number " + newPort);
    }
    this.port_ = newPort;
  } else {
    this.port_ = null;
  }
  return this;
};
goog.Uri.prototype.hasPort = function() {
  return this.port_ != null;
};
goog.Uri.prototype.getPath = function() {
  return this.path_;
};
goog.Uri.prototype.setPath = function(newPath, opt_decode) {
  this.enforceReadOnly();
  this.path_ = opt_decode ? goog.Uri.decodeOrEmpty_(newPath) : newPath;
  return this;
};
goog.Uri.prototype.hasPath = function() {
  return!!this.path_;
};
goog.Uri.prototype.hasQuery = function() {
  return this.queryData_.toString() !== "";
};
goog.Uri.prototype.setQueryData = function(queryData, opt_decode) {
  this.enforceReadOnly();
  if (queryData instanceof goog.Uri.QueryData) {
    this.queryData_ = queryData;
    this.queryData_.setIgnoreCase(this.ignoreCase_);
  } else {
    if (!opt_decode) {
      queryData = goog.Uri.encodeSpecialChars_(queryData, goog.Uri.reDisallowedInQuery_);
    }
    this.queryData_ = new goog.Uri.QueryData(queryData, null, this.ignoreCase_);
  }
  return this;
};
goog.Uri.prototype.setQuery = function(newQuery, opt_decode) {
  return this.setQueryData(newQuery, opt_decode);
};
goog.Uri.prototype.getEncodedQuery = function() {
  return this.queryData_.toString();
};
goog.Uri.prototype.getDecodedQuery = function() {
  return this.queryData_.toDecodedString();
};
goog.Uri.prototype.getQueryData = function() {
  return this.queryData_;
};
goog.Uri.prototype.getQuery = function() {
  return this.getEncodedQuery();
};
goog.Uri.prototype.setParameterValue = function(key, value) {
  this.enforceReadOnly();
  this.queryData_.set(key, value);
  return this;
};
goog.Uri.prototype.setParameterValues = function(key, values) {
  this.enforceReadOnly();
  if (!goog.isArray(values)) {
    values = [String(values)];
  }
  this.queryData_.setValues(key, (values));
  return this;
};
goog.Uri.prototype.getParameterValues = function(name) {
  return this.queryData_.getValues(name);
};
goog.Uri.prototype.getParameterValue = function(paramName) {
  return(this.queryData_.get(paramName));
};
goog.Uri.prototype.getFragment = function() {
  return this.fragment_;
};
goog.Uri.prototype.setFragment = function(newFragment, opt_decode) {
  this.enforceReadOnly();
  this.fragment_ = opt_decode ? goog.Uri.decodeOrEmpty_(newFragment) : newFragment;
  return this;
};
goog.Uri.prototype.hasFragment = function() {
  return!!this.fragment_;
};
goog.Uri.prototype.hasSameDomainAs = function(uri2) {
  return(!this.hasDomain() && !uri2.hasDomain() || this.getDomain() == uri2.getDomain()) && (!this.hasPort() && !uri2.hasPort() || this.getPort() == uri2.getPort());
};
goog.Uri.prototype.makeUnique = function() {
  this.enforceReadOnly();
  this.setParameterValue(goog.Uri.RANDOM_PARAM, goog.string.getRandomString());
  return this;
};
goog.Uri.prototype.removeParameter = function(key) {
  this.enforceReadOnly();
  this.queryData_.remove(key);
  return this;
};
goog.Uri.prototype.setReadOnly = function(isReadOnly) {
  this.isReadOnly_ = isReadOnly;
  return this;
};
goog.Uri.prototype.isReadOnly = function() {
  return this.isReadOnly_;
};
goog.Uri.prototype.enforceReadOnly = function() {
  if (this.isReadOnly_) {
    throw Error("Tried to modify a read-only Uri");
  }
};
goog.Uri.prototype.setIgnoreCase = function(ignoreCase) {
  this.ignoreCase_ = ignoreCase;
  if (this.queryData_) {
    this.queryData_.setIgnoreCase(ignoreCase);
  }
  return this;
};
goog.Uri.prototype.getIgnoreCase = function() {
  return this.ignoreCase_;
};
goog.Uri.parse = function(uri, opt_ignoreCase) {
  return uri instanceof goog.Uri ? uri.clone() : new goog.Uri(uri, opt_ignoreCase);
};
goog.Uri.create = function(opt_scheme, opt_userInfo, opt_domain, opt_port, opt_path, opt_query, opt_fragment, opt_ignoreCase) {
  var uri = new goog.Uri(null, opt_ignoreCase);
  opt_scheme && uri.setScheme(opt_scheme);
  opt_userInfo && uri.setUserInfo(opt_userInfo);
  opt_domain && uri.setDomain(opt_domain);
  opt_port && uri.setPort(opt_port);
  opt_path && uri.setPath(opt_path);
  opt_query && uri.setQueryData(opt_query);
  opt_fragment && uri.setFragment(opt_fragment);
  return uri;
};
goog.Uri.resolve = function(base, rel) {
  if (!(base instanceof goog.Uri)) {
    base = goog.Uri.parse(base);
  }
  if (!(rel instanceof goog.Uri)) {
    rel = goog.Uri.parse(rel);
  }
  return base.resolve(rel);
};
goog.Uri.removeDotSegments = function(path) {
  if (path == ".." || path == ".") {
    return "";
  } else {
    if (!goog.string.contains(path, "./") && !goog.string.contains(path, "/.")) {
      return path;
    } else {
      var leadingSlash = goog.string.startsWith(path, "/");
      var segments = path.split("/");
      var out = [];
      for (var pos = 0;pos < segments.length;) {
        var segment = segments[pos++];
        if (segment == ".") {
          if (leadingSlash && pos == segments.length) {
            out.push("");
          }
        } else {
          if (segment == "..") {
            if (out.length > 1 || out.length == 1 && out[0] != "") {
              out.pop();
            }
            if (leadingSlash && pos == segments.length) {
              out.push("");
            }
          } else {
            out.push(segment);
            leadingSlash = true;
          }
        }
      }
      return out.join("/");
    }
  }
};
goog.Uri.decodeOrEmpty_ = function(val) {
  return val ? decodeURIComponent(val) : "";
};
goog.Uri.encodeSpecialChars_ = function(unescapedPart, extra) {
  if (goog.isString(unescapedPart)) {
    return encodeURI(unescapedPart).replace(extra, goog.Uri.encodeChar_);
  }
  return null;
};
goog.Uri.encodeChar_ = function(ch) {
  var n = ch.charCodeAt(0);
  return "%" + (n >> 4 & 15).toString(16) + (n & 15).toString(16);
};
goog.Uri.reDisallowedInSchemeOrUserInfo_ = /[#\/\?@]/g;
goog.Uri.reDisallowedInRelativePath_ = /[\#\?:]/g;
goog.Uri.reDisallowedInAbsolutePath_ = /[\#\?]/g;
goog.Uri.reDisallowedInQuery_ = /[\#\?@]/g;
goog.Uri.reDisallowedInFragment_ = /#/g;
goog.Uri.haveSameDomain = function(uri1String, uri2String) {
  var pieces1 = goog.uri.utils.split(uri1String);
  var pieces2 = goog.uri.utils.split(uri2String);
  return pieces1[goog.uri.utils.ComponentIndex.DOMAIN] == pieces2[goog.uri.utils.ComponentIndex.DOMAIN] && pieces1[goog.uri.utils.ComponentIndex.PORT] == pieces2[goog.uri.utils.ComponentIndex.PORT];
};
goog.Uri.QueryData = function(opt_query, opt_uri, opt_ignoreCase) {
  this.encodedQuery_ = opt_query || null;
  this.ignoreCase_ = !!opt_ignoreCase;
};
goog.Uri.QueryData.prototype.ensureKeyMapInitialized_ = function() {
  if (!this.keyMap_) {
    this.keyMap_ = new goog.structs.Map;
    this.count_ = 0;
    if (this.encodedQuery_) {
      var pairs = this.encodedQuery_.split("\x26");
      for (var i = 0;i < pairs.length;i++) {
        var indexOfEquals = pairs[i].indexOf("\x3d");
        var name = null;
        var value = null;
        if (indexOfEquals >= 0) {
          name = pairs[i].substring(0, indexOfEquals);
          value = pairs[i].substring(indexOfEquals + 1);
        } else {
          name = pairs[i];
        }
        name = goog.string.urlDecode(name);
        name = this.getKeyName_(name);
        this.add(name, value ? goog.string.urlDecode(value) : "");
      }
    }
  }
};
goog.Uri.QueryData.createFromMap = function(map, opt_uri, opt_ignoreCase) {
  var keys = goog.structs.getKeys(map);
  if (typeof keys == "undefined") {
    throw Error("Keys are undefined");
  }
  var queryData = new goog.Uri.QueryData(null, null, opt_ignoreCase);
  var values = goog.structs.getValues(map);
  for (var i = 0;i < keys.length;i++) {
    var key = keys[i];
    var value = values[i];
    if (!goog.isArray(value)) {
      queryData.add(key, value);
    } else {
      queryData.setValues(key, value);
    }
  }
  return queryData;
};
goog.Uri.QueryData.createFromKeysValues = function(keys, values, opt_uri, opt_ignoreCase) {
  if (keys.length != values.length) {
    throw Error("Mismatched lengths for keys/values");
  }
  var queryData = new goog.Uri.QueryData(null, null, opt_ignoreCase);
  for (var i = 0;i < keys.length;i++) {
    queryData.add(keys[i], values[i]);
  }
  return queryData;
};
goog.Uri.QueryData.prototype.keyMap_ = null;
goog.Uri.QueryData.prototype.count_ = null;
goog.Uri.QueryData.prototype.getCount = function() {
  this.ensureKeyMapInitialized_();
  return this.count_;
};
goog.Uri.QueryData.prototype.add = function(key, value) {
  this.ensureKeyMapInitialized_();
  this.invalidateCache_();
  key = this.getKeyName_(key);
  var values = this.keyMap_.get(key);
  if (!values) {
    this.keyMap_.set(key, values = []);
  }
  values.push(value);
  this.count_++;
  return this;
};
goog.Uri.QueryData.prototype.remove = function(key) {
  this.ensureKeyMapInitialized_();
  key = this.getKeyName_(key);
  if (this.keyMap_.containsKey(key)) {
    this.invalidateCache_();
    this.count_ -= this.keyMap_.get(key).length;
    return this.keyMap_.remove(key);
  }
  return false;
};
goog.Uri.QueryData.prototype.clear = function() {
  this.invalidateCache_();
  this.keyMap_ = null;
  this.count_ = 0;
};
goog.Uri.QueryData.prototype.isEmpty = function() {
  this.ensureKeyMapInitialized_();
  return this.count_ == 0;
};
goog.Uri.QueryData.prototype.containsKey = function(key) {
  this.ensureKeyMapInitialized_();
  key = this.getKeyName_(key);
  return this.keyMap_.containsKey(key);
};
goog.Uri.QueryData.prototype.containsValue = function(value) {
  var vals = this.getValues();
  return goog.array.contains(vals, value);
};
goog.Uri.QueryData.prototype.getKeys = function() {
  this.ensureKeyMapInitialized_();
  var vals = (this.keyMap_.getValues());
  var keys = this.keyMap_.getKeys();
  var rv = [];
  for (var i = 0;i < keys.length;i++) {
    var val = vals[i];
    for (var j = 0;j < val.length;j++) {
      rv.push(keys[i]);
    }
  }
  return rv;
};
goog.Uri.QueryData.prototype.getValues = function(opt_key) {
  this.ensureKeyMapInitialized_();
  var rv = [];
  if (goog.isString(opt_key)) {
    if (this.containsKey(opt_key)) {
      rv = goog.array.concat(rv, this.keyMap_.get(this.getKeyName_(opt_key)));
    }
  } else {
    var values = (this.keyMap_.getValues());
    for (var i = 0;i < values.length;i++) {
      rv = goog.array.concat(rv, values[i]);
    }
  }
  return rv;
};
goog.Uri.QueryData.prototype.set = function(key, value) {
  this.ensureKeyMapInitialized_();
  this.invalidateCache_();
  key = this.getKeyName_(key);
  if (this.containsKey(key)) {
    this.count_ -= this.keyMap_.get(key).length;
  }
  this.keyMap_.set(key, [value]);
  this.count_++;
  return this;
};
goog.Uri.QueryData.prototype.get = function(key, opt_default) {
  var values = key ? this.getValues(key) : [];
  if (goog.Uri.preserveParameterTypesCompatibilityFlag) {
    return values.length > 0 ? values[0] : opt_default;
  } else {
    return values.length > 0 ? String(values[0]) : opt_default;
  }
};
goog.Uri.QueryData.prototype.setValues = function(key, values) {
  this.remove(key);
  if (values.length > 0) {
    this.invalidateCache_();
    this.keyMap_.set(this.getKeyName_(key), goog.array.clone(values));
    this.count_ += values.length;
  }
};
goog.Uri.QueryData.prototype.toString = function() {
  if (this.encodedQuery_) {
    return this.encodedQuery_;
  }
  if (!this.keyMap_) {
    return "";
  }
  var sb = [];
  var keys = this.keyMap_.getKeys();
  for (var i = 0;i < keys.length;i++) {
    var key = keys[i];
    var encodedKey = goog.string.urlEncode(key);
    var val = this.getValues(key);
    for (var j = 0;j < val.length;j++) {
      var param = encodedKey;
      if (val[j] !== "") {
        param += "\x3d" + goog.string.urlEncode(val[j]);
      }
      sb.push(param);
    }
  }
  return this.encodedQuery_ = sb.join("\x26");
};
goog.Uri.QueryData.prototype.toDecodedString = function() {
  return goog.Uri.decodeOrEmpty_(this.toString());
};
goog.Uri.QueryData.prototype.invalidateCache_ = function() {
  this.encodedQuery_ = null;
};
goog.Uri.QueryData.prototype.filterKeys = function(keys) {
  this.ensureKeyMapInitialized_();
  this.keyMap_.forEach(function(value, key) {
    if (!goog.array.contains(keys, key)) {
      this.remove(key);
    }
  }, this);
  return this;
};
goog.Uri.QueryData.prototype.clone = function() {
  var rv = new goog.Uri.QueryData;
  rv.encodedQuery_ = this.encodedQuery_;
  if (this.keyMap_) {
    rv.keyMap_ = this.keyMap_.clone();
    rv.count_ = this.count_;
  }
  return rv;
};
goog.Uri.QueryData.prototype.getKeyName_ = function(arg) {
  var keyName = String(arg);
  if (this.ignoreCase_) {
    keyName = keyName.toLowerCase();
  }
  return keyName;
};
goog.Uri.QueryData.prototype.setIgnoreCase = function(ignoreCase) {
  var resetKeys = ignoreCase && !this.ignoreCase_;
  if (resetKeys) {
    this.ensureKeyMapInitialized_();
    this.invalidateCache_();
    this.keyMap_.forEach(function(value, key) {
      var lowerCase = key.toLowerCase();
      if (key != lowerCase) {
        this.remove(key);
        this.setValues(lowerCase, value);
      }
    }, this);
  }
  this.ignoreCase_ = ignoreCase;
};
goog.Uri.QueryData.prototype.extend = function(var_args) {
  for (var i = 0;i < arguments.length;i++) {
    var data = arguments[i];
    goog.structs.forEach(data, function(value, key) {
      this.add(key, value);
    }, this);
  }
};
goog.provide("com.cognitect.transit.util");
goog.require("goog.object");
goog.scope(function() {
  var util = com.cognitect.transit.util, gobject = goog.object;
  if (typeof Object.keys != "undefined") {
    util.objectKeys = function(obj) {
      return Object.keys(obj);
    };
  } else {
    util.objectKeys = function(obj) {
      return gobject.getKeys(obj);
    };
  }
  if (typeof Array.isArray != "undefined") {
    util.isArray = function(obj) {
      return Array.isArray(obj);
    };
  } else {
    util.isArray = function(obj) {
      return goog.typeOf(obj) === "array";
    };
  }
  util.chars = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\x3d";
  util.randInt = function(ub) {
    return Math.round(Math.random() * ub);
  };
  util.randHex = function() {
    return util.randInt(15).toString(16);
  };
  util.randomUUID = function() {
    var rhex = (8 | 3 & util.randInt(14)).toString(16), ret = util.randHex() + util.randHex() + util.randHex() + util.randHex() + util.randHex() + util.randHex() + util.randHex() + util.randHex() + "-" + util.randHex() + util.randHex() + util.randHex() + util.randHex() + "-" + "4" + util.randHex() + util.randHex() + util.randHex() + "-" + rhex + util.randHex() + util.randHex() + util.randHex() + "-" + util.randHex() + util.randHex() + util.randHex() + util.randHex() + util.randHex() + util.randHex() + 
    util.randHex() + util.randHex() + util.randHex() + util.randHex() + util.randHex() + util.randHex();
    return ret;
  };
  util.btoa = function(input) {
    if (typeof btoa != "undefined") {
      return btoa(input);
    } else {
      var str = String(input);
      for (var block, charCode, idx = 0, map = util.chars, output = "";str.charAt(idx | 0) || (map = "\x3d", idx % 1);output += map.charAt(63 & block >> 8 - idx % 1 * 8)) {
        charCode = str.charCodeAt(idx += 3 / 4);
        if (charCode > 255) {
          throw new Error("'btoa' failed: The string to be encoded contains characters outside of the Latin1 range.");
        }
        block = block << 8 | charCode;
      }
      return output;
    }
  };
  util.atob = function(input) {
    if (typeof atob != "undefined") {
      return atob(input);
    } else {
      var str = String(input).replace(/=+$/, "");
      if (str.length % 4 == 1) {
        throw new Error("'atob' failed: The string to be decoded is not correctly encoded.");
      }
      for (var bc = 0, bs, buffer, idx = 0, output = "";buffer = str.charAt(idx++);~buffer && (bs = bc % 4 ? bs * 64 + buffer : buffer, bc++ % 4) ? output += String.fromCharCode(255 & bs >> (-2 * bc & 6)) : 0) {
        buffer = util.chars.indexOf(buffer);
      }
      return output;
    }
  };
  util.Uint8ToBase64 = function(u8Arr) {
    var CHUNK_SIZE = 32768, index = 0, length = u8Arr.length, result = "", slice = null;
    while (index < length) {
      slice = u8Arr.subarray(index, Math.min(index + CHUNK_SIZE, length));
      result += String.fromCharCode.apply(null, slice);
      index += CHUNK_SIZE;
    }
    return util.btoa(result);
  };
  util.Base64ToUint8 = function(base64) {
    var binary_string = util.atob(base64), len = binary_string.length, bytes = new Uint8Array(len);
    for (var i = 0;i < len;i++) {
      var ascii = binary_string.charCodeAt(i);
      bytes[i] = ascii;
    }
    return bytes;
  };
});
goog.provide("com.cognitect.transit.eq");
goog.require("com.cognitect.transit.util");
goog.scope(function() {
  var eq = com.cognitect.transit.eq, util = com.cognitect.transit.util;
  eq.hashCodeProperty = "transit$hashCode$";
  eq.hashCodeCounter = 1;
  eq.equals = function(x, y) {
    if (x == null) {
      return y == null;
    } else {
      if (x === y) {
        return true;
      } else {
        if (typeof x === "object") {
          if (util.isArray(x)) {
            if (util.isArray(y)) {
              if (x.length === y.length) {
                for (var i = 0;i < x.length;i++) {
                  if (!eq.equals(x[i], y[i])) {
                    return false;
                  }
                }
                return true;
              } else {
                return false;
              }
            } else {
              return false;
            }
          } else {
            if (x.com$cognitect$transit$equals) {
              return x.com$cognitect$transit$equals(y);
            } else {
              if (y != null && typeof y === "object") {
                if (y.com$cognitect$transit$equals) {
                  return y.com$cognitect$transit$equals(x);
                } else {
                  var xklen = 0, yklen = util.objectKeys(y).length;
                  for (var p in x) {
                    if (!x.hasOwnProperty(p)) {
                      continue;
                    }
                    xklen++;
                    if (!y.hasOwnProperty(p)) {
                      return false;
                    } else {
                      if (!eq.equals(x[p], y[p])) {
                        return false;
                      }
                    }
                  }
                  return xklen === yklen;
                }
              } else {
                return false;
              }
            }
          }
        } else {
          return false;
        }
      }
    }
  };
  eq.hashCombine = function(seed, hash) {
    return seed ^ hash + 2654435769 + (seed << 6) + (seed >> 2);
  };
  eq.stringCodeCache = {};
  eq.stringCodeCacheSize = 0;
  eq.STR_CACHE_MAX = 256;
  eq.hashString = function(str) {
    var cached = eq.stringCodeCache[str];
    if (cached != null) {
      return cached;
    }
    var code = 0;
    for (var i = 0;i < str.length;++i) {
      code = 31 * code + str.charCodeAt(i);
      code %= 4294967296;
    }
    eq.stringCodeCacheSize++;
    if (eq.stringCodeCacheSize >= eq.STR_CACHE_MAX) {
      eq.stringCodeCache = {};
      eq.stringCodeCacheSize = 1;
    }
    eq.stringCodeCache[str] = code;
    return code;
  };
  eq.hashMapLike = function(m) {
    var code = 0;
    if (m.forEach != null) {
      m.forEach(function(val, key, m) {
        code = (code + (eq.hashCode(key) ^ eq.hashCode(val))) % 4503599627370496;
      });
    } else {
      var keys = util.objectKeys(m);
      for (var i = 0;i < keys.length;i++) {
        var key = keys[i];
        var val = m[key];
        code = (code + (eq.hashCode(key) ^ eq.hashCode(val))) % 4503599627370496;
      }
    }
    return code;
  };
  eq.hashArrayLike = function(arr) {
    var code = 0;
    if (util.isArray(arr)) {
      for (var i = 0;i < arr.length;i++) {
        code = eq.hashCombine(code, eq.hashCode(arr[i]));
      }
    } else {
      if (arr.forEach) {
        arr.forEach(function(x, i) {
          code = eq.hashCombine(code, eq.hashCode(x));
        });
      }
    }
    return code;
  };
  eq.hashCode = function(x) {
    if (x == null) {
      return 0;
    } else {
      switch(typeof x) {
        case "number":
          return x;
          break;
        case "boolean":
          return x === true ? 1 : 0;
          break;
        case "string":
          return eq.hashString(x);
          break;
        case "function":
          var code = x[eq.hashCodeProperty];
          if (code) {
            return code;
          } else {
            code = eq.hashCodeCounter;
            if (typeof Object.defineProperty != "undefined") {
              Object.defineProperty(x, eq.hashCodeProperty, {value:code, enumerable:false});
            } else {
              x[eq.hashCodeProperty] = code;
            }
            eq.hashCodeCounter++;
            return code;
          }
          break;
        default:
          if (x instanceof Date) {
            return x.valueOf();
          } else {
            if (util.isArray(x)) {
              return eq.hashArrayLike(x);
            }
          }
          if (x.com$cognitect$transit$hashCode) {
            return x.com$cognitect$transit$hashCode();
          } else {
            return eq.hashMapLike(x);
          }
          break;
      }
    }
  };
  eq.extendToEQ = function(obj, opts) {
    obj.com$cognitect$transit$hashCode = opts["hashCode"];
    obj.com$cognitect$transit$equals = opts["equals"];
    return obj;
  };
});
goog.provide("goog.math.Long");
goog.math.Long = function(low, high) {
  this.low_ = low | 0;
  this.high_ = high | 0;
};
goog.math.Long.IntCache_ = {};
goog.math.Long.fromInt = function(value) {
  if (-128 <= value && value < 128) {
    var cachedObj = goog.math.Long.IntCache_[value];
    if (cachedObj) {
      return cachedObj;
    }
  }
  var obj = new goog.math.Long(value | 0, value < 0 ? -1 : 0);
  if (-128 <= value && value < 128) {
    goog.math.Long.IntCache_[value] = obj;
  }
  return obj;
};
goog.math.Long.fromNumber = function(value) {
  if (isNaN(value) || !isFinite(value)) {
    return goog.math.Long.ZERO;
  } else {
    if (value <= -goog.math.Long.TWO_PWR_63_DBL_) {
      return goog.math.Long.MIN_VALUE;
    } else {
      if (value + 1 >= goog.math.Long.TWO_PWR_63_DBL_) {
        return goog.math.Long.MAX_VALUE;
      } else {
        if (value < 0) {
          return goog.math.Long.fromNumber(-value).negate();
        } else {
          return new goog.math.Long(value % goog.math.Long.TWO_PWR_32_DBL_ | 0, value / goog.math.Long.TWO_PWR_32_DBL_ | 0);
        }
      }
    }
  }
};
goog.math.Long.fromBits = function(lowBits, highBits) {
  return new goog.math.Long(lowBits, highBits);
};
goog.math.Long.fromString = function(str, opt_radix) {
  if (str.length == 0) {
    throw Error("number format error: empty string");
  }
  var radix = opt_radix || 10;
  if (radix < 2 || 36 < radix) {
    throw Error("radix out of range: " + radix);
  }
  if (str.charAt(0) == "-") {
    return goog.math.Long.fromString(str.substring(1), radix).negate();
  } else {
    if (str.indexOf("-") >= 0) {
      throw Error('number format error: interior "-" character: ' + str);
    }
  }
  var radixToPower = goog.math.Long.fromNumber(Math.pow(radix, 8));
  var result = goog.math.Long.ZERO;
  for (var i = 0;i < str.length;i += 8) {
    var size = Math.min(8, str.length - i);
    var value = parseInt(str.substring(i, i + size), radix);
    if (size < 8) {
      var power = goog.math.Long.fromNumber(Math.pow(radix, size));
      result = result.multiply(power).add(goog.math.Long.fromNumber(value));
    } else {
      result = result.multiply(radixToPower);
      result = result.add(goog.math.Long.fromNumber(value));
    }
  }
  return result;
};
goog.math.Long.TWO_PWR_16_DBL_ = 1 << 16;
goog.math.Long.TWO_PWR_24_DBL_ = 1 << 24;
goog.math.Long.TWO_PWR_32_DBL_ = goog.math.Long.TWO_PWR_16_DBL_ * goog.math.Long.TWO_PWR_16_DBL_;
goog.math.Long.TWO_PWR_31_DBL_ = goog.math.Long.TWO_PWR_32_DBL_ / 2;
goog.math.Long.TWO_PWR_48_DBL_ = goog.math.Long.TWO_PWR_32_DBL_ * goog.math.Long.TWO_PWR_16_DBL_;
goog.math.Long.TWO_PWR_64_DBL_ = goog.math.Long.TWO_PWR_32_DBL_ * goog.math.Long.TWO_PWR_32_DBL_;
goog.math.Long.TWO_PWR_63_DBL_ = goog.math.Long.TWO_PWR_64_DBL_ / 2;
goog.math.Long.ZERO = goog.math.Long.fromInt(0);
goog.math.Long.ONE = goog.math.Long.fromInt(1);
goog.math.Long.NEG_ONE = goog.math.Long.fromInt(-1);
goog.math.Long.MAX_VALUE = goog.math.Long.fromBits(4294967295 | 0, 2147483647 | 0);
goog.math.Long.MIN_VALUE = goog.math.Long.fromBits(0, 2147483648 | 0);
goog.math.Long.TWO_PWR_24_ = goog.math.Long.fromInt(1 << 24);
goog.math.Long.prototype.toInt = function() {
  return this.low_;
};
goog.math.Long.prototype.toNumber = function() {
  return this.high_ * goog.math.Long.TWO_PWR_32_DBL_ + this.getLowBitsUnsigned();
};
goog.math.Long.prototype.toString = function(opt_radix) {
  var radix = opt_radix || 10;
  if (radix < 2 || 36 < radix) {
    throw Error("radix out of range: " + radix);
  }
  if (this.isZero()) {
    return "0";
  }
  if (this.isNegative()) {
    if (this.equals(goog.math.Long.MIN_VALUE)) {
      var radixLong = goog.math.Long.fromNumber(radix);
      var div = this.div(radixLong);
      var rem = div.multiply(radixLong).subtract(this);
      return div.toString(radix) + rem.toInt().toString(radix);
    } else {
      return "-" + this.negate().toString(radix);
    }
  }
  var radixToPower = goog.math.Long.fromNumber(Math.pow(radix, 6));
  var rem = this;
  var result = "";
  while (true) {
    var remDiv = rem.div(radixToPower);
    var intval = rem.subtract(remDiv.multiply(radixToPower)).toInt();
    var digits = intval.toString(radix);
    rem = remDiv;
    if (rem.isZero()) {
      return digits + result;
    } else {
      while (digits.length < 6) {
        digits = "0" + digits;
      }
      result = "" + digits + result;
    }
  }
};
goog.math.Long.prototype.getHighBits = function() {
  return this.high_;
};
goog.math.Long.prototype.getLowBits = function() {
  return this.low_;
};
goog.math.Long.prototype.getLowBitsUnsigned = function() {
  return this.low_ >= 0 ? this.low_ : goog.math.Long.TWO_PWR_32_DBL_ + this.low_;
};
goog.math.Long.prototype.getNumBitsAbs = function() {
  if (this.isNegative()) {
    if (this.equals(goog.math.Long.MIN_VALUE)) {
      return 64;
    } else {
      return this.negate().getNumBitsAbs();
    }
  } else {
    var val = this.high_ != 0 ? this.high_ : this.low_;
    for (var bit = 31;bit > 0;bit--) {
      if ((val & 1 << bit) != 0) {
        break;
      }
    }
    return this.high_ != 0 ? bit + 33 : bit + 1;
  }
};
goog.math.Long.prototype.isZero = function() {
  return this.high_ == 0 && this.low_ == 0;
};
goog.math.Long.prototype.isNegative = function() {
  return this.high_ < 0;
};
goog.math.Long.prototype.isOdd = function() {
  return(this.low_ & 1) == 1;
};
goog.math.Long.prototype.equals = function(other) {
  return this.high_ == other.high_ && this.low_ == other.low_;
};
goog.math.Long.prototype.notEquals = function(other) {
  return this.high_ != other.high_ || this.low_ != other.low_;
};
goog.math.Long.prototype.lessThan = function(other) {
  return this.compare(other) < 0;
};
goog.math.Long.prototype.lessThanOrEqual = function(other) {
  return this.compare(other) <= 0;
};
goog.math.Long.prototype.greaterThan = function(other) {
  return this.compare(other) > 0;
};
goog.math.Long.prototype.greaterThanOrEqual = function(other) {
  return this.compare(other) >= 0;
};
goog.math.Long.prototype.compare = function(other) {
  if (this.equals(other)) {
    return 0;
  }
  var thisNeg = this.isNegative();
  var otherNeg = other.isNegative();
  if (thisNeg && !otherNeg) {
    return-1;
  }
  if (!thisNeg && otherNeg) {
    return 1;
  }
  if (this.subtract(other).isNegative()) {
    return-1;
  } else {
    return 1;
  }
};
goog.math.Long.prototype.negate = function() {
  if (this.equals(goog.math.Long.MIN_VALUE)) {
    return goog.math.Long.MIN_VALUE;
  } else {
    return this.not().add(goog.math.Long.ONE);
  }
};
goog.math.Long.prototype.add = function(other) {
  var a48 = this.high_ >>> 16;
  var a32 = this.high_ & 65535;
  var a16 = this.low_ >>> 16;
  var a00 = this.low_ & 65535;
  var b48 = other.high_ >>> 16;
  var b32 = other.high_ & 65535;
  var b16 = other.low_ >>> 16;
  var b00 = other.low_ & 65535;
  var c48 = 0, c32 = 0, c16 = 0, c00 = 0;
  c00 += a00 + b00;
  c16 += c00 >>> 16;
  c00 &= 65535;
  c16 += a16 + b16;
  c32 += c16 >>> 16;
  c16 &= 65535;
  c32 += a32 + b32;
  c48 += c32 >>> 16;
  c32 &= 65535;
  c48 += a48 + b48;
  c48 &= 65535;
  return goog.math.Long.fromBits(c16 << 16 | c00, c48 << 16 | c32);
};
goog.math.Long.prototype.subtract = function(other) {
  return this.add(other.negate());
};
goog.math.Long.prototype.multiply = function(other) {
  if (this.isZero()) {
    return goog.math.Long.ZERO;
  } else {
    if (other.isZero()) {
      return goog.math.Long.ZERO;
    }
  }
  if (this.equals(goog.math.Long.MIN_VALUE)) {
    return other.isOdd() ? goog.math.Long.MIN_VALUE : goog.math.Long.ZERO;
  } else {
    if (other.equals(goog.math.Long.MIN_VALUE)) {
      return this.isOdd() ? goog.math.Long.MIN_VALUE : goog.math.Long.ZERO;
    }
  }
  if (this.isNegative()) {
    if (other.isNegative()) {
      return this.negate().multiply(other.negate());
    } else {
      return this.negate().multiply(other).negate();
    }
  } else {
    if (other.isNegative()) {
      return this.multiply(other.negate()).negate();
    }
  }
  if (this.lessThan(goog.math.Long.TWO_PWR_24_) && other.lessThan(goog.math.Long.TWO_PWR_24_)) {
    return goog.math.Long.fromNumber(this.toNumber() * other.toNumber());
  }
  var a48 = this.high_ >>> 16;
  var a32 = this.high_ & 65535;
  var a16 = this.low_ >>> 16;
  var a00 = this.low_ & 65535;
  var b48 = other.high_ >>> 16;
  var b32 = other.high_ & 65535;
  var b16 = other.low_ >>> 16;
  var b00 = other.low_ & 65535;
  var c48 = 0, c32 = 0, c16 = 0, c00 = 0;
  c00 += a00 * b00;
  c16 += c00 >>> 16;
  c00 &= 65535;
  c16 += a16 * b00;
  c32 += c16 >>> 16;
  c16 &= 65535;
  c16 += a00 * b16;
  c32 += c16 >>> 16;
  c16 &= 65535;
  c32 += a32 * b00;
  c48 += c32 >>> 16;
  c32 &= 65535;
  c32 += a16 * b16;
  c48 += c32 >>> 16;
  c32 &= 65535;
  c32 += a00 * b32;
  c48 += c32 >>> 16;
  c32 &= 65535;
  c48 += a48 * b00 + a32 * b16 + a16 * b32 + a00 * b48;
  c48 &= 65535;
  return goog.math.Long.fromBits(c16 << 16 | c00, c48 << 16 | c32);
};
goog.math.Long.prototype.div = function(other) {
  if (other.isZero()) {
    throw Error("division by zero");
  } else {
    if (this.isZero()) {
      return goog.math.Long.ZERO;
    }
  }
  if (this.equals(goog.math.Long.MIN_VALUE)) {
    if (other.equals(goog.math.Long.ONE) || other.equals(goog.math.Long.NEG_ONE)) {
      return goog.math.Long.MIN_VALUE;
    } else {
      if (other.equals(goog.math.Long.MIN_VALUE)) {
        return goog.math.Long.ONE;
      } else {
        var halfThis = this.shiftRight(1);
        var approx = halfThis.div(other).shiftLeft(1);
        if (approx.equals(goog.math.Long.ZERO)) {
          return other.isNegative() ? goog.math.Long.ONE : goog.math.Long.NEG_ONE;
        } else {
          var rem = this.subtract(other.multiply(approx));
          var result = approx.add(rem.div(other));
          return result;
        }
      }
    }
  } else {
    if (other.equals(goog.math.Long.MIN_VALUE)) {
      return goog.math.Long.ZERO;
    }
  }
  if (this.isNegative()) {
    if (other.isNegative()) {
      return this.negate().div(other.negate());
    } else {
      return this.negate().div(other).negate();
    }
  } else {
    if (other.isNegative()) {
      return this.div(other.negate()).negate();
    }
  }
  var res = goog.math.Long.ZERO;
  var rem = this;
  while (rem.greaterThanOrEqual(other)) {
    var approx = Math.max(1, Math.floor(rem.toNumber() / other.toNumber()));
    var log2 = Math.ceil(Math.log(approx) / Math.LN2);
    var delta = log2 <= 48 ? 1 : Math.pow(2, log2 - 48);
    var approxRes = goog.math.Long.fromNumber(approx);
    var approxRem = approxRes.multiply(other);
    while (approxRem.isNegative() || approxRem.greaterThan(rem)) {
      approx -= delta;
      approxRes = goog.math.Long.fromNumber(approx);
      approxRem = approxRes.multiply(other);
    }
    if (approxRes.isZero()) {
      approxRes = goog.math.Long.ONE;
    }
    res = res.add(approxRes);
    rem = rem.subtract(approxRem);
  }
  return res;
};
goog.math.Long.prototype.modulo = function(other) {
  return this.subtract(this.div(other).multiply(other));
};
goog.math.Long.prototype.not = function() {
  return goog.math.Long.fromBits(~this.low_, ~this.high_);
};
goog.math.Long.prototype.and = function(other) {
  return goog.math.Long.fromBits(this.low_ & other.low_, this.high_ & other.high_);
};
goog.math.Long.prototype.or = function(other) {
  return goog.math.Long.fromBits(this.low_ | other.low_, this.high_ | other.high_);
};
goog.math.Long.prototype.xor = function(other) {
  return goog.math.Long.fromBits(this.low_ ^ other.low_, this.high_ ^ other.high_);
};
goog.math.Long.prototype.shiftLeft = function(numBits) {
  numBits &= 63;
  if (numBits == 0) {
    return this;
  } else {
    var low = this.low_;
    if (numBits < 32) {
      var high = this.high_;
      return goog.math.Long.fromBits(low << numBits, high << numBits | low >>> 32 - numBits);
    } else {
      return goog.math.Long.fromBits(0, low << numBits - 32);
    }
  }
};
goog.math.Long.prototype.shiftRight = function(numBits) {
  numBits &= 63;
  if (numBits == 0) {
    return this;
  } else {
    var high = this.high_;
    if (numBits < 32) {
      var low = this.low_;
      return goog.math.Long.fromBits(low >>> numBits | high << 32 - numBits, high >> numBits);
    } else {
      return goog.math.Long.fromBits(high >> numBits - 32, high >= 0 ? 0 : -1);
    }
  }
};
goog.math.Long.prototype.shiftRightUnsigned = function(numBits) {
  numBits &= 63;
  if (numBits == 0) {
    return this;
  } else {
    var high = this.high_;
    if (numBits < 32) {
      var low = this.low_;
      return goog.math.Long.fromBits(low >>> numBits | high << 32 - numBits, high >>> numBits);
    } else {
      if (numBits == 32) {
        return goog.math.Long.fromBits(high, 0);
      } else {
        return goog.math.Long.fromBits(high >>> numBits - 32, 0);
      }
    }
  }
};
goog.provide("com.cognitect.transit.types");
goog.require("com.cognitect.transit.util");
goog.require("com.cognitect.transit.eq");
goog.require("goog.math.Long");
goog.scope(function() {
  var types = com.cognitect.transit.types, util = com.cognitect.transit.util, eq = com.cognitect.transit.eq, Long = goog.math.Long;
  types.TaggedValue = function(tag, rep) {
    this.tag = tag;
    this.rep = rep;
    this.hashCode = -1;
  };
  types.TaggedValue.prototype.toString = function() {
    return "[TaggedValue: " + this.tag + ", " + this.rep + "]";
  };
  types.TaggedValue.prototype.equiv = function(other) {
    return eq.equals(this, other);
  };
  types.TaggedValue.prototype["equiv"] = types.TaggedValue.prototype.equiv;
  types.TaggedValue.prototype.com$cognitect$transit$equals = function(other) {
    if (other instanceof types.TaggedValue) {
      return this.tag === other.tag && eq.equals(this.rep, other.rep);
    } else {
      return false;
    }
  };
  types.TaggedValue.prototype.com$cognitect$transit$hashCode = function() {
    if (this.hashCode === -1) {
      this.hashCode = eq.hashCombine(eq.hashCode(this.tag), eq.hashCode(this.rep));
    }
    return this.hashCode;
  };
  types.taggedValue = function(tag, rep) {
    return new types.TaggedValue(tag, rep);
  };
  types.isTaggedValue = function(x) {
    return x instanceof types.TaggedValue;
  };
  types.nullValue = function() {
    return null;
  };
  types.boolValue = function(s) {
    return s === "t";
  };
  types.MAX_INT = Long.fromString("9007199254740992");
  types.MIN_INT = Long.fromString("-9007199254740992");
  types.intValue = function(s) {
    if (typeof s === "number") {
      return s;
    } else {
      if (s instanceof Long) {
        return s;
      } else {
        var n = Long.fromString(s, 10);
        if (n.greaterThan(types.MAX_INT) || n.lessThan(types.MIN_INT)) {
          return n;
        } else {
          return n.toNumber();
        }
      }
    }
  };
  Long.prototype.equiv = function(other) {
    return eq.equals(this, other);
  };
  Long.prototype["equiv"] = Long.prototype.equiv;
  Long.prototype.com$cognitect$transit$equals = function(other) {
    return other instanceof Long && this.equals(other);
  };
  Long.prototype.com$cognitect$transit$hashCode = function() {
    return this.toInt();
  };
  types.isInteger = function(x) {
    if (x instanceof Long) {
      return true;
    } else {
      return typeof x === "number" && !isNaN(x) && !(x === Infinity) && parseFloat(x) === parseInt(x);
    }
  };
  types.floatValue = function(s) {
    return parseFloat(s);
  };
  types.bigInteger = function(s) {
    return types.taggedValue("n", s);
  };
  types.isBigInteger = function(x) {
    return x instanceof types.TaggedValue && x.tag === "n";
  };
  types.bigDecimalValue = function(s) {
    return types.taggedValue("f", s);
  };
  types.isBigDecimal = function(x) {
    return x instanceof types.TaggedValue && x.tag === "f";
  };
  types.charValue = function(s) {
    return s;
  };
  types.Keyword = function(name) {
    this.name = name;
    this.hashCode = -1;
  };
  types.Keyword.prototype.toString = function() {
    return ":" + this.name;
  };
  types.Keyword.prototype.equiv = function(other) {
    return eq.equals(this, other);
  };
  types.Keyword.prototype["equiv"] = types.Keyword.prototype.equiv;
  types.Keyword.prototype.com$cognitect$transit$equals = function(other) {
    return other instanceof types.Keyword && this.name == other.name;
  };
  types.Keyword.prototype.com$cognitect$transit$hashCode = function() {
    if (this.hashCode === -1) {
      this.hashCode = eq.hashCode(this.name);
    }
    return this.hashCode;
  };
  types.keyword = function(s) {
    return new types.Keyword(s);
  };
  types.isKeyword = function(x) {
    return x instanceof types.Keyword;
  };
  types.Symbol = function(name) {
    this.name = name;
    this.hashCode = -1;
  };
  types.Symbol.prototype.toString = function() {
    return "[Symbol: " + this.name + "]";
  };
  types.Symbol.prototype.equiv = function(other) {
    return eq.equals(this, other);
  };
  types.Symbol.prototype["equiv"] = types.Symbol.prototype.equiv;
  types.Symbol.prototype.com$cognitect$transit$equals = function(other) {
    return other instanceof types.Symbol && this.name == other.name;
  };
  types.Symbol.prototype.com$cognitect$transit$hashCode = function() {
    if (this.hashCode === -1) {
      this.hashCode = eq.hashCode(this.name);
    }
    return this.hashCode;
  };
  types.symbol = function(s) {
    return new types.Symbol(s);
  };
  types.isSymbol = function(x) {
    return x instanceof types.Symbol;
  };
  types.hexFor = function(aLong, sidx, eidx) {
    var ret = "", eidx = eidx || sidx + 1;
    for (var i = sidx, shift = (7 - i) * 8, mask = Long.fromInt(255).shiftLeft(shift);i < eidx;i++, shift -= 8, mask = mask.shiftRightUnsigned(8)) {
      var s = aLong.and(mask).shiftRightUnsigned(shift).toString(16);
      if (s.length == 1) {
        s = "0" + s;
      }
      ret += s;
    }
    return ret;
  };
  types.UUID = function(high, low) {
    this.high = high;
    this.low = low;
    this.hashCode = -1;
  };
  types.UUID.prototype.getLeastSignificantBits = function() {
    return this.low;
  };
  types.UUID.prototype.getMostSignificantBits = function() {
    return this.high;
  };
  types.UUID.prototype.toString = function(s) {
    var s = "", hi64 = this.high, lo64 = this.low;
    s += types.hexFor(hi64, 0, 4) + "-";
    s += types.hexFor(hi64, 4, 6) + "-";
    s += types.hexFor(hi64, 6, 8) + "-";
    s += types.hexFor(lo64, 0, 2) + "-";
    s += types.hexFor(lo64, 2, 8);
    return s;
  };
  types.UUID.prototype.equiv = function(other) {
    return eq.equals(this, other);
  };
  types.UUID.prototype["equiv"] = types.UUID.prototype.equiv;
  types.UUID.prototype.com$cognitect$transit$equals = function(other) {
    return other instanceof types.UUID && this.high.equals(other.high) && this.low.equals(other.low);
  };
  types.UUID.prototype.com$cognitect$transit$hashCode = function() {
    if (this.hashCode === -1) {
      this.hashCode = eq.hashCode(this.toString());
    }
    return this.hashCode;
  };
  types.UUIDfromString = function uuidFromString(s) {
    var s = s.replace(/-/g, ""), hi64 = null, lo64 = null, hi32 = 0, lo32 = 0, off = 24, i = 0;
    for (hi32 = 0, i = 0, off = 24;i < 8;i += 2, off -= 8) {
      hi32 |= parseInt(s.substring(i, i + 2), 16) << off;
    }
    for (lo32 = 0, i = 8, off = 24;i < 16;i += 2, off -= 8) {
      lo32 |= parseInt(s.substring(i, i + 2), 16) << off;
    }
    hi64 = Long.fromBits(lo32, hi32);
    for (hi32 = 0, i = 16, off = 24;i < 24;i += 2, off -= 8) {
      hi32 |= parseInt(s.substring(i, i + 2), 16) << off;
    }
    for (lo32 = 0, i = 24, off = 24;i < 32;i += 2, off -= 8) {
      lo32 |= parseInt(s.substring(i, i + 2), 16) << off;
    }
    lo64 = Long.fromBits(lo32, hi32);
    return new types.UUID(hi64, lo64);
  };
  types.uuid = function(s) {
    return types.UUIDfromString(s);
  };
  types.isUUID = function(x) {
    return x instanceof types.UUID;
  };
  types.date = function(s) {
    s = typeof s === "number" ? s : parseInt(s, 10);
    return new Date(s);
  };
  types.verboseDate = function(s) {
    return new Date(s);
  };
  Date.prototype.com$cognitect$transit$equals = function(other) {
    if (other instanceof Date) {
      return this.valueOf() === other.valueOf();
    } else {
      return false;
    }
  };
  Date.prototype.com$cognitect$transit$hashCode = function() {
    return this.valueOf();
  };
  types.binary = function(str, decoder) {
    if ((!decoder || decoder.preferBuffers !== false) && typeof Buffer != "undefined") {
      return new Buffer(str, "base64");
    } else {
      if (typeof Uint8Array != "undefined") {
        return util.Base64ToUint8(str);
      } else {
        return types.taggedValue("b", str);
      }
    }
  };
  types.isBinary = function(x) {
    if (typeof Buffer != "undefined" && x instanceof Buffer) {
      return true;
    } else {
      if (typeof Uint8Array != "undefined" && x instanceof Uint8Array) {
        return true;
      } else {
        return x instanceof types.TaggedValue && x.tag === "b";
      }
    }
  };
  types.uri = function(s) {
    return types.taggedValue("r", s);
  };
  types.isURI = function(x) {
    return x instanceof types.TaggedValue && x.tag === "r";
  };
  types.KEYS = 0;
  types.VALUES = 1;
  types.ENTRIES = 2;
  types.TransitArrayMapIterator = function(entries, type) {
    this.entries = entries;
    this.type = type || types.KEYS;
    this.idx = 0;
  };
  types.TransitArrayMapIterator.prototype.next = function(map, type) {
    if (this.idx < this.entries.length) {
      var value = null;
      if (this.type === types.KEYS) {
        value = this.entries[this.idx];
      } else {
        if (this.type === types.VALUES) {
          value = this.entries[this.idx + 1];
        } else {
          value = [this.entries[this.idx], this.entries[this.idx + 1]];
        }
      }
      var ret = {"value":value, "done":false};
      this.idx += 2;
      return ret;
    } else {
      return{"value":null, "done":true};
    }
  };
  types.TransitArrayMapIterator.prototype["next"] = types.TransitArrayMapIterator.prototype.next;
  types.TransitMapIterator = function(map, type) {
    this.map = map;
    this.type = type || types.KEYS;
    this.keys = this.map.getKeys();
    this.idx = 0;
    this.bucket = null;
    this.bucketIdx = 0;
  };
  types.TransitMapIterator.prototype.next = function() {
    if (this.idx < this.map.size) {
      if (this.bucket == null || !(this.bucketIdx < this.bucket.length)) {
        this.bucket = this.map.map[this.keys[this.idx]];
        this.bucketIdx = 0;
      }
      var value = null;
      if (this.type === types.KEYS) {
        value = this.bucket[this.bucketIdx];
      } else {
        if (this.type === types.VALUES) {
          value = this.bucket[this.bucketIdx + 1];
        } else {
          value = [this.bucket[this.bucketIdx], this.bucket[this.bucketIdx + 1]];
        }
      }
      var ret = {"value":value, "done":false};
      this.idx++;
      this.bucketIdx += 2;
      return ret;
    } else {
      return{"value":null, "done":true};
    }
  };
  types.TransitMapIterator.prototype["next"] = types.TransitMapIterator.prototype.next;
  types.mapEquals = function(me, you) {
    if ((you instanceof types.TransitMap || you instanceof types.TransitArrayMap) && me.size === you.size) {
      for (var code in me.map) {
        var bucket = me.map[code];
        for (var j = 0;j < bucket.length;j += 2) {
          if (!eq.equals(bucket[j + 1], you.get(bucket[j]))) {
            return false;
          }
        }
      }
      return true;
    } else {
      if (you != null && typeof you === "object") {
        var ks = util.objectKeys(you), kslen = ks.length;
        if (me.size === kslen) {
          for (var i = 0;i < kslen;i++) {
            var k = ks[i];
            if (!me.has(k) || !eq.equals(you[k], me.get(k))) {
              return false;
            }
          }
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }
  };
  types.SMALL_ARRAY_MAP_THRESHOLD = 8;
  types.ARRAY_MAP_THRESHOLD = 32;
  types.ARRAY_MAP_ACCESS_THRESHOLD = 32;
  types.TransitArrayMap = function(entries) {
    this._entries = entries;
    this.backingMap = null;
    this.hashCode = -1;
    this.size = entries.length / 2;
    this.accesses = 0;
  };
  types.TransitArrayMap.prototype.toString = function() {
    return "[TransitArrayMap]";
  };
  types.TransitArrayMap.prototype.convert = function() {
    if (this.backingMap) {
      throw Error("Invalid operation, already converted");
    }
    if (this.size < types.SMALL_ARRAY_MAP_THRESHOLD) {
      return false;
    }
    this.accesses++;
    if (this.accesses > types.ARRAY_MAP_ACCESS_THRESHOLD) {
      this.backingMap = types.map(this._entries, false, true);
      this._entries = [];
      return true;
    } else {
      return false;
    }
  };
  types.TransitArrayMap.prototype.clear = function() {
    this.hashCode = -1;
    if (this.backingMap) {
      this.backingMap.clear();
      this.size = 0;
    } else {
      this._entries = [];
      this.size = 0;
    }
  };
  types.TransitArrayMap.prototype["clear"] = types.TransitArrayMap.prototype.clear;
  types.TransitArrayMap.prototype.keys = function() {
    if (this.backingMap) {
      return this.backingMap.keys();
    } else {
      return new types.TransitArrayMapIterator(this._entries, types.KEYS);
    }
  };
  types.TransitArrayMap.prototype["keys"] = types.TransitArrayMap.prototype.keys;
  types.TransitArrayMap.prototype.keySet = function() {
    if (this.backingMap) {
      return this.backingMap.keySet();
    } else {
      var ret = [];
      for (var i = 0, j = 0;j < this._entries.length;i++, j += 2) {
        ret[i] = this._entries[j];
      }
      return ret;
    }
  };
  types.TransitArrayMap.prototype["keySet"] = types.TransitArrayMap.prototype.keySet;
  types.TransitArrayMap.prototype.entries = function() {
    if (this.backingMap) {
      return this.backingMap.entries();
    } else {
      return new types.TransitArrayMapIterator(this._entries, types.ENTRIES);
    }
  };
  types.TransitArrayMap.prototype["entries"] = types.TransitArrayMap.prototype.entries;
  types.TransitArrayMap.prototype.values = function() {
    if (this.backingMap) {
      return this.backingMap.values();
    } else {
      return new types.TransitArrayMapIterator(this._entries, types.VALUES);
    }
  };
  types.TransitArrayMap.prototype["values"] = types.TransitArrayMap.prototype.values;
  types.TransitArrayMap.prototype.forEach = function(f) {
    if (this.backingMap) {
      this.backingMap.forEach(f);
    } else {
      for (var i = 0;i < this._entries.length;i += 2) {
        f(this._entries[i + 1], this._entries[i]);
      }
    }
  };
  types.TransitArrayMap.prototype["forEach"] = types.TransitArrayMap.prototype.forEach;
  types.TransitArrayMap.prototype.get = function(k, notFound) {
    if (this.backingMap) {
      return this.backingMap.get(k);
    } else {
      if (this.convert()) {
        return this.get(k);
      } else {
        for (var i = 0;i < this._entries.length;i += 2) {
          if (eq.equals(this._entries[i], k)) {
            return this._entries[i + 1];
          }
        }
        return notFound;
      }
    }
  };
  types.TransitArrayMap.prototype["get"] = types.TransitArrayMap.prototype.get;
  types.TransitArrayMap.prototype.has = function(k) {
    if (this.backingMap) {
      return this.backingMap.has(k);
    } else {
      if (this.convert()) {
        return this.has(k);
      } else {
        for (var i = 0;i < this._entries.length;i += 2) {
          if (eq.equals(this._entries[i], k)) {
            return true;
          }
        }
        return false;
      }
    }
  };
  types.TransitArrayMap.prototype["has"] = types.TransitArrayMap.prototype.has;
  types.TransitArrayMap.prototype.set = function(k, v) {
    this.hashCode = -1;
    if (this.backingMap) {
      this.backingMap.set(k, v);
      this.size = this.backingMap.size;
    } else {
      for (var i = 0;i < this._entries.length;i += 2) {
        if (eq.equals(this._entries[i], k)) {
          this._entries[i + 1] = v;
          return;
        }
      }
      this._entries.push(k);
      this._entries.push(v);
      this.size++;
      if (this.size > types.ARRAY_MAP_THRESHOLD) {
        this.backingMap = types.map(this._entries, false, true);
        this._entries = null;
      }
    }
  };
  types.TransitArrayMap.prototype["set"] = types.TransitArrayMap.prototype.set;
  types.TransitArrayMap.prototype["delete"] = function(k) {
    this.hashCode = -1;
    if (this.backingMap) {
      this.backingMap["delete"](k);
      this.size = this.backingMap.size;
    } else {
      for (var i = 0;i < this._entries.length;i += 2) {
        if (eq.equals(this._entries[i], k)) {
          this._entries.splice(i, 2);
          this.size--;
          return;
        }
      }
    }
  };
  types.TransitArrayMap.prototype.com$cognitect$transit$hashCode = function() {
    if (this.backingMap) {
      return this.backingMap.com$cognitect$transit$hashCode();
    } else {
      if (this.hashCode === -1) {
        this.hashCode = eq.hashMapLike(this);
      }
      return this.hashCode;
    }
  };
  types.TransitArrayMap.prototype.com$cognitect$transit$equals = function(other) {
    if (this.backingMap) {
      return types.mapEquals(this.backingMap, other);
    } else {
      return types.mapEquals(this, other);
    }
  };
  types.TransitMap = function(keys, map, size) {
    this.map = map || {};
    this._keys = keys || [];
    this.size = size || 0;
    this.hashCode = -1;
  };
  types.TransitMap.prototype.toString = function() {
    return "[TransitMap]";
  };
  types.TransitMap.prototype.clear = function() {
    this.hashCode = -1;
    this.map = {};
    this._keys = [];
    this.size = 0;
  };
  types.TransitMap.prototype["clear"] = types.TransitMap.prototype.clear;
  types.TransitMap.prototype.getKeys = function() {
    if (this._keys != null) {
      return this._keys;
    } else {
      return util.objectKeys(this.map);
    }
  };
  types.TransitMap.prototype["delete"] = function(k) {
    this.hashCode = -1;
    this._keys = null;
    var code = eq.hashCode(k), bucket = this.map[code];
    for (var i = 0;i < bucket.length;i += 2) {
      if (eq.equals(k, bucket[i])) {
        bucket.splice(i, 2);
        if (bucket.length === 0) {
          delete this.map[code];
        }
        this.size--;
        break;
      }
    }
  };
  types.TransitMap.prototype.entries = function() {
    return new types.TransitMapIterator(this, types.ENTRIES);
  };
  types.TransitMap.prototype["entries"] = types.TransitMap.prototype.entries;
  types.TransitMap.prototype.forEach = function(callback) {
    var ks = this.getKeys();
    for (var i = 0;i < ks.length;i++) {
      var bucket = this.map[ks[i]];
      for (var j = 0;j < bucket.length;j += 2) {
        callback(bucket[j + 1], bucket[j], this);
      }
    }
  };
  types.TransitMap.prototype["forEach"] = types.TransitMap.prototype.forEach;
  types.TransitMap.prototype.get = function(k, notFound) {
    var code = eq.hashCode(k), bucket = this.map[code];
    if (bucket != null) {
      for (var i = 0;i < bucket.length;i += 2) {
        if (eq.equals(k, bucket[i])) {
          return bucket[i + 1];
        }
      }
    } else {
      return notFound;
    }
  };
  types.TransitMap.prototype["get"] = types.TransitMap.prototype.get;
  types.TransitMap.prototype.has = function(k) {
    var code = eq.hashCode(k), bucket = this.map[code];
    if (bucket != null) {
      for (var i = 0;i < bucket.length;i += 2) {
        if (eq.equals(k, bucket[i])) {
          return true;
        }
      }
      return false;
    } else {
      return false;
    }
  };
  types.TransitMap.prototype["has"] = types.TransitMap.prototype.has;
  types.TransitMap.prototype.keys = function() {
    return new types.TransitMapIterator(this, types.KEYS);
  };
  types.TransitMap.prototype["keys"] = types.TransitMap.prototype.keys;
  types.TransitMap.prototype.keySet = function() {
    var keys = this.getKeys(), ret = [];
    for (var i = 0;i < keys.length;i++) {
      var bucket = this.map[keys[i]];
      for (var j = 0;j < bucket.length;j += 2) {
        ret.push(bucket[j]);
      }
    }
    return ret;
  };
  types.TransitMap.prototype["keySet"] = types.TransitMap.prototype.keySet;
  types.TransitMap.prototype.set = function(k, v) {
    this.hashCode = -1;
    var code = eq.hashCode(k), bucket = this.map[code];
    if (bucket == null) {
      if (this._keys) {
        this._keys.push(code);
      }
      this.map[code] = [k, v];
      this.size++;
    } else {
      var newEntry = true;
      for (var i = 0;i < bucket.length;i += 2) {
        if (eq.equals(v, bucket[i])) {
          newEntry = false;
          bucket[i] = v;
          break;
        }
      }
      if (newEntry) {
        bucket.push(k);
        bucket.push(v);
        this.size++;
      }
    }
  };
  types.TransitMap.prototype["set"] = types.TransitMap.prototype.set;
  types.TransitMap.prototype.values = function() {
    return new types.TransitMapIterator(this, types.VALUES);
  };
  types.TransitMap.prototype["values"] = types.TransitMap.prototype.values;
  types.TransitMap.prototype.com$cognitect$transit$hashCode = function() {
    if (this.hashCode === -1) {
      this.hashCode = eq.hashMapLike(this);
    }
    return this.hashCode;
  };
  types.TransitMap.prototype.com$cognitect$transit$equals = function(other) {
    return types.mapEquals(this, other);
  };
  types.map = function(arr, checkDups, hashMap) {
    arr = arr || [];
    checkDups = checkDups === false ? checkDups : true;
    hashMap = hashMap === true ? hashMap : false;
    if (!hashMap && arr.length <= types.ARRAY_MAP_THRESHOLD * 2) {
      if (checkDups) {
        var t = arr;
        arr = [];
        for (var i = 0;i < t.length;i += 2) {
          var seen = false;
          for (var j = 0;j < arr.length;j += 2) {
            if (eq.equals(arr[j], t[i])) {
              arr[j + 1] = t[i + 1];
              seen = true;
              break;
            }
          }
          if (!seen) {
            arr.push(t[i]);
            arr.push(t[i + 1]);
          }
        }
      }
      return new types.TransitArrayMap(arr);
    } else {
      var map = {}, keys = [], size = 0;
      for (var i = 0;i < arr.length;i += 2) {
        var code = eq.hashCode(arr[i]), bucket = map[code];
        if (bucket == null) {
          keys.push(code);
          map[code] = [arr[i], arr[i + 1]];
          size++;
        } else {
          var newEntry = true;
          for (var j = 0;j < bucket.length;j += 2) {
            if (eq.equals(bucket[j], arr[i])) {
              bucket[j + 1] = arr[i + 1];
              newEntry = false;
              break;
            }
          }
          if (newEntry) {
            bucket.push(arr[i]);
            bucket.push(arr[i + 1]);
            size++;
          }
        }
      }
      return new types.TransitMap(keys, map, size);
    }
  };
  types.isArrayMap = function(x) {
    return x instanceof types.TransitArrayMap;
  };
  types.isMap = function(x) {
    return x instanceof types.TransitArrayMap || x instanceof types.TransitMap;
  };
  types.TransitSet = function(map) {
    this.map = map;
    this.size = map.size;
  };
  types.TransitSet.prototype.toString = function() {
    return "[TransitSet]";
  };
  types.TransitSet.prototype.add = function(value) {
    this.map.set(value, value);
    this.size = this.map.size;
  };
  types.TransitSet.prototype["add"] = types.TransitSet.prototype.add;
  types.TransitSet.prototype.clear = function() {
    this.map = new types.TransitMap;
    this.size = 0;
  };
  types.TransitSet.prototype["clear"] = types.TransitSet.prototype.clear;
  types.TransitSet.prototype["delete"] = function(value) {
    this.map["delete"](value);
    this.size = this.map.size;
  };
  types.TransitSet.prototype.entries = function() {
    return this.map.entries();
  };
  types.TransitSet.prototype["entries"] = types.TransitSet.prototype.entries;
  types.TransitSet.prototype.forEach = function(iterator, thisArg) {
    var self = this;
    this.map.forEach(function(v, k, m) {
      iterator(k, self);
    });
  };
  types.TransitSet.prototype["forEach"] = types.TransitSet.prototype.forEach;
  types.TransitSet.prototype.has = function(value) {
    return this.map.has(value);
  };
  types.TransitSet.prototype["has"] = types.TransitSet.prototype.has;
  types.TransitSet.prototype.keys = function() {
    return this.map.keys();
  };
  types.TransitSet.prototype["keys"] = types.TransitSet.prototype.keys;
  types.TransitSet.prototype.keySet = function() {
    return this.map.keySet();
  };
  types.TransitSet.prototype["keySet"] = types.TransitSet.prototype.keySet;
  types.TransitSet.prototype.values = function() {
    return this.map.values();
  };
  types.TransitSet.prototype["values"] = types.TransitSet.prototype.values;
  types.TransitSet.prototype.com$cognitect$transit$equals = function(other) {
    if (other instanceof types.TransitSet) {
      if (this.size === other.size) {
        return eq.equals(this.map, other.map);
      }
    } else {
      return false;
    }
  };
  types.TransitSet.prototype.com$cognitect$transit$hashCode = function(other) {
    return eq.hashCode(this.map);
  };
  types.set = function(arr) {
    arr = arr || [];
    var map = {}, keys = [], size = 0;
    for (var i = 0;i < arr.length;i++) {
      var code = eq.hashCode(arr[i]), vals = map[code];
      if (vals == null) {
        keys.push(code);
        map[code] = [arr[i], arr[i]];
        size++;
      } else {
        var newEntry = true;
        for (var j = 0;j < vals.length;j += 2) {
          if (eq.equals(vals[j], arr[i])) {
            newEntry = false;
            break;
          }
        }
        if (newEntry) {
          vals.push(arr[i]);
          vals.push(arr[i]);
          size++;
        }
      }
    }
    return new types.TransitSet(new types.TransitMap(keys, map, size));
  };
  types.isSet = function(x) {
    return x instanceof types.TransitSet;
  };
  types.quoted = function(obj) {
    return types.taggedValue("'", obj);
  };
  types.isQuoted = function(x) {
    return x instanceof types.TaggedValue && x.tag === "'";
  };
  types.list = function(xs) {
    return types.taggedValue("list", xs);
  };
  types.isList = function(x) {
    return x instanceof types.List && x.tag === "list";
  };
  types.link = function(rep) {
    return types.taggedValue("link", rep);
  };
  types.isLink = function(x) {
    return x instanceof types.TaggedValue && x.tag === "link";
  };
  types.specialDouble = function(v) {
    switch(v) {
      case "-INF":
        return-Infinity;
      case "INF":
        return Infinity;
      case "NaN":
        return NaN;
      default:
        throw new Error("Invalid special double value " + v);break;
    }
  };
});
goog.provide("com.cognitect.transit.delimiters");
goog.scope(function() {
  var delimiters = com.cognitect.transit.delimiters;
  delimiters.ESC = "~";
  delimiters.TAG = "#";
  delimiters.SUB = "^";
  delimiters.RES = "`";
  delimiters.ESC_TAG = "~#";
});
goog.provide("com.cognitect.transit.caching");
goog.require("com.cognitect.transit.delimiters");
goog.scope(function() {
  var caching = com.cognitect.transit.caching, d = com.cognitect.transit.delimiters;
  caching.MIN_SIZE_CACHEABLE = 3;
  caching.BASE_CHAR_IDX = 48;
  caching.CACHE_CODE_DIGITS = 44;
  caching.MAX_CACHE_ENTRIES = caching.CACHE_CODE_DIGITS * caching.CACHE_CODE_DIGITS;
  caching.MAX_CACHE_SIZE = 4096;
  caching.isCacheable = function(string, asMapKey) {
    if (string.length > caching.MIN_SIZE_CACHEABLE) {
      if (asMapKey) {
        return true;
      } else {
        var c0 = string.charAt(0), c1 = string.charAt(1);
        if (c0 === d.ESC) {
          return c1 === ":" || c1 === "$" || c1 === "#";
        } else {
          return false;
        }
      }
    } else {
      return false;
    }
  };
  caching.idxToCode = function(idx) {
    var hi = Math.floor(idx / caching.CACHE_CODE_DIGITS), lo = idx % caching.CACHE_CODE_DIGITS, loc = String.fromCharCode(lo + caching.BASE_CHAR_IDX);
    if (hi === 0) {
      return d.SUB + loc;
    } else {
      return d.SUB + String.fromCharCode(hi + caching.BASE_CHAR_IDX) + loc;
    }
  };
  caching.WriteCache = function() {
    this.idx = 0;
    this.gen = 0;
    this.cacheSize = 0;
    this.cache = {};
  };
  caching.WriteCache.prototype.write = function(string, asMapKey) {
    if (caching.isCacheable(string, asMapKey)) {
      if (this.cacheSize === caching.MAX_CACHE_SIZE) {
        this.clear();
        this.gen = 0;
        this.cache = {};
      } else {
        if (this.idx === caching.MAX_CACHE_ENTRIES) {
          this.clear();
        }
      }
      var entry = this.cache[string];
      if (entry == null) {
        this.cache[string] = [caching.idxToCode(this.idx), this.gen];
        this.idx++;
        return string;
      } else {
        if (entry[1] != this.gen) {
          entry[1] = this.gen;
          entry[0] = caching.idxToCode(this.idx);
          this.idx++;
          return string;
        } else {
          return entry[0];
        }
      }
    } else {
      return string;
    }
  };
  caching.WriteCache.prototype.clear = function() {
    this.idx = 0;
    this.gen++;
  };
  caching.writeCache = function() {
    return new caching.WriteCache;
  };
  caching.isCacheCode = function(string) {
    return string.charAt(0) === d.SUB && string.charAt(1) !== " ";
  };
  caching.codeToIdx = function(code) {
    if (code.length === 2) {
      return code.charCodeAt(1) - caching.BASE_CHAR_IDX;
    } else {
      var hi = (code.charCodeAt(1) - caching.BASE_CHAR_IDX) * caching.CACHE_CODE_DIGITS, lo = code.charCodeAt(2) - caching.BASE_CHAR_IDX;
      return hi + lo;
    }
  };
  caching.ReadCache = function() {
    this.idx = 0;
    this.cache = [];
  };
  caching.ReadCache.prototype.write = function(obj, asMapKey) {
    if (this.idx == caching.MAX_CACHE_ENTRIES) {
      this.idx = 0;
    }
    this.cache[this.idx] = obj;
    this.idx++;
    return obj;
  };
  caching.ReadCache.prototype.read = function(string, asMapKey) {
    return this.cache[caching.codeToIdx(string)];
  };
  caching.ReadCache.prototype.clear = function() {
    this.idx = 0;
  };
  caching.readCache = function() {
    return new caching.ReadCache;
  };
});
goog.provide("com.cognitect.transit.impl.decoder");
goog.require("com.cognitect.transit.util");
goog.require("com.cognitect.transit.delimiters");
goog.require("com.cognitect.transit.caching");
goog.require("com.cognitect.transit.types");
goog.scope(function() {
  var decoder = com.cognitect.transit.impl.decoder, util = com.cognitect.transit.util, d = com.cognitect.transit.delimiters, caching = com.cognitect.transit.caching, types = com.cognitect.transit.types;
  decoder.Tag = function(s) {
    this.str = s;
  };
  decoder.tag = function(s) {
    return new decoder.Tag(s);
  };
  decoder.isTag = function(x) {
    return x && x instanceof decoder.Tag;
  };
  decoder.isGroundHandler = function(handler) {
    switch(handler) {
      case "_":
      ;
      case "s":
      ;
      case "?":
      ;
      case "i":
      ;
      case "d":
      ;
      case "b":
      ;
      case "'":
      ;
      case "array":
      ;
      case "map":
        return true;
    }
    return false;
  };
  decoder.Decoder = function(options) {
    this.options = options || {};
    this.handlers = {};
    for (var h in this.defaults.handlers) {
      this.handlers[h] = this.defaults.handlers[h];
    }
    for (var h in this.options["handlers"]) {
      if (decoder.isGroundHandler(h)) {
        throw new Error('Cannot override handler for ground type "' + h + '"');
      }
      this.handlers[h] = this.options["handlers"][h];
    }
    this.preferStrings = this.options["preferStrings"] != null ? this.options["preferStrings"] : this.defaults.preferStrings;
    this.preferBuffers = this.options["preferBuffers"] != null ? this.options["preferBuffers"] : this.defaults.preferBuffers;
    this.defaultHandler = this.options["defaultHandler"] || this.defaults.defaultHandler;
    this.mapBuilder = this.options["mapBuilder"];
    this.arrayBuilder = this.options["arrayBuilder"];
  };
  decoder.Decoder.prototype.defaults = {handlers:{"_":function(v, d) {
    return types.nullValue();
  }, "?":function(v, d) {
    return types.boolValue(v);
  }, "b":function(v, d) {
    return types.binary(v, d);
  }, "i":function(v, d) {
    return types.intValue(v);
  }, "n":function(v, d) {
    return types.bigInteger(v);
  }, "d":function(v, d) {
    return types.floatValue(v);
  }, "f":function(v, d) {
    return types.bigDecimalValue(v);
  }, "c":function(v, d) {
    return types.charValue(v);
  }, ":":function(v, d) {
    return types.keyword(v);
  }, "$":function(v, d) {
    return types.symbol(v);
  }, "r":function(v, d) {
    return types.uri(v);
  }, "z":function(v, d) {
    return types.specialDouble(v);
  }, "'":function(v, d) {
    return v;
  }, "m":function(v, d) {
    return types.date(v);
  }, "t":function(v, d) {
    return types.verboseDate(v);
  }, "u":function(v, d) {
    return types.uuid(v);
  }, "set":function(v, d) {
    return types.set(v);
  }, "list":function(v, d) {
    return types.list(v);
  }, "link":function(v, d) {
    return types.link(v);
  }, "cmap":function(v, d) {
    return types.map(v, false);
  }}, defaultHandler:function(c, val) {
    return types.taggedValue(c, val);
  }, preferStrings:true, preferBuffers:true};
  decoder.Decoder.prototype.decode = function(node, cache, asMapKey, tagValue) {
    if (node == null) {
      return null;
    }
    var t = typeof node;
    switch(t) {
      case "string":
        return this.decodeString(node, cache, asMapKey, tagValue);
        break;
      case "object":
        if (util.isArray(node)) {
          if (node[0] === "^ ") {
            return this.decodeArrayHash(node, cache, asMapKey, tagValue);
          } else {
            return this.decodeArray(node, cache, asMapKey, tagValue);
          }
        } else {
          return this.decodeHash(node, cache, asMapKey, tagValue);
        }
        break;
    }
    return node;
  };
  decoder.Decoder.prototype["decode"] = decoder.Decoder.prototype.decode;
  decoder.Decoder.prototype.decodeString = function(string, cache, asMapKey, tagValue) {
    if (caching.isCacheable(string, asMapKey)) {
      var val = this.parseString(string, cache, false);
      if (cache) {
        cache.write(val, asMapKey);
      }
      return val;
    } else {
      if (caching.isCacheCode(string)) {
        return cache.read(string, asMapKey);
      } else {
        return this.parseString(string, cache, asMapKey);
      }
    }
  };
  decoder.Decoder.prototype.decodeHash = function(hash, cache, asMapKey, tagValue) {
    var ks = util.objectKeys(hash), key = ks[0], tag = ks.length == 1 ? this.decode(key, cache, false, false) : null;
    if (decoder.isTag(tag)) {
      var val = hash[key], handler = this.handlers[tag.str];
      if (handler != null) {
        return handler(this.decode(val, cache, false, true), this);
      } else {
        return types.taggedValue(tag.str, this.decode(val, cache, false, false));
      }
    } else {
      if (this.mapBuilder) {
        if (ks.length < types.SMALL_ARRAY_MAP_THRESHOLD * 2 && this.mapBuilder.fromArray) {
          var nodep = [];
          for (var i = 0;i < ks.length;i++) {
            var strKey = ks[i];
            nodep.push(this.decode(strKey, cache, true, false));
            nodep.push(this.decode(hash[strKey], cache, false, false));
          }
          return this.mapBuilder.fromArray(nodep, hash);
        } else {
          var ret = this.mapBuilder.init(hash);
          for (var i = 0;i < ks.length;i++) {
            var strKey = ks[i];
            ret = this.mapBuilder.add(ret, this.decode(strKey, cache, true, false), this.decode(hash[strKey], cache, false, false), hash);
          }
          return this.mapBuilder.finalize(ret, hash);
        }
      } else {
        var nodep = [];
        for (var i = 0;i < ks.length;i++) {
          var strKey = ks[i];
          nodep.push(this.decode(strKey, cache, true, false));
          nodep.push(this.decode(hash[strKey], cache, false, false));
        }
        return types.map(nodep, false);
      }
    }
  };
  decoder.Decoder.prototype.decodeArrayHash = function(node, cache, asMapKey, tagValue) {
    if (this.mapBuilder) {
      if (node.length < types.SMALL_ARRAY_MAP_THRESHOLD * 2 + 1 && this.mapBuilder.fromArray) {
        var nodep = [];
        for (var i = 1;i < node.length;i += 2) {
          nodep.push(this.decode(node[i], cache, true, false));
          nodep.push(this.decode(node[i + 1], cache, false, false));
        }
        return this.mapBuilder.fromArray(nodep, node);
      } else {
        var ret = this.mapBuilder.init(node);
        for (var i = 1;i < node.length;i += 2) {
          ret = this.mapBuilder.add(ret, this.decode(node[i], cache, true, false), this.decode(node[i + 1], cache, false, false), node);
        }
        return this.mapBuilder.finalize(ret, node);
      }
    } else {
      var nodep = [];
      for (var i = 1;i < node.length;i += 2) {
        nodep.push(this.decode(node[i], cache, true, false));
        nodep.push(this.decode(node[i + 1], cache, false, false));
      }
      return types.map(nodep, false);
    }
  };
  decoder.Decoder.prototype.decodeArray = function(node, cache, asMapKey, tagValue) {
    if (tagValue) {
      var ret = [];
      for (var i = 0;i < node.length;i++) {
        ret.push(this.decode(node[i], cache, asMapKey, false));
      }
      return ret;
    } else {
      var cacheIdx = cache && cache.idx;
      if (node.length === 2 && typeof node[0] === "string") {
        var tag = this.decode(node[0], cache, false, false);
        if (decoder.isTag(tag)) {
          var val = node[1], handler = this.handlers[tag.str];
          if (handler != null) {
            var ret = handler(this.decode(val, cache, asMapKey, true), this);
            return ret;
          } else {
            return types.taggedValue(tag.str, this.decode(val, cache, asMapKey, false));
          }
        }
      }
      if (cache && cacheIdx != cache.idx) {
        cache.idx = cacheIdx;
      }
      if (this.arrayBuilder) {
        if (node.length <= 32 && this.arrayBuilder.fromArray) {
          var arr = [];
          for (var i = 0;i < node.length;i++) {
            arr.push(this.decode(node[i], cache, asMapKey, false));
          }
          return this.arrayBuilder.fromArray(arr, node);
        } else {
          var ret = this.arrayBuilder.init();
          for (var i = 0;i < node.length;i++) {
            ret = this.arrayBuilder.add(ret, this.decode(node[i], cache, asMapKey, false), node);
          }
          return this.arrayBuilder.finalize(ret, node);
        }
      } else {
        var ret = [];
        for (var i = 0;i < node.length;i++) {
          ret.push(this.decode(node[i], cache, asMapKey, false));
        }
        return ret;
      }
    }
  };
  decoder.Decoder.prototype.parseString = function(string, cache, asMapKey) {
    if (string.charAt(0) === d.ESC) {
      var c = string.charAt(1);
      if (c === d.ESC || c === d.SUB || c === d.RES) {
        return string.substring(1);
      } else {
        if (c === d.TAG) {
          return decoder.tag(string.substring(2));
        } else {
          var handler = this.handlers[c];
          if (handler == null) {
            return this.defaultHandler(c, string.substring(2));
          } else {
            return handler(string.substring(2), this);
          }
        }
      }
    } else {
      return string;
    }
  };
  decoder.decoder = function(options) {
    return new decoder.Decoder(options);
  };
});
goog.provide("com.cognitect.transit.impl.reader");
goog.require("com.cognitect.transit.impl.decoder");
goog.require("com.cognitect.transit.caching");
goog.scope(function() {
  var reader = com.cognitect.transit.impl.reader, decoder = com.cognitect.transit.impl.decoder, caching = com.cognitect.transit.caching;
  reader.JSONUnmarshaller = function(opts) {
    this.decoder = new decoder.Decoder(opts);
  };
  reader.JSONUnmarshaller.prototype.unmarshal = function(str, cache) {
    return this.decoder.decode(JSON.parse(str), cache);
  };
  reader.Reader = function(unmarshaller, options) {
    this.unmarshaller = unmarshaller;
    this.options = options || {};
    this.cache = this.options["cache"] ? this.options["cache"] : new caching.ReadCache;
  };
  reader.Reader.prototype.read = function(str) {
    var ret = this.unmarshaller.unmarshal(str, this.cache);
    this.cache.clear();
    return ret;
  };
  reader.Reader.prototype["read"] = reader.Reader.prototype.read;
});
goog.provide("com.cognitect.transit.handlers");
goog.require("com.cognitect.transit.util");
goog.require("com.cognitect.transit.types");
goog.require("goog.math.Long");
goog.scope(function() {
  var handlers = com.cognitect.transit.handlers, util = com.cognitect.transit.util, types = com.cognitect.transit.types, Long = goog.math.Long;
  handlers.ctorGuid = 0;
  handlers.ctorGuidProperty = "transit$guid$" + util.randomUUID();
  handlers.typeTag = function(ctor) {
    if (ctor == null) {
      return "null";
    } else {
      if (ctor === String) {
        return "string";
      } else {
        if (ctor === Boolean) {
          return "boolean";
        } else {
          if (ctor === Number) {
            return "number";
          } else {
            if (ctor === Array) {
              return "array";
            } else {
              if (ctor === Object) {
                return "map";
              } else {
                var tag = ctor[handlers.ctorGuidProperty];
                if (tag == null) {
                  if (typeof Object.defineProperty != "undefined") {
                    tag = ++handlers.ctorGuid;
                    Object.defineProperty(ctor, handlers.ctorGuidProperty, {value:tag, enumerable:false});
                  } else {
                    ctor[handlers.ctorGuidProperty] = tag = ++handlers.ctorGuid;
                  }
                }
                return tag;
              }
            }
          }
        }
      }
    }
  };
  handlers.constructor = function(x) {
    if (x == null) {
      return null;
    } else {
      return x.constructor;
    }
  };
  handlers.padZeros = function(n, m) {
    var s = n.toString();
    for (var i = s.length;i < m;i++) {
      s = "0" + s;
    }
    return s;
  };
  handlers.stringableKeys = function(m) {
    var stringable = false, ks = util.objectKeys(m);
    for (var i = 0;i < ks.length;i++) {
    }
    return true;
  };
  handlers.NilHandler = function() {
  };
  handlers.NilHandler.prototype.tag = function(v) {
    return "_";
  };
  handlers.NilHandler.prototype.rep = function(v) {
    return null;
  };
  handlers.NilHandler.prototype.stringRep = function(v) {
    return "null";
  };
  handlers.StringHandler = function() {
  };
  handlers.StringHandler.prototype.tag = function(v) {
    return "s";
  };
  handlers.StringHandler.prototype.rep = function(v) {
    return v;
  };
  handlers.StringHandler.prototype.stringRep = function(v) {
    return v;
  };
  handlers.NumberHandler = function() {
  };
  handlers.NumberHandler.prototype.tag = function(v) {
    return "i";
  };
  handlers.NumberHandler.prototype.rep = function(v) {
    return v;
  };
  handlers.NumberHandler.prototype.stringRep = function(v) {
    return v.toString();
  };
  handlers.IntegerHandler = function() {
  };
  handlers.IntegerHandler.prototype.tag = function(v) {
    return "i";
  };
  handlers.IntegerHandler.prototype.rep = function(v) {
    return v.toString();
  };
  handlers.IntegerHandler.prototype.stringRep = function(v) {
    return v.toString();
  };
  handlers.BooleanHandler = function() {
  };
  handlers.BooleanHandler.prototype.tag = function(v) {
    return "?";
  };
  handlers.BooleanHandler.prototype.rep = function(v) {
    return v;
  };
  handlers.BooleanHandler.prototype.stringRep = function(v) {
    return v.toString();
  };
  handlers.ArrayHandler = function() {
  };
  handlers.ArrayHandler.prototype.tag = function(v) {
    return "array";
  };
  handlers.ArrayHandler.prototype.rep = function(v) {
    return v;
  };
  handlers.ArrayHandler.prototype.stringRep = function(v) {
    return null;
  };
  handlers.MapHandler = function() {
  };
  handlers.MapHandler.prototype.tag = function(v) {
    return "map";
  };
  handlers.MapHandler.prototype.rep = function(v) {
    return v;
  };
  handlers.MapHandler.prototype.stringRep = function(v) {
    return null;
  };
  handlers.VerboseDateHandler = function() {
  };
  handlers.VerboseDateHandler.prototype.tag = function(v) {
    return "t";
  };
  handlers.VerboseDateHandler.prototype.rep = function(v) {
    return v.getUTCFullYear() + "-" + handlers.padZeros(v.getUTCMonth() + 1, 2) + "-" + handlers.padZeros(v.getUTCDate(), 2) + "T" + handlers.padZeros(v.getUTCHours(), 2) + ":" + handlers.padZeros(v.getUTCMinutes(), 2) + ":" + handlers.padZeros(v.getUTCSeconds(), 2) + "." + handlers.padZeros(v.getUTCMilliseconds(), 3) + "Z";
  };
  handlers.VerboseDateHandler.prototype.stringRep = function(v, h) {
    return h.rep(v);
  };
  handlers.DateHandler = function() {
  };
  handlers.DateHandler.prototype.tag = function(v) {
    return "m";
  };
  handlers.DateHandler.prototype.rep = function(v) {
    return v.valueOf();
  };
  handlers.DateHandler.prototype.stringRep = function(v) {
    return v.valueOf().toString();
  };
  handlers.DateHandler.prototype.getVerboseHandler = function(v) {
    return new handlers.VerboseDateHandler;
  };
  handlers.UUIDHandler = function() {
  };
  handlers.UUIDHandler.prototype.tag = function(v) {
    return "u";
  };
  handlers.UUIDHandler.prototype.rep = function(v) {
    return v.toString();
  };
  handlers.UUIDHandler.prototype.stringRep = function(v) {
    return v.toString();
  };
  handlers.KeywordHandler = function() {
  };
  handlers.KeywordHandler.prototype.tag = function(v) {
    return ":";
  };
  handlers.KeywordHandler.prototype.rep = function(v) {
    return v.name;
  };
  handlers.KeywordHandler.prototype.stringRep = function(v, h) {
    return h.rep(v);
  };
  handlers.SymbolHandler = function() {
  };
  handlers.SymbolHandler.prototype.tag = function(v) {
    return "$";
  };
  handlers.SymbolHandler.prototype.rep = function(v) {
    return v.name;
  };
  handlers.SymbolHandler.prototype.stringRep = function(v, h) {
    return h.rep(v);
  };
  handlers.TaggedHandler = function() {
  };
  handlers.TaggedHandler.prototype.tag = function(v) {
    return v.tag;
  };
  handlers.TaggedHandler.prototype.rep = function(v) {
    return v.rep;
  };
  handlers.TaggedHandler.prototype.stringRep = function(v, h) {
    return null;
  };
  handlers.TransitSetHandler = function() {
  };
  handlers.TransitSetHandler.prototype.tag = function(v) {
    return "set";
  };
  handlers.TransitSetHandler.prototype.rep = function(v) {
    var arr = [];
    v.forEach(function(key, set) {
      arr.push(key);
    });
    return types.taggedValue("array", arr);
  };
  handlers.TransitSetHandler.prototype.stringRep = function(v, h) {
    return null;
  };
  handlers.TransitArrayMapHandler = function() {
  };
  handlers.TransitArrayMapHandler.prototype.tag = function(v) {
    return "map";
  };
  handlers.TransitArrayMapHandler.prototype.rep = function(v) {
    return v;
  };
  handlers.TransitArrayMapHandler.prototype.stringRep = function(v, h) {
    return null;
  };
  handlers.TransitMapHandler = function() {
  };
  handlers.TransitMapHandler.prototype.tag = function(v) {
    return "map";
  };
  handlers.TransitMapHandler.prototype.rep = function(v) {
    return v;
  };
  handlers.TransitMapHandler.prototype.stringRep = function(v, h) {
    return null;
  };
  handlers.BufferHandler = function() {
  };
  handlers.BufferHandler.prototype.tag = function(v) {
    return "b";
  };
  handlers.BufferHandler.prototype.rep = function(v) {
    return v.toString("base64");
  };
  handlers.BufferHandler.prototype.stringRep = function(v, h) {
    return null;
  };
  handlers.Uint8ArrayHandler = function() {
  };
  handlers.Uint8ArrayHandler.prototype.tag = function(v) {
    return "b";
  };
  handlers.Uint8ArrayHandler.prototype.rep = function(v) {
    return util.Uint8ToBase64(v);
  };
  handlers.Uint8ArrayHandler.prototype.stringRep = function(v, h) {
    return null;
  };
  handlers.defaultHandlers = function(hs) {
    hs.set(null, new handlers.NilHandler);
    hs.set(String, new handlers.StringHandler);
    hs.set(Number, new handlers.NumberHandler);
    hs.set(Long, new handlers.IntegerHandler);
    hs.set(Boolean, new handlers.BooleanHandler);
    hs.set(Array, new handlers.ArrayHandler);
    hs.set(Object, new handlers.MapHandler);
    hs.set(Date, new handlers.DateHandler);
    hs.set(types.UUID, new handlers.UUIDHandler);
    hs.set(types.Keyword, new handlers.KeywordHandler);
    hs.set(types.Symbol, new handlers.SymbolHandler);
    hs.set(types.TaggedValue, new handlers.TaggedHandler);
    hs.set(types.TransitSet, new handlers.TransitSetHandler);
    hs.set(types.TransitArrayMap, new handlers.TransitArrayMapHandler);
    hs.set(types.TransitMap, new handlers.TransitMapHandler);
    if (typeof Buffer != "undefined") {
      hs.set(Buffer, new handlers.BufferHandler);
    }
    if (typeof Uint8Array != "undefined") {
      hs.set(Uint8Array, new handlers.Uint8ArrayHandler);
    }
    return hs;
  };
  handlers.Handlers = function() {
    this.handlers = {};
    handlers.defaultHandlers(this);
  };
  handlers.Handlers.prototype.get = function(ctor) {
    var h = null;
    if (typeof ctor === "string") {
      h = this.handlers[ctor];
    } else {
      h = this.handlers[handlers.typeTag(ctor)];
    }
    if (h != null) {
      return h;
    } else {
      return this.handlers["default"];
    }
  };
  handlers.validTag = function(tag) {
    switch(tag) {
      case "null":
      ;
      case "string":
      ;
      case "boolean":
      ;
      case "number":
      ;
      case "array":
      ;
      case "map":
        return false;
        break;
    }
    return true;
  };
  handlers.Handlers.prototype.set = function(ctor, handler) {
    if (typeof ctor === "string" && handlers.validTag(ctor)) {
      this.handlers[ctor] = handler;
    } else {
      this.handlers[handlers.typeTag(ctor)] = handler;
    }
  };
});
goog.provide("com.cognitect.transit.impl.writer");
goog.require("com.cognitect.transit.util");
goog.require("com.cognitect.transit.caching");
goog.require("com.cognitect.transit.handlers");
goog.require("com.cognitect.transit.types");
goog.require("com.cognitect.transit.delimiters");
goog.require("goog.math.Long");
goog.scope(function() {
  var writer = com.cognitect.transit.impl.writer, util = com.cognitect.transit.util, caching = com.cognitect.transit.caching, handlers = com.cognitect.transit.handlers, types = com.cognitect.transit.types, d = com.cognitect.transit.delimiters, Long = goog.math.Long;
  writer.escape = function(string) {
    if (string.length > 0) {
      var c = string.charAt(0);
      if (c === d.ESC || c === d.SUB || c === d.RES) {
        return d.ESC + string;
      } else {
        return string;
      }
    } else {
      return string;
    }
  };
  writer.JSONMarshaller = function(opts) {
    this.opts = opts || {};
    this.preferStrings = this.opts["preferStrings"] != null ? this.opts["preferStrings"] : true;
    this.objectBuilder = this.opts["objectBuilder"] || null;
    this.handlers = new handlers.Handlers;
    var optsHandlers = this.opts["handlers"];
    if (optsHandlers) {
      if (util.isArray(optsHandlers) || !optsHandlers.forEach) {
        throw new Error('transit writer "handlers" option must be a map');
      }
      var self = this;
      optsHandlers.forEach(function(v, k) {
        self.handlers.set(k, v);
      });
    }
    this.unpack = this.opts["unpack"] || function(x) {
      if (types.isArrayMap(x) && x.backingMap === null) {
        return x._entries;
      } else {
        return false;
      }
    };
    this.verbose = this.opts && this.opts["verbose"] || false;
  };
  writer.JSONMarshaller.prototype.handler = function(obj) {
    var h = this.handlers.get(handlers.constructor(obj));
    if (h != null) {
      return h;
    } else {
      var tag = obj && obj["transitTag"];
      if (tag) {
        return this.handlers.get(tag);
      } else {
        return null;
      }
    }
  };
  writer.JSONMarshaller.prototype.registerHandler = function(ctor, handler) {
    this.handlers.set(ctor, handler);
  };
  writer.JSONMarshaller.prototype.emitNil = function(asMapKey, cache) {
    if (asMapKey) {
      return this.emitString(d.ESC, "_", "", asMapKey, cache);
    } else {
      return null;
    }
  };
  writer.JSONMarshaller.prototype.emitString = function(prefix, tag, s, asMapKey, cache) {
    var string = prefix + tag + s;
    if (cache) {
      return cache.write(string, asMapKey);
    } else {
      return string;
    }
  };
  writer.JSONMarshaller.prototype.emitBoolean = function(b, asMapKey, cache) {
    if (asMapKey) {
      var s = b.toString();
      return this.emitString(d.ESC, "?", s[0], asMapKey, cache);
    } else {
      return b;
    }
  };
  writer.JSONMarshaller.prototype.emitInteger = function(i, asMapKey, cache) {
    if (i === Infinity) {
      return this.emitString(d.ESC, "z", "INF", asMapKey, cache);
    } else {
      if (i === -Infinity) {
        return this.emitString(d.ESC, "z", "-INF", asMapKey, cache);
      } else {
        if (isNaN(i)) {
          return this.emitString(d.ESC, "z", "NaN", asMapKey, cache);
        } else {
          if (asMapKey || typeof i === "string" || i instanceof Long) {
            return this.emitString(d.ESC, "i", i.toString(), asMapKey, cache);
          } else {
            return i;
          }
        }
      }
    }
  };
  writer.JSONMarshaller.prototype.emitDouble = function(d, asMapKey, cache) {
    if (asMapKey) {
      return this.emitString(d.ESC, "d", d, asMapKey, cache);
    } else {
      return d;
    }
  };
  writer.JSONMarshaller.prototype.emitBinary = function(b, asMapKey, cache) {
    return this.emitString(d.ESC, "b", b, asMapKey, cache);
  };
  writer.JSONMarshaller.prototype.emitQuoted = function(em, obj, cache) {
    if (em.verbose) {
      var ret = {}, k = this.emitString(d.ESC_TAG, "'", "", true, cache);
      ret[k] = writer.marshal(this, obj, false, cache);
      return ret;
    } else {
      return[this.emitString(d.ESC_TAG, "'", "", true, cache), writer.marshal(this, obj, false, cache)];
    }
  };
  writer.emitObjects = function(em, iterable, cache) {
    var ret = [];
    if (util.isArray(iterable)) {
      for (var i = 0;i < iterable.length;i++) {
        ret.push(writer.marshal(em, iterable[i], false, cache));
      }
    } else {
      iterable.forEach(function(v, i) {
        ret.push(writer.marshal(em, v, false, cache));
      });
    }
    return ret;
  };
  writer.emitArray = function(em, iterable, skip, cache) {
    return writer.emitObjects(em, iterable, cache);
  };
  writer.isStringableKey = function(em, k) {
    if (typeof k !== "string") {
      var h = em.handler(k);
      return h && h.tag(k).length === 1;
    } else {
      return true;
    }
  };
  writer.stringableKeys = function(em, obj) {
    var arr = em.unpack(obj), stringableKeys = true;
    if (arr) {
      for (var i = 0;i < arr.length;i += 2) {
        stringableKeys = writer.isStringableKey(em, arr[i]);
        if (!stringableKeys) {
          break;
        }
      }
      return stringableKeys;
    } else {
      if (obj.keys) {
        var iter = obj.keys();
        if (iter.next) {
          step = iter.next();
          while (!step.done) {
            stringableKeys = writer.isStringableKey(em, step.value);
            if (!stringableKeys) {
              break;
            }
            step = iter.next();
          }
          return stringableKeys;
        }
      }
    }
    if (obj.forEach) {
      obj.forEach(function(v, k) {
        stringableKeys = stringableKeys && writer.isStringableKey(em, k);
      });
      return stringableKeys;
    } else {
      throw new Error("Cannot walk keys of object type " + handlers.constructor(obj).name);
    }
  };
  writer.emitMap = function(em, obj, skip, cache) {
    if (obj.constructor === Object || obj.forEach != null) {
      if (em.verbose) {
        if (obj.forEach != null) {
          if (writer.stringableKeys(em, obj)) {
            var ret = {};
            obj.forEach(function(v, k) {
              ret[writer.marshal(em, k, true, false)] = writer.marshal(em, v, false, cache);
            });
            return ret;
          } else {
            var arr = em.unpack(obj), rep = [], tag = em.emitString(d.ESC_TAG, "cmap", "", true, cache);
            if (arr) {
              for (var i = 0;i < arr.length;i += 2) {
                rep.push(writer.marshal(em, arr[i], true, false));
                rep.push(writer.marshal(em, arr[i + 1], false, cache));
              }
            } else {
              obj.forEach(function(v, k) {
                rep.push(writer.marshal(em, k, true, false));
                rep.push(writer.marshal(em, v, false, cache));
              });
            }
            var ret = {};
            ret[tag] = rep;
            return ret;
          }
        } else {
          var ret = {}, ks = util.objectKeys(obj);
          for (var i = 0;i < ks.length;i++) {
            ret[writer.marshal(em, ks[i], true, false)] = writer.marshal(em, obj[ks[i]], false, cache);
          }
          return ret;
        }
      } else {
        if (obj.forEach != null) {
          if (writer.stringableKeys(em, obj)) {
            var arr = em.unpack(obj), ret = ["^ "];
            if (arr) {
              for (var i = 0;i < arr.length;i += 2) {
                ret.push(writer.marshal(em, arr[i], true, cache));
                ret.push(writer.marshal(em, arr[i + 1], false, cache));
              }
            } else {
              obj.forEach(function(v, k) {
                ret.push(writer.marshal(em, k, true, cache));
                ret.push(writer.marshal(em, v, false, cache));
              });
            }
            return ret;
          } else {
            var arr = em.unpack(obj), rep = [], tag = em.emitString(d.ESC_TAG, "cmap", "", true, cache);
            if (arr) {
              for (var i = 0;i < arr.length;i += 2) {
                rep.push(writer.marshal(em, arr[i], true, cache));
                rep.push(writer.marshal(em, arr[i + 1], false, cache));
              }
            } else {
              obj.forEach(function(v, k) {
                rep.push(writer.marshal(em, k, true, cache));
                rep.push(writer.marshal(em, v, false, cache));
              });
            }
            return[tag, rep];
          }
        } else {
          var ret = ["^ "], ks = util.objectKeys(obj);
          for (var i = 0;i < ks.length;i++) {
            ret.push(writer.marshal(em, ks[i], true, cache));
            ret.push(writer.marshal(em, obj[ks[i]], false, cache));
          }
          return ret;
        }
      }
    } else {
      if (em.objectBuilder != null) {
        return em.objectBuilder(obj, function(k) {
          return writer.marshal(em, k, true, cache);
        }, function(v) {
          return writer.marshal(em, v, false, cache);
        });
      } else {
        var name = handlers.constructor(obj).name, err = new Error("Cannot write " + name);
        err.data = {obj:obj, type:name};
        throw err;
      }
    }
  };
  writer.emitTaggedMap = function(em, tag, rep, skip, cache) {
    if (em.verbose) {
      var ret = {};
      ret[em.emitString(d.ESC_TAG, tag, "", true, cache)] = writer.marshal(em, rep, false, cache);
      return ret;
    } else {
      return[em.emitString(d.ESC_TAG, tag, "", true, cache), writer.marshal(em, rep, false, cache)];
    }
  };
  writer.emitEncoded = function(em, h, tag, rep, obj, asMapKey, cache) {
    if (tag.length === 1) {
      if (typeof rep === "string") {
        return em.emitString(d.ESC, tag, rep, asMapKey, cache);
      } else {
        if (asMapKey || em.preferStrings) {
          var vh = em.verbose && h.getVerboseHandler();
          if (vh) {
            tag = vh.tag(obj);
            rep = vh.stringRep(obj, vh);
          } else {
            rep = h.stringRep(obj, h);
          }
          if (rep !== null) {
            return em.emitString(d.ESC, tag, rep, asMapKey, cache);
          } else {
            var err = new Error('Tag "' + tag + '" cannot be encoded as string');
            err.data = {tag:tag, rep:rep, obj:obj};
            throw err;
          }
        } else {
          return writer.emitTaggedMap(em, tag, rep, asMapKey, cache);
        }
      }
    } else {
      return writer.emitTaggedMap(em, tag, rep, asMapKey, cache);
    }
  };
  writer.marshal = function(em, obj, asMapKey, cache) {
    var h = em.handler(obj), tag = h ? h.tag(obj) : null, rep = h ? h.rep(obj) : null;
    if (h != null && tag != null) {
      switch(tag) {
        case "_":
          return em.emitNil(asMapKey, cache);
          break;
        case "s":
          return em.emitString("", "", writer.escape(rep), asMapKey, cache);
          break;
        case "?":
          return em.emitBoolean(rep, asMapKey, cache);
          break;
        case "i":
          return em.emitInteger(rep, asMapKey, cache);
          break;
        case "d":
          return em.emitDouble(rep, asMapKey, cache);
          break;
        case "b":
          return em.emitBinary(rep, asMapKey, cache);
          break;
        case "'":
          return em.emitQuoted(em, rep, cache);
          break;
        case "array":
          return writer.emitArray(em, rep, asMapKey, cache);
          break;
        case "map":
          return writer.emitMap(em, rep, asMapKey, cache);
          break;
        default:
          return writer.emitEncoded(em, h, tag, rep, obj, asMapKey, cache);
          break;
      }
    } else {
      var name = handlers.constructor(obj).name, err = new Error("Cannot write " + name);
      err.data = {obj:obj, type:name};
      throw err;
    }
  };
  writer.maybeQuoted = function(em, obj) {
    var h = em.handler(obj);
    if (h != null) {
      if (h.tag(obj).length === 1) {
        return types.quoted(obj);
      } else {
        return obj;
      }
    } else {
      var name = handlers.constructor(obj).name, err = new Error("Cannot write " + name);
      err.data = {obj:obj, type:name};
      throw err;
    }
  };
  writer.marshalTop = function(em, obj, asMapKey, cache) {
    return JSON.stringify(writer.marshal(em, writer.maybeQuoted(em, obj), asMapKey, cache));
  };
  writer.Writer = function(marshaller, options) {
    this._marshaller = marshaller;
    this.options = options || {};
    if (this.options["cache"] === false) {
      this.cache = null;
    } else {
      this.cache = this.options["cache"] ? this.options["cache"] : new caching.WriteCache;
    }
  };
  writer.Writer.prototype.marshaller = function() {
    return this._marshaller;
  };
  writer.Writer.prototype["marshaller"] = writer.Writer.prototype.marshaller;
  writer.Writer.prototype.write = function(obj, opts) {
    var ret = null, ropts = opts || {}, asMapKey = ropts["asMapKey"] || false, cache = this._marshaller.verbose ? false : this.cache;
    if (ropts["marshalTop"] === false) {
      ret = writer.marshal(this._marshaller, obj, asMapKey, cache);
    } else {
      ret = writer.marshalTop(this._marshaller, obj, asMapKey, cache);
    }
    if (this.cache != null) {
      this.cache.clear();
    }
    return ret;
  };
  writer.Writer.prototype["write"] = writer.Writer.prototype.write;
  writer.Writer.prototype.register = function(type, handler) {
    this._marshaller.registerHandler(type, handler);
  };
  writer.Writer.prototype["register"] = writer.Writer.prototype.register;
});
goog.provide("com.cognitect.transit");
goog.require("com.cognitect.transit.impl.reader");
goog.require("com.cognitect.transit.impl.writer");
goog.require("com.cognitect.transit.types");
goog.require("com.cognitect.transit.eq");
goog.require("com.cognitect.transit.impl.decoder");
goog.require("com.cognitect.transit.caching");
var TRANSIT_DEV = true;
var TRANSIT_NODE_TARGET = false;
var TRANSIT_BROWSER_TARGET = false;
var TRANSIT_BROWSER_AMD_TARGET = false;
goog.scope(function() {
  var transit = com.cognitect.transit;
  var reader = com.cognitect.transit.impl.reader, writer = com.cognitect.transit.impl.writer, decoder = com.cognitect.transit.impl.decoder, types = com.cognitect.transit.types, eq = com.cognitect.transit.eq, caching = com.cognitect.transit.caching;
  transit.reader = function(type, opts) {
    if (type === "json" || type === "json-verbose" || type == null) {
      type = "json";
      var unmarshaller = new reader.JSONUnmarshaller(opts);
      return new reader.Reader(unmarshaller, opts);
    } else {
      throw new Error("Cannot create reader of type " + type);
    }
  };
  transit.writer = function(type, opts) {
    if (type === "json" || type === "json-verbose" || type == null) {
      if (type === "json-verbose") {
        if (opts == null) {
          opts = {};
        }
        opts["verbose"] = true;
      }
      type = "json";
      var marshaller = new writer.JSONMarshaller(opts);
      return new writer.Writer(marshaller, opts);
    } else {
      var err = new Error('Type must be "json"');
      err.data = {type:type};
      throw err;
    }
  };
  transit.makeWriteHandler = function(obj) {
    var Handler = function() {
    };
    Handler.prototype.tag = obj["tag"];
    Handler.prototype.rep = obj["rep"];
    Handler.prototype.stringRep = obj["stringRep"];
    Handler.prototype.getVerboseHandler = obj["getVerboseHandler"];
    return new Handler;
  };
  transit.makeBuilder = function(obj) {
    var Builder = function() {
    };
    Builder.prototype.init = obj["init"];
    Builder.prototype.add = obj["add"];
    Builder.prototype.finalize = obj["finalize"];
    Builder.prototype.fromArray = obj["fromArray"];
    return new Builder;
  };
  transit.date = types.date;
  transit.integer = types.intValue;
  transit.isInteger = types.isInteger;
  transit.uuid = types.uuid;
  transit.isUUID = types.isUUID;
  transit.bigInt = types.bigInteger;
  transit.isBigInt = types.isBigInteger;
  transit.bigDec = types.bigDecimalValue;
  transit.isBigDec = types.isBigDecimal;
  transit.keyword = types.keyword;
  transit.isKeyword = types.isKeyword;
  transit.symbol = types.symbol;
  transit.isSymbol = types.isSymbol;
  transit.binary = types.binary;
  transit.isBinary = types.isBinary;
  transit.uri = types.uri;
  transit.isURI = types.isURI;
  transit.map = types.map;
  transit.isMap = types.isMap;
  transit.set = types.set;
  transit.isSet = types.isSet;
  transit.list = types.list;
  transit.isList = types.isList;
  transit.quoted = types.quoted;
  transit.isQuoted = types.isQuoted;
  transit.tagged = types.taggedValue;
  transit.isTaggedValue = types.isTaggedValue;
  transit.link = types.link;
  transit.isLink = types.isLink;
  transit.hash = eq.hashCode;
  transit.hashMapLike = eq.hashMapLike;
  transit.hashMapLike = eq.hashArrayLike;
  transit.equals = eq.equals;
  transit.extendToEQ = eq.extendToEQ;
  transit.mapToObject = function(m) {
    var ret = {};
    m.forEach(function(v, k) {
      if (typeof k !== "string") {
        throw Error("Cannot convert map with non-string keys");
      } else {
        ret[k] = v;
      }
    });
    return ret;
  };
  transit.decoder = decoder.decoder;
  transit.readCache = caching.readCache;
  transit.writeCache = caching.writeCache;
  transit.UUIDfromString = types.UUIDfromString;
  transit.randomUUID = types.randomUUID;
  transit.stringableKeys = writer.stringableKeys;
  if (TRANSIT_BROWSER_TARGET) {
    goog.exportSymbol("transit.reader", transit.reader);
    goog.exportSymbol("transit.writer", transit.writer);
    goog.exportSymbol("transit.makeBuilder", transit.makeBuilder);
    goog.exportSymbol("transit.makeWriteHandler", transit.makeWriteHandler);
    goog.exportSymbol("transit.date", types.date);
    goog.exportSymbol("transit.integer", types.intValue);
    goog.exportSymbol("transit.isInteger", types.isInteger);
    goog.exportSymbol("transit.uuid", types.uuid);
    goog.exportSymbol("transit.isUUID", types.isUUID);
    goog.exportSymbol("transit.bigInt", types.bigInteger);
    goog.exportSymbol("transit.isBigInt", types.isBigInteger);
    goog.exportSymbol("transit.bigDec", types.bigDecimalValue);
    goog.exportSymbol("transit.isBigDec", types.isBigDecimal);
    goog.exportSymbol("transit.keyword", types.keyword);
    goog.exportSymbol("transit.isKeyword", types.isKeyword);
    goog.exportSymbol("transit.symbol", types.symbol);
    goog.exportSymbol("transit.isSymbol", types.isSymbol);
    goog.exportSymbol("transit.binary", types.binary);
    goog.exportSymbol("transit.isBinary", types.isBinary);
    goog.exportSymbol("transit.uri", types.uri);
    goog.exportSymbol("transit.isURI", types.isURI);
    goog.exportSymbol("transit.map", types.map);
    goog.exportSymbol("transit.isMap", types.isMap);
    goog.exportSymbol("transit.set", types.set);
    goog.exportSymbol("transit.isSet", types.isSet);
    goog.exportSymbol("transit.list", types.list);
    goog.exportSymbol("transit.isList", types.isList);
    goog.exportSymbol("transit.quoted", types.quoted);
    goog.exportSymbol("transit.isQuoted", types.isQuoted);
    goog.exportSymbol("transit.tagged", types.taggedValue);
    goog.exportSymbol("transit.isTaggedValue", types.isTaggedValue);
    goog.exportSymbol("transit.link", types.link);
    goog.exportSymbol("transit.isLink", types.isLink);
    goog.exportSymbol("transit.hash", eq.hashCode);
    goog.exportSymbol("transit.hashMapLike", eq.hashMapLike);
    goog.exportSymbol("transit.hashArrayLike", eq.hashArrayLike);
    goog.exportSymbol("transit.equals", eq.equals);
    goog.exportSymbol("transit.extendToEQ", eq.extendToEQ);
    goog.exportSymbol("transit.mapToObject", transit.mapToObject);
    goog.exportSymbol("transit.decoder", decoder.decoder);
    goog.exportSymbol("transit.UUIDfromString", types.UUIDfromString);
    goog.exportSymbol("transit.randomUUID", types.randomUUID);
    goog.exportSymbol("transit.stringableKeys", writer.stringableKeys);
    goog.exportSymbol("transit.readCache", caching.readCache);
    goog.exportSymbol("transit.writeCache", caching.writeCache);
  }
  if (TRANSIT_NODE_TARGET) {
    module.exports = {reader:transit.reader, writer:transit.writer, makeBuilder:transit.makeBuilder, makeWriteHandler:transit.makeWriteHandler, date:types.date, integer:types.intValue, isInteger:types.isInteger, uuid:types.uuid, isUUID:types.isUUID, bigInt:types.bigInteger, isBigInt:types.isBigInteger, bigDec:types.bigDecimalValue, isBigDec:types.isBigDecimal, keyword:types.keyword, isKeyword:types.isKeyword, symbol:types.symbol, isSymbol:types.isSymbol, binary:types.binary, isBinary:types.isBinary, 
    uri:types.uri, isURI:types.isURI, map:types.map, isMap:types.isMap, set:types.set, isSet:types.isSet, list:types.list, isList:types.isList, quoted:types.quoted, isQuoted:types.isQuoted, tagged:types.taggedValue, isTaggedValue:types.isTaggedValue, link:types.link, isLink:types.isLink, hash:eq.hashCode, hashArrayLike:eq.hashArrayLike, hashMapLike:eq.hashMapLike, equals:eq.equals, extendToEQ:eq.extendToEQ, mapToObject:transit.mapToObject, decoder:decoder.decoder, UUIDfromString:types.UUIDfromString, 
    randomUUID:types.randomUUID, stringableKeys:writer.stringableKeys, readCache:caching.readCache, writeCache:caching.writeCache};
  }
});
goog.provide("cognitect.transit");
goog.require("cljs.core");
goog.require("goog.math.Long");
goog.require("com.cognitect.transit.eq");
goog.require("com.cognitect.transit.types");
goog.require("com.cognitect.transit");
cljs.core.UUID.prototype.cljs$core$IEquiv$ = true;
cljs.core.UUID.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this$, other) {
  var this$__$1 = this;
  if (other instanceof cljs.core.UUID) {
    return this$__$1.uuid === other.uuid;
  } else {
    if (other instanceof com.cognitect.transit.types.UUID) {
      return this$__$1.uuid === other.toString();
    } else {
      return false;
    }
  }
};
com.cognitect.transit.types.TaggedValue.prototype.cljs$core$IEquiv$ = true;
com.cognitect.transit.types.TaggedValue.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this$, other) {
  var this$__$1 = this;
  return this$__$1.equiv(other);
};
com.cognitect.transit.types.UUID.prototype.cljs$core$IEquiv$ = true;
com.cognitect.transit.types.UUID.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this$, other) {
  var this$__$1 = this;
  if (other instanceof cljs.core.UUID) {
    return cljs.core._equiv.call(null, other, this$__$1);
  } else {
    return this$__$1.equiv(other);
  }
};
goog.math.Long.prototype.cljs$core$IEquiv$ = true;
goog.math.Long.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this$, other) {
  var this$__$1 = this;
  return this$__$1.equiv(other);
};
com.cognitect.transit.types.TaggedValue.prototype.cljs$core$IHash$ = true;
com.cognitect.transit.types.TaggedValue.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var this$__$1 = this;
  return com.cognitect.transit.eq.hashCode.call(null, this$__$1);
};
com.cognitect.transit.types.UUID.prototype.cljs$core$IHash$ = true;
com.cognitect.transit.types.UUID.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var this$__$1 = this;
  return com.cognitect.transit.eq.hashCode.call(null, this$__$1);
};
goog.math.Long.prototype.cljs$core$IHash$ = true;
goog.math.Long.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var this$__$1 = this;
  return com.cognitect.transit.eq.hashCode.call(null, this$__$1);
};
cognitect.transit.opts_merge = function opts_merge(a, b) {
  var seq__23799_23803 = cljs.core.seq.call(null, cljs.core.js_keys.call(null, b));
  var chunk__23800_23804 = null;
  var count__23801_23805 = 0;
  var i__23802_23806 = 0;
  while (true) {
    if (i__23802_23806 < count__23801_23805) {
      var k_23807 = cljs.core._nth.call(null, chunk__23800_23804, i__23802_23806);
      var v_23808 = b[k_23807];
      a[k_23807] = v_23808;
      var G__23809 = seq__23799_23803;
      var G__23810 = chunk__23800_23804;
      var G__23811 = count__23801_23805;
      var G__23812 = i__23802_23806 + 1;
      seq__23799_23803 = G__23809;
      chunk__23800_23804 = G__23810;
      count__23801_23805 = G__23811;
      i__23802_23806 = G__23812;
      continue;
    } else {
      var temp__4126__auto___23813 = cljs.core.seq.call(null, seq__23799_23803);
      if (temp__4126__auto___23813) {
        var seq__23799_23814__$1 = temp__4126__auto___23813;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__23799_23814__$1)) {
          var c__8291__auto___23815 = cljs.core.chunk_first.call(null, seq__23799_23814__$1);
          var G__23816 = cljs.core.chunk_rest.call(null, seq__23799_23814__$1);
          var G__23817 = c__8291__auto___23815;
          var G__23818 = cljs.core.count.call(null, c__8291__auto___23815);
          var G__23819 = 0;
          seq__23799_23803 = G__23816;
          chunk__23800_23804 = G__23817;
          count__23801_23805 = G__23818;
          i__23802_23806 = G__23819;
          continue;
        } else {
          var k_23820 = cljs.core.first.call(null, seq__23799_23814__$1);
          var v_23821 = b[k_23820];
          a[k_23820] = v_23821;
          var G__23822 = cljs.core.next.call(null, seq__23799_23814__$1);
          var G__23823 = null;
          var G__23824 = 0;
          var G__23825 = 0;
          seq__23799_23803 = G__23822;
          chunk__23800_23804 = G__23823;
          count__23801_23805 = G__23824;
          i__23802_23806 = G__23825;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return a;
};
cognitect.transit.MapBuilder = function() {
};
cognitect.transit.MapBuilder.prototype.init = function(node) {
  var self__ = this;
  var _ = this;
  return cljs.core.transient$.call(null, cljs.core.PersistentArrayMap.EMPTY);
};
cognitect.transit.MapBuilder.prototype.add = function(m, k, v, node) {
  var self__ = this;
  var _ = this;
  return cljs.core.assoc_BANG_.call(null, m, k, v);
};
cognitect.transit.MapBuilder.prototype.finalize = function(m, node) {
  var self__ = this;
  var _ = this;
  return cljs.core.persistent_BANG_.call(null, m);
};
cognitect.transit.MapBuilder.prototype.fromArray = function(arr, node) {
  var self__ = this;
  var _ = this;
  return cljs.core.PersistentArrayMap.fromArray.call(null, arr, true, true);
};
cognitect.transit.MapBuilder.cljs$lang$type = true;
cognitect.transit.MapBuilder.cljs$lang$ctorStr = "cognitect.transit/MapBuilder";
cognitect.transit.MapBuilder.cljs$lang$ctorPrWriter = function(this__8091__auto__, writer__8092__auto__, opt__8093__auto__) {
  return cljs.core._write.call(null, writer__8092__auto__, "cognitect.transit/MapBuilder");
};
cognitect.transit.__GT_MapBuilder = function __GT_MapBuilder() {
  return new cognitect.transit.MapBuilder;
};
cognitect.transit.VectorBuilder = function() {
};
cognitect.transit.VectorBuilder.prototype.init = function(node) {
  var self__ = this;
  var _ = this;
  return cljs.core.transient$.call(null, cljs.core.PersistentVector.EMPTY);
};
cognitect.transit.VectorBuilder.prototype.add = function(v, x, node) {
  var self__ = this;
  var _ = this;
  return cljs.core.conj_BANG_.call(null, v, x);
};
cognitect.transit.VectorBuilder.prototype.finalize = function(v, node) {
  var self__ = this;
  var _ = this;
  return cljs.core.persistent_BANG_.call(null, v);
};
cognitect.transit.VectorBuilder.prototype.fromArray = function(arr, node) {
  var self__ = this;
  var _ = this;
  return cljs.core.PersistentVector.fromArray.call(null, arr, true);
};
cognitect.transit.VectorBuilder.cljs$lang$type = true;
cognitect.transit.VectorBuilder.cljs$lang$ctorStr = "cognitect.transit/VectorBuilder";
cognitect.transit.VectorBuilder.cljs$lang$ctorPrWriter = function(this__8091__auto__, writer__8092__auto__, opt__8093__auto__) {
  return cljs.core._write.call(null, writer__8092__auto__, "cognitect.transit/VectorBuilder");
};
cognitect.transit.__GT_VectorBuilder = function __GT_VectorBuilder() {
  return new cognitect.transit.VectorBuilder;
};
cognitect.transit.reader = function() {
  var reader = null;
  var reader__1 = function(type) {
    return reader.call(null, type, null);
  };
  var reader__2 = function(type, opts) {
    return com.cognitect.transit.reader.call(null, cljs.core.name.call(null, type), cognitect.transit.opts_merge.call(null, {"prefersStrings":false, "arrayBuilder":new cognitect.transit.VectorBuilder, "mapBuilder":new cognitect.transit.MapBuilder, "handlers":cljs.core.clj__GT_js.call(null, cljs.core.merge.call(null, new cljs.core.PersistentArrayMap(null, 5, ["$", function(v) {
      return cljs.core.symbol.call(null, v);
    }, ":", function(v) {
      return cljs.core.keyword.call(null, v);
    }, "set", function(v) {
      return cljs.core.into.call(null, cljs.core.PersistentHashSet.EMPTY, v);
    }, "list", function(v) {
      return cljs.core.into.call(null, cljs.core.List.EMPTY, v.reverse());
    }, "cmap", function(v) {
      var i = 0;
      var ret = cljs.core.transient$.call(null, cljs.core.PersistentArrayMap.EMPTY);
      while (true) {
        if (i < v.length) {
          var G__23826 = i + 2;
          var G__23827 = cljs.core.assoc_BANG_.call(null, ret, v[i], v[i + 1]);
          i = G__23826;
          ret = G__23827;
          continue;
        } else {
          return cljs.core.persistent_BANG_.call(null, ret);
        }
        break;
      }
    }], null), (new cljs.core.Keyword(null, "handlers", "handlers", 79528781)).cljs$core$IFn$_invoke$arity$1(opts)))}, cljs.core.clj__GT_js.call(null, cljs.core.dissoc.call(null, opts, new cljs.core.Keyword(null, "handlers", "handlers", 79528781)))));
  };
  reader = function(type, opts) {
    switch(arguments.length) {
      case 1:
        return reader__1.call(this, type);
      case 2:
        return reader__2.call(this, type, opts);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  reader.cljs$core$IFn$_invoke$arity$1 = reader__1;
  reader.cljs$core$IFn$_invoke$arity$2 = reader__2;
  return reader;
}();
cognitect.transit.read = function read(r, str) {
  return r.read(str);
};
cognitect.transit.KeywordHandler = function() {
};
cognitect.transit.KeywordHandler.prototype.tag = function(v) {
  var self__ = this;
  var _ = this;
  return ":";
};
cognitect.transit.KeywordHandler.prototype.rep = function(v) {
  var self__ = this;
  var _ = this;
  return v.fqn;
};
cognitect.transit.KeywordHandler.prototype.stringRep = function(v) {
  var self__ = this;
  var _ = this;
  return v.fqn;
};
cognitect.transit.KeywordHandler.cljs$lang$type = true;
cognitect.transit.KeywordHandler.cljs$lang$ctorStr = "cognitect.transit/KeywordHandler";
cognitect.transit.KeywordHandler.cljs$lang$ctorPrWriter = function(this__8091__auto__, writer__8092__auto__, opt__8093__auto__) {
  return cljs.core._write.call(null, writer__8092__auto__, "cognitect.transit/KeywordHandler");
};
cognitect.transit.__GT_KeywordHandler = function __GT_KeywordHandler() {
  return new cognitect.transit.KeywordHandler;
};
cognitect.transit.SymbolHandler = function() {
};
cognitect.transit.SymbolHandler.prototype.tag = function(v) {
  var self__ = this;
  var _ = this;
  return "$";
};
cognitect.transit.SymbolHandler.prototype.rep = function(v) {
  var self__ = this;
  var _ = this;
  return v.str;
};
cognitect.transit.SymbolHandler.prototype.stringRep = function(v) {
  var self__ = this;
  var _ = this;
  return v.str;
};
cognitect.transit.SymbolHandler.cljs$lang$type = true;
cognitect.transit.SymbolHandler.cljs$lang$ctorStr = "cognitect.transit/SymbolHandler";
cognitect.transit.SymbolHandler.cljs$lang$ctorPrWriter = function(this__8091__auto__, writer__8092__auto__, opt__8093__auto__) {
  return cljs.core._write.call(null, writer__8092__auto__, "cognitect.transit/SymbolHandler");
};
cognitect.transit.__GT_SymbolHandler = function __GT_SymbolHandler() {
  return new cognitect.transit.SymbolHandler;
};
cognitect.transit.ListHandler = function() {
};
cognitect.transit.ListHandler.prototype.tag = function(v) {
  var self__ = this;
  var _ = this;
  return "list";
};
cognitect.transit.ListHandler.prototype.rep = function(v) {
  var self__ = this;
  var _ = this;
  var ret = [];
  var seq__23828_23832 = cljs.core.seq.call(null, v);
  var chunk__23829_23833 = null;
  var count__23830_23834 = 0;
  var i__23831_23835 = 0;
  while (true) {
    if (i__23831_23835 < count__23830_23834) {
      var x_23836 = cljs.core._nth.call(null, chunk__23829_23833, i__23831_23835);
      ret.push(x_23836);
      var G__23837 = seq__23828_23832;
      var G__23838 = chunk__23829_23833;
      var G__23839 = count__23830_23834;
      var G__23840 = i__23831_23835 + 1;
      seq__23828_23832 = G__23837;
      chunk__23829_23833 = G__23838;
      count__23830_23834 = G__23839;
      i__23831_23835 = G__23840;
      continue;
    } else {
      var temp__4126__auto___23841 = cljs.core.seq.call(null, seq__23828_23832);
      if (temp__4126__auto___23841) {
        var seq__23828_23842__$1 = temp__4126__auto___23841;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__23828_23842__$1)) {
          var c__8291__auto___23843 = cljs.core.chunk_first.call(null, seq__23828_23842__$1);
          var G__23844 = cljs.core.chunk_rest.call(null, seq__23828_23842__$1);
          var G__23845 = c__8291__auto___23843;
          var G__23846 = cljs.core.count.call(null, c__8291__auto___23843);
          var G__23847 = 0;
          seq__23828_23832 = G__23844;
          chunk__23829_23833 = G__23845;
          count__23830_23834 = G__23846;
          i__23831_23835 = G__23847;
          continue;
        } else {
          var x_23848 = cljs.core.first.call(null, seq__23828_23842__$1);
          ret.push(x_23848);
          var G__23849 = cljs.core.next.call(null, seq__23828_23842__$1);
          var G__23850 = null;
          var G__23851 = 0;
          var G__23852 = 0;
          seq__23828_23832 = G__23849;
          chunk__23829_23833 = G__23850;
          count__23830_23834 = G__23851;
          i__23831_23835 = G__23852;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return com.cognitect.transit.tagged.call(null, "array", ret);
};
cognitect.transit.ListHandler.prototype.stringRep = function(v) {
  var self__ = this;
  var _ = this;
  return null;
};
cognitect.transit.ListHandler.cljs$lang$type = true;
cognitect.transit.ListHandler.cljs$lang$ctorStr = "cognitect.transit/ListHandler";
cognitect.transit.ListHandler.cljs$lang$ctorPrWriter = function(this__8091__auto__, writer__8092__auto__, opt__8093__auto__) {
  return cljs.core._write.call(null, writer__8092__auto__, "cognitect.transit/ListHandler");
};
cognitect.transit.__GT_ListHandler = function __GT_ListHandler() {
  return new cognitect.transit.ListHandler;
};
cognitect.transit.MapHandler = function() {
};
cognitect.transit.MapHandler.prototype.tag = function(v) {
  var self__ = this;
  var _ = this;
  return "map";
};
cognitect.transit.MapHandler.prototype.rep = function(v) {
  var self__ = this;
  var _ = this;
  return v;
};
cognitect.transit.MapHandler.prototype.stringRep = function(v) {
  var self__ = this;
  var _ = this;
  return null;
};
cognitect.transit.MapHandler.cljs$lang$type = true;
cognitect.transit.MapHandler.cljs$lang$ctorStr = "cognitect.transit/MapHandler";
cognitect.transit.MapHandler.cljs$lang$ctorPrWriter = function(this__8091__auto__, writer__8092__auto__, opt__8093__auto__) {
  return cljs.core._write.call(null, writer__8092__auto__, "cognitect.transit/MapHandler");
};
cognitect.transit.__GT_MapHandler = function __GT_MapHandler() {
  return new cognitect.transit.MapHandler;
};
cognitect.transit.SetHandler = function() {
};
cognitect.transit.SetHandler.prototype.tag = function(v) {
  var self__ = this;
  var _ = this;
  return "set";
};
cognitect.transit.SetHandler.prototype.rep = function(v) {
  var self__ = this;
  var _ = this;
  var ret = [];
  var seq__23853_23857 = cljs.core.seq.call(null, v);
  var chunk__23854_23858 = null;
  var count__23855_23859 = 0;
  var i__23856_23860 = 0;
  while (true) {
    if (i__23856_23860 < count__23855_23859) {
      var x_23861 = cljs.core._nth.call(null, chunk__23854_23858, i__23856_23860);
      ret.push(x_23861);
      var G__23862 = seq__23853_23857;
      var G__23863 = chunk__23854_23858;
      var G__23864 = count__23855_23859;
      var G__23865 = i__23856_23860 + 1;
      seq__23853_23857 = G__23862;
      chunk__23854_23858 = G__23863;
      count__23855_23859 = G__23864;
      i__23856_23860 = G__23865;
      continue;
    } else {
      var temp__4126__auto___23866 = cljs.core.seq.call(null, seq__23853_23857);
      if (temp__4126__auto___23866) {
        var seq__23853_23867__$1 = temp__4126__auto___23866;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__23853_23867__$1)) {
          var c__8291__auto___23868 = cljs.core.chunk_first.call(null, seq__23853_23867__$1);
          var G__23869 = cljs.core.chunk_rest.call(null, seq__23853_23867__$1);
          var G__23870 = c__8291__auto___23868;
          var G__23871 = cljs.core.count.call(null, c__8291__auto___23868);
          var G__23872 = 0;
          seq__23853_23857 = G__23869;
          chunk__23854_23858 = G__23870;
          count__23855_23859 = G__23871;
          i__23856_23860 = G__23872;
          continue;
        } else {
          var x_23873 = cljs.core.first.call(null, seq__23853_23867__$1);
          ret.push(x_23873);
          var G__23874 = cljs.core.next.call(null, seq__23853_23867__$1);
          var G__23875 = null;
          var G__23876 = 0;
          var G__23877 = 0;
          seq__23853_23857 = G__23874;
          chunk__23854_23858 = G__23875;
          count__23855_23859 = G__23876;
          i__23856_23860 = G__23877;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return com.cognitect.transit.tagged.call(null, "array", ret);
};
cognitect.transit.SetHandler.prototype.stringRep = function() {
  var self__ = this;
  var v = this;
  return null;
};
cognitect.transit.SetHandler.cljs$lang$type = true;
cognitect.transit.SetHandler.cljs$lang$ctorStr = "cognitect.transit/SetHandler";
cognitect.transit.SetHandler.cljs$lang$ctorPrWriter = function(this__8091__auto__, writer__8092__auto__, opt__8093__auto__) {
  return cljs.core._write.call(null, writer__8092__auto__, "cognitect.transit/SetHandler");
};
cognitect.transit.__GT_SetHandler = function __GT_SetHandler() {
  return new cognitect.transit.SetHandler;
};
cognitect.transit.VectorHandler = function() {
};
cognitect.transit.VectorHandler.prototype.tag = function(v) {
  var self__ = this;
  var _ = this;
  return "array";
};
cognitect.transit.VectorHandler.prototype.rep = function(v) {
  var self__ = this;
  var _ = this;
  var ret = [];
  var seq__23878_23882 = cljs.core.seq.call(null, v);
  var chunk__23879_23883 = null;
  var count__23880_23884 = 0;
  var i__23881_23885 = 0;
  while (true) {
    if (i__23881_23885 < count__23880_23884) {
      var x_23886 = cljs.core._nth.call(null, chunk__23879_23883, i__23881_23885);
      ret.push(x_23886);
      var G__23887 = seq__23878_23882;
      var G__23888 = chunk__23879_23883;
      var G__23889 = count__23880_23884;
      var G__23890 = i__23881_23885 + 1;
      seq__23878_23882 = G__23887;
      chunk__23879_23883 = G__23888;
      count__23880_23884 = G__23889;
      i__23881_23885 = G__23890;
      continue;
    } else {
      var temp__4126__auto___23891 = cljs.core.seq.call(null, seq__23878_23882);
      if (temp__4126__auto___23891) {
        var seq__23878_23892__$1 = temp__4126__auto___23891;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__23878_23892__$1)) {
          var c__8291__auto___23893 = cljs.core.chunk_first.call(null, seq__23878_23892__$1);
          var G__23894 = cljs.core.chunk_rest.call(null, seq__23878_23892__$1);
          var G__23895 = c__8291__auto___23893;
          var G__23896 = cljs.core.count.call(null, c__8291__auto___23893);
          var G__23897 = 0;
          seq__23878_23882 = G__23894;
          chunk__23879_23883 = G__23895;
          count__23880_23884 = G__23896;
          i__23881_23885 = G__23897;
          continue;
        } else {
          var x_23898 = cljs.core.first.call(null, seq__23878_23892__$1);
          ret.push(x_23898);
          var G__23899 = cljs.core.next.call(null, seq__23878_23892__$1);
          var G__23900 = null;
          var G__23901 = 0;
          var G__23902 = 0;
          seq__23878_23882 = G__23899;
          chunk__23879_23883 = G__23900;
          count__23880_23884 = G__23901;
          i__23881_23885 = G__23902;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return ret;
};
cognitect.transit.VectorHandler.prototype.stringRep = function(v) {
  var self__ = this;
  var _ = this;
  return null;
};
cognitect.transit.VectorHandler.cljs$lang$type = true;
cognitect.transit.VectorHandler.cljs$lang$ctorStr = "cognitect.transit/VectorHandler";
cognitect.transit.VectorHandler.cljs$lang$ctorPrWriter = function(this__8091__auto__, writer__8092__auto__, opt__8093__auto__) {
  return cljs.core._write.call(null, writer__8092__auto__, "cognitect.transit/VectorHandler");
};
cognitect.transit.__GT_VectorHandler = function __GT_VectorHandler() {
  return new cognitect.transit.VectorHandler;
};
cognitect.transit.UUIDHandler = function() {
};
cognitect.transit.UUIDHandler.prototype.tag = function(v) {
  var self__ = this;
  var _ = this;
  return "u";
};
cognitect.transit.UUIDHandler.prototype.rep = function(v) {
  var self__ = this;
  var _ = this;
  return v.uuid;
};
cognitect.transit.UUIDHandler.prototype.stringRep = function(v) {
  var self__ = this;
  var this$ = this;
  return this$.rep(v);
};
cognitect.transit.UUIDHandler.cljs$lang$type = true;
cognitect.transit.UUIDHandler.cljs$lang$ctorStr = "cognitect.transit/UUIDHandler";
cognitect.transit.UUIDHandler.cljs$lang$ctorPrWriter = function(this__8091__auto__, writer__8092__auto__, opt__8093__auto__) {
  return cljs.core._write.call(null, writer__8092__auto__, "cognitect.transit/UUIDHandler");
};
cognitect.transit.__GT_UUIDHandler = function __GT_UUIDHandler() {
  return new cognitect.transit.UUIDHandler;
};
cognitect.transit.writer = function() {
  var writer = null;
  var writer__1 = function(type) {
    return writer.call(null, type, null);
  };
  var writer__2 = function(type, opts) {
    var keyword_handler = new cognitect.transit.KeywordHandler;
    var symbol_handler = new cognitect.transit.SymbolHandler;
    var list_handler = new cognitect.transit.ListHandler;
    var map_handler = new cognitect.transit.MapHandler;
    var set_handler = new cognitect.transit.SetHandler;
    var vector_handler = new cognitect.transit.VectorHandler;
    var uuid_handler = new cognitect.transit.UUIDHandler;
    var handlers = cljs.core.merge.call(null, cljs.core.PersistentHashMap.fromArrays([cljs.core.PersistentHashMap, cljs.core.Cons, cljs.core.PersistentArrayMap, cljs.core.NodeSeq, cljs.core.PersistentQueue, cljs.core.IndexedSeq, cljs.core.Keyword, cljs.core.EmptyList, cljs.core.LazySeq, cljs.core.Subvec, cljs.core.PersistentQueueSeq, cljs.core.ArrayNodeSeq, cljs.core.ValSeq, cljs.core.PersistentArrayMapSeq, cljs.core.PersistentVector, cljs.core.List, cljs.core.RSeq, cljs.core.PersistentHashSet, cljs.core.PersistentTreeMap, 
    cljs.core.KeySeq, cljs.core.ChunkedSeq, cljs.core.PersistentTreeSet, cljs.core.ChunkedCons, cljs.core.Symbol, cljs.core.UUID, cljs.core.Range, cljs.core.PersistentTreeMapSeq], [map_handler, list_handler, map_handler, list_handler, list_handler, list_handler, keyword_handler, list_handler, list_handler, vector_handler, list_handler, list_handler, list_handler, list_handler, vector_handler, list_handler, list_handler, set_handler, map_handler, list_handler, list_handler, set_handler, list_handler, 
    symbol_handler, uuid_handler, list_handler, list_handler]), (new cljs.core.Keyword(null, "handlers", "handlers", 79528781)).cljs$core$IFn$_invoke$arity$1(opts));
    return com.cognitect.transit.writer.call(null, cljs.core.name.call(null, type), cognitect.transit.opts_merge.call(null, {"unpack":function(keyword_handler, symbol_handler, list_handler, map_handler, set_handler, vector_handler, uuid_handler, handlers) {
      return function(x) {
        if (x instanceof cljs.core.PersistentArrayMap) {
          return x.arr;
        } else {
          return false;
        }
      };
    }(keyword_handler, symbol_handler, list_handler, map_handler, set_handler, vector_handler, uuid_handler, handlers), "handlers":function() {
      var x23912 = cljs.core.clone.call(null, handlers);
      x23912.forEach = function(x23912, keyword_handler, symbol_handler, list_handler, map_handler, set_handler, vector_handler, uuid_handler, handlers) {
        return function(f) {
          var coll = this;
          var seq__23913 = cljs.core.seq.call(null, coll);
          var chunk__23914 = null;
          var count__23915 = 0;
          var i__23916 = 0;
          while (true) {
            if (i__23916 < count__23915) {
              var vec__23917 = cljs.core._nth.call(null, chunk__23914, i__23916);
              var k = cljs.core.nth.call(null, vec__23917, 0, null);
              var v = cljs.core.nth.call(null, vec__23917, 1, null);
              f.call(null, v, k);
              var G__23919 = seq__23913;
              var G__23920 = chunk__23914;
              var G__23921 = count__23915;
              var G__23922 = i__23916 + 1;
              seq__23913 = G__23919;
              chunk__23914 = G__23920;
              count__23915 = G__23921;
              i__23916 = G__23922;
              continue;
            } else {
              var temp__4126__auto__ = cljs.core.seq.call(null, seq__23913);
              if (temp__4126__auto__) {
                var seq__23913__$1 = temp__4126__auto__;
                if (cljs.core.chunked_seq_QMARK_.call(null, seq__23913__$1)) {
                  var c__8291__auto__ = cljs.core.chunk_first.call(null, seq__23913__$1);
                  var G__23923 = cljs.core.chunk_rest.call(null, seq__23913__$1);
                  var G__23924 = c__8291__auto__;
                  var G__23925 = cljs.core.count.call(null, c__8291__auto__);
                  var G__23926 = 0;
                  seq__23913 = G__23923;
                  chunk__23914 = G__23924;
                  count__23915 = G__23925;
                  i__23916 = G__23926;
                  continue;
                } else {
                  var vec__23918 = cljs.core.first.call(null, seq__23913__$1);
                  var k = cljs.core.nth.call(null, vec__23918, 0, null);
                  var v = cljs.core.nth.call(null, vec__23918, 1, null);
                  f.call(null, v, k);
                  var G__23927 = cljs.core.next.call(null, seq__23913__$1);
                  var G__23928 = null;
                  var G__23929 = 0;
                  var G__23930 = 0;
                  seq__23913 = G__23927;
                  chunk__23914 = G__23928;
                  count__23915 = G__23929;
                  i__23916 = G__23930;
                  continue;
                }
              } else {
                return null;
              }
            }
            break;
          }
        };
      }(x23912, keyword_handler, symbol_handler, list_handler, map_handler, set_handler, vector_handler, uuid_handler, handlers);
      return x23912;
    }(), "objectBuilder":function(keyword_handler, symbol_handler, list_handler, map_handler, set_handler, vector_handler, uuid_handler, handlers) {
      return function(m, kfn, vfn) {
        return cljs.core.reduce_kv.call(null, function(keyword_handler, symbol_handler, list_handler, map_handler, set_handler, vector_handler, uuid_handler, handlers) {
          return function(obj, k, v) {
            var G__23911 = obj;
            G__23911.push(kfn.call(null, k), vfn.call(null, v));
            return G__23911;
          };
        }(keyword_handler, symbol_handler, list_handler, map_handler, set_handler, vector_handler, uuid_handler, handlers), ["^ "], m);
      };
    }(keyword_handler, symbol_handler, list_handler, map_handler, set_handler, vector_handler, uuid_handler, handlers)}, cljs.core.clj__GT_js.call(null, cljs.core.dissoc.call(null, opts, new cljs.core.Keyword(null, "handlers", "handlers", 79528781)))));
  };
  writer = function(type, opts) {
    switch(arguments.length) {
      case 1:
        return writer__1.call(this, type);
      case 2:
        return writer__2.call(this, type, opts);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  writer.cljs$core$IFn$_invoke$arity$1 = writer__1;
  writer.cljs$core$IFn$_invoke$arity$2 = writer__2;
  return writer;
}();
cognitect.transit.write = function write(w, o) {
  return w.write(o);
};
cognitect.transit.read_handler = function read_handler(from_rep) {
  return from_rep;
};
cognitect.transit.write_handler = function() {
  var write_handler = null;
  var write_handler__2 = function(tag_fn, rep_fn) {
    return write_handler.call(null, tag_fn, rep_fn, null, null);
  };
  var write_handler__3 = function(tag_fn, rep_fn, str_rep_fn) {
    return write_handler.call(null, tag_fn, rep_fn, str_rep_fn, null);
  };
  var write_handler__4 = function(tag_fn, rep_fn, str_rep_fn, verbose_handler_fn) {
    if (typeof cognitect.transit.t23934 !== "undefined") {
    } else {
      cognitect.transit.t23934 = function(verbose_handler_fn, str_rep_fn, rep_fn, tag_fn, write_handler, meta23935) {
        this.verbose_handler_fn = verbose_handler_fn;
        this.str_rep_fn = str_rep_fn;
        this.rep_fn = rep_fn;
        this.tag_fn = tag_fn;
        this.write_handler = write_handler;
        this.meta23935 = meta23935;
        this.cljs$lang$protocol_mask$partition1$ = 0;
        this.cljs$lang$protocol_mask$partition0$ = 393216;
      };
      cognitect.transit.t23934.prototype.tag = function(o) {
        var self__ = this;
        var _ = this;
        return self__.tag_fn.call(null, o);
      };
      cognitect.transit.t23934.prototype.rep = function(o) {
        var self__ = this;
        var _ = this;
        return self__.rep_fn.call(null, o);
      };
      cognitect.transit.t23934.prototype.stringRep = function(o) {
        var self__ = this;
        var _ = this;
        if (cljs.core.truth_(self__.str_rep_fn)) {
          return self__.str_rep_fn.call(null, o);
        } else {
          return null;
        }
      };
      cognitect.transit.t23934.prototype.getVerboseHandler = function() {
        var self__ = this;
        var _ = this;
        if (cljs.core.truth_(self__.verbose_handler_fn)) {
          return self__.verbose_handler_fn.call(null);
        } else {
          return null;
        }
      };
      cognitect.transit.t23934.prototype.cljs$core$IMeta$_meta$arity$1 = function(_23936) {
        var self__ = this;
        var _23936__$1 = this;
        return self__.meta23935;
      };
      cognitect.transit.t23934.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_23936, meta23935__$1) {
        var self__ = this;
        var _23936__$1 = this;
        return new cognitect.transit.t23934(self__.verbose_handler_fn, self__.str_rep_fn, self__.rep_fn, self__.tag_fn, self__.write_handler, meta23935__$1);
      };
      cognitect.transit.t23934.cljs$lang$type = true;
      cognitect.transit.t23934.cljs$lang$ctorStr = "cognitect.transit/t23934";
      cognitect.transit.t23934.cljs$lang$ctorPrWriter = function(this__8091__auto__, writer__8092__auto__, opt__8093__auto__) {
        return cljs.core._write.call(null, writer__8092__auto__, "cognitect.transit/t23934");
      };
      cognitect.transit.__GT_t23934 = function __GT_t23934(verbose_handler_fn__$1, str_rep_fn__$1, rep_fn__$1, tag_fn__$1, write_handler__$1, meta23935) {
        return new cognitect.transit.t23934(verbose_handler_fn__$1, str_rep_fn__$1, rep_fn__$1, tag_fn__$1, write_handler__$1, meta23935);
      };
    }
    return new cognitect.transit.t23934(verbose_handler_fn, str_rep_fn, rep_fn, tag_fn, write_handler, cljs.core.PersistentArrayMap.EMPTY);
  };
  write_handler = function(tag_fn, rep_fn, str_rep_fn, verbose_handler_fn) {
    switch(arguments.length) {
      case 2:
        return write_handler__2.call(this, tag_fn, rep_fn);
      case 3:
        return write_handler__3.call(this, tag_fn, rep_fn, str_rep_fn);
      case 4:
        return write_handler__4.call(this, tag_fn, rep_fn, str_rep_fn, verbose_handler_fn);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  write_handler.cljs$core$IFn$_invoke$arity$2 = write_handler__2;
  write_handler.cljs$core$IFn$_invoke$arity$3 = write_handler__3;
  write_handler.cljs$core$IFn$_invoke$arity$4 = write_handler__4;
  return write_handler;
}();
cognitect.transit.tagged_value = function tagged_value(tag, rep) {
  return com.cognitect.transit.types.taggedValue.call(null, tag, rep);
};
cognitect.transit.tagged_value_QMARK_ = function tagged_value_QMARK_(x) {
  return com.cognitect.transit.types.isTaggedValue.call(null, x);
};
cognitect.transit.integer = function integer(s) {
  return com.cognitect.transit.types.integer.call(null, s);
};
cognitect.transit.integer_QMARK_ = function integer_QMARK_(x) {
  return com.cognitect.transit.types.isInteger.call(null, x);
};
cognitect.transit.bigint = function bigint(s) {
  return com.cognitect.transit.types.bigInteger.call(null, s);
};
cognitect.transit.bigint_QMARK_ = function bigint_QMARK_(x) {
  return com.cognitect.transit.types.isBigInteger.call(null, x);
};
cognitect.transit.bigdec = function bigdec(s) {
  return com.cognitect.transit.types.bigDecimalValue.call(null, s);
};
cognitect.transit.bigdec_QMARK_ = function bigdec_QMARK_(x) {
  return com.cognitect.transit.types.isBigDecimal.call(null, x);
};
cognitect.transit.uri = function uri(s) {
  return com.cognitect.transit.types.uri.call(null, s);
};
cognitect.transit.uri_QMARK_ = function uri_QMARK_(x) {
  return com.cognitect.transit.types.isURI.call(null, x);
};
cognitect.transit.uuid = function uuid(s) {
  return com.cognitect.transit.types.uuid.call(null, s);
};
cognitect.transit.uuid_QMARK_ = function uuid_QMARK_(x) {
  return com.cognitect.transit.types.isUUID.call(null, x);
};
cognitect.transit.binary = function binary(s) {
  return com.cognitect.transit.types.binary.call(null, s);
};
cognitect.transit.binary_QMARK_ = function binary_QMARK_(x) {
  return com.cognitect.transit.types.isBinary.call(null, x);
};
cognitect.transit.quoted = function quoted(x) {
  return com.cognitect.transit.types.quoted.call(null, x);
};
cognitect.transit.quoted_QMARK_ = function quoted_QMARK_(x) {
  return com.cognitect.transit.types.isQuoted.call(null, x);
};
cognitect.transit.link = function link(x) {
  return com.cognitect.transit.types.link.call(null, x);
};
cognitect.transit.link_QMARK_ = function link_QMARK_(x) {
  return com.cognitect.transit.types.isLink.call(null, x);
};
goog.provide("cljs_http.util");
goog.require("cljs.core");
goog.require("no.en.core");
goog.require("goog.userAgent");
goog.require("cognitect.transit");
goog.require("clojure.string");
goog.require("goog.Uri");
cljs_http.util.basic_auth = function basic_auth(credentials) {
  if (cljs.core.truth_(credentials)) {
    var vec__23783 = cljs.core.map_QMARK_.call(null, credentials) ? cljs.core.map.call(null, credentials, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "username", "username", 1605666410), new cljs.core.Keyword(null, "password", "password", 417022471)], null)) : credentials;
    var username = cljs.core.nth.call(null, vec__23783, 0, null);
    var password = cljs.core.nth.call(null, vec__23783, 1, null);
    return[cljs.core.str("Basic "), cljs.core.str(no.en.core.base64_encode.call(null, [cljs.core.str(username), cljs.core.str(":"), cljs.core.str(password)].join("")))].join("");
  } else {
    return null;
  }
};
cljs_http.util.build_url = function build_url(p__23784) {
  var map__23787 = p__23784;
  var map__23787__$1 = cljs.core.seq_QMARK_.call(null, map__23787) ? cljs.core.apply.call(null, cljs.core.hash_map, map__23787) : map__23787;
  var query_string = cljs.core.get.call(null, map__23787__$1, new cljs.core.Keyword(null, "query-string", "query-string", -1018845061));
  var uri = cljs.core.get.call(null, map__23787__$1, new cljs.core.Keyword(null, "uri", "uri", -774711847));
  var server_port = cljs.core.get.call(null, map__23787__$1, new cljs.core.Keyword(null, "server-port", "server-port", 663745648));
  var server_name = cljs.core.get.call(null, map__23787__$1, new cljs.core.Keyword(null, "server-name", "server-name", -1012104295));
  var scheme = cljs.core.get.call(null, map__23787__$1, new cljs.core.Keyword(null, "scheme", "scheme", 90199613));
  return[cljs.core.str(function() {
    var G__23788 = new goog.Uri;
    G__23788.setScheme(cljs.core.name.call(null, function() {
      var or__7504__auto__ = scheme;
      if (cljs.core.truth_(or__7504__auto__)) {
        return or__7504__auto__;
      } else {
        return new cljs.core.Keyword(null, "http", "http", 382524695);
      }
    }()));
    G__23788.setDomain(server_name);
    G__23788.setPort(server_port);
    G__23788.setPath(uri);
    G__23788.setQuery(query_string, true);
    return G__23788;
  }())].join("");
};
cljs_http.util.camelize = function camelize(s) {
  return clojure.string.join.call(null, "-", cljs.core.map.call(null, clojure.string.capitalize, clojure.string.split.call(null, [cljs.core.str(s)].join(""), /-/)));
};
cljs_http.util.build_headers = function build_headers(m) {
  return cljs.core.clj__GT_js.call(null, cljs.core.zipmap.call(null, cljs.core.map.call(null, cljs_http.util.camelize, cljs.core.keys.call(null, m)), cljs.core.vals.call(null, m)));
};
cljs_http.util.user_agent = function user_agent() {
  return goog.userAgent.getUserAgentString();
};
cljs_http.util.android_QMARK_ = function android_QMARK_() {
  return cljs.core.re_matches.call(null, /.*android.*/i, cljs_http.util.user_agent.call(null));
};
cljs_http.util.transit_decode = function transit_decode(s, type, opts) {
  var rdr = cognitect.transit.reader.call(null, type, opts);
  return cognitect.transit.read.call(null, rdr, s);
};
cljs_http.util.transit_encode = function transit_encode(x, type, opts) {
  var wrtr = cognitect.transit.writer.call(null, type, opts);
  return cognitect.transit.write.call(null, wrtr, x);
};
cljs_http.util.json_decode = function json_decode(s) {
  var temp__4124__auto__ = cljs.core.not.call(null, clojure.string.blank_QMARK_.call(null, s)) ? JSON.parse(s) : null;
  if (cljs.core.truth_(temp__4124__auto__)) {
    var v = temp__4124__auto__;
    return cljs.core.js__GT_clj.call(null, v, new cljs.core.Keyword(null, "keywordize-keys", "keywordize-keys", 1310784252), true);
  } else {
    return null;
  }
};
cljs_http.util.json_encode = function json_encode(x) {
  return JSON.stringify(cljs.core.clj__GT_js.call(null, x));
};
cljs_http.util.parse_headers = function parse_headers(headers) {
  return cljs.core.reduce.call(null, function(p1__23790_SHARP_, p2__23789_SHARP_) {
    var vec__23792 = clojure.string.split.call(null, p2__23789_SHARP_, /:\s+/);
    var k = cljs.core.nth.call(null, vec__23792, 0, null);
    var v = cljs.core.nth.call(null, vec__23792, 1, null);
    if (cljs.core.truth_(function() {
      var or__7504__auto__ = clojure.string.blank_QMARK_.call(null, k);
      if (cljs.core.truth_(or__7504__auto__)) {
        return or__7504__auto__;
      } else {
        return clojure.string.blank_QMARK_.call(null, v);
      }
    }())) {
      return p1__23790_SHARP_;
    } else {
      return cljs.core.assoc.call(null, p1__23790_SHARP_, clojure.string.lower_case.call(null, k), v);
    }
  }, cljs.core.PersistentArrayMap.EMPTY, clojure.string.split.call(null, function() {
    var or__7504__auto__ = headers;
    if (cljs.core.truth_(or__7504__auto__)) {
      return or__7504__auto__;
    } else {
      return "";
    }
  }(), /(\n)|(\r)|(\r\n)|(\n\r)/));
};
goog.provide("cljs_http.core");
goog.require("cljs.core");
goog.require("cljs.core.async");
goog.require("cljs_http.util");
goog.require("goog.net.EventType");
goog.require("goog.net.XhrIo");
cljs_http.core.pending_requests = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
cljs_http.core.abort_BANG_ = function abort_BANG_(channel) {
  var temp__4126__auto__ = cljs.core.deref.call(null, cljs_http.core.pending_requests).call(null, channel);
  if (cljs.core.truth_(temp__4126__auto__)) {
    var xhr = temp__4126__auto__;
    cljs.core.swap_BANG_.call(null, cljs_http.core.pending_requests, cljs.core.dissoc, channel);
    cljs.core.async.close_BANG_.call(null, channel);
    return xhr.abort();
  } else {
    return null;
  }
};
cljs_http.core.aborted_QMARK_ = function aborted_QMARK_(xhr) {
  return cljs.core._EQ_.call(null, xhr.getLastErrorCode(), goog.net.ErrorCode.ABORT);
};
cljs_http.core.request = function request(p__23972) {
  var map__23999 = p__23972;
  var map__23999__$1 = cljs.core.seq_QMARK_.call(null, map__23999) ? cljs.core.apply.call(null, cljs.core.hash_map, map__23999) : map__23999;
  var request__$1 = map__23999__$1;
  var cancel = cljs.core.get.call(null, map__23999__$1, new cljs.core.Keyword(null, "cancel", "cancel", -1964088360));
  var with_credentials_QMARK_ = cljs.core.get.call(null, map__23999__$1, new cljs.core.Keyword(null, "with-credentials?", "with-credentials?", -1773202222));
  var body = cljs.core.get.call(null, map__23999__$1, new cljs.core.Keyword(null, "body", "body", -2049205669));
  var headers = cljs.core.get.call(null, map__23999__$1, new cljs.core.Keyword(null, "headers", "headers", -835030129));
  var request_method = cljs.core.get.call(null, map__23999__$1, new cljs.core.Keyword(null, "request-method", "request-method", 1764796830));
  var channel = cljs.core.async.chan.call(null);
  var request_url = cljs_http.util.build_url.call(null, request__$1);
  var method = cljs.core.name.call(null, function() {
    var or__7504__auto__ = request_method;
    if (cljs.core.truth_(or__7504__auto__)) {
      return or__7504__auto__;
    } else {
      return new cljs.core.Keyword(null, "get", "get", 1683182755);
    }
  }());
  var timeout = function() {
    var or__7504__auto__ = (new cljs.core.Keyword(null, "timeout", "timeout", -318625318)).cljs$core$IFn$_invoke$arity$1(request__$1);
    if (cljs.core.truth_(or__7504__auto__)) {
      return or__7504__auto__;
    } else {
      return 0;
    }
  }();
  var headers__$1 = cljs_http.util.build_headers.call(null, headers);
  var send_credentials = with_credentials_QMARK_ == null ? true : with_credentials_QMARK_;
  var xhr = function() {
    var G__24000 = new goog.net.XhrIo;
    G__24000.setTimeoutInterval(timeout);
    G__24000.setWithCredentials(send_credentials);
    return G__24000;
  }();
  cljs.core.swap_BANG_.call(null, cljs_http.core.pending_requests, cljs.core.assoc, channel, xhr);
  xhr.listen(goog.net.EventType.COMPLETE, function(channel, request_url, method, timeout, headers__$1, send_credentials, xhr, map__23999, map__23999__$1, request__$1, cancel, with_credentials_QMARK_, body, headers, request_method) {
    return function(evt) {
      var target = evt.target;
      var response = new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "status", "status", -1997798413), target.getStatus(), new cljs.core.Keyword(null, "success", "success", 1890645906), target.isSuccess(), new cljs.core.Keyword(null, "body", "body", -2049205669), target.getResponseText(), new cljs.core.Keyword(null, "headers", "headers", -835030129), cljs_http.util.parse_headers.call(null, target.getAllResponseHeaders()), new cljs.core.Keyword(null, "trace-redirects", "trace-redirects", 
      -1149427907), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [request_url, target.getLastUri()], null)], null);
      if (!cljs_http.core.aborted_QMARK_.call(null, xhr)) {
        cljs.core.async.put_BANG_.call(null, channel, response);
      } else {
      }
      cljs.core.swap_BANG_.call(null, cljs_http.core.pending_requests, cljs.core.dissoc, channel);
      if (cljs.core.truth_(cancel)) {
        cljs.core.async.close_BANG_.call(null, cancel);
      } else {
      }
      return cljs.core.async.close_BANG_.call(null, channel);
    };
  }(channel, request_url, method, timeout, headers__$1, send_credentials, xhr, map__23999, map__23999__$1, request__$1, cancel, with_credentials_QMARK_, body, headers, request_method));
  xhr.send(request_url, method, body, headers__$1);
  if (cljs.core.truth_(cancel)) {
    var c__10282__auto___24025 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__10282__auto___24025, channel, request_url, method, timeout, headers__$1, send_credentials, xhr, map__23999, map__23999__$1, request__$1, cancel, with_credentials_QMARK_, body, headers, request_method) {
      return function() {
        var f__10283__auto__ = function() {
          var switch__10226__auto__ = function(c__10282__auto___24025, channel, request_url, method, timeout, headers__$1, send_credentials, xhr, map__23999, map__23999__$1, request__$1, cancel, with_credentials_QMARK_, body, headers, request_method) {
            return function(state_24011) {
              var state_val_24012 = state_24011[1];
              if (state_val_24012 === 5) {
                var inst_24009 = state_24011[2];
                var state_24011__$1 = state_24011;
                return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_24011__$1, inst_24009);
              } else {
                if (state_val_24012 === 4) {
                  var state_24011__$1 = state_24011;
                  var statearr_24013_24026 = state_24011__$1;
                  statearr_24013_24026[2] = null;
                  statearr_24013_24026[1] = 5;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_24012 === 3) {
                    var inst_24006 = xhr.abort();
                    var state_24011__$1 = state_24011;
                    var statearr_24014_24027 = state_24011__$1;
                    statearr_24014_24027[2] = inst_24006;
                    statearr_24014_24027[1] = 5;
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_24012 === 2) {
                      var inst_24002 = state_24011[2];
                      var inst_24003 = xhr.isComplete();
                      var inst_24004 = cljs.core.not.call(null, inst_24003);
                      var state_24011__$1 = function() {
                        var statearr_24015 = state_24011;
                        statearr_24015[7] = inst_24002;
                        return statearr_24015;
                      }();
                      if (inst_24004) {
                        var statearr_24016_24028 = state_24011__$1;
                        statearr_24016_24028[1] = 3;
                      } else {
                        var statearr_24017_24029 = state_24011__$1;
                        statearr_24017_24029[1] = 4;
                      }
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_24012 === 1) {
                        var state_24011__$1 = state_24011;
                        return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_24011__$1, 2, cancel);
                      } else {
                        return null;
                      }
                    }
                  }
                }
              }
            };
          }(c__10282__auto___24025, channel, request_url, method, timeout, headers__$1, send_credentials, xhr, map__23999, map__23999__$1, request__$1, cancel, with_credentials_QMARK_, body, headers, request_method);
          return function(switch__10226__auto__, c__10282__auto___24025, channel, request_url, method, timeout, headers__$1, send_credentials, xhr, map__23999, map__23999__$1, request__$1, cancel, with_credentials_QMARK_, body, headers, request_method) {
            return function() {
              var state_machine__10227__auto__ = null;
              var state_machine__10227__auto____0 = function() {
                var statearr_24021 = [null, null, null, null, null, null, null, null];
                statearr_24021[0] = state_machine__10227__auto__;
                statearr_24021[1] = 1;
                return statearr_24021;
              };
              var state_machine__10227__auto____1 = function(state_24011) {
                while (true) {
                  var ret_value__10228__auto__ = function() {
                    try {
                      while (true) {
                        var result__10229__auto__ = switch__10226__auto__.call(null, state_24011);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__10229__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          continue;
                        } else {
                          return result__10229__auto__;
                        }
                        break;
                      }
                    } catch (e24022) {
                      if (e24022 instanceof Object) {
                        var ex__10230__auto__ = e24022;
                        var statearr_24023_24030 = state_24011;
                        statearr_24023_24030[5] = ex__10230__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_24011);
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        throw e24022;
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__10228__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                    var G__24031 = state_24011;
                    state_24011 = G__24031;
                    continue;
                  } else {
                    return ret_value__10228__auto__;
                  }
                  break;
                }
              };
              state_machine__10227__auto__ = function(state_24011) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__10227__auto____0.call(this);
                  case 1:
                    return state_machine__10227__auto____1.call(this, state_24011);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__10227__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__10227__auto____0;
              state_machine__10227__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__10227__auto____1;
              return state_machine__10227__auto__;
            }();
          }(switch__10226__auto__, c__10282__auto___24025, channel, request_url, method, timeout, headers__$1, send_credentials, xhr, map__23999, map__23999__$1, request__$1, cancel, with_credentials_QMARK_, body, headers, request_method);
        }();
        var state__10284__auto__ = function() {
          var statearr_24024 = f__10283__auto__.call(null);
          statearr_24024[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__10282__auto___24025;
          return statearr_24024;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__10284__auto__);
      };
    }(c__10282__auto___24025, channel, request_url, method, timeout, headers__$1, send_credentials, xhr, map__23999, map__23999__$1, request__$1, cancel, with_credentials_QMARK_, body, headers, request_method));
  } else {
  }
  return channel;
};
goog.provide("cljs_http.client");
goog.require("cljs.core");
goog.require("goog.Uri");
goog.require("cljs_http.core");
goog.require("cljs.core.async");
goog.require("no.en.core");
goog.require("cljs_http.util");
goog.require("clojure.string");
goog.require("cljs.reader");
cljs_http.client.if_pos = function if_pos(v) {
  if (cljs.core.truth_(function() {
    var and__7492__auto__ = v;
    if (cljs.core.truth_(and__7492__auto__)) {
      return v > 0;
    } else {
      return and__7492__auto__;
    }
  }())) {
    return v;
  } else {
    return null;
  }
};
cljs_http.client.parse_query_params = function parse_query_params(s) {
  if (cljs.core.not.call(null, clojure.string.blank_QMARK_.call(null, s))) {
    return cljs.core.reduce.call(null, function(p1__23654_SHARP_, p2__23653_SHARP_) {
      var vec__23656 = clojure.string.split.call(null, p2__23653_SHARP_, /=/);
      var k = cljs.core.nth.call(null, vec__23656, 0, null);
      var v = cljs.core.nth.call(null, vec__23656, 1, null);
      return cljs.core.assoc.call(null, p1__23654_SHARP_, cljs.core.keyword.call(null, no.en.core.url_decode.call(null, k)), no.en.core.url_decode.call(null, v));
    }, cljs.core.PersistentArrayMap.EMPTY, clojure.string.split.call(null, [cljs.core.str(s)].join(""), /&/));
  } else {
    return null;
  }
};
cljs_http.client.parse_url = function parse_url(url) {
  if (cljs.core.not.call(null, clojure.string.blank_QMARK_.call(null, url))) {
    var uri = goog.Uri.parse(url);
    var query_data = uri.getQueryData();
    return new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null, "scheme", "scheme", 90199613), cljs.core.keyword.call(null, uri.getScheme()), new cljs.core.Keyword(null, "server-name", "server-name", -1012104295), uri.getDomain(), new cljs.core.Keyword(null, "server-port", "server-port", 663745648), cljs_http.client.if_pos.call(null, uri.getPort()), new cljs.core.Keyword(null, "uri", "uri", -774711847), uri.getPath(), new cljs.core.Keyword(null, "query-string", "query-string", -1018845061), 
    cljs.core.not.call(null, query_data.isEmpty()) ? [cljs.core.str(query_data)].join("") : null, new cljs.core.Keyword(null, "query-params", "query-params", 900640534), cljs.core.not.call(null, query_data.isEmpty()) ? cljs_http.client.parse_query_params.call(null, [cljs.core.str(query_data)].join("")) : null], null);
  } else {
    return null;
  }
};
cljs_http.client.unexceptional_status_QMARK_ = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 13, [205, null, 206, null, 300, null, 204, null, 307, null, 303, null, 301, null, 201, null, 302, null, 202, null, 200, null, 203, null, 207, null], null), null);
cljs_http.client.encode_val = function encode_val(k, v) {
  return[cljs.core.str(no.en.core.url_encode.call(null, cljs.core.name.call(null, k))), cljs.core.str("\x3d"), cljs.core.str(no.en.core.url_encode.call(null, [cljs.core.str(v)].join("")))].join("");
};
cljs_http.client.encode_vals = function encode_vals(k, vs) {
  return clojure.string.join.call(null, "\x26", cljs.core.map.call(null, function(p1__23657_SHARP_) {
    return cljs_http.client.encode_val.call(null, k, p1__23657_SHARP_);
  }, vs));
};
cljs_http.client.encode_param = function encode_param(p__23658) {
  var vec__23660 = p__23658;
  var k = cljs.core.nth.call(null, vec__23660, 0, null);
  var v = cljs.core.nth.call(null, vec__23660, 1, null);
  if (cljs.core.coll_QMARK_.call(null, v)) {
    return cljs_http.client.encode_vals.call(null, k, v);
  } else {
    return cljs_http.client.encode_val.call(null, k, v);
  }
};
cljs_http.client.generate_query_string = function generate_query_string(params) {
  return clojure.string.join.call(null, "\x26", cljs.core.map.call(null, cljs_http.client.encode_param, params));
};
cljs_http.client.regex_char_esc_smap = function() {
  var esc_chars = "()*\x26^%$#!+";
  return cljs.core.zipmap.call(null, esc_chars, cljs.core.map.call(null, function(esc_chars) {
    return function(p1__23661_SHARP_) {
      return[cljs.core.str("\\"), cljs.core.str(p1__23661_SHARP_)].join("");
    };
  }(esc_chars), esc_chars));
}();
cljs_http.client.escape_special = function escape_special(string) {
  return cljs.core.reduce.call(null, cljs.core.str, cljs.core.replace.call(null, cljs_http.client.regex_char_esc_smap, string));
};
cljs_http.client.decode_body = function decode_body(response, decode_fn, content_type, request_method) {
  if (cljs.core.truth_(function() {
    var and__7492__auto__ = cljs.core.not_EQ_.call(null, new cljs.core.Keyword(null, "head", "head", -771383919), request_method);
    if (and__7492__auto__) {
      return cljs.core.re_find.call(null, cljs.core.re_pattern.call(null, [cljs.core.str("(?i)"), cljs.core.str(cljs_http.client.escape_special.call(null, content_type))].join("")), [cljs.core.str(cljs.core.get.call(null, (new cljs.core.Keyword(null, "headers", "headers", -835030129)).cljs$core$IFn$_invoke$arity$1(response), "content-type", ""))].join(""));
    } else {
      return and__7492__auto__;
    }
  }())) {
    return cljs.core.update_in.call(null, response, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "body", "body", -2049205669)], null), decode_fn);
  } else {
    return response;
  }
};
cljs_http.client.wrap_edn_params = function wrap_edn_params(client) {
  return function(request) {
    var temp__4124__auto__ = (new cljs.core.Keyword(null, "edn-params", "edn-params", 894273052)).cljs$core$IFn$_invoke$arity$1(request);
    if (cljs.core.truth_(temp__4124__auto__)) {
      var params = temp__4124__auto__;
      return client.call(null, cljs.core.assoc_in.call(null, cljs.core.assoc.call(null, cljs.core.dissoc.call(null, request, new cljs.core.Keyword(null, "edn-params", "edn-params", 894273052)), new cljs.core.Keyword(null, "body", "body", -2049205669), cljs.core.pr_str.call(null, params)), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "headers", "headers", -835030129), "content-type"], null), "application/edn"));
    } else {
      return client.call(null, request);
    }
  };
};
cljs_http.client.wrap_edn_response = function wrap_edn_response(client) {
  return function(request) {
    return cljs.core.async.map.call(null, function(p1__23662_SHARP_) {
      return cljs_http.client.decode_body.call(null, p1__23662_SHARP_, cljs.reader.read_string, "application/edn", (new cljs.core.Keyword(null, "request-method", "request-method", 1764796830)).cljs$core$IFn$_invoke$arity$1(request));
    }, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [client.call(null, request)], null));
  };
};
cljs_http.client.wrap_accept = function() {
  var wrap_accept__delegate = function(client, p__23663) {
    var vec__23665 = p__23663;
    var accept = cljs.core.nth.call(null, vec__23665, 0, null);
    return function(vec__23665, accept) {
      return function(request) {
        var temp__4124__auto__ = function() {
          var or__7504__auto__ = (new cljs.core.Keyword(null, "accept", "accept", 1874130431)).cljs$core$IFn$_invoke$arity$1(request);
          if (cljs.core.truth_(or__7504__auto__)) {
            return or__7504__auto__;
          } else {
            return accept;
          }
        }();
        if (cljs.core.truth_(temp__4124__auto__)) {
          var accept__$1 = temp__4124__auto__;
          return client.call(null, cljs.core.assoc_in.call(null, request, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "headers", "headers", -835030129), "accept"], null), accept__$1));
        } else {
          return client.call(null, request);
        }
      };
    }(vec__23665, accept);
  };
  var wrap_accept = function(client, var_args) {
    var p__23663 = null;
    if (arguments.length > 1) {
      var G__23666__i = 0, G__23666__a = new Array(arguments.length - 1);
      while (G__23666__i < G__23666__a.length) {
        G__23666__a[G__23666__i] = arguments[G__23666__i + 1];
        ++G__23666__i;
      }
      p__23663 = new cljs.core.IndexedSeq(G__23666__a, 0);
    }
    return wrap_accept__delegate.call(this, client, p__23663);
  };
  wrap_accept.cljs$lang$maxFixedArity = 1;
  wrap_accept.cljs$lang$applyTo = function(arglist__23667) {
    var client = cljs.core.first(arglist__23667);
    var p__23663 = cljs.core.rest(arglist__23667);
    return wrap_accept__delegate(client, p__23663);
  };
  wrap_accept.cljs$core$IFn$_invoke$arity$variadic = wrap_accept__delegate;
  return wrap_accept;
}();
cljs_http.client.wrap_content_type = function() {
  var wrap_content_type__delegate = function(client, p__23668) {
    var vec__23670 = p__23668;
    var content_type = cljs.core.nth.call(null, vec__23670, 0, null);
    return function(vec__23670, content_type) {
      return function(request) {
        var temp__4124__auto__ = function() {
          var or__7504__auto__ = (new cljs.core.Keyword(null, "content-type", "content-type", -508222634)).cljs$core$IFn$_invoke$arity$1(request);
          if (cljs.core.truth_(or__7504__auto__)) {
            return or__7504__auto__;
          } else {
            return content_type;
          }
        }();
        if (cljs.core.truth_(temp__4124__auto__)) {
          var content_type__$1 = temp__4124__auto__;
          return client.call(null, cljs.core.assoc_in.call(null, request, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "headers", "headers", -835030129), "content-type"], null), content_type__$1));
        } else {
          return client.call(null, request);
        }
      };
    }(vec__23670, content_type);
  };
  var wrap_content_type = function(client, var_args) {
    var p__23668 = null;
    if (arguments.length > 1) {
      var G__23671__i = 0, G__23671__a = new Array(arguments.length - 1);
      while (G__23671__i < G__23671__a.length) {
        G__23671__a[G__23671__i] = arguments[G__23671__i + 1];
        ++G__23671__i;
      }
      p__23668 = new cljs.core.IndexedSeq(G__23671__a, 0);
    }
    return wrap_content_type__delegate.call(this, client, p__23668);
  };
  wrap_content_type.cljs$lang$maxFixedArity = 1;
  wrap_content_type.cljs$lang$applyTo = function(arglist__23672) {
    var client = cljs.core.first(arglist__23672);
    var p__23668 = cljs.core.rest(arglist__23672);
    return wrap_content_type__delegate(client, p__23668);
  };
  wrap_content_type.cljs$core$IFn$_invoke$arity$variadic = wrap_content_type__delegate;
  return wrap_content_type;
}();
cljs_http.client.default_transit_opts = new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "encoding", "encoding", 1728578272), new cljs.core.Keyword(null, "json", "json", 1279968570), new cljs.core.Keyword(null, "encoding-opts", "encoding-opts", -1805664631), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "decoding", "decoding", -568180903), new cljs.core.Keyword(null, "json", "json", 1279968570), new cljs.core.Keyword(null, "decoding-opts", "decoding-opts", 
1050289140), cljs.core.PersistentArrayMap.EMPTY], null);
cljs_http.client.wrap_transit_params = function wrap_transit_params(client) {
  return function(request) {
    var temp__4124__auto__ = (new cljs.core.Keyword(null, "transit-params", "transit-params", 357261095)).cljs$core$IFn$_invoke$arity$1(request);
    if (cljs.core.truth_(temp__4124__auto__)) {
      var params = temp__4124__auto__;
      var map__23674 = cljs.core.merge.call(null, cljs_http.client.default_transit_opts, (new cljs.core.Keyword(null, "transit-opts", "transit-opts", 1104386010)).cljs$core$IFn$_invoke$arity$1(request));
      var map__23674__$1 = cljs.core.seq_QMARK_.call(null, map__23674) ? cljs.core.apply.call(null, cljs.core.hash_map, map__23674) : map__23674;
      var encoding_opts = cljs.core.get.call(null, map__23674__$1, new cljs.core.Keyword(null, "encoding-opts", "encoding-opts", -1805664631));
      var encoding = cljs.core.get.call(null, map__23674__$1, new cljs.core.Keyword(null, "encoding", "encoding", 1728578272));
      return client.call(null, cljs.core.assoc_in.call(null, cljs.core.assoc.call(null, cljs.core.dissoc.call(null, request, new cljs.core.Keyword(null, "transit-params", "transit-params", 357261095)), new cljs.core.Keyword(null, "body", "body", -2049205669), cljs_http.util.transit_encode.call(null, params, encoding, encoding_opts)), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "headers", "headers", -835030129), "content-type"], null), 
      "application/transit+json"));
    } else {
      return client.call(null, request);
    }
  };
};
cljs_http.client.wrap_transit_response = function wrap_transit_response(client) {
  return function(request) {
    var map__23678 = cljs.core.merge.call(null, cljs_http.client.default_transit_opts, (new cljs.core.Keyword(null, "transit-opts", "transit-opts", 1104386010)).cljs$core$IFn$_invoke$arity$1(request));
    var map__23678__$1 = cljs.core.seq_QMARK_.call(null, map__23678) ? cljs.core.apply.call(null, cljs.core.hash_map, map__23678) : map__23678;
    var decoding_opts = cljs.core.get.call(null, map__23678__$1, new cljs.core.Keyword(null, "decoding-opts", "decoding-opts", 1050289140));
    var decoding = cljs.core.get.call(null, map__23678__$1, new cljs.core.Keyword(null, "decoding", "decoding", -568180903));
    var transit_decode = function(map__23678, map__23678__$1, decoding_opts, decoding) {
      return function(p1__23675_SHARP_) {
        return cljs_http.util.transit_decode.call(null, p1__23675_SHARP_, decoding, decoding_opts);
      };
    }(map__23678, map__23678__$1, decoding_opts, decoding);
    return cljs.core.async.map.call(null, function(map__23678, map__23678__$1, decoding_opts, decoding, transit_decode) {
      return function(p1__23676_SHARP_) {
        return cljs_http.client.decode_body.call(null, p1__23676_SHARP_, transit_decode, "application/transit+json", (new cljs.core.Keyword(null, "request-method", "request-method", 1764796830)).cljs$core$IFn$_invoke$arity$1(request));
      };
    }(map__23678, map__23678__$1, decoding_opts, decoding, transit_decode), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [client.call(null, request)], null));
  };
};
cljs_http.client.wrap_json_params = function wrap_json_params(client) {
  return function(request) {
    var temp__4124__auto__ = (new cljs.core.Keyword(null, "json-params", "json-params", -1112693596)).cljs$core$IFn$_invoke$arity$1(request);
    if (cljs.core.truth_(temp__4124__auto__)) {
      var params = temp__4124__auto__;
      return client.call(null, cljs.core.assoc_in.call(null, cljs.core.assoc.call(null, cljs.core.dissoc.call(null, request, new cljs.core.Keyword(null, "json-params", "json-params", -1112693596)), new cljs.core.Keyword(null, "body", "body", -2049205669), cljs_http.util.json_encode.call(null, params)), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "headers", "headers", -835030129), "content-type"], null), "application/json"));
    } else {
      return client.call(null, request);
    }
  };
};
cljs_http.client.wrap_json_response = function wrap_json_response(client) {
  return function(request) {
    return cljs.core.async.map.call(null, function(p1__23679_SHARP_) {
      return cljs_http.client.decode_body.call(null, p1__23679_SHARP_, cljs_http.util.json_decode, "application/json", (new cljs.core.Keyword(null, "request-method", "request-method", 1764796830)).cljs$core$IFn$_invoke$arity$1(request));
    }, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [client.call(null, request)], null));
  };
};
cljs_http.client.wrap_query_params = function wrap_query_params(client) {
  return function(p__23682) {
    var map__23683 = p__23682;
    var map__23683__$1 = cljs.core.seq_QMARK_.call(null, map__23683) ? cljs.core.apply.call(null, cljs.core.hash_map, map__23683) : map__23683;
    var req = map__23683__$1;
    var query_params = cljs.core.get.call(null, map__23683__$1, new cljs.core.Keyword(null, "query-params", "query-params", 900640534));
    if (cljs.core.truth_(query_params)) {
      return client.call(null, cljs.core.assoc.call(null, cljs.core.dissoc.call(null, req, new cljs.core.Keyword(null, "query-params", "query-params", 900640534)), new cljs.core.Keyword(null, "query-string", "query-string", -1018845061), cljs_http.client.generate_query_string.call(null, query_params)));
    } else {
      return client.call(null, req);
    }
  };
};
cljs_http.client.wrap_form_params = function wrap_form_params(client) {
  return function(p__23686) {
    var map__23687 = p__23686;
    var map__23687__$1 = cljs.core.seq_QMARK_.call(null, map__23687) ? cljs.core.apply.call(null, cljs.core.hash_map, map__23687) : map__23687;
    var request = map__23687__$1;
    var request_method = cljs.core.get.call(null, map__23687__$1, new cljs.core.Keyword(null, "request-method", "request-method", 1764796830));
    var form_params = cljs.core.get.call(null, map__23687__$1, new cljs.core.Keyword(null, "form-params", "form-params", 1884296467));
    if (cljs.core.truth_(function() {
      var and__7492__auto__ = form_params;
      if (cljs.core.truth_(and__7492__auto__)) {
        return(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "patch", "patch", 380775109), null, new cljs.core.Keyword(null, "delete", "delete", -1768633620), null, new cljs.core.Keyword(null, "post", "post", 269697687), null, new cljs.core.Keyword(null, "put", "put", 1299772570), null], null), null)).call(null, request_method);
      } else {
        return and__7492__auto__;
      }
    }())) {
      return client.call(null, cljs.core.assoc_in.call(null, cljs.core.assoc.call(null, cljs.core.dissoc.call(null, request, new cljs.core.Keyword(null, "form-params", "form-params", 1884296467)), new cljs.core.Keyword(null, "body", "body", -2049205669), cljs_http.client.generate_query_string.call(null, form_params)), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "headers", "headers", -835030129), "content-type"], null), "application/x-www-form-urlencoded"))
      ;
    } else {
      return client.call(null, request);
    }
  };
};
cljs_http.client.generate_form_data = function generate_form_data(params) {
  var form_data = new FormData;
  var seq__23694_23700 = cljs.core.seq.call(null, params);
  var chunk__23695_23701 = null;
  var count__23696_23702 = 0;
  var i__23697_23703 = 0;
  while (true) {
    if (i__23697_23703 < count__23696_23702) {
      var vec__23698_23704 = cljs.core._nth.call(null, chunk__23695_23701, i__23697_23703);
      var k_23705 = cljs.core.nth.call(null, vec__23698_23704, 0, null);
      var v_23706 = cljs.core.nth.call(null, vec__23698_23704, 1, null);
      form_data.append(cljs.core.name.call(null, k_23705), v_23706);
      var G__23707 = seq__23694_23700;
      var G__23708 = chunk__23695_23701;
      var G__23709 = count__23696_23702;
      var G__23710 = i__23697_23703 + 1;
      seq__23694_23700 = G__23707;
      chunk__23695_23701 = G__23708;
      count__23696_23702 = G__23709;
      i__23697_23703 = G__23710;
      continue;
    } else {
      var temp__4126__auto___23711 = cljs.core.seq.call(null, seq__23694_23700);
      if (temp__4126__auto___23711) {
        var seq__23694_23712__$1 = temp__4126__auto___23711;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__23694_23712__$1)) {
          var c__8291__auto___23713 = cljs.core.chunk_first.call(null, seq__23694_23712__$1);
          var G__23714 = cljs.core.chunk_rest.call(null, seq__23694_23712__$1);
          var G__23715 = c__8291__auto___23713;
          var G__23716 = cljs.core.count.call(null, c__8291__auto___23713);
          var G__23717 = 0;
          seq__23694_23700 = G__23714;
          chunk__23695_23701 = G__23715;
          count__23696_23702 = G__23716;
          i__23697_23703 = G__23717;
          continue;
        } else {
          var vec__23699_23718 = cljs.core.first.call(null, seq__23694_23712__$1);
          var k_23719 = cljs.core.nth.call(null, vec__23699_23718, 0, null);
          var v_23720 = cljs.core.nth.call(null, vec__23699_23718, 1, null);
          form_data.append(cljs.core.name.call(null, k_23719), v_23720);
          var G__23721 = cljs.core.next.call(null, seq__23694_23712__$1);
          var G__23722 = null;
          var G__23723 = 0;
          var G__23724 = 0;
          seq__23694_23700 = G__23721;
          chunk__23695_23701 = G__23722;
          count__23696_23702 = G__23723;
          i__23697_23703 = G__23724;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return form_data;
};
cljs_http.client.wrap_multipart_params = function wrap_multipart_params(client) {
  return function(p__23727) {
    var map__23728 = p__23727;
    var map__23728__$1 = cljs.core.seq_QMARK_.call(null, map__23728) ? cljs.core.apply.call(null, cljs.core.hash_map, map__23728) : map__23728;
    var request = map__23728__$1;
    var request_method = cljs.core.get.call(null, map__23728__$1, new cljs.core.Keyword(null, "request-method", "request-method", 1764796830));
    var multipart_params = cljs.core.get.call(null, map__23728__$1, new cljs.core.Keyword(null, "multipart-params", "multipart-params", -1033508707));
    if (cljs.core.truth_(function() {
      var and__7492__auto__ = multipart_params;
      if (cljs.core.truth_(and__7492__auto__)) {
        return(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "patch", "patch", 380775109), null, new cljs.core.Keyword(null, "delete", "delete", -1768633620), null, new cljs.core.Keyword(null, "post", "post", 269697687), null, new cljs.core.Keyword(null, "put", "put", 1299772570), null], null), null)).call(null, request_method);
      } else {
        return and__7492__auto__;
      }
    }())) {
      return client.call(null, cljs.core.assoc_in.call(null, cljs.core.assoc.call(null, cljs.core.dissoc.call(null, request, new cljs.core.Keyword(null, "multipart-params", "multipart-params", -1033508707)), new cljs.core.Keyword(null, "body", "body", -2049205669), cljs_http.client.generate_form_data.call(null, multipart_params)), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "headers", "headers", -835030129), "content-type"], null), 
      "multipart/form-data"));
    } else {
      return client.call(null, request);
    }
  };
};
cljs_http.client.wrap_method = function wrap_method(client) {
  return function(req) {
    var temp__4124__auto__ = (new cljs.core.Keyword(null, "method", "method", 55703592)).cljs$core$IFn$_invoke$arity$1(req);
    if (cljs.core.truth_(temp__4124__auto__)) {
      var m = temp__4124__auto__;
      return client.call(null, cljs.core.assoc.call(null, cljs.core.dissoc.call(null, req, new cljs.core.Keyword(null, "method", "method", 55703592)), new cljs.core.Keyword(null, "request-method", "request-method", 1764796830), m));
    } else {
      return client.call(null, req);
    }
  };
};
cljs_http.client.wrap_server_name = function wrap_server_name(client, server_name) {
  return function(p1__23729_SHARP_) {
    return client.call(null, cljs.core.assoc.call(null, p1__23729_SHARP_, new cljs.core.Keyword(null, "server-name", "server-name", -1012104295), server_name));
  };
};
cljs_http.client.wrap_url = function wrap_url(client) {
  return function(p__23733) {
    var map__23734 = p__23733;
    var map__23734__$1 = cljs.core.seq_QMARK_.call(null, map__23734) ? cljs.core.apply.call(null, cljs.core.hash_map, map__23734) : map__23734;
    var req = map__23734__$1;
    var query_params = cljs.core.get.call(null, map__23734__$1, new cljs.core.Keyword(null, "query-params", "query-params", 900640534));
    var temp__4124__auto__ = cljs_http.client.parse_url.call(null, (new cljs.core.Keyword(null, "url", "url", 276297046)).cljs$core$IFn$_invoke$arity$1(req));
    if (cljs.core.truth_(temp__4124__auto__)) {
      var spec = temp__4124__auto__;
      return client.call(null, cljs.core.update_in.call(null, cljs.core.dissoc.call(null, cljs.core.merge.call(null, req, spec), new cljs.core.Keyword(null, "url", "url", 276297046)), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "query-params", "query-params", 900640534)], null), function(spec, temp__4124__auto__, map__23734, map__23734__$1, req, query_params) {
        return function(p1__23730_SHARP_) {
          return cljs.core.merge.call(null, p1__23730_SHARP_, query_params);
        };
      }(spec, temp__4124__auto__, map__23734, map__23734__$1, req, query_params)));
    } else {
      return client.call(null, req);
    }
  };
};
cljs_http.client.wrap_basic_auth = function() {
  var wrap_basic_auth__delegate = function(client, p__23735) {
    var vec__23737 = p__23735;
    var credentials = cljs.core.nth.call(null, vec__23737, 0, null);
    return function(vec__23737, credentials) {
      return function(req) {
        var credentials__$1 = function() {
          var or__7504__auto__ = (new cljs.core.Keyword(null, "basic-auth", "basic-auth", -673163332)).cljs$core$IFn$_invoke$arity$1(req);
          if (cljs.core.truth_(or__7504__auto__)) {
            return or__7504__auto__;
          } else {
            return credentials;
          }
        }();
        if (!cljs.core.empty_QMARK_.call(null, credentials__$1)) {
          return client.call(null, cljs.core.assoc_in.call(null, cljs.core.dissoc.call(null, req, new cljs.core.Keyword(null, "basic-auth", "basic-auth", -673163332)), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "headers", "headers", -835030129), "authorization"], null), cljs_http.util.basic_auth.call(null, credentials__$1)));
        } else {
          return client.call(null, req);
        }
      };
    }(vec__23737, credentials);
  };
  var wrap_basic_auth = function(client, var_args) {
    var p__23735 = null;
    if (arguments.length > 1) {
      var G__23738__i = 0, G__23738__a = new Array(arguments.length - 1);
      while (G__23738__i < G__23738__a.length) {
        G__23738__a[G__23738__i] = arguments[G__23738__i + 1];
        ++G__23738__i;
      }
      p__23735 = new cljs.core.IndexedSeq(G__23738__a, 0);
    }
    return wrap_basic_auth__delegate.call(this, client, p__23735);
  };
  wrap_basic_auth.cljs$lang$maxFixedArity = 1;
  wrap_basic_auth.cljs$lang$applyTo = function(arglist__23739) {
    var client = cljs.core.first(arglist__23739);
    var p__23735 = cljs.core.rest(arglist__23739);
    return wrap_basic_auth__delegate(client, p__23735);
  };
  wrap_basic_auth.cljs$core$IFn$_invoke$arity$variadic = wrap_basic_auth__delegate;
  return wrap_basic_auth;
}();
cljs_http.client.wrap_oauth = function wrap_oauth(client) {
  return function(req) {
    var temp__4124__auto__ = (new cljs.core.Keyword(null, "oauth-token", "oauth-token", 311415191)).cljs$core$IFn$_invoke$arity$1(req);
    if (cljs.core.truth_(temp__4124__auto__)) {
      var oauth_token = temp__4124__auto__;
      return client.call(null, cljs.core.assoc_in.call(null, cljs.core.dissoc.call(null, req, new cljs.core.Keyword(null, "oauth-token", "oauth-token", 311415191)), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "headers", "headers", -835030129), "authorization"], null), [cljs.core.str("Bearer "), cljs.core.str(oauth_token)].join("")));
    } else {
      return client.call(null, req);
    }
  };
};
cljs_http.client.wrap_channel_from_request_map = function wrap_channel_from_request_map(client) {
  return function(request) {
    var temp__4124__auto__ = (new cljs.core.Keyword(null, "channel", "channel", 734187692)).cljs$core$IFn$_invoke$arity$1(request);
    if (cljs.core.truth_(temp__4124__auto__)) {
      var custom_channel = temp__4124__auto__;
      return cljs.core.async.pipe.call(null, client.call(null, request), custom_channel);
    } else {
      return client.call(null, request);
    }
  };
};
cljs_http.client.wrap_request = function wrap_request(request) {
  return cljs_http.client.wrap_channel_from_request_map.call(null, cljs_http.client.wrap_url.call(null, cljs_http.client.wrap_method.call(null, cljs_http.client.wrap_oauth.call(null, cljs_http.client.wrap_basic_auth.call(null, cljs_http.client.wrap_query_params.call(null, cljs_http.client.wrap_json_response.call(null, cljs_http.client.wrap_json_params.call(null, cljs_http.client.wrap_transit_response.call(null, cljs_http.client.wrap_transit_params.call(null, cljs_http.client.wrap_edn_response.call(null, 
  cljs_http.client.wrap_edn_params.call(null, cljs_http.client.wrap_content_type.call(null, cljs_http.client.wrap_multipart_params.call(null, cljs_http.client.wrap_form_params.call(null, cljs_http.client.wrap_accept.call(null, request))))))))))))))));
};
cljs_http.client.request = cljs_http.client.wrap_request.call(null, cljs_http.core.request);
cljs_http.client.delete$ = function() {
  var delete$__delegate = function(url, p__23740) {
    var vec__23742 = p__23740;
    var req = cljs.core.nth.call(null, vec__23742, 0, null);
    return cljs_http.client.request.call(null, cljs.core.merge.call(null, req, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "method", "method", 55703592), new cljs.core.Keyword(null, "delete", "delete", -1768633620), new cljs.core.Keyword(null, "url", "url", 276297046), url], null)));
  };
  var delete$ = function(url, var_args) {
    var p__23740 = null;
    if (arguments.length > 1) {
      var G__23743__i = 0, G__23743__a = new Array(arguments.length - 1);
      while (G__23743__i < G__23743__a.length) {
        G__23743__a[G__23743__i] = arguments[G__23743__i + 1];
        ++G__23743__i;
      }
      p__23740 = new cljs.core.IndexedSeq(G__23743__a, 0);
    }
    return delete$__delegate.call(this, url, p__23740);
  };
  delete$.cljs$lang$maxFixedArity = 1;
  delete$.cljs$lang$applyTo = function(arglist__23744) {
    var url = cljs.core.first(arglist__23744);
    var p__23740 = cljs.core.rest(arglist__23744);
    return delete$__delegate(url, p__23740);
  };
  delete$.cljs$core$IFn$_invoke$arity$variadic = delete$__delegate;
  return delete$;
}();
cljs_http.client.get = function() {
  var get__delegate = function(url, p__23745) {
    var vec__23747 = p__23745;
    var req = cljs.core.nth.call(null, vec__23747, 0, null);
    return cljs_http.client.request.call(null, cljs.core.merge.call(null, req, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "method", "method", 55703592), new cljs.core.Keyword(null, "get", "get", 1683182755), new cljs.core.Keyword(null, "url", "url", 276297046), url], null)));
  };
  var get = function(url, var_args) {
    var p__23745 = null;
    if (arguments.length > 1) {
      var G__23748__i = 0, G__23748__a = new Array(arguments.length - 1);
      while (G__23748__i < G__23748__a.length) {
        G__23748__a[G__23748__i] = arguments[G__23748__i + 1];
        ++G__23748__i;
      }
      p__23745 = new cljs.core.IndexedSeq(G__23748__a, 0);
    }
    return get__delegate.call(this, url, p__23745);
  };
  get.cljs$lang$maxFixedArity = 1;
  get.cljs$lang$applyTo = function(arglist__23749) {
    var url = cljs.core.first(arglist__23749);
    var p__23745 = cljs.core.rest(arglist__23749);
    return get__delegate(url, p__23745);
  };
  get.cljs$core$IFn$_invoke$arity$variadic = get__delegate;
  return get;
}();
cljs_http.client.head = function() {
  var head__delegate = function(url, p__23750) {
    var vec__23752 = p__23750;
    var req = cljs.core.nth.call(null, vec__23752, 0, null);
    return cljs_http.client.request.call(null, cljs.core.merge.call(null, req, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "method", "method", 55703592), new cljs.core.Keyword(null, "head", "head", -771383919), new cljs.core.Keyword(null, "url", "url", 276297046), url], null)));
  };
  var head = function(url, var_args) {
    var p__23750 = null;
    if (arguments.length > 1) {
      var G__23753__i = 0, G__23753__a = new Array(arguments.length - 1);
      while (G__23753__i < G__23753__a.length) {
        G__23753__a[G__23753__i] = arguments[G__23753__i + 1];
        ++G__23753__i;
      }
      p__23750 = new cljs.core.IndexedSeq(G__23753__a, 0);
    }
    return head__delegate.call(this, url, p__23750);
  };
  head.cljs$lang$maxFixedArity = 1;
  head.cljs$lang$applyTo = function(arglist__23754) {
    var url = cljs.core.first(arglist__23754);
    var p__23750 = cljs.core.rest(arglist__23754);
    return head__delegate(url, p__23750);
  };
  head.cljs$core$IFn$_invoke$arity$variadic = head__delegate;
  return head;
}();
cljs_http.client.move = function() {
  var move__delegate = function(url, p__23755) {
    var vec__23757 = p__23755;
    var req = cljs.core.nth.call(null, vec__23757, 0, null);
    return cljs_http.client.request.call(null, cljs.core.merge.call(null, req, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "method", "method", 55703592), new cljs.core.Keyword(null, "move", "move", -2110884309), new cljs.core.Keyword(null, "url", "url", 276297046), url], null)));
  };
  var move = function(url, var_args) {
    var p__23755 = null;
    if (arguments.length > 1) {
      var G__23758__i = 0, G__23758__a = new Array(arguments.length - 1);
      while (G__23758__i < G__23758__a.length) {
        G__23758__a[G__23758__i] = arguments[G__23758__i + 1];
        ++G__23758__i;
      }
      p__23755 = new cljs.core.IndexedSeq(G__23758__a, 0);
    }
    return move__delegate.call(this, url, p__23755);
  };
  move.cljs$lang$maxFixedArity = 1;
  move.cljs$lang$applyTo = function(arglist__23759) {
    var url = cljs.core.first(arglist__23759);
    var p__23755 = cljs.core.rest(arglist__23759);
    return move__delegate(url, p__23755);
  };
  move.cljs$core$IFn$_invoke$arity$variadic = move__delegate;
  return move;
}();
cljs_http.client.options = function() {
  var options__delegate = function(url, p__23760) {
    var vec__23762 = p__23760;
    var req = cljs.core.nth.call(null, vec__23762, 0, null);
    return cljs_http.client.request.call(null, cljs.core.merge.call(null, req, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "method", "method", 55703592), new cljs.core.Keyword(null, "options", "options", 99638489), new cljs.core.Keyword(null, "url", "url", 276297046), url], null)));
  };
  var options = function(url, var_args) {
    var p__23760 = null;
    if (arguments.length > 1) {
      var G__23763__i = 0, G__23763__a = new Array(arguments.length - 1);
      while (G__23763__i < G__23763__a.length) {
        G__23763__a[G__23763__i] = arguments[G__23763__i + 1];
        ++G__23763__i;
      }
      p__23760 = new cljs.core.IndexedSeq(G__23763__a, 0);
    }
    return options__delegate.call(this, url, p__23760);
  };
  options.cljs$lang$maxFixedArity = 1;
  options.cljs$lang$applyTo = function(arglist__23764) {
    var url = cljs.core.first(arglist__23764);
    var p__23760 = cljs.core.rest(arglist__23764);
    return options__delegate(url, p__23760);
  };
  options.cljs$core$IFn$_invoke$arity$variadic = options__delegate;
  return options;
}();
cljs_http.client.patch = function() {
  var patch__delegate = function(url, p__23765) {
    var vec__23767 = p__23765;
    var req = cljs.core.nth.call(null, vec__23767, 0, null);
    return cljs_http.client.request.call(null, cljs.core.merge.call(null, req, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "method", "method", 55703592), new cljs.core.Keyword(null, "patch", "patch", 380775109), new cljs.core.Keyword(null, "url", "url", 276297046), url], null)));
  };
  var patch = function(url, var_args) {
    var p__23765 = null;
    if (arguments.length > 1) {
      var G__23768__i = 0, G__23768__a = new Array(arguments.length - 1);
      while (G__23768__i < G__23768__a.length) {
        G__23768__a[G__23768__i] = arguments[G__23768__i + 1];
        ++G__23768__i;
      }
      p__23765 = new cljs.core.IndexedSeq(G__23768__a, 0);
    }
    return patch__delegate.call(this, url, p__23765);
  };
  patch.cljs$lang$maxFixedArity = 1;
  patch.cljs$lang$applyTo = function(arglist__23769) {
    var url = cljs.core.first(arglist__23769);
    var p__23765 = cljs.core.rest(arglist__23769);
    return patch__delegate(url, p__23765);
  };
  patch.cljs$core$IFn$_invoke$arity$variadic = patch__delegate;
  return patch;
}();
cljs_http.client.post = function() {
  var post__delegate = function(url, p__23770) {
    var vec__23772 = p__23770;
    var req = cljs.core.nth.call(null, vec__23772, 0, null);
    return cljs_http.client.request.call(null, cljs.core.merge.call(null, req, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "method", "method", 55703592), new cljs.core.Keyword(null, "post", "post", 269697687), new cljs.core.Keyword(null, "url", "url", 276297046), url], null)));
  };
  var post = function(url, var_args) {
    var p__23770 = null;
    if (arguments.length > 1) {
      var G__23773__i = 0, G__23773__a = new Array(arguments.length - 1);
      while (G__23773__i < G__23773__a.length) {
        G__23773__a[G__23773__i] = arguments[G__23773__i + 1];
        ++G__23773__i;
      }
      p__23770 = new cljs.core.IndexedSeq(G__23773__a, 0);
    }
    return post__delegate.call(this, url, p__23770);
  };
  post.cljs$lang$maxFixedArity = 1;
  post.cljs$lang$applyTo = function(arglist__23774) {
    var url = cljs.core.first(arglist__23774);
    var p__23770 = cljs.core.rest(arglist__23774);
    return post__delegate(url, p__23770);
  };
  post.cljs$core$IFn$_invoke$arity$variadic = post__delegate;
  return post;
}();
cljs_http.client.put = function() {
  var put__delegate = function(url, p__23775) {
    var vec__23777 = p__23775;
    var req = cljs.core.nth.call(null, vec__23777, 0, null);
    return cljs_http.client.request.call(null, cljs.core.merge.call(null, req, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "method", "method", 55703592), new cljs.core.Keyword(null, "put", "put", 1299772570), new cljs.core.Keyword(null, "url", "url", 276297046), url], null)));
  };
  var put = function(url, var_args) {
    var p__23775 = null;
    if (arguments.length > 1) {
      var G__23778__i = 0, G__23778__a = new Array(arguments.length - 1);
      while (G__23778__i < G__23778__a.length) {
        G__23778__a[G__23778__i] = arguments[G__23778__i + 1];
        ++G__23778__i;
      }
      p__23775 = new cljs.core.IndexedSeq(G__23778__a, 0);
    }
    return put__delegate.call(this, url, p__23775);
  };
  put.cljs$lang$maxFixedArity = 1;
  put.cljs$lang$applyTo = function(arglist__23779) {
    var url = cljs.core.first(arglist__23779);
    var p__23775 = cljs.core.rest(arglist__23779);
    return put__delegate(url, p__23775);
  };
  put.cljs$core$IFn$_invoke$arity$variadic = put__delegate;
  return put;
}();
goog.provide("speicher.client");
goog.require("cljs.core");
goog.require("speicher.render");
goog.require("cljs_http.client");
goog.require("cljs.core.async");
goog.require("cljs.reader");
cljs.core.enable_console_print_BANG_.call(null);
speicher.client.fetch_list = function fetch_list(state, kw) {
  var c__6061__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__6061__auto__) {
    return function() {
      var f__6062__auto__ = function() {
        var switch__6046__auto__ = function(c__6061__auto__) {
          return function(state_6614) {
            var state_val_6615 = state_6614[1];
            if (state_val_6615 === 3) {
              var inst_6612 = state_6614[2];
              var state_6614__$1 = state_6614;
              return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_6614__$1, inst_6612);
            } else {
              if (state_val_6615 === 2) {
                var inst_6603 = state_6614[7];
                var inst_6607 = state_6614[2];
                var inst_6608 = cljs.core.PersistentVector.EMPTY_NODE;
                var inst_6609 = [new cljs.core.Keyword(null, "response", "response", -1068424192), inst_6607];
                var inst_6610 = new cljs.core.PersistentVector(null, 2, 5, inst_6608, inst_6609, null);
                var state_6614__$1 = state_6614;
                return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_6614__$1, 3, inst_6603, inst_6610);
              } else {
                if (state_val_6615 === 1) {
                  var inst_6603 = (new cljs.core.Keyword(null, "input-chan", "input-chan", -1487255360)).cljs$core$IFn$_invoke$arity$1(state);
                  var inst_6604 = [cljs.core.str("/list/"), cljs.core.str(kw)].join("");
                  var inst_6605 = cljs_http.client.get.call(null, inst_6604);
                  var state_6614__$1 = function() {
                    var statearr_6616 = state_6614;
                    statearr_6616[7] = inst_6603;
                    return statearr_6616;
                  }();
                  return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_6614__$1, 2, inst_6605);
                } else {
                  return null;
                }
              }
            }
          };
        }(c__6061__auto__);
        return function(switch__6046__auto__, c__6061__auto__) {
          return function() {
            var state_machine__6047__auto__ = null;
            var state_machine__6047__auto____0 = function() {
              var statearr_6620 = [null, null, null, null, null, null, null, null];
              statearr_6620[0] = state_machine__6047__auto__;
              statearr_6620[1] = 1;
              return statearr_6620;
            };
            var state_machine__6047__auto____1 = function(state_6614) {
              while (true) {
                var ret_value__6048__auto__ = function() {
                  try {
                    while (true) {
                      var result__6049__auto__ = switch__6046__auto__.call(null, state_6614);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__6049__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__6049__auto__;
                      }
                      break;
                    }
                  } catch (e6621) {
                    if (e6621 instanceof Object) {
                      var ex__6050__auto__ = e6621;
                      var statearr_6622_6624 = state_6614;
                      statearr_6622_6624[5] = ex__6050__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_6614);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e6621;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6048__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__6625 = state_6614;
                  state_6614 = G__6625;
                  continue;
                } else {
                  return ret_value__6048__auto__;
                }
                break;
              }
            };
            state_machine__6047__auto__ = function(state_6614) {
              switch(arguments.length) {
                case 0:
                  return state_machine__6047__auto____0.call(this);
                case 1:
                  return state_machine__6047__auto____1.call(this, state_6614);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__6047__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6047__auto____0;
            state_machine__6047__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6047__auto____1;
            return state_machine__6047__auto__;
          }();
        }(switch__6046__auto__, c__6061__auto__);
      }();
      var state__6063__auto__ = function() {
        var statearr_6623 = f__6062__auto__.call(null);
        statearr_6623[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6061__auto__;
        return statearr_6623;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6063__auto__);
    };
  }(c__6061__auto__));
  return c__6061__auto__;
};
speicher.client.level_limit = new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "daily", "daily", -697831483), 6, new cljs.core.Keyword(null, "weekly", "weekly", 319200344), 6, new cljs.core.Keyword(null, "monthly", "monthly", 1596693261), 11, new cljs.core.Keyword(null, "yearly", "yearly", 1010642817), 6], null);
speicher.client.next_level = new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "daily", "daily", -697831483), new cljs.core.Keyword(null, "weekly", "weekly", 319200344), new cljs.core.Keyword(null, "weekly", "weekly", 319200344), new cljs.core.Keyword(null, "monthly", "monthly", 1596693261), new cljs.core.Keyword(null, "monthly", "monthly", 1596693261), new cljs.core.Keyword(null, "yearly", "yearly", 1010642817)], null);
speicher.client.save_lists_BANG_ = function save_lists_BANG_(p__6626) {
  var map__6652 = p__6626;
  var map__6652__$1 = cljs.core.seq_QMARK_.call(null, map__6652) ? cljs.core.apply.call(null, cljs.core.hash_map, map__6652) : map__6652;
  var state = map__6652__$1;
  var input_chan = cljs.core.get.call(null, map__6652__$1, new cljs.core.Keyword(null, "input-chan", "input-chan", -1487255360));
  var current_list = cljs.core.get.call(null, map__6652__$1, new cljs.core.Keyword(null, "current-list", "current-list", 1594473864));
  var next_list = cljs.core.get.call(null, map__6652__$1, new cljs.core.Keyword(null, "next-list", "next-list", 138818716));
  var words = cljs.core.get.call(null, map__6652__$1, new cljs.core.Keyword(null, "words", "words", 1924933001));
  var c__6061__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__6061__auto__, map__6652, map__6652__$1, state, input_chan, current_list, next_list, words) {
    return function() {
      var f__6062__auto__ = function() {
        var switch__6046__auto__ = function(c__6061__auto__, map__6652, map__6652__$1, state, input_chan, current_list, next_list, words) {
          return function(state_6668) {
            var state_val_6669 = state_6668[1];
            if (state_val_6669 === 3) {
              var inst_6666 = state_6668[2];
              var state_6668__$1 = state_6668;
              return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_6668__$1, inst_6666);
            } else {
              if (state_val_6669 === 2) {
                var inst_6661 = state_6668[2];
                var inst_6662 = cljs.core.PersistentVector.EMPTY_NODE;
                var inst_6663 = [new cljs.core.Keyword(null, "saved-list", "saved-list", 1333944303), inst_6661];
                var inst_6664 = new cljs.core.PersistentVector(null, 2, 5, inst_6662, inst_6663, null);
                var state_6668__$1 = state_6668;
                return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_6668__$1, 3, input_chan, inst_6664);
              } else {
                if (state_val_6669 === 1) {
                  var inst_6653 = [new cljs.core.Keyword(null, "edn-params", "edn-params", 894273052)];
                  var inst_6654 = [new cljs.core.Keyword(null, "current-list", "current-list", 1594473864), new cljs.core.Keyword(null, "answered", "answered", -1524147020), new cljs.core.Keyword(null, "next-list", "next-list", 138818716)];
                  var inst_6655 = [current_list, words, next_list];
                  var inst_6656 = cljs.core.PersistentHashMap.fromArrays(inst_6654, inst_6655);
                  var inst_6657 = [inst_6656];
                  var inst_6658 = cljs.core.PersistentHashMap.fromArrays(inst_6653, inst_6657);
                  var inst_6659 = cljs_http.client.post.call(null, "/save", inst_6658);
                  var state_6668__$1 = state_6668;
                  return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_6668__$1, 2, inst_6659);
                } else {
                  return null;
                }
              }
            }
          };
        }(c__6061__auto__, map__6652, map__6652__$1, state, input_chan, current_list, next_list, words);
        return function(switch__6046__auto__, c__6061__auto__, map__6652, map__6652__$1, state, input_chan, current_list, next_list, words) {
          return function() {
            var state_machine__6047__auto__ = null;
            var state_machine__6047__auto____0 = function() {
              var statearr_6673 = [null, null, null, null, null, null, null];
              statearr_6673[0] = state_machine__6047__auto__;
              statearr_6673[1] = 1;
              return statearr_6673;
            };
            var state_machine__6047__auto____1 = function(state_6668) {
              while (true) {
                var ret_value__6048__auto__ = function() {
                  try {
                    while (true) {
                      var result__6049__auto__ = switch__6046__auto__.call(null, state_6668);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__6049__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__6049__auto__;
                      }
                      break;
                    }
                  } catch (e6674) {
                    if (e6674 instanceof Object) {
                      var ex__6050__auto__ = e6674;
                      var statearr_6675_6677 = state_6668;
                      statearr_6675_6677[5] = ex__6050__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_6668);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e6674;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6048__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__6678 = state_6668;
                  state_6668 = G__6678;
                  continue;
                } else {
                  return ret_value__6048__auto__;
                }
                break;
              }
            };
            state_machine__6047__auto__ = function(state_6668) {
              switch(arguments.length) {
                case 0:
                  return state_machine__6047__auto____0.call(this);
                case 1:
                  return state_machine__6047__auto____1.call(this, state_6668);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__6047__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6047__auto____0;
            state_machine__6047__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6047__auto____1;
            return state_machine__6047__auto__;
          }();
        }(switch__6046__auto__, c__6061__auto__, map__6652, map__6652__$1, state, input_chan, current_list, next_list, words);
      }();
      var state__6063__auto__ = function() {
        var statearr_6676 = f__6062__auto__.call(null);
        statearr_6676[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6061__auto__;
        return statearr_6676;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6063__auto__);
    };
  }(c__6061__auto__, map__6652, map__6652__$1, state, input_chan, current_list, next_list, words));
  return c__6061__auto__;
};
speicher.client.finished = function finished(state) {
  (new cljs.core.Keyword(null, "swiper", "swiper", -1506069648)).cljs$core$IFn$_invoke$arity$1(state).destroy();
  speicher.client.save_lists_BANG_.call(null, state);
  return cljs.core.assoc.call(null, cljs.core.dissoc.call(null, state, new cljs.core.Keyword(null, "words", "words", 1924933001), new cljs.core.Keyword(null, "current-list", "current-list", 1594473864), new cljs.core.Keyword(null, "next-list", "next-list", 138818716), new cljs.core.Keyword(null, "swiper", "swiper", -1506069648)), new cljs.core.Keyword(null, "mode", "mode", 654403691), new cljs.core.Keyword(null, "start", "start", -355208981));
};
speicher.client.level_complete_QMARK_ = function level_complete_QMARK_(level, count) {
  return cljs.core._EQ_.call(null, cljs.core.get.call(null, speicher.client.level_limit, level), count);
};
speicher.client.level_up = function level_up(state, p__6679) {
  var vec__6681 = p__6679;
  var ger = cljs.core.nth.call(null, vec__6681, 0, null);
  var eng = cljs.core.nth.call(null, vec__6681, 1, null);
  var c = cljs.core.nth.call(null, vec__6681, 2, null);
  var d = cljs.core.nth.call(null, vec__6681, 3, null);
  var next_l = cljs.core.get.call(null, speicher.client.next_level, d);
  return cljs.core.update_in.call(null, cljs.core.assoc_in.call(null, state, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "words", "words", 1924933001), 0], null), null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "next-list", "next-list", 138818716)], null), cljs.core.conj, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [ger, eng, 
  0, next_l], null));
};
speicher.client.correct = function correct(state, idx) {
  var vec__6683 = cljs.core.get_in.call(null, state, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "words", "words", 1924933001), idx], null));
  var ger = cljs.core.nth.call(null, vec__6683, 0, null);
  var eng = cljs.core.nth.call(null, vec__6683, 1, null);
  var c = cljs.core.nth.call(null, vec__6683, 2, null);
  var list_kw = cljs.core.nth.call(null, vec__6683, 3, null);
  (new cljs.core.Keyword(null, "swiper", "swiper", -1506069648)).cljs$core$IFn$_invoke$arity$1(state).slideNext();
  if (speicher.client.level_complete_QMARK_.call(null, list_kw, c)) {
    return speicher.client.level_up.call(null, state, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [ger, eng, c, list_kw], null));
  } else {
    return cljs.core.assoc_in.call(null, state, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "words", "words", 1924933001), idx], null), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [ger, eng, c + 1, list_kw], null));
  }
};
speicher.client.init_swiper = function init_swiper(state, _) {
  var swiper = (new cljs.core.Keyword(null, "f7", "f7", 356150168)).cljs$core$IFn$_invoke$arity$1(state).swiper(".swiper-container", {"prevButton":".swiper-prev-button", "nextButton":".swiper-next-button"});
  var html = '\x3cdiv class\x3d\'swiper-slide\'\x3e\x3cspan\x3eAll Done? \x3cbr\x3e\x3ca href\x3d"next.html" class\x3d"button"} \x3eSave\x3c/a\x3e\n        \x3c/span\x3e\x3c/div\x3e';
  Dom7(".swiper-wrapper").append(html);
  swiper.update();
  return cljs.core.assoc.call(null, state, new cljs.core.Keyword(null, "swiper-init?", "swiper-init?", 65165134), true, new cljs.core.Keyword(null, "swiper", "swiper", -1506069648), swiper);
};
speicher.client.review_list = function review_list(state, list_kw) {
  speicher.client.fetch_list.call(null, state, list_kw);
  return cljs.core.assoc.call(null, state, new cljs.core.Keyword(null, "mode", "mode", 654403691), new cljs.core.Keyword(null, "review-list", "review-list", -2126749986), new cljs.core.Keyword(null, "swiper-init?", "swiper-init?", 65165134), false, new cljs.core.Keyword(null, "current-list", "current-list", 1594473864), list_kw, new cljs.core.Keyword(null, "answered", "answered", -1524147020), cljs.core.PersistentVector.EMPTY, new cljs.core.Keyword(null, "next-list", "next-list", 138818716), cljs.core.PersistentVector.EMPTY);
};
speicher.client.show_list = function show_list(state, kw) {
  speicher.client.fetch_list.call(null, state, kw);
  return cljs.core.assoc.call(null, state, new cljs.core.Keyword(null, "mode", "mode", 654403691), new cljs.core.Keyword(null, "show-list", "show-list", -483536849));
};
speicher.client.show_search = function show_search(state, _) {
  return cljs.core.assoc.call(null, state, new cljs.core.Keyword(null, "mode", "mode", 654403691), new cljs.core.Keyword(null, "search-page", "search-page", -705609891));
};
speicher.client.show_enter = function show_enter(state, _) {
  return cljs.core.assoc.call(null, state, new cljs.core.Keyword(null, "mode", "mode", 654403691), new cljs.core.Keyword(null, "enter-page", "enter-page", -519644705));
};
speicher.client.lookup = function lookup(state, word) {
  var c__6061__auto___6726 = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__6061__auto___6726) {
    return function() {
      var f__6062__auto__ = function() {
        var switch__6046__auto__ = function(c__6061__auto___6726) {
          return function(state_6716) {
            var state_val_6717 = state_6716[1];
            if (state_val_6717 === 3) {
              var inst_6714 = state_6716[2];
              var state_6716__$1 = state_6716;
              return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_6716__$1, inst_6714);
            } else {
              if (state_val_6717 === 2) {
                var inst_6705 = state_6716[7];
                var inst_6709 = state_6716[2];
                var inst_6710 = cljs.core.PersistentVector.EMPTY_NODE;
                var inst_6711 = [new cljs.core.Keyword(null, "definitions", "definitions", 167529986), inst_6709];
                var inst_6712 = new cljs.core.PersistentVector(null, 2, 5, inst_6710, inst_6711, null);
                var state_6716__$1 = state_6716;
                return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_6716__$1, 3, inst_6705, inst_6712);
              } else {
                if (state_val_6717 === 1) {
                  var inst_6705 = (new cljs.core.Keyword(null, "input-chan", "input-chan", -1487255360)).cljs$core$IFn$_invoke$arity$1(state);
                  var inst_6706 = [cljs.core.str("/search/"), cljs.core.str(word)].join("");
                  var inst_6707 = cljs_http.client.get.call(null, inst_6706);
                  var state_6716__$1 = function() {
                    var statearr_6718 = state_6716;
                    statearr_6718[7] = inst_6705;
                    return statearr_6718;
                  }();
                  return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_6716__$1, 2, inst_6707);
                } else {
                  return null;
                }
              }
            }
          };
        }(c__6061__auto___6726);
        return function(switch__6046__auto__, c__6061__auto___6726) {
          return function() {
            var state_machine__6047__auto__ = null;
            var state_machine__6047__auto____0 = function() {
              var statearr_6722 = [null, null, null, null, null, null, null, null];
              statearr_6722[0] = state_machine__6047__auto__;
              statearr_6722[1] = 1;
              return statearr_6722;
            };
            var state_machine__6047__auto____1 = function(state_6716) {
              while (true) {
                var ret_value__6048__auto__ = function() {
                  try {
                    while (true) {
                      var result__6049__auto__ = switch__6046__auto__.call(null, state_6716);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__6049__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__6049__auto__;
                      }
                      break;
                    }
                  } catch (e6723) {
                    if (e6723 instanceof Object) {
                      var ex__6050__auto__ = e6723;
                      var statearr_6724_6727 = state_6716;
                      statearr_6724_6727[5] = ex__6050__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_6716);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e6723;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6048__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__6728 = state_6716;
                  state_6716 = G__6728;
                  continue;
                } else {
                  return ret_value__6048__auto__;
                }
                break;
              }
            };
            state_machine__6047__auto__ = function(state_6716) {
              switch(arguments.length) {
                case 0:
                  return state_machine__6047__auto____0.call(this);
                case 1:
                  return state_machine__6047__auto____1.call(this, state_6716);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__6047__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6047__auto____0;
            state_machine__6047__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6047__auto____1;
            return state_machine__6047__auto__;
          }();
        }(switch__6046__auto__, c__6061__auto___6726);
      }();
      var state__6063__auto__ = function() {
        var statearr_6725 = f__6062__auto__.call(null);
        statearr_6725[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6061__auto___6726;
        return statearr_6725;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6063__auto__);
    };
  }(c__6061__auto___6726));
  return cljs.core.dissoc.call(null, state, new cljs.core.Keyword(null, "dictionary", "dictionary", -2013643865));
};
speicher.client.add_new_word = function add_new_word(state, entry) {
  var c__6061__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__6061__auto__) {
    return function() {
      var f__6062__auto__ = function() {
        var switch__6046__auto__ = function(c__6061__auto__) {
          return function(state_6771) {
            var state_val_6772 = state_6771[1];
            if (state_val_6772 === 3) {
              var inst_6769 = state_6771[2];
              var state_6771__$1 = state_6771;
              return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_6771__$1, inst_6769);
            } else {
              if (state_val_6772 === 2) {
                var inst_6755 = state_6771[7];
                var inst_6764 = state_6771[2];
                var inst_6765 = cljs.core.PersistentVector.EMPTY_NODE;
                var inst_6766 = [new cljs.core.Keyword(null, "definition-added", "definition-added", 195281834), inst_6764];
                var inst_6767 = new cljs.core.PersistentVector(null, 2, 5, inst_6765, inst_6766, null);
                var state_6771__$1 = state_6771;
                return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_6771__$1, 3, inst_6755, inst_6767);
              } else {
                if (state_val_6772 === 1) {
                  var inst_6755 = (new cljs.core.Keyword(null, "input-chan", "input-chan", -1487255360)).cljs$core$IFn$_invoke$arity$1(state);
                  var inst_6756 = [new cljs.core.Keyword(null, "form-params", "form-params", 1884296467)];
                  var inst_6757 = [new cljs.core.Keyword(null, "entry", "entry", 505168823)];
                  var inst_6758 = [entry];
                  var inst_6759 = cljs.core.PersistentHashMap.fromArrays(inst_6757, inst_6758);
                  var inst_6760 = [inst_6759];
                  var inst_6761 = cljs.core.PersistentHashMap.fromArrays(inst_6756, inst_6760);
                  var inst_6762 = cljs_http.client.post.call(null, "/add", inst_6761);
                  var state_6771__$1 = function() {
                    var statearr_6773 = state_6771;
                    statearr_6773[7] = inst_6755;
                    return statearr_6773;
                  }();
                  return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_6771__$1, 2, inst_6762);
                } else {
                  return null;
                }
              }
            }
          };
        }(c__6061__auto__);
        return function(switch__6046__auto__, c__6061__auto__) {
          return function() {
            var state_machine__6047__auto__ = null;
            var state_machine__6047__auto____0 = function() {
              var statearr_6777 = [null, null, null, null, null, null, null, null];
              statearr_6777[0] = state_machine__6047__auto__;
              statearr_6777[1] = 1;
              return statearr_6777;
            };
            var state_machine__6047__auto____1 = function(state_6771) {
              while (true) {
                var ret_value__6048__auto__ = function() {
                  try {
                    while (true) {
                      var result__6049__auto__ = switch__6046__auto__.call(null, state_6771);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__6049__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__6049__auto__;
                      }
                      break;
                    }
                  } catch (e6778) {
                    if (e6778 instanceof Object) {
                      var ex__6050__auto__ = e6778;
                      var statearr_6779_6781 = state_6771;
                      statearr_6779_6781[5] = ex__6050__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_6771);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e6778;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6048__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__6782 = state_6771;
                  state_6771 = G__6782;
                  continue;
                } else {
                  return ret_value__6048__auto__;
                }
                break;
              }
            };
            state_machine__6047__auto__ = function(state_6771) {
              switch(arguments.length) {
                case 0:
                  return state_machine__6047__auto____0.call(this);
                case 1:
                  return state_machine__6047__auto____1.call(this, state_6771);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__6047__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6047__auto____0;
            state_machine__6047__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6047__auto____1;
            return state_machine__6047__auto__;
          }();
        }(switch__6046__auto__, c__6061__auto__);
      }();
      var state__6063__auto__ = function() {
        var statearr_6780 = f__6062__auto__.call(null);
        statearr_6780[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6061__auto__;
        return statearr_6780;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6063__auto__);
    };
  }(c__6061__auto__));
  return c__6061__auto__;
};
speicher.client.submit_selected = function submit_selected(state, entry_index) {
  var c__6061__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__6061__auto__) {
    return function() {
      var f__6062__auto__ = function() {
        var switch__6046__auto__ = function(c__6061__auto__) {
          return function(state_6813) {
            var state_val_6814 = state_6813[1];
            if (state_val_6814 === 1) {
              var inst_6803 = (new cljs.core.Keyword(null, "dictionary", "dictionary", -2013643865)).cljs$core$IFn$_invoke$arity$1(state);
              var inst_6804 = cljs.core.vec.call(null, inst_6803);
              var inst_6805 = (new cljs.core.Keyword(null, "entry", "entry", 505168823)).cljs$core$IFn$_invoke$arity$1(entry_index);
              var inst_6806 = cljs.reader.read_string.call(null, inst_6805);
              var inst_6807 = cljs.core.get.call(null, inst_6804, inst_6806);
              var inst_6808 = speicher.render.format_entry.call(null, inst_6807);
              var inst_6809 = cljs.core.first.call(null, inst_6808);
              var inst_6810 = speicher.client.add_new_word.call(null, state, inst_6809);
              var inst_6811 = cljs.core.dissoc.call(null, state, new cljs.core.Keyword(null, "dictionary", "dictionary", -2013643865));
              var state_6813__$1 = function() {
                var statearr_6815 = state_6813;
                statearr_6815[7] = inst_6810;
                return statearr_6815;
              }();
              return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_6813__$1, inst_6811);
            } else {
              return null;
            }
          };
        }(c__6061__auto__);
        return function(switch__6046__auto__, c__6061__auto__) {
          return function() {
            var state_machine__6047__auto__ = null;
            var state_machine__6047__auto____0 = function() {
              var statearr_6819 = [null, null, null, null, null, null, null, null];
              statearr_6819[0] = state_machine__6047__auto__;
              statearr_6819[1] = 1;
              return statearr_6819;
            };
            var state_machine__6047__auto____1 = function(state_6813) {
              while (true) {
                var ret_value__6048__auto__ = function() {
                  try {
                    while (true) {
                      var result__6049__auto__ = switch__6046__auto__.call(null, state_6813);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__6049__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__6049__auto__;
                      }
                      break;
                    }
                  } catch (e6820) {
                    if (e6820 instanceof Object) {
                      var ex__6050__auto__ = e6820;
                      var statearr_6821_6823 = state_6813;
                      statearr_6821_6823[5] = ex__6050__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_6813);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e6820;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6048__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__6824 = state_6813;
                  state_6813 = G__6824;
                  continue;
                } else {
                  return ret_value__6048__auto__;
                }
                break;
              }
            };
            state_machine__6047__auto__ = function(state_6813) {
              switch(arguments.length) {
                case 0:
                  return state_machine__6047__auto____0.call(this);
                case 1:
                  return state_machine__6047__auto____1.call(this, state_6813);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__6047__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6047__auto____0;
            state_machine__6047__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6047__auto____1;
            return state_machine__6047__auto__;
          }();
        }(switch__6046__auto__, c__6061__auto__);
      }();
      var state__6063__auto__ = function() {
        var statearr_6822 = f__6062__auto__.call(null);
        statearr_6822[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6061__auto__;
        return statearr_6822;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6063__auto__);
    };
  }(c__6061__auto__));
  return c__6061__auto__;
};
speicher.client.submit_entered = function submit_entered(state, entered) {
  speicher.client.add_new_word.call(null, state, entered);
  return state;
};
speicher.client.handle_response = function handle_response(state, p__6825) {
  var map__6827 = p__6825;
  var map__6827__$1 = cljs.core.seq_QMARK_.call(null, map__6827) ? cljs.core.apply.call(null, cljs.core.hash_map, map__6827) : map__6827;
  var body = cljs.core.get.call(null, map__6827__$1, new cljs.core.Keyword(null, "body", "body", -2049205669));
  var status = cljs.core.get.call(null, map__6827__$1, new cljs.core.Keyword(null, "status", "status", -1997798413));
  return cljs.core.assoc.call(null, state, new cljs.core.Keyword(null, "words", "words", 1924933001), body);
};
speicher.client.show_definitions = function show_definitions(state, p__6828) {
  var map__6830 = p__6828;
  var map__6830__$1 = cljs.core.seq_QMARK_.call(null, map__6830) ? cljs.core.apply.call(null, cljs.core.hash_map, map__6830) : map__6830;
  var body = cljs.core.get.call(null, map__6830__$1, new cljs.core.Keyword(null, "body", "body", -2049205669));
  return cljs.core.assoc.call(null, state, new cljs.core.Keyword(null, "dictionary", "dictionary", -2013643865), body);
};
speicher.client.init_updates = function init_updates(p__6831) {
  var map__6869 = p__6831;
  var map__6869__$1 = cljs.core.seq_QMARK_.call(null, map__6869) ? cljs.core.apply.call(null, cljs.core.hash_map, map__6869) : map__6869;
  var functions = cljs.core.get.call(null, map__6869__$1, new cljs.core.Keyword(null, "functions", "functions", 184951466));
  var state = cljs.core.get.call(null, map__6869__$1, new cljs.core.Keyword(null, "state", "state", -1988618099));
  var input_chan = (new cljs.core.Keyword(null, "input-chan", "input-chan", -1487255360)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, state));
  var c__6061__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__6061__auto__, input_chan, map__6869, map__6869__$1, functions, state) {
    return function() {
      var f__6062__auto__ = function() {
        var switch__6046__auto__ = function(c__6061__auto__, input_chan, map__6869, map__6869__$1, functions, state) {
          return function(state_6890) {
            var state_val_6891 = state_6890[1];
            if (state_val_6891 === 7) {
              var inst_6874 = state_6890[2];
              var inst_6875 = cljs.core.nth.call(null, inst_6874, 0, null);
              var inst_6876 = cljs.core.nth.call(null, inst_6874, 1, null);
              var inst_6877 = [cljs.core.str("on channel ["), cljs.core.str(inst_6875), cljs.core.str("], received value ["), cljs.core.str(inst_6876), cljs.core.str("]")].join("");
              var inst_6878 = console.log(inst_6877);
              var inst_6879 = cljs.core.get.call(null, functions, inst_6875);
              var inst_6880 = cljs.core.swap_BANG_.call(null, state, inst_6879, inst_6876);
              var inst_6881 = cljs.core.deref.call(null, state);
              var inst_6882 = speicher.render.request_render.call(null, inst_6881);
              var state_6890__$1 = function() {
                var statearr_6892 = state_6890;
                statearr_6892[7] = inst_6882;
                statearr_6892[8] = inst_6880;
                statearr_6892[9] = inst_6878;
                return statearr_6892;
              }();
              var statearr_6893_6906 = state_6890__$1;
              statearr_6893_6906[2] = null;
              statearr_6893_6906[1] = 2;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_6891 === 6) {
                var inst_6886 = state_6890[2];
                var state_6890__$1 = state_6890;
                var statearr_6894_6907 = state_6890__$1;
                statearr_6894_6907[2] = inst_6886;
                statearr_6894_6907[1] = 3;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_6891 === 5) {
                  var state_6890__$1 = state_6890;
                  var statearr_6895_6908 = state_6890__$1;
                  statearr_6895_6908[2] = null;
                  statearr_6895_6908[1] = 6;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_6891 === 4) {
                    var state_6890__$1 = state_6890;
                    return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_6890__$1, 7, input_chan);
                  } else {
                    if (state_val_6891 === 3) {
                      var inst_6888 = state_6890[2];
                      var state_6890__$1 = state_6890;
                      return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_6890__$1, inst_6888);
                    } else {
                      if (state_val_6891 === 2) {
                        var state_6890__$1 = state_6890;
                        var statearr_6896_6909 = state_6890__$1;
                        statearr_6896_6909[1] = 4;
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_6891 === 1) {
                          var state_6890__$1 = state_6890;
                          var statearr_6898_6910 = state_6890__$1;
                          statearr_6898_6910[2] = null;
                          statearr_6898_6910[1] = 2;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          return null;
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__6061__auto__, input_chan, map__6869, map__6869__$1, functions, state);
        return function(switch__6046__auto__, c__6061__auto__, input_chan, map__6869, map__6869__$1, functions, state) {
          return function() {
            var state_machine__6047__auto__ = null;
            var state_machine__6047__auto____0 = function() {
              var statearr_6902 = [null, null, null, null, null, null, null, null, null, null];
              statearr_6902[0] = state_machine__6047__auto__;
              statearr_6902[1] = 1;
              return statearr_6902;
            };
            var state_machine__6047__auto____1 = function(state_6890) {
              while (true) {
                var ret_value__6048__auto__ = function() {
                  try {
                    while (true) {
                      var result__6049__auto__ = switch__6046__auto__.call(null, state_6890);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__6049__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__6049__auto__;
                      }
                      break;
                    }
                  } catch (e6903) {
                    if (e6903 instanceof Object) {
                      var ex__6050__auto__ = e6903;
                      var statearr_6904_6911 = state_6890;
                      statearr_6904_6911[5] = ex__6050__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_6890);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e6903;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6048__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__6912 = state_6890;
                  state_6890 = G__6912;
                  continue;
                } else {
                  return ret_value__6048__auto__;
                }
                break;
              }
            };
            state_machine__6047__auto__ = function(state_6890) {
              switch(arguments.length) {
                case 0:
                  return state_machine__6047__auto____0.call(this);
                case 1:
                  return state_machine__6047__auto____1.call(this, state_6890);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__6047__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6047__auto____0;
            state_machine__6047__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6047__auto____1;
            return state_machine__6047__auto__;
          }();
        }(switch__6046__auto__, c__6061__auto__, input_chan, map__6869, map__6869__$1, functions, state);
      }();
      var state__6063__auto__ = function() {
        var statearr_6905 = f__6062__auto__.call(null);
        statearr_6905[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6061__auto__;
        return statearr_6905;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6063__auto__);
    };
  }(c__6061__auto__, input_chan, map__6869, map__6869__$1, functions, state));
  return c__6061__auto__;
};
speicher.client.print_entry = function print_entry(state, data) {
  cljs.core.println.call(null, "print entry", data);
  return state;
};
speicher.client.load_app = function load_app() {
  var ch = cljs.core.async.chan.call(null);
  var f7 = new Framework7({"onPageInit":function(ch) {
    return function init_callback(app, page) {
      var G__7096 = page.name;
      switch(G__7096) {
        case "index":
          return console.log("index page called");
          break;
        case "review":
          var c__6061__auto__ = cljs.core.async.chan.call(null, 1);
          cljs.core.async.impl.dispatch.run.call(null, function(c__6061__auto__, G__7096, ch) {
            return function() {
              var f__6062__auto__ = function() {
                var switch__6046__auto__ = function(c__6061__auto__, G__7096, ch) {
                  return function(state_7103) {
                    var state_val_7104 = state_7103[1];
                    if (state_val_7104 === 2) {
                      var inst_7101 = state_7103[2];
                      var state_7103__$1 = state_7103;
                      return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_7103__$1, inst_7101);
                    } else {
                      if (state_val_7104 === 1) {
                        var inst_7097 = cljs.core.PersistentVector.EMPTY_NODE;
                        var inst_7098 = [new cljs.core.Keyword(null, "review-list", "review-list", -2126749986), new cljs.core.Keyword(null, "daily", "daily", -697831483)];
                        var inst_7099 = new cljs.core.PersistentVector(null, 2, 5, inst_7097, inst_7098, null);
                        var state_7103__$1 = state_7103;
                        return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_7103__$1, 2, ch, inst_7099);
                      } else {
                        return null;
                      }
                    }
                  };
                }(c__6061__auto__, G__7096, ch);
                return function(switch__6046__auto__, c__6061__auto__, G__7096, ch) {
                  return function() {
                    var state_machine__6047__auto__ = null;
                    var state_machine__6047__auto____0 = function() {
                      var statearr_7108 = [null, null, null, null, null, null, null];
                      statearr_7108[0] = state_machine__6047__auto__;
                      statearr_7108[1] = 1;
                      return statearr_7108;
                    };
                    var state_machine__6047__auto____1 = function(state_7103) {
                      while (true) {
                        var ret_value__6048__auto__ = function() {
                          try {
                            while (true) {
                              var result__6049__auto__ = switch__6046__auto__.call(null, state_7103);
                              if (cljs.core.keyword_identical_QMARK_.call(null, result__6049__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                                continue;
                              } else {
                                return result__6049__auto__;
                              }
                              break;
                            }
                          } catch (e7109) {
                            if (e7109 instanceof Object) {
                              var ex__6050__auto__ = e7109;
                              var statearr_7110_7158 = state_7103;
                              statearr_7110_7158[5] = ex__6050__auto__;
                              cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_7103);
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              throw e7109;
                            }
                          }
                        }();
                        if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6048__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          var G__7159 = state_7103;
                          state_7103 = G__7159;
                          continue;
                        } else {
                          return ret_value__6048__auto__;
                        }
                        break;
                      }
                    };
                    state_machine__6047__auto__ = function(state_7103) {
                      switch(arguments.length) {
                        case 0:
                          return state_machine__6047__auto____0.call(this);
                        case 1:
                          return state_machine__6047__auto____1.call(this, state_7103);
                      }
                      throw new Error("Invalid arity: " + arguments.length);
                    };
                    state_machine__6047__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6047__auto____0;
                    state_machine__6047__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6047__auto____1;
                    return state_machine__6047__auto__;
                  }();
                }(switch__6046__auto__, c__6061__auto__, G__7096, ch);
              }();
              var state__6063__auto__ = function() {
                var statearr_7111 = f__6062__auto__.call(null);
                statearr_7111[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6061__auto__;
                return statearr_7111;
              }();
              return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6063__auto__);
            };
          }(c__6061__auto__, G__7096, ch));
          return c__6061__auto__;
          break;
        case "next":
          var c__6061__auto__ = cljs.core.async.chan.call(null, 1);
          cljs.core.async.impl.dispatch.run.call(null, function(c__6061__auto__, G__7096, ch) {
            return function() {
              var f__6062__auto__ = function() {
                var switch__6046__auto__ = function(c__6061__auto__, G__7096, ch) {
                  return function(state_7118) {
                    var state_val_7119 = state_7118[1];
                    if (state_val_7119 === 2) {
                      var inst_7116 = state_7118[2];
                      var state_7118__$1 = state_7118;
                      return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_7118__$1, inst_7116);
                    } else {
                      if (state_val_7119 === 1) {
                        var inst_7112 = cljs.core.PersistentVector.EMPTY_NODE;
                        var inst_7113 = [new cljs.core.Keyword(null, "review-done", "review-done", 1000388706), null];
                        var inst_7114 = new cljs.core.PersistentVector(null, 2, 5, inst_7112, inst_7113, null);
                        var state_7118__$1 = state_7118;
                        return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_7118__$1, 2, ch, inst_7114);
                      } else {
                        return null;
                      }
                    }
                  };
                }(c__6061__auto__, G__7096, ch);
                return function(switch__6046__auto__, c__6061__auto__, G__7096, ch) {
                  return function() {
                    var state_machine__6047__auto__ = null;
                    var state_machine__6047__auto____0 = function() {
                      var statearr_7123 = [null, null, null, null, null, null, null];
                      statearr_7123[0] = state_machine__6047__auto__;
                      statearr_7123[1] = 1;
                      return statearr_7123;
                    };
                    var state_machine__6047__auto____1 = function(state_7118) {
                      while (true) {
                        var ret_value__6048__auto__ = function() {
                          try {
                            while (true) {
                              var result__6049__auto__ = switch__6046__auto__.call(null, state_7118);
                              if (cljs.core.keyword_identical_QMARK_.call(null, result__6049__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                                continue;
                              } else {
                                return result__6049__auto__;
                              }
                              break;
                            }
                          } catch (e7124) {
                            if (e7124 instanceof Object) {
                              var ex__6050__auto__ = e7124;
                              var statearr_7125_7160 = state_7118;
                              statearr_7125_7160[5] = ex__6050__auto__;
                              cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_7118);
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              throw e7124;
                            }
                          }
                        }();
                        if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6048__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          var G__7161 = state_7118;
                          state_7118 = G__7161;
                          continue;
                        } else {
                          return ret_value__6048__auto__;
                        }
                        break;
                      }
                    };
                    state_machine__6047__auto__ = function(state_7118) {
                      switch(arguments.length) {
                        case 0:
                          return state_machine__6047__auto____0.call(this);
                        case 1:
                          return state_machine__6047__auto____1.call(this, state_7118);
                      }
                      throw new Error("Invalid arity: " + arguments.length);
                    };
                    state_machine__6047__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6047__auto____0;
                    state_machine__6047__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6047__auto____1;
                    return state_machine__6047__auto__;
                  }();
                }(switch__6046__auto__, c__6061__auto__, G__7096, ch);
              }();
              var state__6063__auto__ = function() {
                var statearr_7126 = f__6062__auto__.call(null);
                statearr_7126[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6061__auto__;
                return statearr_7126;
              }();
              return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6063__auto__);
            };
          }(c__6061__auto__, G__7096, ch));
          return c__6061__auto__;
          break;
        case "show":
          var c__6061__auto__ = cljs.core.async.chan.call(null, 1);
          cljs.core.async.impl.dispatch.run.call(null, function(c__6061__auto__, G__7096, ch) {
            return function() {
              var f__6062__auto__ = function() {
                var switch__6046__auto__ = function(c__6061__auto__, G__7096, ch) {
                  return function(state_7133) {
                    var state_val_7134 = state_7133[1];
                    if (state_val_7134 === 2) {
                      var inst_7131 = state_7133[2];
                      var state_7133__$1 = state_7133;
                      return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_7133__$1, inst_7131);
                    } else {
                      if (state_val_7134 === 1) {
                        var inst_7127 = cljs.core.PersistentVector.EMPTY_NODE;
                        var inst_7128 = [new cljs.core.Keyword(null, "show-list", "show-list", -483536849), new cljs.core.Keyword(null, "daily", "daily", -697831483)];
                        var inst_7129 = new cljs.core.PersistentVector(null, 2, 5, inst_7127, inst_7128, null);
                        var state_7133__$1 = state_7133;
                        return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_7133__$1, 2, ch, inst_7129);
                      } else {
                        return null;
                      }
                    }
                  };
                }(c__6061__auto__, G__7096, ch);
                return function(switch__6046__auto__, c__6061__auto__, G__7096, ch) {
                  return function() {
                    var state_machine__6047__auto__ = null;
                    var state_machine__6047__auto____0 = function() {
                      var statearr_7138 = [null, null, null, null, null, null, null];
                      statearr_7138[0] = state_machine__6047__auto__;
                      statearr_7138[1] = 1;
                      return statearr_7138;
                    };
                    var state_machine__6047__auto____1 = function(state_7133) {
                      while (true) {
                        var ret_value__6048__auto__ = function() {
                          try {
                            while (true) {
                              var result__6049__auto__ = switch__6046__auto__.call(null, state_7133);
                              if (cljs.core.keyword_identical_QMARK_.call(null, result__6049__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                                continue;
                              } else {
                                return result__6049__auto__;
                              }
                              break;
                            }
                          } catch (e7139) {
                            if (e7139 instanceof Object) {
                              var ex__6050__auto__ = e7139;
                              var statearr_7140_7162 = state_7133;
                              statearr_7140_7162[5] = ex__6050__auto__;
                              cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_7133);
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              throw e7139;
                            }
                          }
                        }();
                        if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6048__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          var G__7163 = state_7133;
                          state_7133 = G__7163;
                          continue;
                        } else {
                          return ret_value__6048__auto__;
                        }
                        break;
                      }
                    };
                    state_machine__6047__auto__ = function(state_7133) {
                      switch(arguments.length) {
                        case 0:
                          return state_machine__6047__auto____0.call(this);
                        case 1:
                          return state_machine__6047__auto____1.call(this, state_7133);
                      }
                      throw new Error("Invalid arity: " + arguments.length);
                    };
                    state_machine__6047__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6047__auto____0;
                    state_machine__6047__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6047__auto____1;
                    return state_machine__6047__auto__;
                  }();
                }(switch__6046__auto__, c__6061__auto__, G__7096, ch);
              }();
              var state__6063__auto__ = function() {
                var statearr_7141 = f__6062__auto__.call(null);
                statearr_7141[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6061__auto__;
                return statearr_7141;
              }();
              return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6063__auto__);
            };
          }(c__6061__auto__, G__7096, ch));
          return c__6061__auto__;
          break;
        case "search":
          var c__6061__auto__ = cljs.core.async.chan.call(null, 1);
          cljs.core.async.impl.dispatch.run.call(null, function(c__6061__auto__, G__7096, ch) {
            return function() {
              var f__6062__auto__ = function() {
                var switch__6046__auto__ = function(c__6061__auto__, G__7096, ch) {
                  return function(state_7148) {
                    var state_val_7149 = state_7148[1];
                    if (state_val_7149 === 2) {
                      var inst_7146 = state_7148[2];
                      var state_7148__$1 = state_7148;
                      return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_7148__$1, inst_7146);
                    } else {
                      if (state_val_7149 === 1) {
                        var inst_7142 = cljs.core.PersistentVector.EMPTY_NODE;
                        var inst_7143 = [new cljs.core.Keyword(null, "search-page", "search-page", -705609891), null];
                        var inst_7144 = new cljs.core.PersistentVector(null, 2, 5, inst_7142, inst_7143, null);
                        var state_7148__$1 = state_7148;
                        return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_7148__$1, 2, ch, inst_7144);
                      } else {
                        return null;
                      }
                    }
                  };
                }(c__6061__auto__, G__7096, ch);
                return function(switch__6046__auto__, c__6061__auto__, G__7096, ch) {
                  return function() {
                    var state_machine__6047__auto__ = null;
                    var state_machine__6047__auto____0 = function() {
                      var statearr_7153 = [null, null, null, null, null, null, null];
                      statearr_7153[0] = state_machine__6047__auto__;
                      statearr_7153[1] = 1;
                      return statearr_7153;
                    };
                    var state_machine__6047__auto____1 = function(state_7148) {
                      while (true) {
                        var ret_value__6048__auto__ = function() {
                          try {
                            while (true) {
                              var result__6049__auto__ = switch__6046__auto__.call(null, state_7148);
                              if (cljs.core.keyword_identical_QMARK_.call(null, result__6049__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                                continue;
                              } else {
                                return result__6049__auto__;
                              }
                              break;
                            }
                          } catch (e7154) {
                            if (e7154 instanceof Object) {
                              var ex__6050__auto__ = e7154;
                              var statearr_7155_7164 = state_7148;
                              statearr_7155_7164[5] = ex__6050__auto__;
                              cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_7148);
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              throw e7154;
                            }
                          }
                        }();
                        if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6048__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          var G__7165 = state_7148;
                          state_7148 = G__7165;
                          continue;
                        } else {
                          return ret_value__6048__auto__;
                        }
                        break;
                      }
                    };
                    state_machine__6047__auto__ = function(state_7148) {
                      switch(arguments.length) {
                        case 0:
                          return state_machine__6047__auto____0.call(this);
                        case 1:
                          return state_machine__6047__auto____1.call(this, state_7148);
                      }
                      throw new Error("Invalid arity: " + arguments.length);
                    };
                    state_machine__6047__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6047__auto____0;
                    state_machine__6047__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6047__auto____1;
                    return state_machine__6047__auto__;
                  }();
                }(switch__6046__auto__, c__6061__auto__, G__7096, ch);
              }();
              var state__6063__auto__ = function() {
                var statearr_7156 = f__6062__auto__.call(null);
                statearr_7156[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6061__auto__;
                return statearr_7156;
              }();
              return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6063__auto__);
            };
          }(c__6061__auto__, G__7096, ch));
          return c__6061__auto__;
          break;
        default:
          return cljs.core.println.call(null, "Nothing found ");
      }
    };
  }(ch)});
  var main = f7.addView(".view-main");
  return new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "state", "state", -1988618099), cljs.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "input-chan", "input-chan", -1487255360), ch, new cljs.core.Keyword(null, "mode", "mode", 654403691), new cljs.core.Keyword(null, "start", "start", -355208981), new cljs.core.Keyword(null, "current-list", "current-list", 1594473864), new cljs.core.Keyword(null, "daily", "daily", -697831483), 
  new cljs.core.Keyword(null, "f7", "f7", 356150168), f7, new cljs.core.Keyword(null, "main-view", "main-view", 343997885), main], null)), new cljs.core.Keyword(null, "functions", "functions", 184951466), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "response", "response", -1068424192), new cljs.core.Keyword(null, "review-done", "review-done", 1000388706), new cljs.core.Keyword(null, "definitions", "definitions", 167529986), new cljs.core.Keyword(null, "submit-selected", "submit-selected", 
  -548982554), new cljs.core.Keyword(null, "search-term", "search-term", 356193544), new cljs.core.Keyword(null, "definition-added", "definition-added", 195281834), new cljs.core.Keyword(null, "show-list", "show-list", -483536849), new cljs.core.Keyword(null, "init-swiper", "init-swiper", 998548847), new cljs.core.Keyword(null, "saved-list", "saved-list", 1333944303), new cljs.core.Keyword(null, "nav", "nav", 719540477), new cljs.core.Keyword(null, "search-page", "search-page", -705609891), new cljs.core.Keyword(null, 
  "submit-entered", "submit-entered", -1080659330), new cljs.core.Keyword(null, "review-list", "review-list", -2126749986), new cljs.core.Keyword(null, "correct", "correct", 984806334), new cljs.core.Keyword(null, "enter-page", "enter-page", -519644705)], [speicher.client.handle_response, speicher.client.finished, speicher.client.show_definitions, speicher.client.submit_selected, speicher.client.lookup, speicher.client.print_entry, speicher.client.show_list, speicher.client.init_swiper, speicher.client.print_entry, 
  speicher.client.print_entry, speicher.client.show_search, speicher.client.submit_entered, speicher.client.review_list, speicher.client.correct, speicher.client.show_enter])], null);
};
speicher.client.main = function main() {
  var app = speicher.client.load_app.call(null);
  var state = cljs.core.deref.call(null, (new cljs.core.Keyword(null, "state", "state", -1988618099)).cljs$core$IFn$_invoke$arity$1(app));
  speicher.client.init_updates.call(null, app);
  return speicher.render.request_render.call(null, state);
};
goog.exportSymbol("speicher.client.main", speicher.client.main);
goog.provide("cemerick.cljs.test");
goog.require("cljs.core");
goog.require("clojure.string");
cemerick.cljs.test._STAR_test_print_fn_STAR_ = null;
cemerick.cljs.test._STAR_entry_point_STAR_ = true;
cemerick.cljs.test._STAR_test_ctx_STAR_ = null;
cemerick.cljs.test.init_test_environment_STAR_ = function init_test_environment_STAR_(aux_data) {
  return cljs.core.atom.call(null, cljs.core.merge.call(null, cljs.core.assoc.call(null, cljs.core.merge.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "test", "test", 577538877), 0, new cljs.core.Keyword(null, "pass", "pass", 1574159993), 0, new cljs.core.Keyword(null, "fail", "fail", 1706214930), 0, new cljs.core.Keyword(null, "error", "error", -978969032), 0], null), cljs.core.truth_(cemerick.cljs.test._STAR_test_print_fn_STAR_) ? new cljs.core.PersistentArrayMap(null, 
  1, [new cljs.core.Keyword("cemerick.cljs.test", "test-print-fn", "cemerick.cljs.test/test-print-fn", -2097998143), cemerick.cljs.test._STAR_test_print_fn_STAR_], null) : null), new cljs.core.Keyword("cemerick.cljs.test", "test-contexts", "cemerick.cljs.test/test-contexts", 1505935128), cljs.core.List.EMPTY), aux_data));
};
cemerick.cljs.test.init_test_environment = function init_test_environment() {
  var G__27250 = cemerick.cljs.test.init_test_environment_STAR_.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword("cemerick.cljs.test", "test-functions", "cemerick.cljs.test/test-functions", -1547551786), cljs.core.List.EMPTY], null));
  cljs.core.swap_BANG_.call(null, G__27250, cljs.core.assoc, new cljs.core.Keyword(null, "async", "async", 1050769601), cemerick.cljs.test.init_test_environment_STAR_.call(null, cljs.core.PersistentArrayMap.EMPTY));
  return G__27250;
};
cemerick.cljs.test.registered_tests = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
cemerick.cljs.test.registered_test_hooks = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
cemerick.cljs.test.registered_fixtures = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
cemerick.cljs.test.register_test_BANG_ = function register_test_BANG_(ns, name, fn) {
  return cljs.core.swap_BANG_.call(null, cemerick.cljs.test.registered_tests, cljs.core.update_in, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [ns], null), cljs.core.assoc, name, fn);
};
cemerick.cljs.test.register_test_ns_hook_BANG_ = function register_test_ns_hook_BANG_(ns, name) {
  return cljs.core.swap_BANG_.call(null, cemerick.cljs.test.registered_test_hooks, cljs.core.assoc, ns, name);
};
cemerick.cljs.test.TestContext = function(test_env, test_name, __meta, __extmap, __hash) {
  this.test_env = test_env;
  this.test_name = test_name;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cemerick.cljs.test.TestContext.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__8107__auto__, k__8108__auto__) {
  var self__ = this;
  var this__8107__auto____$1 = this;
  return cljs.core._lookup.call(null, this__8107__auto____$1, k__8108__auto__, null);
};
cemerick.cljs.test.TestContext.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__8109__auto__, k27252, else__8110__auto__) {
  var self__ = this;
  var this__8109__auto____$1 = this;
  var G__27254 = k27252 instanceof cljs.core.Keyword ? k27252.fqn : null;
  switch(G__27254) {
    case "test-name":
      return self__.test_name;
      break;
    case "test-env":
      return self__.test_env;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k27252, else__8110__auto__);
  }
};
cemerick.cljs.test.TestContext.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__8121__auto__, writer__8122__auto__, opts__8123__auto__) {
  var self__ = this;
  var this__8121__auto____$1 = this;
  var pr_pair__8124__auto__ = function(this__8121__auto____$1) {
    return function(keyval__8125__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__8122__auto__, cljs.core.pr_writer, "", " ", "", opts__8123__auto__, keyval__8125__auto__);
    };
  }(this__8121__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__8122__auto__, pr_pair__8124__auto__, "#cemerick.cljs.test.TestContext{", ", ", "}", opts__8123__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "test-env", "test-env", -540228992), self__.test_env], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "test-name", "test-name", -675595913), self__.test_name], null)], null), self__.__extmap));
};
cemerick.cljs.test.TestContext.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__8105__auto__) {
  var self__ = this;
  var this__8105__auto____$1 = this;
  return self__.__meta;
};
cemerick.cljs.test.TestContext.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__8101__auto__) {
  var self__ = this;
  var this__8101__auto____$1 = this;
  return new cemerick.cljs.test.TestContext(self__.test_env, self__.test_name, self__.__meta, self__.__extmap, self__.__hash);
};
cemerick.cljs.test.TestContext.prototype.cljs$core$ICounted$_count$arity$1 = function(this__8111__auto__) {
  var self__ = this;
  var this__8111__auto____$1 = this;
  return 2 + cljs.core.count.call(null, self__.__extmap);
};
cemerick.cljs.test.TestContext.prototype.cljs$core$IHash$_hash$arity$1 = function(this__8102__auto__) {
  var self__ = this;
  var this__8102__auto____$1 = this;
  var h__7925__auto__ = self__.__hash;
  if (!(h__7925__auto__ == null)) {
    return h__7925__auto__;
  } else {
    var h__7925__auto____$1 = cljs.core.hash_imap.call(null, this__8102__auto____$1);
    self__.__hash = h__7925__auto____$1;
    return h__7925__auto____$1;
  }
};
cemerick.cljs.test.TestContext.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__8103__auto__, other__8104__auto__) {
  var self__ = this;
  var this__8103__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__7492__auto__ = other__8104__auto__;
    if (cljs.core.truth_(and__7492__auto__)) {
      return this__8103__auto____$1.constructor === other__8104__auto__.constructor && cljs.core.equiv_map.call(null, this__8103__auto____$1, other__8104__auto__);
    } else {
      return and__7492__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
cemerick.cljs.test.TestContext.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__8116__auto__, k__8117__auto__) {
  var self__ = this;
  var this__8116__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "test-env", "test-env", -540228992), null, new cljs.core.Keyword(null, "test-name", "test-name", -675595913), null], null), null), k__8117__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__8116__auto____$1), self__.__meta), k__8117__auto__);
  } else {
    return new cemerick.cljs.test.TestContext(self__.test_env, self__.test_name, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__8117__auto__)), null);
  }
};
cemerick.cljs.test.TestContext.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__8114__auto__, k__8115__auto__, G__27251) {
  var self__ = this;
  var this__8114__auto____$1 = this;
  var pred__27255 = cljs.core.keyword_identical_QMARK_;
  var expr__27256 = k__8115__auto__;
  if (cljs.core.truth_(pred__27255.call(null, new cljs.core.Keyword(null, "test-env", "test-env", -540228992), expr__27256))) {
    return new cemerick.cljs.test.TestContext(G__27251, self__.test_name, self__.__meta, self__.__extmap, null);
  } else {
    if (cljs.core.truth_(pred__27255.call(null, new cljs.core.Keyword(null, "test-name", "test-name", -675595913), expr__27256))) {
      return new cemerick.cljs.test.TestContext(self__.test_env, G__27251, self__.__meta, self__.__extmap, null);
    } else {
      return new cemerick.cljs.test.TestContext(self__.test_env, self__.test_name, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__8115__auto__, G__27251), null);
    }
  }
};
cemerick.cljs.test.TestContext.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__8119__auto__) {
  var self__ = this;
  var this__8119__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "test-env", "test-env", -540228992), self__.test_env], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "test-name", "test-name", -675595913), self__.test_name], null)], null), 
  self__.__extmap));
};
cemerick.cljs.test.TestContext.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__8106__auto__, G__27251) {
  var self__ = this;
  var this__8106__auto____$1 = this;
  return new cemerick.cljs.test.TestContext(self__.test_env, self__.test_name, G__27251, self__.__extmap, self__.__hash);
};
cemerick.cljs.test.TestContext.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__8112__auto__, entry__8113__auto__) {
  var self__ = this;
  var this__8112__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__8113__auto__)) {
    return cljs.core._assoc.call(null, this__8112__auto____$1, cljs.core._nth.call(null, entry__8113__auto__, 0), cljs.core._nth.call(null, entry__8113__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__8112__auto____$1, entry__8113__auto__);
  }
};
cemerick.cljs.test.TestContext.cljs$lang$type = true;
cemerick.cljs.test.TestContext.cljs$lang$ctorPrSeq = function(this__8141__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "cemerick.cljs.test/TestContext");
};
cemerick.cljs.test.TestContext.cljs$lang$ctorPrWriter = function(this__8141__auto__, writer__8142__auto__) {
  return cljs.core._write.call(null, writer__8142__auto__, "cemerick.cljs.test/TestContext");
};
cemerick.cljs.test.__GT_TestContext = function __GT_TestContext(test_env, test_name) {
  return new cemerick.cljs.test.TestContext(test_env, test_name, null, null, null);
};
cemerick.cljs.test.map__GT_TestContext = function map__GT_TestContext(G__27253) {
  return new cemerick.cljs.test.TestContext((new cljs.core.Keyword(null, "test-env", "test-env", -540228992)).cljs$core$IFn$_invoke$arity$1(G__27253), (new cljs.core.Keyword(null, "test-name", "test-name", -675595913)).cljs$core$IFn$_invoke$arity$1(G__27253), null, cljs.core.dissoc.call(null, G__27253, new cljs.core.Keyword(null, "test-env", "test-env", -540228992), new cljs.core.Keyword(null, "test-name", "test-name", -675595913)), null);
};
cemerick.cljs.test.maybe_deref = function maybe_deref(x) {
  if (function() {
    var G__27260 = x;
    if (G__27260) {
      var bit__8185__auto__ = G__27260.cljs$lang$protocol_mask$partition0$ & 32768;
      if (bit__8185__auto__ || G__27260.cljs$core$IDeref$) {
        return true;
      } else {
        if (!G__27260.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IDeref, G__27260);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IDeref, G__27260);
    }
  }()) {
    return cljs.core.deref.call(null, x);
  } else {
    return x;
  }
};
cemerick.cljs.test.testing_complete_QMARK_ = function testing_complete_QMARK_(test_env) {
  var map__27262 = cemerick.cljs.test.maybe_deref.call(null, test_env);
  var map__27262__$1 = cljs.core.seq_QMARK_.call(null, map__27262) ? cljs.core.apply.call(null, cljs.core.hash_map, map__27262) : map__27262;
  var remaining = cljs.core.get.call(null, map__27262__$1, new cljs.core.Keyword("cemerick.cljs.test", "remaining", "cemerick.cljs.test/remaining", -1491651312));
  var running = cljs.core.get.call(null, map__27262__$1, new cljs.core.Keyword("cemerick.cljs.test", "running", "cemerick.cljs.test/running", -1954037558));
  var async = cljs.core.get.call(null, map__27262__$1, new cljs.core.Keyword(null, "async", "async", 1050769601));
  var and__7492__auto__ = cljs.core.empty_QMARK_.call(null, remaining);
  if (and__7492__auto__) {
    var and__7492__auto____$1 = cljs.core.empty_QMARK_.call(null, running);
    if (and__7492__auto____$1) {
      var or__7504__auto__ = async == null;
      if (or__7504__auto__) {
        return or__7504__auto__;
      } else {
        return testing_complete_QMARK_.call(null, async);
      }
    } else {
      return and__7492__auto____$1;
    }
  } else {
    return and__7492__auto__;
  }
};
cemerick.cljs.test.on_async_progress = function on_async_progress(test_env, callback) {
  if (cljs.core.truth_(cemerick.cljs.test.testing_complete_QMARK_.call(null, test_env))) {
    setTimeout(function() {
      return callback.call(null, test_env);
    }, 1);
  } else {
    cljs.core.add_watch.call(null, (new cljs.core.Keyword(null, "async", "async", 1050769601)).cljs$core$IFn$_invoke$arity$1(cemerick.cljs.test.maybe_deref.call(null, test_env)), cljs.core.gensym.call(null, "on-progress"), function(key, ref, old, new$) {
      var vec__27265 = cljs.core.map.call(null, function(p1__27263_SHARP_) {
        return cljs.core.select_keys.call(null, p1__27263_SHARP_, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "test", "test", 577538877), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "error", "error", -978969032)], null));
      }, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [old, new$], null));
      var oldv = cljs.core.nth.call(null, vec__27265, 0, null);
      var newv = cljs.core.nth.call(null, vec__27265, 1, null);
      var complete_QMARK_ = cemerick.cljs.test.testing_complete_QMARK_.call(null, new$);
      if (cljs.core.truth_(function() {
        var or__7504__auto__ = complete_QMARK_;
        if (cljs.core.truth_(or__7504__auto__)) {
          return or__7504__auto__;
        } else {
          return cljs.core.not_EQ_.call(null, oldv, newv);
        }
      }())) {
        callback.call(null, cemerick.cljs.test.maybe_deref.call(null, test_env));
      } else {
      }
      if (cljs.core.truth_(complete_QMARK_)) {
        return cljs.core.remove_watch.call(null, ref, key);
      } else {
        return null;
      }
    });
  }
  return test_env;
};
goog.exportSymbol("cemerick.cljs.test.on_async_progress", cemerick.cljs.test.on_async_progress);
cemerick.cljs.test.on_testing_complete = function on_testing_complete(test_env, callback) {
  return cemerick.cljs.test.on_async_progress.call(null, test_env, function(test_env__$1) {
    if (cljs.core.truth_(cemerick.cljs.test.testing_complete_QMARK_.call(null, test_env__$1))) {
      return callback.call(null, test_env__$1);
    } else {
      return null;
    }
  });
};
goog.exportSymbol("cemerick.cljs.test.on_testing_complete", cemerick.cljs.test.on_testing_complete);
cemerick.cljs.test.testing_vars_str = function testing_vars_str(p__27266) {
  var map__27268 = p__27266;
  var map__27268__$1 = cljs.core.seq_QMARK_.call(null, map__27268) ? cljs.core.apply.call(null, cljs.core.hash_map, map__27268) : map__27268;
  var m = map__27268__$1;
  var test_name = cljs.core.get.call(null, map__27268__$1, new cljs.core.Keyword(null, "test-name", "test-name", -675595913));
  var test_env = cljs.core.get.call(null, map__27268__$1, new cljs.core.Keyword(null, "test-env", "test-env", -540228992));
  var line = cljs.core.get.call(null, map__27268__$1, new cljs.core.Keyword(null, "line", "line", 212345235));
  var file = cljs.core.get.call(null, map__27268__$1, new cljs.core.Keyword(null, "file", "file", -1269645878));
  return[cljs.core.str(cljs.core.pr_str.call(null, function() {
    var or__7504__auto__ = cljs.core.seq.call(null, cljs.core.reverse.call(null, (new cljs.core.Keyword("cemerick.cljs.test", "test-functions", "cemerick.cljs.test/test-functions", -1547551786)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, test_env))));
    if (or__7504__auto__) {
      return or__7504__auto__;
    } else {
      return cljs.core._conj.call(null, cljs.core.List.EMPTY, test_name);
    }
  }())), cljs.core.str(" ("), cljs.core.str(file), cljs.core.str(":"), cljs.core.str(line), cljs.core.str(")")].join("");
};
cemerick.cljs.test.testing_contexts_str = function testing_contexts_str(test_env) {
  return cljs.core.apply.call(null, cljs.core.str, cljs.core.interpose.call(null, " ", cljs.core.reverse.call(null, (new cljs.core.Keyword("cemerick.cljs.test", "test-contexts", "cemerick.cljs.test/test-contexts", 1505935128)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, test_env)))));
};
cemerick.cljs.test.inc_report_counter = function inc_report_counter(test_env, name) {
  return cljs.core.swap_BANG_.call(null, test_env, cljs.core.update_in, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [name], null), cljs.core.fnil.call(null, cljs.core.inc, 0));
};
cemerick.cljs.test.report = function() {
  var method_table__8401__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var prefer_table__8402__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var method_cache__8403__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var cached_hierarchy__8404__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var hierarchy__8405__auto__ = cljs.core.get.call(null, cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "hierarchy", "hierarchy", -1053470341), cljs.core.get_global_hierarchy.call(null));
  return new cljs.core.MultiFn(cljs.core.symbol.call(null, "cemerick.cljs.test", "report"), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "default", "default", -1987822328), hierarchy__8405__auto__, method_table__8401__auto__, prefer_table__8402__auto__, method_cache__8403__auto__, cached_hierarchy__8404__auto__);
}();
cemerick.cljs.test.file_and_line = function file_and_line(error) {
  return new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "file", "file", -1269645878), error.fileName, new cljs.core.Keyword(null, "line", "line", 212345235), error.lineNumber], null);
};
cemerick.cljs.test.do_report = function() {
  var do_report = null;
  var do_report__1 = function(m) {
    return cemerick.cljs.test.report.call(null, function() {
      var G__27273 = (new cljs.core.Keyword(null, "type", "type", 1174270348)).cljs$core$IFn$_invoke$arity$1(m) instanceof cljs.core.Keyword ? (new cljs.core.Keyword(null, "type", "type", 1174270348)).cljs$core$IFn$_invoke$arity$1(m).fqn : null;
      switch(G__27273) {
        case "error":
          return cljs.core.merge.call(null, cemerick.cljs.test.file_and_line.call(null, (new cljs.core.Keyword(null, "actual", "actual", 107306363)).cljs$core$IFn$_invoke$arity$1(m)), m);
          break;
        case "fail":
          return cljs.core.merge.call(null, cemerick.cljs.test.file_and_line.call(null, Error()), m);
          break;
        default:
          return m;
      }
    }());
  };
  var do_report__2 = function(p__27269, m) {
    var map__27272 = p__27269;
    var map__27272__$1 = cljs.core.seq_QMARK_.call(null, map__27272) ? cljs.core.apply.call(null, cljs.core.hash_map, map__27272) : map__27272;
    var test_ctx = map__27272__$1;
    var test_name = cljs.core.get.call(null, map__27272__$1, new cljs.core.Keyword(null, "test-name", "test-name", -675595913));
    var test_env = cljs.core.get.call(null, map__27272__$1, new cljs.core.Keyword(null, "test-env", "test-env", -540228992));
    if (test_ctx instanceof cemerick.cljs.test.TestContext) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "instance?", "instance?", 1075939923, null), new cljs.core.Symbol(null, "TestContext", "TestContext", -1631381989, null), new cljs.core.Symbol(null, "test-ctx", "test-ctx", -185362578, null))))].join(""));
    }
    return do_report.call(null, cljs.core.merge.call(null, m, test_ctx));
  };
  do_report = function(p__27269, m) {
    switch(arguments.length) {
      case 1:
        return do_report__1.call(this, p__27269);
      case 2:
        return do_report__2.call(this, p__27269, m);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  do_report.cljs$core$IFn$_invoke$arity$1 = do_report__1;
  do_report.cljs$core$IFn$_invoke$arity$2 = do_report__2;
  return do_report;
}();
cljs.core._add_method.call(null, cemerick.cljs.test.report, new cljs.core.Keyword(null, "default", "default", -1987822328), function(p__27275) {
  var map__27276 = p__27275;
  var map__27276__$1 = cljs.core.seq_QMARK_.call(null, map__27276) ? cljs.core.apply.call(null, cljs.core.hash_map, map__27276) : map__27276;
  var m = map__27276__$1;
  var test_env = cljs.core.get.call(null, map__27276__$1, new cljs.core.Keyword(null, "test-env", "test-env", -540228992));
  var _STAR_print_fn_STAR_27277 = cljs.core._STAR_print_fn_STAR_;
  cljs.core._STAR_print_fn_STAR_ = function() {
    var or__7504__auto__ = (new cljs.core.Keyword("cemerick.cljs.test", "test-print-fn", "cemerick.cljs.test/test-print-fn", -2097998143)).cljs$core$IFn$_invoke$arity$1(test_env);
    if (cljs.core.truth_(or__7504__auto__)) {
      return or__7504__auto__;
    } else {
      return cljs.core._STAR_print_fn_STAR_;
    }
  }();
  try {
    return cljs.core.prn.call(null, m);
  } finally {
    cljs.core._STAR_print_fn_STAR_ = _STAR_print_fn_STAR_27277;
  }
});
cljs.core._add_method.call(null, cemerick.cljs.test.report, new cljs.core.Keyword(null, "pass", "pass", 1574159993), function(p__27278) {
  var map__27279 = p__27278;
  var map__27279__$1 = cljs.core.seq_QMARK_.call(null, map__27279) ? cljs.core.apply.call(null, cljs.core.hash_map, map__27279) : map__27279;
  var m = map__27279__$1;
  var test_env = cljs.core.get.call(null, map__27279__$1, new cljs.core.Keyword(null, "test-env", "test-env", -540228992));
  var _STAR_print_fn_STAR_27280 = cljs.core._STAR_print_fn_STAR_;
  cljs.core._STAR_print_fn_STAR_ = function() {
    var or__7504__auto__ = (new cljs.core.Keyword("cemerick.cljs.test", "test-print-fn", "cemerick.cljs.test/test-print-fn", -2097998143)).cljs$core$IFn$_invoke$arity$1(test_env);
    if (cljs.core.truth_(or__7504__auto__)) {
      return or__7504__auto__;
    } else {
      return cljs.core._STAR_print_fn_STAR_;
    }
  }();
  try {
    return cemerick.cljs.test.inc_report_counter.call(null, test_env, new cljs.core.Keyword(null, "pass", "pass", 1574159993));
  } finally {
    cljs.core._STAR_print_fn_STAR_ = _STAR_print_fn_STAR_27280;
  }
});
cljs.core._add_method.call(null, cemerick.cljs.test.report, new cljs.core.Keyword(null, "fail", "fail", 1706214930), function(p__27281) {
  var map__27282 = p__27281;
  var map__27282__$1 = cljs.core.seq_QMARK_.call(null, map__27282) ? cljs.core.apply.call(null, cljs.core.hash_map, map__27282) : map__27282;
  var m = map__27282__$1;
  var test_env = cljs.core.get.call(null, map__27282__$1, new cljs.core.Keyword(null, "test-env", "test-env", -540228992));
  var _STAR_print_fn_STAR_27283 = cljs.core._STAR_print_fn_STAR_;
  cljs.core._STAR_print_fn_STAR_ = function() {
    var or__7504__auto__ = (new cljs.core.Keyword("cemerick.cljs.test", "test-print-fn", "cemerick.cljs.test/test-print-fn", -2097998143)).cljs$core$IFn$_invoke$arity$1(test_env);
    if (cljs.core.truth_(or__7504__auto__)) {
      return or__7504__auto__;
    } else {
      return cljs.core._STAR_print_fn_STAR_;
    }
  }();
  try {
    cemerick.cljs.test.inc_report_counter.call(null, test_env, new cljs.core.Keyword(null, "fail", "fail", 1706214930));
    cljs.core.println.call(null, "\nFAIL in", cemerick.cljs.test.testing_vars_str.call(null, m));
    if (cljs.core.seq.call(null, (new cljs.core.Keyword("cemerick.cljs.test", "test-contexts", "cemerick.cljs.test/test-contexts", 1505935128)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, test_env)))) {
      cljs.core.println.call(null, cemerick.cljs.test.testing_contexts_str.call(null, test_env));
    } else {
    }
    var temp__4126__auto___27284 = (new cljs.core.Keyword(null, "message", "message", -406056002)).cljs$core$IFn$_invoke$arity$1(m);
    if (cljs.core.truth_(temp__4126__auto___27284)) {
      var message_27285 = temp__4126__auto___27284;
      cljs.core.println.call(null, message_27285);
    } else {
    }
    cljs.core.println.call(null, "expected:", cljs.core.pr_str.call(null, (new cljs.core.Keyword(null, "expected", "expected", 1583670997)).cljs$core$IFn$_invoke$arity$1(m)));
    return cljs.core.println.call(null, "  actual:", cljs.core.pr_str.call(null, (new cljs.core.Keyword(null, "actual", "actual", 107306363)).cljs$core$IFn$_invoke$arity$1(m)));
  } finally {
    cljs.core._STAR_print_fn_STAR_ = _STAR_print_fn_STAR_27283;
  }
});
cljs.core._add_method.call(null, cemerick.cljs.test.report, new cljs.core.Keyword(null, "error", "error", -978969032), function(p__27286) {
  var map__27287 = p__27286;
  var map__27287__$1 = cljs.core.seq_QMARK_.call(null, map__27287) ? cljs.core.apply.call(null, cljs.core.hash_map, map__27287) : map__27287;
  var m = map__27287__$1;
  var test_env = cljs.core.get.call(null, map__27287__$1, new cljs.core.Keyword(null, "test-env", "test-env", -540228992));
  var _STAR_print_fn_STAR_27288 = cljs.core._STAR_print_fn_STAR_;
  cljs.core._STAR_print_fn_STAR_ = function() {
    var or__7504__auto__ = (new cljs.core.Keyword("cemerick.cljs.test", "test-print-fn", "cemerick.cljs.test/test-print-fn", -2097998143)).cljs$core$IFn$_invoke$arity$1(test_env);
    if (cljs.core.truth_(or__7504__auto__)) {
      return or__7504__auto__;
    } else {
      return cljs.core._STAR_print_fn_STAR_;
    }
  }();
  try {
    cemerick.cljs.test.inc_report_counter.call(null, test_env, new cljs.core.Keyword(null, "error", "error", -978969032));
    cljs.core.println.call(null, "\nERROR in", cemerick.cljs.test.testing_vars_str.call(null, m));
    if (cljs.core.seq.call(null, (new cljs.core.Keyword("cemerick.cljs.test", "test-contexts", "cemerick.cljs.test/test-contexts", 1505935128)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, test_env)))) {
      cljs.core.println.call(null, cemerick.cljs.test.testing_contexts_str.call(null, test_env));
    } else {
    }
    var temp__4126__auto___27289 = (new cljs.core.Keyword(null, "message", "message", -406056002)).cljs$core$IFn$_invoke$arity$1(m);
    if (cljs.core.truth_(temp__4126__auto___27289)) {
      var message_27290 = temp__4126__auto___27289;
      cljs.core.println.call(null, message_27290);
    } else {
    }
    cljs.core.println.call(null, "expected:", cljs.core.pr_str.call(null, (new cljs.core.Keyword(null, "expected", "expected", 1583670997)).cljs$core$IFn$_invoke$arity$1(m)));
    cljs.core.print.call(null, "  actual: ");
    var actual = (new cljs.core.Keyword(null, "actual", "actual", 107306363)).cljs$core$IFn$_invoke$arity$1(m);
    if (actual instanceof Error) {
      return cljs.core.println.call(null, actual.stack);
    } else {
      return cljs.core.prn.call(null, actual);
    }
  } finally {
    cljs.core._STAR_print_fn_STAR_ = _STAR_print_fn_STAR_27288;
  }
});
cljs.core._add_method.call(null, cemerick.cljs.test.report, new cljs.core.Keyword(null, "multiple-async-done", "multiple-async-done", 910410709), function(p__27291) {
  var map__27292 = p__27291;
  var map__27292__$1 = cljs.core.seq_QMARK_.call(null, map__27292) ? cljs.core.apply.call(null, cljs.core.hash_map, map__27292) : map__27292;
  var m = map__27292__$1;
  var test_env = cljs.core.get.call(null, map__27292__$1, new cljs.core.Keyword(null, "test-env", "test-env", -540228992));
  var _STAR_print_fn_STAR_27293 = cljs.core._STAR_print_fn_STAR_;
  cljs.core._STAR_print_fn_STAR_ = function() {
    var or__7504__auto__ = (new cljs.core.Keyword("cemerick.cljs.test", "test-print-fn", "cemerick.cljs.test/test-print-fn", -2097998143)).cljs$core$IFn$_invoke$arity$1(test_env);
    if (cljs.core.truth_(or__7504__auto__)) {
      return or__7504__auto__;
    } else {
      return cljs.core._STAR_print_fn_STAR_;
    }
  }();
  try {
    cemerick.cljs.test.inc_report_counter.call(null, test_env, new cljs.core.Keyword(null, "multiple-async-done", "multiple-async-done", 910410709));
    cljs.core.println.call(null, "\nWARNING in", cemerick.cljs.test.testing_vars_str.call(null, m));
    if (cljs.core.seq.call(null, (new cljs.core.Keyword("cemerick.cljs.test", "test-contexts", "cemerick.cljs.test/test-contexts", 1505935128)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, test_env)))) {
      cljs.core.println.call(null, cemerick.cljs.test.testing_contexts_str.call(null, test_env));
    } else {
    }
    var temp__4126__auto__ = (new cljs.core.Keyword(null, "message", "message", -406056002)).cljs$core$IFn$_invoke$arity$1(m);
    if (cljs.core.truth_(temp__4126__auto__)) {
      var message = temp__4126__auto__;
      return cljs.core.println.call(null, message);
    } else {
      return null;
    }
  } finally {
    cljs.core._STAR_print_fn_STAR_ = _STAR_print_fn_STAR_27293;
  }
});
cljs.core._add_method.call(null, cemerick.cljs.test.report, new cljs.core.Keyword(null, "summary", "summary", 380847952), function(p__27294) {
  var map__27295 = p__27294;
  var map__27295__$1 = cljs.core.seq_QMARK_.call(null, map__27295) ? cljs.core.apply.call(null, cljs.core.hash_map, map__27295) : map__27295;
  var test_env = map__27295__$1;
  var error = cljs.core.get.call(null, map__27295__$1, new cljs.core.Keyword(null, "error", "error", -978969032));
  var fail = cljs.core.get.call(null, map__27295__$1, new cljs.core.Keyword(null, "fail", "fail", 1706214930));
  var pass = cljs.core.get.call(null, map__27295__$1, new cljs.core.Keyword(null, "pass", "pass", 1574159993));
  var test = cljs.core.get.call(null, map__27295__$1, new cljs.core.Keyword(null, "test", "test", 577538877));
  var _STAR_print_fn_STAR_27296 = cljs.core._STAR_print_fn_STAR_;
  cljs.core._STAR_print_fn_STAR_ = function() {
    var or__7504__auto__ = (new cljs.core.Keyword("cemerick.cljs.test", "test-print-fn", "cemerick.cljs.test/test-print-fn", -2097998143)).cljs$core$IFn$_invoke$arity$1(test_env);
    if (cljs.core.truth_(or__7504__auto__)) {
      return or__7504__auto__;
    } else {
      return cljs.core._STAR_print_fn_STAR_;
    }
  }();
  try {
    cljs.core.println.call(null, "\nRan", test, "tests containing", pass + fail + error, "assertions.");
    cljs.core.println.call(null, "Testing complete:", fail, "failures,", error, "errors.");
    var temp__4126__auto__ = function() {
      var and__7492__auto__ = cljs.core.not.call(null, cemerick.cljs.test.testing_complete_QMARK_.call(null, test_env));
      if (and__7492__auto__) {
        return cljs.core.apply.call(null, cljs.core._PLUS_, cljs.core.map.call(null, cljs.core.count, cljs.core.juxt.call(null, new cljs.core.Keyword("cemerick.cljs.test", "remaining", "cemerick.cljs.test/remaining", -1491651312), new cljs.core.Keyword("cemerick.cljs.test", "running", "cemerick.cljs.test/running", -1954037558)).call(null, cljs.core.deref.call(null, (new cljs.core.Keyword(null, "async", "async", 1050769601)).cljs$core$IFn$_invoke$arity$1(test_env)))));
      } else {
        return and__7492__auto__;
      }
    }();
    if (cljs.core.truth_(temp__4126__auto__)) {
      var pending_count = temp__4126__auto__;
      return cljs.core.println.call(null, "Waiting on", pending_count, [cljs.core.str("asynchronous test"), cljs.core.str(pending_count > 1 ? "s" : null), cljs.core.str(" to complete.")].join(""));
    } else {
      return null;
    }
  } finally {
    cljs.core._STAR_print_fn_STAR_ = _STAR_print_fn_STAR_27296;
  }
});
cljs.core._add_method.call(null, cemerick.cljs.test.report, new cljs.core.Keyword(null, "begin-test-ns", "begin-test-ns", -1701237033), function(p__27297) {
  var map__27298 = p__27297;
  var map__27298__$1 = cljs.core.seq_QMARK_.call(null, map__27298) ? cljs.core.apply.call(null, cljs.core.hash_map, map__27298) : map__27298;
  var m = map__27298__$1;
  var async = cljs.core.get.call(null, map__27298__$1, new cljs.core.Keyword(null, "async", "async", 1050769601));
  var test_env = cljs.core.get.call(null, map__27298__$1, new cljs.core.Keyword(null, "test-env", "test-env", -540228992));
  var ns = cljs.core.get.call(null, map__27298__$1, new cljs.core.Keyword(null, "ns", "ns", 441598760));
  var _STAR_print_fn_STAR_27299 = cljs.core._STAR_print_fn_STAR_;
  cljs.core._STAR_print_fn_STAR_ = function() {
    var or__7504__auto__ = (new cljs.core.Keyword("cemerick.cljs.test", "test-print-fn", "cemerick.cljs.test/test-print-fn", -2097998143)).cljs$core$IFn$_invoke$arity$1(test_env);
    if (cljs.core.truth_(or__7504__auto__)) {
      return or__7504__auto__;
    } else {
      return cljs.core._STAR_print_fn_STAR_;
    }
  }();
  try {
    return cljs.core.println.call(null, "\nTesting", ns, cljs.core.truth_(async) ? "(async)" : "");
  } finally {
    cljs.core._STAR_print_fn_STAR_ = _STAR_print_fn_STAR_27299;
  }
});
cljs.core._add_method.call(null, cemerick.cljs.test.report, new cljs.core.Keyword(null, "end-test-ns", "end-test-ns", 1620675645), function(p__27300) {
  var map__27301 = p__27300;
  var map__27301__$1 = cljs.core.seq_QMARK_.call(null, map__27301) ? cljs.core.apply.call(null, cljs.core.hash_map, map__27301) : map__27301;
  var m = map__27301__$1;
  var test_env = cljs.core.get.call(null, map__27301__$1, new cljs.core.Keyword(null, "test-env", "test-env", -540228992));
  return null;
});
cljs.core._add_method.call(null, cemerick.cljs.test.report, new cljs.core.Keyword(null, "begin-test-var", "begin-test-var", -908571100), function(p__27302) {
  var map__27303 = p__27302;
  var map__27303__$1 = cljs.core.seq_QMARK_.call(null, map__27303) ? cljs.core.apply.call(null, cljs.core.hash_map, map__27303) : map__27303;
  var m = map__27303__$1;
  var test_env = cljs.core.get.call(null, map__27303__$1, new cljs.core.Keyword(null, "test-env", "test-env", -540228992));
  return null;
});
cljs.core._add_method.call(null, cemerick.cljs.test.report, new cljs.core.Keyword(null, "end-test-var", "end-test-var", 984198545), function(p__27304) {
  var map__27305 = p__27304;
  var map__27305__$1 = cljs.core.seq_QMARK_.call(null, map__27305) ? cljs.core.apply.call(null, cljs.core.hash_map, map__27305) : map__27305;
  var m = map__27305__$1;
  var test_env = cljs.core.get.call(null, map__27305__$1, new cljs.core.Keyword(null, "test-env", "test-env", -540228992));
  return null;
});
cemerick.cljs.test.register_fixtures_BANG_ = function() {
  var register_fixtures_BANG___delegate = function(ns_sym, fixture_type, fixture_fns) {
    return cljs.core.swap_BANG_.call(null, cemerick.cljs.test.registered_fixtures, cljs.core.update_in, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [ns_sym, fixture_type], null), cljs.core.constantly.call(null, fixture_fns));
  };
  var register_fixtures_BANG_ = function(ns_sym, fixture_type, var_args) {
    var fixture_fns = null;
    if (arguments.length > 2) {
      var G__27306__i = 0, G__27306__a = new Array(arguments.length - 2);
      while (G__27306__i < G__27306__a.length) {
        G__27306__a[G__27306__i] = arguments[G__27306__i + 2];
        ++G__27306__i;
      }
      fixture_fns = new cljs.core.IndexedSeq(G__27306__a, 0);
    }
    return register_fixtures_BANG___delegate.call(this, ns_sym, fixture_type, fixture_fns);
  };
  register_fixtures_BANG_.cljs$lang$maxFixedArity = 2;
  register_fixtures_BANG_.cljs$lang$applyTo = function(arglist__27307) {
    var ns_sym = cljs.core.first(arglist__27307);
    arglist__27307 = cljs.core.next(arglist__27307);
    var fixture_type = cljs.core.first(arglist__27307);
    var fixture_fns = cljs.core.rest(arglist__27307);
    return register_fixtures_BANG___delegate(ns_sym, fixture_type, fixture_fns);
  };
  register_fixtures_BANG_.cljs$core$IFn$_invoke$arity$variadic = register_fixtures_BANG___delegate;
  return register_fixtures_BANG_;
}();
cemerick.cljs.test.default_fixture = function default_fixture(f) {
  return f.call(null);
};
cemerick.cljs.test.compose_fixtures = function compose_fixtures(f1, f2) {
  return function(g) {
    return f1.call(null, function() {
      return f2.call(null, g);
    });
  };
};
cemerick.cljs.test.join_fixtures = function join_fixtures(fixtures) {
  return cljs.core.reduce.call(null, cemerick.cljs.test.compose_fixtures, cemerick.cljs.test.default_fixture, fixtures);
};
cemerick.cljs.test.async_test_QMARK_ = function async_test_QMARK_(test_fn) {
  return cljs.core.boolean$.call(null, (new cljs.core.Keyword(null, "async", "async", 1050769601)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, test_fn)));
};
cemerick.cljs.test.test_async_fn = function test_async_fn(async_test_env, test_name, test_fn) {
  cemerick.cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "begin-test-var", "begin-test-var", -908571100), new cljs.core.Keyword(null, "var", "var", -769682797), test_fn, new cljs.core.Keyword(null, "test-env", "test-env", -540228992), async_test_env, new cljs.core.Keyword(null, "test-name", "test-name", -675595913), test_name], null));
  cemerick.cljs.test.inc_report_counter.call(null, async_test_env, new cljs.core.Keyword(null, "test", "test", 577538877));
  return test_fn.call(null, new cemerick.cljs.test.TestContext(async_test_env, test_name, null, null, null));
};
cemerick.cljs.test.start_next_async_test = function start_next_async_test(async_test_env) {
  var next_test = cljs.core.atom.call(null, function() {
    return null;
  });
  cljs.core.swap_BANG_.call(null, async_test_env, function(next_test) {
    return function(env) {
      var temp__4124__auto__ = function() {
        var and__7492__auto__ = cljs.core.not.call(null, (new cljs.core.Keyword(null, "stop", "stop", -2140911342)).cljs$core$IFn$_invoke$arity$1(env));
        if (and__7492__auto__) {
          return cljs.core.first.call(null, (new cljs.core.Keyword("cemerick.cljs.test", "remaining", "cemerick.cljs.test/remaining", -1491651312)).cljs$core$IFn$_invoke$arity$1(env));
        } else {
          return and__7492__auto__;
        }
      }();
      if (cljs.core.truth_(temp__4124__auto__)) {
        var vec__27309 = temp__4124__auto__;
        var name = cljs.core.nth.call(null, vec__27309, 0, null);
        var testfn = cljs.core.nth.call(null, vec__27309, 1, null);
        cljs.core.reset_BANG_.call(null, next_test, testfn);
        var ns_27310 = cljs.core.namespace.call(null, name);
        if (cljs.core.contains_QMARK_.call(null, (new cljs.core.Keyword(null, "namespaces", "namespaces", -1444157469)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, async_test_env)), ns_27310)) {
        } else {
          cemerick.cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "begin-test-ns", "begin-test-ns", -1701237033), new cljs.core.Keyword(null, "ns", "ns", 441598760), ns_27310, new cljs.core.Keyword(null, "test-env", "test-env", -540228992), async_test_env, new cljs.core.Keyword(null, "async", "async", 1050769601), true], null));
          cljs.core.alter_meta_BANG_.call(null, async_test_env, cljs.core.update_in, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "namespaces", "namespaces", -1444157469)], null), cljs.core.fnil.call(null, cljs.core.conj, cljs.core.PersistentHashSet.EMPTY), ns_27310);
        }
        return cljs.core.update_in.call(null, cljs.core.update_in.call(null, env, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("cemerick.cljs.test", "remaining", "cemerick.cljs.test/remaining", -1491651312)], null), cljs.core.dissoc, name), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("cemerick.cljs.test", "running", "cemerick.cljs.test/running", -1954037558)], null), cljs.core.assoc, 
        name, new Date);
      } else {
        return env;
      }
    };
  }(next_test));
  setTimeout(function(next_test) {
    return function() {
      return cljs.core.deref.call(null, next_test).call(null);
    };
  }(next_test), 1);
  return async_test_env;
};
cemerick.cljs.test.squelch_internals = function squelch_internals(test_env) {
  var G__27315 = test_env;
  cljs.core.swap_BANG_.call(null, G__27315, function(G__27315) {
    return function(p1__27311_SHARP_) {
      return cljs.core.reduce.call(null, function(G__27315) {
        return function(env, p__27316) {
          var vec__27317 = p__27316;
          var k = cljs.core.nth.call(null, vec__27317, 0, null);
          var v = cljs.core.nth.call(null, vec__27317, 1, null);
          if (cljs.core._EQ_.call(null, cljs.core.namespace.call(null, k), cljs.core.namespace.call(null, new cljs.core.Keyword("cemerick.cljs.test", "foo", "cemerick.cljs.test/foo", -1669146357)))) {
            return env;
          } else {
            return cljs.core.assoc.call(null, env, k, v);
          }
        };
      }(G__27315), cljs.core.PersistentArrayMap.EMPTY, p1__27311_SHARP_);
    };
  }(G__27315));
  return G__27315;
};
cemerick.cljs.test.finish_test_entry_point = function finish_test_entry_point(entry_point_QMARK_, test_env) {
  if (cljs.core.truth_(entry_point_QMARK_)) {
    if (cljs.core.empty_QMARK_.call(null, (new cljs.core.Keyword("cemerick.cljs.test", "remaining", "cemerick.cljs.test/remaining", -1491651312)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, (new cljs.core.Keyword(null, "async", "async", 1050769601)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, test_env)))))) {
      cljs.core.swap_BANG_.call(null, test_env, cljs.core.dissoc, new cljs.core.Keyword(null, "async", "async", 1050769601));
    } else {
      cemerick.cljs.test.start_next_async_test.call(null, (new cljs.core.Keyword(null, "async", "async", 1050769601)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, test_env)));
    }
    return cljs.core.deref.call(null, cemerick.cljs.test.squelch_internals.call(null, test_env));
  } else {
    return test_env;
  }
};
cemerick.cljs.test.schedule_async_test = function schedule_async_test(async_test_env, test_name, test_fn) {
  cljs.core.swap_BANG_.call(null, async_test_env, cljs.core.update_in, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("cemerick.cljs.test", "remaining", "cemerick.cljs.test/remaining", -1491651312)], null), cljs.core.fnil.call(null, cljs.core.assoc, cljs.core.sorted_map.call(null)), test_name, cljs.core.with_meta.call(null, function() {
    return cemerick.cljs.test.test_async_fn.call(null, async_test_env, test_name, test_fn);
  }, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "name", "name", 1843675177), test_name], null)));
  return async_test_env;
};
cemerick.cljs.test.done_STAR_ = function() {
  var done_STAR_ = null;
  var done_STAR___1 = function(p__27319) {
    var map__27323 = p__27319;
    var map__27323__$1 = cljs.core.seq_QMARK_.call(null, map__27323) ? cljs.core.apply.call(null, cljs.core.hash_map, map__27323) : map__27323;
    var test_ctx = map__27323__$1;
    var test_name = cljs.core.get.call(null, map__27323__$1, new cljs.core.Keyword(null, "test-name", "test-name", -675595913));
    var async_test_env = cljs.core.get.call(null, map__27323__$1, new cljs.core.Keyword(null, "test-env", "test-env", -540228992));
    if (test_ctx instanceof cemerick.cljs.test.TestContext) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "instance?", "instance?", 1075939923, null), new cljs.core.Symbol(null, "TestContext", "TestContext", -1631381989, null), new cljs.core.Symbol(null, "test-ctx", "test-ctx", -185362578, null))))].join(""));
    }
    var first_call_QMARK_ = cljs.core.atom.call(null, false);
    cljs.core.swap_BANG_.call(null, async_test_env, function(first_call_QMARK_, map__27323, map__27323__$1, test_ctx, test_name, async_test_env) {
      return function(env) {
        cljs.core.reset_BANG_.call(null, first_call_QMARK_, cljs.core.contains_QMARK_.call(null, (new cljs.core.Keyword("cemerick.cljs.test", "running", "cemerick.cljs.test/running", -1954037558)).cljs$core$IFn$_invoke$arity$1(env), test_name));
        return cljs.core.update_in.call(null, env, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("cemerick.cljs.test", "running", "cemerick.cljs.test/running", -1954037558)], null), cljs.core.dissoc, test_name);
      };
    }(first_call_QMARK_, map__27323, map__27323__$1, test_ctx, test_name, async_test_env));
    if (cljs.core.truth_(cljs.core.deref.call(null, first_call_QMARK_))) {
      cemerick.cljs.test.do_report.call(null, cljs.core.merge.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "end-test-var", "end-test-var", 984198545), new cljs.core.Keyword(null, "var", "var", -769682797), test_name], null), test_ctx));
      if (cljs.core.truth_(cemerick.cljs.test.testing_complete_QMARK_.call(null, async_test_env))) {
        cemerick.cljs.test.squelch_internals.call(null, async_test_env);
      } else {
        cemerick.cljs.test.start_next_async_test.call(null, async_test_env);
      }
    } else {
      cemerick.cljs.test.do_report.call(null, cljs.core.merge.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "multiple-async-done", "multiple-async-done", 910410709), new cljs.core.Keyword(null, "message", "message", -406056002), "`(done)` called multiple times to signal end-of-test"], null), test_ctx));
    }
    return async_test_env;
  };
  var done_STAR___2 = function(p__27318, error) {
    var map__27322 = p__27318;
    var map__27322__$1 = cljs.core.seq_QMARK_.call(null, map__27322) ? cljs.core.apply.call(null, cljs.core.hash_map, map__27322) : map__27322;
    var test_ctx = map__27322__$1;
    var test_name = cljs.core.get.call(null, map__27322__$1, new cljs.core.Keyword(null, "test-name", "test-name", -675595913));
    var test_env = cljs.core.get.call(null, map__27322__$1, new cljs.core.Keyword(null, "test-env", "test-env", -540228992));
    if (test_ctx instanceof cemerick.cljs.test.TestContext) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "instance?", "instance?", 1075939923, null), new cljs.core.Symbol(null, "TestContext", "TestContext", -1631381989, null), new cljs.core.Symbol(null, "test-ctx", "test-ctx", -185362578, null))))].join(""));
    }
    cemerick.cljs.test.do_report.call(null, cemerick.cljs.test.do_report.call(null, cljs.core.merge.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "message", "message", -406056002), "Uncaught exception, not in assertion.", new cljs.core.Keyword(null, "expected", "expected", 1583670997), null, new cljs.core.Keyword(null, "actual", "actual", 107306363), 
    error], null), test_ctx)));
    return done_STAR_.call(null, test_ctx);
  };
  done_STAR_ = function(p__27318, error) {
    switch(arguments.length) {
      case 1:
        return done_STAR___1.call(this, p__27318);
      case 2:
        return done_STAR___2.call(this, p__27318, error);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  done_STAR_.cljs$core$IFn$_invoke$arity$1 = done_STAR___1;
  done_STAR_.cljs$core$IFn$_invoke$arity$2 = done_STAR___2;
  return done_STAR_;
}();
cemerick.cljs.test.stop = function stop(async_test_env) {
  return cljs.core.swap_BANG_.call(null, async_test_env, cljs.core.assoc, new cljs.core.Keyword(null, "stop", "stop", -2140911342), true);
};
cemerick.cljs.test.test_function = function() {
  var test_function = null;
  var test_function__1 = function(v) {
    return test_function.call(null, cemerick.cljs.test.init_test_environment.call(null), v);
  };
  var test_function__2 = function(test_env, v) {
    var entry_point_QMARK___15088__auto__ = cemerick.cljs.test._STAR_entry_point_STAR_;
    var _STAR_entry_point_STAR_27327 = cemerick.cljs.test._STAR_entry_point_STAR_;
    cemerick.cljs.test._STAR_entry_point_STAR_ = false;
    try {
      if (cljs.core.fn_QMARK_.call(null, v)) {
      } else {
        throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("test-var must be passed the function to be tested (not a symbol naming it)"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "fn?", "fn?", 1820990818, null), new cljs.core.Symbol(null, "v", "v", 1661996586, null))))].join(""));
      }
      var map__27328_27330 = cljs.core.meta.call(null, v);
      var map__27328_27331__$1 = cljs.core.seq_QMARK_.call(null, map__27328_27330) ? cljs.core.apply.call(null, cljs.core.hash_map, map__27328_27330) : map__27328_27330;
      var t_27332 = cljs.core.get.call(null, map__27328_27331__$1, new cljs.core.Keyword(null, "test", "test", 577538877));
      var test_name_27333 = cljs.core.get.call(null, map__27328_27331__$1, new cljs.core.Keyword(null, "name", "name", 1843675177));
      var async_QMARK__27334 = cljs.core.get.call(null, map__27328_27331__$1, new cljs.core.Keyword(null, "async", "async", 1050769601));
      if (cljs.core.truth_(t_27332)) {
        if (cljs.core.truth_(async_QMARK__27334)) {
          cemerick.cljs.test.schedule_async_test.call(null, (new cljs.core.Keyword(null, "async", "async", 1050769601)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, test_env)), test_name_27333, t_27332);
        } else {
          try {
            cljs.core.swap_BANG_.call(null, test_env, cljs.core.update_in, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("cemerick.cljs.test", "test-functions", "cemerick.cljs.test/test-functions", -1547551786)], null), cljs.core.conj, function() {
              var or__7504__auto__ = test_name_27333;
              if (cljs.core.truth_(or__7504__auto__)) {
                return or__7504__auto__;
              } else {
                return v;
              }
            }());
            cemerick.cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "begin-test-var", "begin-test-var", -908571100), new cljs.core.Keyword(null, "var", "var", -769682797), v, new cljs.core.Keyword(null, "test-env", "test-env", -540228992), test_env, new cljs.core.Keyword(null, "test-name", "test-name", -675595913), test_name_27333], null));
            cemerick.cljs.test.inc_report_counter.call(null, test_env, new cljs.core.Keyword(null, "test", "test", 577538877));
            try {
              t_27332.call(null, new cemerick.cljs.test.TestContext(test_env, test_name_27333, null, null, null));
            } catch (e27329) {
              if (e27329 instanceof Error) {
                var e_27335 = e27329;
                cemerick.cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "message", "message", -406056002), "Uncaught exception, not in assertion.", new cljs.core.Keyword(null, "test-env", "test-env", -540228992), test_env, new cljs.core.Keyword(null, "test-name", "test-name", -675595913), test_name_27333, new cljs.core.Keyword(null, 
                "expected", "expected", 1583670997), null, new cljs.core.Keyword(null, "actual", "actual", 107306363), e_27335], null));
              } else {
                throw e27329;
              }
            }
            cemerick.cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "end-test-var", "end-test-var", 984198545), new cljs.core.Keyword(null, "var", "var", -769682797), v, new cljs.core.Keyword(null, "test-env", "test-env", -540228992), test_env, new cljs.core.Keyword(null, "test-name", "test-name", -675595913), test_name_27333], null));
          } finally {
            cljs.core.swap_BANG_.call(null, test_env, cljs.core.update_in, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("cemerick.cljs.test", "test-functions", "cemerick.cljs.test/test-functions", -1547551786)], null), cljs.core.pop);
          }
        }
      } else {
      }
      return cemerick.cljs.test.finish_test_entry_point.call(null, entry_point_QMARK___15088__auto__, test_env);
    } finally {
      cemerick.cljs.test._STAR_entry_point_STAR_ = _STAR_entry_point_STAR_27327;
    }
  };
  test_function = function(test_env, v) {
    switch(arguments.length) {
      case 1:
        return test_function__1.call(this, test_env);
      case 2:
        return test_function__2.call(this, test_env, v);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  test_function.cljs$core$IFn$_invoke$arity$1 = test_function__1;
  test_function.cljs$core$IFn$_invoke$arity$2 = test_function__2;
  return test_function;
}();
cemerick.cljs.test.test_all_vars = function() {
  var test_all_vars = null;
  var test_all_vars__1 = function(ns_sym) {
    return test_all_vars.call(null, cemerick.cljs.test.init_test_environment.call(null), ns_sym);
  };
  var test_all_vars__2 = function(test_env, ns_sym) {
    var entry_point_QMARK___15088__auto__ = cemerick.cljs.test._STAR_entry_point_STAR_;
    var _STAR_entry_point_STAR_27344 = cemerick.cljs.test._STAR_entry_point_STAR_;
    cemerick.cljs.test._STAR_entry_point_STAR_ = false;
    try {
      var tests_27349 = cljs.core.filter.call(null, function(_STAR_entry_point_STAR_27344, entry_point_QMARK___15088__auto__) {
        return function(p1__27336_SHARP_) {
          return(new cljs.core.Keyword(null, "test", "test", 577538877)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, p1__27336_SHARP_));
        };
      }(_STAR_entry_point_STAR_27344, entry_point_QMARK___15088__auto__), cljs.core.vals.call(null, cljs.core.get.call(null, cljs.core.deref.call(null, cemerick.cljs.test.registered_tests), ns_sym)));
      var once_fixture_fn_27350 = cemerick.cljs.test.join_fixtures.call(null, (new cljs.core.Keyword(null, "once", "once", -262568523)).cljs$core$IFn$_invoke$arity$1(ns_sym.call(null, cljs.core.deref.call(null, cemerick.cljs.test.registered_fixtures))));
      var each_fixture_fn_27351 = cemerick.cljs.test.join_fixtures.call(null, (new cljs.core.Keyword(null, "each", "each", 940016129)).cljs$core$IFn$_invoke$arity$1(ns_sym.call(null, cljs.core.deref.call(null, cemerick.cljs.test.registered_fixtures))));
      once_fixture_fn_27350.call(null, function(once_fixture_fn_27350, each_fixture_fn_27351, tests_27349, _STAR_entry_point_STAR_27344, entry_point_QMARK___15088__auto__) {
        return function() {
          var seq__27345 = cljs.core.seq.call(null, cljs.core.remove.call(null, cemerick.cljs.test.async_test_QMARK_, tests_27349));
          var chunk__27346 = null;
          var count__27347 = 0;
          var i__27348 = 0;
          while (true) {
            if (i__27348 < count__27347) {
              var v = cljs.core._nth.call(null, chunk__27346, i__27348);
              each_fixture_fn_27351.call(null, function(seq__27345, chunk__27346, count__27347, i__27348, v, once_fixture_fn_27350, each_fixture_fn_27351, tests_27349, _STAR_entry_point_STAR_27344, entry_point_QMARK___15088__auto__) {
                return function() {
                  return cemerick.cljs.test.test_function.call(null, test_env, v);
                };
              }(seq__27345, chunk__27346, count__27347, i__27348, v, once_fixture_fn_27350, each_fixture_fn_27351, tests_27349, _STAR_entry_point_STAR_27344, entry_point_QMARK___15088__auto__));
              var G__27352 = seq__27345;
              var G__27353 = chunk__27346;
              var G__27354 = count__27347;
              var G__27355 = i__27348 + 1;
              seq__27345 = G__27352;
              chunk__27346 = G__27353;
              count__27347 = G__27354;
              i__27348 = G__27355;
              continue;
            } else {
              var temp__4126__auto__ = cljs.core.seq.call(null, seq__27345);
              if (temp__4126__auto__) {
                var seq__27345__$1 = temp__4126__auto__;
                if (cljs.core.chunked_seq_QMARK_.call(null, seq__27345__$1)) {
                  var c__8291__auto__ = cljs.core.chunk_first.call(null, seq__27345__$1);
                  var G__27356 = cljs.core.chunk_rest.call(null, seq__27345__$1);
                  var G__27357 = c__8291__auto__;
                  var G__27358 = cljs.core.count.call(null, c__8291__auto__);
                  var G__27359 = 0;
                  seq__27345 = G__27356;
                  chunk__27346 = G__27357;
                  count__27347 = G__27358;
                  i__27348 = G__27359;
                  continue;
                } else {
                  var v = cljs.core.first.call(null, seq__27345__$1);
                  each_fixture_fn_27351.call(null, function(seq__27345, chunk__27346, count__27347, i__27348, v, seq__27345__$1, temp__4126__auto__, once_fixture_fn_27350, each_fixture_fn_27351, tests_27349, _STAR_entry_point_STAR_27344, entry_point_QMARK___15088__auto__) {
                    return function() {
                      return cemerick.cljs.test.test_function.call(null, test_env, v);
                    };
                  }(seq__27345, chunk__27346, count__27347, i__27348, v, seq__27345__$1, temp__4126__auto__, once_fixture_fn_27350, each_fixture_fn_27351, tests_27349, _STAR_entry_point_STAR_27344, entry_point_QMARK___15088__auto__));
                  var G__27360 = cljs.core.next.call(null, seq__27345__$1);
                  var G__27361 = null;
                  var G__27362 = 0;
                  var G__27363 = 0;
                  seq__27345 = G__27360;
                  chunk__27346 = G__27361;
                  count__27347 = G__27362;
                  i__27348 = G__27363;
                  continue;
                }
              } else {
                return null;
              }
            }
            break;
          }
        };
      }(once_fixture_fn_27350, each_fixture_fn_27351, tests_27349, _STAR_entry_point_STAR_27344, entry_point_QMARK___15088__auto__));
      cljs.core.reduce.call(null, function(tests_27349, _STAR_entry_point_STAR_27344, entry_point_QMARK___15088__auto__) {
        return function(p1__27337_SHARP_, p2__27338_SHARP_) {
          return cljs.core.apply.call(null, cemerick.cljs.test.schedule_async_test, p1__27337_SHARP_, p2__27338_SHARP_);
        };
      }(tests_27349, _STAR_entry_point_STAR_27344, entry_point_QMARK___15088__auto__), (new cljs.core.Keyword(null, "async", "async", 1050769601)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, test_env)), cljs.core.map.call(null, cljs.core.comp.call(null, cljs.core.juxt.call(null, new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "test", "test", 577538877)), cljs.core.meta), cljs.core.filter.call(null, cemerick.cljs.test.async_test_QMARK_, tests_27349)));
      return cemerick.cljs.test.finish_test_entry_point.call(null, entry_point_QMARK___15088__auto__, test_env);
    } finally {
      cemerick.cljs.test._STAR_entry_point_STAR_ = _STAR_entry_point_STAR_27344;
    }
  };
  test_all_vars = function(test_env, ns_sym) {
    switch(arguments.length) {
      case 1:
        return test_all_vars__1.call(this, test_env);
      case 2:
        return test_all_vars__2.call(this, test_env, ns_sym);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  test_all_vars.cljs$core$IFn$_invoke$arity$1 = test_all_vars__1;
  test_all_vars.cljs$core$IFn$_invoke$arity$2 = test_all_vars__2;
  return test_all_vars;
}();
cemerick.cljs.test.test_ns = function() {
  var test_ns = null;
  var test_ns__1 = function(ns_sym) {
    return test_ns.call(null, cemerick.cljs.test.init_test_environment.call(null), ns_sym);
  };
  var test_ns__2 = function(test_env, ns_sym) {
    var entry_point_QMARK___15088__auto__ = cemerick.cljs.test._STAR_entry_point_STAR_;
    var _STAR_entry_point_STAR_27365 = cemerick.cljs.test._STAR_entry_point_STAR_;
    cemerick.cljs.test._STAR_entry_point_STAR_ = false;
    try {
      cemerick.cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "begin-test-ns", "begin-test-ns", -1701237033), new cljs.core.Keyword(null, "ns", "ns", 441598760), ns_sym, new cljs.core.Keyword(null, "test-env", "test-env", -540228992), test_env], null));
      var temp__4124__auto___27366 = cljs.core.get.call(null, cljs.core.deref.call(null, cemerick.cljs.test.registered_test_hooks), ns_sym);
      if (cljs.core.truth_(temp__4124__auto___27366)) {
        var test_hook_27367 = temp__4124__auto___27366;
        test_hook_27367.call(null, test_env);
      } else {
        cemerick.cljs.test.test_all_vars.call(null, test_env, ns_sym);
      }
      cemerick.cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "end-test-ns", "end-test-ns", 1620675645), new cljs.core.Keyword(null, "ns", "ns", 441598760), ns_sym, new cljs.core.Keyword(null, "test-env", "test-env", -540228992), test_env], null));
      return cemerick.cljs.test.finish_test_entry_point.call(null, entry_point_QMARK___15088__auto__, test_env);
    } finally {
      cemerick.cljs.test._STAR_entry_point_STAR_ = _STAR_entry_point_STAR_27365;
    }
  };
  test_ns = function(test_env, ns_sym) {
    switch(arguments.length) {
      case 1:
        return test_ns__1.call(this, test_env);
      case 2:
        return test_ns__2.call(this, test_env, ns_sym);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  test_ns.cljs$core$IFn$_invoke$arity$1 = test_ns__1;
  test_ns.cljs$core$IFn$_invoke$arity$2 = test_ns__2;
  return test_ns;
}();
cemerick.cljs.test.print_summary = function print_summary(env) {
  return cemerick.cljs.test.do_report.call(null, cljs.core.assoc.call(null, env, new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "summary", "summary", 380847952)));
};
cemerick.cljs.test.async_test_summary = function async_test_summary(test_env) {
  var async_test_env = cemerick.cljs.test.maybe_deref.call(null, (new cljs.core.Keyword(null, "async", "async", 1050769601)).cljs$core$IFn$_invoke$arity$1(test_env));
  var tests = (new cljs.core.Keyword(null, "test", "test", 577538877)).cljs$core$IFn$_invoke$arity$1(async_test_env);
  if (tests > 0) {
    return cemerick.cljs.test.print_summary.call(null, cljs.core.merge_with.call(null, cljs.core._PLUS_, test_env, async_test_env));
  } else {
    return null;
  }
};
cemerick.cljs.test.test_summary = function test_summary(test_env) {
  var test_env__$1 = cemerick.cljs.test.maybe_deref.call(null, test_env);
  cemerick.cljs.test.print_summary.call(null, test_env__$1);
  return cemerick.cljs.test.on_testing_complete.call(null, test_env__$1, cemerick.cljs.test.async_test_summary);
};
cemerick.cljs.test.run_tests_STAR_ = function() {
  var run_tests_STAR___delegate = function(namespaces) {
    var vec__27374 = cljs.core.first.call(null, namespaces) instanceof cljs.core.Atom ? namespaces : cljs.core.cons.call(null, cemerick.cljs.test.init_test_environment.call(null), namespaces);
    var test_env = cljs.core.nth.call(null, vec__27374, 0, null);
    var namespaces__$1 = cljs.core.nthnext.call(null, vec__27374, 1);
    var entry_point_QMARK___15088__auto__ = cemerick.cljs.test._STAR_entry_point_STAR_;
    var _STAR_entry_point_STAR_27375 = cemerick.cljs.test._STAR_entry_point_STAR_;
    cemerick.cljs.test._STAR_entry_point_STAR_ = false;
    try {
      var seq__27376_27380 = cljs.core.seq.call(null, cljs.core.distinct.call(null, namespaces__$1));
      var chunk__27377_27381 = null;
      var count__27378_27382 = 0;
      var i__27379_27383 = 0;
      while (true) {
        if (i__27379_27383 < count__27378_27382) {
          var ns_27384 = cljs.core._nth.call(null, chunk__27377_27381, i__27379_27383);
          cemerick.cljs.test.test_ns.call(null, test_env, ns_27384);
          var G__27385 = seq__27376_27380;
          var G__27386 = chunk__27377_27381;
          var G__27387 = count__27378_27382;
          var G__27388 = i__27379_27383 + 1;
          seq__27376_27380 = G__27385;
          chunk__27377_27381 = G__27386;
          count__27378_27382 = G__27387;
          i__27379_27383 = G__27388;
          continue;
        } else {
          var temp__4126__auto___27389 = cljs.core.seq.call(null, seq__27376_27380);
          if (temp__4126__auto___27389) {
            var seq__27376_27390__$1 = temp__4126__auto___27389;
            if (cljs.core.chunked_seq_QMARK_.call(null, seq__27376_27390__$1)) {
              var c__8291__auto___27391 = cljs.core.chunk_first.call(null, seq__27376_27390__$1);
              var G__27392 = cljs.core.chunk_rest.call(null, seq__27376_27390__$1);
              var G__27393 = c__8291__auto___27391;
              var G__27394 = cljs.core.count.call(null, c__8291__auto___27391);
              var G__27395 = 0;
              seq__27376_27380 = G__27392;
              chunk__27377_27381 = G__27393;
              count__27378_27382 = G__27394;
              i__27379_27383 = G__27395;
              continue;
            } else {
              var ns_27396 = cljs.core.first.call(null, seq__27376_27390__$1);
              cemerick.cljs.test.test_ns.call(null, test_env, ns_27396);
              var G__27397 = cljs.core.next.call(null, seq__27376_27390__$1);
              var G__27398 = null;
              var G__27399 = 0;
              var G__27400 = 0;
              seq__27376_27380 = G__27397;
              chunk__27377_27381 = G__27398;
              count__27378_27382 = G__27399;
              i__27379_27383 = G__27400;
              continue;
            }
          } else {
          }
        }
        break;
      }
      cemerick.cljs.test.test_summary.call(null, test_env);
      return cemerick.cljs.test.finish_test_entry_point.call(null, entry_point_QMARK___15088__auto__, test_env);
    } finally {
      cemerick.cljs.test._STAR_entry_point_STAR_ = _STAR_entry_point_STAR_27375;
    }
  };
  var run_tests_STAR_ = function(var_args) {
    var namespaces = null;
    if (arguments.length > 0) {
      var G__27401__i = 0, G__27401__a = new Array(arguments.length - 0);
      while (G__27401__i < G__27401__a.length) {
        G__27401__a[G__27401__i] = arguments[G__27401__i + 0];
        ++G__27401__i;
      }
      namespaces = new cljs.core.IndexedSeq(G__27401__a, 0);
    }
    return run_tests_STAR___delegate.call(this, namespaces);
  };
  run_tests_STAR_.cljs$lang$maxFixedArity = 0;
  run_tests_STAR_.cljs$lang$applyTo = function(arglist__27402) {
    var namespaces = cljs.core.seq(arglist__27402);
    return run_tests_STAR___delegate(namespaces);
  };
  run_tests_STAR_.cljs$core$IFn$_invoke$arity$variadic = run_tests_STAR___delegate;
  return run_tests_STAR_;
}();
goog.exportSymbol("cemerick.cljs.test.run_tests_STAR_", cemerick.cljs.test.run_tests_STAR_);
cemerick.cljs.test.run_all_tests = function() {
  var run_all_tests = null;
  var run_all_tests__0 = function() {
    return cljs.core.apply.call(null, cemerick.cljs.test.run_tests_STAR_, cljs.core.keys.call(null, cljs.core.deref.call(null, cemerick.cljs.test.registered_tests)));
  };
  var run_all_tests__1 = function(re) {
    return cljs.core.apply.call(null, cemerick.cljs.test.run_tests_STAR_, cljs.core.filter.call(null, function(p1__27403_SHARP_) {
      return cljs.core.re_matches.call(null, re, cljs.core.name.call(null, p1__27403_SHARP_));
    }, cljs.core.keys.call(null, cljs.core.deref.call(null, cemerick.cljs.test.registered_tests))));
  };
  run_all_tests = function(re) {
    switch(arguments.length) {
      case 0:
        return run_all_tests__0.call(this);
      case 1:
        return run_all_tests__1.call(this, re);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  run_all_tests.cljs$core$IFn$_invoke$arity$0 = run_all_tests__0;
  run_all_tests.cljs$core$IFn$_invoke$arity$1 = run_all_tests__1;
  return run_all_tests;
}();
goog.exportSymbol("cemerick.cljs.test.run_all_tests", cemerick.cljs.test.run_all_tests);
cemerick.cljs.test.successful_QMARK_ = function successful_QMARK_(test_env) {
  var map__27405 = cemerick.cljs.test.maybe_deref.call(null, test_env);
  var map__27405__$1 = cljs.core.seq_QMARK_.call(null, map__27405) ? cljs.core.apply.call(null, cljs.core.hash_map, map__27405) : map__27405;
  var async = cljs.core.get.call(null, map__27405__$1, new cljs.core.Keyword(null, "async", "async", 1050769601));
  var error = cljs.core.get.call(null, map__27405__$1, new cljs.core.Keyword(null, "error", "error", -978969032));
  var fail = cljs.core.get.call(null, map__27405__$1, new cljs.core.Keyword(null, "fail", "fail", 1706214930));
  var and__7492__auto__ = cemerick.cljs.test.testing_complete_QMARK_.call(null, test_env);
  if (cljs.core.truth_(and__7492__auto__)) {
    var and__7492__auto____$1 = function() {
      var or__7504__auto__ = fail;
      if (cljs.core.truth_(or__7504__auto__)) {
        return or__7504__auto__;
      } else {
        return 0;
      }
    }() === 0;
    if (and__7492__auto____$1) {
      var and__7492__auto____$2 = function() {
        var or__7504__auto__ = error;
        if (cljs.core.truth_(or__7504__auto__)) {
          return or__7504__auto__;
        } else {
          return 0;
        }
      }() === 0;
      if (and__7492__auto____$2) {
        var or__7504__auto__ = async == null;
        if (or__7504__auto__) {
          return or__7504__auto__;
        } else {
          return successful_QMARK_.call(null, async);
        }
      } else {
        return and__7492__auto____$2;
      }
    } else {
      return and__7492__auto____$1;
    }
  } else {
    return and__7492__auto__;
  }
};
goog.exportSymbol("cemerick.cljs.test.successful_QMARK_", cemerick.cljs.test.successful_QMARK_);
cemerick.cljs.test.set_print_fn_BANG_ = function set_print_fn_BANG_(f) {
  return cljs.core._STAR_print_fn_STAR_ = f;
};
goog.exportSymbol("cemerick.cljs.test.set_print_fn_BANG_", cemerick.cljs.test.set_print_fn_BANG_);
goog.provide("speicher_test.client_test");
goog.require("cljs.core");
goog.require("speicher.client");
goog.require("cemerick.cljs.test");
speicher_test.client_test.level_complete_QMARK__test = function level_complete_QMARK__test() {
  return cemerick.cljs.test.test_function.call(null, cemerick.cljs.test.init_test_environment.call(null), speicher_test.client_test.level_complete_QMARK__test);
};
speicher_test.client_test.level_complete_QMARK__test = cljs.core.with_meta.call(null, speicher_test.client_test.level_complete_QMARK__test, cljs.core.merge.call(null, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), 31, new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 9, new cljs.core.Keyword(null, "column", "column", 2078222095), 10, new cljs.core.Keyword(null, "line", "line", 212345235), 9, new cljs.core.Keyword(null, 
"file", "file", -1269645878), "/Users/monte/Developer/speicher/test/speicher_test/client_test.cljs"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "name", "name", 1843675177), cljs.core.with_meta.call(null, new cljs.core.Symbol("speicher-test.client-test", "level-complete?-test", "speicher-test.client-test/level-complete?-test", 1401817635, null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), 31, new cljs.core.Keyword(null, 
"end-line", "end-line", 1837326455), 9, new cljs.core.Keyword(null, "column", "column", 2078222095), 10, new cljs.core.Keyword(null, "line", "line", 212345235), 9, new cljs.core.Keyword(null, "file", "file", -1269645878), "/Users/monte/Developer/speicher/test/speicher_test/client_test.cljs"], null)), new cljs.core.Keyword(null, "test", "test", 577538877), function level_complete_QMARK__test_test(test_ctx__6222__auto__) {
  var _test_ctx = test_ctx__6222__auto__;
  var async_QMARK___6137__auto__ = (new cljs.core.Keyword(null, "async", "async", 1050769601)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, (new cljs.core.Keyword(null, "test-name", "test-name", -675595913)).cljs$core$IFn$_invoke$arity$1(_test_ctx)));
  var _STAR_test_ctx_STAR_6288 = cemerick.cljs.test._STAR_test_ctx_STAR_;
  cemerick.cljs.test._STAR_test_ctx_STAR_ = cljs.core.truth_(async_QMARK___6137__auto__) ? null : _test_ctx;
  try {
    try {
      try {
        cljs.core.swap_BANG_.call(null, (new cljs.core.Keyword(null, "test-env", "test-env", -540228992)).cljs$core$IFn$_invoke$arity$1(_test_ctx), cljs.core.update_in, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("cemerick.cljs.test", "test-contexts", "cemerick.cljs.test/test-contexts", 1505935128)], null), cljs.core.conj, "I don't do a lot\n");
        try {
          cljs.core.swap_BANG_.call(null, (new cljs.core.Keyword(null, "test-env", "test-env", -540228992)).cljs$core$IFn$_invoke$arity$1(_test_ctx), cljs.core.update_in, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("cemerick.cljs.test", "test-contexts", "cemerick.cljs.test/test-contexts", 1505935128)], null), cljs.core.conj, "Edge cases\n");
          try {
            cljs.core.swap_BANG_.call(null, (new cljs.core.Keyword(null, "test-env", "test-env", -540228992)).cljs$core$IFn$_invoke$arity$1(_test_ctx), cljs.core.update_in, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("cemerick.cljs.test", "test-contexts", "cemerick.cljs.test/test-contexts", 1505935128)], null), cljs.core.conj, "level-complete");
            var _test_ctx__$1 = _test_ctx;
            var async_QMARK___6137__auto____$1 = (new cljs.core.Keyword(null, "async", "async", 1050769601)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, (new cljs.core.Keyword(null, "test-name", "test-name", -675595913)).cljs$core$IFn$_invoke$arity$1(_test_ctx__$1)));
            var _STAR_test_ctx_STAR_6290 = cemerick.cljs.test._STAR_test_ctx_STAR_;
            cemerick.cljs.test._STAR_test_ctx_STAR_ = cljs.core.truth_(async_QMARK___6137__auto____$1) ? null : _test_ctx__$1;
            try {
              try {
                try {
                  var values__6157__auto__ = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, speicher.client.level_complete_QMARK_.call(null, new cljs.core.Keyword(null, "daily", "daily", -697831483), 6)), true);
                  var result__6158__auto__ = cljs.core.apply.call(null, cljs.core._EQ_, values__6157__auto__);
                  if (result__6158__auto__ instanceof cemerick.cljs.test.TestContext) {
                    throw new Error("TestContext provided as [form] in `is` assertion. If using `is` with an explicit test context, use the 3-arg arity.");
                  } else {
                  }
                  if (cljs.core.truth_(result__6158__auto__)) {
                    cemerick.cljs.test.do_report.call(null, _test_ctx__$1, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), true, cljs.core.list(new cljs.core.Symbol(null, "level-complete?", "level-complete?", -337794226, null), new cljs.core.Keyword(null, 
                    "daily", "daily", -697831483), 6)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__6157__auto__), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
                  } else {
                    cemerick.cljs.test.do_report.call(null, _test_ctx__$1, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), true, cljs.core.list(new cljs.core.Symbol(null, "level-complete?", "level-complete?", -337794226, null), new cljs.core.Keyword(null, 
                    "daily", "daily", -697831483), 6)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__6157__auto__)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
                  }
                  return result__6158__auto__;
                } catch (e6292) {
                  if (e6292 instanceof Error) {
                    var t__6194__auto__ = e6292;
                    return cemerick.cljs.test.do_report.call(null, _test_ctx__$1, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), true, cljs.core.list(new cljs.core.Symbol(null, "level-complete?", "level-complete?", -337794226, null), new cljs.core.Keyword(null, 
                    "daily", "daily", -697831483), 6)), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__6194__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
                  } else {
                    throw e6292;
                  }
                }
              } catch (e6291) {
                if (e6291 instanceof Error) {
                  var e__6138__auto__ = e6291;
                  if (cljs.core.truth_(async_QMARK___6137__auto____$1)) {
                    return cemerick.cljs.test.done_STAR_.call(null, _test_ctx__$1, e__6138__auto__);
                  } else {
                    throw e__6138__auto__;
                  }
                } else {
                  throw e6291;
                }
              }
            } finally {
              cemerick.cljs.test._STAR_test_ctx_STAR_ = _STAR_test_ctx_STAR_6290;
            }
          } finally {
            cljs.core.swap_BANG_.call(null, (new cljs.core.Keyword(null, "test-env", "test-env", -540228992)).cljs$core$IFn$_invoke$arity$1(_test_ctx), cljs.core.update_in, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("cemerick.cljs.test", "test-contexts", "cemerick.cljs.test/test-contexts", 1505935128)], null), cljs.core.pop);
          }
        } finally {
          cljs.core.swap_BANG_.call(null, (new cljs.core.Keyword(null, "test-env", "test-env", -540228992)).cljs$core$IFn$_invoke$arity$1(_test_ctx), cljs.core.update_in, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("cemerick.cljs.test", "test-contexts", "cemerick.cljs.test/test-contexts", 1505935128)], null), cljs.core.pop);
        }
      } finally {
        cljs.core.swap_BANG_.call(null, (new cljs.core.Keyword(null, "test-env", "test-env", -540228992)).cljs$core$IFn$_invoke$arity$1(_test_ctx), cljs.core.update_in, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("cemerick.cljs.test", "test-contexts", "cemerick.cljs.test/test-contexts", 1505935128)], null), cljs.core.pop);
      }
    } catch (e6289) {
      if (e6289 instanceof Error) {
        var e__6138__auto__ = e6289;
        if (cljs.core.truth_(async_QMARK___6137__auto__)) {
          return cemerick.cljs.test.done_STAR_.call(null, _test_ctx, e__6138__auto__);
        } else {
          throw e__6138__auto__;
        }
      } else {
        throw e6289;
      }
    }
  } finally {
    cemerick.cljs.test._STAR_test_ctx_STAR_ = _STAR_test_ctx_STAR_6288;
  }
}], null)));
cemerick.cljs.test.register_test_BANG_.call(null, new cljs.core.Symbol(null, "speicher-test.client-test", "speicher-test.client-test", -20854896, null), new cljs.core.Symbol("speicher-test.client-test", "level-complete?-test", "speicher-test.client-test/level-complete?-test", 1401817635, null), speicher_test.client_test.level_complete_QMARK__test);
speicher_test.client_test.simple_addition = function simple_addition() {
  return cemerick.cljs.test.test_function.call(null, cemerick.cljs.test.init_test_environment.call(null), speicher_test.client_test.simple_addition);
};
speicher_test.client_test.simple_addition = cljs.core.with_meta.call(null, speicher_test.client_test.simple_addition, cljs.core.merge.call(null, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), 26, new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 15, new cljs.core.Keyword(null, "column", "column", 2078222095), 10, new cljs.core.Keyword(null, "line", "line", 212345235), 15, new cljs.core.Keyword(null, "file", "file", -1269645878), 
"/Users/monte/Developer/speicher/test/speicher_test/client_test.cljs"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "name", "name", 1843675177), cljs.core.with_meta.call(null, new cljs.core.Symbol("speicher-test.client-test", "simple-addition", "speicher-test.client-test/simple-addition", -1671366661, null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), 26, new cljs.core.Keyword(null, "end-line", "end-line", 
1837326455), 15, new cljs.core.Keyword(null, "column", "column", 2078222095), 10, new cljs.core.Keyword(null, "line", "line", 212345235), 15, new cljs.core.Keyword(null, "file", "file", -1269645878), "/Users/monte/Developer/speicher/test/speicher_test/client_test.cljs"], null)), new cljs.core.Keyword(null, "test", "test", 577538877), function simple_addition_test(test_ctx__6222__auto__) {
  var _test_ctx = test_ctx__6222__auto__;
  var async_QMARK___6137__auto__ = (new cljs.core.Keyword(null, "async", "async", 1050769601)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, (new cljs.core.Keyword(null, "test-name", "test-name", -675595913)).cljs$core$IFn$_invoke$arity$1(_test_ctx)));
  var _STAR_test_ctx_STAR_6298 = cemerick.cljs.test._STAR_test_ctx_STAR_;
  cemerick.cljs.test._STAR_test_ctx_STAR_ = cljs.core.truth_(async_QMARK___6137__auto__) ? null : _test_ctx;
  try {
    try {
      try {
        cljs.core.swap_BANG_.call(null, (new cljs.core.Keyword(null, "test-env", "test-env", -540228992)).cljs$core$IFn$_invoke$arity$1(_test_ctx), cljs.core.update_in, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("cemerick.cljs.test", "test-contexts", "cemerick.cljs.test/test-contexts", 1505935128)], null), cljs.core.conj, "simple-addition");
        var _test_ctx__$1 = _test_ctx;
        var async_QMARK___6137__auto____$1 = (new cljs.core.Keyword(null, "async", "async", 1050769601)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, (new cljs.core.Keyword(null, "test-name", "test-name", -675595913)).cljs$core$IFn$_invoke$arity$1(_test_ctx__$1)));
        var _STAR_test_ctx_STAR_6300 = cemerick.cljs.test._STAR_test_ctx_STAR_;
        cemerick.cljs.test._STAR_test_ctx_STAR_ = cljs.core.truth_(async_QMARK___6137__auto____$1) ? null : _test_ctx__$1;
        try {
          try {
            try {
              var values__6157__auto__ = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, 11 + 6), 17);
              var result__6158__auto__ = cljs.core.apply.call(null, cljs.core._EQ_, values__6157__auto__);
              if (result__6158__auto__ instanceof cemerick.cljs.test.TestContext) {
                throw new Error("TestContext provided as [form] in `is` assertion. If using `is` with an explicit test context, use the 3-arg arity.");
              } else {
              }
              if (cljs.core.truth_(result__6158__auto__)) {
                cemerick.cljs.test.do_report.call(null, _test_ctx__$1, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 17, cljs.core.list(new cljs.core.Symbol(null, "+", "+", -740910886, null), 11, 6)), new cljs.core.Keyword(null, "actual", "actual", 
                107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__6157__auto__), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
              } else {
                cemerick.cljs.test.do_report.call(null, _test_ctx__$1, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 17, cljs.core.list(new cljs.core.Symbol(null, "+", "+", -740910886, null), 11, 6)), new cljs.core.Keyword(null, "actual", "actual", 
                107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__6157__auto__)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
              }
              return result__6158__auto__;
            } catch (e6302) {
              if (e6302 instanceof Error) {
                var t__6194__auto__ = e6302;
                return cemerick.cljs.test.do_report.call(null, _test_ctx__$1, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 17, cljs.core.list(new cljs.core.Symbol(null, "+", "+", -740910886, null), 11, 6)), new cljs.core.Keyword(null, "actual", 
                "actual", 107306363), t__6194__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
              } else {
                throw e6302;
              }
            }
          } catch (e6301) {
            if (e6301 instanceof Error) {
              var e__6138__auto__ = e6301;
              if (cljs.core.truth_(async_QMARK___6137__auto____$1)) {
                return cemerick.cljs.test.done_STAR_.call(null, _test_ctx__$1, e__6138__auto__);
              } else {
                throw e__6138__auto__;
              }
            } else {
              throw e6301;
            }
          }
        } finally {
          cemerick.cljs.test._STAR_test_ctx_STAR_ = _STAR_test_ctx_STAR_6300;
        }
      } finally {
        cljs.core.swap_BANG_.call(null, (new cljs.core.Keyword(null, "test-env", "test-env", -540228992)).cljs$core$IFn$_invoke$arity$1(_test_ctx), cljs.core.update_in, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("cemerick.cljs.test", "test-contexts", "cemerick.cljs.test/test-contexts", 1505935128)], null), cljs.core.pop);
      }
    } catch (e6299) {
      if (e6299 instanceof Error) {
        var e__6138__auto__ = e6299;
        if (cljs.core.truth_(async_QMARK___6137__auto__)) {
          return cemerick.cljs.test.done_STAR_.call(null, _test_ctx, e__6138__auto__);
        } else {
          throw e__6138__auto__;
        }
      } else {
        throw e6299;
      }
    }
  } finally {
    cemerick.cljs.test._STAR_test_ctx_STAR_ = _STAR_test_ctx_STAR_6298;
  }
}], null)));
cemerick.cljs.test.register_test_BANG_.call(null, new cljs.core.Symbol(null, "speicher-test.client-test", "speicher-test.client-test", -20854896, null), new cljs.core.Symbol("speicher-test.client-test", "simple-addition", "speicher-test.client-test/simple-addition", -1671366661, null), speicher_test.client_test.simple_addition);
