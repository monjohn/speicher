// Compiled by ClojureScript 0.0-2850 {:static-fns true}
goog.provide('cljs.core');
goog.require('goog.string.StringBuffer');
goog.require('goog.array');
goog.require('goog.object');
goog.require('goog.string');
cljs.core._STAR_clojurescript_version_STAR_ = "0.0-2850";
cljs.core._STAR_unchecked_if_STAR_ = false;
if(typeof cljs.core._STAR_print_fn_STAR_ !== 'undefined'){
} else {
/**
* Each runtime environment provides a different way to print output.
* Whatever function *print-fn* is bound to will be passed any
* Strings which should be printed.
*/
cljs.core._STAR_print_fn_STAR_ = (function _STAR_print_fn_STAR_(_){
throw (new Error("No *print-fn* fn set for evaluation environment"));
});
}
/**
* Set *print-fn* to f.
*/
cljs.core.set_print_fn_BANG_ = (function set_print_fn_BANG_(f){
return cljs.core._STAR_print_fn_STAR_ = f;
});
cljs.core._STAR_flush_on_newline_STAR_ = true;
cljs.core._STAR_print_newline_STAR_ = true;
cljs.core._STAR_print_readably_STAR_ = true;
cljs.core._STAR_print_meta_STAR_ = false;
cljs.core._STAR_print_dup_STAR_ = false;
cljs.core._STAR_print_length_STAR_ = null;
cljs.core._STAR_print_level_STAR_ = null;
if(typeof cljs.core._STAR_loaded_libs_STAR_ !== 'undefined'){
} else {
cljs.core._STAR_loaded_libs_STAR_ = null;
}
cljs.core.pr_opts = (function pr_opts(){
return new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,"flush-on-newline","flush-on-newline",-151457939),cljs.core._STAR_flush_on_newline_STAR_,new cljs.core.Keyword(null,"readably","readably",1129599760),cljs.core._STAR_print_readably_STAR_,new cljs.core.Keyword(null,"meta","meta",1499536964),cljs.core._STAR_print_meta_STAR_,new cljs.core.Keyword(null,"dup","dup",556298533),cljs.core._STAR_print_dup_STAR_,new cljs.core.Keyword(null,"print-length","print-length",1931866356),cljs.core._STAR_print_length_STAR_], null);
});
/**
* Set *print-fn* to console.log
*/
cljs.core.enable_console_print_BANG_ = (function enable_console_print_BANG_(){
cljs.core._STAR_print_newline_STAR_ = false;

return cljs.core._STAR_print_fn_STAR_ = (function() { 
var G__17522__delegate = function (args){
return console.log.apply(console,(function (){var G__17521 = args;
return (cljs.core.into_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(G__17521) : cljs.core.into_array.call(null,G__17521));
})());
};
var G__17522 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__17523__i = 0, G__17523__a = new Array(arguments.length -  0);
while (G__17523__i < G__17523__a.length) {G__17523__a[G__17523__i] = arguments[G__17523__i + 0]; ++G__17523__i;}
  args = new cljs.core.IndexedSeq(G__17523__a,0);
} 
return G__17522__delegate.call(this,args);};
G__17522.cljs$lang$maxFixedArity = 0;
G__17522.cljs$lang$applyTo = (function (arglist__17524){
var args = cljs.core.seq(arglist__17524);
return G__17522__delegate(args);
});
G__17522.cljs$core$IFn$_invoke$arity$variadic = G__17522__delegate;
return G__17522;
})()
;
});
/**
* Internal - do not use!
*/
cljs.core.truth_ = (function truth_(x){
return (x != null && x !== false);
});
cljs.core.not_native = null;

/**
* Tests if 2 arguments are the same object
*/
cljs.core.identical_QMARK_ = (function identical_QMARK_(x,y){
return (x === y);
});
/**
* Returns true if x is nil, false otherwise.
*/
cljs.core.nil_QMARK_ = (function nil_QMARK_(x){
return (x == null);
});
cljs.core.array_QMARK_ = (function array_QMARK_(x){
return x instanceof Array;
});
cljs.core.number_QMARK_ = (function number_QMARK_(n){
return typeof n === 'number';
});
/**
* Returns true if x is logical false, false otherwise.
*/
cljs.core.not = (function not(x){
if(cljs.core.truth_(x)){
return false;
} else {
return true;
}
});
/**
* Returns true if x is not nil, false otherwise.
*/
cljs.core.some_QMARK_ = (function some_QMARK_(x){
return !((x == null));
});
cljs.core.object_QMARK_ = (function object_QMARK_(x){
if(!((x == null))){
return (x.constructor === Object);
} else {
return false;
}
});
cljs.core.string_QMARK_ = (function string_QMARK_(x){
var G__17526 = x;
return goog.isString(G__17526);
});
/**
* Internal - do not use!
*/
cljs.core.native_satisfies_QMARK_ = (function native_satisfies_QMARK_(p,x){
var x__$1 = (((x == null))?null:x);
if((p[(function (){var G__17528 = x__$1;
return goog.typeOf(G__17528);
})()])){
return true;
} else {
if((p["_"])){
return true;
} else {
return false;

}
}
});
cljs.core.is_proto_ = (function is_proto_(x){
return (x.constructor.prototype === x);
});
/**
* When compiled for a command-line target, whatever
* function *main-fn* is set to will be called with the command-line
* argv as arguments
*/
cljs.core._STAR_main_cli_fn_STAR_ = null;
cljs.core.type = (function type(x){
if((x == null)){
return null;
} else {
return x.constructor;
}
});
cljs.core.missing_protocol = (function missing_protocol(proto,obj){
var ty = cljs.core.type(obj);
var ty__$1 = (cljs.core.truth_((function (){var and__7492__auto__ = ty;
if(cljs.core.truth_(and__7492__auto__)){
return ty.cljs$lang$type;
} else {
return and__7492__auto__;
}
})())?ty.cljs$lang$ctorStr:(function (){var G__17530 = obj;
return goog.typeOf(G__17530);
})());
return (new Error(["No protocol method ",proto," defined for type ",ty__$1,": ",obj].join("")));
});
cljs.core.type__GT_str = (function type__GT_str(ty){
var temp__4124__auto__ = ty.cljs$lang$ctorStr;
if(cljs.core.truth_(temp__4124__auto__)){
var s = temp__4124__auto__;
return s;
} else {
return [cljs.core.str(ty)].join('');
}
});
cljs.core.load_file = (function load_file(file){
if(cljs.core.truth_(COMPILED)){
return null;
} else {
return goog.importScript_(file);
}
});
if((typeof Symbol !== 'undefined') && (((function (){var G__17532 = Symbol;
return goog.typeOf(G__17532);
})() === "function"))){
cljs.core.ITER_SYMBOL = Symbol.iterator;
} else {
cljs.core.ITER_SYMBOL = "@@iterator";
}
cljs.core.make_array = (function() {
var make_array = null;
var make_array__1 = (function (size){
return (new Array(size));
});
var make_array__2 = (function (type,size){
return make_array.cljs$core$IFn$_invoke$arity$1(size);
});
make_array = function(type,size){
switch(arguments.length){
case 1:
return make_array__1.call(this,type);
case 2:
return make_array__2.call(this,type,size);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
make_array.cljs$core$IFn$_invoke$arity$1 = make_array__1;
make_array.cljs$core$IFn$_invoke$arity$2 = make_array__2;
return make_array;
})()
;
/**
* Returns a javascript array, cloned from the passed in array
*/
cljs.core.aclone = (function aclone(arr){
var len = arr.length;
var new_arr = (new Array(len));
var n__8391__auto___17534 = len;
var i_17535 = (0);
while(true){
if((i_17535 < n__8391__auto___17534)){
(new_arr[i_17535] = (arr[i_17535]));

var G__17536 = (i_17535 + (1));
i_17535 = G__17536;
continue;
} else {
}
break;
}

return new_arr;
});
/**
* Creates a new javascript array.
* @param {...*} var_args
*/
cljs.core.array = (function array(var_args){
var a = (new Array(arguments.length));
var i = (0);
while(true){
if((i < a.length)){
(a[i] = (arguments[i]));

var G__17537 = (i + (1));
i = G__17537;
continue;
} else {
return a;
}
break;
}
});
/**
* Returns the value at the index.
* @param {...*} var_args
*/
cljs.core.aget = (function() {
var aget = null;
var aget__2 = (function (array,i){
return (array[i]);
});
var aget__3 = (function() { 
var G__17546__delegate = function (array,i,idxs){
var G__17543 = aget;
var G__17544 = aget.cljs$core$IFn$_invoke$arity$2(array,i);
var G__17545 = idxs;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$3 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$3(G__17543,G__17544,G__17545) : cljs.core.apply.call(null,G__17543,G__17544,G__17545));
};
var G__17546 = function (array,i,var_args){
var idxs = null;
if (arguments.length > 2) {
var G__17547__i = 0, G__17547__a = new Array(arguments.length -  2);
while (G__17547__i < G__17547__a.length) {G__17547__a[G__17547__i] = arguments[G__17547__i + 2]; ++G__17547__i;}
  idxs = new cljs.core.IndexedSeq(G__17547__a,0);
} 
return G__17546__delegate.call(this,array,i,idxs);};
G__17546.cljs$lang$maxFixedArity = 2;
G__17546.cljs$lang$applyTo = (function (arglist__17548){
var array = cljs.core.first(arglist__17548);
arglist__17548 = cljs.core.next(arglist__17548);
var i = cljs.core.first(arglist__17548);
var idxs = cljs.core.rest(arglist__17548);
return G__17546__delegate(array,i,idxs);
});
G__17546.cljs$core$IFn$_invoke$arity$variadic = G__17546__delegate;
return G__17546;
})()
;
aget = function(array,i,var_args){
var idxs = var_args;
switch(arguments.length){
case 2:
return aget__2.call(this,array,i);
default:
var G__17549 = null;
if (arguments.length > 2) {
var G__17550__i = 0, G__17550__a = new Array(arguments.length -  2);
while (G__17550__i < G__17550__a.length) {G__17550__a[G__17550__i] = arguments[G__17550__i + 2]; ++G__17550__i;}
G__17549 = new cljs.core.IndexedSeq(G__17550__a,0);
}
return aget__3.cljs$core$IFn$_invoke$arity$variadic(array,i, G__17549);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
aget.cljs$lang$maxFixedArity = 2;
aget.cljs$lang$applyTo = aget__3.cljs$lang$applyTo;
aget.cljs$core$IFn$_invoke$arity$2 = aget__2;
aget.cljs$core$IFn$_invoke$arity$variadic = aget__3.cljs$core$IFn$_invoke$arity$variadic;
return aget;
})()
;
/**
* Sets the value at the index.
* @param {...*} var_args
*/
cljs.core.aset = (function() {
var aset = null;
var aset__3 = (function (array,i,val){
return (array[i] = val);
});
var aset__4 = (function() { 
var G__17559__delegate = function (array,idx,idx2,idxv){
var G__17555 = aset;
var G__17556 = (array[idx]);
var G__17557 = idx2;
var G__17558 = idxv;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$4 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$4(G__17555,G__17556,G__17557,G__17558) : cljs.core.apply.call(null,G__17555,G__17556,G__17557,G__17558));
};
var G__17559 = function (array,idx,idx2,var_args){
var idxv = null;
if (arguments.length > 3) {
var G__17560__i = 0, G__17560__a = new Array(arguments.length -  3);
while (G__17560__i < G__17560__a.length) {G__17560__a[G__17560__i] = arguments[G__17560__i + 3]; ++G__17560__i;}
  idxv = new cljs.core.IndexedSeq(G__17560__a,0);
} 
return G__17559__delegate.call(this,array,idx,idx2,idxv);};
G__17559.cljs$lang$maxFixedArity = 3;
G__17559.cljs$lang$applyTo = (function (arglist__17561){
var array = cljs.core.first(arglist__17561);
arglist__17561 = cljs.core.next(arglist__17561);
var idx = cljs.core.first(arglist__17561);
arglist__17561 = cljs.core.next(arglist__17561);
var idx2 = cljs.core.first(arglist__17561);
var idxv = cljs.core.rest(arglist__17561);
return G__17559__delegate(array,idx,idx2,idxv);
});
G__17559.cljs$core$IFn$_invoke$arity$variadic = G__17559__delegate;
return G__17559;
})()
;
aset = function(array,idx,idx2,var_args){
var idxv = var_args;
switch(arguments.length){
case 3:
return aset__3.call(this,array,idx,idx2);
default:
var G__17562 = null;
if (arguments.length > 3) {
var G__17563__i = 0, G__17563__a = new Array(arguments.length -  3);
while (G__17563__i < G__17563__a.length) {G__17563__a[G__17563__i] = arguments[G__17563__i + 3]; ++G__17563__i;}
G__17562 = new cljs.core.IndexedSeq(G__17563__a,0);
}
return aset__4.cljs$core$IFn$_invoke$arity$variadic(array,idx,idx2, G__17562);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
aset.cljs$lang$maxFixedArity = 3;
aset.cljs$lang$applyTo = aset__4.cljs$lang$applyTo;
aset.cljs$core$IFn$_invoke$arity$3 = aset__3;
aset.cljs$core$IFn$_invoke$arity$variadic = aset__4.cljs$core$IFn$_invoke$arity$variadic;
return aset;
})()
;
/**
* Returns the length of the array. Works on arrays of all types.
*/
cljs.core.alength = (function alength(array){
return array.length;
});
cljs.core.into_array = (function() {
var into_array = null;
var into_array__1 = (function (aseq){
return into_array.cljs$core$IFn$_invoke$arity$2(null,aseq);
});
var into_array__2 = (function (type,aseq){
var G__17569 = (function (a,x){
a.push(x);

return a;
});
var G__17570 = [];
var G__17571 = aseq;
return (cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(G__17569,G__17570,G__17571) : cljs.core.reduce.call(null,G__17569,G__17570,G__17571));
});
into_array = function(type,aseq){
switch(arguments.length){
case 1:
return into_array__1.call(this,type);
case 2:
return into_array__2.call(this,type,aseq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
into_array.cljs$core$IFn$_invoke$arity$1 = into_array__1;
into_array.cljs$core$IFn$_invoke$arity$2 = into_array__2;
return into_array;
})()
;
/**
* Invoke JavaScript object method via string. Needed when the
* string is not a valid unquoted property name.
* @param {...*} var_args
*/
cljs.core.js_invoke = (function() { 
var js_invoke__delegate = function (obj,s,args){
return (obj[s]).apply(obj,cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(args));
};
var js_invoke = function (obj,s,var_args){
var args = null;
if (arguments.length > 2) {
var G__17572__i = 0, G__17572__a = new Array(arguments.length -  2);
while (G__17572__i < G__17572__a.length) {G__17572__a[G__17572__i] = arguments[G__17572__i + 2]; ++G__17572__i;}
  args = new cljs.core.IndexedSeq(G__17572__a,0);
} 
return js_invoke__delegate.call(this,obj,s,args);};
js_invoke.cljs$lang$maxFixedArity = 2;
js_invoke.cljs$lang$applyTo = (function (arglist__17573){
var obj = cljs.core.first(arglist__17573);
arglist__17573 = cljs.core.next(arglist__17573);
var s = cljs.core.first(arglist__17573);
var args = cljs.core.rest(arglist__17573);
return js_invoke__delegate(obj,s,args);
});
js_invoke.cljs$core$IFn$_invoke$arity$variadic = js_invoke__delegate;
return js_invoke;
})()
;

cljs.core.Fn = (function (){var obj17575 = {};
return obj17575;
})();


cljs.core.IFn = (function (){var obj17577 = {};
return obj17577;
})();

cljs.core._invoke = (function() {
var _invoke = null;
var _invoke__1 = (function (this$){
if((function (){var and__7492__auto__ = this$;
if(and__7492__auto__){
return this$.cljs$core$IFn$_invoke$arity$1;
} else {
return and__7492__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$1(this$);
} else {
var x__8148__auto__ = (((this$ == null))?null:this$);
return (function (){var or__7504__auto__ = (cljs.core._invoke[(function (){var G__17623 = x__8148__auto__;
return goog.typeOf(G__17623);
})()]);
if(or__7504__auto__){
return or__7504__auto__;
} else {
var or__7504__auto____$1 = (cljs.core._invoke["_"]);
if(or__7504__auto____$1){
return or__7504__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$);
}
});
var _invoke__2 = (function (this$,a){
if((function (){var and__7492__auto__ = this$;
if(and__7492__auto__){
return this$.cljs$core$IFn$_invoke$arity$2;
} else {
return and__7492__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$2(this$,a);
} else {
var x__8148__auto__ = (((this$ == null))?null:this$);
return (function (){var or__7504__auto__ = (cljs.core._invoke[(function (){var G__17625 = x__8148__auto__;
return goog.typeOf(G__17625);
})()]);
if(or__7504__auto__){
return or__7504__auto__;
} else {
var or__7504__auto____$1 = (cljs.core._invoke["_"]);
if(or__7504__auto____$1){
return or__7504__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a);
}
});
var _invoke__3 = (function (this$,a,b){
if((function (){var and__7492__auto__ = this$;
if(and__7492__auto__){
return this$.cljs$core$IFn$_invoke$arity$3;
} else {
return and__7492__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$3(this$,a,b);
} else {
var x__8148__auto__ = (((this$ == null))?null:this$);
return (function (){var or__7504__auto__ = (cljs.core._invoke[(function (){var G__17627 = x__8148__auto__;
return goog.typeOf(G__17627);
})()]);
if(or__7504__auto__){
return or__7504__auto__;
} else {
var or__7504__auto____$1 = (cljs.core._invoke["_"]);
if(or__7504__auto____$1){
return or__7504__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b);
}
});
var _invoke__4 = (function (this$,a,b,c){
if((function (){var and__7492__auto__ = this$;
if(and__7492__auto__){
return this$.cljs$core$IFn$_invoke$arity$4;
} else {
return and__7492__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$4(this$,a,b,c);
} else {
var x__8148__auto__ = (((this$ == null))?null:this$);
return (function (){var or__7504__auto__ = (cljs.core._invoke[(function (){var G__17629 = x__8148__auto__;
return goog.typeOf(G__17629);
})()]);
if(or__7504__auto__){
return or__7504__auto__;
} else {
var or__7504__auto____$1 = (cljs.core._invoke["_"]);
if(or__7504__auto____$1){
return or__7504__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c);
}
});
var _invoke__5 = (function (this$,a,b,c,d){
if((function (){var and__7492__auto__ = this$;
if(and__7492__auto__){
return this$.cljs$core$IFn$_invoke$arity$5;
} else {
return and__7492__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$5(this$,a,b,c,d);
} else {
var x__8148__auto__ = (((this$ == null))?null:this$);
return (function (){var or__7504__auto__ = (cljs.core._invoke[(function (){var G__17631 = x__8148__auto__;
return goog.typeOf(G__17631);
})()]);
if(or__7504__auto__){
return or__7504__auto__;
} else {
var or__7504__auto____$1 = (cljs.core._invoke["_"]);
if(or__7504__auto____$1){
return or__7504__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d);
}
});
var _invoke__6 = (function (this$,a,b,c,d,e){
if((function (){var and__7492__auto__ = this$;
if(and__7492__auto__){
return this$.cljs$core$IFn$_invoke$arity$6;
} else {
return and__7492__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$6(this$,a,b,c,d,e);
} else {
var x__8148__auto__ = (((this$ == null))?null:this$);
return (function (){var or__7504__auto__ = (cljs.core._invoke[(function (){var G__17633 = x__8148__auto__;
return goog.typeOf(G__17633);
})()]);
if(or__7504__auto__){
return or__7504__auto__;
} else {
var or__7504__auto____$1 = (cljs.core._invoke["_"]);
if(or__7504__auto____$1){
return or__7504__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e);
}
});
var _invoke__7 = (function (this$,a,b,c,d,e,f){
if((function (){var and__7492__auto__ = this$;
if(and__7492__auto__){
return this$.cljs$core$IFn$_invoke$arity$7;
} else {
return and__7492__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$7(this$,a,b,c,d,e,f);
} else {
var x__8148__auto__ = (((this$ == null))?null:this$);
return (function (){var or__7504__auto__ = (cljs.core._invoke[(function (){var G__17635 = x__8148__auto__;
return goog.typeOf(G__17635);
})()]);
if(or__7504__auto__){
return or__7504__auto__;
} else {
var or__7504__auto____$1 = (cljs.core._invoke["_"]);
if(or__7504__auto____$1){
return or__7504__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f);
}
});
var _invoke__8 = (function (this$,a,b,c,d,e,f,g){
if((function (){var and__7492__auto__ = this$;
if(and__7492__auto__){
return this$.cljs$core$IFn$_invoke$arity$8;
} else {
return and__7492__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$8(this$,a,b,c,d,e,f,g);
} else {
var x__8148__auto__ = (((this$ == null))?null:this$);
return (function (){var or__7504__auto__ = (cljs.core._invoke[(function (){var G__17637 = x__8148__auto__;
return goog.typeOf(G__17637);
})()]);
if(or__7504__auto__){
return or__7504__auto__;
} else {
var or__7504__auto____$1 = (cljs.core._invoke["_"]);
if(or__7504__auto____$1){
return or__7504__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g);
}
});
var _invoke__9 = (function (this$,a,b,c,d,e,f,g,h){
if((function (){var and__7492__auto__ = this$;
if(and__7492__auto__){
return this$.cljs$core$IFn$_invoke$arity$9;
} else {
return and__7492__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$9(this$,a,b,c,d,e,f,g,h);
} else {
var x__8148__auto__ = (((this$ == null))?null:this$);
return (function (){var or__7504__auto__ = (cljs.core._invoke[(function (){var G__17639 = x__8148__auto__;
return goog.typeOf(G__17639);
})()]);
if(or__7504__auto__){
return or__7504__auto__;
} else {
var or__7504__auto____$1 = (cljs.core._invoke["_"]);
if(or__7504__auto____$1){
return or__7504__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h);
}
});
var _invoke__10 = (function (this$,a,b,c,d,e,f,g,h,i){
if((function (){var and__7492__auto__ = this$;
if(and__7492__auto__){
return this$.cljs$core$IFn$_invoke$arity$10;
} else {
return and__7492__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$10(this$,a,b,c,d,e,f,g,h,i);
} else {
var x__8148__auto__ = (((this$ == null))?null:this$);
return (function (){var or__7504__auto__ = (cljs.core._invoke[(function (){var G__17641 = x__8148__auto__;
return goog.typeOf(G__17641);
})()]);
if(or__7504__auto__){
return or__7504__auto__;
} else {
var or__7504__auto____$1 = (cljs.core._invoke["_"]);
if(or__7504__auto____$1){
return or__7504__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i);
}
});
var _invoke__11 = (function (this$,a,b,c,d,e,f,g,h,i,j){
if((function (){var and__7492__auto__ = this$;
if(and__7492__auto__){
return this$.cljs$core$IFn$_invoke$arity$11;
} else {
return and__7492__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$11(this$,a,b,c,d,e,f,g,h,i,j);
} else {
var x__8148__auto__ = (((this$ == null))?null:this$);
return (function (){var or__7504__auto__ = (cljs.core._invoke[(function (){var G__17643 = x__8148__auto__;
return goog.typeOf(G__17643);
})()]);
if(or__7504__auto__){
return or__7504__auto__;
} else {
var or__7504__auto____$1 = (cljs.core._invoke["_"]);
if(or__7504__auto____$1){
return or__7504__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j);
}
});
var _invoke__12 = (function (this$,a,b,c,d,e,f,g,h,i,j,k){
if((function (){var and__7492__auto__ = this$;
if(and__7492__auto__){
return this$.cljs$core$IFn$_invoke$arity$12;
} else {
return and__7492__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$12(this$,a,b,c,d,e,f,g,h,i,j,k);
} else {
var x__8148__auto__ = (((this$ == null))?null:this$);
return (function (){var or__7504__auto__ = (cljs.core._invoke[(function (){var G__17645 = x__8148__auto__;
return goog.typeOf(G__17645);
})()]);
if(or__7504__auto__){
return or__7504__auto__;
} else {
var or__7504__auto____$1 = (cljs.core._invoke["_"]);
if(or__7504__auto____$1){
return or__7504__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k);
}
});
var _invoke__13 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l){
if((function (){var and__7492__auto__ = this$;
if(and__7492__auto__){
return this$.cljs$core$IFn$_invoke$arity$13;
} else {
return and__7492__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$13(this$,a,b,c,d,e,f,g,h,i,j,k,l);
} else {
var x__8148__auto__ = (((this$ == null))?null:this$);
return (function (){var or__7504__auto__ = (cljs.core._invoke[(function (){var G__17647 = x__8148__auto__;
return goog.typeOf(G__17647);
})()]);
if(or__7504__auto__){
return or__7504__auto__;
} else {
var or__7504__auto____$1 = (cljs.core._invoke["_"]);
if(or__7504__auto____$1){
return or__7504__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l);
}
});
var _invoke__14 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m){
if((function (){var and__7492__auto__ = this$;
if(and__7492__auto__){
return this$.cljs$core$IFn$_invoke$arity$14;
} else {
return and__7492__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$14(this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
} else {
var x__8148__auto__ = (((this$ == null))?null:this$);
return (function (){var or__7504__auto__ = (cljs.core._invoke[(function (){var G__17649 = x__8148__auto__;
return goog.typeOf(G__17649);
})()]);
if(or__7504__auto__){
return or__7504__auto__;
} else {
var or__7504__auto____$1 = (cljs.core._invoke["_"]);
if(or__7504__auto____$1){
return or__7504__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
}
});
var _invoke__15 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
if((function (){var and__7492__auto__ = this$;
if(and__7492__auto__){
return this$.cljs$core$IFn$_invoke$arity$15;
} else {
return and__7492__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$15(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
} else {
var x__8148__auto__ = (((this$ == null))?null:this$);
return (function (){var or__7504__auto__ = (cljs.core._invoke[(function (){var G__17651 = x__8148__auto__;
return goog.typeOf(G__17651);
})()]);
if(or__7504__auto__){
return or__7504__auto__;
} else {
var or__7504__auto____$1 = (cljs.core._invoke["_"]);
if(or__7504__auto____$1){
return or__7504__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
}
});
var _invoke__16 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
if((function (){var and__7492__auto__ = this$;
if(and__7492__auto__){
return this$.cljs$core$IFn$_invoke$arity$16;
} else {
return and__7492__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$16(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
} else {
var x__8148__auto__ = (((this$ == null))?null:this$);
return (function (){var or__7504__auto__ = (cljs.core._invoke[(function (){var G__17653 = x__8148__auto__;
return goog.typeOf(G__17653);
})()]);
if(or__7504__auto__){
return or__7504__auto__;
} else {
var or__7504__auto____$1 = (cljs.core._invoke["_"]);
if(or__7504__auto____$1){
return or__7504__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
}
});
var _invoke__17 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
if((function (){var and__7492__auto__ = this$;
if(and__7492__auto__){
return this$.cljs$core$IFn$_invoke$arity$17;
} else {
return and__7492__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$17(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
} else {
var x__8148__auto__ = (((this$ == null))?null:this$);
return (function (){var or__7504__auto__ = (cljs.core._invoke[(function (){var G__17655 = x__8148__auto__;
return goog.typeOf(G__17655);
})()]);
if(or__7504__auto__){
return or__7504__auto__;
} else {
var or__7504__auto____$1 = (cljs.core._invoke["_"]);
if(or__7504__auto____$1){
return or__7504__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
}
});
var _invoke__18 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
if((function (){var and__7492__auto__ = this$;
if(and__7492__auto__){
return this$.cljs$core$IFn$_invoke$arity$18;
} else {
return and__7492__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$18(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
} else {
var x__8148__auto__ = (((this$ == null))?null:this$);
return (function (){var or__7504__auto__ = (cljs.core._invoke[(function (){var G__17657 = x__8148__auto__;
return goog.typeOf(G__17657);
})()]);
if(or__7504__auto__){
return or__7504__auto__;
} else {
var or__7504__auto____$1 = (cljs.core._invoke["_"]);
if(or__7504__auto____$1){
return or__7504__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
}
});
var _invoke__19 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
if((function (){var and__7492__auto__ = this$;
if(and__7492__auto__){
return this$.cljs$core$IFn$_invoke$arity$19;
} else {
return and__7492__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$19(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
} else {
var x__8148__auto__ = (((this$ == null))?null:this$);
return (function (){var or__7504__auto__ = (cljs.core._invoke[(function (){var G__17659 = x__8148__auto__;
return goog.typeOf(G__17659);
})()]);
if(or__7504__auto__){
return or__7504__auto__;
} else {
var or__7504__auto____$1 = (cljs.core._invoke["_"]);
if(or__7504__auto____$1){
return or__7504__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
}
});
var _invoke__20 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
if((function (){var and__7492__auto__ = this$;
if(and__7492__auto__){
return this$.cljs$core$IFn$_invoke$arity$20;
} else {
return and__7492__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$20(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
} else {
var x__8148__auto__ = (((this$ == null))?null:this$);
return (function (){var or__7504__auto__ = (cljs.core._invoke[(function (){var G__17661 = x__8148__auto__;
return goog.typeOf(G__17661);
})()]);
if(or__7504__auto__){
return or__7504__auto__;
} else {
var or__7504__auto____$1 = (cljs.core._invoke["_"]);
if(or__7504__auto____$1){
return or__7504__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
}
});
var _invoke__21 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
if((function (){var and__7492__auto__ = this$;
if(and__7492__auto__){
return this$.cljs$core$IFn$_invoke$arity$21;
} else {
return and__7492__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$21(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
} else {
var x__8148__auto__ = (((this$ == null))?null:this$);
return (function (){var or__7504__auto__ = (cljs.core._invoke[(function (){var G__17663 = x__8148__auto__;
return goog.typeOf(G__17663);
})()]);
if(or__7504__auto__){
return or__7504__auto__;
} else {
var or__7504__auto____$1 = (cljs.core._invoke["_"]);
if(or__7504__auto____$1){
return or__7504__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
}
});
var _invoke__22 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
if((function (){var and__7492__auto__ = this$;
if(and__7492__auto__){
return this$.cljs$core$IFn$_invoke$arity$22;
} else {
return and__7492__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$22(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
} else {
var x__8148__auto__ = (((this$ == null))?null:this$);
return (function (){var or__7504__auto__ = (cljs.core._invoke[(function (){var G__17665 = x__8148__auto__;
return goog.typeOf(G__17665);
})()]);
if(or__7504__auto__){
return or__7504__auto__;
} else {
var or__7504__auto____$1 = (cljs.core._invoke["_"]);
if(or__7504__auto____$1){
return or__7504__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
});
_invoke = function(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return _invoke__1.call(this,this$);
case 2:
return _invoke__2.call(this,this$,a);
case 3:
return _invoke__3.call(this,this$,a,b);
case 4:
return _invoke__4.call(this,this$,a,b,c);
case 5:
return _invoke__5.call(this,this$,a,b,c,d);
case 6:
return _invoke__6.call(this,this$,a,b,c,d,e);
case 7:
return _invoke__7.call(this,this$,a,b,c,d,e,f);
case 8:
return _invoke__8.call(this,this$,a,b,c,d,e,f,g);
case 9:
return _invoke__9.call(this,this$,a,b,c,d,e,f,g,h);
case 10:
return _invoke__10.call(this,this$,a,b,c,d,e,f,g,h,i);
case 11:
return _invoke__11.call(this,this$,a,b,c,d,e,f,g,h,i,j);
case 12:
return _invoke__12.call(this,this$,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return _invoke__13.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return _invoke__14.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return _invoke__15.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return _invoke__16.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return _invoke__17.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return _invoke__18.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return _invoke__19.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return _invoke__20.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return _invoke__21.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return _invoke__22.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_invoke.cljs$core$IFn$_invoke$arity$1 = _invoke__1;
_invoke.cljs$core$IFn$_invoke$arity$2 = _invoke__2;
_invoke.cljs$core$IFn$_invoke$arity$3 = _invoke__3;
_invoke.cljs$core$IFn$_invoke$arity$4 = _invoke__4;
_invoke.cljs$core$IFn$_invoke$arity$5 = _invoke__5;
_invoke.cljs$core$IFn$_invoke$arity$6 = _invoke__6;
_invoke.cljs$core$IFn$_invoke$arity$7 = _invoke__7;
_invoke.cljs$core$IFn$_invoke$arity$8 = _invoke__8;
_invoke.cljs$core$IFn$_invoke$arity$9 = _invoke__9;
_invoke.cljs$core$IFn$_invoke$arity$10 = _invoke__10;
_invoke.cljs$core$IFn$_invoke$arity$11 = _invoke__11;
_invoke.cljs$core$IFn$_invoke$arity$12 = _invoke__12;
_invoke.cljs$core$IFn$_invoke$arity$13 = _invoke__13;
_invoke.cljs$core$IFn$_invoke$arity$14 = _invoke__14;
_invoke.cljs$core$IFn$_invoke$arity$15 = _invoke__15;
_invoke.cljs$core$IFn$_invoke$arity$16 = _invoke__16;
_invoke.cljs$core$IFn$_invoke$arity$17 = _invoke__17;
_invoke.cljs$core$IFn$_invoke$arity$18 = _invoke__18;
_invoke.cljs$core$IFn$_invoke$arity$19 = _invoke__19;
_invoke.cljs$core$IFn$_invoke$arity$20 = _invoke__20;
_invoke.cljs$core$IFn$_invoke$arity$21 = _invoke__21;
_invoke.cljs$core$IFn$_invoke$arity$22 = _invoke__22;
return _invoke;
})()
;


cljs.core.ICloneable = (function (){var obj17667 = {};
return obj17667;
})();

cljs.core._clone = (function _clone(value){
if((function (){var and__7492__auto__ = value;
if(and__7492__auto__){
return value.cljs$core$ICloneable$_clone$arity$1;
} else {
return and__7492__auto__;
}
})()){
return value.cljs$core$ICloneable$_clone$arity$1(value);
} else {
var x__8148__auto__ = (((value == null))?null:value);
return (function (){var or__7504__auto__ = (cljs.core._clone[(function (){var G__17671 = x__8148__auto__;
return goog.typeOf(G__17671);
})()]);
if(or__7504__auto__){
return or__7504__auto__;
} else {
var or__7504__auto____$1 = (cljs.core._clone["_"]);
if(or__7504__auto____$1){
return or__7504__auto____$1;
} else {
throw cljs.core.missing_protocol("ICloneable.-clone",value);
}
}
})().call(null,value);
}
});


cljs.core.ICounted = (function (){var obj17673 = {};
return obj17673;
})();

cljs.core._count = (function _count(coll){
if((function (){var and__7492__auto__ = coll;
if(and__7492__auto__){
return coll.cljs$core$ICounted$_count$arity$1;
} else {
return and__7492__auto__;
}
})()){
return coll.cljs$core$ICounted$_count$arity$1(coll);
} else {
var x__8148__auto__ = (((coll == null))?null:coll);
return (function (){var or__7504__auto__ = (cljs.core._count[(function (){var G__17677 = x__8148__auto__;
return goog.typeOf(G__17677);
})()]);
if(or__7504__auto__){
return or__7504__auto__;
} else {
var or__7504__auto____$1 = (cljs.core._count["_"]);
if(or__7504__auto____$1){
return or__7504__auto____$1;
} else {
throw cljs.core.missing_protocol("ICounted.-count",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IEmptyableCollection = (function (){var obj17679 = {};
return obj17679;
})();

cljs.core._empty = (function _empty(coll){
if((function (){var and__7492__auto__ = coll;
if(and__7492__auto__){
return coll.cljs$core$IEmptyableCollection$_empty$arity$1;
} else {
return and__7492__auto__;
}
})()){
return coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll);
} else {
var x__8148__auto__ = (((coll == null))?null:coll);
return (function (){var or__7504__auto__ = (cljs.core._empty[(function (){var G__17683 = x__8148__auto__;
return goog.typeOf(G__17683);
})()]);
if(or__7504__auto__){
return or__7504__auto__;
} else {
var or__7504__auto____$1 = (cljs.core._empty["_"]);
if(or__7504__auto____$1){
return or__7504__auto____$1;
} else {
throw cljs.core.missing_protocol("IEmptyableCollection.-empty",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ICollection = (function (){var obj17685 = {};
return obj17685;
})();

cljs.core._conj = (function _conj(coll,o){
if((function (){var and__7492__auto__ = coll;
if(and__7492__auto__){
return coll.cljs$core$ICollection$_conj$arity$2;
} else {
return and__7492__auto__;
}
})()){
return coll.cljs$core$ICollection$_conj$arity$2(coll,o);
} else {
var x__8148__auto__ = (((coll == null))?null:coll);
return (function (){var or__7504__auto__ = (cljs.core._conj[(function (){var G__17689 = x__8148__auto__;
return goog.typeOf(G__17689);
})()]);
if(or__7504__auto__){
return or__7504__auto__;
} else {
var or__7504__auto____$1 = (cljs.core._conj["_"]);
if(or__7504__auto____$1){
return or__7504__auto____$1;
} else {
throw cljs.core.missing_protocol("ICollection.-conj",coll);
}
}
})().call(null,coll,o);
}
});


cljs.core.IIndexed = (function (){var obj17691 = {};
return obj17691;
})();

cljs.core._nth = (function() {
var _nth = null;
var _nth__2 = (function (coll,n){
if((function (){var and__7492__auto__ = coll;
if(and__7492__auto__){
return coll.cljs$core$IIndexed$_nth$arity$2;
} else {
return and__7492__auto__;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$2(coll,n);
} else {
var x__8148__auto__ = (((coll == null))?null:coll);
return (function (){var or__7504__auto__ = (cljs.core._nth[(function (){var G__17697 = x__8148__auto__;
return goog.typeOf(G__17697);
})()]);
if(or__7504__auto__){
return or__7504__auto__;
} else {
var or__7504__auto____$1 = (cljs.core._nth["_"]);
if(or__7504__auto____$1){
return or__7504__auto____$1;
} else {
throw cljs.core.missing_protocol("IIndexed.-nth",coll);
}
}
})().call(null,coll,n);
}
});
var _nth__3 = (function (coll,n,not_found){
if((function (){var and__7492__auto__ = coll;
if(and__7492__auto__){
return coll.cljs$core$IIndexed$_nth$arity$3;
} else {
return and__7492__auto__;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$3(coll,n,not_found);
} else {
var x__8148__auto__ = (((coll == null))?null:coll);
return (function (){var or__7504__auto__ = (cljs.core._nth[(function (){var G__17699 = x__8148__auto__;
return goog.typeOf(G__17699);
})()]);
if(or__7504__auto__){
return or__7504__auto__;
} else {
var or__7504__auto____$1 = (cljs.core._nth["_"]);
if(or__7504__auto____$1){
return or__7504__auto____$1;
} else {
throw cljs.core.missing_protocol("IIndexed.-nth",coll);
}
}
})().call(null,coll,n,not_found);
}
});
_nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return _nth__2.call(this,coll,n);
case 3:
return _nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_nth.cljs$core$IFn$_invoke$arity$2 = _nth__2;
_nth.cljs$core$IFn$_invoke$arity$3 = _nth__3;
return _nth;
})()
;


cljs.core.ASeq = (function (){var obj17701 = {};
return obj17701;
})();


cljs.core.ISeq = (function (){var obj17703 = {};
return obj17703;
})();

cljs.core._first = (function _first(coll){
if((function (){var and__7492__auto__ = coll;
if(and__7492__auto__){
return coll.cljs$core$ISeq$_first$arity$1;
} else {
return and__7492__auto__;
}
})()){
return coll.cljs$core$ISeq$_first$arity$1(coll);
} else {
var x__8148__auto__ = (((coll == null))?null:coll);
return (function (){var or__7504__auto__ = (cljs.core._first[(function (){var G__17707 = x__8148__auto__;
return goog.typeOf(G__17707);
})()]);
if(or__7504__auto__){
return or__7504__auto__;
} else {
var or__7504__auto____$1 = (cljs.core._first["_"]);
if(or__7504__auto____$1){
return or__7504__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeq.-first",coll);
}
}
})().call(null,coll);
}
});

cljs.core._rest = (function _rest(coll){
if((function (){var and__7492__auto__ = coll;
if(and__7492__auto__){
return coll.cljs$core$ISeq$_rest$arity$1;
} else {
return and__7492__auto__;
}
})()){
return coll.cljs$core$ISeq$_rest$arity$1(coll);
} else {
var x__8148__auto__ = (((coll == null))?null:coll);
return (function (){var or__7504__auto__ = (cljs.core._rest[(function (){var G__17711 = x__8148__auto__;
return goog.typeOf(G__17711);
})()]);
if(or__7504__auto__){
return or__7504__auto__;
} else {
var or__7504__auto____$1 = (cljs.core._rest["_"]);
if(or__7504__auto____$1){
return or__7504__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeq.-rest",coll);
}
}
})().call(null,coll);
}
});


cljs.core.INext = (function (){var obj17713 = {};
return obj17713;
})();

cljs.core._next = (function _next(coll){
if((function (){var and__7492__auto__ = coll;
if(and__7492__auto__){
return coll.cljs$core$INext$_next$arity$1;
} else {
return and__7492__auto__;
}
})()){
return coll.cljs$core$INext$_next$arity$1(coll);
} else {
var x__8148__auto__ = (((coll == null))?null:coll);
return (function (){var or__7504__auto__ = (cljs.core._next[(function (){var G__17717 = x__8148__auto__;
return goog.typeOf(G__17717);
})()]);
if(or__7504__auto__){
return or__7504__auto__;
} else {
var or__7504__auto____$1 = (cljs.core._next["_"]);
if(or__7504__auto____$1){
return or__7504__auto____$1;
} else {
throw cljs.core.missing_protocol("INext.-next",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ILookup = (function (){var obj17719 = {};
return obj17719;
})();

cljs.core._lookup = (function() {
var _lookup = null;
var _lookup__2 = (function (o,k){
if((function (){var and__7492__auto__ = o;
if(and__7492__auto__){
return o.cljs$core$ILookup$_lookup$arity$2;
} else {
return and__7492__auto__;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$2(o,k);
} else {
var x__8148__auto__ = (((o == null))?null:o);
return (function (){var or__7504__auto__ = (cljs.core._lookup[(function (){var G__17725 = x__8148__auto__;
return goog.typeOf(G__17725);
})()]);
if(or__7504__auto__){
return or__7504__auto__;
} else {
var or__7504__auto____$1 = (cljs.core._lookup["_"]);
if(or__7504__auto____$1){
return or__7504__auto____$1;
} else {
throw cljs.core.missing_protocol("ILookup.-lookup",o);
}
}
})().call(null,o,k);
}
});
var _lookup__3 = (function (o,k,not_found){
if((function (){var and__7492__auto__ = o;
if(and__7492__auto__){
return o.cljs$core$ILookup$_lookup$arity$3;
} else {
return and__7492__auto__;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$3(o,k,not_found);
} else {
var x__8148__auto__ = (((o == null))?null:o);
return (function (){var or__7504__auto__ = (cljs.core._lookup[(function (){var G__17727 = x__8148__auto__;
return goog.typeOf(G__17727);
})()]);
if(or__7504__auto__){
return or__7504__auto__;
} else {
var or__7504__auto____$1 = (cljs.core._lookup["_"]);
if(or__7504__auto____$1){
return or__7504__auto____$1;
} else {
throw cljs.core.missing_protocol("ILookup.-lookup",o);
}
}
})().call(null,o,k,not_found);
}
});
_lookup = function(o,k,not_found){
switch(arguments.length){
case 2:
return _lookup__2.call(this,o,k);
case 3:
return _lookup__3.call(this,o,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_lookup.cljs$core$IFn$_invoke$arity$2 = _lookup__2;
_lookup.cljs$core$IFn$_invoke$arity$3 = _lookup__3;
return _lookup;
})()
;


cljs.core.IAssociative = (function (){var obj17729 = {};
return obj17729;
})();

cljs.core._contains_key_QMARK_ = (function _contains_key_QMARK_(coll,k){
if((function (){var and__7492__auto__ = coll;
if(and__7492__auto__){
return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2;
} else {
return and__7492__auto__;
}
})()){
return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2(coll,k);
} else {
var x__8148__auto__ = (((coll == null))?null:coll);
return (function (){var or__7504__auto__ = (cljs.core._contains_key_QMARK_[(function (){var G__17733 = x__8148__auto__;
return goog.typeOf(G__17733);
})()]);
if(or__7504__auto__){
return or__7504__auto__;
} else {
var or__7504__auto____$1 = (cljs.core._contains_key_QMARK_["_"]);
if(or__7504__auto____$1){
return or__7504__auto____$1;
} else {
throw cljs.core.missing_protocol("IAssociative.-contains-key?",coll);
}
}
})().call(null,coll,k);
}
});

cljs.core._assoc = (function _assoc(coll,k,v){
if((function (){var and__7492__auto__ = coll;
if(and__7492__auto__){
return coll.cljs$core$IAssociative$_assoc$arity$3;
} else {
return and__7492__auto__;
}
})()){
return coll.cljs$core$IAssociative$_assoc$arity$3(coll,k,v);
} else {
var x__8148__auto__ = (((coll == null))?null:coll);
return (function (){var or__7504__auto__ = (cljs.core._assoc[(function (){var G__17737 = x__8148__auto__;
return goog.typeOf(G__17737);
})()]);
if(or__7504__auto__){
return or__7504__auto__;
} else {
var or__7504__auto____$1 = (cljs.core._assoc["_"]);
if(or__7504__auto____$1){
return or__7504__auto____$1;
} else {
throw cljs.core.missing_protocol("IAssociative.-assoc",coll);
}
}
})().call(null,coll,k,v);
}
});


cljs.core.IMap = (function (){var obj17739 = {};
return obj17739;
})();

cljs.core._dissoc = (function _dissoc(coll,k){
if((function (){var and__7492__auto__ = coll;
if(and__7492__auto__){
return coll.cljs$core$IMap$_dissoc$arity$2;
} else {
return and__7492__auto__;
}
})()){
return coll.cljs$core$IMap$_dissoc$arity$2(coll,k);
} else {
var x__8148__auto__ = (((coll == null))?null:coll);
return (function (){var or__7504__auto__ = (cljs.core._dissoc[(function (){var G__17743 = x__8148__auto__;
return goog.typeOf(G__17743);
})()]);
if(or__7504__auto__){
return or__7504__auto__;
} else {
var or__7504__auto____$1 = (cljs.core._dissoc["_"]);
if(or__7504__auto____$1){
return or__7504__auto____$1;
} else {
throw cljs.core.missing_protocol("IMap.-dissoc",coll);
}
}
})().call(null,coll,k);
}
});


cljs.core.IMapEntry = (function (){var obj17745 = {};
return obj17745;
})();

cljs.core._key = (function _key(coll){
if((function (){var and__7492__auto__ = coll;
if(and__7492__auto__){
return coll.cljs$core$IMapEntry$_key$arity$1;
} else {
return and__7492__auto__;
}
})()){
return coll.cljs$core$IMapEntry$_key$arity$1(coll);
} else {
var x__8148__auto__ = (((coll == null))?null:coll);
return (function (){var or__7504__auto__ = (cljs.core._key[(function (){var G__17749 = x__8148__auto__;
return goog.typeOf(G__17749);
})()]);
if(or__7504__auto__){
return or__7504__auto__;
} else {
var or__7504__auto____$1 = (cljs.core._key["_"]);
if(or__7504__auto____$1){
return or__7504__auto____$1;
} else {
throw cljs.core.missing_protocol("IMapEntry.-key",coll);
}
}
})().call(null,coll);
}
});

cljs.core._val = (function _val(coll){
if((function (){var and__7492__auto__ = coll;
if(and__7492__auto__){
return coll.cljs$core$IMapEntry$_val$arity$1;
} else {
return and__7492__auto__;
}
})()){
return coll.cljs$core$IMapEntry$_val$arity$1(coll);
} else {
var x__8148__auto__ = (((coll == null))?null:coll);
return (function (){var or__7504__auto__ = (cljs.core._val[(function (){var G__17753 = x__8148__auto__;
return goog.typeOf(G__17753);
})()]);
if(or__7504__auto__){
return or__7504__auto__;
} else {
var or__7504__auto____$1 = (cljs.core._val["_"]);
if(or__7504__auto____$1){
return or__7504__auto____$1;
} else {
throw cljs.core.missing_protocol("IMapEntry.-val",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ISet = (function (){var obj17755 = {};
return obj17755;
})();

cljs.core._disjoin = (function _disjoin(coll,v){
if((function (){var and__7492__auto__ = coll;
if(and__7492__auto__){
return coll.cljs$core$ISet$_disjoin$arity$2;
} else {
return and__7492__auto__;
}
})()){
return coll.cljs$core$ISet$_disjoin$arity$2(coll,v);
} else {
var x__8148__auto__ = (((coll == null))?null:coll);
return (function (){var or__7504__auto__ = (cljs.core._disjoin[(function (){var G__17759 = x__8148__auto__;
return goog.typeOf(G__17759);
})()]);
if(or__7504__auto__){
return or__7504__auto__;
} else {
var or__7504__auto____$1 = (cljs.core._disjoin["_"]);
if(or__7504__auto____$1){
return or__7504__auto____$1;
} else {
throw cljs.core.missing_protocol("ISet.-disjoin",coll);
}
}
})().call(null,coll,v);
}
});


cljs.core.IStack = (function (){var obj17761 = {};
return obj17761;
})();

cljs.core._peek = (function _peek(coll){
if((function (){var and__7492__auto__ = coll;
if(and__7492__auto__){
return coll.cljs$core$IStack$_peek$arity$1;
} else {
return and__7492__auto__;
}
})()){
return coll.cljs$core$IStack$_peek$arity$1(coll);
} else {
var x__8148__auto__ = (((coll == null))?null:coll);
return (function (){var or__7504__auto__ = (cljs.core._peek[(function (){var G__17765 = x__8148__auto__;
return goog.typeOf(G__17765);
})()]);
if(or__7504__auto__){
return or__7504__auto__;
} else {
var or__7504__auto____$1 = (cljs.core._peek["_"]);
if(or__7504__auto____$1){
return or__7504__auto____$1;
} else {
throw cljs.core.missing_protocol("IStack.-peek",coll);
}
}
})().call(null,coll);
}
});

cljs.core._pop = (function _pop(coll){
if((function (){var and__7492__auto__ = coll;
if(and__7492__auto__){
return coll.cljs$core$IStack$_pop$arity$1;
} else {
return and__7492__auto__;
}
})()){
return coll.cljs$core$IStack$_pop$arity$1(coll);
} else {
var x__8148__auto__ = (((coll == null))?null:coll);
return (function (){var or__7504__auto__ = (cljs.core._pop[(function (){var G__17769 = x__8148__auto__;
return goog.typeOf(G__17769);
})()]);
if(or__7504__auto__){
return or__7504__auto__;
} else {
var or__7504__auto____$1 = (cljs.core._pop["_"]);
if(or__7504__auto____$1){
return or__7504__auto____$1;
} else {
throw cljs.core.missing_protocol("IStack.-pop",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IVector = (function (){var obj17771 = {};
return obj17771;
})();

cljs.core._assoc_n = (function _assoc_n(coll,n,val){
if((function (){var and__7492__auto__ = coll;
if(and__7492__auto__){
return coll.cljs$core$IVector$_assoc_n$arity$3;
} else {
return and__7492__auto__;
}
})()){
return coll.cljs$core$IVector$_assoc_n$arity$3(coll,n,val);
} else {
var x__8148__auto__ = (((coll == null))?null:coll);
return (function (){var or__7504__auto__ = (cljs.core._assoc_n[(function (){var G__17775 = x__8148__auto__;
return goog.typeOf(G__17775);
})()]);
if(or__7504__auto__){
return or__7504__auto__;
} else {
var or__7504__auto____$1 = (cljs.core._assoc_n["_"]);
if(or__7504__auto____$1){
return or__7504__auto____$1;
} else {
throw cljs.core.missing_protocol("IVector.-assoc-n",coll);
}
}
})().call(null,coll,n,val);
}
});


cljs.core.IDeref = (function (){var obj17777 = {};
return obj17777;
})();

cljs.core._deref = (function _deref(o){
if((function (){var and__7492__auto__ = o;
if(and__7492__auto__){
return o.cljs$core$IDeref$_deref$arity$1;
} else {
return and__7492__auto__;
}
})()){
return o.cljs$core$IDeref$_deref$arity$1(o);
} else {
var x__8148__auto__ = (((o == null))?null:o);
return (function (){var or__7504__auto__ = (cljs.core._deref[(function (){var G__17781 = x__8148__auto__;
return goog.typeOf(G__17781);
})()]);
if(or__7504__auto__){
return or__7504__auto__;
} else {
var or__7504__auto____$1 = (cljs.core._deref["_"]);
if(or__7504__auto____$1){
return or__7504__auto____$1;
} else {
throw cljs.core.missing_protocol("IDeref.-deref",o);
}
}
})().call(null,o);
}
});


cljs.core.IDerefWithTimeout = (function (){var obj17783 = {};
return obj17783;
})();

cljs.core._deref_with_timeout = (function _deref_with_timeout(o,msec,timeout_val){
if((function (){var and__7492__auto__ = o;
if(and__7492__auto__){
return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3;
} else {
return and__7492__auto__;
}
})()){
return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3(o,msec,timeout_val);
} else {
var x__8148__auto__ = (((o == null))?null:o);
return (function (){var or__7504__auto__ = (cljs.core._deref_with_timeout[(function (){var G__17787 = x__8148__auto__;
return goog.typeOf(G__17787);
})()]);
if(or__7504__auto__){
return or__7504__auto__;
} else {
var or__7504__auto____$1 = (cljs.core._deref_with_timeout["_"]);
if(or__7504__auto____$1){
return or__7504__auto____$1;
} else {
throw cljs.core.missing_protocol("IDerefWithTimeout.-deref-with-timeout",o);
}
}
})().call(null,o,msec,timeout_val);
}
});


cljs.core.IMeta = (function (){var obj17789 = {};
return obj17789;
})();

cljs.core._meta = (function _meta(o){
if((function (){var and__7492__auto__ = o;
if(and__7492__auto__){
return o.cljs$core$IMeta$_meta$arity$1;
} else {
return and__7492__auto__;
}
})()){
return o.cljs$core$IMeta$_meta$arity$1(o);
} else {
var x__8148__auto__ = (((o == null))?null:o);
return (function (){var or__7504__auto__ = (cljs.core._meta[(function (){var G__17793 = x__8148__auto__;
return goog.typeOf(G__17793);
})()]);
if(or__7504__auto__){
return or__7504__auto__;
} else {
var or__7504__auto____$1 = (cljs.core._meta["_"]);
if(or__7504__auto____$1){
return or__7504__auto____$1;
} else {
throw cljs.core.missing_protocol("IMeta.-meta",o);
}
}
})().call(null,o);
}
});


cljs.core.IWithMeta = (function (){var obj17795 = {};
return obj17795;
})();

cljs.core._with_meta = (function _with_meta(o,meta){
if((function (){var and__7492__auto__ = o;
if(and__7492__auto__){
return o.cljs$core$IWithMeta$_with_meta$arity$2;
} else {
return and__7492__auto__;
}
})()){
return o.cljs$core$IWithMeta$_with_meta$arity$2(o,meta);
} else {
var x__8148__auto__ = (((o == null))?null:o);
return (function (){var or__7504__auto__ = (cljs.core._with_meta[(function (){var G__17799 = x__8148__auto__;
return goog.typeOf(G__17799);
})()]);
if(or__7504__auto__){
return or__7504__auto__;
} else {
var or__7504__auto____$1 = (cljs.core._with_meta["_"]);
if(or__7504__auto____$1){
return or__7504__auto____$1;
} else {
throw cljs.core.missing_protocol("IWithMeta.-with-meta",o);
}
}
})().call(null,o,meta);
}
});


cljs.core.IReduce = (function (){var obj17801 = {};
return obj17801;
})();

cljs.core._reduce = (function() {
var _reduce = null;
var _reduce__2 = (function (coll,f){
if((function (){var and__7492__auto__ = coll;
if(and__7492__auto__){
return coll.cljs$core$IReduce$_reduce$arity$2;
} else {
return and__7492__auto__;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$2(coll,f);
} else {
var x__8148__auto__ = (((coll == null))?null:coll);
return (function (){var or__7504__auto__ = (cljs.core._reduce[(function (){var G__17807 = x__8148__auto__;
return goog.typeOf(G__17807);
})()]);
if(or__7504__auto__){
return or__7504__auto__;
} else {
var or__7504__auto____$1 = (cljs.core._reduce["_"]);
if(or__7504__auto____$1){
return or__7504__auto____$1;
} else {
throw cljs.core.missing_protocol("IReduce.-reduce",coll);
}
}
})().call(null,coll,f);
}
});
var _reduce__3 = (function (coll,f,start){
if((function (){var and__7492__auto__ = coll;
if(and__7492__auto__){
return coll.cljs$core$IReduce$_reduce$arity$3;
} else {
return and__7492__auto__;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$3(coll,f,start);
} else {
var x__8148__auto__ = (((coll == null))?null:coll);
return (function (){var or__7504__auto__ = (cljs.core._reduce[(function (){var G__17809 = x__8148__auto__;
return goog.typeOf(G__17809);
})()]);
if(or__7504__auto__){
return or__7504__auto__;
} else {
var or__7504__auto____$1 = (cljs.core._reduce["_"]);
if(or__7504__auto____$1){
return or__7504__auto____$1;
} else {
throw cljs.core.missing_protocol("IReduce.-reduce",coll);
}
}
})().call(null,coll,f,start);
}
});
_reduce = function(coll,f,start){
switch(arguments.length){
case 2:
return _reduce__2.call(this,coll,f);
case 3:
return _reduce__3.call(this,coll,f,start);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_reduce.cljs$core$IFn$_invoke$arity$2 = _reduce__2;
_reduce.cljs$core$IFn$_invoke$arity$3 = _reduce__3;
return _reduce;
})()
;


cljs.core.IKVReduce = (function (){var obj17811 = {};
return obj17811;
})();

cljs.core._kv_reduce = (function _kv_reduce(coll,f,init){
if((function (){var and__7492__auto__ = coll;
if(and__7492__auto__){
return coll.cljs$core$IKVReduce$_kv_reduce$arity$3;
} else {
return and__7492__auto__;
}
})()){
return coll.cljs$core$IKVReduce$_kv_reduce$arity$3(coll,f,init);
} else {
var x__8148__auto__ = (((coll == null))?null:coll);
return (function (){var or__7504__auto__ = (cljs.core._kv_reduce[(function (){var G__17815 = x__8148__auto__;
return goog.typeOf(G__17815);
})()]);
if(or__7504__auto__){
return or__7504__auto__;
} else {
var or__7504__auto____$1 = (cljs.core._kv_reduce["_"]);
if(or__7504__auto____$1){
return or__7504__auto____$1;
} else {
throw cljs.core.missing_protocol("IKVReduce.-kv-reduce",coll);
}
}
})().call(null,coll,f,init);
}
});


cljs.core.IEquiv = (function (){var obj17817 = {};
return obj17817;
})();

cljs.core._equiv = (function _equiv(o,other){
if((function (){var and__7492__auto__ = o;
if(and__7492__auto__){
return o.cljs$core$IEquiv$_equiv$arity$2;
} else {
return and__7492__auto__;
}
})()){
return o.cljs$core$IEquiv$_equiv$arity$2(o,other);
} else {
var x__8148__auto__ = (((o == null))?null:o);
return (function (){var or__7504__auto__ = (cljs.core._equiv[(function (){var G__17821 = x__8148__auto__;
return goog.typeOf(G__17821);
})()]);
if(or__7504__auto__){
return or__7504__auto__;
} else {
var or__7504__auto____$1 = (cljs.core._equiv["_"]);
if(or__7504__auto____$1){
return or__7504__auto____$1;
} else {
throw cljs.core.missing_protocol("IEquiv.-equiv",o);
}
}
})().call(null,o,other);
}
});


cljs.core.IHash = (function (){var obj17823 = {};
return obj17823;
})();

cljs.core._hash = (function _hash(o){
if((function (){var and__7492__auto__ = o;
if(and__7492__auto__){
return o.cljs$core$IHash$_hash$arity$1;
} else {
return and__7492__auto__;
}
})()){
return o.cljs$core$IHash$_hash$arity$1(o);
} else {
var x__8148__auto__ = (((o == null))?null:o);
return (function (){var or__7504__auto__ = (cljs.core._hash[(function (){var G__17827 = x__8148__auto__;
return goog.typeOf(G__17827);
})()]);
if(or__7504__auto__){
return or__7504__auto__;
} else {
var or__7504__auto____$1 = (cljs.core._hash["_"]);
if(or__7504__auto____$1){
return or__7504__auto____$1;
} else {
throw cljs.core.missing_protocol("IHash.-hash",o);
}
}
})().call(null,o);
}
});


cljs.core.ISeqable = (function (){var obj17829 = {};
return obj17829;
})();

cljs.core._seq = (function _seq(o){
if((function (){var and__7492__auto__ = o;
if(and__7492__auto__){
return o.cljs$core$ISeqable$_seq$arity$1;
} else {
return and__7492__auto__;
}
})()){
return o.cljs$core$ISeqable$_seq$arity$1(o);
} else {
var x__8148__auto__ = (((o == null))?null:o);
return (function (){var or__7504__auto__ = (cljs.core._seq[(function (){var G__17833 = x__8148__auto__;
return goog.typeOf(G__17833);
})()]);
if(or__7504__auto__){
return or__7504__auto__;
} else {
var or__7504__auto____$1 = (cljs.core._seq["_"]);
if(or__7504__auto____$1){
return or__7504__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeqable.-seq",o);
}
}
})().call(null,o);
}
});


cljs.core.ISequential = (function (){var obj17835 = {};
return obj17835;
})();


cljs.core.IList = (function (){var obj17837 = {};
return obj17837;
})();


cljs.core.IRecord = (function (){var obj17839 = {};
return obj17839;
})();


cljs.core.IReversible = (function (){var obj17841 = {};
return obj17841;
})();

cljs.core._rseq = (function _rseq(coll){
if((function (){var and__7492__auto__ = coll;
if(and__7492__auto__){
return coll.cljs$core$IReversible$_rseq$arity$1;
} else {
return and__7492__auto__;
}
})()){
return coll.cljs$core$IReversible$_rseq$arity$1(coll);
} else {
var x__8148__auto__ = (((coll == null))?null:coll);
return (function (){var or__7504__auto__ = (cljs.core._rseq[(function (){var G__17845 = x__8148__auto__;
return goog.typeOf(G__17845);
})()]);
if(or__7504__auto__){
return or__7504__auto__;
} else {
var or__7504__auto____$1 = (cljs.core._rseq["_"]);
if(or__7504__auto____$1){
return or__7504__auto____$1;
} else {
throw cljs.core.missing_protocol("IReversible.-rseq",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ISorted = (function (){var obj17847 = {};
return obj17847;
})();

cljs.core._sorted_seq = (function _sorted_seq(coll,ascending_QMARK_){
if((function (){var and__7492__auto__ = coll;
if(and__7492__auto__){
return coll.cljs$core$ISorted$_sorted_seq$arity$2;
} else {
return and__7492__auto__;
}
})()){
return coll.cljs$core$ISorted$_sorted_seq$arity$2(coll,ascending_QMARK_);
} else {
var x__8148__auto__ = (((coll == null))?null:coll);
return (function (){var or__7504__auto__ = (cljs.core._sorted_seq[(function (){var G__17851 = x__8148__auto__;
return goog.typeOf(G__17851);
})()]);
if(or__7504__auto__){
return or__7504__auto__;
} else {
var or__7504__auto____$1 = (cljs.core._sorted_seq["_"]);
if(or__7504__auto____$1){
return or__7504__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-sorted-seq",coll);
}
}
})().call(null,coll,ascending_QMARK_);
}
});

cljs.core._sorted_seq_from = (function _sorted_seq_from(coll,k,ascending_QMARK_){
if((function (){var and__7492__auto__ = coll;
if(and__7492__auto__){
return coll.cljs$core$ISorted$_sorted_seq_from$arity$3;
} else {
return and__7492__auto__;
}
})()){
return coll.cljs$core$ISorted$_sorted_seq_from$arity$3(coll,k,ascending_QMARK_);
} else {
var x__8148__auto__ = (((coll == null))?null:coll);
return (function (){var or__7504__auto__ = (cljs.core._sorted_seq_from[(function (){var G__17855 = x__8148__auto__;
return goog.typeOf(G__17855);
})()]);
if(or__7504__auto__){
return or__7504__auto__;
} else {
var or__7504__auto____$1 = (cljs.core._sorted_seq_from["_"]);
if(or__7504__auto____$1){
return or__7504__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-sorted-seq-from",coll);
}
}
})().call(null,coll,k,ascending_QMARK_);
}
});

cljs.core._entry_key = (function _entry_key(coll,entry){
if((function (){var and__7492__auto__ = coll;
if(and__7492__auto__){
return coll.cljs$core$ISorted$_entry_key$arity$2;
} else {
return and__7492__auto__;
}
})()){
return coll.cljs$core$ISorted$_entry_key$arity$2(coll,entry);
} else {
var x__8148__auto__ = (((coll == null))?null:coll);
return (function (){var or__7504__auto__ = (cljs.core._entry_key[(function (){var G__17859 = x__8148__auto__;
return goog.typeOf(G__17859);
})()]);
if(or__7504__auto__){
return or__7504__auto__;
} else {
var or__7504__auto____$1 = (cljs.core._entry_key["_"]);
if(or__7504__auto____$1){
return or__7504__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-entry-key",coll);
}
}
})().call(null,coll,entry);
}
});

cljs.core._comparator = (function _comparator(coll){
if((function (){var and__7492__auto__ = coll;
if(and__7492__auto__){
return coll.cljs$core$ISorted$_comparator$arity$1;
} else {
return and__7492__auto__;
}
})()){
return coll.cljs$core$ISorted$_comparator$arity$1(coll);
} else {
var x__8148__auto__ = (((coll == null))?null:coll);
return (function (){var or__7504__auto__ = (cljs.core._comparator[(function (){var G__17863 = x__8148__auto__;
return goog.typeOf(G__17863);
})()]);
if(or__7504__auto__){
return or__7504__auto__;
} else {
var or__7504__auto____$1 = (cljs.core._comparator["_"]);
if(or__7504__auto____$1){
return or__7504__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-comparator",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IWriter = (function (){var obj17865 = {};
return obj17865;
})();

cljs.core._write = (function _write(writer,s){
if((function (){var and__7492__auto__ = writer;
if(and__7492__auto__){
return writer.cljs$core$IWriter$_write$arity$2;
} else {
return and__7492__auto__;
}
})()){
return writer.cljs$core$IWriter$_write$arity$2(writer,s);
} else {
var x__8148__auto__ = (((writer == null))?null:writer);
return (function (){var or__7504__auto__ = (cljs.core._write[(function (){var G__17869 = x__8148__auto__;
return goog.typeOf(G__17869);
})()]);
if(or__7504__auto__){
return or__7504__auto__;
} else {
var or__7504__auto____$1 = (cljs.core._write["_"]);
if(or__7504__auto____$1){
return or__7504__auto____$1;
} else {
throw cljs.core.missing_protocol("IWriter.-write",writer);
}
}
})().call(null,writer,s);
}
});

cljs.core._flush = (function _flush(writer){
if((function (){var and__7492__auto__ = writer;
if(and__7492__auto__){
return writer.cljs$core$IWriter$_flush$arity$1;
} else {
return and__7492__auto__;
}
})()){
return writer.cljs$core$IWriter$_flush$arity$1(writer);
} else {
var x__8148__auto__ = (((writer == null))?null:writer);
return (function (){var or__7504__auto__ = (cljs.core._flush[(function (){var G__17873 = x__8148__auto__;
return goog.typeOf(G__17873);
})()]);
if(or__7504__auto__){
return or__7504__auto__;
} else {
var or__7504__auto____$1 = (cljs.core._flush["_"]);
if(or__7504__auto____$1){
return or__7504__auto____$1;
} else {
throw cljs.core.missing_protocol("IWriter.-flush",writer);
}
}
})().call(null,writer);
}
});


cljs.core.IPrintWithWriter = (function (){var obj17875 = {};
return obj17875;
})();

cljs.core._pr_writer = (function _pr_writer(o,writer,opts){
if((function (){var and__7492__auto__ = o;
if(and__7492__auto__){
return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3;
} else {
return and__7492__auto__;
}
})()){
return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3(o,writer,opts);
} else {
var x__8148__auto__ = (((o == null))?null:o);
return (function (){var or__7504__auto__ = (cljs.core._pr_writer[(function (){var G__17879 = x__8148__auto__;
return goog.typeOf(G__17879);
})()]);
if(or__7504__auto__){
return or__7504__auto__;
} else {
var or__7504__auto____$1 = (cljs.core._pr_writer["_"]);
if(or__7504__auto____$1){
return or__7504__auto____$1;
} else {
throw cljs.core.missing_protocol("IPrintWithWriter.-pr-writer",o);
}
}
})().call(null,o,writer,opts);
}
});


cljs.core.IPending = (function (){var obj17881 = {};
return obj17881;
})();

cljs.core._realized_QMARK_ = (function _realized_QMARK_(d){
if((function (){var and__7492__auto__ = d;
if(and__7492__auto__){
return d.cljs$core$IPending$_realized_QMARK_$arity$1;
} else {
return and__7492__auto__;
}
})()){
return d.cljs$core$IPending$_realized_QMARK_$arity$1(d);
} else {
var x__8148__auto__ = (((d == null))?null:d);
return (function (){var or__7504__auto__ = (cljs.core._realized_QMARK_[(function (){var G__17885 = x__8148__auto__;
return goog.typeOf(G__17885);
})()]);
if(or__7504__auto__){
return or__7504__auto__;
} else {
var or__7504__auto____$1 = (cljs.core._realized_QMARK_["_"]);
if(or__7504__auto____$1){
return or__7504__auto____$1;
} else {
throw cljs.core.missing_protocol("IPending.-realized?",d);
}
}
})().call(null,d);
}
});


cljs.core.IWatchable = (function (){var obj17887 = {};
return obj17887;
})();

cljs.core._notify_watches = (function _notify_watches(this$,oldval,newval){
if((function (){var and__7492__auto__ = this$;
if(and__7492__auto__){
return this$.cljs$core$IWatchable$_notify_watches$arity$3;
} else {
return and__7492__auto__;
}
})()){
return this$.cljs$core$IWatchable$_notify_watches$arity$3(this$,oldval,newval);
} else {
var x__8148__auto__ = (((this$ == null))?null:this$);
return (function (){var or__7504__auto__ = (cljs.core._notify_watches[(function (){var G__17891 = x__8148__auto__;
return goog.typeOf(G__17891);
})()]);
if(or__7504__auto__){
return or__7504__auto__;
} else {
var or__7504__auto____$1 = (cljs.core._notify_watches["_"]);
if(or__7504__auto____$1){
return or__7504__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-notify-watches",this$);
}
}
})().call(null,this$,oldval,newval);
}
});

cljs.core._add_watch = (function _add_watch(this$,key,f){
if((function (){var and__7492__auto__ = this$;
if(and__7492__auto__){
return this$.cljs$core$IWatchable$_add_watch$arity$3;
} else {
return and__7492__auto__;
}
})()){
return this$.cljs$core$IWatchable$_add_watch$arity$3(this$,key,f);
} else {
var x__8148__auto__ = (((this$ == null))?null:this$);
return (function (){var or__7504__auto__ = (cljs.core._add_watch[(function (){var G__17895 = x__8148__auto__;
return goog.typeOf(G__17895);
})()]);
if(or__7504__auto__){
return or__7504__auto__;
} else {
var or__7504__auto____$1 = (cljs.core._add_watch["_"]);
if(or__7504__auto____$1){
return or__7504__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-add-watch",this$);
}
}
})().call(null,this$,key,f);
}
});

cljs.core._remove_watch = (function _remove_watch(this$,key){
if((function (){var and__7492__auto__ = this$;
if(and__7492__auto__){
return this$.cljs$core$IWatchable$_remove_watch$arity$2;
} else {
return and__7492__auto__;
}
})()){
return this$.cljs$core$IWatchable$_remove_watch$arity$2(this$,key);
} else {
var x__8148__auto__ = (((this$ == null))?null:this$);
return (function (){var or__7504__auto__ = (cljs.core._remove_watch[(function (){var G__17899 = x__8148__auto__;
return goog.typeOf(G__17899);
})()]);
if(or__7504__auto__){
return or__7504__auto__;
} else {
var or__7504__auto____$1 = (cljs.core._remove_watch["_"]);
if(or__7504__auto____$1){
return or__7504__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-remove-watch",this$);
}
}
})().call(null,this$,key);
}
});


cljs.core.IEditableCollection = (function (){var obj17901 = {};
return obj17901;
})();

cljs.core._as_transient = (function _as_transient(coll){
if((function (){var and__7492__auto__ = coll;
if(and__7492__auto__){
return coll.cljs$core$IEditableCollection$_as_transient$arity$1;
} else {
return and__7492__auto__;
}
})()){
return coll.cljs$core$IEditableCollection$_as_transient$arity$1(coll);
} else {
var x__8148__auto__ = (((coll == null))?null:coll);
return (function (){var or__7504__auto__ = (cljs.core._as_transient[(function (){var G__17905 = x__8148__auto__;
return goog.typeOf(G__17905);
})()]);
if(or__7504__auto__){
return or__7504__auto__;
} else {
var or__7504__auto____$1 = (cljs.core._as_transient["_"]);
if(or__7504__auto____$1){
return or__7504__auto____$1;
} else {
throw cljs.core.missing_protocol("IEditableCollection.-as-transient",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ITransientCollection = (function (){var obj17907 = {};
return obj17907;
})();

cljs.core._conj_BANG_ = (function _conj_BANG_(tcoll,val){
if((function (){var and__7492__auto__ = tcoll;
if(and__7492__auto__){
return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2;
} else {
return and__7492__auto__;
}
})()){
return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2(tcoll,val);
} else {
var x__8148__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__7504__auto__ = (cljs.core._conj_BANG_[(function (){var G__17911 = x__8148__auto__;
return goog.typeOf(G__17911);
})()]);
if(or__7504__auto__){
return or__7504__auto__;
} else {
var or__7504__auto____$1 = (cljs.core._conj_BANG_["_"]);
if(or__7504__auto____$1){
return or__7504__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientCollection.-conj!",tcoll);
}
}
})().call(null,tcoll,val);
}
});

cljs.core._persistent_BANG_ = (function _persistent_BANG_(tcoll){
if((function (){var and__7492__auto__ = tcoll;
if(and__7492__auto__){
return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1;
} else {
return and__7492__auto__;
}
})()){
return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(tcoll);
} else {
var x__8148__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__7504__auto__ = (cljs.core._persistent_BANG_[(function (){var G__17915 = x__8148__auto__;
return goog.typeOf(G__17915);
})()]);
if(or__7504__auto__){
return or__7504__auto__;
} else {
var or__7504__auto____$1 = (cljs.core._persistent_BANG_["_"]);
if(or__7504__auto____$1){
return or__7504__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientCollection.-persistent!",tcoll);
}
}
})().call(null,tcoll);
}
});


cljs.core.ITransientAssociative = (function (){var obj17917 = {};
return obj17917;
})();

cljs.core._assoc_BANG_ = (function _assoc_BANG_(tcoll,key,val){
if((function (){var and__7492__auto__ = tcoll;
if(and__7492__auto__){
return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3;
} else {
return and__7492__auto__;
}
})()){
return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll,key,val);
} else {
var x__8148__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__7504__auto__ = (cljs.core._assoc_BANG_[(function (){var G__17921 = x__8148__auto__;
return goog.typeOf(G__17921);
})()]);
if(or__7504__auto__){
return or__7504__auto__;
} else {
var or__7504__auto____$1 = (cljs.core._assoc_BANG_["_"]);
if(or__7504__auto____$1){
return or__7504__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientAssociative.-assoc!",tcoll);
}
}
})().call(null,tcoll,key,val);
}
});


cljs.core.ITransientMap = (function (){var obj17923 = {};
return obj17923;
})();

cljs.core._dissoc_BANG_ = (function _dissoc_BANG_(tcoll,key){
if((function (){var and__7492__auto__ = tcoll;
if(and__7492__auto__){
return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2;
} else {
return and__7492__auto__;
}
})()){
return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2(tcoll,key);
} else {
var x__8148__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__7504__auto__ = (cljs.core._dissoc_BANG_[(function (){var G__17927 = x__8148__auto__;
return goog.typeOf(G__17927);
})()]);
if(or__7504__auto__){
return or__7504__auto__;
} else {
var or__7504__auto____$1 = (cljs.core._dissoc_BANG_["_"]);
if(or__7504__auto____$1){
return or__7504__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientMap.-dissoc!",tcoll);
}
}
})().call(null,tcoll,key);
}
});


cljs.core.ITransientVector = (function (){var obj17929 = {};
return obj17929;
})();

cljs.core._assoc_n_BANG_ = (function _assoc_n_BANG_(tcoll,n,val){
if((function (){var and__7492__auto__ = tcoll;
if(and__7492__auto__){
return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3;
} else {
return and__7492__auto__;
}
})()){
return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3(tcoll,n,val);
} else {
var x__8148__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__7504__auto__ = (cljs.core._assoc_n_BANG_[(function (){var G__17933 = x__8148__auto__;
return goog.typeOf(G__17933);
})()]);
if(or__7504__auto__){
return or__7504__auto__;
} else {
var or__7504__auto____$1 = (cljs.core._assoc_n_BANG_["_"]);
if(or__7504__auto____$1){
return or__7504__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientVector.-assoc-n!",tcoll);
}
}
})().call(null,tcoll,n,val);
}
});

cljs.core._pop_BANG_ = (function _pop_BANG_(tcoll){
if((function (){var and__7492__auto__ = tcoll;
if(and__7492__auto__){
return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1;
} else {
return and__7492__auto__;
}
})()){
return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1(tcoll);
} else {
var x__8148__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__7504__auto__ = (cljs.core._pop_BANG_[(function (){var G__17937 = x__8148__auto__;
return goog.typeOf(G__17937);
})()]);
if(or__7504__auto__){
return or__7504__auto__;
} else {
var or__7504__auto____$1 = (cljs.core._pop_BANG_["_"]);
if(or__7504__auto____$1){
return or__7504__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientVector.-pop!",tcoll);
}
}
})().call(null,tcoll);
}
});


cljs.core.ITransientSet = (function (){var obj17939 = {};
return obj17939;
})();

cljs.core._disjoin_BANG_ = (function _disjoin_BANG_(tcoll,v){
if((function (){var and__7492__auto__ = tcoll;
if(and__7492__auto__){
return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2;
} else {
return and__7492__auto__;
}
})()){
return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2(tcoll,v);
} else {
var x__8148__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__7504__auto__ = (cljs.core._disjoin_BANG_[(function (){var G__17943 = x__8148__auto__;
return goog.typeOf(G__17943);
})()]);
if(or__7504__auto__){
return or__7504__auto__;
} else {
var or__7504__auto____$1 = (cljs.core._disjoin_BANG_["_"]);
if(or__7504__auto____$1){
return or__7504__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientSet.-disjoin!",tcoll);
}
}
})().call(null,tcoll,v);
}
});


cljs.core.IComparable = (function (){var obj17945 = {};
return obj17945;
})();

cljs.core._compare = (function _compare(x,y){
if((function (){var and__7492__auto__ = x;
if(and__7492__auto__){
return x.cljs$core$IComparable$_compare$arity$2;
} else {
return and__7492__auto__;
}
})()){
return x.cljs$core$IComparable$_compare$arity$2(x,y);
} else {
var x__8148__auto__ = (((x == null))?null:x);
return (function (){var or__7504__auto__ = (cljs.core._compare[(function (){var G__17949 = x__8148__auto__;
return goog.typeOf(G__17949);
})()]);
if(or__7504__auto__){
return or__7504__auto__;
} else {
var or__7504__auto____$1 = (cljs.core._compare["_"]);
if(or__7504__auto____$1){
return or__7504__auto____$1;
} else {
throw cljs.core.missing_protocol("IComparable.-compare",x);
}
}
})().call(null,x,y);
}
});


cljs.core.IChunk = (function (){var obj17951 = {};
return obj17951;
})();

cljs.core._drop_first = (function _drop_first(coll){
if((function (){var and__7492__auto__ = coll;
if(and__7492__auto__){
return coll.cljs$core$IChunk$_drop_first$arity$1;
} else {
return and__7492__auto__;
}
})()){
return coll.cljs$core$IChunk$_drop_first$arity$1(coll);
} else {
var x__8148__auto__ = (((coll == null))?null:coll);
return (function (){var or__7504__auto__ = (cljs.core._drop_first[(function (){var G__17955 = x__8148__auto__;
return goog.typeOf(G__17955);
})()]);
if(or__7504__auto__){
return or__7504__auto__;
} else {
var or__7504__auto____$1 = (cljs.core._drop_first["_"]);
if(or__7504__auto____$1){
return or__7504__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunk.-drop-first",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IChunkedSeq = (function (){var obj17957 = {};
return obj17957;
})();

cljs.core._chunked_first = (function _chunked_first(coll){
if((function (){var and__7492__auto__ = coll;
if(and__7492__auto__){
return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1;
} else {
return and__7492__auto__;
}
})()){
return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1(coll);
} else {
var x__8148__auto__ = (((coll == null))?null:coll);
return (function (){var or__7504__auto__ = (cljs.core._chunked_first[(function (){var G__17961 = x__8148__auto__;
return goog.typeOf(G__17961);
})()]);
if(or__7504__auto__){
return or__7504__auto__;
} else {
var or__7504__auto____$1 = (cljs.core._chunked_first["_"]);
if(or__7504__auto____$1){
return or__7504__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedSeq.-chunked-first",coll);
}
}
})().call(null,coll);
}
});

cljs.core._chunked_rest = (function _chunked_rest(coll){
if((function (){var and__7492__auto__ = coll;
if(and__7492__auto__){
return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1;
} else {
return and__7492__auto__;
}
})()){
return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1(coll);
} else {
var x__8148__auto__ = (((coll == null))?null:coll);
return (function (){var or__7504__auto__ = (cljs.core._chunked_rest[(function (){var G__17965 = x__8148__auto__;
return goog.typeOf(G__17965);
})()]);
if(or__7504__auto__){
return or__7504__auto__;
} else {
var or__7504__auto____$1 = (cljs.core._chunked_rest["_"]);
if(or__7504__auto____$1){
return or__7504__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedSeq.-chunked-rest",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IChunkedNext = (function (){var obj17967 = {};
return obj17967;
})();

cljs.core._chunked_next = (function _chunked_next(coll){
if((function (){var and__7492__auto__ = coll;
if(and__7492__auto__){
return coll.cljs$core$IChunkedNext$_chunked_next$arity$1;
} else {
return and__7492__auto__;
}
})()){
return coll.cljs$core$IChunkedNext$_chunked_next$arity$1(coll);
} else {
var x__8148__auto__ = (((coll == null))?null:coll);
return (function (){var or__7504__auto__ = (cljs.core._chunked_next[(function (){var G__17971 = x__8148__auto__;
return goog.typeOf(G__17971);
})()]);
if(or__7504__auto__){
return or__7504__auto__;
} else {
var or__7504__auto____$1 = (cljs.core._chunked_next["_"]);
if(or__7504__auto____$1){
return or__7504__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedNext.-chunked-next",coll);
}
}
})().call(null,coll);
}
});


cljs.core.INamed = (function (){var obj17973 = {};
return obj17973;
})();

cljs.core._name = (function _name(x){
if((function (){var and__7492__auto__ = x;
if(and__7492__auto__){
return x.cljs$core$INamed$_name$arity$1;
} else {
return and__7492__auto__;
}
})()){
return x.cljs$core$INamed$_name$arity$1(x);
} else {
var x__8148__auto__ = (((x == null))?null:x);
return (function (){var or__7504__auto__ = (cljs.core._name[(function (){var G__17977 = x__8148__auto__;
return goog.typeOf(G__17977);
})()]);
if(or__7504__auto__){
return or__7504__auto__;
} else {
var or__7504__auto____$1 = (cljs.core._name["_"]);
if(or__7504__auto____$1){
return or__7504__auto____$1;
} else {
throw cljs.core.missing_protocol("INamed.-name",x);
}
}
})().call(null,x);
}
});

cljs.core._namespace = (function _namespace(x){
if((function (){var and__7492__auto__ = x;
if(and__7492__auto__){
return x.cljs$core$INamed$_namespace$arity$1;
} else {
return and__7492__auto__;
}
})()){
return x.cljs$core$INamed$_namespace$arity$1(x);
} else {
var x__8148__auto__ = (((x == null))?null:x);
return (function (){var or__7504__auto__ = (cljs.core._namespace[(function (){var G__17981 = x__8148__auto__;
return goog.typeOf(G__17981);
})()]);
if(or__7504__auto__){
return or__7504__auto__;
} else {
var or__7504__auto____$1 = (cljs.core._namespace["_"]);
if(or__7504__auto____$1){
return or__7504__auto____$1;
} else {
throw cljs.core.missing_protocol("INamed.-namespace",x);
}
}
})().call(null,x);
}
});


cljs.core.IAtom = (function (){var obj17983 = {};
return obj17983;
})();


cljs.core.IReset = (function (){var obj17985 = {};
return obj17985;
})();

cljs.core._reset_BANG_ = (function _reset_BANG_(o,new_value){
if((function (){var and__7492__auto__ = o;
if(and__7492__auto__){
return o.cljs$core$IReset$_reset_BANG_$arity$2;
} else {
return and__7492__auto__;
}
})()){
return o.cljs$core$IReset$_reset_BANG_$arity$2(o,new_value);
} else {
var x__8148__auto__ = (((o == null))?null:o);
return (function (){var or__7504__auto__ = (cljs.core._reset_BANG_[(function (){var G__17989 = x__8148__auto__;
return goog.typeOf(G__17989);
})()]);
if(or__7504__auto__){
return or__7504__auto__;
} else {
var or__7504__auto____$1 = (cljs.core._reset_BANG_["_"]);
if(or__7504__auto____$1){
return or__7504__auto____$1;
} else {
throw cljs.core.missing_protocol("IReset.-reset!",o);
}
}
})().call(null,o,new_value);
}
});


cljs.core.ISwap = (function (){var obj17991 = {};
return obj17991;
})();

cljs.core._swap_BANG_ = (function() {
var _swap_BANG_ = null;
var _swap_BANG___2 = (function (o,f){
if((function (){var and__7492__auto__ = o;
if(and__7492__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$2;
} else {
return and__7492__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$2(o,f);
} else {
var x__8148__auto__ = (((o == null))?null:o);
return (function (){var or__7504__auto__ = (cljs.core._swap_BANG_[(function (){var G__18001 = x__8148__auto__;
return goog.typeOf(G__18001);
})()]);
if(or__7504__auto__){
return or__7504__auto__;
} else {
var or__7504__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__7504__auto____$1){
return or__7504__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f);
}
});
var _swap_BANG___3 = (function (o,f,a){
if((function (){var and__7492__auto__ = o;
if(and__7492__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$3;
} else {
return and__7492__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$3(o,f,a);
} else {
var x__8148__auto__ = (((o == null))?null:o);
return (function (){var or__7504__auto__ = (cljs.core._swap_BANG_[(function (){var G__18003 = x__8148__auto__;
return goog.typeOf(G__18003);
})()]);
if(or__7504__auto__){
return or__7504__auto__;
} else {
var or__7504__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__7504__auto____$1){
return or__7504__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a);
}
});
var _swap_BANG___4 = (function (o,f,a,b){
if((function (){var and__7492__auto__ = o;
if(and__7492__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$4;
} else {
return and__7492__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$4(o,f,a,b);
} else {
var x__8148__auto__ = (((o == null))?null:o);
return (function (){var or__7504__auto__ = (cljs.core._swap_BANG_[(function (){var G__18005 = x__8148__auto__;
return goog.typeOf(G__18005);
})()]);
if(or__7504__auto__){
return or__7504__auto__;
} else {
var or__7504__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__7504__auto____$1){
return or__7504__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a,b);
}
});
var _swap_BANG___5 = (function (o,f,a,b,xs){
if((function (){var and__7492__auto__ = o;
if(and__7492__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$5;
} else {
return and__7492__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$5(o,f,a,b,xs);
} else {
var x__8148__auto__ = (((o == null))?null:o);
return (function (){var or__7504__auto__ = (cljs.core._swap_BANG_[(function (){var G__18007 = x__8148__auto__;
return goog.typeOf(G__18007);
})()]);
if(or__7504__auto__){
return or__7504__auto__;
} else {
var or__7504__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__7504__auto____$1){
return or__7504__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a,b,xs);
}
});
_swap_BANG_ = function(o,f,a,b,xs){
switch(arguments.length){
case 2:
return _swap_BANG___2.call(this,o,f);
case 3:
return _swap_BANG___3.call(this,o,f,a);
case 4:
return _swap_BANG___4.call(this,o,f,a,b);
case 5:
return _swap_BANG___5.call(this,o,f,a,b,xs);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_swap_BANG_.cljs$core$IFn$_invoke$arity$2 = _swap_BANG___2;
_swap_BANG_.cljs$core$IFn$_invoke$arity$3 = _swap_BANG___3;
_swap_BANG_.cljs$core$IFn$_invoke$arity$4 = _swap_BANG___4;
_swap_BANG_.cljs$core$IFn$_invoke$arity$5 = _swap_BANG___5;
return _swap_BANG_;
})()
;


cljs.core.IVolatile = (function (){var obj18009 = {};
return obj18009;
})();

cljs.core._vreset_BANG_ = (function _vreset_BANG_(o,new_value){
if((function (){var and__7492__auto__ = o;
if(and__7492__auto__){
return o.cljs$core$IVolatile$_vreset_BANG_$arity$2;
} else {
return and__7492__auto__;
}
})()){
return o.cljs$core$IVolatile$_vreset_BANG_$arity$2(o,new_value);
} else {
var x__8148__auto__ = (((o == null))?null:o);
return (function (){var or__7504__auto__ = (cljs.core._vreset_BANG_[(function (){var G__18013 = x__8148__auto__;
return goog.typeOf(G__18013);
})()]);
if(or__7504__auto__){
return or__7504__auto__;
} else {
var or__7504__auto____$1 = (cljs.core._vreset_BANG_["_"]);
if(or__7504__auto____$1){
return or__7504__auto____$1;
} else {
throw cljs.core.missing_protocol("IVolatile.-vreset!",o);
}
}
})().call(null,o,new_value);
}
});


cljs.core.IIterable = (function (){var obj18015 = {};
return obj18015;
})();

cljs.core._iterator = (function _iterator(coll){
if((function (){var and__7492__auto__ = coll;
if(and__7492__auto__){
return coll.cljs$core$IIterable$_iterator$arity$1;
} else {
return and__7492__auto__;
}
})()){
return coll.cljs$core$IIterable$_iterator$arity$1(coll);
} else {
var x__8148__auto__ = (((coll == null))?null:coll);
return (function (){var or__7504__auto__ = (cljs.core._iterator[(function (){var G__18019 = x__8148__auto__;
return goog.typeOf(G__18019);
})()]);
if(or__7504__auto__){
return or__7504__auto__;
} else {
var or__7504__auto____$1 = (cljs.core._iterator["_"]);
if(or__7504__auto____$1){
return or__7504__auto____$1;
} else {
throw cljs.core.missing_protocol("IIterable.-iterator",coll);
}
}
})().call(null,coll);
}
});


/**
* @constructor
*/
cljs.core.StringBufferWriter = (function (sb){
this.sb = sb;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 1073741824;
})
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_write$arity$2 = (function (_,s){
var self__ = this;
var ___$1 = this;
return self__.sb.append(s);
});

cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_flush$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return null;
});

cljs.core.StringBufferWriter.cljs$lang$type = true;

cljs.core.StringBufferWriter.cljs$lang$ctorStr = "cljs.core/StringBufferWriter";

cljs.core.StringBufferWriter.cljs$lang$ctorPrWriter = (function (this__8091__auto__,writer__8092__auto__,opt__8093__auto__){
return cljs.core._write(writer__8092__auto__,"cljs.core/StringBufferWriter");
});

cljs.core.__GT_StringBufferWriter = (function __GT_StringBufferWriter(sb){
return (new cljs.core.StringBufferWriter(sb));
});

/**
* Support so that collections can implement toString without
* loading all the printing machinery.
*/
cljs.core.pr_str_STAR_ = (function pr_str_STAR_(obj){
var sb = (new goog.string.StringBuffer());
var writer = (new cljs.core.StringBufferWriter(sb));
obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null,writer,cljs.core.pr_opts());

writer.cljs$core$IWriter$_flush$arity$1(null);

return [cljs.core.str(sb)].join('');
});
cljs.core.int_rotate_left = (function int_rotate_left(x,n){
return ((x << n) | (x >>> (- n)));
});
if((typeof Math.imul !== 'undefined') && (!(((function (){var G__18022 = (4294967295);
var G__18023 = (5);
return (Math.imul.cljs$core$IFn$_invoke$arity$2 ? Math.imul.cljs$core$IFn$_invoke$arity$2(G__18022,G__18023) : Math.imul.call(null,G__18022,G__18023));
})() === (0))))){
cljs.core.imul = (function imul(a,b){
var G__18026 = a;
var G__18027 = b;
return (Math.imul.cljs$core$IFn$_invoke$arity$2 ? Math.imul.cljs$core$IFn$_invoke$arity$2(G__18026,G__18027) : Math.imul.call(null,G__18026,G__18027));
});
} else {
cljs.core.imul = (function imul(a,b){
var ah = ((a >>> (16)) & (65535));
var al = (a & (65535));
var bh = ((b >>> (16)) & (65535));
var bl = (b & (65535));
return (((al * bl) + ((((ah * bl) + (al * bh)) << (16)) >>> (0))) | (0));
});
}
cljs.core.m3_seed = (0);
cljs.core.m3_C1 = (3432918353);
cljs.core.m3_C2 = (461845907);
cljs.core.m3_mix_K1 = (function m3_mix_K1(k1){
return cljs.core.imul(cljs.core.int_rotate_left(cljs.core.imul(k1,cljs.core.m3_C1),(15)),cljs.core.m3_C2);
});
cljs.core.m3_mix_H1 = (function m3_mix_H1(h1,k1){
return (cljs.core.imul(cljs.core.int_rotate_left((h1 ^ k1),(13)),(5)) + (3864292196));
});
cljs.core.m3_fmix = (function m3_fmix(h1,len){
var h1__$1 = h1;
var h1__$2 = (h1__$1 ^ len);
var h1__$3 = (h1__$2 ^ (h1__$2 >>> (16)));
var h1__$4 = cljs.core.imul(h1__$3,(2246822507));
var h1__$5 = (h1__$4 ^ (h1__$4 >>> (13)));
var h1__$6 = cljs.core.imul(h1__$5,(3266489909));
var h1__$7 = (h1__$6 ^ (h1__$6 >>> (16)));
return h1__$7;
});
cljs.core.m3_hash_int = (function m3_hash_int(in$){
if((in$ === (0))){
return in$;
} else {
var k1 = cljs.core.m3_mix_K1(in$);
var h1 = cljs.core.m3_mix_H1(cljs.core.m3_seed,k1);
return cljs.core.m3_fmix(h1,(4));
}
});
cljs.core.m3_hash_unencoded_chars = (function m3_hash_unencoded_chars(in$){
var h1 = (function (){var i = (1);
var h1 = cljs.core.m3_seed;
while(true){
if((i < in$.length)){
var G__18028 = (i + (2));
var G__18029 = cljs.core.m3_mix_H1(h1,cljs.core.m3_mix_K1((in$.charCodeAt((i - (1))) | (in$.charCodeAt(i) << (16)))));
i = G__18028;
h1 = G__18029;
continue;
} else {
return h1;
}
break;
}
})();
var h1__$1 = ((((in$.length & (1)) === (1)))?(h1 ^ cljs.core.m3_mix_K1(in$.charCodeAt((in$.length - (1))))):h1);
return cljs.core.m3_fmix(h1__$1,cljs.core.imul((2),in$.length));
});



cljs.core.string_hash_cache = (function (){var obj18031 = {};
return obj18031;
})();
cljs.core.string_hash_cache_count = (0);
cljs.core.hash_string_STAR_ = (function hash_string_STAR_(s){
if(!((s == null))){
var len = s.length;
if((len > (0))){
var i = (0);
var hash = (0);
while(true){
if((i < len)){
var G__18032 = (i + (1));
var G__18033 = (cljs.core.imul((31),hash) + s.charCodeAt(i));
i = G__18032;
hash = G__18033;
continue;
} else {
return hash;
}
break;
}
} else {
return (0);
}
} else {
return (0);
}
});
cljs.core.add_to_string_hash_cache = (function add_to_string_hash_cache(k){
var h = cljs.core.hash_string_STAR_(k);
(cljs.core.string_hash_cache[k] = h);

cljs.core.string_hash_cache_count = (cljs.core.string_hash_cache_count + (1));

return h;
});
cljs.core.hash_string = (function hash_string(k){
if((cljs.core.string_hash_cache_count > (255))){
cljs.core.string_hash_cache = (function (){var obj18037 = {};
return obj18037;
})();

cljs.core.string_hash_cache_count = (0);
} else {
}

var h = (cljs.core.string_hash_cache[k]);
if(typeof h === 'number'){
return h;
} else {
return cljs.core.add_to_string_hash_cache(k);
}
});
cljs.core.hash = (function hash(o){
if((function (){var G__18040 = o;
if(G__18040){
var bit__8178__auto__ = (G__18040.cljs$lang$protocol_mask$partition0$ & (4194304));
if((bit__8178__auto__) || (G__18040.cljs$core$IHash$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$IHash$_hash$arity$1(null);
} else {
if(typeof o === 'number'){
return ((function (){var G__18041 = o;
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__18041) : Math.floor.call(null,G__18041));
})() % (2147483647));
} else {
if(o === true){
return (1);
} else {
if(o === false){
return (0);
} else {
if(typeof o === 'string'){
return cljs.core.m3_hash_int(cljs.core.hash_string(o));
} else {
if((o instanceof Date)){
return o.valueOf();
} else {
if((o == null)){
return (0);
} else {
return cljs.core._hash(o);

}
}
}
}
}
}
}
});
cljs.core.hash_combine = (function hash_combine(seed,hash){
return (seed ^ (((hash + (2654435769)) + (seed << (6))) + (seed >> (2))));
});
cljs.core.instance_QMARK_ = (function instance_QMARK_(t,o){
return (o instanceof t);
});
cljs.core.symbol_QMARK_ = (function symbol_QMARK_(x){
return (x instanceof cljs.core.Symbol);
});
cljs.core.hash_symbol = (function hash_symbol(sym){
return cljs.core.hash_combine(cljs.core.m3_hash_unencoded_chars(sym.name),cljs.core.hash_string(sym.ns));
});
cljs.core.compare_symbols = (function compare_symbols(a,b){
if((a.str === b.str)){
return (0);
} else {
if(cljs.core.truth_((function (){var and__7492__auto__ = cljs.core.not(a.ns);
if(and__7492__auto__){
return b.ns;
} else {
return and__7492__auto__;
}
})())){
return (-1);
} else {
if(cljs.core.truth_(a.ns)){
if(cljs.core.not(b.ns)){
return (1);
} else {
var nsc = (function (){var G__18048 = a.ns;
var G__18049 = b.ns;
return goog.array.defaultCompare(G__18048,G__18049);
})();
if(((0) === nsc)){
var G__18050 = a.name;
var G__18051 = b.name;
return goog.array.defaultCompare(G__18050,G__18051);
} else {
return nsc;
}
}
} else {
var G__18052 = a.name;
var G__18053 = b.name;
return goog.array.defaultCompare(G__18052,G__18053);

}
}
}
});

/**
* @constructor
*/
cljs.core.Symbol = (function (ns,name,str,_hash,_meta){
this.ns = ns;
this.name = name;
this.str = str;
this._hash = _hash;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition0$ = 2154168321;
this.cljs$lang$protocol_mask$partition1$ = 4096;
})
cljs.core.Symbol.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (o,writer,_){
var self__ = this;
var o__$1 = this;
return cljs.core._write(writer,self__.str);
});

cljs.core.Symbol.prototype.cljs$core$INamed$_name$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.name;
});

cljs.core.Symbol.prototype.cljs$core$INamed$_namespace$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.ns;
});

cljs.core.Symbol.prototype.cljs$core$IHash$_hash$arity$1 = (function (sym){
var self__ = this;
var sym__$1 = this;
var h__7925__auto__ = self__._hash;
if(!((h__7925__auto__ == null))){
return h__7925__auto__;
} else {
var h__7925__auto____$1 = cljs.core.hash_symbol(sym__$1);
self__._hash = h__7925__auto____$1;

return h__7925__auto____$1;
}
});

cljs.core.Symbol.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_,new_meta){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Symbol(self__.ns,self__.name,self__.str,self__._hash,new_meta));
});

cljs.core.Symbol.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__._meta;
});

cljs.core.Symbol.prototype.call = (function() {
var G__18055 = null;
var G__18055__2 = (function (self__,coll){
var self__ = this;
var self____$1 = this;
var sym = self____$1;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,null);
});
var G__18055__3 = (function (self__,coll,not_found){
var self__ = this;
var self____$1 = this;
var sym = self____$1;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,not_found);
});
G__18055 = function(self__,coll,not_found){
switch(arguments.length){
case 2:
return G__18055__2.call(this,self__,coll);
case 3:
return G__18055__3.call(this,self__,coll,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__18055.cljs$core$IFn$_invoke$arity$2 = G__18055__2;
G__18055.cljs$core$IFn$_invoke$arity$3 = G__18055__3;
return G__18055;
})()
;

cljs.core.Symbol.prototype.apply = (function (self__,args18054){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args18054)));
});

cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$1 = (function (coll){
var self__ = this;
var sym = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,null);
});

cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$2 = (function (coll,not_found){
var self__ = this;
var sym = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,not_found);
});

cljs.core.Symbol.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
if((other instanceof cljs.core.Symbol)){
return (self__.str === other.str);
} else {
return false;
}
});

cljs.core.Symbol.prototype.toString = (function (){
var self__ = this;
var _ = this;
return self__.str;
});

cljs.core.Symbol.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Symbol.cljs$lang$type = true;

cljs.core.Symbol.cljs$lang$ctorStr = "cljs.core/Symbol";

cljs.core.Symbol.cljs$lang$ctorPrWriter = (function (this__8091__auto__,writer__8092__auto__,opt__8093__auto__){
return cljs.core._write(writer__8092__auto__,"cljs.core/Symbol");
});

cljs.core.__GT_Symbol = (function __GT_Symbol(ns,name,str,_hash,_meta){
return (new cljs.core.Symbol(ns,name,str,_hash,_meta));
});

cljs.core.symbol = (function() {
var symbol = null;
var symbol__1 = (function (name){
if((name instanceof cljs.core.Symbol)){
return name;
} else {
return symbol.cljs$core$IFn$_invoke$arity$2(null,name);
}
});
var symbol__2 = (function (ns,name){
var sym_str = ((!((ns == null)))?[cljs.core.str(ns),cljs.core.str("/"),cljs.core.str(name)].join(''):name);
return (new cljs.core.Symbol(ns,name,sym_str,null,null));
});
symbol = function(ns,name){
switch(arguments.length){
case 1:
return symbol__1.call(this,ns);
case 2:
return symbol__2.call(this,ns,name);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
symbol.cljs$core$IFn$_invoke$arity$1 = symbol__1;
symbol.cljs$core$IFn$_invoke$arity$2 = symbol__2;
return symbol;
})()
;

/**
* @constructor
*/
cljs.core.Var = (function (val,sym,_meta){
this.val = val;
this.sym = sym;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 163841;
})
cljs.core.Var.prototype.call = (function() {
var G__18103 = null;
var G__18103__1 = (function (self__){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null);
});
var G__18103__2 = (function (self__,a){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a);
});
var G__18103__3 = (function (self__,a,b){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b);
});
var G__18103__4 = (function (self__,a,b,c){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c);
});
var G__18103__5 = (function (self__,a,b,c,d){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d);
});
var G__18103__6 = (function (self__,a,b,c,d,e){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e);
});
var G__18103__7 = (function (self__,a,b,c,d,e,f){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f);
});
var G__18103__8 = (function (self__,a,b,c,d,e,f,g){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g);
});
var G__18103__9 = (function (self__,a,b,c,d,e,f,g,h){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h);
});
var G__18103__10 = (function (self__,a,b,c,d,e,f,g,h,i){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i);
});
var G__18103__11 = (function (self__,a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j);
});
var G__18103__12 = (function (self__,a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k);
});
var G__18103__13 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l);
});
var G__18103__14 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m);
});
var G__18103__15 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
});
var G__18103__16 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
});
var G__18103__17 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
});
var G__18103__18 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
});
var G__18103__19 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
});
var G__18103__20 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
});
var G__18103__21 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
});
var G__18103__22 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__18059 = (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})();
var G__18060 = a;
var G__18061 = b;
var G__18062 = c;
var G__18063 = d;
var G__18064 = e;
var G__18065 = f;
var G__18066 = g;
var G__18067 = h;
var G__18068 = i;
var G__18069 = j;
var G__18070 = k;
var G__18071 = l;
var G__18072 = m;
var G__18073 = n;
var G__18074 = o;
var G__18075 = p;
var G__18076 = q;
var G__18077 = r;
var G__18078 = s;
var G__18079 = t;
var G__18080 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__18059,G__18060,G__18061,G__18062,G__18063,G__18064,G__18065,G__18066,G__18067,G__18068,G__18069,G__18070,G__18071,G__18072,G__18073,G__18074,G__18075,G__18076,G__18077,G__18078,G__18079,G__18080) : cljs.core.apply.call(null,G__18059,G__18060,G__18061,G__18062,G__18063,G__18064,G__18065,G__18066,G__18067,G__18068,G__18069,G__18070,G__18071,G__18072,G__18073,G__18074,G__18075,G__18076,G__18077,G__18078,G__18079,G__18080));
});
G__18103 = function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return G__18103__1.call(this,self__);
case 2:
return G__18103__2.call(this,self__,a);
case 3:
return G__18103__3.call(this,self__,a,b);
case 4:
return G__18103__4.call(this,self__,a,b,c);
case 5:
return G__18103__5.call(this,self__,a,b,c,d);
case 6:
return G__18103__6.call(this,self__,a,b,c,d,e);
case 7:
return G__18103__7.call(this,self__,a,b,c,d,e,f);
case 8:
return G__18103__8.call(this,self__,a,b,c,d,e,f,g);
case 9:
return G__18103__9.call(this,self__,a,b,c,d,e,f,g,h);
case 10:
return G__18103__10.call(this,self__,a,b,c,d,e,f,g,h,i);
case 11:
return G__18103__11.call(this,self__,a,b,c,d,e,f,g,h,i,j);
case 12:
return G__18103__12.call(this,self__,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return G__18103__13.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return G__18103__14.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return G__18103__15.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return G__18103__16.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return G__18103__17.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return G__18103__18.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return G__18103__19.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return G__18103__20.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return G__18103__21.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return G__18103__22.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__18103.cljs$core$IFn$_invoke$arity$1 = G__18103__1;
G__18103.cljs$core$IFn$_invoke$arity$2 = G__18103__2;
G__18103.cljs$core$IFn$_invoke$arity$3 = G__18103__3;
G__18103.cljs$core$IFn$_invoke$arity$4 = G__18103__4;
G__18103.cljs$core$IFn$_invoke$arity$5 = G__18103__5;
G__18103.cljs$core$IFn$_invoke$arity$6 = G__18103__6;
G__18103.cljs$core$IFn$_invoke$arity$7 = G__18103__7;
G__18103.cljs$core$IFn$_invoke$arity$8 = G__18103__8;
G__18103.cljs$core$IFn$_invoke$arity$9 = G__18103__9;
G__18103.cljs$core$IFn$_invoke$arity$10 = G__18103__10;
G__18103.cljs$core$IFn$_invoke$arity$11 = G__18103__11;
G__18103.cljs$core$IFn$_invoke$arity$12 = G__18103__12;
G__18103.cljs$core$IFn$_invoke$arity$13 = G__18103__13;
G__18103.cljs$core$IFn$_invoke$arity$14 = G__18103__14;
G__18103.cljs$core$IFn$_invoke$arity$15 = G__18103__15;
G__18103.cljs$core$IFn$_invoke$arity$16 = G__18103__16;
G__18103.cljs$core$IFn$_invoke$arity$17 = G__18103__17;
G__18103.cljs$core$IFn$_invoke$arity$18 = G__18103__18;
G__18103.cljs$core$IFn$_invoke$arity$19 = G__18103__19;
G__18103.cljs$core$IFn$_invoke$arity$20 = G__18103__20;
G__18103.cljs$core$IFn$_invoke$arity$21 = G__18103__21;
G__18103.cljs$core$IFn$_invoke$arity$22 = G__18103__22;
return G__18103;
})()
;

cljs.core.Var.prototype.apply = (function (self__,args18058){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args18058)));
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$1 = (function (a){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$2 = (function (a,b){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$3 = (function (a,b,c){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$4 = (function (a,b,c,d){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$5 = (function (a,b,c,d,e){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$6 = (function (a,b,c,d,e,f){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$7 = (function (a,b,c,d,e,f,g){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$8 = (function (a,b,c,d,e,f,g,h){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$9 = (function (a,b,c,d,e,f,g,h,i){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$10 = (function (a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$11 = (function (a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$12 = (function (a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$13 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$14 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$15 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$16 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$17 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$18 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$19 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$20 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$21 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var _ = this;
var G__18081 = (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})();
var G__18082 = a;
var G__18083 = b;
var G__18084 = c;
var G__18085 = d;
var G__18086 = e;
var G__18087 = f;
var G__18088 = g;
var G__18089 = h;
var G__18090 = i;
var G__18091 = j;
var G__18092 = k;
var G__18093 = l;
var G__18094 = m;
var G__18095 = n;
var G__18096 = o;
var G__18097 = p;
var G__18098 = q;
var G__18099 = r;
var G__18100 = s;
var G__18101 = t;
var G__18102 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__18081,G__18082,G__18083,G__18084,G__18085,G__18086,G__18087,G__18088,G__18089,G__18090,G__18091,G__18092,G__18093,G__18094,G__18095,G__18096,G__18097,G__18098,G__18099,G__18100,G__18101,G__18102) : cljs.core.apply.call(null,G__18081,G__18082,G__18083,G__18084,G__18085,G__18086,G__18087,G__18088,G__18089,G__18090,G__18091,G__18092,G__18093,G__18094,G__18095,G__18096,G__18097,G__18098,G__18099,G__18100,G__18101,G__18102));
});

cljs.core.Var.prototype.cljs$core$Fn$ = true;

cljs.core.Var.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__._meta;
});

cljs.core.Var.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
});

cljs.core.Var.cljs$lang$type = true;

cljs.core.Var.cljs$lang$ctorStr = "cljs.core/Var";

cljs.core.Var.cljs$lang$ctorPrWriter = (function (this__8091__auto__,writer__8092__auto__,opt__8093__auto__){
return cljs.core._write(writer__8092__auto__,"cljs.core/Var");
});

cljs.core.__GT_Var = (function __GT_Var(val,sym,_meta){
return (new cljs.core.Var(val,sym,_meta));
});



cljs.core.iterable_QMARK_ = (function iterable_QMARK_(x){
var G__18105 = x;
if(G__18105){
var bit__8185__auto__ = null;
if(cljs.core.truth_((function (){var or__7504__auto__ = bit__8185__auto__;
if(cljs.core.truth_(or__7504__auto__)){
return or__7504__auto__;
} else {
return G__18105.cljs$core$IIterable$;
}
})())){
return true;
} else {
if((!G__18105.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable,G__18105);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable,G__18105);
}
});
cljs.core.clone = (function clone(value){
return cljs.core._clone(value);
});
cljs.core.cloneable_QMARK_ = (function cloneable_QMARK_(value){
var G__18107 = value;
if(G__18107){
var bit__8185__auto__ = (G__18107.cljs$lang$protocol_mask$partition1$ & (8192));
if((bit__8185__auto__) || (G__18107.cljs$core$ICloneable$)){
return true;
} else {
if((!G__18107.cljs$lang$protocol_mask$partition1$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable,G__18107);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable,G__18107);
}
});
/**
* Returns a seq on the collection. If the collection is
* empty, returns nil.  (seq nil) returns nil. seq also works on
* Strings.
*/
cljs.core.seq = (function seq(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__18109 = coll;
if(G__18109){
var bit__8178__auto__ = (G__18109.cljs$lang$protocol_mask$partition0$ & (8388608));
if((bit__8178__auto__) || (G__18109.cljs$core$ISeqable$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeqable$_seq$arity$1(null);
} else {
if(coll instanceof Array){
if((coll.length === (0))){
return null;
} else {
return (new cljs.core.IndexedSeq(coll,(0)));
}
} else {
if(typeof coll === 'string'){
if((coll.length === (0))){
return null;
} else {
return (new cljs.core.IndexedSeq(coll,(0)));
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,coll)){
return cljs.core._seq(coll);
} else {
throw (new Error([cljs.core.str(coll),cljs.core.str(" is not ISeqable")].join('')));

}
}
}
}
}
});
/**
* Returns the first item in the collection. Calls seq on its
* argument. If coll is nil, returns nil.
*/
cljs.core.first = (function first(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__18111 = coll;
if(G__18111){
var bit__8178__auto__ = (G__18111.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__8178__auto__) || (G__18111.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeq$_first$arity$1(null);
} else {
var s = cljs.core.seq(coll);
if((s == null)){
return null;
} else {
return cljs.core._first(s);
}
}
}
});
/**
* Returns a possibly empty seq of the items after the first. Calls seq on its
* argument.
*/
cljs.core.rest = (function rest(coll){
if(!((coll == null))){
if((function (){var G__18113 = coll;
if(G__18113){
var bit__8178__auto__ = (G__18113.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__8178__auto__) || (G__18113.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeq$_rest$arity$1(null);
} else {
var s = cljs.core.seq(coll);
if(s){
return cljs.core._rest(s);
} else {
return cljs.core.List.EMPTY;
}
}
} else {
return cljs.core.List.EMPTY;
}
});
/**
* Returns a seq of the items after the first. Calls seq on its
* argument.  If there are no more items, returns nil
*/
cljs.core.next = (function next(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__18115 = coll;
if(G__18115){
var bit__8178__auto__ = (G__18115.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__8178__auto__) || (G__18115.cljs$core$INext$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$INext$_next$arity$1(null);
} else {
return cljs.core.seq(cljs.core.rest(coll));
}
}
});
/**
* Equality. Returns true if x equals y, false if not. Compares
* numbers and collections in a type-independent manner.  Clojure's immutable data
* structures define -equiv (and thus =) as a value, not an identity,
* comparison.
* @param {...*} var_args
*/
cljs.core._EQ_ = (function() {
var _EQ_ = null;
var _EQ___1 = (function (x){
return true;
});
var _EQ___2 = (function (x,y){
if((x == null)){
return (y == null);
} else {
return ((x === y)) || (cljs.core._equiv(x,y));
}
});
var _EQ___3 = (function() { 
var G__18120__delegate = function (x,y,more){
while(true){
if(_EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
if(cljs.core.next(more)){
var G__18121 = y;
var G__18122 = cljs.core.first(more);
var G__18123 = cljs.core.next(more);
x = G__18121;
y = G__18122;
more = G__18123;
continue;
} else {
return _EQ_.cljs$core$IFn$_invoke$arity$2(y,cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__18120 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__18124__i = 0, G__18124__a = new Array(arguments.length -  2);
while (G__18124__i < G__18124__a.length) {G__18124__a[G__18124__i] = arguments[G__18124__i + 2]; ++G__18124__i;}
  more = new cljs.core.IndexedSeq(G__18124__a,0);
} 
return G__18120__delegate.call(this,x,y,more);};
G__18120.cljs$lang$maxFixedArity = 2;
G__18120.cljs$lang$applyTo = (function (arglist__18125){
var x = cljs.core.first(arglist__18125);
arglist__18125 = cljs.core.next(arglist__18125);
var y = cljs.core.first(arglist__18125);
var more = cljs.core.rest(arglist__18125);
return G__18120__delegate(x,y,more);
});
G__18120.cljs$core$IFn$_invoke$arity$variadic = G__18120__delegate;
return G__18120;
})()
;
_EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _EQ___1.call(this,x);
case 2:
return _EQ___2.call(this,x,y);
default:
var G__18126 = null;
if (arguments.length > 2) {
var G__18127__i = 0, G__18127__a = new Array(arguments.length -  2);
while (G__18127__i < G__18127__a.length) {G__18127__a[G__18127__i] = arguments[G__18127__i + 2]; ++G__18127__i;}
G__18126 = new cljs.core.IndexedSeq(G__18127__a,0);
}
return _EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__18126);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_EQ_.cljs$lang$maxFixedArity = 2;
_EQ_.cljs$lang$applyTo = _EQ___3.cljs$lang$applyTo;
_EQ_.cljs$core$IFn$_invoke$arity$1 = _EQ___1;
_EQ_.cljs$core$IFn$_invoke$arity$2 = _EQ___2;
_EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _EQ_;
})()
;

/**
* @constructor
*/
cljs.core.ES6Iterator = (function (s){
this.s = s;
})
cljs.core.ES6Iterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var x = cljs.core.first(self__.s);
self__.s = cljs.core.next(self__.s);

return {"done": false, "value": x};
} else {
return {"done": true, "value": null};
}
});

cljs.core.ES6Iterator.cljs$lang$type = true;

cljs.core.ES6Iterator.cljs$lang$ctorStr = "cljs.core/ES6Iterator";

cljs.core.ES6Iterator.cljs$lang$ctorPrWriter = (function (this__8091__auto__,writer__8092__auto__,opt__8093__auto__){
return cljs.core._write(writer__8092__auto__,"cljs.core/ES6Iterator");
});

cljs.core.__GT_ES6Iterator = (function __GT_ES6Iterator(s){
return (new cljs.core.ES6Iterator(s));
});

cljs.core.es6_iterator = (function es6_iterator(coll){
return (new cljs.core.ES6Iterator(cljs.core.seq(coll)));
});

/**
* @constructor
*/
cljs.core.ES6IteratorSeq = (function (value,iter,_rest){
this.value = value;
this.iter = iter;
this._rest = _rest;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 8388672;
})
cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.value;
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if((self__._rest == null)){
self__._rest = (function (){var G__18128 = self__.iter;
return (cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1(G__18128) : cljs.core.es6_iterator_seq.call(null,G__18128));
})();
} else {
}

return self__._rest;
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.ES6IteratorSeq.cljs$lang$type = true;

cljs.core.ES6IteratorSeq.cljs$lang$ctorStr = "cljs.core/ES6IteratorSeq";

cljs.core.ES6IteratorSeq.cljs$lang$ctorPrWriter = (function (this__8091__auto__,writer__8092__auto__,opt__8093__auto__){
return cljs.core._write(writer__8092__auto__,"cljs.core/ES6IteratorSeq");
});

cljs.core.__GT_ES6IteratorSeq = (function __GT_ES6IteratorSeq(value,iter,_rest){
return (new cljs.core.ES6IteratorSeq(value,iter,_rest));
});

cljs.core.es6_iterator_seq = (function es6_iterator_seq(iter){
var v = iter.next();
if(cljs.core.truth_(v.done)){
return cljs.core.List.EMPTY;
} else {
return (new cljs.core.ES6IteratorSeq(v.value,iter,null));
}
});
/**
* Mix final collection hash for ordered or unordered collections.
* hash-basis is the combined collection hash, count is the number
* of elements included in the basis. Note this is the hash code
* consistent with =, different from .hashCode.
* See http://clojure.org/data_structures#hash for full algorithms.
*/
cljs.core.mix_collection_hash = (function mix_collection_hash(hash_basis,count){
var h1 = cljs.core.m3_seed;
var k1 = cljs.core.m3_mix_K1(hash_basis);
var h1__$1 = cljs.core.m3_mix_H1(h1,k1);
return cljs.core.m3_fmix(h1__$1,count);
});
/**
* Returns the hash code, consistent with =, for an external ordered
* collection implementing Iterable.
* See http://clojure.org/data_structures#hash for full algorithms.
*/
cljs.core.hash_ordered_coll = (function hash_ordered_coll(coll){
var n = (0);
var hash_code = (1);
var coll__$1 = cljs.core.seq(coll);
while(true){
if(!((coll__$1 == null))){
var G__18129 = (n + (1));
var G__18130 = ((cljs.core.imul((31),hash_code) + cljs.core.hash(cljs.core.first(coll__$1))) | (0));
var G__18131 = cljs.core.next(coll__$1);
n = G__18129;
hash_code = G__18130;
coll__$1 = G__18131;
continue;
} else {
return cljs.core.mix_collection_hash(hash_code,n);
}
break;
}
});
cljs.core.empty_ordered_hash = cljs.core.mix_collection_hash((1),(0));
/**
* Returns the hash code, consistent with =, for an external unordered
* collection implementing Iterable. For maps, the iterator should
* return map entries whose hash is computed as
* (hash-ordered-coll [k v]).
* See http://clojure.org/data_structures#hash for full algorithms.
*/
cljs.core.hash_unordered_coll = (function hash_unordered_coll(coll){
var n = (0);
var hash_code = (0);
var coll__$1 = cljs.core.seq(coll);
while(true){
if(!((coll__$1 == null))){
var G__18132 = (n + (1));
var G__18133 = ((hash_code + cljs.core.hash(cljs.core.first(coll__$1))) | (0));
var G__18134 = cljs.core.next(coll__$1);
n = G__18132;
hash_code = G__18133;
coll__$1 = G__18134;
continue;
} else {
return cljs.core.mix_collection_hash(hash_code,n);
}
break;
}
});
cljs.core.empty_unordered_hash = cljs.core.mix_collection_hash((0),(0));


(cljs.core.ICounted["null"] = true);

(cljs.core._count["null"] = (function (_){
return (0);
}));
Date.prototype.cljs$core$IEquiv$ = true;

Date.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var o__$1 = this;
return ((other instanceof Date)) && ((o__$1.toString() === other.toString()));
});
(cljs.core.IEquiv["number"] = true);

(cljs.core._equiv["number"] = (function (x,o){
return (x === o);
}));
(cljs.core.IMeta["function"] = true);

(cljs.core._meta["function"] = (function (_){
return null;
}));

(cljs.core.Fn["function"] = true);
(cljs.core.IHash["_"] = true);

(cljs.core._hash["_"] = (function (o){
var G__18135 = o;
return goog.getUid(G__18135);
}));
/**
* Returns a number one greater than num.
*/
cljs.core.inc = (function inc(x){
return (x + (1));
});

/**
* @constructor
*/
cljs.core.Reduced = (function (val){
this.val = val;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32768;
})
cljs.core.Reduced.prototype.cljs$core$IDeref$_deref$arity$1 = (function (o){
var self__ = this;
var o__$1 = this;
return self__.val;
});

cljs.core.Reduced.cljs$lang$type = true;

cljs.core.Reduced.cljs$lang$ctorStr = "cljs.core/Reduced";

cljs.core.Reduced.cljs$lang$ctorPrWriter = (function (this__8091__auto__,writer__8092__auto__,opt__8093__auto__){
return cljs.core._write(writer__8092__auto__,"cljs.core/Reduced");
});

cljs.core.__GT_Reduced = (function __GT_Reduced(val){
return (new cljs.core.Reduced(val));
});

/**
* Wraps x in a way such that a reduce will terminate with the value x
*/
cljs.core.reduced = (function reduced(x){
return (new cljs.core.Reduced(x));
});
/**
* Returns true if x is the result of a call to reduced
*/
cljs.core.reduced_QMARK_ = (function reduced_QMARK_(r){
return (r instanceof cljs.core.Reduced);
});
/**
* If x is already reduced?, returns it, else returns (reduced x)
*/
cljs.core.ensure_reduced = (function ensure_reduced(x){
if(cljs.core.reduced_QMARK_(x)){
return x;
} else {
return cljs.core.reduced(x);
}
});
/**
* If x is reduced?, returns (deref x), else returns x
*/
cljs.core.unreduced = (function unreduced(x){
if(cljs.core.reduced_QMARK_(x)){
var G__18137 = x;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__18137) : cljs.core.deref.call(null,G__18137));
} else {
return x;
}
});
cljs.core.deref = (function deref(o){
return cljs.core._deref(o);
});
/**
* Accepts any collection which satisfies the ICount and IIndexed protocols and
* reduces them without incurring seq initialization
*/
cljs.core.ci_reduce = (function() {
var ci_reduce = null;
var ci_reduce__2 = (function (cicoll,f){
var cnt = cljs.core._count(cicoll);
if((cnt === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var val = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,(0));
var n = (1);
while(true){
if((n < cnt)){
var nval = (function (){var G__18144 = val;
var G__18145 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__18144,G__18145) : f.call(null,G__18144,G__18145));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__18150 = nval;
var G__18151 = (n + (1));
val = G__18150;
n = G__18151;
continue;
}
} else {
return val;
}
break;
}
}
});
var ci_reduce__3 = (function (cicoll,f,val){
var cnt = cljs.core._count(cicoll);
var val__$1 = val;
var n = (0);
while(true){
if((n < cnt)){
var nval = (function (){var G__18146 = val__$1;
var G__18147 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__18146,G__18147) : f.call(null,G__18146,G__18147));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__18152 = nval;
var G__18153 = (n + (1));
val__$1 = G__18152;
n = G__18153;
continue;
}
} else {
return val__$1;
}
break;
}
});
var ci_reduce__4 = (function (cicoll,f,val,idx){
var cnt = cljs.core._count(cicoll);
var val__$1 = val;
var n = idx;
while(true){
if((n < cnt)){
var nval = (function (){var G__18148 = val__$1;
var G__18149 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__18148,G__18149) : f.call(null,G__18148,G__18149));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__18154 = nval;
var G__18155 = (n + (1));
val__$1 = G__18154;
n = G__18155;
continue;
}
} else {
return val__$1;
}
break;
}
});
ci_reduce = function(cicoll,f,val,idx){
switch(arguments.length){
case 2:
return ci_reduce__2.call(this,cicoll,f);
case 3:
return ci_reduce__3.call(this,cicoll,f,val);
case 4:
return ci_reduce__4.call(this,cicoll,f,val,idx);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ci_reduce.cljs$core$IFn$_invoke$arity$2 = ci_reduce__2;
ci_reduce.cljs$core$IFn$_invoke$arity$3 = ci_reduce__3;
ci_reduce.cljs$core$IFn$_invoke$arity$4 = ci_reduce__4;
return ci_reduce;
})()
;
cljs.core.array_reduce = (function() {
var array_reduce = null;
var array_reduce__2 = (function (arr,f){
var cnt = arr.length;
if((arr.length === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var val = (arr[(0)]);
var n = (1);
while(true){
if((n < cnt)){
var nval = (function (){var G__18162 = val;
var G__18163 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__18162,G__18163) : f.call(null,G__18162,G__18163));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__18168 = nval;
var G__18169 = (n + (1));
val = G__18168;
n = G__18169;
continue;
}
} else {
return val;
}
break;
}
}
});
var array_reduce__3 = (function (arr,f,val){
var cnt = arr.length;
var val__$1 = val;
var n = (0);
while(true){
if((n < cnt)){
var nval = (function (){var G__18164 = val__$1;
var G__18165 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__18164,G__18165) : f.call(null,G__18164,G__18165));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__18170 = nval;
var G__18171 = (n + (1));
val__$1 = G__18170;
n = G__18171;
continue;
}
} else {
return val__$1;
}
break;
}
});
var array_reduce__4 = (function (arr,f,val,idx){
var cnt = arr.length;
var val__$1 = val;
var n = idx;
while(true){
if((n < cnt)){
var nval = (function (){var G__18166 = val__$1;
var G__18167 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__18166,G__18167) : f.call(null,G__18166,G__18167));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__18172 = nval;
var G__18173 = (n + (1));
val__$1 = G__18172;
n = G__18173;
continue;
}
} else {
return val__$1;
}
break;
}
});
array_reduce = function(arr,f,val,idx){
switch(arguments.length){
case 2:
return array_reduce__2.call(this,arr,f);
case 3:
return array_reduce__3.call(this,arr,f,val);
case 4:
return array_reduce__4.call(this,arr,f,val,idx);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
array_reduce.cljs$core$IFn$_invoke$arity$2 = array_reduce__2;
array_reduce.cljs$core$IFn$_invoke$arity$3 = array_reduce__3;
array_reduce.cljs$core$IFn$_invoke$arity$4 = array_reduce__4;
return array_reduce;
})()
;



/**
* Returns true if coll implements count in constant time
*/
cljs.core.counted_QMARK_ = (function counted_QMARK_(x){
var G__18175 = x;
if(G__18175){
var bit__8185__auto__ = (G__18175.cljs$lang$protocol_mask$partition0$ & (2));
if((bit__8185__auto__) || (G__18175.cljs$core$ICounted$)){
return true;
} else {
if((!G__18175.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,G__18175);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,G__18175);
}
});
/**
* Returns true if coll implements nth in constant time
*/
cljs.core.indexed_QMARK_ = (function indexed_QMARK_(x){
var G__18177 = x;
if(G__18177){
var bit__8185__auto__ = (G__18177.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__8185__auto__) || (G__18177.cljs$core$IIndexed$)){
return true;
} else {
if((!G__18177.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,G__18177);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,G__18177);
}
});

/**
* @constructor
*/
cljs.core.IndexedSeqIterator = (function (arr,i){
this.arr = arr;
this.i = i;
})
cljs.core.IndexedSeqIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.arr.length);
});

cljs.core.IndexedSeqIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = (self__.arr[self__.i]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.IndexedSeqIterator.cljs$lang$type = true;

cljs.core.IndexedSeqIterator.cljs$lang$ctorStr = "cljs.core/IndexedSeqIterator";

cljs.core.IndexedSeqIterator.cljs$lang$ctorPrWriter = (function (this__8091__auto__,writer__8092__auto__,opt__8093__auto__){
return cljs.core._write(writer__8092__auto__,"cljs.core/IndexedSeqIterator");
});

cljs.core.__GT_IndexedSeqIterator = (function __GT_IndexedSeqIterator(arr,i){
return (new cljs.core.IndexedSeqIterator(arr,i));
});


/**
* @constructor
*/
cljs.core.IndexedSeq = (function (arr,i){
this.arr = arr;
this.i = i;
this.cljs$lang$protocol_mask$partition0$ = 166199550;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.IndexedSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.IndexedSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
var i__$1 = (n + self__.i);
if((i__$1 < self__.arr.length)){
return (self__.arr[i__$1]);
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
var i__$1 = (n + self__.i);
if((i__$1 < self__.arr.length)){
return (self__.arr[i__$1]);
} else {
return not_found;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IIterable$ = true;

cljs.core.IndexedSeq.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.IndexedSeqIterator(self__.arr,self__.i));
});

cljs.core.IndexedSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.IndexedSeq(self__.arr,self__.i));
});

cljs.core.IndexedSeq.prototype.cljs$core$INext$_next$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(((self__.i + (1)) < self__.arr.length)){
return (new cljs.core.IndexedSeq(self__.arr,(self__.i + (1))));
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.arr.length - self__.i);
});

cljs.core.IndexedSeq.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var c = cljs.core._count(coll__$1);
if((c > (0))){
return (new cljs.core.RSeq(coll__$1,(c - (1)),null));
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.IndexedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
var G__18178 = coll__$1;
var G__18179 = other;
return (cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(G__18178,G__18179) : cljs.core.equiv_sequential.call(null,G__18178,G__18179));
});

cljs.core.IndexedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,(self__.arr[self__.i]),(self__.i + (1)));
});

cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,start,self__.i);
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.arr[self__.i]);
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(((self__.i + (1)) < self__.arr.length)){
return (new cljs.core.IndexedSeq(self__.arr,(self__.i + (1))));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.IndexedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__18180 = o;
var G__18181 = coll__$1;
return (cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(G__18180,G__18181) : cljs.core.cons.call(null,G__18180,G__18181));
});

cljs.core.IndexedSeq.cljs$lang$type = true;

cljs.core.IndexedSeq.cljs$lang$ctorStr = "cljs.core/IndexedSeq";

cljs.core.IndexedSeq.cljs$lang$ctorPrWriter = (function (this__8091__auto__,writer__8092__auto__,opt__8093__auto__){
return cljs.core._write(writer__8092__auto__,"cljs.core/IndexedSeq");
});

cljs.core.__GT_IndexedSeq = (function __GT_IndexedSeq(arr,i){
return (new cljs.core.IndexedSeq(arr,i));
});

(cljs.core.IndexedSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__8482__auto__ = this;
return cljs.core.es6_iterator(this__8482__auto__);
}));
cljs.core.prim_seq = (function() {
var prim_seq = null;
var prim_seq__1 = (function (prim){
return prim_seq.cljs$core$IFn$_invoke$arity$2(prim,(0));
});
var prim_seq__2 = (function (prim,i){
if((i < prim.length)){
return (new cljs.core.IndexedSeq(prim,i));
} else {
return null;
}
});
prim_seq = function(prim,i){
switch(arguments.length){
case 1:
return prim_seq__1.call(this,prim);
case 2:
return prim_seq__2.call(this,prim,i);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
prim_seq.cljs$core$IFn$_invoke$arity$1 = prim_seq__1;
prim_seq.cljs$core$IFn$_invoke$arity$2 = prim_seq__2;
return prim_seq;
})()
;
cljs.core.array_seq = (function() {
var array_seq = null;
var array_seq__1 = (function (array){
return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array,(0));
});
var array_seq__2 = (function (array,i){
return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array,i);
});
array_seq = function(array,i){
switch(arguments.length){
case 1:
return array_seq__1.call(this,array);
case 2:
return array_seq__2.call(this,array,i);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
array_seq.cljs$core$IFn$_invoke$arity$1 = array_seq__1;
array_seq.cljs$core$IFn$_invoke$arity$2 = array_seq__2;
return array_seq;
})()
;


/**
* @constructor
*/
cljs.core.RSeq = (function (ci,i,meta){
this.ci = ci;
this.i = i;
this.meta = meta;
this.cljs$lang$protocol_mask$partition0$ = 32374990;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.RSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.RSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.RSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.RSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.RSeq(self__.ci,self__.i,self__.meta));
});

cljs.core.RSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i > (0))){
return (new cljs.core.RSeq(self__.ci,(self__.i - (1)),null));
} else {
return null;
}
});

cljs.core.RSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.i + (1));
});

cljs.core.RSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.RSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
var G__18184 = coll__$1;
var G__18185 = other;
return (cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(G__18184,G__18185) : cljs.core.equiv_sequential.call(null,G__18184,G__18185));
});

cljs.core.RSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var G__18186 = cljs.core.List.EMPTY;
var G__18187 = self__.meta;
return (cljs.core.with_meta.cljs$core$IFn$_invoke$arity$2 ? cljs.core.with_meta.cljs$core$IFn$_invoke$arity$2(G__18186,G__18187) : cljs.core.with_meta.call(null,G__18186,G__18187));
});

cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (col,f){
var self__ = this;
var col__$1 = this;
var G__18188 = f;
var G__18189 = col__$1;
return (cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(G__18188,G__18189) : cljs.core.seq_reduce.call(null,G__18188,G__18189));
});

cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (col,f,start){
var self__ = this;
var col__$1 = this;
var G__18190 = f;
var G__18191 = start;
var G__18192 = col__$1;
return (cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(G__18190,G__18191,G__18192) : cljs.core.seq_reduce.call(null,G__18190,G__18191,G__18192));
});

cljs.core.RSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.ci,self__.i);
});

cljs.core.RSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i > (0))){
return (new cljs.core.RSeq(self__.ci,(self__.i - (1)),null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.RSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.RSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.RSeq(self__.ci,self__.i,new_meta));
});

cljs.core.RSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__18193 = o;
var G__18194 = coll__$1;
return (cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(G__18193,G__18194) : cljs.core.cons.call(null,G__18193,G__18194));
});

cljs.core.RSeq.cljs$lang$type = true;

cljs.core.RSeq.cljs$lang$ctorStr = "cljs.core/RSeq";

cljs.core.RSeq.cljs$lang$ctorPrWriter = (function (this__8091__auto__,writer__8092__auto__,opt__8093__auto__){
return cljs.core._write(writer__8092__auto__,"cljs.core/RSeq");
});

cljs.core.__GT_RSeq = (function __GT_RSeq(ci,i,meta){
return (new cljs.core.RSeq(ci,i,meta));
});

(cljs.core.RSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__8482__auto__ = this;
return cljs.core.es6_iterator(this__8482__auto__);
}));
/**
* Same as (first (next x))
*/
cljs.core.second = (function second(coll){
return cljs.core.first(cljs.core.next(coll));
});
/**
* Same as (first (first x))
*/
cljs.core.ffirst = (function ffirst(coll){
return cljs.core.first(cljs.core.first(coll));
});
/**
* Same as (next (first x))
*/
cljs.core.nfirst = (function nfirst(coll){
return cljs.core.next(cljs.core.first(coll));
});
/**
* Same as (first (next x))
*/
cljs.core.fnext = (function fnext(coll){
return cljs.core.first(cljs.core.next(coll));
});
/**
* Same as (next (next x))
*/
cljs.core.nnext = (function nnext(coll){
return cljs.core.next(cljs.core.next(coll));
});
/**
* Return the last item in coll, in linear time
*/
cljs.core.last = (function last(s){
while(true){
var sn = cljs.core.next(s);
if(!((sn == null))){
var G__18195 = sn;
s = G__18195;
continue;
} else {
return cljs.core.first(s);
}
break;
}
});
(cljs.core.IEquiv["_"] = true);

(cljs.core._equiv["_"] = (function (x,o){
return (x === o);
}));
/**
* conj[oin]. Returns a new collection with the xs
* 'added'. (conj nil item) returns (item).  The 'addition' may
* happen at different 'places' depending on the concrete type.
* @param {...*} var_args
*/
cljs.core.conj = (function() {
var conj = null;
var conj__0 = (function (){
return cljs.core.PersistentVector.EMPTY;
});
var conj__1 = (function (coll){
return coll;
});
var conj__2 = (function (coll,x){
if(!((coll == null))){
return cljs.core._conj(coll,x);
} else {
return cljs.core._conj(cljs.core.List.EMPTY,x);
}
});
var conj__3 = (function() { 
var G__18200__delegate = function (coll,x,xs){
while(true){
if(cljs.core.truth_(xs)){
var G__18201 = conj.cljs$core$IFn$_invoke$arity$2(coll,x);
var G__18202 = cljs.core.first(xs);
var G__18203 = cljs.core.next(xs);
coll = G__18201;
x = G__18202;
xs = G__18203;
continue;
} else {
return conj.cljs$core$IFn$_invoke$arity$2(coll,x);
}
break;
}
};
var G__18200 = function (coll,x,var_args){
var xs = null;
if (arguments.length > 2) {
var G__18204__i = 0, G__18204__a = new Array(arguments.length -  2);
while (G__18204__i < G__18204__a.length) {G__18204__a[G__18204__i] = arguments[G__18204__i + 2]; ++G__18204__i;}
  xs = new cljs.core.IndexedSeq(G__18204__a,0);
} 
return G__18200__delegate.call(this,coll,x,xs);};
G__18200.cljs$lang$maxFixedArity = 2;
G__18200.cljs$lang$applyTo = (function (arglist__18205){
var coll = cljs.core.first(arglist__18205);
arglist__18205 = cljs.core.next(arglist__18205);
var x = cljs.core.first(arglist__18205);
var xs = cljs.core.rest(arglist__18205);
return G__18200__delegate(coll,x,xs);
});
G__18200.cljs$core$IFn$_invoke$arity$variadic = G__18200__delegate;
return G__18200;
})()
;
conj = function(coll,x,var_args){
var xs = var_args;
switch(arguments.length){
case 0:
return conj__0.call(this);
case 1:
return conj__1.call(this,coll);
case 2:
return conj__2.call(this,coll,x);
default:
var G__18206 = null;
if (arguments.length > 2) {
var G__18207__i = 0, G__18207__a = new Array(arguments.length -  2);
while (G__18207__i < G__18207__a.length) {G__18207__a[G__18207__i] = arguments[G__18207__i + 2]; ++G__18207__i;}
G__18206 = new cljs.core.IndexedSeq(G__18207__a,0);
}
return conj__3.cljs$core$IFn$_invoke$arity$variadic(coll,x, G__18206);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
conj.cljs$lang$maxFixedArity = 2;
conj.cljs$lang$applyTo = conj__3.cljs$lang$applyTo;
conj.cljs$core$IFn$_invoke$arity$0 = conj__0;
conj.cljs$core$IFn$_invoke$arity$1 = conj__1;
conj.cljs$core$IFn$_invoke$arity$2 = conj__2;
conj.cljs$core$IFn$_invoke$arity$variadic = conj__3.cljs$core$IFn$_invoke$arity$variadic;
return conj;
})()
;
/**
* Returns an empty collection of the same category as coll, or nil
*/
cljs.core.empty = (function empty(coll){
if((coll == null)){
return null;
} else {
return cljs.core._empty(coll);
}
});
cljs.core.accumulating_seq_count = (function accumulating_seq_count(coll){
var s = cljs.core.seq(coll);
var acc = (0);
while(true){
if(cljs.core.counted_QMARK_(s)){
return (acc + cljs.core._count(s));
} else {
var G__18208 = cljs.core.next(s);
var G__18209 = (acc + (1));
s = G__18208;
acc = G__18209;
continue;
}
break;
}
});
/**
* Returns the number of items in the collection. (count nil) returns
* 0.  Also works on strings, arrays, and Maps
*/
cljs.core.count = (function count(coll){
if(!((coll == null))){
if((function (){var G__18211 = coll;
if(G__18211){
var bit__8178__auto__ = (G__18211.cljs$lang$protocol_mask$partition0$ & (2));
if((bit__8178__auto__) || (G__18211.cljs$core$ICounted$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ICounted$_count$arity$1(null);
} else {
if(coll instanceof Array){
return coll.length;
} else {
if(typeof coll === 'string'){
return coll.length;
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,coll)){
return cljs.core._count(coll);
} else {
return cljs.core.accumulating_seq_count(coll);

}
}
}
}
} else {
return (0);
}
});
cljs.core.linear_traversal_nth = (function() {
var linear_traversal_nth = null;
var linear_traversal_nth__2 = (function (coll,n){
while(true){
if((coll == null)){
throw (new Error("Index out of bounds"));
} else {
if((n === (0))){
if(cljs.core.seq(coll)){
return cljs.core.first(coll);
} else {
throw (new Error("Index out of bounds"));
}
} else {
if(cljs.core.indexed_QMARK_(coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if(cljs.core.seq(coll)){
var G__18212 = cljs.core.next(coll);
var G__18213 = (n - (1));
coll = G__18212;
n = G__18213;
continue;
} else {
throw (new Error("Index out of bounds"));

}
}
}
}
break;
}
});
var linear_traversal_nth__3 = (function (coll,n,not_found){
while(true){
if((coll == null)){
return not_found;
} else {
if((n === (0))){
if(cljs.core.seq(coll)){
return cljs.core.first(coll);
} else {
return not_found;
}
} else {
if(cljs.core.indexed_QMARK_(coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll,n,not_found);
} else {
if(cljs.core.seq(coll)){
var G__18214 = cljs.core.next(coll);
var G__18215 = (n - (1));
var G__18216 = not_found;
coll = G__18214;
n = G__18215;
not_found = G__18216;
continue;
} else {
return not_found;

}
}
}
}
break;
}
});
linear_traversal_nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return linear_traversal_nth__2.call(this,coll,n);
case 3:
return linear_traversal_nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
linear_traversal_nth.cljs$core$IFn$_invoke$arity$2 = linear_traversal_nth__2;
linear_traversal_nth.cljs$core$IFn$_invoke$arity$3 = linear_traversal_nth__3;
return linear_traversal_nth;
})()
;
/**
* Returns the value at the index. get returns nil if index out of
* bounds, nth throws an exception unless not-found is supplied.  nth
* also works for strings, arrays, regex Matchers and Lists, and,
* in O(n) time, for sequences.
*/
cljs.core.nth = (function() {
var nth = null;
var nth__2 = (function (coll,n){
if(!(typeof n === 'number')){
throw (new Error("index argument to nth must be a number"));
} else {
if((coll == null)){
return coll;
} else {
if((function (){var G__18221 = coll;
if(G__18221){
var bit__8178__auto__ = (G__18221.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__8178__auto__) || (G__18221.cljs$core$IIndexed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$2(null,n);
} else {
if(coll instanceof Array){
if((n < coll.length)){
return (coll[n]);
} else {
return null;
}
} else {
if(typeof coll === 'string'){
if((n < coll.length)){
return (coll[n]);
} else {
return null;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if((function (){var G__18222 = coll;
if(G__18222){
var bit__8185__auto__ = (G__18222.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__8185__auto__) || (G__18222.cljs$core$ISeq$)){
return true;
} else {
if((!G__18222.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__18222);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__18222);
}
})()){
return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
throw (new Error([cljs.core.str("nth not supported on this type "),cljs.core.str(cljs.core.type__GT_str(cljs.core.type(coll)))].join('')));

}
}
}
}
}
}
}
});
var nth__3 = (function (coll,n,not_found){
if(!(typeof n === 'number')){
throw (new Error("index argument to nth must be a number."));
} else {
if((coll == null)){
return not_found;
} else {
if((function (){var G__18223 = coll;
if(G__18223){
var bit__8178__auto__ = (G__18223.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__8178__auto__) || (G__18223.cljs$core$IIndexed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$3(null,n,not_found);
} else {
if(coll instanceof Array){
if((n < coll.length)){
return (coll[n]);
} else {
return not_found;
}
} else {
if(typeof coll === 'string'){
if((n < coll.length)){
return (coll[n]);
} else {
return not_found;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if((function (){var G__18224 = coll;
if(G__18224){
var bit__8185__auto__ = (G__18224.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__8185__auto__) || (G__18224.cljs$core$ISeq$)){
return true;
} else {
if((!G__18224.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__18224);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__18224);
}
})()){
return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$3(coll,n,not_found);
} else {
throw (new Error([cljs.core.str("nth not supported on this type "),cljs.core.str(cljs.core.type__GT_str(cljs.core.type(coll)))].join('')));

}
}
}
}
}
}
}
});
nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return nth__2.call(this,coll,n);
case 3:
return nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
nth.cljs$core$IFn$_invoke$arity$2 = nth__2;
nth.cljs$core$IFn$_invoke$arity$3 = nth__3;
return nth;
})()
;
/**
* Returns the nth rest of coll, coll when n is 0.
*/
cljs.core.nthrest = (function nthrest(coll,n){
var n__$1 = n;
var xs = coll;
while(true){
if(((n__$1 > (0))) && (cljs.core.seq(xs))){
var G__18225 = (n__$1 - (1));
var G__18226 = cljs.core.rest(xs);
n__$1 = G__18225;
xs = G__18226;
continue;
} else {
return xs;
}
break;
}
});
/**
* Returns the value mapped to key, not-found or nil if key not present.
*/
cljs.core.get = (function() {
var get = null;
var get__2 = (function (o,k){
if((o == null)){
return null;
} else {
if((function (){var G__18229 = o;
if(G__18229){
var bit__8178__auto__ = (G__18229.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__8178__auto__) || (G__18229.cljs$core$ILookup$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$2(null,k);
} else {
if(o instanceof Array){
if((k < o.length)){
return (o[k]);
} else {
return null;
}
} else {
if(typeof o === 'string'){
if((k < o.length)){
return (o[k]);
} else {
return null;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,o)){
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$2(o,k);
} else {
return null;

}
}
}
}
}
});
var get__3 = (function (o,k,not_found){
if(!((o == null))){
if((function (){var G__18230 = o;
if(G__18230){
var bit__8178__auto__ = (G__18230.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__8178__auto__) || (G__18230.cljs$core$ILookup$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
} else {
if(o instanceof Array){
if((k < o.length)){
return (o[k]);
} else {
return not_found;
}
} else {
if(typeof o === 'string'){
if((k < o.length)){
return (o[k]);
} else {
return not_found;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,o)){
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(o,k,not_found);
} else {
return not_found;

}
}
}
}
} else {
return not_found;
}
});
get = function(o,k,not_found){
switch(arguments.length){
case 2:
return get__2.call(this,o,k);
case 3:
return get__3.call(this,o,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
get.cljs$core$IFn$_invoke$arity$2 = get__2;
get.cljs$core$IFn$_invoke$arity$3 = get__3;
return get;
})()
;
/**
* assoc[iate]. When applied to a map, returns a new map of the
* same (hashed/sorted) type, that contains the mapping of key(s) to
* val(s). When applied to a vector, returns a new vector that
* contains val at index.
* @param {...*} var_args
*/
cljs.core.assoc = (function() {
var assoc = null;
var assoc__3 = (function (coll,k,v){
if(!((coll == null))){
return cljs.core._assoc(coll,k,v);
} else {
return cljs.core.PersistentHashMap.fromArrays([k],[v]);
}
});
var assoc__4 = (function() { 
var G__18234__delegate = function (coll,k,v,kvs){
while(true){
var ret = assoc.cljs$core$IFn$_invoke$arity$3(coll,k,v);
if(cljs.core.truth_(kvs)){
var G__18235 = ret;
var G__18236 = cljs.core.first(kvs);
var G__18237 = cljs.core.second(kvs);
var G__18238 = cljs.core.nnext(kvs);
coll = G__18235;
k = G__18236;
v = G__18237;
kvs = G__18238;
continue;
} else {
return ret;
}
break;
}
};
var G__18234 = function (coll,k,v,var_args){
var kvs = null;
if (arguments.length > 3) {
var G__18239__i = 0, G__18239__a = new Array(arguments.length -  3);
while (G__18239__i < G__18239__a.length) {G__18239__a[G__18239__i] = arguments[G__18239__i + 3]; ++G__18239__i;}
  kvs = new cljs.core.IndexedSeq(G__18239__a,0);
} 
return G__18234__delegate.call(this,coll,k,v,kvs);};
G__18234.cljs$lang$maxFixedArity = 3;
G__18234.cljs$lang$applyTo = (function (arglist__18240){
var coll = cljs.core.first(arglist__18240);
arglist__18240 = cljs.core.next(arglist__18240);
var k = cljs.core.first(arglist__18240);
arglist__18240 = cljs.core.next(arglist__18240);
var v = cljs.core.first(arglist__18240);
var kvs = cljs.core.rest(arglist__18240);
return G__18234__delegate(coll,k,v,kvs);
});
G__18234.cljs$core$IFn$_invoke$arity$variadic = G__18234__delegate;
return G__18234;
})()
;
assoc = function(coll,k,v,var_args){
var kvs = var_args;
switch(arguments.length){
case 3:
return assoc__3.call(this,coll,k,v);
default:
var G__18241 = null;
if (arguments.length > 3) {
var G__18242__i = 0, G__18242__a = new Array(arguments.length -  3);
while (G__18242__i < G__18242__a.length) {G__18242__a[G__18242__i] = arguments[G__18242__i + 3]; ++G__18242__i;}
G__18241 = new cljs.core.IndexedSeq(G__18242__a,0);
}
return assoc__4.cljs$core$IFn$_invoke$arity$variadic(coll,k,v, G__18241);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
assoc.cljs$lang$maxFixedArity = 3;
assoc.cljs$lang$applyTo = assoc__4.cljs$lang$applyTo;
assoc.cljs$core$IFn$_invoke$arity$3 = assoc__3;
assoc.cljs$core$IFn$_invoke$arity$variadic = assoc__4.cljs$core$IFn$_invoke$arity$variadic;
return assoc;
})()
;
/**
* dissoc[iate]. Returns a new map of the same (hashed/sorted) type,
* that does not contain a mapping for key(s).
* @param {...*} var_args
*/
cljs.core.dissoc = (function() {
var dissoc = null;
var dissoc__1 = (function (coll){
return coll;
});
var dissoc__2 = (function (coll,k){
if((coll == null)){
return null;
} else {
return cljs.core._dissoc(coll,k);
}
});
var dissoc__3 = (function() { 
var G__18245__delegate = function (coll,k,ks){
while(true){
if((coll == null)){
return null;
} else {
var ret = dissoc.cljs$core$IFn$_invoke$arity$2(coll,k);
if(cljs.core.truth_(ks)){
var G__18246 = ret;
var G__18247 = cljs.core.first(ks);
var G__18248 = cljs.core.next(ks);
coll = G__18246;
k = G__18247;
ks = G__18248;
continue;
} else {
return ret;
}
}
break;
}
};
var G__18245 = function (coll,k,var_args){
var ks = null;
if (arguments.length > 2) {
var G__18249__i = 0, G__18249__a = new Array(arguments.length -  2);
while (G__18249__i < G__18249__a.length) {G__18249__a[G__18249__i] = arguments[G__18249__i + 2]; ++G__18249__i;}
  ks = new cljs.core.IndexedSeq(G__18249__a,0);
} 
return G__18245__delegate.call(this,coll,k,ks);};
G__18245.cljs$lang$maxFixedArity = 2;
G__18245.cljs$lang$applyTo = (function (arglist__18250){
var coll = cljs.core.first(arglist__18250);
arglist__18250 = cljs.core.next(arglist__18250);
var k = cljs.core.first(arglist__18250);
var ks = cljs.core.rest(arglist__18250);
return G__18245__delegate(coll,k,ks);
});
G__18245.cljs$core$IFn$_invoke$arity$variadic = G__18245__delegate;
return G__18245;
})()
;
dissoc = function(coll,k,var_args){
var ks = var_args;
switch(arguments.length){
case 1:
return dissoc__1.call(this,coll);
case 2:
return dissoc__2.call(this,coll,k);
default:
var G__18251 = null;
if (arguments.length > 2) {
var G__18252__i = 0, G__18252__a = new Array(arguments.length -  2);
while (G__18252__i < G__18252__a.length) {G__18252__a[G__18252__i] = arguments[G__18252__i + 2]; ++G__18252__i;}
G__18251 = new cljs.core.IndexedSeq(G__18252__a,0);
}
return dissoc__3.cljs$core$IFn$_invoke$arity$variadic(coll,k, G__18251);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dissoc.cljs$lang$maxFixedArity = 2;
dissoc.cljs$lang$applyTo = dissoc__3.cljs$lang$applyTo;
dissoc.cljs$core$IFn$_invoke$arity$1 = dissoc__1;
dissoc.cljs$core$IFn$_invoke$arity$2 = dissoc__2;
dissoc.cljs$core$IFn$_invoke$arity$variadic = dissoc__3.cljs$core$IFn$_invoke$arity$variadic;
return dissoc;
})()
;
cljs.core.fn_QMARK_ = (function fn_QMARK_(f){
var or__7504__auto__ = (function (){var G__18257 = f;
return goog.isFunction(G__18257);
})();
if(cljs.core.truth_(or__7504__auto__)){
return or__7504__auto__;
} else {
var G__18258 = f;
if(G__18258){
var bit__8185__auto__ = null;
if(cljs.core.truth_((function (){var or__7504__auto____$1 = bit__8185__auto__;
if(cljs.core.truth_(or__7504__auto____$1)){
return or__7504__auto____$1;
} else {
return G__18258.cljs$core$Fn$;
}
})())){
return true;
} else {
if((!G__18258.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.Fn,G__18258);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.Fn,G__18258);
}
}
});

/**
* @constructor
*/
cljs.core.MetaFn = (function (afn,meta){
this.afn = afn;
this.meta = meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 393217;
})
cljs.core.MetaFn.prototype.call = (function() {
var G__18724 = null;
var G__18724__1 = (function (self__){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null));
});
var G__18724__2 = (function (self__,a){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__18260 = a;
return (self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(G__18260) : self__.afn.call(null,G__18260));
});
var G__18724__3 = (function (self__,a,b){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__18261 = a;
var G__18262 = b;
return (self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(G__18261,G__18262) : self__.afn.call(null,G__18261,G__18262));
});
var G__18724__4 = (function (self__,a,b,c){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__18263 = a;
var G__18264 = b;
var G__18265 = c;
return (self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(G__18263,G__18264,G__18265) : self__.afn.call(null,G__18263,G__18264,G__18265));
});
var G__18724__5 = (function (self__,a,b,c,d){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__18266 = a;
var G__18267 = b;
var G__18268 = c;
var G__18269 = d;
return (self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(G__18266,G__18267,G__18268,G__18269) : self__.afn.call(null,G__18266,G__18267,G__18268,G__18269));
});
var G__18724__6 = (function (self__,a,b,c,d,e){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__18270 = a;
var G__18271 = b;
var G__18272 = c;
var G__18273 = d;
var G__18274 = e;
return (self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(G__18270,G__18271,G__18272,G__18273,G__18274) : self__.afn.call(null,G__18270,G__18271,G__18272,G__18273,G__18274));
});
var G__18724__7 = (function (self__,a,b,c,d,e,f){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__18275 = a;
var G__18276 = b;
var G__18277 = c;
var G__18278 = d;
var G__18279 = e;
var G__18280 = f;
return (self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(G__18275,G__18276,G__18277,G__18278,G__18279,G__18280) : self__.afn.call(null,G__18275,G__18276,G__18277,G__18278,G__18279,G__18280));
});
var G__18724__8 = (function (self__,a,b,c,d,e,f,g){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__18281 = a;
var G__18282 = b;
var G__18283 = c;
var G__18284 = d;
var G__18285 = e;
var G__18286 = f;
var G__18287 = g;
return (self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(G__18281,G__18282,G__18283,G__18284,G__18285,G__18286,G__18287) : self__.afn.call(null,G__18281,G__18282,G__18283,G__18284,G__18285,G__18286,G__18287));
});
var G__18724__9 = (function (self__,a,b,c,d,e,f,g,h){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__18288 = a;
var G__18289 = b;
var G__18290 = c;
var G__18291 = d;
var G__18292 = e;
var G__18293 = f;
var G__18294 = g;
var G__18295 = h;
return (self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(G__18288,G__18289,G__18290,G__18291,G__18292,G__18293,G__18294,G__18295) : self__.afn.call(null,G__18288,G__18289,G__18290,G__18291,G__18292,G__18293,G__18294,G__18295));
});
var G__18724__10 = (function (self__,a,b,c,d,e,f,g,h,i){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__18296 = a;
var G__18297 = b;
var G__18298 = c;
var G__18299 = d;
var G__18300 = e;
var G__18301 = f;
var G__18302 = g;
var G__18303 = h;
var G__18304 = i;
return (self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(G__18296,G__18297,G__18298,G__18299,G__18300,G__18301,G__18302,G__18303,G__18304) : self__.afn.call(null,G__18296,G__18297,G__18298,G__18299,G__18300,G__18301,G__18302,G__18303,G__18304));
});
var G__18724__11 = (function (self__,a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__18305 = a;
var G__18306 = b;
var G__18307 = c;
var G__18308 = d;
var G__18309 = e;
var G__18310 = f;
var G__18311 = g;
var G__18312 = h;
var G__18313 = i;
var G__18314 = j;
return (self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(G__18305,G__18306,G__18307,G__18308,G__18309,G__18310,G__18311,G__18312,G__18313,G__18314) : self__.afn.call(null,G__18305,G__18306,G__18307,G__18308,G__18309,G__18310,G__18311,G__18312,G__18313,G__18314));
});
var G__18724__12 = (function (self__,a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__18315 = a;
var G__18316 = b;
var G__18317 = c;
var G__18318 = d;
var G__18319 = e;
var G__18320 = f;
var G__18321 = g;
var G__18322 = h;
var G__18323 = i;
var G__18324 = j;
var G__18325 = k;
return (self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(G__18315,G__18316,G__18317,G__18318,G__18319,G__18320,G__18321,G__18322,G__18323,G__18324,G__18325) : self__.afn.call(null,G__18315,G__18316,G__18317,G__18318,G__18319,G__18320,G__18321,G__18322,G__18323,G__18324,G__18325));
});
var G__18724__13 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__18326 = a;
var G__18327 = b;
var G__18328 = c;
var G__18329 = d;
var G__18330 = e;
var G__18331 = f;
var G__18332 = g;
var G__18333 = h;
var G__18334 = i;
var G__18335 = j;
var G__18336 = k;
var G__18337 = l;
return (self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(G__18326,G__18327,G__18328,G__18329,G__18330,G__18331,G__18332,G__18333,G__18334,G__18335,G__18336,G__18337) : self__.afn.call(null,G__18326,G__18327,G__18328,G__18329,G__18330,G__18331,G__18332,G__18333,G__18334,G__18335,G__18336,G__18337));
});
var G__18724__14 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__18338 = a;
var G__18339 = b;
var G__18340 = c;
var G__18341 = d;
var G__18342 = e;
var G__18343 = f;
var G__18344 = g;
var G__18345 = h;
var G__18346 = i;
var G__18347 = j;
var G__18348 = k;
var G__18349 = l;
var G__18350 = m;
return (self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(G__18338,G__18339,G__18340,G__18341,G__18342,G__18343,G__18344,G__18345,G__18346,G__18347,G__18348,G__18349,G__18350) : self__.afn.call(null,G__18338,G__18339,G__18340,G__18341,G__18342,G__18343,G__18344,G__18345,G__18346,G__18347,G__18348,G__18349,G__18350));
});
var G__18724__15 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__18351 = a;
var G__18352 = b;
var G__18353 = c;
var G__18354 = d;
var G__18355 = e;
var G__18356 = f;
var G__18357 = g;
var G__18358 = h;
var G__18359 = i;
var G__18360 = j;
var G__18361 = k;
var G__18362 = l;
var G__18363 = m;
var G__18364 = n;
return (self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(G__18351,G__18352,G__18353,G__18354,G__18355,G__18356,G__18357,G__18358,G__18359,G__18360,G__18361,G__18362,G__18363,G__18364) : self__.afn.call(null,G__18351,G__18352,G__18353,G__18354,G__18355,G__18356,G__18357,G__18358,G__18359,G__18360,G__18361,G__18362,G__18363,G__18364));
});
var G__18724__16 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__18365 = a;
var G__18366 = b;
var G__18367 = c;
var G__18368 = d;
var G__18369 = e;
var G__18370 = f;
var G__18371 = g;
var G__18372 = h;
var G__18373 = i;
var G__18374 = j;
var G__18375 = k;
var G__18376 = l;
var G__18377 = m;
var G__18378 = n;
var G__18379 = o;
return (self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(G__18365,G__18366,G__18367,G__18368,G__18369,G__18370,G__18371,G__18372,G__18373,G__18374,G__18375,G__18376,G__18377,G__18378,G__18379) : self__.afn.call(null,G__18365,G__18366,G__18367,G__18368,G__18369,G__18370,G__18371,G__18372,G__18373,G__18374,G__18375,G__18376,G__18377,G__18378,G__18379));
});
var G__18724__17 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__18380 = a;
var G__18381 = b;
var G__18382 = c;
var G__18383 = d;
var G__18384 = e;
var G__18385 = f;
var G__18386 = g;
var G__18387 = h;
var G__18388 = i;
var G__18389 = j;
var G__18390 = k;
var G__18391 = l;
var G__18392 = m;
var G__18393 = n;
var G__18394 = o;
var G__18395 = p;
return (self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(G__18380,G__18381,G__18382,G__18383,G__18384,G__18385,G__18386,G__18387,G__18388,G__18389,G__18390,G__18391,G__18392,G__18393,G__18394,G__18395) : self__.afn.call(null,G__18380,G__18381,G__18382,G__18383,G__18384,G__18385,G__18386,G__18387,G__18388,G__18389,G__18390,G__18391,G__18392,G__18393,G__18394,G__18395));
});
var G__18724__18 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__18396 = a;
var G__18397 = b;
var G__18398 = c;
var G__18399 = d;
var G__18400 = e;
var G__18401 = f;
var G__18402 = g;
var G__18403 = h;
var G__18404 = i;
var G__18405 = j;
var G__18406 = k;
var G__18407 = l;
var G__18408 = m;
var G__18409 = n;
var G__18410 = o;
var G__18411 = p;
var G__18412 = q;
return (self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(G__18396,G__18397,G__18398,G__18399,G__18400,G__18401,G__18402,G__18403,G__18404,G__18405,G__18406,G__18407,G__18408,G__18409,G__18410,G__18411,G__18412) : self__.afn.call(null,G__18396,G__18397,G__18398,G__18399,G__18400,G__18401,G__18402,G__18403,G__18404,G__18405,G__18406,G__18407,G__18408,G__18409,G__18410,G__18411,G__18412));
});
var G__18724__19 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__18413 = a;
var G__18414 = b;
var G__18415 = c;
var G__18416 = d;
var G__18417 = e;
var G__18418 = f;
var G__18419 = g;
var G__18420 = h;
var G__18421 = i;
var G__18422 = j;
var G__18423 = k;
var G__18424 = l;
var G__18425 = m;
var G__18426 = n;
var G__18427 = o;
var G__18428 = p;
var G__18429 = q;
var G__18430 = r;
return (self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(G__18413,G__18414,G__18415,G__18416,G__18417,G__18418,G__18419,G__18420,G__18421,G__18422,G__18423,G__18424,G__18425,G__18426,G__18427,G__18428,G__18429,G__18430) : self__.afn.call(null,G__18413,G__18414,G__18415,G__18416,G__18417,G__18418,G__18419,G__18420,G__18421,G__18422,G__18423,G__18424,G__18425,G__18426,G__18427,G__18428,G__18429,G__18430));
});
var G__18724__20 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__18431 = a;
var G__18432 = b;
var G__18433 = c;
var G__18434 = d;
var G__18435 = e;
var G__18436 = f;
var G__18437 = g;
var G__18438 = h;
var G__18439 = i;
var G__18440 = j;
var G__18441 = k;
var G__18442 = l;
var G__18443 = m;
var G__18444 = n;
var G__18445 = o;
var G__18446 = p;
var G__18447 = q;
var G__18448 = r;
var G__18449 = s;
return (self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(G__18431,G__18432,G__18433,G__18434,G__18435,G__18436,G__18437,G__18438,G__18439,G__18440,G__18441,G__18442,G__18443,G__18444,G__18445,G__18446,G__18447,G__18448,G__18449) : self__.afn.call(null,G__18431,G__18432,G__18433,G__18434,G__18435,G__18436,G__18437,G__18438,G__18439,G__18440,G__18441,G__18442,G__18443,G__18444,G__18445,G__18446,G__18447,G__18448,G__18449));
});
var G__18724__21 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__18450 = a;
var G__18451 = b;
var G__18452 = c;
var G__18453 = d;
var G__18454 = e;
var G__18455 = f;
var G__18456 = g;
var G__18457 = h;
var G__18458 = i;
var G__18459 = j;
var G__18460 = k;
var G__18461 = l;
var G__18462 = m;
var G__18463 = n;
var G__18464 = o;
var G__18465 = p;
var G__18466 = q;
var G__18467 = r;
var G__18468 = s;
var G__18469 = t;
return (self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(G__18450,G__18451,G__18452,G__18453,G__18454,G__18455,G__18456,G__18457,G__18458,G__18459,G__18460,G__18461,G__18462,G__18463,G__18464,G__18465,G__18466,G__18467,G__18468,G__18469) : self__.afn.call(null,G__18450,G__18451,G__18452,G__18453,G__18454,G__18455,G__18456,G__18457,G__18458,G__18459,G__18460,G__18461,G__18462,G__18463,G__18464,G__18465,G__18466,G__18467,G__18468,G__18469));
});
var G__18724__22 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__18470 = self__.afn;
var G__18471 = a;
var G__18472 = b;
var G__18473 = c;
var G__18474 = d;
var G__18475 = e;
var G__18476 = f;
var G__18477 = g;
var G__18478 = h;
var G__18479 = i;
var G__18480 = j;
var G__18481 = k;
var G__18482 = l;
var G__18483 = m;
var G__18484 = n;
var G__18485 = o;
var G__18486 = p;
var G__18487 = q;
var G__18488 = r;
var G__18489 = s;
var G__18490 = t;
var G__18491 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__18470,G__18471,G__18472,G__18473,G__18474,G__18475,G__18476,G__18477,G__18478,G__18479,G__18480,G__18481,G__18482,G__18483,G__18484,G__18485,G__18486,G__18487,G__18488,G__18489,G__18490,G__18491) : cljs.core.apply.call(null,G__18470,G__18471,G__18472,G__18473,G__18474,G__18475,G__18476,G__18477,G__18478,G__18479,G__18480,G__18481,G__18482,G__18483,G__18484,G__18485,G__18486,G__18487,G__18488,G__18489,G__18490,G__18491));
});
G__18724 = function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return G__18724__1.call(this,self__);
case 2:
return G__18724__2.call(this,self__,a);
case 3:
return G__18724__3.call(this,self__,a,b);
case 4:
return G__18724__4.call(this,self__,a,b,c);
case 5:
return G__18724__5.call(this,self__,a,b,c,d);
case 6:
return G__18724__6.call(this,self__,a,b,c,d,e);
case 7:
return G__18724__7.call(this,self__,a,b,c,d,e,f);
case 8:
return G__18724__8.call(this,self__,a,b,c,d,e,f,g);
case 9:
return G__18724__9.call(this,self__,a,b,c,d,e,f,g,h);
case 10:
return G__18724__10.call(this,self__,a,b,c,d,e,f,g,h,i);
case 11:
return G__18724__11.call(this,self__,a,b,c,d,e,f,g,h,i,j);
case 12:
return G__18724__12.call(this,self__,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return G__18724__13.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return G__18724__14.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return G__18724__15.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return G__18724__16.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return G__18724__17.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return G__18724__18.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return G__18724__19.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return G__18724__20.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return G__18724__21.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return G__18724__22.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__18724.cljs$core$IFn$_invoke$arity$1 = G__18724__1;
G__18724.cljs$core$IFn$_invoke$arity$2 = G__18724__2;
G__18724.cljs$core$IFn$_invoke$arity$3 = G__18724__3;
G__18724.cljs$core$IFn$_invoke$arity$4 = G__18724__4;
G__18724.cljs$core$IFn$_invoke$arity$5 = G__18724__5;
G__18724.cljs$core$IFn$_invoke$arity$6 = G__18724__6;
G__18724.cljs$core$IFn$_invoke$arity$7 = G__18724__7;
G__18724.cljs$core$IFn$_invoke$arity$8 = G__18724__8;
G__18724.cljs$core$IFn$_invoke$arity$9 = G__18724__9;
G__18724.cljs$core$IFn$_invoke$arity$10 = G__18724__10;
G__18724.cljs$core$IFn$_invoke$arity$11 = G__18724__11;
G__18724.cljs$core$IFn$_invoke$arity$12 = G__18724__12;
G__18724.cljs$core$IFn$_invoke$arity$13 = G__18724__13;
G__18724.cljs$core$IFn$_invoke$arity$14 = G__18724__14;
G__18724.cljs$core$IFn$_invoke$arity$15 = G__18724__15;
G__18724.cljs$core$IFn$_invoke$arity$16 = G__18724__16;
G__18724.cljs$core$IFn$_invoke$arity$17 = G__18724__17;
G__18724.cljs$core$IFn$_invoke$arity$18 = G__18724__18;
G__18724.cljs$core$IFn$_invoke$arity$19 = G__18724__19;
G__18724.cljs$core$IFn$_invoke$arity$20 = G__18724__20;
G__18724.cljs$core$IFn$_invoke$arity$21 = G__18724__21;
G__18724.cljs$core$IFn$_invoke$arity$22 = G__18724__22;
return G__18724;
})()
;

cljs.core.MetaFn.prototype.apply = (function (self__,args18259){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args18259)));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){
var self__ = this;
var _ = this;
return (self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$1 = (function (a){
var self__ = this;
var _ = this;
var G__18492 = a;
return (self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(G__18492) : self__.afn.call(null,G__18492));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$2 = (function (a,b){
var self__ = this;
var _ = this;
var G__18493 = a;
var G__18494 = b;
return (self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(G__18493,G__18494) : self__.afn.call(null,G__18493,G__18494));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$3 = (function (a,b,c){
var self__ = this;
var _ = this;
var G__18495 = a;
var G__18496 = b;
var G__18497 = c;
return (self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(G__18495,G__18496,G__18497) : self__.afn.call(null,G__18495,G__18496,G__18497));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$4 = (function (a,b,c,d){
var self__ = this;
var _ = this;
var G__18498 = a;
var G__18499 = b;
var G__18500 = c;
var G__18501 = d;
return (self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(G__18498,G__18499,G__18500,G__18501) : self__.afn.call(null,G__18498,G__18499,G__18500,G__18501));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$5 = (function (a,b,c,d,e){
var self__ = this;
var _ = this;
var G__18502 = a;
var G__18503 = b;
var G__18504 = c;
var G__18505 = d;
var G__18506 = e;
return (self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(G__18502,G__18503,G__18504,G__18505,G__18506) : self__.afn.call(null,G__18502,G__18503,G__18504,G__18505,G__18506));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$6 = (function (a,b,c,d,e,f){
var self__ = this;
var _ = this;
var G__18507 = a;
var G__18508 = b;
var G__18509 = c;
var G__18510 = d;
var G__18511 = e;
var G__18512 = f;
return (self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(G__18507,G__18508,G__18509,G__18510,G__18511,G__18512) : self__.afn.call(null,G__18507,G__18508,G__18509,G__18510,G__18511,G__18512));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$7 = (function (a,b,c,d,e,f,g){
var self__ = this;
var _ = this;
var G__18513 = a;
var G__18514 = b;
var G__18515 = c;
var G__18516 = d;
var G__18517 = e;
var G__18518 = f;
var G__18519 = g;
return (self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(G__18513,G__18514,G__18515,G__18516,G__18517,G__18518,G__18519) : self__.afn.call(null,G__18513,G__18514,G__18515,G__18516,G__18517,G__18518,G__18519));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$8 = (function (a,b,c,d,e,f,g,h){
var self__ = this;
var _ = this;
var G__18520 = a;
var G__18521 = b;
var G__18522 = c;
var G__18523 = d;
var G__18524 = e;
var G__18525 = f;
var G__18526 = g;
var G__18527 = h;
return (self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(G__18520,G__18521,G__18522,G__18523,G__18524,G__18525,G__18526,G__18527) : self__.afn.call(null,G__18520,G__18521,G__18522,G__18523,G__18524,G__18525,G__18526,G__18527));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$9 = (function (a,b,c,d,e,f,g,h,i){
var self__ = this;
var _ = this;
var G__18528 = a;
var G__18529 = b;
var G__18530 = c;
var G__18531 = d;
var G__18532 = e;
var G__18533 = f;
var G__18534 = g;
var G__18535 = h;
var G__18536 = i;
return (self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(G__18528,G__18529,G__18530,G__18531,G__18532,G__18533,G__18534,G__18535,G__18536) : self__.afn.call(null,G__18528,G__18529,G__18530,G__18531,G__18532,G__18533,G__18534,G__18535,G__18536));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$10 = (function (a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var _ = this;
var G__18537 = a;
var G__18538 = b;
var G__18539 = c;
var G__18540 = d;
var G__18541 = e;
var G__18542 = f;
var G__18543 = g;
var G__18544 = h;
var G__18545 = i;
var G__18546 = j;
return (self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(G__18537,G__18538,G__18539,G__18540,G__18541,G__18542,G__18543,G__18544,G__18545,G__18546) : self__.afn.call(null,G__18537,G__18538,G__18539,G__18540,G__18541,G__18542,G__18543,G__18544,G__18545,G__18546));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$11 = (function (a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var _ = this;
var G__18547 = a;
var G__18548 = b;
var G__18549 = c;
var G__18550 = d;
var G__18551 = e;
var G__18552 = f;
var G__18553 = g;
var G__18554 = h;
var G__18555 = i;
var G__18556 = j;
var G__18557 = k;
return (self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(G__18547,G__18548,G__18549,G__18550,G__18551,G__18552,G__18553,G__18554,G__18555,G__18556,G__18557) : self__.afn.call(null,G__18547,G__18548,G__18549,G__18550,G__18551,G__18552,G__18553,G__18554,G__18555,G__18556,G__18557));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$12 = (function (a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var _ = this;
var G__18558 = a;
var G__18559 = b;
var G__18560 = c;
var G__18561 = d;
var G__18562 = e;
var G__18563 = f;
var G__18564 = g;
var G__18565 = h;
var G__18566 = i;
var G__18567 = j;
var G__18568 = k;
var G__18569 = l;
return (self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(G__18558,G__18559,G__18560,G__18561,G__18562,G__18563,G__18564,G__18565,G__18566,G__18567,G__18568,G__18569) : self__.afn.call(null,G__18558,G__18559,G__18560,G__18561,G__18562,G__18563,G__18564,G__18565,G__18566,G__18567,G__18568,G__18569));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$13 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var _ = this;
var G__18570 = a;
var G__18571 = b;
var G__18572 = c;
var G__18573 = d;
var G__18574 = e;
var G__18575 = f;
var G__18576 = g;
var G__18577 = h;
var G__18578 = i;
var G__18579 = j;
var G__18580 = k;
var G__18581 = l;
var G__18582 = m;
return (self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(G__18570,G__18571,G__18572,G__18573,G__18574,G__18575,G__18576,G__18577,G__18578,G__18579,G__18580,G__18581,G__18582) : self__.afn.call(null,G__18570,G__18571,G__18572,G__18573,G__18574,G__18575,G__18576,G__18577,G__18578,G__18579,G__18580,G__18581,G__18582));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$14 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var _ = this;
var G__18583 = a;
var G__18584 = b;
var G__18585 = c;
var G__18586 = d;
var G__18587 = e;
var G__18588 = f;
var G__18589 = g;
var G__18590 = h;
var G__18591 = i;
var G__18592 = j;
var G__18593 = k;
var G__18594 = l;
var G__18595 = m;
var G__18596 = n;
return (self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(G__18583,G__18584,G__18585,G__18586,G__18587,G__18588,G__18589,G__18590,G__18591,G__18592,G__18593,G__18594,G__18595,G__18596) : self__.afn.call(null,G__18583,G__18584,G__18585,G__18586,G__18587,G__18588,G__18589,G__18590,G__18591,G__18592,G__18593,G__18594,G__18595,G__18596));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$15 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var _ = this;
var G__18597 = a;
var G__18598 = b;
var G__18599 = c;
var G__18600 = d;
var G__18601 = e;
var G__18602 = f;
var G__18603 = g;
var G__18604 = h;
var G__18605 = i;
var G__18606 = j;
var G__18607 = k;
var G__18608 = l;
var G__18609 = m;
var G__18610 = n;
var G__18611 = o;
return (self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(G__18597,G__18598,G__18599,G__18600,G__18601,G__18602,G__18603,G__18604,G__18605,G__18606,G__18607,G__18608,G__18609,G__18610,G__18611) : self__.afn.call(null,G__18597,G__18598,G__18599,G__18600,G__18601,G__18602,G__18603,G__18604,G__18605,G__18606,G__18607,G__18608,G__18609,G__18610,G__18611));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$16 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var _ = this;
var G__18612 = a;
var G__18613 = b;
var G__18614 = c;
var G__18615 = d;
var G__18616 = e;
var G__18617 = f;
var G__18618 = g;
var G__18619 = h;
var G__18620 = i;
var G__18621 = j;
var G__18622 = k;
var G__18623 = l;
var G__18624 = m;
var G__18625 = n;
var G__18626 = o;
var G__18627 = p;
return (self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(G__18612,G__18613,G__18614,G__18615,G__18616,G__18617,G__18618,G__18619,G__18620,G__18621,G__18622,G__18623,G__18624,G__18625,G__18626,G__18627) : self__.afn.call(null,G__18612,G__18613,G__18614,G__18615,G__18616,G__18617,G__18618,G__18619,G__18620,G__18621,G__18622,G__18623,G__18624,G__18625,G__18626,G__18627));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$17 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var _ = this;
var G__18628 = a;
var G__18629 = b;
var G__18630 = c;
var G__18631 = d;
var G__18632 = e;
var G__18633 = f;
var G__18634 = g;
var G__18635 = h;
var G__18636 = i;
var G__18637 = j;
var G__18638 = k;
var G__18639 = l;
var G__18640 = m;
var G__18641 = n;
var G__18642 = o;
var G__18643 = p;
var G__18644 = q;
return (self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(G__18628,G__18629,G__18630,G__18631,G__18632,G__18633,G__18634,G__18635,G__18636,G__18637,G__18638,G__18639,G__18640,G__18641,G__18642,G__18643,G__18644) : self__.afn.call(null,G__18628,G__18629,G__18630,G__18631,G__18632,G__18633,G__18634,G__18635,G__18636,G__18637,G__18638,G__18639,G__18640,G__18641,G__18642,G__18643,G__18644));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$18 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var _ = this;
var G__18645 = a;
var G__18646 = b;
var G__18647 = c;
var G__18648 = d;
var G__18649 = e;
var G__18650 = f;
var G__18651 = g;
var G__18652 = h;
var G__18653 = i;
var G__18654 = j;
var G__18655 = k;
var G__18656 = l;
var G__18657 = m;
var G__18658 = n;
var G__18659 = o;
var G__18660 = p;
var G__18661 = q;
var G__18662 = r;
return (self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(G__18645,G__18646,G__18647,G__18648,G__18649,G__18650,G__18651,G__18652,G__18653,G__18654,G__18655,G__18656,G__18657,G__18658,G__18659,G__18660,G__18661,G__18662) : self__.afn.call(null,G__18645,G__18646,G__18647,G__18648,G__18649,G__18650,G__18651,G__18652,G__18653,G__18654,G__18655,G__18656,G__18657,G__18658,G__18659,G__18660,G__18661,G__18662));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$19 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var _ = this;
var G__18663 = a;
var G__18664 = b;
var G__18665 = c;
var G__18666 = d;
var G__18667 = e;
var G__18668 = f;
var G__18669 = g;
var G__18670 = h;
var G__18671 = i;
var G__18672 = j;
var G__18673 = k;
var G__18674 = l;
var G__18675 = m;
var G__18676 = n;
var G__18677 = o;
var G__18678 = p;
var G__18679 = q;
var G__18680 = r;
var G__18681 = s;
return (self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(G__18663,G__18664,G__18665,G__18666,G__18667,G__18668,G__18669,G__18670,G__18671,G__18672,G__18673,G__18674,G__18675,G__18676,G__18677,G__18678,G__18679,G__18680,G__18681) : self__.afn.call(null,G__18663,G__18664,G__18665,G__18666,G__18667,G__18668,G__18669,G__18670,G__18671,G__18672,G__18673,G__18674,G__18675,G__18676,G__18677,G__18678,G__18679,G__18680,G__18681));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$20 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var _ = this;
var G__18682 = a;
var G__18683 = b;
var G__18684 = c;
var G__18685 = d;
var G__18686 = e;
var G__18687 = f;
var G__18688 = g;
var G__18689 = h;
var G__18690 = i;
var G__18691 = j;
var G__18692 = k;
var G__18693 = l;
var G__18694 = m;
var G__18695 = n;
var G__18696 = o;
var G__18697 = p;
var G__18698 = q;
var G__18699 = r;
var G__18700 = s;
var G__18701 = t;
return (self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(G__18682,G__18683,G__18684,G__18685,G__18686,G__18687,G__18688,G__18689,G__18690,G__18691,G__18692,G__18693,G__18694,G__18695,G__18696,G__18697,G__18698,G__18699,G__18700,G__18701) : self__.afn.call(null,G__18682,G__18683,G__18684,G__18685,G__18686,G__18687,G__18688,G__18689,G__18690,G__18691,G__18692,G__18693,G__18694,G__18695,G__18696,G__18697,G__18698,G__18699,G__18700,G__18701));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$21 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var _ = this;
var G__18702 = self__.afn;
var G__18703 = a;
var G__18704 = b;
var G__18705 = c;
var G__18706 = d;
var G__18707 = e;
var G__18708 = f;
var G__18709 = g;
var G__18710 = h;
var G__18711 = i;
var G__18712 = j;
var G__18713 = k;
var G__18714 = l;
var G__18715 = m;
var G__18716 = n;
var G__18717 = o;
var G__18718 = p;
var G__18719 = q;
var G__18720 = r;
var G__18721 = s;
var G__18722 = t;
var G__18723 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__18702,G__18703,G__18704,G__18705,G__18706,G__18707,G__18708,G__18709,G__18710,G__18711,G__18712,G__18713,G__18714,G__18715,G__18716,G__18717,G__18718,G__18719,G__18720,G__18721,G__18722,G__18723) : cljs.core.apply.call(null,G__18702,G__18703,G__18704,G__18705,G__18706,G__18707,G__18708,G__18709,G__18710,G__18711,G__18712,G__18713,G__18714,G__18715,G__18716,G__18717,G__18718,G__18719,G__18720,G__18721,G__18722,G__18723));
});

cljs.core.MetaFn.prototype.cljs$core$Fn$ = true;

cljs.core.MetaFn.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_,new_meta){
var self__ = this;
var ___$1 = this;
return (new cljs.core.MetaFn(self__.afn,new_meta));
});

cljs.core.MetaFn.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.meta;
});

cljs.core.MetaFn.cljs$lang$type = true;

cljs.core.MetaFn.cljs$lang$ctorStr = "cljs.core/MetaFn";

cljs.core.MetaFn.cljs$lang$ctorPrWriter = (function (this__8091__auto__,writer__8092__auto__,opt__8093__auto__){
return cljs.core._write(writer__8092__auto__,"cljs.core/MetaFn");
});

cljs.core.__GT_MetaFn = (function __GT_MetaFn(afn,meta){
return (new cljs.core.MetaFn(afn,meta));
});

/**
* Returns an object of the same type and value as obj, with
* map m as its metadata.
*/
cljs.core.with_meta = (function with_meta(o,meta){
if((cljs.core.fn_QMARK_(o)) && (!((function (){var G__18728 = o;
if(G__18728){
var bit__8185__auto__ = (G__18728.cljs$lang$protocol_mask$partition0$ & (262144));
if((bit__8185__auto__) || (G__18728.cljs$core$IWithMeta$)){
return true;
} else {
if((!G__18728.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IWithMeta,G__18728);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IWithMeta,G__18728);
}
})()))){
return (new cljs.core.MetaFn(o,meta));
} else {
if((o == null)){
return null;
} else {
return cljs.core._with_meta(o,meta);
}
}
});
/**
* Returns the metadata of obj, returns nil if there is no metadata.
*/
cljs.core.meta = (function meta(o){
if((function (){var and__7492__auto__ = !((o == null));
if(and__7492__auto__){
var G__18732 = o;
if(G__18732){
var bit__8185__auto__ = (G__18732.cljs$lang$protocol_mask$partition0$ & (131072));
if((bit__8185__auto__) || (G__18732.cljs$core$IMeta$)){
return true;
} else {
if((!G__18732.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__18732);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__18732);
}
} else {
return and__7492__auto__;
}
})()){
return cljs.core._meta(o);
} else {
return null;
}
});
/**
* For a list or queue, same as first, for a vector, same as, but much
* more efficient than, last. If the collection is empty, returns nil.
*/
cljs.core.peek = (function peek(coll){
if((coll == null)){
return null;
} else {
return cljs.core._peek(coll);
}
});
/**
* For a list or queue, returns a new list/queue without the first
* item, for a vector, returns a new vector without the last item.
* Note - not the same as next/butlast.
*/
cljs.core.pop = (function pop(coll){
if((coll == null)){
return null;
} else {
return cljs.core._pop(coll);
}
});
/**
* disj[oin]. Returns a new set of the same (hashed/sorted) type, that
* does not contain key(s).
* @param {...*} var_args
*/
cljs.core.disj = (function() {
var disj = null;
var disj__1 = (function (coll){
return coll;
});
var disj__2 = (function (coll,k){
if((coll == null)){
return null;
} else {
return cljs.core._disjoin(coll,k);
}
});
var disj__3 = (function() { 
var G__18735__delegate = function (coll,k,ks){
while(true){
if((coll == null)){
return null;
} else {
var ret = disj.cljs$core$IFn$_invoke$arity$2(coll,k);
if(cljs.core.truth_(ks)){
var G__18736 = ret;
var G__18737 = cljs.core.first(ks);
var G__18738 = cljs.core.next(ks);
coll = G__18736;
k = G__18737;
ks = G__18738;
continue;
} else {
return ret;
}
}
break;
}
};
var G__18735 = function (coll,k,var_args){
var ks = null;
if (arguments.length > 2) {
var G__18739__i = 0, G__18739__a = new Array(arguments.length -  2);
while (G__18739__i < G__18739__a.length) {G__18739__a[G__18739__i] = arguments[G__18739__i + 2]; ++G__18739__i;}
  ks = new cljs.core.IndexedSeq(G__18739__a,0);
} 
return G__18735__delegate.call(this,coll,k,ks);};
G__18735.cljs$lang$maxFixedArity = 2;
G__18735.cljs$lang$applyTo = (function (arglist__18740){
var coll = cljs.core.first(arglist__18740);
arglist__18740 = cljs.core.next(arglist__18740);
var k = cljs.core.first(arglist__18740);
var ks = cljs.core.rest(arglist__18740);
return G__18735__delegate(coll,k,ks);
});
G__18735.cljs$core$IFn$_invoke$arity$variadic = G__18735__delegate;
return G__18735;
})()
;
disj = function(coll,k,var_args){
var ks = var_args;
switch(arguments.length){
case 1:
return disj__1.call(this,coll);
case 2:
return disj__2.call(this,coll,k);
default:
var G__18741 = null;
if (arguments.length > 2) {
var G__18742__i = 0, G__18742__a = new Array(arguments.length -  2);
while (G__18742__i < G__18742__a.length) {G__18742__a[G__18742__i] = arguments[G__18742__i + 2]; ++G__18742__i;}
G__18741 = new cljs.core.IndexedSeq(G__18742__a,0);
}
return disj__3.cljs$core$IFn$_invoke$arity$variadic(coll,k, G__18741);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
disj.cljs$lang$maxFixedArity = 2;
disj.cljs$lang$applyTo = disj__3.cljs$lang$applyTo;
disj.cljs$core$IFn$_invoke$arity$1 = disj__1;
disj.cljs$core$IFn$_invoke$arity$2 = disj__2;
disj.cljs$core$IFn$_invoke$arity$variadic = disj__3.cljs$core$IFn$_invoke$arity$variadic;
return disj;
})()
;
/**
* Returns true if coll has no items - same as (not (seq coll)).
* Please use the idiom (seq x) rather than (not (empty? x))
*/
cljs.core.empty_QMARK_ = (function empty_QMARK_(coll){
return ((coll == null)) || (cljs.core.not(cljs.core.seq(coll)));
});
/**
* Returns true if x satisfies ICollection
*/
cljs.core.coll_QMARK_ = (function coll_QMARK_(x){
if((x == null)){
return false;
} else {
var G__18744 = x;
if(G__18744){
var bit__8185__auto__ = (G__18744.cljs$lang$protocol_mask$partition0$ & (8));
if((bit__8185__auto__) || (G__18744.cljs$core$ICollection$)){
return true;
} else {
if((!G__18744.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection,G__18744);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection,G__18744);
}
}
});
/**
* Returns true if x satisfies ISet
*/
cljs.core.set_QMARK_ = (function set_QMARK_(x){
if((x == null)){
return false;
} else {
var G__18746 = x;
if(G__18746){
var bit__8185__auto__ = (G__18746.cljs$lang$protocol_mask$partition0$ & (4096));
if((bit__8185__auto__) || (G__18746.cljs$core$ISet$)){
return true;
} else {
if((!G__18746.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISet,G__18746);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISet,G__18746);
}
}
});
/**
* Returns true if coll implements Associative
*/
cljs.core.associative_QMARK_ = (function associative_QMARK_(x){
var G__18748 = x;
if(G__18748){
var bit__8185__auto__ = (G__18748.cljs$lang$protocol_mask$partition0$ & (512));
if((bit__8185__auto__) || (G__18748.cljs$core$IAssociative$)){
return true;
} else {
if((!G__18748.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative,G__18748);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative,G__18748);
}
});
/**
* Returns true if coll satisfies ISequential
*/
cljs.core.sequential_QMARK_ = (function sequential_QMARK_(x){
var G__18750 = x;
if(G__18750){
var bit__8185__auto__ = (G__18750.cljs$lang$protocol_mask$partition0$ & (16777216));
if((bit__8185__auto__) || (G__18750.cljs$core$ISequential$)){
return true;
} else {
if((!G__18750.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential,G__18750);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential,G__18750);
}
});
/**
* Returns true if coll satisfies ISorted
*/
cljs.core.sorted_QMARK_ = (function sorted_QMARK_(x){
var G__18752 = x;
if(G__18752){
var bit__8185__auto__ = (G__18752.cljs$lang$protocol_mask$partition0$ & (268435456));
if((bit__8185__auto__) || (G__18752.cljs$core$ISorted$)){
return true;
} else {
if((!G__18752.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted,G__18752);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted,G__18752);
}
});
/**
* Returns true if coll satisfies IReduce
*/
cljs.core.reduceable_QMARK_ = (function reduceable_QMARK_(x){
var G__18754 = x;
if(G__18754){
var bit__8185__auto__ = (G__18754.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__8185__auto__) || (G__18754.cljs$core$IReduce$)){
return true;
} else {
if((!G__18754.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,G__18754);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,G__18754);
}
});
/**
* Return true if x satisfies IMap
*/
cljs.core.map_QMARK_ = (function map_QMARK_(x){
if((x == null)){
return false;
} else {
var G__18756 = x;
if(G__18756){
var bit__8185__auto__ = (G__18756.cljs$lang$protocol_mask$partition0$ & (1024));
if((bit__8185__auto__) || (G__18756.cljs$core$IMap$)){
return true;
} else {
if((!G__18756.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMap,G__18756);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMap,G__18756);
}
}
});
/**
* Return true if x satisfies IVector
*/
cljs.core.vector_QMARK_ = (function vector_QMARK_(x){
var G__18758 = x;
if(G__18758){
var bit__8185__auto__ = (G__18758.cljs$lang$protocol_mask$partition0$ & (16384));
if((bit__8185__auto__) || (G__18758.cljs$core$IVector$)){
return true;
} else {
if((!G__18758.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IVector,G__18758);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IVector,G__18758);
}
});

cljs.core.chunked_seq_QMARK_ = (function chunked_seq_QMARK_(x){
var G__18760 = x;
if(G__18760){
var bit__8178__auto__ = (G__18760.cljs$lang$protocol_mask$partition1$ & (512));
if((bit__8178__auto__) || (G__18760.cljs$core$IChunkedSeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
});
/**
* @param {...*} var_args
*/
cljs.core.js_obj = (function() {
var js_obj = null;
var js_obj__0 = (function (){
var obj18766 = {};
return obj18766;
});
var js_obj__1 = (function() { 
var G__18769__delegate = function (keyvals){
var G__18767 = goog.object.create;
var G__18768 = keyvals;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$2 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(G__18767,G__18768) : cljs.core.apply.call(null,G__18767,G__18768));
};
var G__18769 = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__18770__i = 0, G__18770__a = new Array(arguments.length -  0);
while (G__18770__i < G__18770__a.length) {G__18770__a[G__18770__i] = arguments[G__18770__i + 0]; ++G__18770__i;}
  keyvals = new cljs.core.IndexedSeq(G__18770__a,0);
} 
return G__18769__delegate.call(this,keyvals);};
G__18769.cljs$lang$maxFixedArity = 0;
G__18769.cljs$lang$applyTo = (function (arglist__18771){
var keyvals = cljs.core.seq(arglist__18771);
return G__18769__delegate(keyvals);
});
G__18769.cljs$core$IFn$_invoke$arity$variadic = G__18769__delegate;
return G__18769;
})()
;
js_obj = function(var_args){
var keyvals = var_args;
switch(arguments.length){
case 0:
return js_obj__0.call(this);
default:
var G__18772 = null;
if (arguments.length > 0) {
var G__18773__i = 0, G__18773__a = new Array(arguments.length -  0);
while (G__18773__i < G__18773__a.length) {G__18773__a[G__18773__i] = arguments[G__18773__i + 0]; ++G__18773__i;}
G__18772 = new cljs.core.IndexedSeq(G__18773__a,0);
}
return js_obj__1.cljs$core$IFn$_invoke$arity$variadic(G__18772);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
js_obj.cljs$lang$maxFixedArity = 0;
js_obj.cljs$lang$applyTo = js_obj__1.cljs$lang$applyTo;
js_obj.cljs$core$IFn$_invoke$arity$0 = js_obj__0;
js_obj.cljs$core$IFn$_invoke$arity$variadic = js_obj__1.cljs$core$IFn$_invoke$arity$variadic;
return js_obj;
})()
;
cljs.core.js_keys = (function js_keys(obj){
var keys = [];
var G__18776_18778 = obj;
var G__18777_18779 = ((function (G__18776_18778,keys){
return (function (val,key,obj__$1){
return keys.push(key);
});})(G__18776_18778,keys))
;
goog.object.forEach(G__18776_18778,G__18777_18779);

return keys;
});
cljs.core.js_delete = (function js_delete(obj,key){
return delete obj[key];
});
cljs.core.array_copy = (function array_copy(from,i,to,j,len){
var i__$1 = i;
var j__$1 = j;
var len__$1 = len;
while(true){
if((len__$1 === (0))){
return to;
} else {
(to[j__$1] = (from[i__$1]));

var G__18780 = (i__$1 + (1));
var G__18781 = (j__$1 + (1));
var G__18782 = (len__$1 - (1));
i__$1 = G__18780;
j__$1 = G__18781;
len__$1 = G__18782;
continue;
}
break;
}
});
cljs.core.array_copy_downward = (function array_copy_downward(from,i,to,j,len){
var i__$1 = (i + (len - (1)));
var j__$1 = (j + (len - (1)));
var len__$1 = len;
while(true){
if((len__$1 === (0))){
return to;
} else {
(to[j__$1] = (from[i__$1]));

var G__18783 = (i__$1 - (1));
var G__18784 = (j__$1 - (1));
var G__18785 = (len__$1 - (1));
i__$1 = G__18783;
j__$1 = G__18784;
len__$1 = G__18785;
continue;
}
break;
}
});
cljs.core.lookup_sentinel = (function (){var obj18787 = {};
return obj18787;
})();
/**
* Returns true if x is the value false, false otherwise.
*/
cljs.core.false_QMARK_ = (function false_QMARK_(x){
return x === false;
});
/**
* Returns true if x is the value true, false otherwise.
*/
cljs.core.true_QMARK_ = (function true_QMARK_(x){
return x === true;
});
cljs.core.undefined_QMARK_ = (function undefined_QMARK_(x){
return (void 0 === x);
});
/**
* Return true if s satisfies ISeq
*/
cljs.core.seq_QMARK_ = (function seq_QMARK_(s){
if((s == null)){
return false;
} else {
var G__18789 = s;
if(G__18789){
var bit__8185__auto__ = (G__18789.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__8185__auto__) || (G__18789.cljs$core$ISeq$)){
return true;
} else {
if((!G__18789.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__18789);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__18789);
}
}
});
/**
* Return true if s satisfies ISeqable
*/
cljs.core.seqable_QMARK_ = (function seqable_QMARK_(s){
var G__18791 = s;
if(G__18791){
var bit__8185__auto__ = (G__18791.cljs$lang$protocol_mask$partition0$ & (8388608));
if((bit__8185__auto__) || (G__18791.cljs$core$ISeqable$)){
return true;
} else {
if((!G__18791.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,G__18791);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,G__18791);
}
});
cljs.core.boolean$ = (function boolean$(x){
if(cljs.core.truth_(x)){
return true;
} else {
return false;
}
});
cljs.core.ifn_QMARK_ = (function ifn_QMARK_(f){
var or__7504__auto__ = cljs.core.fn_QMARK_(f);
if(or__7504__auto__){
return or__7504__auto__;
} else {
var G__18795 = f;
if(G__18795){
var bit__8185__auto__ = (G__18795.cljs$lang$protocol_mask$partition0$ & (1));
if((bit__8185__auto__) || (G__18795.cljs$core$IFn$)){
return true;
} else {
if((!G__18795.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IFn,G__18795);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IFn,G__18795);
}
}
});
/**
* Returns true if n is an integer.
*/
cljs.core.integer_QMARK_ = (function integer_QMARK_(n){
return (typeof n === 'number') && (cljs.core.not((function (){var G__18808 = n;
return isNaN(G__18808);
})())) && (!((n === Infinity))) && (((function (){var G__18809 = n;
return parseFloat(G__18809);
})() === (function (){var G__18810 = n;
var G__18811 = (10);
return parseInt(G__18810,G__18811);
})()));
});
/**
* Returns true if key is present in the given collection, otherwise
* returns false.  Note that for numerically indexed collections like
* vectors and arrays, this tests if the numeric key is within the
* range of indexes. 'contains?' operates constant or logarithmic time;
* it will not perform a linear search for a value.  See also 'some'.
*/
cljs.core.contains_QMARK_ = (function contains_QMARK_(coll,v){
if((cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,v,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return false;
} else {
return true;
}
});
/**
* Returns the map entry for key, or nil if key not present.
*/
cljs.core.find = (function find(coll,k){
if((!((coll == null))) && (cljs.core.associative_QMARK_(coll)) && (cljs.core.contains_QMARK_(coll,k))){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k,cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,k)], null);
} else {
return null;
}
});
/**
* Returns true if no two of the arguments are =
* @param {...*} var_args
*/
cljs.core.distinct_QMARK_ = (function() {
var distinct_QMARK_ = null;
var distinct_QMARK___1 = (function (x){
return true;
});
var distinct_QMARK___2 = (function (x,y){
return !(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y));
});
var distinct_QMARK___3 = (function() { 
var G__18812__delegate = function (x,y,more){
if(!(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y))){
var s = cljs.core.PersistentHashSet.fromArray([x,y], true);
var xs = more;
while(true){
var x__$1 = cljs.core.first(xs);
var etc = cljs.core.next(xs);
if(cljs.core.truth_(xs)){
if(cljs.core.contains_QMARK_(s,x__$1)){
return false;
} else {
var G__18813 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(s,x__$1);
var G__18814 = etc;
s = G__18813;
xs = G__18814;
continue;
}
} else {
return true;
}
break;
}
} else {
return false;
}
};
var G__18812 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__18815__i = 0, G__18815__a = new Array(arguments.length -  2);
while (G__18815__i < G__18815__a.length) {G__18815__a[G__18815__i] = arguments[G__18815__i + 2]; ++G__18815__i;}
  more = new cljs.core.IndexedSeq(G__18815__a,0);
} 
return G__18812__delegate.call(this,x,y,more);};
G__18812.cljs$lang$maxFixedArity = 2;
G__18812.cljs$lang$applyTo = (function (arglist__18816){
var x = cljs.core.first(arglist__18816);
arglist__18816 = cljs.core.next(arglist__18816);
var y = cljs.core.first(arglist__18816);
var more = cljs.core.rest(arglist__18816);
return G__18812__delegate(x,y,more);
});
G__18812.cljs$core$IFn$_invoke$arity$variadic = G__18812__delegate;
return G__18812;
})()
;
distinct_QMARK_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return distinct_QMARK___1.call(this,x);
case 2:
return distinct_QMARK___2.call(this,x,y);
default:
var G__18817 = null;
if (arguments.length > 2) {
var G__18818__i = 0, G__18818__a = new Array(arguments.length -  2);
while (G__18818__i < G__18818__a.length) {G__18818__a[G__18818__i] = arguments[G__18818__i + 2]; ++G__18818__i;}
G__18817 = new cljs.core.IndexedSeq(G__18818__a,0);
}
return distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__18817);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
distinct_QMARK_.cljs$lang$maxFixedArity = 2;
distinct_QMARK_.cljs$lang$applyTo = distinct_QMARK___3.cljs$lang$applyTo;
distinct_QMARK_.cljs$core$IFn$_invoke$arity$1 = distinct_QMARK___1;
distinct_QMARK_.cljs$core$IFn$_invoke$arity$2 = distinct_QMARK___2;
distinct_QMARK_.cljs$core$IFn$_invoke$arity$variadic = distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic;
return distinct_QMARK_;
})()
;
/**
* Comparator. Returns a negative number, zero, or a positive number
* when x is logically 'less than', 'equal to', or 'greater than'
* y. Uses IComparable if available and google.array.defaultCompare for objects
* of the same type and special-cases nil to be less than any other object.
*/
cljs.core.compare = (function compare(x,y){
if((x === y)){
return (0);
} else {
if((x == null)){
return (-1);
} else {
if((y == null)){
return (1);
} else {
if((cljs.core.type(x) === cljs.core.type(y))){
if((function (){var G__18822 = x;
if(G__18822){
var bit__8178__auto__ = (G__18822.cljs$lang$protocol_mask$partition1$ & (2048));
if((bit__8178__auto__) || (G__18822.cljs$core$IComparable$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$IComparable$_compare$arity$2(null,y);
} else {
var G__18823 = x;
var G__18824 = y;
return goog.array.defaultCompare(G__18823,G__18824);
}
} else {
throw (new Error("compare on non-nil objects of different types"));

}
}
}
}
});
/**
* Compare indexed collection.
*/
cljs.core.compare_indexed = (function() {
var compare_indexed = null;
var compare_indexed__2 = (function (xs,ys){
var xl = cljs.core.count(xs);
var yl = cljs.core.count(ys);
if((xl < yl)){
return (-1);
} else {
if((xl > yl)){
return (1);
} else {
return compare_indexed.cljs$core$IFn$_invoke$arity$4(xs,ys,xl,(0));

}
}
});
var compare_indexed__4 = (function (xs,ys,len,n){
while(true){
var d = cljs.core.compare(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(xs,n),cljs.core.nth.cljs$core$IFn$_invoke$arity$2(ys,n));
if(((d === (0))) && (((n + (1)) < len))){
var G__18829 = xs;
var G__18830 = ys;
var G__18831 = len;
var G__18832 = (n + (1));
xs = G__18829;
ys = G__18830;
len = G__18831;
n = G__18832;
continue;
} else {
return d;
}
break;
}
});
compare_indexed = function(xs,ys,len,n){
switch(arguments.length){
case 2:
return compare_indexed__2.call(this,xs,ys);
case 4:
return compare_indexed__4.call(this,xs,ys,len,n);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
compare_indexed.cljs$core$IFn$_invoke$arity$2 = compare_indexed__2;
compare_indexed.cljs$core$IFn$_invoke$arity$4 = compare_indexed__4;
return compare_indexed;
})()
;
/**
* Given a fn that might be boolean valued or a comparator,
* return a fn that is a comparator.
*/
cljs.core.fn__GT_comparator = (function fn__GT_comparator(f){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(f,cljs.core.compare)){
return cljs.core.compare;
} else {
return (function (x,y){
var r = (function (){var G__18837 = x;
var G__18838 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__18837,G__18838) : f.call(null,G__18837,G__18838));
})();
if(typeof r === 'number'){
return r;
} else {
if(cljs.core.truth_(r)){
return (-1);
} else {
if(cljs.core.truth_((function (){var G__18839 = y;
var G__18840 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__18839,G__18840) : f.call(null,G__18839,G__18840));
})())){
return (1);
} else {
return (0);
}
}
}
});
}
});
/**
* Returns a sorted sequence of the items in coll. Comp can be
* boolean-valued comparison function, or a -/0/+ valued comparator.
* Comp defaults to compare.
*/
cljs.core.sort = (function() {
var sort = null;
var sort__1 = (function (coll){
return sort.cljs$core$IFn$_invoke$arity$2(cljs.core.compare,coll);
});
var sort__2 = (function (comp,coll){
if(cljs.core.seq(coll)){
var a = (function (){var G__18846 = coll;
return (cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(G__18846) : cljs.core.to_array.call(null,G__18846));
})();
var G__18847_18849 = a;
var G__18848_18850 = cljs.core.fn__GT_comparator(comp);
goog.array.stableSort(G__18847_18849,G__18848_18850);

return cljs.core.seq(a);
} else {
return cljs.core.List.EMPTY;
}
});
sort = function(comp,coll){
switch(arguments.length){
case 1:
return sort__1.call(this,comp);
case 2:
return sort__2.call(this,comp,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sort.cljs$core$IFn$_invoke$arity$1 = sort__1;
sort.cljs$core$IFn$_invoke$arity$2 = sort__2;
return sort;
})()
;
/**
* Returns a sorted sequence of the items in coll, where the sort
* order is determined by comparing (keyfn item).  Comp can be
* boolean-valued comparison funcion, or a -/0/+ valued comparator.
* Comp defaults to compare.
*/
cljs.core.sort_by = (function() {
var sort_by = null;
var sort_by__2 = (function (keyfn,coll){
return sort_by.cljs$core$IFn$_invoke$arity$3(keyfn,cljs.core.compare,coll);
});
var sort_by__3 = (function (keyfn,comp,coll){
return cljs.core.sort.cljs$core$IFn$_invoke$arity$2((function (x,y){
return cljs.core.fn__GT_comparator(comp).call(null,(function (){var G__18856 = x;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__18856) : keyfn.call(null,G__18856));
})(),(function (){var G__18857 = y;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__18857) : keyfn.call(null,G__18857));
})());
}),coll);
});
sort_by = function(keyfn,comp,coll){
switch(arguments.length){
case 2:
return sort_by__2.call(this,keyfn,comp);
case 3:
return sort_by__3.call(this,keyfn,comp,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sort_by.cljs$core$IFn$_invoke$arity$2 = sort_by__2;
sort_by.cljs$core$IFn$_invoke$arity$3 = sort_by__3;
return sort_by;
})()
;
cljs.core.seq_reduce = (function() {
var seq_reduce = null;
var seq_reduce__2 = (function (f,coll){
var temp__4124__auto__ = cljs.core.seq(coll);
if(temp__4124__auto__){
var s = temp__4124__auto__;
var G__18863 = f;
var G__18864 = cljs.core.first(s);
var G__18865 = cljs.core.next(s);
return (cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(G__18863,G__18864,G__18865) : cljs.core.reduce.call(null,G__18863,G__18864,G__18865));
} else {
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
}
});
var seq_reduce__3 = (function (f,val,coll){
var val__$1 = val;
var coll__$1 = cljs.core.seq(coll);
while(true){
if(coll__$1){
var nval = (function (){var G__18866 = val__$1;
var G__18867 = cljs.core.first(coll__$1);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__18866,G__18867) : f.call(null,G__18866,G__18867));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__18868 = nval;
var G__18869 = cljs.core.next(coll__$1);
val__$1 = G__18868;
coll__$1 = G__18869;
continue;
}
} else {
return val__$1;
}
break;
}
});
seq_reduce = function(f,val,coll){
switch(arguments.length){
case 2:
return seq_reduce__2.call(this,f,val);
case 3:
return seq_reduce__3.call(this,f,val,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
seq_reduce.cljs$core$IFn$_invoke$arity$2 = seq_reduce__2;
seq_reduce.cljs$core$IFn$_invoke$arity$3 = seq_reduce__3;
return seq_reduce;
})()
;
/**
* Return a random permutation of coll
*/
cljs.core.shuffle = (function shuffle(coll){
var a = (function (){var G__18873 = coll;
return (cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(G__18873) : cljs.core.to_array.call(null,G__18873));
})();
var G__18874_18876 = a;
goog.array.shuffle(G__18874_18876);

var G__18875 = a;
return (cljs.core.vec.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vec.cljs$core$IFn$_invoke$arity$1(G__18875) : cljs.core.vec.call(null,G__18875));
});
/**
* f should be a function of 2 arguments. If val is not supplied,
* returns the result of applying f to the first 2 items in coll, then
* applying f to that result and the 3rd item, etc. If coll contains no
* items, f must accept no arguments as well, and reduce returns the
* result of calling f with no arguments.  If coll has only 1 item, it
* is returned and f is not called.  If val is supplied, returns the
* result of applying f to val and the first item in coll, then
* applying f to that result and the 2nd item, etc. If coll contains no
* items, returns val and f is not called.
*/
cljs.core.reduce = (function() {
var reduce = null;
var reduce__2 = (function (f,coll){
if((function (){var G__18879 = coll;
if(G__18879){
var bit__8178__auto__ = (G__18879.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__8178__auto__) || (G__18879.cljs$core$IReduce$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$2(null,f);
} else {
if(coll instanceof Array){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
if(typeof coll === 'string'){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,coll)){
return cljs.core._reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll);

}
}
}
}
});
var reduce__3 = (function (f,val,coll){
if((function (){var G__18880 = coll;
if(G__18880){
var bit__8178__auto__ = (G__18880.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__8178__auto__) || (G__18880.cljs$core$IReduce$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$3(null,f,val);
} else {
if(coll instanceof Array){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
if(typeof coll === 'string'){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,coll)){
return cljs.core._reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,val,coll);

}
}
}
}
});
reduce = function(f,val,coll){
switch(arguments.length){
case 2:
return reduce__2.call(this,f,val);
case 3:
return reduce__3.call(this,f,val,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
reduce.cljs$core$IFn$_invoke$arity$2 = reduce__2;
reduce.cljs$core$IFn$_invoke$arity$3 = reduce__3;
return reduce;
})()
;
/**
* Reduces an associative collection. f should be a function of 3
* arguments. Returns the result of applying f to init, the first key
* and the first value in coll, then applying f to that result and the
* 2nd key and value, etc. If coll contains no entries, returns init
* and f is not called. Note that reduce-kv is supported on vectors,
* where the keys will be the ordinals.
*/
cljs.core.reduce_kv = (function reduce_kv(f,init,coll){
if(!((coll == null))){
return cljs.core._kv_reduce(coll,f,init);
} else {
return init;
}
});
cljs.core.identity = (function identity(x){
return x;
});
cljs.core.completing = (function() {
var completing = null;
var completing__1 = (function (f){
return completing.cljs$core$IFn$_invoke$arity$2(f,cljs.core.identity);
});
var completing__2 = (function (f,cf){
return (function() {
var G__18889 = null;
var G__18889__0 = (function (){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
});
var G__18889__1 = (function (x){
var G__18886 = x;
return (cf.cljs$core$IFn$_invoke$arity$1 ? cf.cljs$core$IFn$_invoke$arity$1(G__18886) : cf.call(null,G__18886));
});
var G__18889__2 = (function (x,y){
var G__18887 = x;
var G__18888 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__18887,G__18888) : f.call(null,G__18887,G__18888));
});
G__18889 = function(x,y){
switch(arguments.length){
case 0:
return G__18889__0.call(this);
case 1:
return G__18889__1.call(this,x);
case 2:
return G__18889__2.call(this,x,y);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__18889.cljs$core$IFn$_invoke$arity$0 = G__18889__0;
G__18889.cljs$core$IFn$_invoke$arity$1 = G__18889__1;
G__18889.cljs$core$IFn$_invoke$arity$2 = G__18889__2;
return G__18889;
})()
});
completing = function(f,cf){
switch(arguments.length){
case 1:
return completing__1.call(this,f);
case 2:
return completing__2.call(this,f,cf);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
completing.cljs$core$IFn$_invoke$arity$1 = completing__1;
completing.cljs$core$IFn$_invoke$arity$2 = completing__2;
return completing;
})()
;
/**
* reduce with a transformation of f (xf). If init is not
* supplied, (f) will be called to produce it. f should be a reducing
* step function that accepts both 1 and 2 arguments, if it accepts
* only 2 you can add the arity-1 with 'completing'. Returns the result
* of applying (the transformed) xf to init and the first item in coll,
* then applying xf to that result and the 2nd item, etc. If coll
* contains no items, returns init and f is not called. Note that
* certain transforms may inject or skip items.
*/
cljs.core.transduce = (function() {
var transduce = null;
var transduce__3 = (function (xform,f,coll){
return transduce.cljs$core$IFn$_invoke$arity$4(xform,f,(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),coll);
});
var transduce__4 = (function (xform,f,init,coll){
var f__$1 = (function (){var G__18896 = f;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__18896) : xform.call(null,G__18896));
})();
var ret = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(f__$1,init,coll);
var G__18897 = ret;
return (f__$1.cljs$core$IFn$_invoke$arity$1 ? f__$1.cljs$core$IFn$_invoke$arity$1(G__18897) : f__$1.call(null,G__18897));
});
transduce = function(xform,f,init,coll){
switch(arguments.length){
case 3:
return transduce__3.call(this,xform,f,init);
case 4:
return transduce__4.call(this,xform,f,init,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
transduce.cljs$core$IFn$_invoke$arity$3 = transduce__3;
transduce.cljs$core$IFn$_invoke$arity$4 = transduce__4;
return transduce;
})()
;
/**
* Returns the sum of nums. (+) returns 0.
* @param {...*} var_args
*/
cljs.core._PLUS_ = (function() {
var _PLUS_ = null;
var _PLUS___0 = (function (){
return (0);
});
var _PLUS___1 = (function (x){
return x;
});
var _PLUS___2 = (function (x,y){
return (x + y);
});
var _PLUS___3 = (function() { 
var G__18898__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_PLUS_,(x + y),more);
};
var G__18898 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__18899__i = 0, G__18899__a = new Array(arguments.length -  2);
while (G__18899__i < G__18899__a.length) {G__18899__a[G__18899__i] = arguments[G__18899__i + 2]; ++G__18899__i;}
  more = new cljs.core.IndexedSeq(G__18899__a,0);
} 
return G__18898__delegate.call(this,x,y,more);};
G__18898.cljs$lang$maxFixedArity = 2;
G__18898.cljs$lang$applyTo = (function (arglist__18900){
var x = cljs.core.first(arglist__18900);
arglist__18900 = cljs.core.next(arglist__18900);
var y = cljs.core.first(arglist__18900);
var more = cljs.core.rest(arglist__18900);
return G__18898__delegate(x,y,more);
});
G__18898.cljs$core$IFn$_invoke$arity$variadic = G__18898__delegate;
return G__18898;
})()
;
_PLUS_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return _PLUS___0.call(this);
case 1:
return _PLUS___1.call(this,x);
case 2:
return _PLUS___2.call(this,x,y);
default:
var G__18901 = null;
if (arguments.length > 2) {
var G__18902__i = 0, G__18902__a = new Array(arguments.length -  2);
while (G__18902__i < G__18902__a.length) {G__18902__a[G__18902__i] = arguments[G__18902__i + 2]; ++G__18902__i;}
G__18901 = new cljs.core.IndexedSeq(G__18902__a,0);
}
return _PLUS___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__18901);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_PLUS_.cljs$lang$maxFixedArity = 2;
_PLUS_.cljs$lang$applyTo = _PLUS___3.cljs$lang$applyTo;
_PLUS_.cljs$core$IFn$_invoke$arity$0 = _PLUS___0;
_PLUS_.cljs$core$IFn$_invoke$arity$1 = _PLUS___1;
_PLUS_.cljs$core$IFn$_invoke$arity$2 = _PLUS___2;
_PLUS_.cljs$core$IFn$_invoke$arity$variadic = _PLUS___3.cljs$core$IFn$_invoke$arity$variadic;
return _PLUS_;
})()
;
/**
* If no ys are supplied, returns the negation of x, else subtracts
* the ys from x and returns the result.
* @param {...*} var_args
*/
cljs.core._ = (function() {
var _ = null;
var ___1 = (function (x){
return (- x);
});
var ___2 = (function (x,y){
return (x - y);
});
var ___3 = (function() { 
var G__18903__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_,(x - y),more);
};
var G__18903 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__18904__i = 0, G__18904__a = new Array(arguments.length -  2);
while (G__18904__i < G__18904__a.length) {G__18904__a[G__18904__i] = arguments[G__18904__i + 2]; ++G__18904__i;}
  more = new cljs.core.IndexedSeq(G__18904__a,0);
} 
return G__18903__delegate.call(this,x,y,more);};
G__18903.cljs$lang$maxFixedArity = 2;
G__18903.cljs$lang$applyTo = (function (arglist__18905){
var x = cljs.core.first(arglist__18905);
arglist__18905 = cljs.core.next(arglist__18905);
var y = cljs.core.first(arglist__18905);
var more = cljs.core.rest(arglist__18905);
return G__18903__delegate(x,y,more);
});
G__18903.cljs$core$IFn$_invoke$arity$variadic = G__18903__delegate;
return G__18903;
})()
;
_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return ___1.call(this,x);
case 2:
return ___2.call(this,x,y);
default:
var G__18906 = null;
if (arguments.length > 2) {
var G__18907__i = 0, G__18907__a = new Array(arguments.length -  2);
while (G__18907__i < G__18907__a.length) {G__18907__a[G__18907__i] = arguments[G__18907__i + 2]; ++G__18907__i;}
G__18906 = new cljs.core.IndexedSeq(G__18907__a,0);
}
return ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__18906);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_.cljs$lang$maxFixedArity = 2;
_.cljs$lang$applyTo = ___3.cljs$lang$applyTo;
_.cljs$core$IFn$_invoke$arity$1 = ___1;
_.cljs$core$IFn$_invoke$arity$2 = ___2;
_.cljs$core$IFn$_invoke$arity$variadic = ___3.cljs$core$IFn$_invoke$arity$variadic;
return _;
})()
;
/**
* Returns the product of nums. (*) returns 1.
* @param {...*} var_args
*/
cljs.core._STAR_ = (function() {
var _STAR_ = null;
var _STAR___0 = (function (){
return (1);
});
var _STAR___1 = (function (x){
return x;
});
var _STAR___2 = (function (x,y){
return (x * y);
});
var _STAR___3 = (function() { 
var G__18908__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_STAR_,(x * y),more);
};
var G__18908 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__18909__i = 0, G__18909__a = new Array(arguments.length -  2);
while (G__18909__i < G__18909__a.length) {G__18909__a[G__18909__i] = arguments[G__18909__i + 2]; ++G__18909__i;}
  more = new cljs.core.IndexedSeq(G__18909__a,0);
} 
return G__18908__delegate.call(this,x,y,more);};
G__18908.cljs$lang$maxFixedArity = 2;
G__18908.cljs$lang$applyTo = (function (arglist__18910){
var x = cljs.core.first(arglist__18910);
arglist__18910 = cljs.core.next(arglist__18910);
var y = cljs.core.first(arglist__18910);
var more = cljs.core.rest(arglist__18910);
return G__18908__delegate(x,y,more);
});
G__18908.cljs$core$IFn$_invoke$arity$variadic = G__18908__delegate;
return G__18908;
})()
;
_STAR_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return _STAR___0.call(this);
case 1:
return _STAR___1.call(this,x);
case 2:
return _STAR___2.call(this,x,y);
default:
var G__18911 = null;
if (arguments.length > 2) {
var G__18912__i = 0, G__18912__a = new Array(arguments.length -  2);
while (G__18912__i < G__18912__a.length) {G__18912__a[G__18912__i] = arguments[G__18912__i + 2]; ++G__18912__i;}
G__18911 = new cljs.core.IndexedSeq(G__18912__a,0);
}
return _STAR___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__18911);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_STAR_.cljs$lang$maxFixedArity = 2;
_STAR_.cljs$lang$applyTo = _STAR___3.cljs$lang$applyTo;
_STAR_.cljs$core$IFn$_invoke$arity$0 = _STAR___0;
_STAR_.cljs$core$IFn$_invoke$arity$1 = _STAR___1;
_STAR_.cljs$core$IFn$_invoke$arity$2 = _STAR___2;
_STAR_.cljs$core$IFn$_invoke$arity$variadic = _STAR___3.cljs$core$IFn$_invoke$arity$variadic;
return _STAR_;
})()
;
/**
* If no denominators are supplied, returns 1/numerator,
* else returns numerator divided by all of the denominators.
* @param {...*} var_args
*/
cljs.core._SLASH_ = (function() {
var _SLASH_ = null;
var _SLASH___1 = (function (x){
return _SLASH_.cljs$core$IFn$_invoke$arity$2((1),x);
});
var _SLASH___2 = (function (x,y){
return (x / y);
});
var _SLASH___3 = (function() { 
var G__18917__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_SLASH_,_SLASH_.cljs$core$IFn$_invoke$arity$2(x,y),more);
};
var G__18917 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__18918__i = 0, G__18918__a = new Array(arguments.length -  2);
while (G__18918__i < G__18918__a.length) {G__18918__a[G__18918__i] = arguments[G__18918__i + 2]; ++G__18918__i;}
  more = new cljs.core.IndexedSeq(G__18918__a,0);
} 
return G__18917__delegate.call(this,x,y,more);};
G__18917.cljs$lang$maxFixedArity = 2;
G__18917.cljs$lang$applyTo = (function (arglist__18919){
var x = cljs.core.first(arglist__18919);
arglist__18919 = cljs.core.next(arglist__18919);
var y = cljs.core.first(arglist__18919);
var more = cljs.core.rest(arglist__18919);
return G__18917__delegate(x,y,more);
});
G__18917.cljs$core$IFn$_invoke$arity$variadic = G__18917__delegate;
return G__18917;
})()
;
_SLASH_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _SLASH___1.call(this,x);
case 2:
return _SLASH___2.call(this,x,y);
default:
var G__18920 = null;
if (arguments.length > 2) {
var G__18921__i = 0, G__18921__a = new Array(arguments.length -  2);
while (G__18921__i < G__18921__a.length) {G__18921__a[G__18921__i] = arguments[G__18921__i + 2]; ++G__18921__i;}
G__18920 = new cljs.core.IndexedSeq(G__18921__a,0);
}
return _SLASH___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__18920);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_SLASH_.cljs$lang$maxFixedArity = 2;
_SLASH_.cljs$lang$applyTo = _SLASH___3.cljs$lang$applyTo;
_SLASH_.cljs$core$IFn$_invoke$arity$1 = _SLASH___1;
_SLASH_.cljs$core$IFn$_invoke$arity$2 = _SLASH___2;
_SLASH_.cljs$core$IFn$_invoke$arity$variadic = _SLASH___3.cljs$core$IFn$_invoke$arity$variadic;
return _SLASH_;
})()
;
/**
* Returns non-nil if nums are in monotonically increasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._LT_ = (function() {
var _LT_ = null;
var _LT___1 = (function (x){
return true;
});
var _LT___2 = (function (x,y){
return (x < y);
});
var _LT___3 = (function() { 
var G__18922__delegate = function (x,y,more){
while(true){
if((x < y)){
if(cljs.core.next(more)){
var G__18923 = y;
var G__18924 = cljs.core.first(more);
var G__18925 = cljs.core.next(more);
x = G__18923;
y = G__18924;
more = G__18925;
continue;
} else {
return (y < cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__18922 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__18926__i = 0, G__18926__a = new Array(arguments.length -  2);
while (G__18926__i < G__18926__a.length) {G__18926__a[G__18926__i] = arguments[G__18926__i + 2]; ++G__18926__i;}
  more = new cljs.core.IndexedSeq(G__18926__a,0);
} 
return G__18922__delegate.call(this,x,y,more);};
G__18922.cljs$lang$maxFixedArity = 2;
G__18922.cljs$lang$applyTo = (function (arglist__18927){
var x = cljs.core.first(arglist__18927);
arglist__18927 = cljs.core.next(arglist__18927);
var y = cljs.core.first(arglist__18927);
var more = cljs.core.rest(arglist__18927);
return G__18922__delegate(x,y,more);
});
G__18922.cljs$core$IFn$_invoke$arity$variadic = G__18922__delegate;
return G__18922;
})()
;
_LT_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _LT___1.call(this,x);
case 2:
return _LT___2.call(this,x,y);
default:
var G__18928 = null;
if (arguments.length > 2) {
var G__18929__i = 0, G__18929__a = new Array(arguments.length -  2);
while (G__18929__i < G__18929__a.length) {G__18929__a[G__18929__i] = arguments[G__18929__i + 2]; ++G__18929__i;}
G__18928 = new cljs.core.IndexedSeq(G__18929__a,0);
}
return _LT___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__18928);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_LT_.cljs$lang$maxFixedArity = 2;
_LT_.cljs$lang$applyTo = _LT___3.cljs$lang$applyTo;
_LT_.cljs$core$IFn$_invoke$arity$1 = _LT___1;
_LT_.cljs$core$IFn$_invoke$arity$2 = _LT___2;
_LT_.cljs$core$IFn$_invoke$arity$variadic = _LT___3.cljs$core$IFn$_invoke$arity$variadic;
return _LT_;
})()
;
/**
* Returns non-nil if nums are in monotonically non-decreasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._LT__EQ_ = (function() {
var _LT__EQ_ = null;
var _LT__EQ___1 = (function (x){
return true;
});
var _LT__EQ___2 = (function (x,y){
return (x <= y);
});
var _LT__EQ___3 = (function() { 
var G__18930__delegate = function (x,y,more){
while(true){
if((x <= y)){
if(cljs.core.next(more)){
var G__18931 = y;
var G__18932 = cljs.core.first(more);
var G__18933 = cljs.core.next(more);
x = G__18931;
y = G__18932;
more = G__18933;
continue;
} else {
return (y <= cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__18930 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__18934__i = 0, G__18934__a = new Array(arguments.length -  2);
while (G__18934__i < G__18934__a.length) {G__18934__a[G__18934__i] = arguments[G__18934__i + 2]; ++G__18934__i;}
  more = new cljs.core.IndexedSeq(G__18934__a,0);
} 
return G__18930__delegate.call(this,x,y,more);};
G__18930.cljs$lang$maxFixedArity = 2;
G__18930.cljs$lang$applyTo = (function (arglist__18935){
var x = cljs.core.first(arglist__18935);
arglist__18935 = cljs.core.next(arglist__18935);
var y = cljs.core.first(arglist__18935);
var more = cljs.core.rest(arglist__18935);
return G__18930__delegate(x,y,more);
});
G__18930.cljs$core$IFn$_invoke$arity$variadic = G__18930__delegate;
return G__18930;
})()
;
_LT__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _LT__EQ___1.call(this,x);
case 2:
return _LT__EQ___2.call(this,x,y);
default:
var G__18936 = null;
if (arguments.length > 2) {
var G__18937__i = 0, G__18937__a = new Array(arguments.length -  2);
while (G__18937__i < G__18937__a.length) {G__18937__a[G__18937__i] = arguments[G__18937__i + 2]; ++G__18937__i;}
G__18936 = new cljs.core.IndexedSeq(G__18937__a,0);
}
return _LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__18936);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_LT__EQ_.cljs$lang$maxFixedArity = 2;
_LT__EQ_.cljs$lang$applyTo = _LT__EQ___3.cljs$lang$applyTo;
_LT__EQ_.cljs$core$IFn$_invoke$arity$1 = _LT__EQ___1;
_LT__EQ_.cljs$core$IFn$_invoke$arity$2 = _LT__EQ___2;
_LT__EQ_.cljs$core$IFn$_invoke$arity$variadic = _LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _LT__EQ_;
})()
;
/**
* Returns non-nil if nums are in monotonically decreasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._GT_ = (function() {
var _GT_ = null;
var _GT___1 = (function (x){
return true;
});
var _GT___2 = (function (x,y){
return (x > y);
});
var _GT___3 = (function() { 
var G__18938__delegate = function (x,y,more){
while(true){
if((x > y)){
if(cljs.core.next(more)){
var G__18939 = y;
var G__18940 = cljs.core.first(more);
var G__18941 = cljs.core.next(more);
x = G__18939;
y = G__18940;
more = G__18941;
continue;
} else {
return (y > cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__18938 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__18942__i = 0, G__18942__a = new Array(arguments.length -  2);
while (G__18942__i < G__18942__a.length) {G__18942__a[G__18942__i] = arguments[G__18942__i + 2]; ++G__18942__i;}
  more = new cljs.core.IndexedSeq(G__18942__a,0);
} 
return G__18938__delegate.call(this,x,y,more);};
G__18938.cljs$lang$maxFixedArity = 2;
G__18938.cljs$lang$applyTo = (function (arglist__18943){
var x = cljs.core.first(arglist__18943);
arglist__18943 = cljs.core.next(arglist__18943);
var y = cljs.core.first(arglist__18943);
var more = cljs.core.rest(arglist__18943);
return G__18938__delegate(x,y,more);
});
G__18938.cljs$core$IFn$_invoke$arity$variadic = G__18938__delegate;
return G__18938;
})()
;
_GT_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _GT___1.call(this,x);
case 2:
return _GT___2.call(this,x,y);
default:
var G__18944 = null;
if (arguments.length > 2) {
var G__18945__i = 0, G__18945__a = new Array(arguments.length -  2);
while (G__18945__i < G__18945__a.length) {G__18945__a[G__18945__i] = arguments[G__18945__i + 2]; ++G__18945__i;}
G__18944 = new cljs.core.IndexedSeq(G__18945__a,0);
}
return _GT___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__18944);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_GT_.cljs$lang$maxFixedArity = 2;
_GT_.cljs$lang$applyTo = _GT___3.cljs$lang$applyTo;
_GT_.cljs$core$IFn$_invoke$arity$1 = _GT___1;
_GT_.cljs$core$IFn$_invoke$arity$2 = _GT___2;
_GT_.cljs$core$IFn$_invoke$arity$variadic = _GT___3.cljs$core$IFn$_invoke$arity$variadic;
return _GT_;
})()
;
/**
* Returns non-nil if nums are in monotonically non-increasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._GT__EQ_ = (function() {
var _GT__EQ_ = null;
var _GT__EQ___1 = (function (x){
return true;
});
var _GT__EQ___2 = (function (x,y){
return (x >= y);
});
var _GT__EQ___3 = (function() { 
var G__18946__delegate = function (x,y,more){
while(true){
if((x >= y)){
if(cljs.core.next(more)){
var G__18947 = y;
var G__18948 = cljs.core.first(more);
var G__18949 = cljs.core.next(more);
x = G__18947;
y = G__18948;
more = G__18949;
continue;
} else {
return (y >= cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__18946 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__18950__i = 0, G__18950__a = new Array(arguments.length -  2);
while (G__18950__i < G__18950__a.length) {G__18950__a[G__18950__i] = arguments[G__18950__i + 2]; ++G__18950__i;}
  more = new cljs.core.IndexedSeq(G__18950__a,0);
} 
return G__18946__delegate.call(this,x,y,more);};
G__18946.cljs$lang$maxFixedArity = 2;
G__18946.cljs$lang$applyTo = (function (arglist__18951){
var x = cljs.core.first(arglist__18951);
arglist__18951 = cljs.core.next(arglist__18951);
var y = cljs.core.first(arglist__18951);
var more = cljs.core.rest(arglist__18951);
return G__18946__delegate(x,y,more);
});
G__18946.cljs$core$IFn$_invoke$arity$variadic = G__18946__delegate;
return G__18946;
})()
;
_GT__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _GT__EQ___1.call(this,x);
case 2:
return _GT__EQ___2.call(this,x,y);
default:
var G__18952 = null;
if (arguments.length > 2) {
var G__18953__i = 0, G__18953__a = new Array(arguments.length -  2);
while (G__18953__i < G__18953__a.length) {G__18953__a[G__18953__i] = arguments[G__18953__i + 2]; ++G__18953__i;}
G__18952 = new cljs.core.IndexedSeq(G__18953__a,0);
}
return _GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__18952);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_GT__EQ_.cljs$lang$maxFixedArity = 2;
_GT__EQ_.cljs$lang$applyTo = _GT__EQ___3.cljs$lang$applyTo;
_GT__EQ_.cljs$core$IFn$_invoke$arity$1 = _GT__EQ___1;
_GT__EQ_.cljs$core$IFn$_invoke$arity$2 = _GT__EQ___2;
_GT__EQ_.cljs$core$IFn$_invoke$arity$variadic = _GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _GT__EQ_;
})()
;
/**
* Returns a number one less than num.
*/
cljs.core.dec = (function dec(x){
return (x - (1));
});
/**
* Returns the greatest of the nums.
* @param {...*} var_args
*/
cljs.core.max = (function() {
var max = null;
var max__1 = (function (x){
return x;
});
var max__2 = (function (x,y){
var x__7821__auto__ = x;
var y__7822__auto__ = y;
return ((x__7821__auto__ > y__7822__auto__) ? x__7821__auto__ : y__7822__auto__);
});
var max__3 = (function() { 
var G__18954__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(max,(function (){var x__7821__auto__ = x;
var y__7822__auto__ = y;
return ((x__7821__auto__ > y__7822__auto__) ? x__7821__auto__ : y__7822__auto__);
})(),more);
};
var G__18954 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__18955__i = 0, G__18955__a = new Array(arguments.length -  2);
while (G__18955__i < G__18955__a.length) {G__18955__a[G__18955__i] = arguments[G__18955__i + 2]; ++G__18955__i;}
  more = new cljs.core.IndexedSeq(G__18955__a,0);
} 
return G__18954__delegate.call(this,x,y,more);};
G__18954.cljs$lang$maxFixedArity = 2;
G__18954.cljs$lang$applyTo = (function (arglist__18956){
var x = cljs.core.first(arglist__18956);
arglist__18956 = cljs.core.next(arglist__18956);
var y = cljs.core.first(arglist__18956);
var more = cljs.core.rest(arglist__18956);
return G__18954__delegate(x,y,more);
});
G__18954.cljs$core$IFn$_invoke$arity$variadic = G__18954__delegate;
return G__18954;
})()
;
max = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return max__1.call(this,x);
case 2:
return max__2.call(this,x,y);
default:
var G__18957 = null;
if (arguments.length > 2) {
var G__18958__i = 0, G__18958__a = new Array(arguments.length -  2);
while (G__18958__i < G__18958__a.length) {G__18958__a[G__18958__i] = arguments[G__18958__i + 2]; ++G__18958__i;}
G__18957 = new cljs.core.IndexedSeq(G__18958__a,0);
}
return max__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__18957);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
max.cljs$lang$maxFixedArity = 2;
max.cljs$lang$applyTo = max__3.cljs$lang$applyTo;
max.cljs$core$IFn$_invoke$arity$1 = max__1;
max.cljs$core$IFn$_invoke$arity$2 = max__2;
max.cljs$core$IFn$_invoke$arity$variadic = max__3.cljs$core$IFn$_invoke$arity$variadic;
return max;
})()
;
/**
* Returns the least of the nums.
* @param {...*} var_args
*/
cljs.core.min = (function() {
var min = null;
var min__1 = (function (x){
return x;
});
var min__2 = (function (x,y){
var x__7828__auto__ = x;
var y__7829__auto__ = y;
return ((x__7828__auto__ < y__7829__auto__) ? x__7828__auto__ : y__7829__auto__);
});
var min__3 = (function() { 
var G__18959__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(min,(function (){var x__7828__auto__ = x;
var y__7829__auto__ = y;
return ((x__7828__auto__ < y__7829__auto__) ? x__7828__auto__ : y__7829__auto__);
})(),more);
};
var G__18959 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__18960__i = 0, G__18960__a = new Array(arguments.length -  2);
while (G__18960__i < G__18960__a.length) {G__18960__a[G__18960__i] = arguments[G__18960__i + 2]; ++G__18960__i;}
  more = new cljs.core.IndexedSeq(G__18960__a,0);
} 
return G__18959__delegate.call(this,x,y,more);};
G__18959.cljs$lang$maxFixedArity = 2;
G__18959.cljs$lang$applyTo = (function (arglist__18961){
var x = cljs.core.first(arglist__18961);
arglist__18961 = cljs.core.next(arglist__18961);
var y = cljs.core.first(arglist__18961);
var more = cljs.core.rest(arglist__18961);
return G__18959__delegate(x,y,more);
});
G__18959.cljs$core$IFn$_invoke$arity$variadic = G__18959__delegate;
return G__18959;
})()
;
min = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return min__1.call(this,x);
case 2:
return min__2.call(this,x,y);
default:
var G__18962 = null;
if (arguments.length > 2) {
var G__18963__i = 0, G__18963__a = new Array(arguments.length -  2);
while (G__18963__i < G__18963__a.length) {G__18963__a[G__18963__i] = arguments[G__18963__i + 2]; ++G__18963__i;}
G__18962 = new cljs.core.IndexedSeq(G__18963__a,0);
}
return min__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__18962);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
min.cljs$lang$maxFixedArity = 2;
min.cljs$lang$applyTo = min__3.cljs$lang$applyTo;
min.cljs$core$IFn$_invoke$arity$1 = min__1;
min.cljs$core$IFn$_invoke$arity$2 = min__2;
min.cljs$core$IFn$_invoke$arity$variadic = min__3.cljs$core$IFn$_invoke$arity$variadic;
return min;
})()
;
cljs.core.byte$ = (function byte$(x){
return x;
});
/**
* Coerce to char
*/
cljs.core.char$ = (function char$(x){
if(typeof x === 'number'){
return String.fromCharCode(x);
} else {
if((typeof x === 'string') && ((x.length === (1)))){
return x;
} else {
throw (new Error("Argument to char must be a character or number"));

}
}
});
cljs.core.short$ = (function short$(x){
return x;
});
cljs.core.float$ = (function float$(x){
return x;
});
cljs.core.double$ = (function double$(x){
return x;
});
cljs.core.unchecked_byte = (function unchecked_byte(x){
return x;
});
cljs.core.unchecked_char = (function unchecked_char(x){
return x;
});
cljs.core.unchecked_short = (function unchecked_short(x){
return x;
});
cljs.core.unchecked_float = (function unchecked_float(x){
return x;
});
cljs.core.unchecked_double = (function unchecked_double(x){
return x;
});
/**
* Returns the sum of nums. (+) returns 0.
* @param {...*} var_args
*/
cljs.core.unchecked_add = (function() {
var unchecked_add = null;
var unchecked_add__0 = (function (){
return (0);
});
var unchecked_add__1 = (function (x){
return x;
});
var unchecked_add__2 = (function (x,y){
return (x + y);
});
var unchecked_add__3 = (function() { 
var G__18964__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_add,(x + y),more);
};
var G__18964 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__18965__i = 0, G__18965__a = new Array(arguments.length -  2);
while (G__18965__i < G__18965__a.length) {G__18965__a[G__18965__i] = arguments[G__18965__i + 2]; ++G__18965__i;}
  more = new cljs.core.IndexedSeq(G__18965__a,0);
} 
return G__18964__delegate.call(this,x,y,more);};
G__18964.cljs$lang$maxFixedArity = 2;
G__18964.cljs$lang$applyTo = (function (arglist__18966){
var x = cljs.core.first(arglist__18966);
arglist__18966 = cljs.core.next(arglist__18966);
var y = cljs.core.first(arglist__18966);
var more = cljs.core.rest(arglist__18966);
return G__18964__delegate(x,y,more);
});
G__18964.cljs$core$IFn$_invoke$arity$variadic = G__18964__delegate;
return G__18964;
})()
;
unchecked_add = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_add__0.call(this);
case 1:
return unchecked_add__1.call(this,x);
case 2:
return unchecked_add__2.call(this,x,y);
default:
var G__18967 = null;
if (arguments.length > 2) {
var G__18968__i = 0, G__18968__a = new Array(arguments.length -  2);
while (G__18968__i < G__18968__a.length) {G__18968__a[G__18968__i] = arguments[G__18968__i + 2]; ++G__18968__i;}
G__18967 = new cljs.core.IndexedSeq(G__18968__a,0);
}
return unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__18967);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_add.cljs$lang$maxFixedArity = 2;
unchecked_add.cljs$lang$applyTo = unchecked_add__3.cljs$lang$applyTo;
unchecked_add.cljs$core$IFn$_invoke$arity$0 = unchecked_add__0;
unchecked_add.cljs$core$IFn$_invoke$arity$1 = unchecked_add__1;
unchecked_add.cljs$core$IFn$_invoke$arity$2 = unchecked_add__2;
unchecked_add.cljs$core$IFn$_invoke$arity$variadic = unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_add;
})()
;
/**
* Returns the sum of nums. (+) returns 0.
* @param {...*} var_args
*/
cljs.core.unchecked_add_int = (function() {
var unchecked_add_int = null;
var unchecked_add_int__0 = (function (){
return (0);
});
var unchecked_add_int__1 = (function (x){
return x;
});
var unchecked_add_int__2 = (function (x,y){
return (x + y);
});
var unchecked_add_int__3 = (function() { 
var G__18969__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_add_int,(x + y),more);
};
var G__18969 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__18970__i = 0, G__18970__a = new Array(arguments.length -  2);
while (G__18970__i < G__18970__a.length) {G__18970__a[G__18970__i] = arguments[G__18970__i + 2]; ++G__18970__i;}
  more = new cljs.core.IndexedSeq(G__18970__a,0);
} 
return G__18969__delegate.call(this,x,y,more);};
G__18969.cljs$lang$maxFixedArity = 2;
G__18969.cljs$lang$applyTo = (function (arglist__18971){
var x = cljs.core.first(arglist__18971);
arglist__18971 = cljs.core.next(arglist__18971);
var y = cljs.core.first(arglist__18971);
var more = cljs.core.rest(arglist__18971);
return G__18969__delegate(x,y,more);
});
G__18969.cljs$core$IFn$_invoke$arity$variadic = G__18969__delegate;
return G__18969;
})()
;
unchecked_add_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_add_int__0.call(this);
case 1:
return unchecked_add_int__1.call(this,x);
case 2:
return unchecked_add_int__2.call(this,x,y);
default:
var G__18972 = null;
if (arguments.length > 2) {
var G__18973__i = 0, G__18973__a = new Array(arguments.length -  2);
while (G__18973__i < G__18973__a.length) {G__18973__a[G__18973__i] = arguments[G__18973__i + 2]; ++G__18973__i;}
G__18972 = new cljs.core.IndexedSeq(G__18973__a,0);
}
return unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__18972);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_add_int.cljs$lang$maxFixedArity = 2;
unchecked_add_int.cljs$lang$applyTo = unchecked_add_int__3.cljs$lang$applyTo;
unchecked_add_int.cljs$core$IFn$_invoke$arity$0 = unchecked_add_int__0;
unchecked_add_int.cljs$core$IFn$_invoke$arity$1 = unchecked_add_int__1;
unchecked_add_int.cljs$core$IFn$_invoke$arity$2 = unchecked_add_int__2;
unchecked_add_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_add_int;
})()
;
cljs.core.unchecked_dec = (function unchecked_dec(x){
return (x - (1));
});
cljs.core.unchecked_dec_int = (function unchecked_dec_int(x){
return (x - (1));
});
/**
* If no denominators are supplied, returns 1/numerator,
* else returns numerator divided by all of the denominators.
* @param {...*} var_args
*/
cljs.core.unchecked_divide_int = (function() {
var unchecked_divide_int = null;
var unchecked_divide_int__1 = (function (x){
return unchecked_divide_int.cljs$core$IFn$_invoke$arity$2((1),x);
});
var unchecked_divide_int__2 = (function (x,y){
return (x / y);
});
var unchecked_divide_int__3 = (function() { 
var G__18978__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_divide_int,unchecked_divide_int.cljs$core$IFn$_invoke$arity$2(x,y),more);
};
var G__18978 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__18979__i = 0, G__18979__a = new Array(arguments.length -  2);
while (G__18979__i < G__18979__a.length) {G__18979__a[G__18979__i] = arguments[G__18979__i + 2]; ++G__18979__i;}
  more = new cljs.core.IndexedSeq(G__18979__a,0);
} 
return G__18978__delegate.call(this,x,y,more);};
G__18978.cljs$lang$maxFixedArity = 2;
G__18978.cljs$lang$applyTo = (function (arglist__18980){
var x = cljs.core.first(arglist__18980);
arglist__18980 = cljs.core.next(arglist__18980);
var y = cljs.core.first(arglist__18980);
var more = cljs.core.rest(arglist__18980);
return G__18978__delegate(x,y,more);
});
G__18978.cljs$core$IFn$_invoke$arity$variadic = G__18978__delegate;
return G__18978;
})()
;
unchecked_divide_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return unchecked_divide_int__1.call(this,x);
case 2:
return unchecked_divide_int__2.call(this,x,y);
default:
var G__18981 = null;
if (arguments.length > 2) {
var G__18982__i = 0, G__18982__a = new Array(arguments.length -  2);
while (G__18982__i < G__18982__a.length) {G__18982__a[G__18982__i] = arguments[G__18982__i + 2]; ++G__18982__i;}
G__18981 = new cljs.core.IndexedSeq(G__18982__a,0);
}
return unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__18981);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_divide_int.cljs$lang$maxFixedArity = 2;
unchecked_divide_int.cljs$lang$applyTo = unchecked_divide_int__3.cljs$lang$applyTo;
unchecked_divide_int.cljs$core$IFn$_invoke$arity$1 = unchecked_divide_int__1;
unchecked_divide_int.cljs$core$IFn$_invoke$arity$2 = unchecked_divide_int__2;
unchecked_divide_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_divide_int;
})()
;
cljs.core.unchecked_inc = (function unchecked_inc(x){
return (x + (1));
});
cljs.core.unchecked_inc_int = (function unchecked_inc_int(x){
return (x + (1));
});
/**
* Returns the product of nums. (*) returns 1.
* @param {...*} var_args
*/
cljs.core.unchecked_multiply = (function() {
var unchecked_multiply = null;
var unchecked_multiply__0 = (function (){
return (1);
});
var unchecked_multiply__1 = (function (x){
return x;
});
var unchecked_multiply__2 = (function (x,y){
return (x * y);
});
var unchecked_multiply__3 = (function() { 
var G__18983__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_multiply,(x * y),more);
};
var G__18983 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__18984__i = 0, G__18984__a = new Array(arguments.length -  2);
while (G__18984__i < G__18984__a.length) {G__18984__a[G__18984__i] = arguments[G__18984__i + 2]; ++G__18984__i;}
  more = new cljs.core.IndexedSeq(G__18984__a,0);
} 
return G__18983__delegate.call(this,x,y,more);};
G__18983.cljs$lang$maxFixedArity = 2;
G__18983.cljs$lang$applyTo = (function (arglist__18985){
var x = cljs.core.first(arglist__18985);
arglist__18985 = cljs.core.next(arglist__18985);
var y = cljs.core.first(arglist__18985);
var more = cljs.core.rest(arglist__18985);
return G__18983__delegate(x,y,more);
});
G__18983.cljs$core$IFn$_invoke$arity$variadic = G__18983__delegate;
return G__18983;
})()
;
unchecked_multiply = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_multiply__0.call(this);
case 1:
return unchecked_multiply__1.call(this,x);
case 2:
return unchecked_multiply__2.call(this,x,y);
default:
var G__18986 = null;
if (arguments.length > 2) {
var G__18987__i = 0, G__18987__a = new Array(arguments.length -  2);
while (G__18987__i < G__18987__a.length) {G__18987__a[G__18987__i] = arguments[G__18987__i + 2]; ++G__18987__i;}
G__18986 = new cljs.core.IndexedSeq(G__18987__a,0);
}
return unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__18986);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_multiply.cljs$lang$maxFixedArity = 2;
unchecked_multiply.cljs$lang$applyTo = unchecked_multiply__3.cljs$lang$applyTo;
unchecked_multiply.cljs$core$IFn$_invoke$arity$0 = unchecked_multiply__0;
unchecked_multiply.cljs$core$IFn$_invoke$arity$1 = unchecked_multiply__1;
unchecked_multiply.cljs$core$IFn$_invoke$arity$2 = unchecked_multiply__2;
unchecked_multiply.cljs$core$IFn$_invoke$arity$variadic = unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_multiply;
})()
;
/**
* Returns the product of nums. (*) returns 1.
* @param {...*} var_args
*/
cljs.core.unchecked_multiply_int = (function() {
var unchecked_multiply_int = null;
var unchecked_multiply_int__0 = (function (){
return (1);
});
var unchecked_multiply_int__1 = (function (x){
return x;
});
var unchecked_multiply_int__2 = (function (x,y){
return (x * y);
});
var unchecked_multiply_int__3 = (function() { 
var G__18988__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_multiply_int,(x * y),more);
};
var G__18988 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__18989__i = 0, G__18989__a = new Array(arguments.length -  2);
while (G__18989__i < G__18989__a.length) {G__18989__a[G__18989__i] = arguments[G__18989__i + 2]; ++G__18989__i;}
  more = new cljs.core.IndexedSeq(G__18989__a,0);
} 
return G__18988__delegate.call(this,x,y,more);};
G__18988.cljs$lang$maxFixedArity = 2;
G__18988.cljs$lang$applyTo = (function (arglist__18990){
var x = cljs.core.first(arglist__18990);
arglist__18990 = cljs.core.next(arglist__18990);
var y = cljs.core.first(arglist__18990);
var more = cljs.core.rest(arglist__18990);
return G__18988__delegate(x,y,more);
});
G__18988.cljs$core$IFn$_invoke$arity$variadic = G__18988__delegate;
return G__18988;
})()
;
unchecked_multiply_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_multiply_int__0.call(this);
case 1:
return unchecked_multiply_int__1.call(this,x);
case 2:
return unchecked_multiply_int__2.call(this,x,y);
default:
var G__18991 = null;
if (arguments.length > 2) {
var G__18992__i = 0, G__18992__a = new Array(arguments.length -  2);
while (G__18992__i < G__18992__a.length) {G__18992__a[G__18992__i] = arguments[G__18992__i + 2]; ++G__18992__i;}
G__18991 = new cljs.core.IndexedSeq(G__18992__a,0);
}
return unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__18991);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_multiply_int.cljs$lang$maxFixedArity = 2;
unchecked_multiply_int.cljs$lang$applyTo = unchecked_multiply_int__3.cljs$lang$applyTo;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$0 = unchecked_multiply_int__0;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$1 = unchecked_multiply_int__1;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$2 = unchecked_multiply_int__2;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_multiply_int;
})()
;
cljs.core.unchecked_negate = (function unchecked_negate(x){
return (- x);
});
cljs.core.unchecked_negate_int = (function unchecked_negate_int(x){
return (- x);
});
cljs.core.unchecked_remainder_int = (function unchecked_remainder_int(x,n){
var G__18995 = x;
var G__18996 = n;
return (cljs.core.mod.cljs$core$IFn$_invoke$arity$2 ? cljs.core.mod.cljs$core$IFn$_invoke$arity$2(G__18995,G__18996) : cljs.core.mod.call(null,G__18995,G__18996));
});
/**
* If no ys are supplied, returns the negation of x, else subtracts
* the ys from x and returns the result.
* @param {...*} var_args
*/
cljs.core.unchecked_subtract = (function() {
var unchecked_subtract = null;
var unchecked_subtract__1 = (function (x){
return (- x);
});
var unchecked_subtract__2 = (function (x,y){
return (x - y);
});
var unchecked_subtract__3 = (function() { 
var G__18997__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_subtract,(x - y),more);
};
var G__18997 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__18998__i = 0, G__18998__a = new Array(arguments.length -  2);
while (G__18998__i < G__18998__a.length) {G__18998__a[G__18998__i] = arguments[G__18998__i + 2]; ++G__18998__i;}
  more = new cljs.core.IndexedSeq(G__18998__a,0);
} 
return G__18997__delegate.call(this,x,y,more);};
G__18997.cljs$lang$maxFixedArity = 2;
G__18997.cljs$lang$applyTo = (function (arglist__18999){
var x = cljs.core.first(arglist__18999);
arglist__18999 = cljs.core.next(arglist__18999);
var y = cljs.core.first(arglist__18999);
var more = cljs.core.rest(arglist__18999);
return G__18997__delegate(x,y,more);
});
G__18997.cljs$core$IFn$_invoke$arity$variadic = G__18997__delegate;
return G__18997;
})()
;
unchecked_subtract = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return unchecked_subtract__1.call(this,x);
case 2:
return unchecked_subtract__2.call(this,x,y);
default:
var G__19000 = null;
if (arguments.length > 2) {
var G__19001__i = 0, G__19001__a = new Array(arguments.length -  2);
while (G__19001__i < G__19001__a.length) {G__19001__a[G__19001__i] = arguments[G__19001__i + 2]; ++G__19001__i;}
G__19000 = new cljs.core.IndexedSeq(G__19001__a,0);
}
return unchecked_subtract__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__19000);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_subtract.cljs$lang$maxFixedArity = 2;
unchecked_subtract.cljs$lang$applyTo = unchecked_subtract__3.cljs$lang$applyTo;
unchecked_subtract.cljs$core$IFn$_invoke$arity$1 = unchecked_subtract__1;
unchecked_subtract.cljs$core$IFn$_invoke$arity$2 = unchecked_subtract__2;
unchecked_subtract.cljs$core$IFn$_invoke$arity$variadic = unchecked_subtract__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_subtract;
})()
;
/**
* If no ys are supplied, returns the negation of x, else subtracts
* the ys from x and returns the result.
* @param {...*} var_args
*/
cljs.core.unchecked_subtract_int = (function() {
var unchecked_subtract_int = null;
var unchecked_subtract_int__1 = (function (x){
return (- x);
});
var unchecked_subtract_int__2 = (function (x,y){
return (x - y);
});
var unchecked_subtract_int__3 = (function() { 
var G__19002__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_subtract_int,(x - y),more);
};
var G__19002 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__19003__i = 0, G__19003__a = new Array(arguments.length -  2);
while (G__19003__i < G__19003__a.length) {G__19003__a[G__19003__i] = arguments[G__19003__i + 2]; ++G__19003__i;}
  more = new cljs.core.IndexedSeq(G__19003__a,0);
} 
return G__19002__delegate.call(this,x,y,more);};
G__19002.cljs$lang$maxFixedArity = 2;
G__19002.cljs$lang$applyTo = (function (arglist__19004){
var x = cljs.core.first(arglist__19004);
arglist__19004 = cljs.core.next(arglist__19004);
var y = cljs.core.first(arglist__19004);
var more = cljs.core.rest(arglist__19004);
return G__19002__delegate(x,y,more);
});
G__19002.cljs$core$IFn$_invoke$arity$variadic = G__19002__delegate;
return G__19002;
})()
;
unchecked_subtract_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return unchecked_subtract_int__1.call(this,x);
case 2:
return unchecked_subtract_int__2.call(this,x,y);
default:
var G__19005 = null;
if (arguments.length > 2) {
var G__19006__i = 0, G__19006__a = new Array(arguments.length -  2);
while (G__19006__i < G__19006__a.length) {G__19006__a[G__19006__i] = arguments[G__19006__i + 2]; ++G__19006__i;}
G__19005 = new cljs.core.IndexedSeq(G__19006__a,0);
}
return unchecked_subtract_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__19005);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_subtract_int.cljs$lang$maxFixedArity = 2;
unchecked_subtract_int.cljs$lang$applyTo = unchecked_subtract_int__3.cljs$lang$applyTo;
unchecked_subtract_int.cljs$core$IFn$_invoke$arity$1 = unchecked_subtract_int__1;
unchecked_subtract_int.cljs$core$IFn$_invoke$arity$2 = unchecked_subtract_int__2;
unchecked_subtract_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_subtract_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_subtract_int;
})()
;
cljs.core.fix = (function fix(q){
if((q >= (0))){
var G__19009 = q;
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__19009) : Math.floor.call(null,G__19009));
} else {
var G__19010 = q;
return (Math.ceil.cljs$core$IFn$_invoke$arity$1 ? Math.ceil.cljs$core$IFn$_invoke$arity$1(G__19010) : Math.ceil.call(null,G__19010));
}
});
/**
* Coerce to int by stripping decimal places.
*/
cljs.core.int$ = (function int$(x){
return (x | (0));
});
/**
* Coerce to int by stripping decimal places.
*/
cljs.core.unchecked_int = (function unchecked_int(x){
return cljs.core.fix(x);
});
/**
* Coerce to long by stripping decimal places. Identical to `int'.
*/
cljs.core.long$ = (function long$(x){
return cljs.core.fix(x);
});
/**
* Coerce to long by stripping decimal places. Identical to `int'.
*/
cljs.core.unchecked_long = (function unchecked_long(x){
return cljs.core.fix(x);
});
cljs.core.booleans = (function booleans(x){
return x;
});
cljs.core.bytes = (function bytes(x){
return x;
});
cljs.core.chars = (function chars(x){
return x;
});
cljs.core.shorts = (function shorts(x){
return x;
});
cljs.core.ints = (function ints(x){
return x;
});
cljs.core.floats = (function floats(x){
return x;
});
cljs.core.doubles = (function doubles(x){
return x;
});
cljs.core.longs = (function longs(x){
return x;
});
/**
* Modulus of num and div with original javascript behavior. i.e. bug for negative numbers
*/
cljs.core.js_mod = (function js_mod(n,d){
return (n % d);
});
/**
* Modulus of num and div. Truncates toward negative infinity.
*/
cljs.core.mod = (function mod(n,d){
return (((n % d) + d) % d);
});
/**
* quot[ient] of dividing numerator by denominator.
*/
cljs.core.quot = (function quot(n,d){
var rem = (n % d);
return cljs.core.fix(((n - rem) / d));
});
/**
* remainder of dividing numerator by denominator.
*/
cljs.core.rem = (function rem(n,d){
var q = cljs.core.quot(n,d);
return (n - (d * q));
});
/**
* Bitwise exclusive or
* @param {...*} var_args
*/
cljs.core.bit_xor = (function() {
var bit_xor = null;
var bit_xor__2 = (function (x,y){
return (x ^ y);
});
var bit_xor__3 = (function() { 
var G__19011__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_xor,(x ^ y),more);
};
var G__19011 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__19012__i = 0, G__19012__a = new Array(arguments.length -  2);
while (G__19012__i < G__19012__a.length) {G__19012__a[G__19012__i] = arguments[G__19012__i + 2]; ++G__19012__i;}
  more = new cljs.core.IndexedSeq(G__19012__a,0);
} 
return G__19011__delegate.call(this,x,y,more);};
G__19011.cljs$lang$maxFixedArity = 2;
G__19011.cljs$lang$applyTo = (function (arglist__19013){
var x = cljs.core.first(arglist__19013);
arglist__19013 = cljs.core.next(arglist__19013);
var y = cljs.core.first(arglist__19013);
var more = cljs.core.rest(arglist__19013);
return G__19011__delegate(x,y,more);
});
G__19011.cljs$core$IFn$_invoke$arity$variadic = G__19011__delegate;
return G__19011;
})()
;
bit_xor = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_xor__2.call(this,x,y);
default:
var G__19014 = null;
if (arguments.length > 2) {
var G__19015__i = 0, G__19015__a = new Array(arguments.length -  2);
while (G__19015__i < G__19015__a.length) {G__19015__a[G__19015__i] = arguments[G__19015__i + 2]; ++G__19015__i;}
G__19014 = new cljs.core.IndexedSeq(G__19015__a,0);
}
return bit_xor__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__19014);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_xor.cljs$lang$maxFixedArity = 2;
bit_xor.cljs$lang$applyTo = bit_xor__3.cljs$lang$applyTo;
bit_xor.cljs$core$IFn$_invoke$arity$2 = bit_xor__2;
bit_xor.cljs$core$IFn$_invoke$arity$variadic = bit_xor__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_xor;
})()
;
/**
* Bitwise and
* @param {...*} var_args
*/
cljs.core.bit_and = (function() {
var bit_and = null;
var bit_and__2 = (function (x,y){
return (x & y);
});
var bit_and__3 = (function() { 
var G__19016__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_and,(x & y),more);
};
var G__19016 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__19017__i = 0, G__19017__a = new Array(arguments.length -  2);
while (G__19017__i < G__19017__a.length) {G__19017__a[G__19017__i] = arguments[G__19017__i + 2]; ++G__19017__i;}
  more = new cljs.core.IndexedSeq(G__19017__a,0);
} 
return G__19016__delegate.call(this,x,y,more);};
G__19016.cljs$lang$maxFixedArity = 2;
G__19016.cljs$lang$applyTo = (function (arglist__19018){
var x = cljs.core.first(arglist__19018);
arglist__19018 = cljs.core.next(arglist__19018);
var y = cljs.core.first(arglist__19018);
var more = cljs.core.rest(arglist__19018);
return G__19016__delegate(x,y,more);
});
G__19016.cljs$core$IFn$_invoke$arity$variadic = G__19016__delegate;
return G__19016;
})()
;
bit_and = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_and__2.call(this,x,y);
default:
var G__19019 = null;
if (arguments.length > 2) {
var G__19020__i = 0, G__19020__a = new Array(arguments.length -  2);
while (G__19020__i < G__19020__a.length) {G__19020__a[G__19020__i] = arguments[G__19020__i + 2]; ++G__19020__i;}
G__19019 = new cljs.core.IndexedSeq(G__19020__a,0);
}
return bit_and__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__19019);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_and.cljs$lang$maxFixedArity = 2;
bit_and.cljs$lang$applyTo = bit_and__3.cljs$lang$applyTo;
bit_and.cljs$core$IFn$_invoke$arity$2 = bit_and__2;
bit_and.cljs$core$IFn$_invoke$arity$variadic = bit_and__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_and;
})()
;
/**
* Bitwise or
* @param {...*} var_args
*/
cljs.core.bit_or = (function() {
var bit_or = null;
var bit_or__2 = (function (x,y){
return (x | y);
});
var bit_or__3 = (function() { 
var G__19021__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_or,(x | y),more);
};
var G__19021 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__19022__i = 0, G__19022__a = new Array(arguments.length -  2);
while (G__19022__i < G__19022__a.length) {G__19022__a[G__19022__i] = arguments[G__19022__i + 2]; ++G__19022__i;}
  more = new cljs.core.IndexedSeq(G__19022__a,0);
} 
return G__19021__delegate.call(this,x,y,more);};
G__19021.cljs$lang$maxFixedArity = 2;
G__19021.cljs$lang$applyTo = (function (arglist__19023){
var x = cljs.core.first(arglist__19023);
arglist__19023 = cljs.core.next(arglist__19023);
var y = cljs.core.first(arglist__19023);
var more = cljs.core.rest(arglist__19023);
return G__19021__delegate(x,y,more);
});
G__19021.cljs$core$IFn$_invoke$arity$variadic = G__19021__delegate;
return G__19021;
})()
;
bit_or = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_or__2.call(this,x,y);
default:
var G__19024 = null;
if (arguments.length > 2) {
var G__19025__i = 0, G__19025__a = new Array(arguments.length -  2);
while (G__19025__i < G__19025__a.length) {G__19025__a[G__19025__i] = arguments[G__19025__i + 2]; ++G__19025__i;}
G__19024 = new cljs.core.IndexedSeq(G__19025__a,0);
}
return bit_or__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__19024);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_or.cljs$lang$maxFixedArity = 2;
bit_or.cljs$lang$applyTo = bit_or__3.cljs$lang$applyTo;
bit_or.cljs$core$IFn$_invoke$arity$2 = bit_or__2;
bit_or.cljs$core$IFn$_invoke$arity$variadic = bit_or__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_or;
})()
;
/**
* Bitwise and
* @param {...*} var_args
*/
cljs.core.bit_and_not = (function() {
var bit_and_not = null;
var bit_and_not__2 = (function (x,y){
return (x & ~y);
});
var bit_and_not__3 = (function() { 
var G__19026__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_and_not,(x & ~y),more);
};
var G__19026 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__19027__i = 0, G__19027__a = new Array(arguments.length -  2);
while (G__19027__i < G__19027__a.length) {G__19027__a[G__19027__i] = arguments[G__19027__i + 2]; ++G__19027__i;}
  more = new cljs.core.IndexedSeq(G__19027__a,0);
} 
return G__19026__delegate.call(this,x,y,more);};
G__19026.cljs$lang$maxFixedArity = 2;
G__19026.cljs$lang$applyTo = (function (arglist__19028){
var x = cljs.core.first(arglist__19028);
arglist__19028 = cljs.core.next(arglist__19028);
var y = cljs.core.first(arglist__19028);
var more = cljs.core.rest(arglist__19028);
return G__19026__delegate(x,y,more);
});
G__19026.cljs$core$IFn$_invoke$arity$variadic = G__19026__delegate;
return G__19026;
})()
;
bit_and_not = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_and_not__2.call(this,x,y);
default:
var G__19029 = null;
if (arguments.length > 2) {
var G__19030__i = 0, G__19030__a = new Array(arguments.length -  2);
while (G__19030__i < G__19030__a.length) {G__19030__a[G__19030__i] = arguments[G__19030__i + 2]; ++G__19030__i;}
G__19029 = new cljs.core.IndexedSeq(G__19030__a,0);
}
return bit_and_not__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__19029);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_and_not.cljs$lang$maxFixedArity = 2;
bit_and_not.cljs$lang$applyTo = bit_and_not__3.cljs$lang$applyTo;
bit_and_not.cljs$core$IFn$_invoke$arity$2 = bit_and_not__2;
bit_and_not.cljs$core$IFn$_invoke$arity$variadic = bit_and_not__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_and_not;
})()
;
/**
* Clear bit at index n
*/
cljs.core.bit_clear = (function bit_clear(x,n){
return (x & ~(1 << n));
});
/**
* Flip bit at index n
*/
cljs.core.bit_flip = (function bit_flip(x,n){
return (x ^ (1 << n));
});
/**
* Bitwise complement
*/
cljs.core.bit_not = (function bit_not(x){
return (~ x);
});
/**
* Set bit at index n
*/
cljs.core.bit_set = (function bit_set(x,n){
return (x | (1 << n));
});
/**
* Test bit at index n
*/
cljs.core.bit_test = (function bit_test(x,n){
return ((x & (1 << n)) != 0);
});
/**
* Bitwise shift left
*/
cljs.core.bit_shift_left = (function bit_shift_left(x,n){
return (x << n);
});
/**
* Bitwise shift right
*/
cljs.core.bit_shift_right = (function bit_shift_right(x,n){
return (x >> n);
});
/**
* DEPRECATED: Bitwise shift right with zero fill
*/
cljs.core.bit_shift_right_zero_fill = (function bit_shift_right_zero_fill(x,n){
return (x >>> n);
});
/**
* Bitwise shift right with zero fill
*/
cljs.core.unsigned_bit_shift_right = (function unsigned_bit_shift_right(x,n){
return (x >>> n);
});
/**
* Counts the number of bits set in n
*/
cljs.core.bit_count = (function bit_count(v){
var v__$1 = (v - ((v >> (1)) & (1431655765)));
var v__$2 = ((v__$1 & (858993459)) + ((v__$1 >> (2)) & (858993459)));
return ((((v__$2 + (v__$2 >> (4))) & (252645135)) * (16843009)) >> (24));
});
/**
* Returns non-nil if nums all have the equivalent
* value, otherwise false. Behavior on non nums is
* undefined.
* @param {...*} var_args
*/
cljs.core._EQ__EQ_ = (function() {
var _EQ__EQ_ = null;
var _EQ__EQ___1 = (function (x){
return true;
});
var _EQ__EQ___2 = (function (x,y){
return cljs.core._equiv(x,y);
});
var _EQ__EQ___3 = (function() { 
var G__19035__delegate = function (x,y,more){
while(true){
if(_EQ__EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
if(cljs.core.next(more)){
var G__19036 = y;
var G__19037 = cljs.core.first(more);
var G__19038 = cljs.core.next(more);
x = G__19036;
y = G__19037;
more = G__19038;
continue;
} else {
return _EQ__EQ_.cljs$core$IFn$_invoke$arity$2(y,cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__19035 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__19039__i = 0, G__19039__a = new Array(arguments.length -  2);
while (G__19039__i < G__19039__a.length) {G__19039__a[G__19039__i] = arguments[G__19039__i + 2]; ++G__19039__i;}
  more = new cljs.core.IndexedSeq(G__19039__a,0);
} 
return G__19035__delegate.call(this,x,y,more);};
G__19035.cljs$lang$maxFixedArity = 2;
G__19035.cljs$lang$applyTo = (function (arglist__19040){
var x = cljs.core.first(arglist__19040);
arglist__19040 = cljs.core.next(arglist__19040);
var y = cljs.core.first(arglist__19040);
var more = cljs.core.rest(arglist__19040);
return G__19035__delegate(x,y,more);
});
G__19035.cljs$core$IFn$_invoke$arity$variadic = G__19035__delegate;
return G__19035;
})()
;
_EQ__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _EQ__EQ___1.call(this,x);
case 2:
return _EQ__EQ___2.call(this,x,y);
default:
var G__19041 = null;
if (arguments.length > 2) {
var G__19042__i = 0, G__19042__a = new Array(arguments.length -  2);
while (G__19042__i < G__19042__a.length) {G__19042__a[G__19042__i] = arguments[G__19042__i + 2]; ++G__19042__i;}
G__19041 = new cljs.core.IndexedSeq(G__19042__a,0);
}
return _EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__19041);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_EQ__EQ_.cljs$lang$maxFixedArity = 2;
_EQ__EQ_.cljs$lang$applyTo = _EQ__EQ___3.cljs$lang$applyTo;
_EQ__EQ_.cljs$core$IFn$_invoke$arity$1 = _EQ__EQ___1;
_EQ__EQ_.cljs$core$IFn$_invoke$arity$2 = _EQ__EQ___2;
_EQ__EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _EQ__EQ_;
})()
;
/**
* Returns true if num is greater than zero, else false
*/
cljs.core.pos_QMARK_ = (function pos_QMARK_(n){
return (n > (0));
});
cljs.core.zero_QMARK_ = (function zero_QMARK_(n){
return (n === (0));
});
/**
* Returns true if num is less than zero, else false
*/
cljs.core.neg_QMARK_ = (function neg_QMARK_(x){
return (x < (0));
});
/**
* Returns the nth next of coll, (seq coll) when n is 0.
*/
cljs.core.nthnext = (function nthnext(coll,n){
var n__$1 = n;
var xs = cljs.core.seq(coll);
while(true){
if((xs) && ((n__$1 > (0)))){
var G__19043 = (n__$1 - (1));
var G__19044 = cljs.core.next(xs);
n__$1 = G__19043;
xs = G__19044;
continue;
} else {
return xs;
}
break;
}
});
/**
* With no args, returns the empty string. With one arg x, returns
* x.toString().  (str nil) returns the empty string. With more than
* one arg, returns the concatenation of the str values of the args.
* @param {...*} var_args
*/
cljs.core.str = (function() {
var str = null;
var str__0 = (function (){
return "";
});
var str__1 = (function (x){
if((x == null)){
return "";
} else {
var G__19048 = x;
return goog.string.buildString(G__19048);
}
});
var str__2 = (function() { 
var G__19049__delegate = function (x,ys){
var sb = (new goog.string.StringBuffer(str.cljs$core$IFn$_invoke$arity$1(x)));
var more = ys;
while(true){
if(cljs.core.truth_(more)){
var G__19050 = sb.append(str.cljs$core$IFn$_invoke$arity$1(cljs.core.first(more)));
var G__19051 = cljs.core.next(more);
sb = G__19050;
more = G__19051;
continue;
} else {
return sb.toString();
}
break;
}
};
var G__19049 = function (x,var_args){
var ys = null;
if (arguments.length > 1) {
var G__19052__i = 0, G__19052__a = new Array(arguments.length -  1);
while (G__19052__i < G__19052__a.length) {G__19052__a[G__19052__i] = arguments[G__19052__i + 1]; ++G__19052__i;}
  ys = new cljs.core.IndexedSeq(G__19052__a,0);
} 
return G__19049__delegate.call(this,x,ys);};
G__19049.cljs$lang$maxFixedArity = 1;
G__19049.cljs$lang$applyTo = (function (arglist__19053){
var x = cljs.core.first(arglist__19053);
var ys = cljs.core.rest(arglist__19053);
return G__19049__delegate(x,ys);
});
G__19049.cljs$core$IFn$_invoke$arity$variadic = G__19049__delegate;
return G__19049;
})()
;
str = function(x,var_args){
var ys = var_args;
switch(arguments.length){
case 0:
return str__0.call(this);
case 1:
return str__1.call(this,x);
default:
var G__19054 = null;
if (arguments.length > 1) {
var G__19055__i = 0, G__19055__a = new Array(arguments.length -  1);
while (G__19055__i < G__19055__a.length) {G__19055__a[G__19055__i] = arguments[G__19055__i + 1]; ++G__19055__i;}
G__19054 = new cljs.core.IndexedSeq(G__19055__a,0);
}
return str__2.cljs$core$IFn$_invoke$arity$variadic(x, G__19054);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
str.cljs$lang$maxFixedArity = 1;
str.cljs$lang$applyTo = str__2.cljs$lang$applyTo;
str.cljs$core$IFn$_invoke$arity$0 = str__0;
str.cljs$core$IFn$_invoke$arity$1 = str__1;
str.cljs$core$IFn$_invoke$arity$variadic = str__2.cljs$core$IFn$_invoke$arity$variadic;
return str;
})()
;
/**
* Returns the substring of s beginning at start inclusive, and ending
* at end (defaults to length of string), exclusive.
*/
cljs.core.subs = (function() {
var subs = null;
var subs__2 = (function (s,start){
return s.substring(start);
});
var subs__3 = (function (s,start,end){
return s.substring(start,end);
});
subs = function(s,start,end){
switch(arguments.length){
case 2:
return subs__2.call(this,s,start);
case 3:
return subs__3.call(this,s,start,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
subs.cljs$core$IFn$_invoke$arity$2 = subs__2;
subs.cljs$core$IFn$_invoke$arity$3 = subs__3;
return subs;
})()
;

/**
* Assumes x is sequential. Returns true if x equals y, otherwise
* returns false.
*/
cljs.core.equiv_sequential = (function equiv_sequential(x,y){
return cljs.core.boolean$(((cljs.core.sequential_QMARK_(y))?(((cljs.core.counted_QMARK_(x)) && (cljs.core.counted_QMARK_(y)) && (!((cljs.core.count(x) === cljs.core.count(y)))))?false:(function (){var xs = cljs.core.seq(x);
var ys = cljs.core.seq(y);
while(true){
if((xs == null)){
return (ys == null);
} else {
if((ys == null)){
return false;
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(xs),cljs.core.first(ys))){
var G__19056 = cljs.core.next(xs);
var G__19057 = cljs.core.next(ys);
xs = G__19056;
ys = G__19057;
continue;
} else {
return false;

}
}
}
break;
}
})()):null));
});
cljs.core.hash_coll = (function hash_coll(coll){
if(cljs.core.seq(coll)){
var res = cljs.core.hash(cljs.core.first(coll));
var s = cljs.core.next(coll);
while(true){
if((s == null)){
return res;
} else {
var G__19058 = cljs.core.hash_combine(res,cljs.core.hash(cljs.core.first(s)));
var G__19059 = cljs.core.next(s);
res = G__19058;
s = G__19059;
continue;
}
break;
}
} else {
return (0);
}
});

cljs.core.hash_imap = (function hash_imap(m){
var h = (0);
var s = cljs.core.seq(m);
while(true){
if(s){
var e = cljs.core.first(s);
var G__19064 = ((h + (cljs.core.hash((function (){var G__19062 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__19062) : cljs.core.key.call(null,G__19062));
})()) ^ cljs.core.hash((function (){var G__19063 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__19063) : cljs.core.val.call(null,G__19063));
})()))) % (4503599627370496));
var G__19065 = cljs.core.next(s);
h = G__19064;
s = G__19065;
continue;
} else {
return h;
}
break;
}
});
cljs.core.hash_iset = (function hash_iset(s){
var h = (0);
var s__$1 = cljs.core.seq(s);
while(true){
if(s__$1){
var e = cljs.core.first(s__$1);
var G__19066 = ((h + cljs.core.hash(e)) % (4503599627370496));
var G__19067 = cljs.core.next(s__$1);
h = G__19066;
s__$1 = G__19067;
continue;
} else {
return h;
}
break;
}
});


/**
* Takes a JavaScript object and a map of names to functions and
* attaches said functions as methods on the object.  Any references to
* JavaScript's implicit this (via the this-as macro) will resolve to the
* object that the function is attached.
*/
cljs.core.extend_object_BANG_ = (function extend_object_BANG_(obj,fn_map){
var seq__19078_19088 = cljs.core.seq(fn_map);
var chunk__19079_19089 = null;
var count__19080_19090 = (0);
var i__19081_19091 = (0);
while(true){
if((i__19081_19091 < count__19080_19090)){
var vec__19082_19092 = chunk__19079_19089.cljs$core$IIndexed$_nth$arity$2(null,i__19081_19091);
var key_name_19093 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19082_19092,(0),null);
var f_19094 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19082_19092,(1),null);
var str_name_19095 = (function (){var G__19083 = key_name_19093;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__19083) : cljs.core.name.call(null,G__19083));
})();
(obj[str_name_19095] = f_19094);

var G__19096 = seq__19078_19088;
var G__19097 = chunk__19079_19089;
var G__19098 = count__19080_19090;
var G__19099 = (i__19081_19091 + (1));
seq__19078_19088 = G__19096;
chunk__19079_19089 = G__19097;
count__19080_19090 = G__19098;
i__19081_19091 = G__19099;
continue;
} else {
var temp__4126__auto___19100 = cljs.core.seq(seq__19078_19088);
if(temp__4126__auto___19100){
var seq__19078_19101__$1 = temp__4126__auto___19100;
if(cljs.core.chunked_seq_QMARK_(seq__19078_19101__$1)){
var c__8291__auto___19102 = (function (){var G__19084 = seq__19078_19101__$1;
return (cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1(G__19084) : cljs.core.chunk_first.call(null,G__19084));
})();
var G__19103 = (function (){var G__19085 = seq__19078_19101__$1;
return (cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1(G__19085) : cljs.core.chunk_rest.call(null,G__19085));
})();
var G__19104 = c__8291__auto___19102;
var G__19105 = cljs.core.count(c__8291__auto___19102);
var G__19106 = (0);
seq__19078_19088 = G__19103;
chunk__19079_19089 = G__19104;
count__19080_19090 = G__19105;
i__19081_19091 = G__19106;
continue;
} else {
var vec__19086_19107 = cljs.core.first(seq__19078_19101__$1);
var key_name_19108 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19086_19107,(0),null);
var f_19109 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19086_19107,(1),null);
var str_name_19110 = (function (){var G__19087 = key_name_19108;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__19087) : cljs.core.name.call(null,G__19087));
})();
(obj[str_name_19110] = f_19109);

var G__19111 = cljs.core.next(seq__19078_19101__$1);
var G__19112 = null;
var G__19113 = (0);
var G__19114 = (0);
seq__19078_19088 = G__19111;
chunk__19079_19089 = G__19112;
count__19080_19090 = G__19113;
i__19081_19091 = G__19114;
continue;
}
} else {
}
}
break;
}

return obj;
});

/**
* @constructor
*/
cljs.core.List = (function (meta,first,rest,count,__hash){
this.meta = meta;
this.first = first;
this.rest = rest;
this.count = count;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 65937646;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.List.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.List.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.List.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.List.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.List(self__.meta,self__.first,self__.rest,self__.count,self__.__hash));
});

cljs.core.List.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.count === (1))){
return null;
} else {
return self__.rest;
}
});

cljs.core.List.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.count;
});

cljs.core.List.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.List.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._rest(coll__$1);
});

cljs.core.List.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__7925__auto__ = self__.__hash;
if(!((h__7925__auto__ == null))){
return h__7925__auto__;
} else {
var h__7925__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__7925__auto____$1;

return h__7925__auto____$1;
}
});

cljs.core.List.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.List.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.List.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.List.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.count === (1))){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.List.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.List.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(meta__$1,self__.first,self__.rest,self__.count,self__.__hash));
});

cljs.core.List.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(self__.meta,o,coll__$1,(self__.count + (1)),null));
});

cljs.core.List.cljs$lang$type = true;

cljs.core.List.cljs$lang$ctorStr = "cljs.core/List";

cljs.core.List.cljs$lang$ctorPrWriter = (function (this__8091__auto__,writer__8092__auto__,opt__8093__auto__){
return cljs.core._write(writer__8092__auto__,"cljs.core/List");
});

cljs.core.__GT_List = (function __GT_List(meta,first,rest,count,__hash){
return (new cljs.core.List(meta,first,rest,count,__hash));
});

(cljs.core.List.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__8482__auto__ = this;
return cljs.core.es6_iterator(this__8482__auto__);
}));

/**
* @constructor
*/
cljs.core.EmptyList = (function (meta){
this.meta = meta;
this.cljs$lang$protocol_mask$partition0$ = 65937614;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.EmptyList.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.EmptyList.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.EmptyList.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.EmptyList.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.EmptyList(self__.meta));
});

cljs.core.EmptyList.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (0);
});

cljs.core.EmptyList.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
throw (new Error("Can't pop empty list"));
});

cljs.core.EmptyList.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.empty_ordered_hash;
});

cljs.core.EmptyList.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.EmptyList.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.EmptyList.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.EmptyList(meta__$1));
});

cljs.core.EmptyList.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(self__.meta,o,null,(1),null));
});

cljs.core.EmptyList.cljs$lang$type = true;

cljs.core.EmptyList.cljs$lang$ctorStr = "cljs.core/EmptyList";

cljs.core.EmptyList.cljs$lang$ctorPrWriter = (function (this__8091__auto__,writer__8092__auto__,opt__8093__auto__){
return cljs.core._write(writer__8092__auto__,"cljs.core/EmptyList");
});

cljs.core.__GT_EmptyList = (function __GT_EmptyList(meta){
return (new cljs.core.EmptyList(meta));
});

cljs.core.List.EMPTY = (new cljs.core.EmptyList(null));
(cljs.core.EmptyList.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__8482__auto__ = this;
return cljs.core.es6_iterator(this__8482__auto__);
}));
cljs.core.reversible_QMARK_ = (function reversible_QMARK_(coll){
var G__19116 = coll;
if(G__19116){
var bit__8185__auto__ = (G__19116.cljs$lang$protocol_mask$partition0$ & (134217728));
if((bit__8185__auto__) || (G__19116.cljs$core$IReversible$)){
return true;
} else {
if((!G__19116.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible,G__19116);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible,G__19116);
}
});
cljs.core.rseq = (function rseq(coll){
return cljs.core._rseq(coll);
});
/**
* Returns a seq of the items in coll in reverse order. Not lazy.
*/
cljs.core.reverse = (function reverse(coll){
if(cljs.core.reversible_QMARK_(coll)){
return cljs.core.rseq(coll);
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.List.EMPTY,coll);
}
});
/**
* @param {...*} var_args
*/
cljs.core.list = (function() { 
var list__delegate = function (xs){
var arr = ((((xs instanceof cljs.core.IndexedSeq)) && ((xs.i === (0))))?xs.arr:(function (){var arr = [];
var xs__$1 = xs;
while(true){
if(!((xs__$1 == null))){
arr.push(xs__$1.cljs$core$ISeq$_first$arity$1(null));

var G__19117 = xs__$1.cljs$core$INext$_next$arity$1(null);
xs__$1 = G__19117;
continue;
} else {
return arr;
}
break;
}
})());
var i = arr.length;
var r = cljs.core.List.EMPTY;
while(true){
if((i > (0))){
var G__19118 = (i - (1));
var G__19119 = r.cljs$core$ICollection$_conj$arity$2(null,(arr[(i - (1))]));
i = G__19118;
r = G__19119;
continue;
} else {
return r;
}
break;
}
};
var list = function (var_args){
var xs = null;
if (arguments.length > 0) {
var G__19120__i = 0, G__19120__a = new Array(arguments.length -  0);
while (G__19120__i < G__19120__a.length) {G__19120__a[G__19120__i] = arguments[G__19120__i + 0]; ++G__19120__i;}
  xs = new cljs.core.IndexedSeq(G__19120__a,0);
} 
return list__delegate.call(this,xs);};
list.cljs$lang$maxFixedArity = 0;
list.cljs$lang$applyTo = (function (arglist__19121){
var xs = cljs.core.seq(arglist__19121);
return list__delegate(xs);
});
list.cljs$core$IFn$_invoke$arity$variadic = list__delegate;
return list;
})()
;

/**
* @constructor
*/
cljs.core.Cons = (function (meta,first,rest,__hash){
this.meta = meta;
this.first = first;
this.rest = rest;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 65929452;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Cons.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Cons.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Cons.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.Cons.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Cons(self__.meta,self__.first,self__.rest,self__.__hash));
});

cljs.core.Cons.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.rest == null)){
return null;
} else {
return cljs.core.seq(self__.rest);
}
});

cljs.core.Cons.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__7925__auto__ = self__.__hash;
if(!((h__7925__auto__ == null))){
return h__7925__auto__;
} else {
var h__7925__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__7925__auto____$1;

return h__7925__auto____$1;
}
});

cljs.core.Cons.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.Cons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.Cons.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.Cons.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.rest == null)){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.Cons.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.Cons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.Cons(meta__$1,self__.first,self__.rest,self__.__hash));
});

cljs.core.Cons.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.Cons(null,o,coll__$1,self__.__hash));
});

cljs.core.Cons.cljs$lang$type = true;

cljs.core.Cons.cljs$lang$ctorStr = "cljs.core/Cons";

cljs.core.Cons.cljs$lang$ctorPrWriter = (function (this__8091__auto__,writer__8092__auto__,opt__8093__auto__){
return cljs.core._write(writer__8092__auto__,"cljs.core/Cons");
});

cljs.core.__GT_Cons = (function __GT_Cons(meta,first,rest,__hash){
return (new cljs.core.Cons(meta,first,rest,__hash));
});

(cljs.core.Cons.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__8482__auto__ = this;
return cljs.core.es6_iterator(this__8482__auto__);
}));
/**
* Returns a new seq where x is the first element and seq is the rest.
*/
cljs.core.cons = (function cons(x,coll){
if((function (){var or__7504__auto__ = (coll == null);
if(or__7504__auto__){
return or__7504__auto__;
} else {
var G__19125 = coll;
if(G__19125){
var bit__8178__auto__ = (G__19125.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__8178__auto__) || (G__19125.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
}
})()){
return (new cljs.core.Cons(null,x,coll,null));
} else {
return (new cljs.core.Cons(null,x,cljs.core.seq(coll),null));
}
});
cljs.core.list_QMARK_ = (function list_QMARK_(x){
var G__19127 = x;
if(G__19127){
var bit__8185__auto__ = (G__19127.cljs$lang$protocol_mask$partition0$ & (33554432));
if((bit__8185__auto__) || (G__19127.cljs$core$IList$)){
return true;
} else {
if((!G__19127.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IList,G__19127);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IList,G__19127);
}
});
cljs.core.hash_keyword = (function hash_keyword(k){
return ((cljs.core.hash_symbol(k) + (2654435769)) | (0));
});
cljs.core.compare_keywords = (function compare_keywords(a,b){
if((a.fqn === b.fqn)){
return (0);
} else {
if(cljs.core.truth_((function (){var and__7492__auto__ = cljs.core.not(a.ns);
if(and__7492__auto__){
return b.ns;
} else {
return and__7492__auto__;
}
})())){
return (-1);
} else {
if(cljs.core.truth_(a.ns)){
if(cljs.core.not(b.ns)){
return (1);
} else {
var nsc = (function (){var G__19134 = a.ns;
var G__19135 = b.ns;
return goog.array.defaultCompare(G__19134,G__19135);
})();
if(((0) === nsc)){
var G__19136 = a.name;
var G__19137 = b.name;
return goog.array.defaultCompare(G__19136,G__19137);
} else {
return nsc;
}
}
} else {
var G__19138 = a.name;
var G__19139 = b.name;
return goog.array.defaultCompare(G__19138,G__19139);

}
}
}
});

/**
* @constructor
*/
cljs.core.Keyword = (function (ns,name,fqn,_hash){
this.ns = ns;
this.name = name;
this.fqn = fqn;
this._hash = _hash;
this.cljs$lang$protocol_mask$partition0$ = 2153775105;
this.cljs$lang$protocol_mask$partition1$ = 4096;
})
cljs.core.Keyword.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (o,writer,_){
var self__ = this;
var o__$1 = this;
return cljs.core._write(writer,[cljs.core.str(":"),cljs.core.str(self__.fqn)].join(''));
});

cljs.core.Keyword.prototype.cljs$core$INamed$_name$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.name;
});

cljs.core.Keyword.prototype.cljs$core$INamed$_namespace$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.ns;
});

cljs.core.Keyword.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var h__7925__auto__ = self__._hash;
if(!((h__7925__auto__ == null))){
return h__7925__auto__;
} else {
var h__7925__auto____$1 = cljs.core.hash_keyword(this$__$1);
self__._hash = h__7925__auto____$1;

return h__7925__auto____$1;
}
});

cljs.core.Keyword.prototype.call = (function() {
var G__19141 = null;
var G__19141__2 = (function (self__,coll){
var self__ = this;
var self____$1 = this;
var kw = self____$1;
return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,kw);
});
var G__19141__3 = (function (self__,coll,not_found){
var self__ = this;
var self____$1 = this;
var kw = self____$1;
return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,kw,not_found);
});
G__19141 = function(self__,coll,not_found){
switch(arguments.length){
case 2:
return G__19141__2.call(this,self__,coll);
case 3:
return G__19141__3.call(this,self__,coll,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__19141.cljs$core$IFn$_invoke$arity$2 = G__19141__2;
G__19141.cljs$core$IFn$_invoke$arity$3 = G__19141__3;
return G__19141;
})()
;

cljs.core.Keyword.prototype.apply = (function (self__,args19140){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args19140)));
});

cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$1 = (function (coll){
var self__ = this;
var kw = this;
return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,kw);
});

cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$2 = (function (coll,not_found){
var self__ = this;
var kw = this;
return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,kw,not_found);
});

cljs.core.Keyword.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
if((other instanceof cljs.core.Keyword)){
return (self__.fqn === other.fqn);
} else {
return false;
}
});

cljs.core.Keyword.prototype.toString = (function (){
var self__ = this;
var _ = this;
return [cljs.core.str(":"),cljs.core.str(self__.fqn)].join('');
});

cljs.core.Keyword.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Keyword.cljs$lang$type = true;

cljs.core.Keyword.cljs$lang$ctorStr = "cljs.core/Keyword";

cljs.core.Keyword.cljs$lang$ctorPrWriter = (function (this__8091__auto__,writer__8092__auto__,opt__8093__auto__){
return cljs.core._write(writer__8092__auto__,"cljs.core/Keyword");
});

cljs.core.__GT_Keyword = (function __GT_Keyword(ns,name,fqn,_hash){
return (new cljs.core.Keyword(ns,name,fqn,_hash));
});

cljs.core.keyword_QMARK_ = (function keyword_QMARK_(x){
return (x instanceof cljs.core.Keyword);
});
cljs.core.keyword_identical_QMARK_ = (function keyword_identical_QMARK_(x,y){
if((x === y)){
return true;
} else {
if(((x instanceof cljs.core.Keyword)) && ((y instanceof cljs.core.Keyword))){
return (x.fqn === y.fqn);
} else {
return false;
}
}
});
/**
* Returns the namespace String of a symbol or keyword, or nil if not present.
*/
cljs.core.namespace = (function namespace(x){
if((function (){var G__19143 = x;
if(G__19143){
var bit__8178__auto__ = (G__19143.cljs$lang$protocol_mask$partition1$ & (4096));
if((bit__8178__auto__) || (G__19143.cljs$core$INamed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$INamed$_namespace$arity$1(null);
} else {
throw (new Error([cljs.core.str("Doesn't support namespace: "),cljs.core.str(x)].join('')));
}
});
/**
* Returns a Keyword with the given namespace and name.  Do not use :
* in the keyword strings, it will be added automatically.
*/
cljs.core.keyword = (function() {
var keyword = null;
var keyword__1 = (function (name){
if((name instanceof cljs.core.Keyword)){
return name;
} else {
if((name instanceof cljs.core.Symbol)){
return (new cljs.core.Keyword(cljs.core.namespace(name),(function (){var G__19145 = name;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__19145) : cljs.core.name.call(null,G__19145));
})(),name.str,null));
} else {
if(typeof name === 'string'){
var parts = name.split("/");
if((parts.length === (2))){
return (new cljs.core.Keyword((parts[(0)]),(parts[(1)]),name,null));
} else {
return (new cljs.core.Keyword(null,(parts[(0)]),name,null));
}
} else {
return null;
}
}
}
});
var keyword__2 = (function (ns,name){
return (new cljs.core.Keyword(ns,name,[cljs.core.str((cljs.core.truth_(ns)?[cljs.core.str(ns),cljs.core.str("/")].join(''):null)),cljs.core.str(name)].join(''),null));
});
keyword = function(ns,name){
switch(arguments.length){
case 1:
return keyword__1.call(this,ns);
case 2:
return keyword__2.call(this,ns,name);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
keyword.cljs$core$IFn$_invoke$arity$1 = keyword__1;
keyword.cljs$core$IFn$_invoke$arity$2 = keyword__2;
return keyword;
})()
;

/**
* @constructor
*/
cljs.core.LazySeq = (function (meta,fn,s,__hash){
this.meta = meta;
this.fn = fn;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
})
cljs.core.LazySeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.LazySeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.LazySeq.prototype.sval = (function (){
var self__ = this;
var coll = this;
if((self__.fn == null)){
return self__.s;
} else {
self__.s = (function (){return (self__.fn.cljs$core$IFn$_invoke$arity$0 ? self__.fn.cljs$core$IFn$_invoke$arity$0() : self__.fn.call(null));
})();

self__.fn = null;

return self__.s;
}
});

cljs.core.LazySeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.LazySeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if((self__.s == null)){
return null;
} else {
return cljs.core.next(self__.s);
}
});

cljs.core.LazySeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__7925__auto__ = self__.__hash;
if(!((h__7925__auto__ == null))){
return h__7925__auto__;
} else {
var h__7925__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__7925__auto____$1;

return h__7925__auto____$1;
}
});

cljs.core.LazySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.LazySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if((self__.s == null)){
return null;
} else {
return cljs.core.first(self__.s);
}
});

cljs.core.LazySeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if(!((self__.s == null))){
return cljs.core.rest(self__.s);
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.LazySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
coll__$1.sval();

if((self__.s == null)){
return null;
} else {
var ls = self__.s;
while(true){
if((ls instanceof cljs.core.LazySeq)){
var G__19146 = ls.sval();
ls = G__19146;
continue;
} else {
self__.s = ls;

return cljs.core.seq(self__.s);
}
break;
}
}
});

cljs.core.LazySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.LazySeq(meta__$1,self__.fn,self__.s,self__.__hash));
});

cljs.core.LazySeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.LazySeq.cljs$lang$type = true;

cljs.core.LazySeq.cljs$lang$ctorStr = "cljs.core/LazySeq";

cljs.core.LazySeq.cljs$lang$ctorPrWriter = (function (this__8091__auto__,writer__8092__auto__,opt__8093__auto__){
return cljs.core._write(writer__8092__auto__,"cljs.core/LazySeq");
});

cljs.core.__GT_LazySeq = (function __GT_LazySeq(meta,fn,s,__hash){
return (new cljs.core.LazySeq(meta,fn,s,__hash));
});

(cljs.core.LazySeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__8482__auto__ = this;
return cljs.core.es6_iterator(this__8482__auto__);
}));

/**
* @constructor
*/
cljs.core.ChunkBuffer = (function (buf,end){
this.buf = buf;
this.end = end;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2;
})
cljs.core.ChunkBuffer.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.end;
});

cljs.core.ChunkBuffer.prototype.add = (function (o){
var self__ = this;
var _ = this;
(self__.buf[self__.end] = o);

return self__.end = (self__.end + (1));
});

cljs.core.ChunkBuffer.prototype.chunk = (function (o){
var self__ = this;
var _ = this;
var ret = (new cljs.core.ArrayChunk(self__.buf,(0),self__.end));
self__.buf = null;

return ret;
});

cljs.core.ChunkBuffer.cljs$lang$type = true;

cljs.core.ChunkBuffer.cljs$lang$ctorStr = "cljs.core/ChunkBuffer";

cljs.core.ChunkBuffer.cljs$lang$ctorPrWriter = (function (this__8091__auto__,writer__8092__auto__,opt__8093__auto__){
return cljs.core._write(writer__8092__auto__,"cljs.core/ChunkBuffer");
});

cljs.core.__GT_ChunkBuffer = (function __GT_ChunkBuffer(buf,end){
return (new cljs.core.ChunkBuffer(buf,end));
});

cljs.core.chunk_buffer = (function chunk_buffer(capacity){
return (new cljs.core.ChunkBuffer((new Array(capacity)),(0)));
});

/**
* @constructor
*/
cljs.core.ArrayChunk = (function (arr,off,end){
this.arr = arr;
this.off = off;
this.end = end;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 524306;
})
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,(self__.arr[self__.off]),(self__.off + (1)));
});

cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,start,self__.off);
});

cljs.core.ArrayChunk.prototype.cljs$core$IChunk$ = true;

cljs.core.ArrayChunk.prototype.cljs$core$IChunk$_drop_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.off === self__.end)){
throw (new Error("-drop-first of empty chunk"));
} else {
return (new cljs.core.ArrayChunk(self__.arr,(self__.off + (1)),self__.end));
}
});

cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,i){
var self__ = this;
var coll__$1 = this;
return (self__.arr[(self__.off + i)]);
});

cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,i,not_found){
var self__ = this;
var coll__$1 = this;
if(((i >= (0))) && ((i < (self__.end - self__.off)))){
return (self__.arr[(self__.off + i)]);
} else {
return not_found;
}
});

cljs.core.ArrayChunk.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.end - self__.off);
});

cljs.core.ArrayChunk.cljs$lang$type = true;

cljs.core.ArrayChunk.cljs$lang$ctorStr = "cljs.core/ArrayChunk";

cljs.core.ArrayChunk.cljs$lang$ctorPrWriter = (function (this__8091__auto__,writer__8092__auto__,opt__8093__auto__){
return cljs.core._write(writer__8092__auto__,"cljs.core/ArrayChunk");
});

cljs.core.__GT_ArrayChunk = (function __GT_ArrayChunk(arr,off,end){
return (new cljs.core.ArrayChunk(arr,off,end));
});

cljs.core.array_chunk = (function() {
var array_chunk = null;
var array_chunk__1 = (function (arr){
return (new cljs.core.ArrayChunk(arr,(0),arr.length));
});
var array_chunk__2 = (function (arr,off){
return (new cljs.core.ArrayChunk(arr,off,arr.length));
});
var array_chunk__3 = (function (arr,off,end){
return (new cljs.core.ArrayChunk(arr,off,end));
});
array_chunk = function(arr,off,end){
switch(arguments.length){
case 1:
return array_chunk__1.call(this,arr);
case 2:
return array_chunk__2.call(this,arr,off);
case 3:
return array_chunk__3.call(this,arr,off,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
array_chunk.cljs$core$IFn$_invoke$arity$1 = array_chunk__1;
array_chunk.cljs$core$IFn$_invoke$arity$2 = array_chunk__2;
array_chunk.cljs$core$IFn$_invoke$arity$3 = array_chunk__3;
return array_chunk;
})()
;

/**
* @constructor
*/
cljs.core.ChunkedCons = (function (chunk,more,meta,__hash){
this.chunk = chunk;
this.more = more;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 31850732;
this.cljs$lang$protocol_mask$partition1$ = 1536;
})
cljs.core.ChunkedCons.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ChunkedCons.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ChunkedCons.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ChunkedCons.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core._count(self__.chunk) > (1))){
return (new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk),self__.more,self__.meta,null));
} else {
var more__$1 = cljs.core._seq(self__.more);
if((more__$1 == null)){
return null;
} else {
return more__$1;
}
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__7925__auto__ = self__.__hash;
if(!((h__7925__auto__ == null))){
return h__7925__auto__;
} else {
var h__7925__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__7925__auto____$1;

return h__7925__auto____$1;
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ChunkedCons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.chunk,(0));
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core._count(self__.chunk) > (1))){
return (new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk),self__.more,self__.meta,null));
} else {
if((self__.more == null)){
return cljs.core.List.EMPTY;
} else {
return self__.more;
}
}
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.chunk;
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.more == null)){
return cljs.core.List.EMPTY;
} else {
return self__.more;
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,m){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ChunkedCons(self__.chunk,self__.more,m,self__.__hash));
});

cljs.core.ChunkedCons.prototype.cljs$core$ICollection$_conj$arity$2 = (function (this$,o){
var self__ = this;
var this$__$1 = this;
return cljs.core.cons(o,this$__$1);
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.more == null)){
return null;
} else {
return self__.more;
}
});

cljs.core.ChunkedCons.cljs$lang$type = true;

cljs.core.ChunkedCons.cljs$lang$ctorStr = "cljs.core/ChunkedCons";

cljs.core.ChunkedCons.cljs$lang$ctorPrWriter = (function (this__8091__auto__,writer__8092__auto__,opt__8093__auto__){
return cljs.core._write(writer__8092__auto__,"cljs.core/ChunkedCons");
});

cljs.core.__GT_ChunkedCons = (function __GT_ChunkedCons(chunk,more,meta,__hash){
return (new cljs.core.ChunkedCons(chunk,more,meta,__hash));
});

(cljs.core.ChunkedCons.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__8482__auto__ = this;
return cljs.core.es6_iterator(this__8482__auto__);
}));
cljs.core.chunk_cons = (function chunk_cons(chunk,rest){
if((cljs.core._count(chunk) === (0))){
return rest;
} else {
return (new cljs.core.ChunkedCons(chunk,rest,null,null));
}
});
cljs.core.chunk_append = (function chunk_append(b,x){
return b.add(x);
});
cljs.core.chunk = (function chunk(b){
return b.chunk();
});
cljs.core.chunk_first = (function chunk_first(s){
return cljs.core._chunked_first(s);
});
cljs.core.chunk_rest = (function chunk_rest(s){
return cljs.core._chunked_rest(s);
});
cljs.core.chunk_next = (function chunk_next(s){
if((function (){var G__19148 = s;
if(G__19148){
var bit__8178__auto__ = (G__19148.cljs$lang$protocol_mask$partition1$ & (1024));
if((bit__8178__auto__) || (G__19148.cljs$core$IChunkedNext$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core._chunked_next(s);
} else {
return cljs.core.seq(cljs.core._chunked_rest(s));
}
});
/**
* Naive impl of to-array as a start.
*/
cljs.core.to_array = (function to_array(s){
var ary = [];
var s__$1 = s;
while(true){
if(cljs.core.seq(s__$1)){
ary.push(cljs.core.first(s__$1));

var G__19149 = cljs.core.next(s__$1);
s__$1 = G__19149;
continue;
} else {
return ary;
}
break;
}
});
/**
* Returns a (potentially-ragged) 2-dimensional array
* containing the contents of coll.
*/
cljs.core.to_array_2d = (function to_array_2d(coll){
var ret = (new Array(cljs.core.count(coll)));
var i_19150 = (0);
var xs_19151 = cljs.core.seq(coll);
while(true){
if(xs_19151){
(ret[i_19150] = cljs.core.to_array(cljs.core.first(xs_19151)));

var G__19152 = (i_19150 + (1));
var G__19153 = cljs.core.next(xs_19151);
i_19150 = G__19152;
xs_19151 = G__19153;
continue;
} else {
}
break;
}

return ret;
});
cljs.core.int_array = (function() {
var int_array = null;
var int_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return int_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var int_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__19156 = (i + (1));
var G__19157 = cljs.core.next(s__$1);
i = G__19156;
s__$1 = G__19157;
continue;
} else {
return a;
}
break;
}
} else {
var n__8391__auto___19158 = size;
var i_19159 = (0);
while(true){
if((i_19159 < n__8391__auto___19158)){
(a[i_19159] = init_val_or_seq);

var G__19160 = (i_19159 + (1));
i_19159 = G__19160;
continue;
} else {
}
break;
}

return a;
}
});
int_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return int_array__1.call(this,size);
case 2:
return int_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
int_array.cljs$core$IFn$_invoke$arity$1 = int_array__1;
int_array.cljs$core$IFn$_invoke$arity$2 = int_array__2;
return int_array;
})()
;
cljs.core.long_array = (function() {
var long_array = null;
var long_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return long_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var long_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__19163 = (i + (1));
var G__19164 = cljs.core.next(s__$1);
i = G__19163;
s__$1 = G__19164;
continue;
} else {
return a;
}
break;
}
} else {
var n__8391__auto___19165 = size;
var i_19166 = (0);
while(true){
if((i_19166 < n__8391__auto___19165)){
(a[i_19166] = init_val_or_seq);

var G__19167 = (i_19166 + (1));
i_19166 = G__19167;
continue;
} else {
}
break;
}

return a;
}
});
long_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return long_array__1.call(this,size);
case 2:
return long_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
long_array.cljs$core$IFn$_invoke$arity$1 = long_array__1;
long_array.cljs$core$IFn$_invoke$arity$2 = long_array__2;
return long_array;
})()
;
cljs.core.double_array = (function() {
var double_array = null;
var double_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return double_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var double_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__19170 = (i + (1));
var G__19171 = cljs.core.next(s__$1);
i = G__19170;
s__$1 = G__19171;
continue;
} else {
return a;
}
break;
}
} else {
var n__8391__auto___19172 = size;
var i_19173 = (0);
while(true){
if((i_19173 < n__8391__auto___19172)){
(a[i_19173] = init_val_or_seq);

var G__19174 = (i_19173 + (1));
i_19173 = G__19174;
continue;
} else {
}
break;
}

return a;
}
});
double_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return double_array__1.call(this,size);
case 2:
return double_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
double_array.cljs$core$IFn$_invoke$arity$1 = double_array__1;
double_array.cljs$core$IFn$_invoke$arity$2 = double_array__2;
return double_array;
})()
;
cljs.core.object_array = (function() {
var object_array = null;
var object_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return object_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var object_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__19177 = (i + (1));
var G__19178 = cljs.core.next(s__$1);
i = G__19177;
s__$1 = G__19178;
continue;
} else {
return a;
}
break;
}
} else {
var n__8391__auto___19179 = size;
var i_19180 = (0);
while(true){
if((i_19180 < n__8391__auto___19179)){
(a[i_19180] = init_val_or_seq);

var G__19181 = (i_19180 + (1));
i_19180 = G__19181;
continue;
} else {
}
break;
}

return a;
}
});
object_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return object_array__1.call(this,size);
case 2:
return object_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
object_array.cljs$core$IFn$_invoke$arity$1 = object_array__1;
object_array.cljs$core$IFn$_invoke$arity$2 = object_array__2;
return object_array;
})()
;
cljs.core.bounded_count = (function bounded_count(s,n){
if(cljs.core.counted_QMARK_(s)){
return cljs.core.count(s);
} else {
var s__$1 = s;
var i = n;
var sum = (0);
while(true){
if(((i > (0))) && (cljs.core.seq(s__$1))){
var G__19182 = cljs.core.next(s__$1);
var G__19183 = (i - (1));
var G__19184 = (sum + (1));
s__$1 = G__19182;
i = G__19183;
sum = G__19184;
continue;
} else {
return sum;
}
break;
}
}
});
cljs.core.spread = (function spread(arglist){
if((arglist == null)){
return null;
} else {
if((cljs.core.next(arglist) == null)){
return cljs.core.seq(cljs.core.first(arglist));
} else {
return cljs.core.cons(cljs.core.first(arglist),spread(cljs.core.next(arglist)));

}
}
});
/**
* Returns a lazy seq representing the concatenation of the elements in the supplied colls.
* @param {...*} var_args
*/
cljs.core.concat = (function() {
var concat = null;
var concat__0 = (function (){
return (new cljs.core.LazySeq(null,(function (){
return null;
}),null,null));
});
var concat__1 = (function (x){
return (new cljs.core.LazySeq(null,(function (){
return x;
}),null,null));
});
var concat__2 = (function (x,y){
return (new cljs.core.LazySeq(null,(function (){
var s = cljs.core.seq(x);
if(s){
if(cljs.core.chunked_seq_QMARK_(s)){
return cljs.core.chunk_cons(cljs.core.chunk_first(s),concat.cljs$core$IFn$_invoke$arity$2(cljs.core.chunk_rest(s),y));
} else {
return cljs.core.cons(cljs.core.first(s),concat.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s),y));
}
} else {
return y;
}
}),null,null));
});
var concat__3 = (function() { 
var G__19204__delegate = function (x,y,zs){
var cat = (function cat(xys,zs__$1){
return (new cljs.core.LazySeq(null,(function (){
var xys__$1 = cljs.core.seq(xys);
if(xys__$1){
if(cljs.core.chunked_seq_QMARK_(xys__$1)){
return cljs.core.chunk_cons(cljs.core.chunk_first(xys__$1),cat(cljs.core.chunk_rest(xys__$1),zs__$1));
} else {
return cljs.core.cons(cljs.core.first(xys__$1),cat(cljs.core.rest(xys__$1),zs__$1));
}
} else {
if(cljs.core.truth_(zs__$1)){
return cat(cljs.core.first(zs__$1),cljs.core.next(zs__$1));
} else {
return null;
}
}
}),null,null));
});
return cat(concat.cljs$core$IFn$_invoke$arity$2(x,y),zs);
};
var G__19204 = function (x,y,var_args){
var zs = null;
if (arguments.length > 2) {
var G__19205__i = 0, G__19205__a = new Array(arguments.length -  2);
while (G__19205__i < G__19205__a.length) {G__19205__a[G__19205__i] = arguments[G__19205__i + 2]; ++G__19205__i;}
  zs = new cljs.core.IndexedSeq(G__19205__a,0);
} 
return G__19204__delegate.call(this,x,y,zs);};
G__19204.cljs$lang$maxFixedArity = 2;
G__19204.cljs$lang$applyTo = (function (arglist__19206){
var x = cljs.core.first(arglist__19206);
arglist__19206 = cljs.core.next(arglist__19206);
var y = cljs.core.first(arglist__19206);
var zs = cljs.core.rest(arglist__19206);
return G__19204__delegate(x,y,zs);
});
G__19204.cljs$core$IFn$_invoke$arity$variadic = G__19204__delegate;
return G__19204;
})()
;
concat = function(x,y,var_args){
var zs = var_args;
switch(arguments.length){
case 0:
return concat__0.call(this);
case 1:
return concat__1.call(this,x);
case 2:
return concat__2.call(this,x,y);
default:
var G__19207 = null;
if (arguments.length > 2) {
var G__19208__i = 0, G__19208__a = new Array(arguments.length -  2);
while (G__19208__i < G__19208__a.length) {G__19208__a[G__19208__i] = arguments[G__19208__i + 2]; ++G__19208__i;}
G__19207 = new cljs.core.IndexedSeq(G__19208__a,0);
}
return concat__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__19207);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
concat.cljs$lang$maxFixedArity = 2;
concat.cljs$lang$applyTo = concat__3.cljs$lang$applyTo;
concat.cljs$core$IFn$_invoke$arity$0 = concat__0;
concat.cljs$core$IFn$_invoke$arity$1 = concat__1;
concat.cljs$core$IFn$_invoke$arity$2 = concat__2;
concat.cljs$core$IFn$_invoke$arity$variadic = concat__3.cljs$core$IFn$_invoke$arity$variadic;
return concat;
})()
;
/**
* Creates a new list containing the items prepended to the rest, the
* last of which will be treated as a sequence.
* @param {...*} var_args
*/
cljs.core.list_STAR_ = (function() {
var list_STAR_ = null;
var list_STAR___1 = (function (args){
return cljs.core.seq(args);
});
var list_STAR___2 = (function (a,args){
return cljs.core.cons(a,args);
});
var list_STAR___3 = (function (a,b,args){
return cljs.core.cons(a,cljs.core.cons(b,args));
});
var list_STAR___4 = (function (a,b,c,args){
return cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,args)));
});
var list_STAR___5 = (function() { 
var G__19209__delegate = function (a,b,c,d,more){
return cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,cljs.core.cons(d,cljs.core.spread(more)))));
};
var G__19209 = function (a,b,c,d,var_args){
var more = null;
if (arguments.length > 4) {
var G__19210__i = 0, G__19210__a = new Array(arguments.length -  4);
while (G__19210__i < G__19210__a.length) {G__19210__a[G__19210__i] = arguments[G__19210__i + 4]; ++G__19210__i;}
  more = new cljs.core.IndexedSeq(G__19210__a,0);
} 
return G__19209__delegate.call(this,a,b,c,d,more);};
G__19209.cljs$lang$maxFixedArity = 4;
G__19209.cljs$lang$applyTo = (function (arglist__19211){
var a = cljs.core.first(arglist__19211);
arglist__19211 = cljs.core.next(arglist__19211);
var b = cljs.core.first(arglist__19211);
arglist__19211 = cljs.core.next(arglist__19211);
var c = cljs.core.first(arglist__19211);
arglist__19211 = cljs.core.next(arglist__19211);
var d = cljs.core.first(arglist__19211);
var more = cljs.core.rest(arglist__19211);
return G__19209__delegate(a,b,c,d,more);
});
G__19209.cljs$core$IFn$_invoke$arity$variadic = G__19209__delegate;
return G__19209;
})()
;
list_STAR_ = function(a,b,c,d,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return list_STAR___1.call(this,a);
case 2:
return list_STAR___2.call(this,a,b);
case 3:
return list_STAR___3.call(this,a,b,c);
case 4:
return list_STAR___4.call(this,a,b,c,d);
default:
var G__19212 = null;
if (arguments.length > 4) {
var G__19213__i = 0, G__19213__a = new Array(arguments.length -  4);
while (G__19213__i < G__19213__a.length) {G__19213__a[G__19213__i] = arguments[G__19213__i + 4]; ++G__19213__i;}
G__19212 = new cljs.core.IndexedSeq(G__19213__a,0);
}
return list_STAR___5.cljs$core$IFn$_invoke$arity$variadic(a,b,c,d, G__19212);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
list_STAR_.cljs$lang$maxFixedArity = 4;
list_STAR_.cljs$lang$applyTo = list_STAR___5.cljs$lang$applyTo;
list_STAR_.cljs$core$IFn$_invoke$arity$1 = list_STAR___1;
list_STAR_.cljs$core$IFn$_invoke$arity$2 = list_STAR___2;
list_STAR_.cljs$core$IFn$_invoke$arity$3 = list_STAR___3;
list_STAR_.cljs$core$IFn$_invoke$arity$4 = list_STAR___4;
list_STAR_.cljs$core$IFn$_invoke$arity$variadic = list_STAR___5.cljs$core$IFn$_invoke$arity$variadic;
return list_STAR_;
})()
;
/**
* Returns a new, transient version of the collection, in constant time.
*/
cljs.core.transient$ = (function transient$(coll){
return cljs.core._as_transient(coll);
});
/**
* Returns a new, persistent version of the transient collection, in
* constant time. The transient collection cannot be used after this
* call, any such use will throw an exception.
*/
cljs.core.persistent_BANG_ = (function persistent_BANG_(tcoll){
return cljs.core._persistent_BANG_(tcoll);
});
/**
* Adds x to the transient collection, and return coll. The 'addition'
* may happen at different 'places' depending on the concrete type.
* @param {...*} var_args
*/
cljs.core.conj_BANG_ = (function() {
var conj_BANG_ = null;
var conj_BANG___0 = (function (){
return cljs.core.transient$(cljs.core.PersistentVector.EMPTY);
});
var conj_BANG___1 = (function (coll){
return coll;
});
var conj_BANG___2 = (function (tcoll,val){
return cljs.core._conj_BANG_(tcoll,val);
});
var conj_BANG___3 = (function() { 
var G__19214__delegate = function (tcoll,val,vals){
while(true){
var ntcoll = cljs.core._conj_BANG_(tcoll,val);
if(cljs.core.truth_(vals)){
var G__19215 = ntcoll;
var G__19216 = cljs.core.first(vals);
var G__19217 = cljs.core.next(vals);
tcoll = G__19215;
val = G__19216;
vals = G__19217;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__19214 = function (tcoll,val,var_args){
var vals = null;
if (arguments.length > 2) {
var G__19218__i = 0, G__19218__a = new Array(arguments.length -  2);
while (G__19218__i < G__19218__a.length) {G__19218__a[G__19218__i] = arguments[G__19218__i + 2]; ++G__19218__i;}
  vals = new cljs.core.IndexedSeq(G__19218__a,0);
} 
return G__19214__delegate.call(this,tcoll,val,vals);};
G__19214.cljs$lang$maxFixedArity = 2;
G__19214.cljs$lang$applyTo = (function (arglist__19219){
var tcoll = cljs.core.first(arglist__19219);
arglist__19219 = cljs.core.next(arglist__19219);
var val = cljs.core.first(arglist__19219);
var vals = cljs.core.rest(arglist__19219);
return G__19214__delegate(tcoll,val,vals);
});
G__19214.cljs$core$IFn$_invoke$arity$variadic = G__19214__delegate;
return G__19214;
})()
;
conj_BANG_ = function(tcoll,val,var_args){
var vals = var_args;
switch(arguments.length){
case 0:
return conj_BANG___0.call(this);
case 1:
return conj_BANG___1.call(this,tcoll);
case 2:
return conj_BANG___2.call(this,tcoll,val);
default:
var G__19220 = null;
if (arguments.length > 2) {
var G__19221__i = 0, G__19221__a = new Array(arguments.length -  2);
while (G__19221__i < G__19221__a.length) {G__19221__a[G__19221__i] = arguments[G__19221__i + 2]; ++G__19221__i;}
G__19220 = new cljs.core.IndexedSeq(G__19221__a,0);
}
return conj_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,val, G__19220);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
conj_BANG_.cljs$lang$maxFixedArity = 2;
conj_BANG_.cljs$lang$applyTo = conj_BANG___3.cljs$lang$applyTo;
conj_BANG_.cljs$core$IFn$_invoke$arity$0 = conj_BANG___0;
conj_BANG_.cljs$core$IFn$_invoke$arity$1 = conj_BANG___1;
conj_BANG_.cljs$core$IFn$_invoke$arity$2 = conj_BANG___2;
conj_BANG_.cljs$core$IFn$_invoke$arity$variadic = conj_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return conj_BANG_;
})()
;
/**
* When applied to a transient map, adds mapping of key(s) to
* val(s). When applied to a transient vector, sets the val at index.
* Note - index must be <= (count vector). Returns coll.
* @param {...*} var_args
*/
cljs.core.assoc_BANG_ = (function() {
var assoc_BANG_ = null;
var assoc_BANG___3 = (function (tcoll,key,val){
return cljs.core._assoc_BANG_(tcoll,key,val);
});
var assoc_BANG___4 = (function() { 
var G__19222__delegate = function (tcoll,key,val,kvs){
while(true){
var ntcoll = cljs.core._assoc_BANG_(tcoll,key,val);
if(cljs.core.truth_(kvs)){
var G__19223 = ntcoll;
var G__19224 = cljs.core.first(kvs);
var G__19225 = cljs.core.second(kvs);
var G__19226 = cljs.core.nnext(kvs);
tcoll = G__19223;
key = G__19224;
val = G__19225;
kvs = G__19226;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__19222 = function (tcoll,key,val,var_args){
var kvs = null;
if (arguments.length > 3) {
var G__19227__i = 0, G__19227__a = new Array(arguments.length -  3);
while (G__19227__i < G__19227__a.length) {G__19227__a[G__19227__i] = arguments[G__19227__i + 3]; ++G__19227__i;}
  kvs = new cljs.core.IndexedSeq(G__19227__a,0);
} 
return G__19222__delegate.call(this,tcoll,key,val,kvs);};
G__19222.cljs$lang$maxFixedArity = 3;
G__19222.cljs$lang$applyTo = (function (arglist__19228){
var tcoll = cljs.core.first(arglist__19228);
arglist__19228 = cljs.core.next(arglist__19228);
var key = cljs.core.first(arglist__19228);
arglist__19228 = cljs.core.next(arglist__19228);
var val = cljs.core.first(arglist__19228);
var kvs = cljs.core.rest(arglist__19228);
return G__19222__delegate(tcoll,key,val,kvs);
});
G__19222.cljs$core$IFn$_invoke$arity$variadic = G__19222__delegate;
return G__19222;
})()
;
assoc_BANG_ = function(tcoll,key,val,var_args){
var kvs = var_args;
switch(arguments.length){
case 3:
return assoc_BANG___3.call(this,tcoll,key,val);
default:
var G__19229 = null;
if (arguments.length > 3) {
var G__19230__i = 0, G__19230__a = new Array(arguments.length -  3);
while (G__19230__i < G__19230__a.length) {G__19230__a[G__19230__i] = arguments[G__19230__i + 3]; ++G__19230__i;}
G__19229 = new cljs.core.IndexedSeq(G__19230__a,0);
}
return assoc_BANG___4.cljs$core$IFn$_invoke$arity$variadic(tcoll,key,val, G__19229);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
assoc_BANG_.cljs$lang$maxFixedArity = 3;
assoc_BANG_.cljs$lang$applyTo = assoc_BANG___4.cljs$lang$applyTo;
assoc_BANG_.cljs$core$IFn$_invoke$arity$3 = assoc_BANG___3;
assoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = assoc_BANG___4.cljs$core$IFn$_invoke$arity$variadic;
return assoc_BANG_;
})()
;
/**
* Returns a transient map that doesn't contain a mapping for key(s).
* @param {...*} var_args
*/
cljs.core.dissoc_BANG_ = (function() {
var dissoc_BANG_ = null;
var dissoc_BANG___2 = (function (tcoll,key){
return cljs.core._dissoc_BANG_(tcoll,key);
});
var dissoc_BANG___3 = (function() { 
var G__19231__delegate = function (tcoll,key,ks){
while(true){
var ntcoll = cljs.core._dissoc_BANG_(tcoll,key);
if(cljs.core.truth_(ks)){
var G__19232 = ntcoll;
var G__19233 = cljs.core.first(ks);
var G__19234 = cljs.core.next(ks);
tcoll = G__19232;
key = G__19233;
ks = G__19234;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__19231 = function (tcoll,key,var_args){
var ks = null;
if (arguments.length > 2) {
var G__19235__i = 0, G__19235__a = new Array(arguments.length -  2);
while (G__19235__i < G__19235__a.length) {G__19235__a[G__19235__i] = arguments[G__19235__i + 2]; ++G__19235__i;}
  ks = new cljs.core.IndexedSeq(G__19235__a,0);
} 
return G__19231__delegate.call(this,tcoll,key,ks);};
G__19231.cljs$lang$maxFixedArity = 2;
G__19231.cljs$lang$applyTo = (function (arglist__19236){
var tcoll = cljs.core.first(arglist__19236);
arglist__19236 = cljs.core.next(arglist__19236);
var key = cljs.core.first(arglist__19236);
var ks = cljs.core.rest(arglist__19236);
return G__19231__delegate(tcoll,key,ks);
});
G__19231.cljs$core$IFn$_invoke$arity$variadic = G__19231__delegate;
return G__19231;
})()
;
dissoc_BANG_ = function(tcoll,key,var_args){
var ks = var_args;
switch(arguments.length){
case 2:
return dissoc_BANG___2.call(this,tcoll,key);
default:
var G__19237 = null;
if (arguments.length > 2) {
var G__19238__i = 0, G__19238__a = new Array(arguments.length -  2);
while (G__19238__i < G__19238__a.length) {G__19238__a[G__19238__i] = arguments[G__19238__i + 2]; ++G__19238__i;}
G__19237 = new cljs.core.IndexedSeq(G__19238__a,0);
}
return dissoc_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,key, G__19237);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dissoc_BANG_.cljs$lang$maxFixedArity = 2;
dissoc_BANG_.cljs$lang$applyTo = dissoc_BANG___3.cljs$lang$applyTo;
dissoc_BANG_.cljs$core$IFn$_invoke$arity$2 = dissoc_BANG___2;
dissoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = dissoc_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return dissoc_BANG_;
})()
;
/**
* Removes the last item from a transient vector. If
* the collection is empty, throws an exception. Returns coll
*/
cljs.core.pop_BANG_ = (function pop_BANG_(tcoll){
return cljs.core._pop_BANG_(tcoll);
});
/**
* disj[oin]. Returns a transient set of the same (hashed/sorted) type, that
* does not contain key(s).
* @param {...*} var_args
*/
cljs.core.disj_BANG_ = (function() {
var disj_BANG_ = null;
var disj_BANG___2 = (function (tcoll,val){
return cljs.core._disjoin_BANG_(tcoll,val);
});
var disj_BANG___3 = (function() { 
var G__19239__delegate = function (tcoll,val,vals){
while(true){
var ntcoll = cljs.core._disjoin_BANG_(tcoll,val);
if(cljs.core.truth_(vals)){
var G__19240 = ntcoll;
var G__19241 = cljs.core.first(vals);
var G__19242 = cljs.core.next(vals);
tcoll = G__19240;
val = G__19241;
vals = G__19242;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__19239 = function (tcoll,val,var_args){
var vals = null;
if (arguments.length > 2) {
var G__19243__i = 0, G__19243__a = new Array(arguments.length -  2);
while (G__19243__i < G__19243__a.length) {G__19243__a[G__19243__i] = arguments[G__19243__i + 2]; ++G__19243__i;}
  vals = new cljs.core.IndexedSeq(G__19243__a,0);
} 
return G__19239__delegate.call(this,tcoll,val,vals);};
G__19239.cljs$lang$maxFixedArity = 2;
G__19239.cljs$lang$applyTo = (function (arglist__19244){
var tcoll = cljs.core.first(arglist__19244);
arglist__19244 = cljs.core.next(arglist__19244);
var val = cljs.core.first(arglist__19244);
var vals = cljs.core.rest(arglist__19244);
return G__19239__delegate(tcoll,val,vals);
});
G__19239.cljs$core$IFn$_invoke$arity$variadic = G__19239__delegate;
return G__19239;
})()
;
disj_BANG_ = function(tcoll,val,var_args){
var vals = var_args;
switch(arguments.length){
case 2:
return disj_BANG___2.call(this,tcoll,val);
default:
var G__19245 = null;
if (arguments.length > 2) {
var G__19246__i = 0, G__19246__a = new Array(arguments.length -  2);
while (G__19246__i < G__19246__a.length) {G__19246__a[G__19246__i] = arguments[G__19246__i + 2]; ++G__19246__i;}
G__19245 = new cljs.core.IndexedSeq(G__19246__a,0);
}
return disj_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,val, G__19245);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
disj_BANG_.cljs$lang$maxFixedArity = 2;
disj_BANG_.cljs$lang$applyTo = disj_BANG___3.cljs$lang$applyTo;
disj_BANG_.cljs$core$IFn$_invoke$arity$2 = disj_BANG___2;
disj_BANG_.cljs$core$IFn$_invoke$arity$variadic = disj_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return disj_BANG_;
})()
;

cljs.core.apply_to = (function apply_to(f,argc,args){
var args__$1 = cljs.core.seq(args);
if((argc === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var a8435 = cljs.core._first(args__$1);
var args__$2 = cljs.core._rest(args__$1);
if((argc === (1))){
if(f.cljs$core$IFn$_invoke$arity$1){
return f.cljs$core$IFn$_invoke$arity$1(a8435);
} else {
var G__19457 = a8435;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__19457) : f.call(null,G__19457));
}
} else {
var b8436 = cljs.core._first(args__$2);
var args__$3 = cljs.core._rest(args__$2);
if((argc === (2))){
if(f.cljs$core$IFn$_invoke$arity$2){
return f.cljs$core$IFn$_invoke$arity$2(a8435,b8436);
} else {
var G__19458 = a8435;
var G__19459 = b8436;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__19458,G__19459) : f.call(null,G__19458,G__19459));
}
} else {
var c8437 = cljs.core._first(args__$3);
var args__$4 = cljs.core._rest(args__$3);
if((argc === (3))){
if(f.cljs$core$IFn$_invoke$arity$3){
return f.cljs$core$IFn$_invoke$arity$3(a8435,b8436,c8437);
} else {
var G__19460 = a8435;
var G__19461 = b8436;
var G__19462 = c8437;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__19460,G__19461,G__19462) : f.call(null,G__19460,G__19461,G__19462));
}
} else {
var d8438 = cljs.core._first(args__$4);
var args__$5 = cljs.core._rest(args__$4);
if((argc === (4))){
if(f.cljs$core$IFn$_invoke$arity$4){
return f.cljs$core$IFn$_invoke$arity$4(a8435,b8436,c8437,d8438);
} else {
var G__19463 = a8435;
var G__19464 = b8436;
var G__19465 = c8437;
var G__19466 = d8438;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__19463,G__19464,G__19465,G__19466) : f.call(null,G__19463,G__19464,G__19465,G__19466));
}
} else {
var e8439 = cljs.core._first(args__$5);
var args__$6 = cljs.core._rest(args__$5);
if((argc === (5))){
if(f.cljs$core$IFn$_invoke$arity$5){
return f.cljs$core$IFn$_invoke$arity$5(a8435,b8436,c8437,d8438,e8439);
} else {
var G__19467 = a8435;
var G__19468 = b8436;
var G__19469 = c8437;
var G__19470 = d8438;
var G__19471 = e8439;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__19467,G__19468,G__19469,G__19470,G__19471) : f.call(null,G__19467,G__19468,G__19469,G__19470,G__19471));
}
} else {
var f8440 = cljs.core._first(args__$6);
var args__$7 = cljs.core._rest(args__$6);
if((argc === (6))){
if(f.cljs$core$IFn$_invoke$arity$6){
return f.cljs$core$IFn$_invoke$arity$6(a8435,b8436,c8437,d8438,e8439,f8440);
} else {
var G__19472 = a8435;
var G__19473 = b8436;
var G__19474 = c8437;
var G__19475 = d8438;
var G__19476 = e8439;
var G__19477 = f8440;
return (f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(G__19472,G__19473,G__19474,G__19475,G__19476,G__19477) : f.call(null,G__19472,G__19473,G__19474,G__19475,G__19476,G__19477));
}
} else {
var g8441 = cljs.core._first(args__$7);
var args__$8 = cljs.core._rest(args__$7);
if((argc === (7))){
if(f.cljs$core$IFn$_invoke$arity$7){
return f.cljs$core$IFn$_invoke$arity$7(a8435,b8436,c8437,d8438,e8439,f8440,g8441);
} else {
var G__19478 = a8435;
var G__19479 = b8436;
var G__19480 = c8437;
var G__19481 = d8438;
var G__19482 = e8439;
var G__19483 = f8440;
var G__19484 = g8441;
return (f.cljs$core$IFn$_invoke$arity$7 ? f.cljs$core$IFn$_invoke$arity$7(G__19478,G__19479,G__19480,G__19481,G__19482,G__19483,G__19484) : f.call(null,G__19478,G__19479,G__19480,G__19481,G__19482,G__19483,G__19484));
}
} else {
var h8442 = cljs.core._first(args__$8);
var args__$9 = cljs.core._rest(args__$8);
if((argc === (8))){
if(f.cljs$core$IFn$_invoke$arity$8){
return f.cljs$core$IFn$_invoke$arity$8(a8435,b8436,c8437,d8438,e8439,f8440,g8441,h8442);
} else {
var G__19485 = a8435;
var G__19486 = b8436;
var G__19487 = c8437;
var G__19488 = d8438;
var G__19489 = e8439;
var G__19490 = f8440;
var G__19491 = g8441;
var G__19492 = h8442;
return (f.cljs$core$IFn$_invoke$arity$8 ? f.cljs$core$IFn$_invoke$arity$8(G__19485,G__19486,G__19487,G__19488,G__19489,G__19490,G__19491,G__19492) : f.call(null,G__19485,G__19486,G__19487,G__19488,G__19489,G__19490,G__19491,G__19492));
}
} else {
var i8443 = cljs.core._first(args__$9);
var args__$10 = cljs.core._rest(args__$9);
if((argc === (9))){
if(f.cljs$core$IFn$_invoke$arity$9){
return f.cljs$core$IFn$_invoke$arity$9(a8435,b8436,c8437,d8438,e8439,f8440,g8441,h8442,i8443);
} else {
var G__19493 = a8435;
var G__19494 = b8436;
var G__19495 = c8437;
var G__19496 = d8438;
var G__19497 = e8439;
var G__19498 = f8440;
var G__19499 = g8441;
var G__19500 = h8442;
var G__19501 = i8443;
return (f.cljs$core$IFn$_invoke$arity$9 ? f.cljs$core$IFn$_invoke$arity$9(G__19493,G__19494,G__19495,G__19496,G__19497,G__19498,G__19499,G__19500,G__19501) : f.call(null,G__19493,G__19494,G__19495,G__19496,G__19497,G__19498,G__19499,G__19500,G__19501));
}
} else {
var j8444 = cljs.core._first(args__$10);
var args__$11 = cljs.core._rest(args__$10);
if((argc === (10))){
if(f.cljs$core$IFn$_invoke$arity$10){
return f.cljs$core$IFn$_invoke$arity$10(a8435,b8436,c8437,d8438,e8439,f8440,g8441,h8442,i8443,j8444);
} else {
var G__19502 = a8435;
var G__19503 = b8436;
var G__19504 = c8437;
var G__19505 = d8438;
var G__19506 = e8439;
var G__19507 = f8440;
var G__19508 = g8441;
var G__19509 = h8442;
var G__19510 = i8443;
var G__19511 = j8444;
return (f.cljs$core$IFn$_invoke$arity$10 ? f.cljs$core$IFn$_invoke$arity$10(G__19502,G__19503,G__19504,G__19505,G__19506,G__19507,G__19508,G__19509,G__19510,G__19511) : f.call(null,G__19502,G__19503,G__19504,G__19505,G__19506,G__19507,G__19508,G__19509,G__19510,G__19511));
}
} else {
var k8445 = cljs.core._first(args__$11);
var args__$12 = cljs.core._rest(args__$11);
if((argc === (11))){
if(f.cljs$core$IFn$_invoke$arity$11){
return f.cljs$core$IFn$_invoke$arity$11(a8435,b8436,c8437,d8438,e8439,f8440,g8441,h8442,i8443,j8444,k8445);
} else {
var G__19512 = a8435;
var G__19513 = b8436;
var G__19514 = c8437;
var G__19515 = d8438;
var G__19516 = e8439;
var G__19517 = f8440;
var G__19518 = g8441;
var G__19519 = h8442;
var G__19520 = i8443;
var G__19521 = j8444;
var G__19522 = k8445;
return (f.cljs$core$IFn$_invoke$arity$11 ? f.cljs$core$IFn$_invoke$arity$11(G__19512,G__19513,G__19514,G__19515,G__19516,G__19517,G__19518,G__19519,G__19520,G__19521,G__19522) : f.call(null,G__19512,G__19513,G__19514,G__19515,G__19516,G__19517,G__19518,G__19519,G__19520,G__19521,G__19522));
}
} else {
var l8446 = cljs.core._first(args__$12);
var args__$13 = cljs.core._rest(args__$12);
if((argc === (12))){
if(f.cljs$core$IFn$_invoke$arity$12){
return f.cljs$core$IFn$_invoke$arity$12(a8435,b8436,c8437,d8438,e8439,f8440,g8441,h8442,i8443,j8444,k8445,l8446);
} else {
var G__19523 = a8435;
var G__19524 = b8436;
var G__19525 = c8437;
var G__19526 = d8438;
var G__19527 = e8439;
var G__19528 = f8440;
var G__19529 = g8441;
var G__19530 = h8442;
var G__19531 = i8443;
var G__19532 = j8444;
var G__19533 = k8445;
var G__19534 = l8446;
return (f.cljs$core$IFn$_invoke$arity$12 ? f.cljs$core$IFn$_invoke$arity$12(G__19523,G__19524,G__19525,G__19526,G__19527,G__19528,G__19529,G__19530,G__19531,G__19532,G__19533,G__19534) : f.call(null,G__19523,G__19524,G__19525,G__19526,G__19527,G__19528,G__19529,G__19530,G__19531,G__19532,G__19533,G__19534));
}
} else {
var m8447 = cljs.core._first(args__$13);
var args__$14 = cljs.core._rest(args__$13);
if((argc === (13))){
if(f.cljs$core$IFn$_invoke$arity$13){
return f.cljs$core$IFn$_invoke$arity$13(a8435,b8436,c8437,d8438,e8439,f8440,g8441,h8442,i8443,j8444,k8445,l8446,m8447);
} else {
var G__19535 = a8435;
var G__19536 = b8436;
var G__19537 = c8437;
var G__19538 = d8438;
var G__19539 = e8439;
var G__19540 = f8440;
var G__19541 = g8441;
var G__19542 = h8442;
var G__19543 = i8443;
var G__19544 = j8444;
var G__19545 = k8445;
var G__19546 = l8446;
var G__19547 = m8447;
return (f.cljs$core$IFn$_invoke$arity$13 ? f.cljs$core$IFn$_invoke$arity$13(G__19535,G__19536,G__19537,G__19538,G__19539,G__19540,G__19541,G__19542,G__19543,G__19544,G__19545,G__19546,G__19547) : f.call(null,G__19535,G__19536,G__19537,G__19538,G__19539,G__19540,G__19541,G__19542,G__19543,G__19544,G__19545,G__19546,G__19547));
}
} else {
var n8448 = cljs.core._first(args__$14);
var args__$15 = cljs.core._rest(args__$14);
if((argc === (14))){
if(f.cljs$core$IFn$_invoke$arity$14){
return f.cljs$core$IFn$_invoke$arity$14(a8435,b8436,c8437,d8438,e8439,f8440,g8441,h8442,i8443,j8444,k8445,l8446,m8447,n8448);
} else {
var G__19548 = a8435;
var G__19549 = b8436;
var G__19550 = c8437;
var G__19551 = d8438;
var G__19552 = e8439;
var G__19553 = f8440;
var G__19554 = g8441;
var G__19555 = h8442;
var G__19556 = i8443;
var G__19557 = j8444;
var G__19558 = k8445;
var G__19559 = l8446;
var G__19560 = m8447;
var G__19561 = n8448;
return (f.cljs$core$IFn$_invoke$arity$14 ? f.cljs$core$IFn$_invoke$arity$14(G__19548,G__19549,G__19550,G__19551,G__19552,G__19553,G__19554,G__19555,G__19556,G__19557,G__19558,G__19559,G__19560,G__19561) : f.call(null,G__19548,G__19549,G__19550,G__19551,G__19552,G__19553,G__19554,G__19555,G__19556,G__19557,G__19558,G__19559,G__19560,G__19561));
}
} else {
var o8449 = cljs.core._first(args__$15);
var args__$16 = cljs.core._rest(args__$15);
if((argc === (15))){
if(f.cljs$core$IFn$_invoke$arity$15){
return f.cljs$core$IFn$_invoke$arity$15(a8435,b8436,c8437,d8438,e8439,f8440,g8441,h8442,i8443,j8444,k8445,l8446,m8447,n8448,o8449);
} else {
var G__19562 = a8435;
var G__19563 = b8436;
var G__19564 = c8437;
var G__19565 = d8438;
var G__19566 = e8439;
var G__19567 = f8440;
var G__19568 = g8441;
var G__19569 = h8442;
var G__19570 = i8443;
var G__19571 = j8444;
var G__19572 = k8445;
var G__19573 = l8446;
var G__19574 = m8447;
var G__19575 = n8448;
var G__19576 = o8449;
return (f.cljs$core$IFn$_invoke$arity$15 ? f.cljs$core$IFn$_invoke$arity$15(G__19562,G__19563,G__19564,G__19565,G__19566,G__19567,G__19568,G__19569,G__19570,G__19571,G__19572,G__19573,G__19574,G__19575,G__19576) : f.call(null,G__19562,G__19563,G__19564,G__19565,G__19566,G__19567,G__19568,G__19569,G__19570,G__19571,G__19572,G__19573,G__19574,G__19575,G__19576));
}
} else {
var p8450 = cljs.core._first(args__$16);
var args__$17 = cljs.core._rest(args__$16);
if((argc === (16))){
if(f.cljs$core$IFn$_invoke$arity$16){
return f.cljs$core$IFn$_invoke$arity$16(a8435,b8436,c8437,d8438,e8439,f8440,g8441,h8442,i8443,j8444,k8445,l8446,m8447,n8448,o8449,p8450);
} else {
var G__19577 = a8435;
var G__19578 = b8436;
var G__19579 = c8437;
var G__19580 = d8438;
var G__19581 = e8439;
var G__19582 = f8440;
var G__19583 = g8441;
var G__19584 = h8442;
var G__19585 = i8443;
var G__19586 = j8444;
var G__19587 = k8445;
var G__19588 = l8446;
var G__19589 = m8447;
var G__19590 = n8448;
var G__19591 = o8449;
var G__19592 = p8450;
return (f.cljs$core$IFn$_invoke$arity$16 ? f.cljs$core$IFn$_invoke$arity$16(G__19577,G__19578,G__19579,G__19580,G__19581,G__19582,G__19583,G__19584,G__19585,G__19586,G__19587,G__19588,G__19589,G__19590,G__19591,G__19592) : f.call(null,G__19577,G__19578,G__19579,G__19580,G__19581,G__19582,G__19583,G__19584,G__19585,G__19586,G__19587,G__19588,G__19589,G__19590,G__19591,G__19592));
}
} else {
var q8451 = cljs.core._first(args__$17);
var args__$18 = cljs.core._rest(args__$17);
if((argc === (17))){
if(f.cljs$core$IFn$_invoke$arity$17){
return f.cljs$core$IFn$_invoke$arity$17(a8435,b8436,c8437,d8438,e8439,f8440,g8441,h8442,i8443,j8444,k8445,l8446,m8447,n8448,o8449,p8450,q8451);
} else {
var G__19593 = a8435;
var G__19594 = b8436;
var G__19595 = c8437;
var G__19596 = d8438;
var G__19597 = e8439;
var G__19598 = f8440;
var G__19599 = g8441;
var G__19600 = h8442;
var G__19601 = i8443;
var G__19602 = j8444;
var G__19603 = k8445;
var G__19604 = l8446;
var G__19605 = m8447;
var G__19606 = n8448;
var G__19607 = o8449;
var G__19608 = p8450;
var G__19609 = q8451;
return (f.cljs$core$IFn$_invoke$arity$17 ? f.cljs$core$IFn$_invoke$arity$17(G__19593,G__19594,G__19595,G__19596,G__19597,G__19598,G__19599,G__19600,G__19601,G__19602,G__19603,G__19604,G__19605,G__19606,G__19607,G__19608,G__19609) : f.call(null,G__19593,G__19594,G__19595,G__19596,G__19597,G__19598,G__19599,G__19600,G__19601,G__19602,G__19603,G__19604,G__19605,G__19606,G__19607,G__19608,G__19609));
}
} else {
var r8452 = cljs.core._first(args__$18);
var args__$19 = cljs.core._rest(args__$18);
if((argc === (18))){
if(f.cljs$core$IFn$_invoke$arity$18){
return f.cljs$core$IFn$_invoke$arity$18(a8435,b8436,c8437,d8438,e8439,f8440,g8441,h8442,i8443,j8444,k8445,l8446,m8447,n8448,o8449,p8450,q8451,r8452);
} else {
var G__19610 = a8435;
var G__19611 = b8436;
var G__19612 = c8437;
var G__19613 = d8438;
var G__19614 = e8439;
var G__19615 = f8440;
var G__19616 = g8441;
var G__19617 = h8442;
var G__19618 = i8443;
var G__19619 = j8444;
var G__19620 = k8445;
var G__19621 = l8446;
var G__19622 = m8447;
var G__19623 = n8448;
var G__19624 = o8449;
var G__19625 = p8450;
var G__19626 = q8451;
var G__19627 = r8452;
return (f.cljs$core$IFn$_invoke$arity$18 ? f.cljs$core$IFn$_invoke$arity$18(G__19610,G__19611,G__19612,G__19613,G__19614,G__19615,G__19616,G__19617,G__19618,G__19619,G__19620,G__19621,G__19622,G__19623,G__19624,G__19625,G__19626,G__19627) : f.call(null,G__19610,G__19611,G__19612,G__19613,G__19614,G__19615,G__19616,G__19617,G__19618,G__19619,G__19620,G__19621,G__19622,G__19623,G__19624,G__19625,G__19626,G__19627));
}
} else {
var s8453 = cljs.core._first(args__$19);
var args__$20 = cljs.core._rest(args__$19);
if((argc === (19))){
if(f.cljs$core$IFn$_invoke$arity$19){
return f.cljs$core$IFn$_invoke$arity$19(a8435,b8436,c8437,d8438,e8439,f8440,g8441,h8442,i8443,j8444,k8445,l8446,m8447,n8448,o8449,p8450,q8451,r8452,s8453);
} else {
var G__19628 = a8435;
var G__19629 = b8436;
var G__19630 = c8437;
var G__19631 = d8438;
var G__19632 = e8439;
var G__19633 = f8440;
var G__19634 = g8441;
var G__19635 = h8442;
var G__19636 = i8443;
var G__19637 = j8444;
var G__19638 = k8445;
var G__19639 = l8446;
var G__19640 = m8447;
var G__19641 = n8448;
var G__19642 = o8449;
var G__19643 = p8450;
var G__19644 = q8451;
var G__19645 = r8452;
var G__19646 = s8453;
return (f.cljs$core$IFn$_invoke$arity$19 ? f.cljs$core$IFn$_invoke$arity$19(G__19628,G__19629,G__19630,G__19631,G__19632,G__19633,G__19634,G__19635,G__19636,G__19637,G__19638,G__19639,G__19640,G__19641,G__19642,G__19643,G__19644,G__19645,G__19646) : f.call(null,G__19628,G__19629,G__19630,G__19631,G__19632,G__19633,G__19634,G__19635,G__19636,G__19637,G__19638,G__19639,G__19640,G__19641,G__19642,G__19643,G__19644,G__19645,G__19646));
}
} else {
var t8454 = cljs.core._first(args__$20);
var args__$21 = cljs.core._rest(args__$20);
if((argc === (20))){
if(f.cljs$core$IFn$_invoke$arity$20){
return f.cljs$core$IFn$_invoke$arity$20(a8435,b8436,c8437,d8438,e8439,f8440,g8441,h8442,i8443,j8444,k8445,l8446,m8447,n8448,o8449,p8450,q8451,r8452,s8453,t8454);
} else {
var G__19647 = a8435;
var G__19648 = b8436;
var G__19649 = c8437;
var G__19650 = d8438;
var G__19651 = e8439;
var G__19652 = f8440;
var G__19653 = g8441;
var G__19654 = h8442;
var G__19655 = i8443;
var G__19656 = j8444;
var G__19657 = k8445;
var G__19658 = l8446;
var G__19659 = m8447;
var G__19660 = n8448;
var G__19661 = o8449;
var G__19662 = p8450;
var G__19663 = q8451;
var G__19664 = r8452;
var G__19665 = s8453;
var G__19666 = t8454;
return (f.cljs$core$IFn$_invoke$arity$20 ? f.cljs$core$IFn$_invoke$arity$20(G__19647,G__19648,G__19649,G__19650,G__19651,G__19652,G__19653,G__19654,G__19655,G__19656,G__19657,G__19658,G__19659,G__19660,G__19661,G__19662,G__19663,G__19664,G__19665,G__19666) : f.call(null,G__19647,G__19648,G__19649,G__19650,G__19651,G__19652,G__19653,G__19654,G__19655,G__19656,G__19657,G__19658,G__19659,G__19660,G__19661,G__19662,G__19663,G__19664,G__19665,G__19666));
}
} else {
throw (new Error("Only up to 20 arguments supported on functions"));
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
});

/**
* Applies fn f to the argument list formed by prepending intervening arguments to args.
* First cut.  Not lazy.  Needs to use emitted toApply.
* @param {...*} var_args
*/
cljs.core.apply = (function() {
var apply = null;
var apply__2 = (function (f,args){
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(args,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,args);
} else {
return f.cljs$lang$applyTo(args);
}
} else {
return f.apply(f,cljs.core.to_array(args));
}
});
var apply__3 = (function (f,x,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$2(x,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var apply__4 = (function (f,x,y,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$3(x,y,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var apply__5 = (function (f,x,y,z,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(x,y,z,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var apply__6 = (function() { 
var G__19667__delegate = function (f,a,b,c,d,args){
var arglist = cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,cljs.core.cons(d,cljs.core.spread(args)))));
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
};
var G__19667 = function (f,a,b,c,d,var_args){
var args = null;
if (arguments.length > 5) {
var G__19668__i = 0, G__19668__a = new Array(arguments.length -  5);
while (G__19668__i < G__19668__a.length) {G__19668__a[G__19668__i] = arguments[G__19668__i + 5]; ++G__19668__i;}
  args = new cljs.core.IndexedSeq(G__19668__a,0);
} 
return G__19667__delegate.call(this,f,a,b,c,d,args);};
G__19667.cljs$lang$maxFixedArity = 5;
G__19667.cljs$lang$applyTo = (function (arglist__19669){
var f = cljs.core.first(arglist__19669);
arglist__19669 = cljs.core.next(arglist__19669);
var a = cljs.core.first(arglist__19669);
arglist__19669 = cljs.core.next(arglist__19669);
var b = cljs.core.first(arglist__19669);
arglist__19669 = cljs.core.next(arglist__19669);
var c = cljs.core.first(arglist__19669);
arglist__19669 = cljs.core.next(arglist__19669);
var d = cljs.core.first(arglist__19669);
var args = cljs.core.rest(arglist__19669);
return G__19667__delegate(f,a,b,c,d,args);
});
G__19667.cljs$core$IFn$_invoke$arity$variadic = G__19667__delegate;
return G__19667;
})()
;
apply = function(f,a,b,c,d,var_args){
var args = var_args;
switch(arguments.length){
case 2:
return apply__2.call(this,f,a);
case 3:
return apply__3.call(this,f,a,b);
case 4:
return apply__4.call(this,f,a,b,c);
case 5:
return apply__5.call(this,f,a,b,c,d);
default:
var G__19670 = null;
if (arguments.length > 5) {
var G__19671__i = 0, G__19671__a = new Array(arguments.length -  5);
while (G__19671__i < G__19671__a.length) {G__19671__a[G__19671__i] = arguments[G__19671__i + 5]; ++G__19671__i;}
G__19670 = new cljs.core.IndexedSeq(G__19671__a,0);
}
return apply__6.cljs$core$IFn$_invoke$arity$variadic(f,a,b,c,d, G__19670);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
apply.cljs$lang$maxFixedArity = 5;
apply.cljs$lang$applyTo = apply__6.cljs$lang$applyTo;
apply.cljs$core$IFn$_invoke$arity$2 = apply__2;
apply.cljs$core$IFn$_invoke$arity$3 = apply__3;
apply.cljs$core$IFn$_invoke$arity$4 = apply__4;
apply.cljs$core$IFn$_invoke$arity$5 = apply__5;
apply.cljs$core$IFn$_invoke$arity$variadic = apply__6.cljs$core$IFn$_invoke$arity$variadic;
return apply;
})()
;
/**
* Returns an object of the same type and value as obj, with
* (apply f (meta obj) args) as its metadata.
* @param {...*} var_args
*/
cljs.core.vary_meta = (function() {
var vary_meta = null;
var vary_meta__2 = (function (obj,f){
return cljs.core.with_meta(obj,(function (){var G__19687 = cljs.core.meta(obj);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__19687) : f.call(null,G__19687));
})());
});
var vary_meta__3 = (function (obj,f,a){
return cljs.core.with_meta(obj,(function (){var G__19688 = cljs.core.meta(obj);
var G__19689 = a;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__19688,G__19689) : f.call(null,G__19688,G__19689));
})());
});
var vary_meta__4 = (function (obj,f,a,b){
return cljs.core.with_meta(obj,(function (){var G__19690 = cljs.core.meta(obj);
var G__19691 = a;
var G__19692 = b;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__19690,G__19691,G__19692) : f.call(null,G__19690,G__19691,G__19692));
})());
});
var vary_meta__5 = (function (obj,f,a,b,c){
return cljs.core.with_meta(obj,(function (){var G__19693 = cljs.core.meta(obj);
var G__19694 = a;
var G__19695 = b;
var G__19696 = c;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__19693,G__19694,G__19695,G__19696) : f.call(null,G__19693,G__19694,G__19695,G__19696));
})());
});
var vary_meta__6 = (function (obj,f,a,b,c,d){
return cljs.core.with_meta(obj,(function (){var G__19697 = cljs.core.meta(obj);
var G__19698 = a;
var G__19699 = b;
var G__19700 = c;
var G__19701 = d;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__19697,G__19698,G__19699,G__19700,G__19701) : f.call(null,G__19697,G__19698,G__19699,G__19700,G__19701));
})());
});
var vary_meta__7 = (function() { 
var G__19702__delegate = function (obj,f,a,b,c,d,args){
return cljs.core.with_meta(obj,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.meta(obj),a,b,c,cljs.core.array_seq([d,args], 0)));
};
var G__19702 = function (obj,f,a,b,c,d,var_args){
var args = null;
if (arguments.length > 6) {
var G__19703__i = 0, G__19703__a = new Array(arguments.length -  6);
while (G__19703__i < G__19703__a.length) {G__19703__a[G__19703__i] = arguments[G__19703__i + 6]; ++G__19703__i;}
  args = new cljs.core.IndexedSeq(G__19703__a,0);
} 
return G__19702__delegate.call(this,obj,f,a,b,c,d,args);};
G__19702.cljs$lang$maxFixedArity = 6;
G__19702.cljs$lang$applyTo = (function (arglist__19704){
var obj = cljs.core.first(arglist__19704);
arglist__19704 = cljs.core.next(arglist__19704);
var f = cljs.core.first(arglist__19704);
arglist__19704 = cljs.core.next(arglist__19704);
var a = cljs.core.first(arglist__19704);
arglist__19704 = cljs.core.next(arglist__19704);
var b = cljs.core.first(arglist__19704);
arglist__19704 = cljs.core.next(arglist__19704);
var c = cljs.core.first(arglist__19704);
arglist__19704 = cljs.core.next(arglist__19704);
var d = cljs.core.first(arglist__19704);
var args = cljs.core.rest(arglist__19704);
return G__19702__delegate(obj,f,a,b,c,d,args);
});
G__19702.cljs$core$IFn$_invoke$arity$variadic = G__19702__delegate;
return G__19702;
})()
;
vary_meta = function(obj,f,a,b,c,d,var_args){
var args = var_args;
switch(arguments.length){
case 2:
return vary_meta__2.call(this,obj,f);
case 3:
return vary_meta__3.call(this,obj,f,a);
case 4:
return vary_meta__4.call(this,obj,f,a,b);
case 5:
return vary_meta__5.call(this,obj,f,a,b,c);
case 6:
return vary_meta__6.call(this,obj,f,a,b,c,d);
default:
var G__19705 = null;
if (arguments.length > 6) {
var G__19706__i = 0, G__19706__a = new Array(arguments.length -  6);
while (G__19706__i < G__19706__a.length) {G__19706__a[G__19706__i] = arguments[G__19706__i + 6]; ++G__19706__i;}
G__19705 = new cljs.core.IndexedSeq(G__19706__a,0);
}
return vary_meta__7.cljs$core$IFn$_invoke$arity$variadic(obj,f,a,b,c,d, G__19705);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
vary_meta.cljs$lang$maxFixedArity = 6;
vary_meta.cljs$lang$applyTo = vary_meta__7.cljs$lang$applyTo;
vary_meta.cljs$core$IFn$_invoke$arity$2 = vary_meta__2;
vary_meta.cljs$core$IFn$_invoke$arity$3 = vary_meta__3;
vary_meta.cljs$core$IFn$_invoke$arity$4 = vary_meta__4;
vary_meta.cljs$core$IFn$_invoke$arity$5 = vary_meta__5;
vary_meta.cljs$core$IFn$_invoke$arity$6 = vary_meta__6;
vary_meta.cljs$core$IFn$_invoke$arity$variadic = vary_meta__7.cljs$core$IFn$_invoke$arity$variadic;
return vary_meta;
})()
;
/**
* Same as (not (= obj1 obj2))
* @param {...*} var_args
*/
cljs.core.not_EQ_ = (function() {
var not_EQ_ = null;
var not_EQ___1 = (function (x){
return false;
});
var not_EQ___2 = (function (x,y){
return !(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y));
});
var not_EQ___3 = (function() { 
var G__19707__delegate = function (x,y,more){
return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core._EQ_,x,y,more));
};
var G__19707 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__19708__i = 0, G__19708__a = new Array(arguments.length -  2);
while (G__19708__i < G__19708__a.length) {G__19708__a[G__19708__i] = arguments[G__19708__i + 2]; ++G__19708__i;}
  more = new cljs.core.IndexedSeq(G__19708__a,0);
} 
return G__19707__delegate.call(this,x,y,more);};
G__19707.cljs$lang$maxFixedArity = 2;
G__19707.cljs$lang$applyTo = (function (arglist__19709){
var x = cljs.core.first(arglist__19709);
arglist__19709 = cljs.core.next(arglist__19709);
var y = cljs.core.first(arglist__19709);
var more = cljs.core.rest(arglist__19709);
return G__19707__delegate(x,y,more);
});
G__19707.cljs$core$IFn$_invoke$arity$variadic = G__19707__delegate;
return G__19707;
})()
;
not_EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return not_EQ___1.call(this,x);
case 2:
return not_EQ___2.call(this,x,y);
default:
var G__19710 = null;
if (arguments.length > 2) {
var G__19711__i = 0, G__19711__a = new Array(arguments.length -  2);
while (G__19711__i < G__19711__a.length) {G__19711__a[G__19711__i] = arguments[G__19711__i + 2]; ++G__19711__i;}
G__19710 = new cljs.core.IndexedSeq(G__19711__a,0);
}
return not_EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__19710);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
not_EQ_.cljs$lang$maxFixedArity = 2;
not_EQ_.cljs$lang$applyTo = not_EQ___3.cljs$lang$applyTo;
not_EQ_.cljs$core$IFn$_invoke$arity$1 = not_EQ___1;
not_EQ_.cljs$core$IFn$_invoke$arity$2 = not_EQ___2;
not_EQ_.cljs$core$IFn$_invoke$arity$variadic = not_EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return not_EQ_;
})()
;
/**
* If coll is empty, returns nil, else coll
*/
cljs.core.not_empty = (function not_empty(coll){
if(cljs.core.seq(coll)){
return coll;
} else {
return null;
}
});
cljs.core.nil_iter = (function nil_iter(){
if(typeof cljs.core.t19715 !== 'undefined'){
} else {

/**
* @constructor
*/
cljs.core.t19715 = (function (nil_iter,meta19716){
this.nil_iter = nil_iter;
this.meta19716 = meta19716;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 393216;
})
cljs.core.t19715.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return false;
});

cljs.core.t19715.prototype.next = (function (){
var self__ = this;
var _ = this;
return (new Error("No such element"));
});

cljs.core.t19715.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.t19715.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_19717){
var self__ = this;
var _19717__$1 = this;
return self__.meta19716;
});

cljs.core.t19715.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_19717,meta19716__$1){
var self__ = this;
var _19717__$1 = this;
return (new cljs.core.t19715(self__.nil_iter,meta19716__$1));
});

cljs.core.t19715.cljs$lang$type = true;

cljs.core.t19715.cljs$lang$ctorStr = "cljs.core/t19715";

cljs.core.t19715.cljs$lang$ctorPrWriter = (function (this__8091__auto__,writer__8092__auto__,opt__8093__auto__){
return cljs.core._write(writer__8092__auto__,"cljs.core/t19715");
});

cljs.core.__GT_t19715 = (function __GT_t19715(nil_iter__$1,meta19716){
return (new cljs.core.t19715(nil_iter__$1,meta19716));
});

}

return (new cljs.core.t19715(nil_iter,cljs.core.PersistentArrayMap.EMPTY));
});

/**
* @constructor
*/
cljs.core.StringIter = (function (s,i){
this.s = s;
this.i = i;
})
cljs.core.StringIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.s.length);
});

cljs.core.StringIter.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = self__.s.charAt(self__.i);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.StringIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.StringIter.cljs$lang$type = true;

cljs.core.StringIter.cljs$lang$ctorStr = "cljs.core/StringIter";

cljs.core.StringIter.cljs$lang$ctorPrWriter = (function (this__8091__auto__,writer__8092__auto__,opt__8093__auto__){
return cljs.core._write(writer__8092__auto__,"cljs.core/StringIter");
});

cljs.core.__GT_StringIter = (function __GT_StringIter(s,i){
return (new cljs.core.StringIter(s,i));
});

cljs.core.string_iter = (function string_iter(x){
return (new cljs.core.StringIter(x,(0)));
});

/**
* @constructor
*/
cljs.core.ArrayIter = (function (arr,i){
this.arr = arr;
this.i = i;
})
cljs.core.ArrayIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.arr.length);
});

cljs.core.ArrayIter.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = (self__.arr[self__.i]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.ArrayIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.ArrayIter.cljs$lang$type = true;

cljs.core.ArrayIter.cljs$lang$ctorStr = "cljs.core/ArrayIter";

cljs.core.ArrayIter.cljs$lang$ctorPrWriter = (function (this__8091__auto__,writer__8092__auto__,opt__8093__auto__){
return cljs.core._write(writer__8092__auto__,"cljs.core/ArrayIter");
});

cljs.core.__GT_ArrayIter = (function __GT_ArrayIter(arr,i){
return (new cljs.core.ArrayIter(arr,i));
});

cljs.core.array_iter = (function array_iter(x){
return (new cljs.core.ArrayIter(x,(0)));
});
cljs.core.INIT = {};
cljs.core.START = {};

/**
* @constructor
*/
cljs.core.SeqIter = (function (_seq,_next){
this._seq = _seq;
this._next = _next;
})
cljs.core.SeqIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
if((self__._seq === cljs.core.INIT)){
self__._seq = cljs.core.START;

self__._next = cljs.core.seq(self__._next);
} else {
if((self__._seq === self__._next)){
self__._next = cljs.core.next(self__._seq);
} else {
}
}

return !((self__._next == null));
});

cljs.core.SeqIter.prototype.next = (function (){
var self__ = this;
var this$ = this;
if(cljs.core.not(this$.hasNext())){
throw (new Error("No such element"));
} else {
self__._seq = self__._next;

return cljs.core.first(self__._next);
}
});

cljs.core.SeqIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.SeqIter.cljs$lang$type = true;

cljs.core.SeqIter.cljs$lang$ctorStr = "cljs.core/SeqIter";

cljs.core.SeqIter.cljs$lang$ctorPrWriter = (function (this__8091__auto__,writer__8092__auto__,opt__8093__auto__){
return cljs.core._write(writer__8092__auto__,"cljs.core/SeqIter");
});

cljs.core.__GT_SeqIter = (function __GT_SeqIter(_seq,_next){
return (new cljs.core.SeqIter(_seq,_next));
});

cljs.core.seq_iter = (function seq_iter(coll){
return (new cljs.core.SeqIter(cljs.core.INIT,coll));
});
cljs.core.iter = (function iter(coll){
if((coll == null)){
return cljs.core.nil_iter();
} else {
if(typeof coll === 'string'){
return cljs.core.string_iter(coll);
} else {
if(coll instanceof Array){
return cljs.core.array_iter(coll);
} else {
if(cljs.core.iterable_QMARK_(coll)){
return cljs.core._iterator(coll);
} else {
if(cljs.core.seqable_QMARK_(coll)){
return cljs.core.seq_iter(coll);
} else {
throw (new Error([cljs.core.str("Cannot create iterator from "),cljs.core.str(coll)].join('')));

}
}
}
}
}
});
cljs.core.lazy_transformer = (function lazy_transformer(stepper){
return (new cljs.core.LazyTransformer(stepper,null,null,null));
});

/**
* @constructor
*/
cljs.core.Stepper = (function (xform,iter){
this.xform = xform;
this.iter = iter;
})
cljs.core.Stepper.prototype.step = (function (lt){
var self__ = this;
var this$ = this;
while(true){
if(cljs.core.truth_((function (){var and__7492__auto__ = !((lt.stepper == null));
if(and__7492__auto__){
return self__.iter.hasNext();
} else {
return and__7492__auto__;
}
})())){
if(cljs.core.reduced_QMARK_((function (){var G__19718 = lt;
var G__19719 = self__.iter.next();
return (self__.xform.cljs$core$IFn$_invoke$arity$2 ? self__.xform.cljs$core$IFn$_invoke$arity$2(G__19718,G__19719) : self__.xform.call(null,G__19718,G__19719));
})())){
if((lt.rest == null)){
} else {
lt.rest.stepper = null;
}
} else {
continue;
}
} else {
}
break;
}

if((lt.stepper == null)){
return null;
} else {
var G__19720 = lt;
return (self__.xform.cljs$core$IFn$_invoke$arity$1 ? self__.xform.cljs$core$IFn$_invoke$arity$1(G__19720) : self__.xform.call(null,G__19720));
}
});

cljs.core.Stepper.cljs$lang$type = true;

cljs.core.Stepper.cljs$lang$ctorStr = "cljs.core/Stepper";

cljs.core.Stepper.cljs$lang$ctorPrWriter = (function (this__8091__auto__,writer__8092__auto__,opt__8093__auto__){
return cljs.core._write(writer__8092__auto__,"cljs.core/Stepper");
});

cljs.core.__GT_Stepper = (function __GT_Stepper(xform,iter){
return (new cljs.core.Stepper(xform,iter));
});

cljs.core.stepper = (function stepper(xform,iter){
var stepfn = (function() {
var stepfn = null;
var stepfn__1 = (function (result){
var lt = ((cljs.core.reduced_QMARK_(result))?cljs.core.deref(result):result);
lt.stepper = null;

return result;
});
var stepfn__2 = (function (result,input){
var lt = result;
lt.first = input;

lt.rest = cljs.core.lazy_transformer(lt.stepper);

lt.stepper = null;

return lt.rest;
});
stepfn = function(result,input){
switch(arguments.length){
case 1:
return stepfn__1.call(this,result);
case 2:
return stepfn__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
stepfn.cljs$core$IFn$_invoke$arity$1 = stepfn__1;
stepfn.cljs$core$IFn$_invoke$arity$2 = stepfn__2;
return stepfn;
})()
;
return (new cljs.core.Stepper((function (){var G__19722 = stepfn;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__19722) : xform.call(null,G__19722));
})(),iter));
});

/**
* @constructor
*/
cljs.core.MultiStepper = (function (xform,iters,nexts){
this.xform = xform;
this.iters = iters;
this.nexts = nexts;
})
cljs.core.MultiStepper.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
var iters__$1 = cljs.core.seq(self__.iters);
while(true){
if(!((iters__$1 == null))){
var iter = cljs.core.first(iters__$1);
if(cljs.core.not(iter.hasNext())){
return false;
} else {
var G__19724 = cljs.core.next(iters__$1);
iters__$1 = G__19724;
continue;
}
} else {
return true;
}
break;
}
});

cljs.core.MultiStepper.prototype.next = (function (){
var self__ = this;
var _ = this;
var n__8391__auto___19725 = self__.iters.length;
var i_19726 = (0);
while(true){
if((i_19726 < n__8391__auto___19725)){
(self__.nexts[i_19726] = (self__.iters[i_19726]).next());

var G__19727 = (i_19726 + (1));
i_19726 = G__19727;
continue;
} else {
}
break;
}

return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(self__.nexts,(0));
});

cljs.core.MultiStepper.prototype.step = (function (lt){
var self__ = this;
var this$ = this;
while(true){
if(cljs.core.truth_((function (){var and__7492__auto__ = !((lt.stepper == null));
if(and__7492__auto__){
return this$.hasNext();
} else {
return and__7492__auto__;
}
})())){
if(cljs.core.reduced_QMARK_(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(self__.xform,cljs.core.cons(lt,this$.next())))){
if((lt.rest == null)){
} else {
lt.rest.stepper = null;
}
} else {
continue;
}
} else {
}
break;
}

if((lt.stepper == null)){
return null;
} else {
var G__19723 = lt;
return (self__.xform.cljs$core$IFn$_invoke$arity$1 ? self__.xform.cljs$core$IFn$_invoke$arity$1(G__19723) : self__.xform.call(null,G__19723));
}
});

cljs.core.MultiStepper.cljs$lang$type = true;

cljs.core.MultiStepper.cljs$lang$ctorStr = "cljs.core/MultiStepper";

cljs.core.MultiStepper.cljs$lang$ctorPrWriter = (function (this__8091__auto__,writer__8092__auto__,opt__8093__auto__){
return cljs.core._write(writer__8092__auto__,"cljs.core/MultiStepper");
});

cljs.core.__GT_MultiStepper = (function __GT_MultiStepper(xform,iters,nexts){
return (new cljs.core.MultiStepper(xform,iters,nexts));
});

cljs.core.multi_stepper = (function() {
var multi_stepper = null;
var multi_stepper__2 = (function (xform,iters){
return multi_stepper.cljs$core$IFn$_invoke$arity$3(xform,iters,(new Array(iters.length)));
});
var multi_stepper__3 = (function (xform,iters,nexts){
var stepfn = (function() {
var stepfn = null;
var stepfn__1 = (function (result){
var lt = ((cljs.core.reduced_QMARK_(result))?cljs.core.deref(result):result);
lt.stepper = null;

return lt;
});
var stepfn__2 = (function (result,input){
var lt = result;
lt.first = input;

lt.rest = cljs.core.lazy_transformer(lt.stepper);

lt.stepper = null;

return lt.rest;
});
stepfn = function(result,input){
switch(arguments.length){
case 1:
return stepfn__1.call(this,result);
case 2:
return stepfn__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
stepfn.cljs$core$IFn$_invoke$arity$1 = stepfn__1;
stepfn.cljs$core$IFn$_invoke$arity$2 = stepfn__2;
return stepfn;
})()
;
return (new cljs.core.MultiStepper((function (){var G__19732 = stepfn;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__19732) : xform.call(null,G__19732));
})(),iters,nexts));
});
multi_stepper = function(xform,iters,nexts){
switch(arguments.length){
case 2:
return multi_stepper__2.call(this,xform,iters);
case 3:
return multi_stepper__3.call(this,xform,iters,nexts);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
multi_stepper.cljs$core$IFn$_invoke$arity$2 = multi_stepper__2;
multi_stepper.cljs$core$IFn$_invoke$arity$3 = multi_stepper__3;
return multi_stepper;
})()
;

/**
* @constructor
*/
cljs.core.LazyTransformer = (function (stepper,first,rest,meta){
this.stepper = stepper;
this.first = first;
this.rest = rest;
this.meta = meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 31719628;
})
cljs.core.LazyTransformer.prototype.cljs$core$INext$_next$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return cljs.core._seq(self__.rest);
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_first$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return self__.first;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_rest$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
self__.stepper.step(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return this$__$1;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.hash_ordered_coll(this$__$1);
});

cljs.core.LazyTransformer.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (this$,other){
var self__ = this;
var this$__$1 = this;
var s = cljs.core._seq(this$__$1);
if(!((s == null))){
return cljs.core.equiv_sequential(this$__$1,other);
} else {
return (cljs.core.sequential_QMARK_(other)) && ((cljs.core.seq(other) == null));
}
});

cljs.core.LazyTransformer.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.LazyTransformer.prototype.cljs$core$ICollection$_conj$arity$2 = (function (this$,o){
var self__ = this;
var this$__$1 = this;
return cljs.core.cons(o,cljs.core._seq(this$__$1));
});

cljs.core.LazyTransformer.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (this$,new_meta){
var self__ = this;
var this$__$1 = this;
return (new cljs.core.LazyTransformer(self__.stepper,self__.first,self__.rest,new_meta));
});

cljs.core.LazyTransformer.cljs$lang$type = true;

cljs.core.LazyTransformer.cljs$lang$ctorStr = "cljs.core/LazyTransformer";

cljs.core.LazyTransformer.cljs$lang$ctorPrWriter = (function (this__8091__auto__,writer__8092__auto__,opt__8093__auto__){
return cljs.core._write(writer__8092__auto__,"cljs.core/LazyTransformer");
});

cljs.core.__GT_LazyTransformer = (function __GT_LazyTransformer(stepper,first,rest,meta){
return (new cljs.core.LazyTransformer(stepper,first,rest,meta));
});

(cljs.core.LazyTransformer.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__8482__auto__ = this;
return cljs.core.es6_iterator(this__8482__auto__);
}));
cljs.core.LazyTransformer.create = (function (xform,coll){
return (new cljs.core.LazyTransformer(cljs.core.stepper(xform,cljs.core.iter(coll)),null,null,null));
});
cljs.core.LazyTransformer.createMulti = (function (xform,colls){
var iters = [];
var seq__19733_19737 = cljs.core.seq(colls);
var chunk__19734_19738 = null;
var count__19735_19739 = (0);
var i__19736_19740 = (0);
while(true){
if((i__19736_19740 < count__19735_19739)){
var coll_19741 = chunk__19734_19738.cljs$core$IIndexed$_nth$arity$2(null,i__19736_19740);
iters.push(cljs.core.iter(coll_19741));

var G__19742 = seq__19733_19737;
var G__19743 = chunk__19734_19738;
var G__19744 = count__19735_19739;
var G__19745 = (i__19736_19740 + (1));
seq__19733_19737 = G__19742;
chunk__19734_19738 = G__19743;
count__19735_19739 = G__19744;
i__19736_19740 = G__19745;
continue;
} else {
var temp__4126__auto___19746 = cljs.core.seq(seq__19733_19737);
if(temp__4126__auto___19746){
var seq__19733_19747__$1 = temp__4126__auto___19746;
if(cljs.core.chunked_seq_QMARK_(seq__19733_19747__$1)){
var c__8291__auto___19748 = cljs.core.chunk_first(seq__19733_19747__$1);
var G__19749 = cljs.core.chunk_rest(seq__19733_19747__$1);
var G__19750 = c__8291__auto___19748;
var G__19751 = cljs.core.count(c__8291__auto___19748);
var G__19752 = (0);
seq__19733_19737 = G__19749;
chunk__19734_19738 = G__19750;
count__19735_19739 = G__19751;
i__19736_19740 = G__19752;
continue;
} else {
var coll_19753 = cljs.core.first(seq__19733_19747__$1);
iters.push(cljs.core.iter(coll_19753));

var G__19754 = cljs.core.next(seq__19733_19747__$1);
var G__19755 = null;
var G__19756 = (0);
var G__19757 = (0);
seq__19733_19737 = G__19754;
chunk__19734_19738 = G__19755;
count__19735_19739 = G__19756;
i__19736_19740 = G__19757;
continue;
}
} else {
}
}
break;
}

return (new cljs.core.LazyTransformer(cljs.core.multi_stepper.cljs$core$IFn$_invoke$arity$3(xform,iters,(new Array(iters.length))),null,null,null));
});
/**
* Coerces coll to a (possibly empty) sequence, if it is not already
* one. Will not force a lazy seq. (sequence nil) yields (), When a
* transducer is supplied, returns a lazy sequence of applications of
* the transform to the items in coll(s), i.e. to the set of first
* items of each coll, followed by the set of second
* items in each coll, until any one of the colls is exhausted.  Any
* remaining items in other colls are ignored. The transform should accept
* number-of-colls arguments
* @param {...*} var_args
*/
cljs.core.sequence = (function() {
var sequence = null;
var sequence__1 = (function (coll){
if(cljs.core.seq_QMARK_(coll)){
return coll;
} else {
var or__7504__auto__ = cljs.core.seq(coll);
if(or__7504__auto__){
return or__7504__auto__;
} else {
return cljs.core.List.EMPTY;
}
}
});
var sequence__2 = (function (xform,coll){
return cljs.core.LazyTransformer.create(xform,coll);
});
var sequence__3 = (function() { 
var G__19758__delegate = function (xform,coll,colls){
return cljs.core.LazyTransformer.createMulti(xform,cljs.core.to_array(cljs.core.cons(coll,colls)));
};
var G__19758 = function (xform,coll,var_args){
var colls = null;
if (arguments.length > 2) {
var G__19759__i = 0, G__19759__a = new Array(arguments.length -  2);
while (G__19759__i < G__19759__a.length) {G__19759__a[G__19759__i] = arguments[G__19759__i + 2]; ++G__19759__i;}
  colls = new cljs.core.IndexedSeq(G__19759__a,0);
} 
return G__19758__delegate.call(this,xform,coll,colls);};
G__19758.cljs$lang$maxFixedArity = 2;
G__19758.cljs$lang$applyTo = (function (arglist__19760){
var xform = cljs.core.first(arglist__19760);
arglist__19760 = cljs.core.next(arglist__19760);
var coll = cljs.core.first(arglist__19760);
var colls = cljs.core.rest(arglist__19760);
return G__19758__delegate(xform,coll,colls);
});
G__19758.cljs$core$IFn$_invoke$arity$variadic = G__19758__delegate;
return G__19758;
})()
;
sequence = function(xform,coll,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return sequence__1.call(this,xform);
case 2:
return sequence__2.call(this,xform,coll);
default:
var G__19761 = null;
if (arguments.length > 2) {
var G__19762__i = 0, G__19762__a = new Array(arguments.length -  2);
while (G__19762__i < G__19762__a.length) {G__19762__a[G__19762__i] = arguments[G__19762__i + 2]; ++G__19762__i;}
G__19761 = new cljs.core.IndexedSeq(G__19762__a,0);
}
return sequence__3.cljs$core$IFn$_invoke$arity$variadic(xform,coll, G__19761);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sequence.cljs$lang$maxFixedArity = 2;
sequence.cljs$lang$applyTo = sequence__3.cljs$lang$applyTo;
sequence.cljs$core$IFn$_invoke$arity$1 = sequence__1;
sequence.cljs$core$IFn$_invoke$arity$2 = sequence__2;
sequence.cljs$core$IFn$_invoke$arity$variadic = sequence__3.cljs$core$IFn$_invoke$arity$variadic;
return sequence;
})()
;
/**
* Returns true if (pred x) is logical true for every x in coll, else
* false.
*/
cljs.core.every_QMARK_ = (function every_QMARK_(pred,coll){
while(true){
if((cljs.core.seq(coll) == null)){
return true;
} else {
if(cljs.core.truth_((function (){var G__19764 = cljs.core.first(coll);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__19764) : pred.call(null,G__19764));
})())){
var G__19765 = pred;
var G__19766 = cljs.core.next(coll);
pred = G__19765;
coll = G__19766;
continue;
} else {
return false;

}
}
break;
}
});
/**
* Returns false if (pred x) is logical true for every x in
* coll, else true.
*/
cljs.core.not_every_QMARK_ = (function not_every_QMARK_(pred,coll){
return !(cljs.core.every_QMARK_(pred,coll));
});
/**
* Returns the first logical true value of (pred x) for any x in coll,
* else nil.  One common idiom is to use a set as pred, for example
* this will return :fred if :fred is in the sequence, otherwise nil:
* (some #{:fred} coll)
*/
cljs.core.some = (function some(pred,coll){
while(true){
if(cljs.core.seq(coll)){
var or__7504__auto__ = (function (){var G__19770 = cljs.core.first(coll);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__19770) : pred.call(null,G__19770));
})();
if(cljs.core.truth_(or__7504__auto__)){
return or__7504__auto__;
} else {
var G__19771 = pred;
var G__19772 = cljs.core.next(coll);
pred = G__19771;
coll = G__19772;
continue;
}
} else {
return null;
}
break;
}
});
/**
* Returns false if (pred x) is logical true for any x in coll,
* else true.
*/
cljs.core.not_any_QMARK_ = (function not_any_QMARK_(pred,coll){
return cljs.core.not(cljs.core.some(pred,coll));
});
/**
* Returns true if n is even, throws an exception if n is not an integer
*/
cljs.core.even_QMARK_ = (function even_QMARK_(n){
if(cljs.core.integer_QMARK_(n)){
return ((n & (1)) === (0));
} else {
throw (new Error([cljs.core.str("Argument must be an integer: "),cljs.core.str(n)].join('')));
}
});
/**
* Returns true if n is odd, throws an exception if n is not an integer
*/
cljs.core.odd_QMARK_ = (function odd_QMARK_(n){
return !(cljs.core.even_QMARK_(n));
});
/**
* Takes a fn f and returns a fn that takes the same arguments as f,
* has the same effects, if any, and returns the opposite truth value.
*/
cljs.core.complement = (function complement(f){
return (function() {
var G__19779 = null;
var G__19779__0 = (function (){
return cljs.core.not((function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})());
});
var G__19779__1 = (function (x){
return cljs.core.not((function (){var G__19776 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__19776) : f.call(null,G__19776));
})());
});
var G__19779__2 = (function (x,y){
return cljs.core.not((function (){var G__19777 = x;
var G__19778 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__19777,G__19778) : f.call(null,G__19777,G__19778));
})());
});
var G__19779__3 = (function() { 
var G__19780__delegate = function (x,y,zs){
return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(f,x,y,zs));
};
var G__19780 = function (x,y,var_args){
var zs = null;
if (arguments.length > 2) {
var G__19781__i = 0, G__19781__a = new Array(arguments.length -  2);
while (G__19781__i < G__19781__a.length) {G__19781__a[G__19781__i] = arguments[G__19781__i + 2]; ++G__19781__i;}
  zs = new cljs.core.IndexedSeq(G__19781__a,0);
} 
return G__19780__delegate.call(this,x,y,zs);};
G__19780.cljs$lang$maxFixedArity = 2;
G__19780.cljs$lang$applyTo = (function (arglist__19782){
var x = cljs.core.first(arglist__19782);
arglist__19782 = cljs.core.next(arglist__19782);
var y = cljs.core.first(arglist__19782);
var zs = cljs.core.rest(arglist__19782);
return G__19780__delegate(x,y,zs);
});
G__19780.cljs$core$IFn$_invoke$arity$variadic = G__19780__delegate;
return G__19780;
})()
;
G__19779 = function(x,y,var_args){
var zs = var_args;
switch(arguments.length){
case 0:
return G__19779__0.call(this);
case 1:
return G__19779__1.call(this,x);
case 2:
return G__19779__2.call(this,x,y);
default:
var G__19783 = null;
if (arguments.length > 2) {
var G__19784__i = 0, G__19784__a = new Array(arguments.length -  2);
while (G__19784__i < G__19784__a.length) {G__19784__a[G__19784__i] = arguments[G__19784__i + 2]; ++G__19784__i;}
G__19783 = new cljs.core.IndexedSeq(G__19784__a,0);
}
return G__19779__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__19783);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__19779.cljs$lang$maxFixedArity = 2;
G__19779.cljs$lang$applyTo = G__19779__3.cljs$lang$applyTo;
G__19779.cljs$core$IFn$_invoke$arity$0 = G__19779__0;
G__19779.cljs$core$IFn$_invoke$arity$1 = G__19779__1;
G__19779.cljs$core$IFn$_invoke$arity$2 = G__19779__2;
G__19779.cljs$core$IFn$_invoke$arity$variadic = G__19779__3.cljs$core$IFn$_invoke$arity$variadic;
return G__19779;
})()
});
/**
* Returns a function that takes any number of arguments and returns x.
*/
cljs.core.constantly = (function constantly(x){
return (function() { 
var G__19785__delegate = function (args){
return x;
};
var G__19785 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__19786__i = 0, G__19786__a = new Array(arguments.length -  0);
while (G__19786__i < G__19786__a.length) {G__19786__a[G__19786__i] = arguments[G__19786__i + 0]; ++G__19786__i;}
  args = new cljs.core.IndexedSeq(G__19786__a,0);
} 
return G__19785__delegate.call(this,args);};
G__19785.cljs$lang$maxFixedArity = 0;
G__19785.cljs$lang$applyTo = (function (arglist__19787){
var args = cljs.core.seq(arglist__19787);
return G__19785__delegate(args);
});
G__19785.cljs$core$IFn$_invoke$arity$variadic = G__19785__delegate;
return G__19785;
})()
;
});
/**
* Takes a set of functions and returns a fn that is the composition
* of those fns.  The returned fn takes a variable number of args,
* applies the rightmost of fns to the args, the next
* fn (right-to-left) to the result, etc.
* @param {...*} var_args
*/
cljs.core.comp = (function() {
var comp = null;
var comp__0 = (function (){
return cljs.core.identity;
});
var comp__1 = (function (f){
return f;
});
var comp__2 = (function (f,g){
return (function() {
var G__19842 = null;
var G__19842__0 = (function (){
var G__19815 = (function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__19815) : f.call(null,G__19815));
});
var G__19842__1 = (function (x){
var G__19816 = (function (){var G__19817 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__19817) : g.call(null,G__19817));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__19816) : f.call(null,G__19816));
});
var G__19842__2 = (function (x,y){
var G__19818 = (function (){var G__19819 = x;
var G__19820 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__19819,G__19820) : g.call(null,G__19819,G__19820));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__19818) : f.call(null,G__19818));
});
var G__19842__3 = (function (x,y,z){
var G__19821 = (function (){var G__19822 = x;
var G__19823 = y;
var G__19824 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__19822,G__19823,G__19824) : g.call(null,G__19822,G__19823,G__19824));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__19821) : f.call(null,G__19821));
});
var G__19842__4 = (function() { 
var G__19843__delegate = function (x,y,z,args){
var G__19825 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__19825) : f.call(null,G__19825));
};
var G__19843 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__19844__i = 0, G__19844__a = new Array(arguments.length -  3);
while (G__19844__i < G__19844__a.length) {G__19844__a[G__19844__i] = arguments[G__19844__i + 3]; ++G__19844__i;}
  args = new cljs.core.IndexedSeq(G__19844__a,0);
} 
return G__19843__delegate.call(this,x,y,z,args);};
G__19843.cljs$lang$maxFixedArity = 3;
G__19843.cljs$lang$applyTo = (function (arglist__19845){
var x = cljs.core.first(arglist__19845);
arglist__19845 = cljs.core.next(arglist__19845);
var y = cljs.core.first(arglist__19845);
arglist__19845 = cljs.core.next(arglist__19845);
var z = cljs.core.first(arglist__19845);
var args = cljs.core.rest(arglist__19845);
return G__19843__delegate(x,y,z,args);
});
G__19843.cljs$core$IFn$_invoke$arity$variadic = G__19843__delegate;
return G__19843;
})()
;
G__19842 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__19842__0.call(this);
case 1:
return G__19842__1.call(this,x);
case 2:
return G__19842__2.call(this,x,y);
case 3:
return G__19842__3.call(this,x,y,z);
default:
var G__19846 = null;
if (arguments.length > 3) {
var G__19847__i = 0, G__19847__a = new Array(arguments.length -  3);
while (G__19847__i < G__19847__a.length) {G__19847__a[G__19847__i] = arguments[G__19847__i + 3]; ++G__19847__i;}
G__19846 = new cljs.core.IndexedSeq(G__19847__a,0);
}
return G__19842__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__19846);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__19842.cljs$lang$maxFixedArity = 3;
G__19842.cljs$lang$applyTo = G__19842__4.cljs$lang$applyTo;
G__19842.cljs$core$IFn$_invoke$arity$0 = G__19842__0;
G__19842.cljs$core$IFn$_invoke$arity$1 = G__19842__1;
G__19842.cljs$core$IFn$_invoke$arity$2 = G__19842__2;
G__19842.cljs$core$IFn$_invoke$arity$3 = G__19842__3;
G__19842.cljs$core$IFn$_invoke$arity$variadic = G__19842__4.cljs$core$IFn$_invoke$arity$variadic;
return G__19842;
})()
});
var comp__3 = (function (f,g,h){
return (function() {
var G__19848 = null;
var G__19848__0 = (function (){
var G__19826 = (function (){var G__19827 = (function (){return (h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__19827) : g.call(null,G__19827));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__19826) : f.call(null,G__19826));
});
var G__19848__1 = (function (x){
var G__19828 = (function (){var G__19829 = (function (){var G__19830 = x;
return (h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(G__19830) : h.call(null,G__19830));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__19829) : g.call(null,G__19829));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__19828) : f.call(null,G__19828));
});
var G__19848__2 = (function (x,y){
var G__19831 = (function (){var G__19832 = (function (){var G__19833 = x;
var G__19834 = y;
return (h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(G__19833,G__19834) : h.call(null,G__19833,G__19834));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__19832) : g.call(null,G__19832));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__19831) : f.call(null,G__19831));
});
var G__19848__3 = (function (x,y,z){
var G__19835 = (function (){var G__19836 = (function (){var G__19837 = x;
var G__19838 = y;
var G__19839 = z;
return (h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(G__19837,G__19838,G__19839) : h.call(null,G__19837,G__19838,G__19839));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__19836) : g.call(null,G__19836));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__19835) : f.call(null,G__19835));
});
var G__19848__4 = (function() { 
var G__19849__delegate = function (x,y,z,args){
var G__19840 = (function (){var G__19841 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h,x,y,z,args);
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__19841) : g.call(null,G__19841));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__19840) : f.call(null,G__19840));
};
var G__19849 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__19850__i = 0, G__19850__a = new Array(arguments.length -  3);
while (G__19850__i < G__19850__a.length) {G__19850__a[G__19850__i] = arguments[G__19850__i + 3]; ++G__19850__i;}
  args = new cljs.core.IndexedSeq(G__19850__a,0);
} 
return G__19849__delegate.call(this,x,y,z,args);};
G__19849.cljs$lang$maxFixedArity = 3;
G__19849.cljs$lang$applyTo = (function (arglist__19851){
var x = cljs.core.first(arglist__19851);
arglist__19851 = cljs.core.next(arglist__19851);
var y = cljs.core.first(arglist__19851);
arglist__19851 = cljs.core.next(arglist__19851);
var z = cljs.core.first(arglist__19851);
var args = cljs.core.rest(arglist__19851);
return G__19849__delegate(x,y,z,args);
});
G__19849.cljs$core$IFn$_invoke$arity$variadic = G__19849__delegate;
return G__19849;
})()
;
G__19848 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__19848__0.call(this);
case 1:
return G__19848__1.call(this,x);
case 2:
return G__19848__2.call(this,x,y);
case 3:
return G__19848__3.call(this,x,y,z);
default:
var G__19852 = null;
if (arguments.length > 3) {
var G__19853__i = 0, G__19853__a = new Array(arguments.length -  3);
while (G__19853__i < G__19853__a.length) {G__19853__a[G__19853__i] = arguments[G__19853__i + 3]; ++G__19853__i;}
G__19852 = new cljs.core.IndexedSeq(G__19853__a,0);
}
return G__19848__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__19852);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__19848.cljs$lang$maxFixedArity = 3;
G__19848.cljs$lang$applyTo = G__19848__4.cljs$lang$applyTo;
G__19848.cljs$core$IFn$_invoke$arity$0 = G__19848__0;
G__19848.cljs$core$IFn$_invoke$arity$1 = G__19848__1;
G__19848.cljs$core$IFn$_invoke$arity$2 = G__19848__2;
G__19848.cljs$core$IFn$_invoke$arity$3 = G__19848__3;
G__19848.cljs$core$IFn$_invoke$arity$variadic = G__19848__4.cljs$core$IFn$_invoke$arity$variadic;
return G__19848;
})()
});
var comp__4 = (function() { 
var G__19854__delegate = function (f1,f2,f3,fs){
var fs__$1 = cljs.core.reverse(cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f1,f2,f3,fs));
return ((function (fs__$1){
return (function() { 
var G__19855__delegate = function (args){
var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.first(fs__$1),args);
var fs__$2 = cljs.core.next(fs__$1);
while(true){
if(fs__$2){
var G__19856 = cljs.core.first(fs__$2).call(null,ret);
var G__19857 = cljs.core.next(fs__$2);
ret = G__19856;
fs__$2 = G__19857;
continue;
} else {
return ret;
}
break;
}
};
var G__19855 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__19858__i = 0, G__19858__a = new Array(arguments.length -  0);
while (G__19858__i < G__19858__a.length) {G__19858__a[G__19858__i] = arguments[G__19858__i + 0]; ++G__19858__i;}
  args = new cljs.core.IndexedSeq(G__19858__a,0);
} 
return G__19855__delegate.call(this,args);};
G__19855.cljs$lang$maxFixedArity = 0;
G__19855.cljs$lang$applyTo = (function (arglist__19859){
var args = cljs.core.seq(arglist__19859);
return G__19855__delegate(args);
});
G__19855.cljs$core$IFn$_invoke$arity$variadic = G__19855__delegate;
return G__19855;
})()
;
;})(fs__$1))
};
var G__19854 = function (f1,f2,f3,var_args){
var fs = null;
if (arguments.length > 3) {
var G__19860__i = 0, G__19860__a = new Array(arguments.length -  3);
while (G__19860__i < G__19860__a.length) {G__19860__a[G__19860__i] = arguments[G__19860__i + 3]; ++G__19860__i;}
  fs = new cljs.core.IndexedSeq(G__19860__a,0);
} 
return G__19854__delegate.call(this,f1,f2,f3,fs);};
G__19854.cljs$lang$maxFixedArity = 3;
G__19854.cljs$lang$applyTo = (function (arglist__19861){
var f1 = cljs.core.first(arglist__19861);
arglist__19861 = cljs.core.next(arglist__19861);
var f2 = cljs.core.first(arglist__19861);
arglist__19861 = cljs.core.next(arglist__19861);
var f3 = cljs.core.first(arglist__19861);
var fs = cljs.core.rest(arglist__19861);
return G__19854__delegate(f1,f2,f3,fs);
});
G__19854.cljs$core$IFn$_invoke$arity$variadic = G__19854__delegate;
return G__19854;
})()
;
comp = function(f1,f2,f3,var_args){
var fs = var_args;
switch(arguments.length){
case 0:
return comp__0.call(this);
case 1:
return comp__1.call(this,f1);
case 2:
return comp__2.call(this,f1,f2);
case 3:
return comp__3.call(this,f1,f2,f3);
default:
var G__19862 = null;
if (arguments.length > 3) {
var G__19863__i = 0, G__19863__a = new Array(arguments.length -  3);
while (G__19863__i < G__19863__a.length) {G__19863__a[G__19863__i] = arguments[G__19863__i + 3]; ++G__19863__i;}
G__19862 = new cljs.core.IndexedSeq(G__19863__a,0);
}
return comp__4.cljs$core$IFn$_invoke$arity$variadic(f1,f2,f3, G__19862);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
comp.cljs$lang$maxFixedArity = 3;
comp.cljs$lang$applyTo = comp__4.cljs$lang$applyTo;
comp.cljs$core$IFn$_invoke$arity$0 = comp__0;
comp.cljs$core$IFn$_invoke$arity$1 = comp__1;
comp.cljs$core$IFn$_invoke$arity$2 = comp__2;
comp.cljs$core$IFn$_invoke$arity$3 = comp__3;
comp.cljs$core$IFn$_invoke$arity$variadic = comp__4.cljs$core$IFn$_invoke$arity$variadic;
return comp;
})()
;
/**
* Takes a function f and fewer than the normal arguments to f, and
* returns a fn that takes a variable number of additional args. When
* called, the returned function calls f with args + additional args.
* @param {...*} var_args
*/
cljs.core.partial = (function() {
var partial = null;
var partial__1 = (function (f){
return f;
});
var partial__2 = (function (f,arg1){
return (function() {
var G__19948 = null;
var G__19948__0 = (function (){
var G__19906 = arg1;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__19906) : f.call(null,G__19906));
});
var G__19948__1 = (function (x){
var G__19907 = arg1;
var G__19908 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__19907,G__19908) : f.call(null,G__19907,G__19908));
});
var G__19948__2 = (function (x,y){
var G__19909 = arg1;
var G__19910 = x;
var G__19911 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__19909,G__19910,G__19911) : f.call(null,G__19909,G__19910,G__19911));
});
var G__19948__3 = (function (x,y,z){
var G__19912 = arg1;
var G__19913 = x;
var G__19914 = y;
var G__19915 = z;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__19912,G__19913,G__19914,G__19915) : f.call(null,G__19912,G__19913,G__19914,G__19915));
});
var G__19948__4 = (function() { 
var G__19949__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,x,y,z,cljs.core.array_seq([args], 0));
};
var G__19949 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__19950__i = 0, G__19950__a = new Array(arguments.length -  3);
while (G__19950__i < G__19950__a.length) {G__19950__a[G__19950__i] = arguments[G__19950__i + 3]; ++G__19950__i;}
  args = new cljs.core.IndexedSeq(G__19950__a,0);
} 
return G__19949__delegate.call(this,x,y,z,args);};
G__19949.cljs$lang$maxFixedArity = 3;
G__19949.cljs$lang$applyTo = (function (arglist__19951){
var x = cljs.core.first(arglist__19951);
arglist__19951 = cljs.core.next(arglist__19951);
var y = cljs.core.first(arglist__19951);
arglist__19951 = cljs.core.next(arglist__19951);
var z = cljs.core.first(arglist__19951);
var args = cljs.core.rest(arglist__19951);
return G__19949__delegate(x,y,z,args);
});
G__19949.cljs$core$IFn$_invoke$arity$variadic = G__19949__delegate;
return G__19949;
})()
;
G__19948 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__19948__0.call(this);
case 1:
return G__19948__1.call(this,x);
case 2:
return G__19948__2.call(this,x,y);
case 3:
return G__19948__3.call(this,x,y,z);
default:
var G__19952 = null;
if (arguments.length > 3) {
var G__19953__i = 0, G__19953__a = new Array(arguments.length -  3);
while (G__19953__i < G__19953__a.length) {G__19953__a[G__19953__i] = arguments[G__19953__i + 3]; ++G__19953__i;}
G__19952 = new cljs.core.IndexedSeq(G__19953__a,0);
}
return G__19948__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__19952);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__19948.cljs$lang$maxFixedArity = 3;
G__19948.cljs$lang$applyTo = G__19948__4.cljs$lang$applyTo;
G__19948.cljs$core$IFn$_invoke$arity$0 = G__19948__0;
G__19948.cljs$core$IFn$_invoke$arity$1 = G__19948__1;
G__19948.cljs$core$IFn$_invoke$arity$2 = G__19948__2;
G__19948.cljs$core$IFn$_invoke$arity$3 = G__19948__3;
G__19948.cljs$core$IFn$_invoke$arity$variadic = G__19948__4.cljs$core$IFn$_invoke$arity$variadic;
return G__19948;
})()
});
var partial__3 = (function (f,arg1,arg2){
return (function() {
var G__19954 = null;
var G__19954__0 = (function (){
var G__19916 = arg1;
var G__19917 = arg2;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__19916,G__19917) : f.call(null,G__19916,G__19917));
});
var G__19954__1 = (function (x){
var G__19918 = arg1;
var G__19919 = arg2;
var G__19920 = x;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__19918,G__19919,G__19920) : f.call(null,G__19918,G__19919,G__19920));
});
var G__19954__2 = (function (x,y){
var G__19921 = arg1;
var G__19922 = arg2;
var G__19923 = x;
var G__19924 = y;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__19921,G__19922,G__19923,G__19924) : f.call(null,G__19921,G__19922,G__19923,G__19924));
});
var G__19954__3 = (function (x,y,z){
var G__19925 = arg1;
var G__19926 = arg2;
var G__19927 = x;
var G__19928 = y;
var G__19929 = z;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__19925,G__19926,G__19927,G__19928,G__19929) : f.call(null,G__19925,G__19926,G__19927,G__19928,G__19929));
});
var G__19954__4 = (function() { 
var G__19955__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,x,y,cljs.core.array_seq([z,args], 0));
};
var G__19955 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__19956__i = 0, G__19956__a = new Array(arguments.length -  3);
while (G__19956__i < G__19956__a.length) {G__19956__a[G__19956__i] = arguments[G__19956__i + 3]; ++G__19956__i;}
  args = new cljs.core.IndexedSeq(G__19956__a,0);
} 
return G__19955__delegate.call(this,x,y,z,args);};
G__19955.cljs$lang$maxFixedArity = 3;
G__19955.cljs$lang$applyTo = (function (arglist__19957){
var x = cljs.core.first(arglist__19957);
arglist__19957 = cljs.core.next(arglist__19957);
var y = cljs.core.first(arglist__19957);
arglist__19957 = cljs.core.next(arglist__19957);
var z = cljs.core.first(arglist__19957);
var args = cljs.core.rest(arglist__19957);
return G__19955__delegate(x,y,z,args);
});
G__19955.cljs$core$IFn$_invoke$arity$variadic = G__19955__delegate;
return G__19955;
})()
;
G__19954 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__19954__0.call(this);
case 1:
return G__19954__1.call(this,x);
case 2:
return G__19954__2.call(this,x,y);
case 3:
return G__19954__3.call(this,x,y,z);
default:
var G__19958 = null;
if (arguments.length > 3) {
var G__19959__i = 0, G__19959__a = new Array(arguments.length -  3);
while (G__19959__i < G__19959__a.length) {G__19959__a[G__19959__i] = arguments[G__19959__i + 3]; ++G__19959__i;}
G__19958 = new cljs.core.IndexedSeq(G__19959__a,0);
}
return G__19954__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__19958);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__19954.cljs$lang$maxFixedArity = 3;
G__19954.cljs$lang$applyTo = G__19954__4.cljs$lang$applyTo;
G__19954.cljs$core$IFn$_invoke$arity$0 = G__19954__0;
G__19954.cljs$core$IFn$_invoke$arity$1 = G__19954__1;
G__19954.cljs$core$IFn$_invoke$arity$2 = G__19954__2;
G__19954.cljs$core$IFn$_invoke$arity$3 = G__19954__3;
G__19954.cljs$core$IFn$_invoke$arity$variadic = G__19954__4.cljs$core$IFn$_invoke$arity$variadic;
return G__19954;
})()
});
var partial__4 = (function (f,arg1,arg2,arg3){
return (function() {
var G__19960 = null;
var G__19960__0 = (function (){
var G__19930 = arg1;
var G__19931 = arg2;
var G__19932 = arg3;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__19930,G__19931,G__19932) : f.call(null,G__19930,G__19931,G__19932));
});
var G__19960__1 = (function (x){
var G__19933 = arg1;
var G__19934 = arg2;
var G__19935 = arg3;
var G__19936 = x;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__19933,G__19934,G__19935,G__19936) : f.call(null,G__19933,G__19934,G__19935,G__19936));
});
var G__19960__2 = (function (x,y){
var G__19937 = arg1;
var G__19938 = arg2;
var G__19939 = arg3;
var G__19940 = x;
var G__19941 = y;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__19937,G__19938,G__19939,G__19940,G__19941) : f.call(null,G__19937,G__19938,G__19939,G__19940,G__19941));
});
var G__19960__3 = (function (x,y,z){
var G__19942 = arg1;
var G__19943 = arg2;
var G__19944 = arg3;
var G__19945 = x;
var G__19946 = y;
var G__19947 = z;
return (f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(G__19942,G__19943,G__19944,G__19945,G__19946,G__19947) : f.call(null,G__19942,G__19943,G__19944,G__19945,G__19946,G__19947));
});
var G__19960__4 = (function() { 
var G__19961__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,arg3,x,cljs.core.array_seq([y,z,args], 0));
};
var G__19961 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__19962__i = 0, G__19962__a = new Array(arguments.length -  3);
while (G__19962__i < G__19962__a.length) {G__19962__a[G__19962__i] = arguments[G__19962__i + 3]; ++G__19962__i;}
  args = new cljs.core.IndexedSeq(G__19962__a,0);
} 
return G__19961__delegate.call(this,x,y,z,args);};
G__19961.cljs$lang$maxFixedArity = 3;
G__19961.cljs$lang$applyTo = (function (arglist__19963){
var x = cljs.core.first(arglist__19963);
arglist__19963 = cljs.core.next(arglist__19963);
var y = cljs.core.first(arglist__19963);
arglist__19963 = cljs.core.next(arglist__19963);
var z = cljs.core.first(arglist__19963);
var args = cljs.core.rest(arglist__19963);
return G__19961__delegate(x,y,z,args);
});
G__19961.cljs$core$IFn$_invoke$arity$variadic = G__19961__delegate;
return G__19961;
})()
;
G__19960 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__19960__0.call(this);
case 1:
return G__19960__1.call(this,x);
case 2:
return G__19960__2.call(this,x,y);
case 3:
return G__19960__3.call(this,x,y,z);
default:
var G__19964 = null;
if (arguments.length > 3) {
var G__19965__i = 0, G__19965__a = new Array(arguments.length -  3);
while (G__19965__i < G__19965__a.length) {G__19965__a[G__19965__i] = arguments[G__19965__i + 3]; ++G__19965__i;}
G__19964 = new cljs.core.IndexedSeq(G__19965__a,0);
}
return G__19960__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__19964);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__19960.cljs$lang$maxFixedArity = 3;
G__19960.cljs$lang$applyTo = G__19960__4.cljs$lang$applyTo;
G__19960.cljs$core$IFn$_invoke$arity$0 = G__19960__0;
G__19960.cljs$core$IFn$_invoke$arity$1 = G__19960__1;
G__19960.cljs$core$IFn$_invoke$arity$2 = G__19960__2;
G__19960.cljs$core$IFn$_invoke$arity$3 = G__19960__3;
G__19960.cljs$core$IFn$_invoke$arity$variadic = G__19960__4.cljs$core$IFn$_invoke$arity$variadic;
return G__19960;
})()
});
var partial__5 = (function() { 
var G__19966__delegate = function (f,arg1,arg2,arg3,more){
return (function() { 
var G__19967__delegate = function (args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,arg1,arg2,arg3,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(more,args));
};
var G__19967 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__19968__i = 0, G__19968__a = new Array(arguments.length -  0);
while (G__19968__i < G__19968__a.length) {G__19968__a[G__19968__i] = arguments[G__19968__i + 0]; ++G__19968__i;}
  args = new cljs.core.IndexedSeq(G__19968__a,0);
} 
return G__19967__delegate.call(this,args);};
G__19967.cljs$lang$maxFixedArity = 0;
G__19967.cljs$lang$applyTo = (function (arglist__19969){
var args = cljs.core.seq(arglist__19969);
return G__19967__delegate(args);
});
G__19967.cljs$core$IFn$_invoke$arity$variadic = G__19967__delegate;
return G__19967;
})()
;
};
var G__19966 = function (f,arg1,arg2,arg3,var_args){
var more = null;
if (arguments.length > 4) {
var G__19970__i = 0, G__19970__a = new Array(arguments.length -  4);
while (G__19970__i < G__19970__a.length) {G__19970__a[G__19970__i] = arguments[G__19970__i + 4]; ++G__19970__i;}
  more = new cljs.core.IndexedSeq(G__19970__a,0);
} 
return G__19966__delegate.call(this,f,arg1,arg2,arg3,more);};
G__19966.cljs$lang$maxFixedArity = 4;
G__19966.cljs$lang$applyTo = (function (arglist__19971){
var f = cljs.core.first(arglist__19971);
arglist__19971 = cljs.core.next(arglist__19971);
var arg1 = cljs.core.first(arglist__19971);
arglist__19971 = cljs.core.next(arglist__19971);
var arg2 = cljs.core.first(arglist__19971);
arglist__19971 = cljs.core.next(arglist__19971);
var arg3 = cljs.core.first(arglist__19971);
var more = cljs.core.rest(arglist__19971);
return G__19966__delegate(f,arg1,arg2,arg3,more);
});
G__19966.cljs$core$IFn$_invoke$arity$variadic = G__19966__delegate;
return G__19966;
})()
;
partial = function(f,arg1,arg2,arg3,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return partial__1.call(this,f);
case 2:
return partial__2.call(this,f,arg1);
case 3:
return partial__3.call(this,f,arg1,arg2);
case 4:
return partial__4.call(this,f,arg1,arg2,arg3);
default:
var G__19972 = null;
if (arguments.length > 4) {
var G__19973__i = 0, G__19973__a = new Array(arguments.length -  4);
while (G__19973__i < G__19973__a.length) {G__19973__a[G__19973__i] = arguments[G__19973__i + 4]; ++G__19973__i;}
G__19972 = new cljs.core.IndexedSeq(G__19973__a,0);
}
return partial__5.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,arg3, G__19972);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partial.cljs$lang$maxFixedArity = 4;
partial.cljs$lang$applyTo = partial__5.cljs$lang$applyTo;
partial.cljs$core$IFn$_invoke$arity$1 = partial__1;
partial.cljs$core$IFn$_invoke$arity$2 = partial__2;
partial.cljs$core$IFn$_invoke$arity$3 = partial__3;
partial.cljs$core$IFn$_invoke$arity$4 = partial__4;
partial.cljs$core$IFn$_invoke$arity$variadic = partial__5.cljs$core$IFn$_invoke$arity$variadic;
return partial;
})()
;
/**
* Takes a function f, and returns a function that calls f, replacing
* a nil first argument to f with the supplied value x. Higher arity
* versions can replace arguments in the second and third
* positions (y, z). Note that the function f can take any number of
* arguments, not just the one(s) being nil-patched.
*/
cljs.core.fnil = (function() {
var fnil = null;
var fnil__2 = (function (f,x){
return (function() {
var G__20006 = null;
var G__20006__1 = (function (a){
var G__19990 = (((a == null))?x:a);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__19990) : f.call(null,G__19990));
});
var G__20006__2 = (function (a,b){
var G__19991 = (((a == null))?x:a);
var G__19992 = b;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__19991,G__19992) : f.call(null,G__19991,G__19992));
});
var G__20006__3 = (function (a,b,c){
var G__19993 = (((a == null))?x:a);
var G__19994 = b;
var G__19995 = c;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__19993,G__19994,G__19995) : f.call(null,G__19993,G__19994,G__19995));
});
var G__20006__4 = (function() { 
var G__20007__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),b,c,ds);
};
var G__20007 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__20008__i = 0, G__20008__a = new Array(arguments.length -  3);
while (G__20008__i < G__20008__a.length) {G__20008__a[G__20008__i] = arguments[G__20008__i + 3]; ++G__20008__i;}
  ds = new cljs.core.IndexedSeq(G__20008__a,0);
} 
return G__20007__delegate.call(this,a,b,c,ds);};
G__20007.cljs$lang$maxFixedArity = 3;
G__20007.cljs$lang$applyTo = (function (arglist__20009){
var a = cljs.core.first(arglist__20009);
arglist__20009 = cljs.core.next(arglist__20009);
var b = cljs.core.first(arglist__20009);
arglist__20009 = cljs.core.next(arglist__20009);
var c = cljs.core.first(arglist__20009);
var ds = cljs.core.rest(arglist__20009);
return G__20007__delegate(a,b,c,ds);
});
G__20007.cljs$core$IFn$_invoke$arity$variadic = G__20007__delegate;
return G__20007;
})()
;
G__20006 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 1:
return G__20006__1.call(this,a);
case 2:
return G__20006__2.call(this,a,b);
case 3:
return G__20006__3.call(this,a,b,c);
default:
var G__20010 = null;
if (arguments.length > 3) {
var G__20011__i = 0, G__20011__a = new Array(arguments.length -  3);
while (G__20011__i < G__20011__a.length) {G__20011__a[G__20011__i] = arguments[G__20011__i + 3]; ++G__20011__i;}
G__20010 = new cljs.core.IndexedSeq(G__20011__a,0);
}
return G__20006__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__20010);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__20006.cljs$lang$maxFixedArity = 3;
G__20006.cljs$lang$applyTo = G__20006__4.cljs$lang$applyTo;
G__20006.cljs$core$IFn$_invoke$arity$1 = G__20006__1;
G__20006.cljs$core$IFn$_invoke$arity$2 = G__20006__2;
G__20006.cljs$core$IFn$_invoke$arity$3 = G__20006__3;
G__20006.cljs$core$IFn$_invoke$arity$variadic = G__20006__4.cljs$core$IFn$_invoke$arity$variadic;
return G__20006;
})()
});
var fnil__3 = (function (f,x,y){
return (function() {
var G__20012 = null;
var G__20012__2 = (function (a,b){
var G__19996 = (((a == null))?x:a);
var G__19997 = (((b == null))?y:b);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__19996,G__19997) : f.call(null,G__19996,G__19997));
});
var G__20012__3 = (function (a,b,c){
var G__19998 = (((a == null))?x:a);
var G__19999 = (((b == null))?y:b);
var G__20000 = c;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__19998,G__19999,G__20000) : f.call(null,G__19998,G__19999,G__20000));
});
var G__20012__4 = (function() { 
var G__20013__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),(((b == null))?y:b),c,ds);
};
var G__20013 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__20014__i = 0, G__20014__a = new Array(arguments.length -  3);
while (G__20014__i < G__20014__a.length) {G__20014__a[G__20014__i] = arguments[G__20014__i + 3]; ++G__20014__i;}
  ds = new cljs.core.IndexedSeq(G__20014__a,0);
} 
return G__20013__delegate.call(this,a,b,c,ds);};
G__20013.cljs$lang$maxFixedArity = 3;
G__20013.cljs$lang$applyTo = (function (arglist__20015){
var a = cljs.core.first(arglist__20015);
arglist__20015 = cljs.core.next(arglist__20015);
var b = cljs.core.first(arglist__20015);
arglist__20015 = cljs.core.next(arglist__20015);
var c = cljs.core.first(arglist__20015);
var ds = cljs.core.rest(arglist__20015);
return G__20013__delegate(a,b,c,ds);
});
G__20013.cljs$core$IFn$_invoke$arity$variadic = G__20013__delegate;
return G__20013;
})()
;
G__20012 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 2:
return G__20012__2.call(this,a,b);
case 3:
return G__20012__3.call(this,a,b,c);
default:
var G__20016 = null;
if (arguments.length > 3) {
var G__20017__i = 0, G__20017__a = new Array(arguments.length -  3);
while (G__20017__i < G__20017__a.length) {G__20017__a[G__20017__i] = arguments[G__20017__i + 3]; ++G__20017__i;}
G__20016 = new cljs.core.IndexedSeq(G__20017__a,0);
}
return G__20012__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__20016);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__20012.cljs$lang$maxFixedArity = 3;
G__20012.cljs$lang$applyTo = G__20012__4.cljs$lang$applyTo;
G__20012.cljs$core$IFn$_invoke$arity$2 = G__20012__2;
G__20012.cljs$core$IFn$_invoke$arity$3 = G__20012__3;
G__20012.cljs$core$IFn$_invoke$arity$variadic = G__20012__4.cljs$core$IFn$_invoke$arity$variadic;
return G__20012;
})()
});
var fnil__4 = (function (f,x,y,z){
return (function() {
var G__20018 = null;
var G__20018__2 = (function (a,b){
var G__20001 = (((a == null))?x:a);
var G__20002 = (((b == null))?y:b);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__20001,G__20002) : f.call(null,G__20001,G__20002));
});
var G__20018__3 = (function (a,b,c){
var G__20003 = (((a == null))?x:a);
var G__20004 = (((b == null))?y:b);
var G__20005 = (((c == null))?z:c);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__20003,G__20004,G__20005) : f.call(null,G__20003,G__20004,G__20005));
});
var G__20018__4 = (function() { 
var G__20019__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),(((b == null))?y:b),(((c == null))?z:c),ds);
};
var G__20019 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__20020__i = 0, G__20020__a = new Array(arguments.length -  3);
while (G__20020__i < G__20020__a.length) {G__20020__a[G__20020__i] = arguments[G__20020__i + 3]; ++G__20020__i;}
  ds = new cljs.core.IndexedSeq(G__20020__a,0);
} 
return G__20019__delegate.call(this,a,b,c,ds);};
G__20019.cljs$lang$maxFixedArity = 3;
G__20019.cljs$lang$applyTo = (function (arglist__20021){
var a = cljs.core.first(arglist__20021);
arglist__20021 = cljs.core.next(arglist__20021);
var b = cljs.core.first(arglist__20021);
arglist__20021 = cljs.core.next(arglist__20021);
var c = cljs.core.first(arglist__20021);
var ds = cljs.core.rest(arglist__20021);
return G__20019__delegate(a,b,c,ds);
});
G__20019.cljs$core$IFn$_invoke$arity$variadic = G__20019__delegate;
return G__20019;
})()
;
G__20018 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 2:
return G__20018__2.call(this,a,b);
case 3:
return G__20018__3.call(this,a,b,c);
default:
var G__20022 = null;
if (arguments.length > 3) {
var G__20023__i = 0, G__20023__a = new Array(arguments.length -  3);
while (G__20023__i < G__20023__a.length) {G__20023__a[G__20023__i] = arguments[G__20023__i + 3]; ++G__20023__i;}
G__20022 = new cljs.core.IndexedSeq(G__20023__a,0);
}
return G__20018__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__20022);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__20018.cljs$lang$maxFixedArity = 3;
G__20018.cljs$lang$applyTo = G__20018__4.cljs$lang$applyTo;
G__20018.cljs$core$IFn$_invoke$arity$2 = G__20018__2;
G__20018.cljs$core$IFn$_invoke$arity$3 = G__20018__3;
G__20018.cljs$core$IFn$_invoke$arity$variadic = G__20018__4.cljs$core$IFn$_invoke$arity$variadic;
return G__20018;
})()
});
fnil = function(f,x,y,z){
switch(arguments.length){
case 2:
return fnil__2.call(this,f,x);
case 3:
return fnil__3.call(this,f,x,y);
case 4:
return fnil__4.call(this,f,x,y,z);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
fnil.cljs$core$IFn$_invoke$arity$2 = fnil__2;
fnil.cljs$core$IFn$_invoke$arity$3 = fnil__3;
fnil.cljs$core$IFn$_invoke$arity$4 = fnil__4;
return fnil;
})()
;
/**
* Returns a lazy sequence consisting of the result of applying f to 0
* and the first item of coll, followed by applying f to 1 and the second
* item in coll, etc, until coll is exhausted. Thus function f should
* accept 2 arguments, index and item.
*/
cljs.core.map_indexed = (function() {
var map_indexed = null;
var map_indexed__1 = (function (f){
return (function (rf){
var i = (function (){var G__20054 = (-1);
return (cljs.core.volatile_BANG_.cljs$core$IFn$_invoke$arity$1 ? cljs.core.volatile_BANG_.cljs$core$IFn$_invoke$arity$1(G__20054) : cljs.core.volatile_BANG_.call(null,G__20054));
})();
return ((function (i){
return (function() {
var G__20084 = null;
var G__20084__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__20084__1 = (function (result){
var G__20055 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__20055) : rf.call(null,G__20055));
});
var G__20084__2 = (function (result,input){
var G__20056 = result;
var G__20057 = (function (){var G__20058 = cljs.core._vreset_BANG_(i,(cljs.core._deref(i) + (1)));
var G__20059 = input;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__20058,G__20059) : f.call(null,G__20058,G__20059));
})();
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__20056,G__20057) : rf.call(null,G__20056,G__20057));
});
G__20084 = function(result,input){
switch(arguments.length){
case 0:
return G__20084__0.call(this);
case 1:
return G__20084__1.call(this,result);
case 2:
return G__20084__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__20084.cljs$core$IFn$_invoke$arity$0 = G__20084__0;
G__20084.cljs$core$IFn$_invoke$arity$1 = G__20084__1;
G__20084.cljs$core$IFn$_invoke$arity$2 = G__20084__2;
return G__20084;
})()
;})(i))
});
});
var map_indexed__2 = (function (f,coll){
var mapi = (function mapi(idx,coll__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll__$1);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__8391__auto___20085 = size;
var i_20086 = (0);
while(true){
if((i_20086 < n__8391__auto___20085)){
cljs.core.chunk_append(b,(function (){var G__20080 = (idx + i_20086);
var G__20081 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_20086);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__20080,G__20081) : f.call(null,G__20080,G__20081));
})());

var G__20087 = (i_20086 + (1));
i_20086 = G__20087;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),mapi((idx + size),cljs.core.chunk_rest(s)));
} else {
return cljs.core.cons((function (){var G__20082 = idx;
var G__20083 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__20082,G__20083) : f.call(null,G__20082,G__20083));
})(),mapi((idx + (1)),cljs.core.rest(s)));
}
} else {
return null;
}
}),null,null));
});
return mapi((0),coll);
});
map_indexed = function(f,coll){
switch(arguments.length){
case 1:
return map_indexed__1.call(this,f);
case 2:
return map_indexed__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
map_indexed.cljs$core$IFn$_invoke$arity$1 = map_indexed__1;
map_indexed.cljs$core$IFn$_invoke$arity$2 = map_indexed__2;
return map_indexed;
})()
;
/**
* Returns a lazy sequence of the non-nil results of (f item). Note,
* this means false return values will be included.  f must be free of
* side-effects.  Returns a transducer when no collection is provided.
*/
cljs.core.keep = (function() {
var keep = null;
var keep__1 = (function (f){
return (function (rf){
return (function() {
var G__20106 = null;
var G__20106__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__20106__1 = (function (result){
var G__20100 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__20100) : rf.call(null,G__20100));
});
var G__20106__2 = (function (result,input){
var v = (function (){var G__20101 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__20101) : f.call(null,G__20101));
})();
if((v == null)){
return result;
} else {
var G__20102 = result;
var G__20103 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__20102,G__20103) : rf.call(null,G__20102,G__20103));
}
});
G__20106 = function(result,input){
switch(arguments.length){
case 0:
return G__20106__0.call(this);
case 1:
return G__20106__1.call(this,result);
case 2:
return G__20106__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__20106.cljs$core$IFn$_invoke$arity$0 = G__20106__0;
G__20106.cljs$core$IFn$_invoke$arity$1 = G__20106__1;
G__20106.cljs$core$IFn$_invoke$arity$2 = G__20106__2;
return G__20106;
})()
});
});
var keep__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__8391__auto___20107 = size;
var i_20108 = (0);
while(true){
if((i_20108 < n__8391__auto___20107)){
var x_20109 = (function (){var G__20104 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_20108);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__20104) : f.call(null,G__20104));
})();
if((x_20109 == null)){
} else {
cljs.core.chunk_append(b,x_20109);
}

var G__20110 = (i_20108 + (1));
i_20108 = G__20110;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.chunk_rest(s)));
} else {
var x = (function (){var G__20105 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__20105) : f.call(null,G__20105));
})();
if((x == null)){
return keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s));
} else {
return cljs.core.cons(x,keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s)));
}
}
} else {
return null;
}
}),null,null));
});
keep = function(f,coll){
switch(arguments.length){
case 1:
return keep__1.call(this,f);
case 2:
return keep__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
keep.cljs$core$IFn$_invoke$arity$1 = keep__1;
keep.cljs$core$IFn$_invoke$arity$2 = keep__2;
return keep;
})()
;

/**
* @constructor
*/
cljs.core.Atom = (function (state,meta,validator,watches){
this.state = state;
this.meta = meta;
this.validator = validator;
this.watches = watches;
this.cljs$lang$protocol_mask$partition0$ = 6455296;
this.cljs$lang$protocol_mask$partition1$ = 16386;
})
cljs.core.Atom.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__20111 = this$__$1;
return goog.getUid(G__20111);
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = (function (this$,oldval,newval){
var self__ = this;
var this$__$1 = this;
var seq__20112 = cljs.core.seq(self__.watches);
var chunk__20113 = null;
var count__20114 = (0);
var i__20115 = (0);
while(true){
if((i__20115 < count__20114)){
var vec__20116 = chunk__20113.cljs$core$IIndexed$_nth$arity$2(null,i__20115);
var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20116,(0),null);
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20116,(1),null);
var G__20117_20126 = key;
var G__20118_20127 = this$__$1;
var G__20119_20128 = oldval;
var G__20120_20129 = newval;
(f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__20117_20126,G__20118_20127,G__20119_20128,G__20120_20129) : f.call(null,G__20117_20126,G__20118_20127,G__20119_20128,G__20120_20129));

var G__20130 = seq__20112;
var G__20131 = chunk__20113;
var G__20132 = count__20114;
var G__20133 = (i__20115 + (1));
seq__20112 = G__20130;
chunk__20113 = G__20131;
count__20114 = G__20132;
i__20115 = G__20133;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__20112);
if(temp__4126__auto__){
var seq__20112__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__20112__$1)){
var c__8291__auto__ = cljs.core.chunk_first(seq__20112__$1);
var G__20134 = cljs.core.chunk_rest(seq__20112__$1);
var G__20135 = c__8291__auto__;
var G__20136 = cljs.core.count(c__8291__auto__);
var G__20137 = (0);
seq__20112 = G__20134;
chunk__20113 = G__20135;
count__20114 = G__20136;
i__20115 = G__20137;
continue;
} else {
var vec__20121 = cljs.core.first(seq__20112__$1);
var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20121,(0),null);
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20121,(1),null);
var G__20122_20138 = key;
var G__20123_20139 = this$__$1;
var G__20124_20140 = oldval;
var G__20125_20141 = newval;
(f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__20122_20138,G__20123_20139,G__20124_20140,G__20125_20141) : f.call(null,G__20122_20138,G__20123_20139,G__20124_20140,G__20125_20141));

var G__20142 = cljs.core.next(seq__20112__$1);
var G__20143 = null;
var G__20144 = (0);
var G__20145 = (0);
seq__20112 = G__20142;
chunk__20113 = G__20143;
count__20114 = G__20144;
i__20115 = G__20145;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_add_watch$arity$3 = (function (this$,key,f){
var self__ = this;
var this$__$1 = this;
this$__$1.watches = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.watches,key,f);

return this$__$1;
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = (function (this$,key){
var self__ = this;
var this$__$1 = this;
return this$__$1.watches = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.watches,key);
});

cljs.core.Atom.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.meta;
});

cljs.core.Atom.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.state;
});

cljs.core.Atom.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var self__ = this;
var o__$1 = this;
return (o__$1 === other);
});

cljs.core.Atom.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Atom.cljs$lang$type = true;

cljs.core.Atom.cljs$lang$ctorStr = "cljs.core/Atom";

cljs.core.Atom.cljs$lang$ctorPrWriter = (function (this__8091__auto__,writer__8092__auto__,opt__8093__auto__){
return cljs.core._write(writer__8092__auto__,"cljs.core/Atom");
});

cljs.core.__GT_Atom = (function __GT_Atom(state,meta,validator,watches){
return (new cljs.core.Atom(state,meta,validator,watches));
});

/**
* Creates and returns an Atom with an initial value of x and zero or
* more options (in any order):
* 
* :meta metadata-map
* 
* :validator validate-fn
* 
* If metadata-map is supplied, it will be come the metadata on the
* atom. validate-fn must be nil or a side-effect-free fn of one
* argument, which will be passed the intended new state on any state
* change. If the new state is unacceptable, the validate-fn should
* return false or throw an Error.  If either of these error conditions
* occur, then the value of the atom will not change.
* @param {...*} var_args
*/
cljs.core.atom = (function() {
var atom = null;
var atom__1 = (function (x){
return (new cljs.core.Atom(x,null,null,null));
});
var atom__2 = (function() { 
var G__20149__delegate = function (x,p__20146){
var map__20148 = p__20146;
var map__20148__$1 = ((cljs.core.seq_QMARK_(map__20148))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__20148):map__20148);
var validator = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__20148__$1,new cljs.core.Keyword(null,"validator","validator",-1966190681));
var meta = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__20148__$1,new cljs.core.Keyword(null,"meta","meta",1499536964));
return (new cljs.core.Atom(x,meta,validator,null));
};
var G__20149 = function (x,var_args){
var p__20146 = null;
if (arguments.length > 1) {
var G__20150__i = 0, G__20150__a = new Array(arguments.length -  1);
while (G__20150__i < G__20150__a.length) {G__20150__a[G__20150__i] = arguments[G__20150__i + 1]; ++G__20150__i;}
  p__20146 = new cljs.core.IndexedSeq(G__20150__a,0);
} 
return G__20149__delegate.call(this,x,p__20146);};
G__20149.cljs$lang$maxFixedArity = 1;
G__20149.cljs$lang$applyTo = (function (arglist__20151){
var x = cljs.core.first(arglist__20151);
var p__20146 = cljs.core.rest(arglist__20151);
return G__20149__delegate(x,p__20146);
});
G__20149.cljs$core$IFn$_invoke$arity$variadic = G__20149__delegate;
return G__20149;
})()
;
atom = function(x,var_args){
var p__20146 = var_args;
switch(arguments.length){
case 1:
return atom__1.call(this,x);
default:
var G__20152 = null;
if (arguments.length > 1) {
var G__20153__i = 0, G__20153__a = new Array(arguments.length -  1);
while (G__20153__i < G__20153__a.length) {G__20153__a[G__20153__i] = arguments[G__20153__i + 1]; ++G__20153__i;}
G__20152 = new cljs.core.IndexedSeq(G__20153__a,0);
}
return atom__2.cljs$core$IFn$_invoke$arity$variadic(x, G__20152);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
atom.cljs$lang$maxFixedArity = 1;
atom.cljs$lang$applyTo = atom__2.cljs$lang$applyTo;
atom.cljs$core$IFn$_invoke$arity$1 = atom__1;
atom.cljs$core$IFn$_invoke$arity$variadic = atom__2.cljs$core$IFn$_invoke$arity$variadic;
return atom;
})()
;
/**
* Sets the value of atom to newval without regard for the
* current value. Returns newval.
*/
cljs.core.reset_BANG_ = (function reset_BANG_(a,new_value){
if((a instanceof cljs.core.Atom)){
var validate = a.validator;
if((validate == null)){
} else {
if(cljs.core.truth_((function (){var G__20156 = new_value;
return (validate.cljs$core$IFn$_invoke$arity$1 ? validate.cljs$core$IFn$_invoke$arity$1(G__20156) : validate.call(null,G__20156));
})())){
} else {
throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str("Validator rejected reference state"),cljs.core.str("\n"),cljs.core.str((function (){var G__20157 = cljs.core.list(new cljs.core.Symbol(null,"validate","validate",1439230700,null),new cljs.core.Symbol(null,"new-value","new-value",-1567397401,null));
return (cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1 ? cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1(G__20157) : cljs.core.pr_str.call(null,G__20157));
})())].join('')));
}
}

var old_value = a.state;
a.state = new_value;

if((a.watches == null)){
} else {
cljs.core._notify_watches(a,old_value,new_value);
}

return new_value;
} else {
return cljs.core._reset_BANG_(a,new_value);
}
});
/**
* Atomically swaps the value of atom to be:
* (apply f current-value-of-atom args). Note that f may be called
* multiple times, and thus should be free of side effects.  Returns
* the value that was swapped in.
* @param {...*} var_args
*/
cljs.core.swap_BANG_ = (function() {
var swap_BANG_ = null;
var swap_BANG___2 = (function (a,f){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__20164 = a.state;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__20164) : f.call(null,G__20164));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$2(a,f);
}
});
var swap_BANG___3 = (function (a,f,x){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__20165 = a.state;
var G__20166 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__20165,G__20166) : f.call(null,G__20165,G__20166));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$3(a,f,x);
}
});
var swap_BANG___4 = (function (a,f,x,y){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__20167 = a.state;
var G__20168 = x;
var G__20169 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__20167,G__20168,G__20169) : f.call(null,G__20167,G__20168,G__20169));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$4(a,f,x,y);
}
});
var swap_BANG___5 = (function() { 
var G__20170__delegate = function (a,f,x,y,more){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,a.state,x,y,more));
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$5(a,f,x,y,more);
}
};
var G__20170 = function (a,f,x,y,var_args){
var more = null;
if (arguments.length > 4) {
var G__20171__i = 0, G__20171__a = new Array(arguments.length -  4);
while (G__20171__i < G__20171__a.length) {G__20171__a[G__20171__i] = arguments[G__20171__i + 4]; ++G__20171__i;}
  more = new cljs.core.IndexedSeq(G__20171__a,0);
} 
return G__20170__delegate.call(this,a,f,x,y,more);};
G__20170.cljs$lang$maxFixedArity = 4;
G__20170.cljs$lang$applyTo = (function (arglist__20172){
var a = cljs.core.first(arglist__20172);
arglist__20172 = cljs.core.next(arglist__20172);
var f = cljs.core.first(arglist__20172);
arglist__20172 = cljs.core.next(arglist__20172);
var x = cljs.core.first(arglist__20172);
arglist__20172 = cljs.core.next(arglist__20172);
var y = cljs.core.first(arglist__20172);
var more = cljs.core.rest(arglist__20172);
return G__20170__delegate(a,f,x,y,more);
});
G__20170.cljs$core$IFn$_invoke$arity$variadic = G__20170__delegate;
return G__20170;
})()
;
swap_BANG_ = function(a,f,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return swap_BANG___2.call(this,a,f);
case 3:
return swap_BANG___3.call(this,a,f,x);
case 4:
return swap_BANG___4.call(this,a,f,x,y);
default:
var G__20173 = null;
if (arguments.length > 4) {
var G__20174__i = 0, G__20174__a = new Array(arguments.length -  4);
while (G__20174__i < G__20174__a.length) {G__20174__a[G__20174__i] = arguments[G__20174__i + 4]; ++G__20174__i;}
G__20173 = new cljs.core.IndexedSeq(G__20174__a,0);
}
return swap_BANG___5.cljs$core$IFn$_invoke$arity$variadic(a,f,x,y, G__20173);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
swap_BANG_.cljs$lang$maxFixedArity = 4;
swap_BANG_.cljs$lang$applyTo = swap_BANG___5.cljs$lang$applyTo;
swap_BANG_.cljs$core$IFn$_invoke$arity$2 = swap_BANG___2;
swap_BANG_.cljs$core$IFn$_invoke$arity$3 = swap_BANG___3;
swap_BANG_.cljs$core$IFn$_invoke$arity$4 = swap_BANG___4;
swap_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_BANG___5.cljs$core$IFn$_invoke$arity$variadic;
return swap_BANG_;
})()
;
/**
* Atomically sets the value of atom to newval if and only if the
* current value of the atom is equal to oldval. Returns true if
* set happened, else false.
*/
cljs.core.compare_and_set_BANG_ = (function compare_and_set_BANG_(a,oldval,newval){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(a.cljs$core$IDeref$_deref$arity$1(null),oldval)){
cljs.core.reset_BANG_(a,newval);

return true;
} else {
return false;
}
});
/**
* Sets the validator-fn for an atom. validator-fn must be nil or a
* side-effect-free fn of one argument, which will be passed the intended
* new state on any state change. If the new state is unacceptable, the
* validator-fn should return false or throw an Error. If the current state
* is not acceptable to the new validator, an Error will be thrown and the
* validator will not be changed.
*/
cljs.core.set_validator_BANG_ = (function set_validator_BANG_(iref,val){
return iref.validator = val;
});
/**
* Gets the validator-fn for a var/ref/agent/atom.
*/
cljs.core.get_validator = (function get_validator(iref){
return iref.validator;
});

/**
* @constructor
*/
cljs.core.Volatile = (function (state){
this.state = state;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32768;
})
cljs.core.Volatile.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.state;
});

cljs.core.Volatile.prototype.cljs$core$IVolatile$ = true;

cljs.core.Volatile.prototype.cljs$core$IVolatile$_vreset_BANG_$arity$2 = (function (_,new_state){
var self__ = this;
var ___$1 = this;
return self__.state = new_state;
});

cljs.core.Volatile.cljs$lang$type = true;

cljs.core.Volatile.cljs$lang$ctorStr = "cljs.core/Volatile";

cljs.core.Volatile.cljs$lang$ctorPrWriter = (function (this__8091__auto__,writer__8092__auto__,opt__8093__auto__){
return cljs.core._write(writer__8092__auto__,"cljs.core/Volatile");
});

cljs.core.__GT_Volatile = (function __GT_Volatile(state){
return (new cljs.core.Volatile(state));
});

/**
* Creates and returns a Volatile with an initial value of val.
*/
cljs.core.volatile_BANG_ = (function volatile_BANG_(val){
return (new cljs.core.Volatile(val));
});
/**
* Returns true if x is a volatile.
*/
cljs.core.volatile_QMARK_ = (function volatile_QMARK_(x){
return (x instanceof cljs.core.Volatile);
});
/**
* Sets the value of volatile to newval without regard for the
* current value. Returns newval.
*/
cljs.core.vreset_BANG_ = (function vreset_BANG_(vol,newval){
return cljs.core._vreset_BANG_(vol,newval);
});
/**
* Returns a lazy sequence of the non-nil results of (f index item). Note,
* this means false return values will be included.  f must be free of
* side-effects.  Returns a stateful transducer when no collection is
* provided.
*/
cljs.core.keep_indexed = (function() {
var keep_indexed = null;
var keep_indexed__1 = (function (f){
return (function (rf){
var ia = cljs.core.volatile_BANG_((-1));
return ((function (ia){
return (function() {
var G__20241 = null;
var G__20241__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__20241__1 = (function (result){
var G__20208 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__20208) : rf.call(null,G__20208));
});
var G__20241__2 = (function (result,input){
var i = ia.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(ia.cljs$core$IDeref$_deref$arity$1(null) + (1)));
var v = (function (){var G__20209 = i;
var G__20210 = input;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__20209,G__20210) : f.call(null,G__20209,G__20210));
})();
if((v == null)){
return result;
} else {
var G__20211 = result;
var G__20212 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__20211,G__20212) : rf.call(null,G__20211,G__20212));
}
});
G__20241 = function(result,input){
switch(arguments.length){
case 0:
return G__20241__0.call(this);
case 1:
return G__20241__1.call(this,result);
case 2:
return G__20241__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__20241.cljs$core$IFn$_invoke$arity$0 = G__20241__0;
G__20241.cljs$core$IFn$_invoke$arity$1 = G__20241__1;
G__20241.cljs$core$IFn$_invoke$arity$2 = G__20241__2;
return G__20241;
})()
;})(ia))
});
});
var keep_indexed__2 = (function (f,coll){
var keepi = (function keepi(idx,coll__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll__$1);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__8391__auto___20242 = size;
var i_20243 = (0);
while(true){
if((i_20243 < n__8391__auto___20242)){
var x_20244 = (function (){var G__20237 = (idx + i_20243);
var G__20238 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_20243);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__20237,G__20238) : f.call(null,G__20237,G__20238));
})();
if((x_20244 == null)){
} else {
cljs.core.chunk_append(b,x_20244);
}

var G__20245 = (i_20243 + (1));
i_20243 = G__20245;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),keepi((idx + size),cljs.core.chunk_rest(s)));
} else {
var x = (function (){var G__20239 = idx;
var G__20240 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__20239,G__20240) : f.call(null,G__20239,G__20240));
})();
if((x == null)){
return keepi((idx + (1)),cljs.core.rest(s));
} else {
return cljs.core.cons(x,keepi((idx + (1)),cljs.core.rest(s)));
}
}
} else {
return null;
}
}),null,null));
});
return keepi((0),coll);
});
keep_indexed = function(f,coll){
switch(arguments.length){
case 1:
return keep_indexed__1.call(this,f);
case 2:
return keep_indexed__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
keep_indexed.cljs$core$IFn$_invoke$arity$1 = keep_indexed__1;
keep_indexed.cljs$core$IFn$_invoke$arity$2 = keep_indexed__2;
return keep_indexed;
})()
;
/**
* Takes a set of predicates and returns a function f that returns true if all of its
* composing predicates return a logical true value against all of its arguments, else it returns
* false. Note that f is short-circuiting in that it will stop execution on the first
* argument that triggers a logical false result against the original predicates.
* @param {...*} var_args
*/
cljs.core.every_pred = (function() {
var every_pred = null;
var every_pred__1 = (function (p){
return (function() {
var ep1 = null;
var ep1__0 = (function (){
return true;
});
var ep1__1 = (function (x){
return cljs.core.boolean$((function (){var G__20459 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__20459) : p.call(null,G__20459));
})());
});
var ep1__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__7492__auto__ = (function (){var G__20461 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__20461) : p.call(null,G__20461));
})();
if(cljs.core.truth_(and__7492__auto__)){
var G__20462 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__20462) : p.call(null,G__20462));
} else {
return and__7492__auto__;
}
})());
});
var ep1__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__7492__auto__ = (function (){var G__20464 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__20464) : p.call(null,G__20464));
})();
if(cljs.core.truth_(and__7492__auto__)){
var and__7492__auto____$1 = (function (){var G__20466 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__20466) : p.call(null,G__20466));
})();
if(cljs.core.truth_(and__7492__auto____$1)){
var G__20467 = z;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__20467) : p.call(null,G__20467));
} else {
return and__7492__auto____$1;
}
} else {
return and__7492__auto__;
}
})());
});
var ep1__4 = (function() { 
var G__20636__delegate = function (x,y,z,args){
return cljs.core.boolean$((ep1.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_(p,args)));
};
var G__20636 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__20637__i = 0, G__20637__a = new Array(arguments.length -  3);
while (G__20637__i < G__20637__a.length) {G__20637__a[G__20637__i] = arguments[G__20637__i + 3]; ++G__20637__i;}
  args = new cljs.core.IndexedSeq(G__20637__a,0);
} 
return G__20636__delegate.call(this,x,y,z,args);};
G__20636.cljs$lang$maxFixedArity = 3;
G__20636.cljs$lang$applyTo = (function (arglist__20638){
var x = cljs.core.first(arglist__20638);
arglist__20638 = cljs.core.next(arglist__20638);
var y = cljs.core.first(arglist__20638);
arglist__20638 = cljs.core.next(arglist__20638);
var z = cljs.core.first(arglist__20638);
var args = cljs.core.rest(arglist__20638);
return G__20636__delegate(x,y,z,args);
});
G__20636.cljs$core$IFn$_invoke$arity$variadic = G__20636__delegate;
return G__20636;
})()
;
ep1 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return ep1__0.call(this);
case 1:
return ep1__1.call(this,x);
case 2:
return ep1__2.call(this,x,y);
case 3:
return ep1__3.call(this,x,y,z);
default:
var G__20639 = null;
if (arguments.length > 3) {
var G__20640__i = 0, G__20640__a = new Array(arguments.length -  3);
while (G__20640__i < G__20640__a.length) {G__20640__a[G__20640__i] = arguments[G__20640__i + 3]; ++G__20640__i;}
G__20639 = new cljs.core.IndexedSeq(G__20640__a,0);
}
return ep1__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__20639);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ep1.cljs$lang$maxFixedArity = 3;
ep1.cljs$lang$applyTo = ep1__4.cljs$lang$applyTo;
ep1.cljs$core$IFn$_invoke$arity$0 = ep1__0;
ep1.cljs$core$IFn$_invoke$arity$1 = ep1__1;
ep1.cljs$core$IFn$_invoke$arity$2 = ep1__2;
ep1.cljs$core$IFn$_invoke$arity$3 = ep1__3;
ep1.cljs$core$IFn$_invoke$arity$variadic = ep1__4.cljs$core$IFn$_invoke$arity$variadic;
return ep1;
})()
});
var every_pred__2 = (function (p1,p2){
return (function() {
var ep2 = null;
var ep2__0 = (function (){
return true;
});
var ep2__1 = (function (x){
return cljs.core.boolean$((function (){var and__7492__auto__ = (function (){var G__20499 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__20499) : p1.call(null,G__20499));
})();
if(cljs.core.truth_(and__7492__auto__)){
var G__20500 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__20500) : p2.call(null,G__20500));
} else {
return and__7492__auto__;
}
})());
});
var ep2__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__7492__auto__ = (function (){var G__20502 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__20502) : p1.call(null,G__20502));
})();
if(cljs.core.truth_(and__7492__auto__)){
var and__7492__auto____$1 = (function (){var G__20504 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__20504) : p1.call(null,G__20504));
})();
if(cljs.core.truth_(and__7492__auto____$1)){
var and__7492__auto____$2 = (function (){var G__20506 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__20506) : p2.call(null,G__20506));
})();
if(cljs.core.truth_(and__7492__auto____$2)){
var G__20507 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__20507) : p2.call(null,G__20507));
} else {
return and__7492__auto____$2;
}
} else {
return and__7492__auto____$1;
}
} else {
return and__7492__auto__;
}
})());
});
var ep2__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__7492__auto__ = (function (){var G__20509 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__20509) : p1.call(null,G__20509));
})();
if(cljs.core.truth_(and__7492__auto__)){
var and__7492__auto____$1 = (function (){var G__20511 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__20511) : p1.call(null,G__20511));
})();
if(cljs.core.truth_(and__7492__auto____$1)){
var and__7492__auto____$2 = (function (){var G__20513 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__20513) : p1.call(null,G__20513));
})();
if(cljs.core.truth_(and__7492__auto____$2)){
var and__7492__auto____$3 = (function (){var G__20515 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__20515) : p2.call(null,G__20515));
})();
if(cljs.core.truth_(and__7492__auto____$3)){
var and__7492__auto____$4 = (function (){var G__20517 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__20517) : p2.call(null,G__20517));
})();
if(cljs.core.truth_(and__7492__auto____$4)){
var G__20518 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__20518) : p2.call(null,G__20518));
} else {
return and__7492__auto____$4;
}
} else {
return and__7492__auto____$3;
}
} else {
return and__7492__auto____$2;
}
} else {
return and__7492__auto____$1;
}
} else {
return and__7492__auto__;
}
})());
});
var ep2__4 = (function() { 
var G__20641__delegate = function (x,y,z,args){
return cljs.core.boolean$((ep2.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_((function (p1__20246_SHARP_){
var and__7492__auto__ = (function (){var G__20523 = p1__20246_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__20523) : p1.call(null,G__20523));
})();
if(cljs.core.truth_(and__7492__auto__)){
var G__20524 = p1__20246_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__20524) : p2.call(null,G__20524));
} else {
return and__7492__auto__;
}
}),args)));
};
var G__20641 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__20642__i = 0, G__20642__a = new Array(arguments.length -  3);
while (G__20642__i < G__20642__a.length) {G__20642__a[G__20642__i] = arguments[G__20642__i + 3]; ++G__20642__i;}
  args = new cljs.core.IndexedSeq(G__20642__a,0);
} 
return G__20641__delegate.call(this,x,y,z,args);};
G__20641.cljs$lang$maxFixedArity = 3;
G__20641.cljs$lang$applyTo = (function (arglist__20643){
var x = cljs.core.first(arglist__20643);
arglist__20643 = cljs.core.next(arglist__20643);
var y = cljs.core.first(arglist__20643);
arglist__20643 = cljs.core.next(arglist__20643);
var z = cljs.core.first(arglist__20643);
var args = cljs.core.rest(arglist__20643);
return G__20641__delegate(x,y,z,args);
});
G__20641.cljs$core$IFn$_invoke$arity$variadic = G__20641__delegate;
return G__20641;
})()
;
ep2 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return ep2__0.call(this);
case 1:
return ep2__1.call(this,x);
case 2:
return ep2__2.call(this,x,y);
case 3:
return ep2__3.call(this,x,y,z);
default:
var G__20644 = null;
if (arguments.length > 3) {
var G__20645__i = 0, G__20645__a = new Array(arguments.length -  3);
while (G__20645__i < G__20645__a.length) {G__20645__a[G__20645__i] = arguments[G__20645__i + 3]; ++G__20645__i;}
G__20644 = new cljs.core.IndexedSeq(G__20645__a,0);
}
return ep2__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__20644);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ep2.cljs$lang$maxFixedArity = 3;
ep2.cljs$lang$applyTo = ep2__4.cljs$lang$applyTo;
ep2.cljs$core$IFn$_invoke$arity$0 = ep2__0;
ep2.cljs$core$IFn$_invoke$arity$1 = ep2__1;
ep2.cljs$core$IFn$_invoke$arity$2 = ep2__2;
ep2.cljs$core$IFn$_invoke$arity$3 = ep2__3;
ep2.cljs$core$IFn$_invoke$arity$variadic = ep2__4.cljs$core$IFn$_invoke$arity$variadic;
return ep2;
})()
});
var every_pred__3 = (function (p1,p2,p3){
return (function() {
var ep3 = null;
var ep3__0 = (function (){
return true;
});
var ep3__1 = (function (x){
return cljs.core.boolean$((function (){var and__7492__auto__ = (function (){var G__20570 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__20570) : p1.call(null,G__20570));
})();
if(cljs.core.truth_(and__7492__auto__)){
var and__7492__auto____$1 = (function (){var G__20572 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__20572) : p2.call(null,G__20572));
})();
if(cljs.core.truth_(and__7492__auto____$1)){
var G__20573 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__20573) : p3.call(null,G__20573));
} else {
return and__7492__auto____$1;
}
} else {
return and__7492__auto__;
}
})());
});
var ep3__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__7492__auto__ = (function (){var G__20575 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__20575) : p1.call(null,G__20575));
})();
if(cljs.core.truth_(and__7492__auto__)){
var and__7492__auto____$1 = (function (){var G__20577 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__20577) : p2.call(null,G__20577));
})();
if(cljs.core.truth_(and__7492__auto____$1)){
var and__7492__auto____$2 = (function (){var G__20579 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__20579) : p3.call(null,G__20579));
})();
if(cljs.core.truth_(and__7492__auto____$2)){
var and__7492__auto____$3 = (function (){var G__20581 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__20581) : p1.call(null,G__20581));
})();
if(cljs.core.truth_(and__7492__auto____$3)){
var and__7492__auto____$4 = (function (){var G__20583 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__20583) : p2.call(null,G__20583));
})();
if(cljs.core.truth_(and__7492__auto____$4)){
var G__20584 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__20584) : p3.call(null,G__20584));
} else {
return and__7492__auto____$4;
}
} else {
return and__7492__auto____$3;
}
} else {
return and__7492__auto____$2;
}
} else {
return and__7492__auto____$1;
}
} else {
return and__7492__auto__;
}
})());
});
var ep3__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__7492__auto__ = (function (){var G__20586 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__20586) : p1.call(null,G__20586));
})();
if(cljs.core.truth_(and__7492__auto__)){
var and__7492__auto____$1 = (function (){var G__20588 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__20588) : p2.call(null,G__20588));
})();
if(cljs.core.truth_(and__7492__auto____$1)){
var and__7492__auto____$2 = (function (){var G__20590 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__20590) : p3.call(null,G__20590));
})();
if(cljs.core.truth_(and__7492__auto____$2)){
var and__7492__auto____$3 = (function (){var G__20592 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__20592) : p1.call(null,G__20592));
})();
if(cljs.core.truth_(and__7492__auto____$3)){
var and__7492__auto____$4 = (function (){var G__20594 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__20594) : p2.call(null,G__20594));
})();
if(cljs.core.truth_(and__7492__auto____$4)){
var and__7492__auto____$5 = (function (){var G__20596 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__20596) : p3.call(null,G__20596));
})();
if(cljs.core.truth_(and__7492__auto____$5)){
var and__7492__auto____$6 = (function (){var G__20598 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__20598) : p1.call(null,G__20598));
})();
if(cljs.core.truth_(and__7492__auto____$6)){
var and__7492__auto____$7 = (function (){var G__20600 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__20600) : p2.call(null,G__20600));
})();
if(cljs.core.truth_(and__7492__auto____$7)){
var G__20601 = z;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__20601) : p3.call(null,G__20601));
} else {
return and__7492__auto____$7;
}
} else {
return and__7492__auto____$6;
}
} else {
return and__7492__auto____$5;
}
} else {
return and__7492__auto____$4;
}
} else {
return and__7492__auto____$3;
}
} else {
return and__7492__auto____$2;
}
} else {
return and__7492__auto____$1;
}
} else {
return and__7492__auto__;
}
})());
});
var ep3__4 = (function() { 
var G__20646__delegate = function (x,y,z,args){
return cljs.core.boolean$((ep3.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_((function (p1__20247_SHARP_){
var and__7492__auto__ = (function (){var G__20608 = p1__20247_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__20608) : p1.call(null,G__20608));
})();
if(cljs.core.truth_(and__7492__auto__)){
var and__7492__auto____$1 = (function (){var G__20610 = p1__20247_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__20610) : p2.call(null,G__20610));
})();
if(cljs.core.truth_(and__7492__auto____$1)){
var G__20611 = p1__20247_SHARP_;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__20611) : p3.call(null,G__20611));
} else {
return and__7492__auto____$1;
}
} else {
return and__7492__auto__;
}
}),args)));
};
var G__20646 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__20647__i = 0, G__20647__a = new Array(arguments.length -  3);
while (G__20647__i < G__20647__a.length) {G__20647__a[G__20647__i] = arguments[G__20647__i + 3]; ++G__20647__i;}
  args = new cljs.core.IndexedSeq(G__20647__a,0);
} 
return G__20646__delegate.call(this,x,y,z,args);};
G__20646.cljs$lang$maxFixedArity = 3;
G__20646.cljs$lang$applyTo = (function (arglist__20648){
var x = cljs.core.first(arglist__20648);
arglist__20648 = cljs.core.next(arglist__20648);
var y = cljs.core.first(arglist__20648);
arglist__20648 = cljs.core.next(arglist__20648);
var z = cljs.core.first(arglist__20648);
var args = cljs.core.rest(arglist__20648);
return G__20646__delegate(x,y,z,args);
});
G__20646.cljs$core$IFn$_invoke$arity$variadic = G__20646__delegate;
return G__20646;
})()
;
ep3 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return ep3__0.call(this);
case 1:
return ep3__1.call(this,x);
case 2:
return ep3__2.call(this,x,y);
case 3:
return ep3__3.call(this,x,y,z);
default:
var G__20649 = null;
if (arguments.length > 3) {
var G__20650__i = 0, G__20650__a = new Array(arguments.length -  3);
while (G__20650__i < G__20650__a.length) {G__20650__a[G__20650__i] = arguments[G__20650__i + 3]; ++G__20650__i;}
G__20649 = new cljs.core.IndexedSeq(G__20650__a,0);
}
return ep3__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__20649);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ep3.cljs$lang$maxFixedArity = 3;
ep3.cljs$lang$applyTo = ep3__4.cljs$lang$applyTo;
ep3.cljs$core$IFn$_invoke$arity$0 = ep3__0;
ep3.cljs$core$IFn$_invoke$arity$1 = ep3__1;
ep3.cljs$core$IFn$_invoke$arity$2 = ep3__2;
ep3.cljs$core$IFn$_invoke$arity$3 = ep3__3;
ep3.cljs$core$IFn$_invoke$arity$variadic = ep3__4.cljs$core$IFn$_invoke$arity$variadic;
return ep3;
})()
});
var every_pred__4 = (function() { 
var G__20651__delegate = function (p1,p2,p3,ps){
var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1,p2,p3,ps);
return ((function (ps__$1){
return (function() {
var epn = null;
var epn__0 = (function (){
return true;
});
var epn__1 = (function (x){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__20248_SHARP_){
var G__20627 = x;
return (p1__20248_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__20248_SHARP_.cljs$core$IFn$_invoke$arity$1(G__20627) : p1__20248_SHARP_.call(null,G__20627));
});})(ps__$1))
,ps__$1);
});
var epn__2 = (function (x,y){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__20249_SHARP_){
var and__7492__auto__ = (function (){var G__20629 = x;
return (p1__20249_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__20249_SHARP_.cljs$core$IFn$_invoke$arity$1(G__20629) : p1__20249_SHARP_.call(null,G__20629));
})();
if(cljs.core.truth_(and__7492__auto__)){
var G__20630 = y;
return (p1__20249_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__20249_SHARP_.cljs$core$IFn$_invoke$arity$1(G__20630) : p1__20249_SHARP_.call(null,G__20630));
} else {
return and__7492__auto__;
}
});})(ps__$1))
,ps__$1);
});
var epn__3 = (function (x,y,z){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__20250_SHARP_){
var and__7492__auto__ = (function (){var G__20632 = x;
return (p1__20250_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__20250_SHARP_.cljs$core$IFn$_invoke$arity$1(G__20632) : p1__20250_SHARP_.call(null,G__20632));
})();
if(cljs.core.truth_(and__7492__auto__)){
var and__7492__auto____$1 = (function (){var G__20634 = y;
return (p1__20250_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__20250_SHARP_.cljs$core$IFn$_invoke$arity$1(G__20634) : p1__20250_SHARP_.call(null,G__20634));
})();
if(cljs.core.truth_(and__7492__auto____$1)){
var G__20635 = z;
return (p1__20250_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__20250_SHARP_.cljs$core$IFn$_invoke$arity$1(G__20635) : p1__20250_SHARP_.call(null,G__20635));
} else {
return and__7492__auto____$1;
}
} else {
return and__7492__auto__;
}
});})(ps__$1))
,ps__$1);
});
var epn__4 = (function() { 
var G__20652__delegate = function (x,y,z,args){
return cljs.core.boolean$((epn.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__20251_SHARP_){
return cljs.core.every_QMARK_(p1__20251_SHARP_,args);
});})(ps__$1))
,ps__$1)));
};
var G__20652 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__20653__i = 0, G__20653__a = new Array(arguments.length -  3);
while (G__20653__i < G__20653__a.length) {G__20653__a[G__20653__i] = arguments[G__20653__i + 3]; ++G__20653__i;}
  args = new cljs.core.IndexedSeq(G__20653__a,0);
} 
return G__20652__delegate.call(this,x,y,z,args);};
G__20652.cljs$lang$maxFixedArity = 3;
G__20652.cljs$lang$applyTo = (function (arglist__20654){
var x = cljs.core.first(arglist__20654);
arglist__20654 = cljs.core.next(arglist__20654);
var y = cljs.core.first(arglist__20654);
arglist__20654 = cljs.core.next(arglist__20654);
var z = cljs.core.first(arglist__20654);
var args = cljs.core.rest(arglist__20654);
return G__20652__delegate(x,y,z,args);
});
G__20652.cljs$core$IFn$_invoke$arity$variadic = G__20652__delegate;
return G__20652;
})()
;
epn = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return epn__0.call(this);
case 1:
return epn__1.call(this,x);
case 2:
return epn__2.call(this,x,y);
case 3:
return epn__3.call(this,x,y,z);
default:
var G__20655 = null;
if (arguments.length > 3) {
var G__20656__i = 0, G__20656__a = new Array(arguments.length -  3);
while (G__20656__i < G__20656__a.length) {G__20656__a[G__20656__i] = arguments[G__20656__i + 3]; ++G__20656__i;}
G__20655 = new cljs.core.IndexedSeq(G__20656__a,0);
}
return epn__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__20655);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
epn.cljs$lang$maxFixedArity = 3;
epn.cljs$lang$applyTo = epn__4.cljs$lang$applyTo;
epn.cljs$core$IFn$_invoke$arity$0 = epn__0;
epn.cljs$core$IFn$_invoke$arity$1 = epn__1;
epn.cljs$core$IFn$_invoke$arity$2 = epn__2;
epn.cljs$core$IFn$_invoke$arity$3 = epn__3;
epn.cljs$core$IFn$_invoke$arity$variadic = epn__4.cljs$core$IFn$_invoke$arity$variadic;
return epn;
})()
;})(ps__$1))
};
var G__20651 = function (p1,p2,p3,var_args){
var ps = null;
if (arguments.length > 3) {
var G__20657__i = 0, G__20657__a = new Array(arguments.length -  3);
while (G__20657__i < G__20657__a.length) {G__20657__a[G__20657__i] = arguments[G__20657__i + 3]; ++G__20657__i;}
  ps = new cljs.core.IndexedSeq(G__20657__a,0);
} 
return G__20651__delegate.call(this,p1,p2,p3,ps);};
G__20651.cljs$lang$maxFixedArity = 3;
G__20651.cljs$lang$applyTo = (function (arglist__20658){
var p1 = cljs.core.first(arglist__20658);
arglist__20658 = cljs.core.next(arglist__20658);
var p2 = cljs.core.first(arglist__20658);
arglist__20658 = cljs.core.next(arglist__20658);
var p3 = cljs.core.first(arglist__20658);
var ps = cljs.core.rest(arglist__20658);
return G__20651__delegate(p1,p2,p3,ps);
});
G__20651.cljs$core$IFn$_invoke$arity$variadic = G__20651__delegate;
return G__20651;
})()
;
every_pred = function(p1,p2,p3,var_args){
var ps = var_args;
switch(arguments.length){
case 1:
return every_pred__1.call(this,p1);
case 2:
return every_pred__2.call(this,p1,p2);
case 3:
return every_pred__3.call(this,p1,p2,p3);
default:
var G__20659 = null;
if (arguments.length > 3) {
var G__20660__i = 0, G__20660__a = new Array(arguments.length -  3);
while (G__20660__i < G__20660__a.length) {G__20660__a[G__20660__i] = arguments[G__20660__i + 3]; ++G__20660__i;}
G__20659 = new cljs.core.IndexedSeq(G__20660__a,0);
}
return every_pred__4.cljs$core$IFn$_invoke$arity$variadic(p1,p2,p3, G__20659);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
every_pred.cljs$lang$maxFixedArity = 3;
every_pred.cljs$lang$applyTo = every_pred__4.cljs$lang$applyTo;
every_pred.cljs$core$IFn$_invoke$arity$1 = every_pred__1;
every_pred.cljs$core$IFn$_invoke$arity$2 = every_pred__2;
every_pred.cljs$core$IFn$_invoke$arity$3 = every_pred__3;
every_pred.cljs$core$IFn$_invoke$arity$variadic = every_pred__4.cljs$core$IFn$_invoke$arity$variadic;
return every_pred;
})()
;
/**
* Takes a set of predicates and returns a function f that returns the first logical true value
* returned by one of its composing predicates against any of its arguments, else it returns
* logical false. Note that f is short-circuiting in that it will stop execution on the first
* argument that triggers a logical true result against the original predicates.
* @param {...*} var_args
*/
cljs.core.some_fn = (function() {
var some_fn = null;
var some_fn__1 = (function (p){
return (function() {
var sp1 = null;
var sp1__0 = (function (){
return null;
});
var sp1__1 = (function (x){
var G__20866 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__20866) : p.call(null,G__20866));
});
var sp1__2 = (function (x,y){
var or__7504__auto__ = (function (){var G__20868 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__20868) : p.call(null,G__20868));
})();
if(cljs.core.truth_(or__7504__auto__)){
return or__7504__auto__;
} else {
var G__20869 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__20869) : p.call(null,G__20869));
}
});
var sp1__3 = (function (x,y,z){
var or__7504__auto__ = (function (){var G__20871 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__20871) : p.call(null,G__20871));
})();
if(cljs.core.truth_(or__7504__auto__)){
return or__7504__auto__;
} else {
var or__7504__auto____$1 = (function (){var G__20873 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__20873) : p.call(null,G__20873));
})();
if(cljs.core.truth_(or__7504__auto____$1)){
return or__7504__auto____$1;
} else {
var G__20874 = z;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__20874) : p.call(null,G__20874));
}
}
});
var sp1__4 = (function() { 
var G__21035__delegate = function (x,y,z,args){
var or__7504__auto__ = sp1.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__7504__auto__)){
return or__7504__auto__;
} else {
return cljs.core.some(p,args);
}
};
var G__21035 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__21036__i = 0, G__21036__a = new Array(arguments.length -  3);
while (G__21036__i < G__21036__a.length) {G__21036__a[G__21036__i] = arguments[G__21036__i + 3]; ++G__21036__i;}
  args = new cljs.core.IndexedSeq(G__21036__a,0);
} 
return G__21035__delegate.call(this,x,y,z,args);};
G__21035.cljs$lang$maxFixedArity = 3;
G__21035.cljs$lang$applyTo = (function (arglist__21037){
var x = cljs.core.first(arglist__21037);
arglist__21037 = cljs.core.next(arglist__21037);
var y = cljs.core.first(arglist__21037);
arglist__21037 = cljs.core.next(arglist__21037);
var z = cljs.core.first(arglist__21037);
var args = cljs.core.rest(arglist__21037);
return G__21035__delegate(x,y,z,args);
});
G__21035.cljs$core$IFn$_invoke$arity$variadic = G__21035__delegate;
return G__21035;
})()
;
sp1 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return sp1__0.call(this);
case 1:
return sp1__1.call(this,x);
case 2:
return sp1__2.call(this,x,y);
case 3:
return sp1__3.call(this,x,y,z);
default:
var G__21038 = null;
if (arguments.length > 3) {
var G__21039__i = 0, G__21039__a = new Array(arguments.length -  3);
while (G__21039__i < G__21039__a.length) {G__21039__a[G__21039__i] = arguments[G__21039__i + 3]; ++G__21039__i;}
G__21038 = new cljs.core.IndexedSeq(G__21039__a,0);
}
return sp1__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__21038);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sp1.cljs$lang$maxFixedArity = 3;
sp1.cljs$lang$applyTo = sp1__4.cljs$lang$applyTo;
sp1.cljs$core$IFn$_invoke$arity$0 = sp1__0;
sp1.cljs$core$IFn$_invoke$arity$1 = sp1__1;
sp1.cljs$core$IFn$_invoke$arity$2 = sp1__2;
sp1.cljs$core$IFn$_invoke$arity$3 = sp1__3;
sp1.cljs$core$IFn$_invoke$arity$variadic = sp1__4.cljs$core$IFn$_invoke$arity$variadic;
return sp1;
})()
});
var some_fn__2 = (function (p1,p2){
return (function() {
var sp2 = null;
var sp2__0 = (function (){
return null;
});
var sp2__1 = (function (x){
var or__7504__auto__ = (function (){var G__20906 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__20906) : p1.call(null,G__20906));
})();
if(cljs.core.truth_(or__7504__auto__)){
return or__7504__auto__;
} else {
var G__20907 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__20907) : p2.call(null,G__20907));
}
});
var sp2__2 = (function (x,y){
var or__7504__auto__ = (function (){var G__20909 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__20909) : p1.call(null,G__20909));
})();
if(cljs.core.truth_(or__7504__auto__)){
return or__7504__auto__;
} else {
var or__7504__auto____$1 = (function (){var G__20911 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__20911) : p1.call(null,G__20911));
})();
if(cljs.core.truth_(or__7504__auto____$1)){
return or__7504__auto____$1;
} else {
var or__7504__auto____$2 = (function (){var G__20913 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__20913) : p2.call(null,G__20913));
})();
if(cljs.core.truth_(or__7504__auto____$2)){
return or__7504__auto____$2;
} else {
var G__20914 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__20914) : p2.call(null,G__20914));
}
}
}
});
var sp2__3 = (function (x,y,z){
var or__7504__auto__ = (function (){var G__20916 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__20916) : p1.call(null,G__20916));
})();
if(cljs.core.truth_(or__7504__auto__)){
return or__7504__auto__;
} else {
var or__7504__auto____$1 = (function (){var G__20918 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__20918) : p1.call(null,G__20918));
})();
if(cljs.core.truth_(or__7504__auto____$1)){
return or__7504__auto____$1;
} else {
var or__7504__auto____$2 = (function (){var G__20920 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__20920) : p1.call(null,G__20920));
})();
if(cljs.core.truth_(or__7504__auto____$2)){
return or__7504__auto____$2;
} else {
var or__7504__auto____$3 = (function (){var G__20922 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__20922) : p2.call(null,G__20922));
})();
if(cljs.core.truth_(or__7504__auto____$3)){
return or__7504__auto____$3;
} else {
var or__7504__auto____$4 = (function (){var G__20924 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__20924) : p2.call(null,G__20924));
})();
if(cljs.core.truth_(or__7504__auto____$4)){
return or__7504__auto____$4;
} else {
var G__20925 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__20925) : p2.call(null,G__20925));
}
}
}
}
}
});
var sp2__4 = (function() { 
var G__21040__delegate = function (x,y,z,args){
var or__7504__auto__ = sp2.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__7504__auto__)){
return or__7504__auto__;
} else {
return cljs.core.some(((function (or__7504__auto__){
return (function (p1__20661_SHARP_){
var or__7504__auto____$1 = (function (){var G__20927 = p1__20661_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__20927) : p1.call(null,G__20927));
})();
if(cljs.core.truth_(or__7504__auto____$1)){
return or__7504__auto____$1;
} else {
var G__20928 = p1__20661_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__20928) : p2.call(null,G__20928));
}
});})(or__7504__auto__))
,args);
}
};
var G__21040 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__21041__i = 0, G__21041__a = new Array(arguments.length -  3);
while (G__21041__i < G__21041__a.length) {G__21041__a[G__21041__i] = arguments[G__21041__i + 3]; ++G__21041__i;}
  args = new cljs.core.IndexedSeq(G__21041__a,0);
} 
return G__21040__delegate.call(this,x,y,z,args);};
G__21040.cljs$lang$maxFixedArity = 3;
G__21040.cljs$lang$applyTo = (function (arglist__21042){
var x = cljs.core.first(arglist__21042);
arglist__21042 = cljs.core.next(arglist__21042);
var y = cljs.core.first(arglist__21042);
arglist__21042 = cljs.core.next(arglist__21042);
var z = cljs.core.first(arglist__21042);
var args = cljs.core.rest(arglist__21042);
return G__21040__delegate(x,y,z,args);
});
G__21040.cljs$core$IFn$_invoke$arity$variadic = G__21040__delegate;
return G__21040;
})()
;
sp2 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return sp2__0.call(this);
case 1:
return sp2__1.call(this,x);
case 2:
return sp2__2.call(this,x,y);
case 3:
return sp2__3.call(this,x,y,z);
default:
var G__21043 = null;
if (arguments.length > 3) {
var G__21044__i = 0, G__21044__a = new Array(arguments.length -  3);
while (G__21044__i < G__21044__a.length) {G__21044__a[G__21044__i] = arguments[G__21044__i + 3]; ++G__21044__i;}
G__21043 = new cljs.core.IndexedSeq(G__21044__a,0);
}
return sp2__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__21043);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sp2.cljs$lang$maxFixedArity = 3;
sp2.cljs$lang$applyTo = sp2__4.cljs$lang$applyTo;
sp2.cljs$core$IFn$_invoke$arity$0 = sp2__0;
sp2.cljs$core$IFn$_invoke$arity$1 = sp2__1;
sp2.cljs$core$IFn$_invoke$arity$2 = sp2__2;
sp2.cljs$core$IFn$_invoke$arity$3 = sp2__3;
sp2.cljs$core$IFn$_invoke$arity$variadic = sp2__4.cljs$core$IFn$_invoke$arity$variadic;
return sp2;
})()
});
var some_fn__3 = (function (p1,p2,p3){
return (function() {
var sp3 = null;
var sp3__0 = (function (){
return null;
});
var sp3__1 = (function (x){
var or__7504__auto__ = (function (){var G__20974 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__20974) : p1.call(null,G__20974));
})();
if(cljs.core.truth_(or__7504__auto__)){
return or__7504__auto__;
} else {
var or__7504__auto____$1 = (function (){var G__20976 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__20976) : p2.call(null,G__20976));
})();
if(cljs.core.truth_(or__7504__auto____$1)){
return or__7504__auto____$1;
} else {
var G__20977 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__20977) : p3.call(null,G__20977));
}
}
});
var sp3__2 = (function (x,y){
var or__7504__auto__ = (function (){var G__20979 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__20979) : p1.call(null,G__20979));
})();
if(cljs.core.truth_(or__7504__auto__)){
return or__7504__auto__;
} else {
var or__7504__auto____$1 = (function (){var G__20981 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__20981) : p2.call(null,G__20981));
})();
if(cljs.core.truth_(or__7504__auto____$1)){
return or__7504__auto____$1;
} else {
var or__7504__auto____$2 = (function (){var G__20983 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__20983) : p3.call(null,G__20983));
})();
if(cljs.core.truth_(or__7504__auto____$2)){
return or__7504__auto____$2;
} else {
var or__7504__auto____$3 = (function (){var G__20985 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__20985) : p1.call(null,G__20985));
})();
if(cljs.core.truth_(or__7504__auto____$3)){
return or__7504__auto____$3;
} else {
var or__7504__auto____$4 = (function (){var G__20987 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__20987) : p2.call(null,G__20987));
})();
if(cljs.core.truth_(or__7504__auto____$4)){
return or__7504__auto____$4;
} else {
var G__20988 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__20988) : p3.call(null,G__20988));
}
}
}
}
}
});
var sp3__3 = (function (x,y,z){
var or__7504__auto__ = (function (){var G__20990 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__20990) : p1.call(null,G__20990));
})();
if(cljs.core.truth_(or__7504__auto__)){
return or__7504__auto__;
} else {
var or__7504__auto____$1 = (function (){var G__20992 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__20992) : p2.call(null,G__20992));
})();
if(cljs.core.truth_(or__7504__auto____$1)){
return or__7504__auto____$1;
} else {
var or__7504__auto____$2 = (function (){var G__20994 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__20994) : p3.call(null,G__20994));
})();
if(cljs.core.truth_(or__7504__auto____$2)){
return or__7504__auto____$2;
} else {
var or__7504__auto____$3 = (function (){var G__20996 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__20996) : p1.call(null,G__20996));
})();
if(cljs.core.truth_(or__7504__auto____$3)){
return or__7504__auto____$3;
} else {
var or__7504__auto____$4 = (function (){var G__20998 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__20998) : p2.call(null,G__20998));
})();
if(cljs.core.truth_(or__7504__auto____$4)){
return or__7504__auto____$4;
} else {
var or__7504__auto____$5 = (function (){var G__21000 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__21000) : p3.call(null,G__21000));
})();
if(cljs.core.truth_(or__7504__auto____$5)){
return or__7504__auto____$5;
} else {
var or__7504__auto____$6 = (function (){var G__21002 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__21002) : p1.call(null,G__21002));
})();
if(cljs.core.truth_(or__7504__auto____$6)){
return or__7504__auto____$6;
} else {
var or__7504__auto____$7 = (function (){var G__21004 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__21004) : p2.call(null,G__21004));
})();
if(cljs.core.truth_(or__7504__auto____$7)){
return or__7504__auto____$7;
} else {
var G__21005 = z;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__21005) : p3.call(null,G__21005));
}
}
}
}
}
}
}
}
});
var sp3__4 = (function() { 
var G__21045__delegate = function (x,y,z,args){
var or__7504__auto__ = sp3.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__7504__auto__)){
return or__7504__auto__;
} else {
return cljs.core.some(((function (or__7504__auto__){
return (function (p1__20662_SHARP_){
var or__7504__auto____$1 = (function (){var G__21007 = p1__20662_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__21007) : p1.call(null,G__21007));
})();
if(cljs.core.truth_(or__7504__auto____$1)){
return or__7504__auto____$1;
} else {
var or__7504__auto____$2 = (function (){var G__21009 = p1__20662_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__21009) : p2.call(null,G__21009));
})();
if(cljs.core.truth_(or__7504__auto____$2)){
return or__7504__auto____$2;
} else {
var G__21010 = p1__20662_SHARP_;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__21010) : p3.call(null,G__21010));
}
}
});})(or__7504__auto__))
,args);
}
};
var G__21045 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__21046__i = 0, G__21046__a = new Array(arguments.length -  3);
while (G__21046__i < G__21046__a.length) {G__21046__a[G__21046__i] = arguments[G__21046__i + 3]; ++G__21046__i;}
  args = new cljs.core.IndexedSeq(G__21046__a,0);
} 
return G__21045__delegate.call(this,x,y,z,args);};
G__21045.cljs$lang$maxFixedArity = 3;
G__21045.cljs$lang$applyTo = (function (arglist__21047){
var x = cljs.core.first(arglist__21047);
arglist__21047 = cljs.core.next(arglist__21047);
var y = cljs.core.first(arglist__21047);
arglist__21047 = cljs.core.next(arglist__21047);
var z = cljs.core.first(arglist__21047);
var args = cljs.core.rest(arglist__21047);
return G__21045__delegate(x,y,z,args);
});
G__21045.cljs$core$IFn$_invoke$arity$variadic = G__21045__delegate;
return G__21045;
})()
;
sp3 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return sp3__0.call(this);
case 1:
return sp3__1.call(this,x);
case 2:
return sp3__2.call(this,x,y);
case 3:
return sp3__3.call(this,x,y,z);
default:
var G__21048 = null;
if (arguments.length > 3) {
var G__21049__i = 0, G__21049__a = new Array(arguments.length -  3);
while (G__21049__i < G__21049__a.length) {G__21049__a[G__21049__i] = arguments[G__21049__i + 3]; ++G__21049__i;}
G__21048 = new cljs.core.IndexedSeq(G__21049__a,0);
}
return sp3__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__21048);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sp3.cljs$lang$maxFixedArity = 3;
sp3.cljs$lang$applyTo = sp3__4.cljs$lang$applyTo;
sp3.cljs$core$IFn$_invoke$arity$0 = sp3__0;
sp3.cljs$core$IFn$_invoke$arity$1 = sp3__1;
sp3.cljs$core$IFn$_invoke$arity$2 = sp3__2;
sp3.cljs$core$IFn$_invoke$arity$3 = sp3__3;
sp3.cljs$core$IFn$_invoke$arity$variadic = sp3__4.cljs$core$IFn$_invoke$arity$variadic;
return sp3;
})()
});
var some_fn__4 = (function() { 
var G__21050__delegate = function (p1,p2,p3,ps){
var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1,p2,p3,ps);
return ((function (ps__$1){
return (function() {
var spn = null;
var spn__0 = (function (){
return null;
});
var spn__1 = (function (x){
return cljs.core.some(((function (ps__$1){
return (function (p1__20663_SHARP_){
var G__21026 = x;
return (p1__20663_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__20663_SHARP_.cljs$core$IFn$_invoke$arity$1(G__21026) : p1__20663_SHARP_.call(null,G__21026));
});})(ps__$1))
,ps__$1);
});
var spn__2 = (function (x,y){
return cljs.core.some(((function (ps__$1){
return (function (p1__20664_SHARP_){
var or__7504__auto__ = (function (){var G__21028 = x;
return (p1__20664_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__20664_SHARP_.cljs$core$IFn$_invoke$arity$1(G__21028) : p1__20664_SHARP_.call(null,G__21028));
})();
if(cljs.core.truth_(or__7504__auto__)){
return or__7504__auto__;
} else {
var G__21029 = y;
return (p1__20664_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__20664_SHARP_.cljs$core$IFn$_invoke$arity$1(G__21029) : p1__20664_SHARP_.call(null,G__21029));
}
});})(ps__$1))
,ps__$1);
});
var spn__3 = (function (x,y,z){
return cljs.core.some(((function (ps__$1){
return (function (p1__20665_SHARP_){
var or__7504__auto__ = (function (){var G__21031 = x;
return (p1__20665_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__20665_SHARP_.cljs$core$IFn$_invoke$arity$1(G__21031) : p1__20665_SHARP_.call(null,G__21031));
})();
if(cljs.core.truth_(or__7504__auto__)){
return or__7504__auto__;
} else {
var or__7504__auto____$1 = (function (){var G__21033 = y;
return (p1__20665_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__20665_SHARP_.cljs$core$IFn$_invoke$arity$1(G__21033) : p1__20665_SHARP_.call(null,G__21033));
})();
if(cljs.core.truth_(or__7504__auto____$1)){
return or__7504__auto____$1;
} else {
var G__21034 = z;
return (p1__20665_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__20665_SHARP_.cljs$core$IFn$_invoke$arity$1(G__21034) : p1__20665_SHARP_.call(null,G__21034));
}
}
});})(ps__$1))
,ps__$1);
});
var spn__4 = (function() { 
var G__21051__delegate = function (x,y,z,args){
var or__7504__auto__ = spn.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__7504__auto__)){
return or__7504__auto__;
} else {
return cljs.core.some(((function (or__7504__auto__,ps__$1){
return (function (p1__20666_SHARP_){
return cljs.core.some(p1__20666_SHARP_,args);
});})(or__7504__auto__,ps__$1))
,ps__$1);
}
};
var G__21051 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__21052__i = 0, G__21052__a = new Array(arguments.length -  3);
while (G__21052__i < G__21052__a.length) {G__21052__a[G__21052__i] = arguments[G__21052__i + 3]; ++G__21052__i;}
  args = new cljs.core.IndexedSeq(G__21052__a,0);
} 
return G__21051__delegate.call(this,x,y,z,args);};
G__21051.cljs$lang$maxFixedArity = 3;
G__21051.cljs$lang$applyTo = (function (arglist__21053){
var x = cljs.core.first(arglist__21053);
arglist__21053 = cljs.core.next(arglist__21053);
var y = cljs.core.first(arglist__21053);
arglist__21053 = cljs.core.next(arglist__21053);
var z = cljs.core.first(arglist__21053);
var args = cljs.core.rest(arglist__21053);
return G__21051__delegate(x,y,z,args);
});
G__21051.cljs$core$IFn$_invoke$arity$variadic = G__21051__delegate;
return G__21051;
})()
;
spn = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return spn__0.call(this);
case 1:
return spn__1.call(this,x);
case 2:
return spn__2.call(this,x,y);
case 3:
return spn__3.call(this,x,y,z);
default:
var G__21054 = null;
if (arguments.length > 3) {
var G__21055__i = 0, G__21055__a = new Array(arguments.length -  3);
while (G__21055__i < G__21055__a.length) {G__21055__a[G__21055__i] = arguments[G__21055__i + 3]; ++G__21055__i;}
G__21054 = new cljs.core.IndexedSeq(G__21055__a,0);
}
return spn__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__21054);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
spn.cljs$lang$maxFixedArity = 3;
spn.cljs$lang$applyTo = spn__4.cljs$lang$applyTo;
spn.cljs$core$IFn$_invoke$arity$0 = spn__0;
spn.cljs$core$IFn$_invoke$arity$1 = spn__1;
spn.cljs$core$IFn$_invoke$arity$2 = spn__2;
spn.cljs$core$IFn$_invoke$arity$3 = spn__3;
spn.cljs$core$IFn$_invoke$arity$variadic = spn__4.cljs$core$IFn$_invoke$arity$variadic;
return spn;
})()
;})(ps__$1))
};
var G__21050 = function (p1,p2,p3,var_args){
var ps = null;
if (arguments.length > 3) {
var G__21056__i = 0, G__21056__a = new Array(arguments.length -  3);
while (G__21056__i < G__21056__a.length) {G__21056__a[G__21056__i] = arguments[G__21056__i + 3]; ++G__21056__i;}
  ps = new cljs.core.IndexedSeq(G__21056__a,0);
} 
return G__21050__delegate.call(this,p1,p2,p3,ps);};
G__21050.cljs$lang$maxFixedArity = 3;
G__21050.cljs$lang$applyTo = (function (arglist__21057){
var p1 = cljs.core.first(arglist__21057);
arglist__21057 = cljs.core.next(arglist__21057);
var p2 = cljs.core.first(arglist__21057);
arglist__21057 = cljs.core.next(arglist__21057);
var p3 = cljs.core.first(arglist__21057);
var ps = cljs.core.rest(arglist__21057);
return G__21050__delegate(p1,p2,p3,ps);
});
G__21050.cljs$core$IFn$_invoke$arity$variadic = G__21050__delegate;
return G__21050;
})()
;
some_fn = function(p1,p2,p3,var_args){
var ps = var_args;
switch(arguments.length){
case 1:
return some_fn__1.call(this,p1);
case 2:
return some_fn__2.call(this,p1,p2);
case 3:
return some_fn__3.call(this,p1,p2,p3);
default:
var G__21058 = null;
if (arguments.length > 3) {
var G__21059__i = 0, G__21059__a = new Array(arguments.length -  3);
while (G__21059__i < G__21059__a.length) {G__21059__a[G__21059__i] = arguments[G__21059__i + 3]; ++G__21059__i;}
G__21058 = new cljs.core.IndexedSeq(G__21059__a,0);
}
return some_fn__4.cljs$core$IFn$_invoke$arity$variadic(p1,p2,p3, G__21058);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
some_fn.cljs$lang$maxFixedArity = 3;
some_fn.cljs$lang$applyTo = some_fn__4.cljs$lang$applyTo;
some_fn.cljs$core$IFn$_invoke$arity$1 = some_fn__1;
some_fn.cljs$core$IFn$_invoke$arity$2 = some_fn__2;
some_fn.cljs$core$IFn$_invoke$arity$3 = some_fn__3;
some_fn.cljs$core$IFn$_invoke$arity$variadic = some_fn__4.cljs$core$IFn$_invoke$arity$variadic;
return some_fn;
})()
;
/**
* Returns a lazy sequence consisting of the result of applying f to
* the set of first items of each coll, followed by applying f to the
* set of second items in each coll, until any one of the colls is
* exhausted.  Any remaining items in other colls are ignored. Function
* f should accept number-of-colls arguments. Returns a transducer when
* no collection is provided.
* @param {...*} var_args
*/
cljs.core.map = (function() {
var map = null;
var map__1 = (function (f){
return (function (rf){
return (function() {
var G__21114 = null;
var G__21114__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__21114__1 = (function (result){
var G__21100 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__21100) : rf.call(null,G__21100));
});
var G__21114__2 = (function (result,input){
var G__21101 = result;
var G__21102 = (function (){var G__21103 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__21103) : f.call(null,G__21103));
})();
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__21101,G__21102) : rf.call(null,G__21101,G__21102));
});
var G__21114__3 = (function() { 
var G__21115__delegate = function (result,input,inputs){
var G__21104 = result;
var G__21105 = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f,input,inputs);
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__21104,G__21105) : rf.call(null,G__21104,G__21105));
};
var G__21115 = function (result,input,var_args){
var inputs = null;
if (arguments.length > 2) {
var G__21116__i = 0, G__21116__a = new Array(arguments.length -  2);
while (G__21116__i < G__21116__a.length) {G__21116__a[G__21116__i] = arguments[G__21116__i + 2]; ++G__21116__i;}
  inputs = new cljs.core.IndexedSeq(G__21116__a,0);
} 
return G__21115__delegate.call(this,result,input,inputs);};
G__21115.cljs$lang$maxFixedArity = 2;
G__21115.cljs$lang$applyTo = (function (arglist__21117){
var result = cljs.core.first(arglist__21117);
arglist__21117 = cljs.core.next(arglist__21117);
var input = cljs.core.first(arglist__21117);
var inputs = cljs.core.rest(arglist__21117);
return G__21115__delegate(result,input,inputs);
});
G__21115.cljs$core$IFn$_invoke$arity$variadic = G__21115__delegate;
return G__21115;
})()
;
G__21114 = function(result,input,var_args){
var inputs = var_args;
switch(arguments.length){
case 0:
return G__21114__0.call(this);
case 1:
return G__21114__1.call(this,result);
case 2:
return G__21114__2.call(this,result,input);
default:
var G__21118 = null;
if (arguments.length > 2) {
var G__21119__i = 0, G__21119__a = new Array(arguments.length -  2);
while (G__21119__i < G__21119__a.length) {G__21119__a[G__21119__i] = arguments[G__21119__i + 2]; ++G__21119__i;}
G__21118 = new cljs.core.IndexedSeq(G__21119__a,0);
}
return G__21114__3.cljs$core$IFn$_invoke$arity$variadic(result,input, G__21118);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__21114.cljs$lang$maxFixedArity = 2;
G__21114.cljs$lang$applyTo = G__21114__3.cljs$lang$applyTo;
G__21114.cljs$core$IFn$_invoke$arity$0 = G__21114__0;
G__21114.cljs$core$IFn$_invoke$arity$1 = G__21114__1;
G__21114.cljs$core$IFn$_invoke$arity$2 = G__21114__2;
G__21114.cljs$core$IFn$_invoke$arity$variadic = G__21114__3.cljs$core$IFn$_invoke$arity$variadic;
return G__21114;
})()
});
});
var map__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__8391__auto___21120 = size;
var i_21121 = (0);
while(true){
if((i_21121 < n__8391__auto___21120)){
cljs.core.chunk_append(b,(function (){var G__21106 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_21121);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__21106) : f.call(null,G__21106));
})());

var G__21122 = (i_21121 + (1));
i_21121 = G__21122;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),map.cljs$core$IFn$_invoke$arity$2(f,cljs.core.chunk_rest(s)));
} else {
return cljs.core.cons((function (){var G__21107 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__21107) : f.call(null,G__21107));
})(),map.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s)));
}
} else {
return null;
}
}),null,null));
});
var map__3 = (function (f,c1,c2){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
if((s1) && (s2)){
return cljs.core.cons((function (){var G__21108 = cljs.core.first(s1);
var G__21109 = cljs.core.first(s2);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__21108,G__21109) : f.call(null,G__21108,G__21109));
})(),map.cljs$core$IFn$_invoke$arity$3(f,cljs.core.rest(s1),cljs.core.rest(s2)));
} else {
return null;
}
}),null,null));
});
var map__4 = (function (f,c1,c2,c3){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
var s3 = cljs.core.seq(c3);
if((s1) && (s2) && (s3)){
return cljs.core.cons((function (){var G__21110 = cljs.core.first(s1);
var G__21111 = cljs.core.first(s2);
var G__21112 = cljs.core.first(s3);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__21110,G__21111,G__21112) : f.call(null,G__21110,G__21111,G__21112));
})(),map.cljs$core$IFn$_invoke$arity$4(f,cljs.core.rest(s1),cljs.core.rest(s2),cljs.core.rest(s3)));
} else {
return null;
}
}),null,null));
});
var map__5 = (function() { 
var G__21123__delegate = function (f,c1,c2,c3,colls){
var step = (function step(cs){
return (new cljs.core.LazySeq(null,(function (){
var ss = map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq,cs);
if(cljs.core.every_QMARK_(cljs.core.identity,ss)){
return cljs.core.cons(map.cljs$core$IFn$_invoke$arity$2(cljs.core.first,ss),step(map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest,ss)));
} else {
return null;
}
}),null,null));
});
return map.cljs$core$IFn$_invoke$arity$2(((function (step){
return (function (p1__21060_SHARP_){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,p1__21060_SHARP_);
});})(step))
,step(cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls,c3,cljs.core.array_seq([c2,c1], 0))));
};
var G__21123 = function (f,c1,c2,c3,var_args){
var colls = null;
if (arguments.length > 4) {
var G__21124__i = 0, G__21124__a = new Array(arguments.length -  4);
while (G__21124__i < G__21124__a.length) {G__21124__a[G__21124__i] = arguments[G__21124__i + 4]; ++G__21124__i;}
  colls = new cljs.core.IndexedSeq(G__21124__a,0);
} 
return G__21123__delegate.call(this,f,c1,c2,c3,colls);};
G__21123.cljs$lang$maxFixedArity = 4;
G__21123.cljs$lang$applyTo = (function (arglist__21125){
var f = cljs.core.first(arglist__21125);
arglist__21125 = cljs.core.next(arglist__21125);
var c1 = cljs.core.first(arglist__21125);
arglist__21125 = cljs.core.next(arglist__21125);
var c2 = cljs.core.first(arglist__21125);
arglist__21125 = cljs.core.next(arglist__21125);
var c3 = cljs.core.first(arglist__21125);
var colls = cljs.core.rest(arglist__21125);
return G__21123__delegate(f,c1,c2,c3,colls);
});
G__21123.cljs$core$IFn$_invoke$arity$variadic = G__21123__delegate;
return G__21123;
})()
;
map = function(f,c1,c2,c3,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return map__1.call(this,f);
case 2:
return map__2.call(this,f,c1);
case 3:
return map__3.call(this,f,c1,c2);
case 4:
return map__4.call(this,f,c1,c2,c3);
default:
var G__21126 = null;
if (arguments.length > 4) {
var G__21127__i = 0, G__21127__a = new Array(arguments.length -  4);
while (G__21127__i < G__21127__a.length) {G__21127__a[G__21127__i] = arguments[G__21127__i + 4]; ++G__21127__i;}
G__21126 = new cljs.core.IndexedSeq(G__21127__a,0);
}
return map__5.cljs$core$IFn$_invoke$arity$variadic(f,c1,c2,c3, G__21126);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
map.cljs$lang$maxFixedArity = 4;
map.cljs$lang$applyTo = map__5.cljs$lang$applyTo;
map.cljs$core$IFn$_invoke$arity$1 = map__1;
map.cljs$core$IFn$_invoke$arity$2 = map__2;
map.cljs$core$IFn$_invoke$arity$3 = map__3;
map.cljs$core$IFn$_invoke$arity$4 = map__4;
map.cljs$core$IFn$_invoke$arity$variadic = map__5.cljs$core$IFn$_invoke$arity$variadic;
return map;
})()
;
/**
* Returns a lazy sequence of the first n items in coll, or all items if
* there are fewer than n.  Returns a stateful transducer when
* no collection is provided.
*/
cljs.core.take = (function() {
var take = null;
var take__1 = (function (n){
return (function (rf){
var na = cljs.core.volatile_BANG_(n);
return ((function (na){
return (function() {
var G__21136 = null;
var G__21136__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__21136__1 = (function (result){
var G__21133 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__21133) : rf.call(null,G__21133));
});
var G__21136__2 = (function (result,input){
var n__$1 = cljs.core.deref(na);
var nn = na.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(na.cljs$core$IDeref$_deref$arity$1(null) - (1)));
var result__$1 = (((n__$1 > (0)))?(function (){var G__21134 = result;
var G__21135 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__21134,G__21135) : rf.call(null,G__21134,G__21135));
})():result);
if(!((nn > (0)))){
return cljs.core.ensure_reduced(result__$1);
} else {
return result__$1;
}
});
G__21136 = function(result,input){
switch(arguments.length){
case 0:
return G__21136__0.call(this);
case 1:
return G__21136__1.call(this,result);
case 2:
return G__21136__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__21136.cljs$core$IFn$_invoke$arity$0 = G__21136__0;
G__21136.cljs$core$IFn$_invoke$arity$1 = G__21136__1;
G__21136.cljs$core$IFn$_invoke$arity$2 = G__21136__2;
return G__21136;
})()
;})(na))
});
});
var take__2 = (function (n,coll){
return (new cljs.core.LazySeq(null,(function (){
if((n > (0))){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.cons(cljs.core.first(s),take.cljs$core$IFn$_invoke$arity$2((n - (1)),cljs.core.rest(s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
take = function(n,coll){
switch(arguments.length){
case 1:
return take__1.call(this,n);
case 2:
return take__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
take.cljs$core$IFn$_invoke$arity$1 = take__1;
take.cljs$core$IFn$_invoke$arity$2 = take__2;
return take;
})()
;
/**
* Returns a lazy sequence of all but the first n items in coll.
* Returns a stateful transducer when no collection is provided.
*/
cljs.core.drop = (function() {
var drop = null;
var drop__1 = (function (n){
return (function (rf){
var na = cljs.core.volatile_BANG_(n);
return ((function (na){
return (function() {
var G__21143 = null;
var G__21143__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__21143__1 = (function (result){
var G__21140 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__21140) : rf.call(null,G__21140));
});
var G__21143__2 = (function (result,input){
var n__$1 = cljs.core.deref(na);
na.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(na.cljs$core$IDeref$_deref$arity$1(null) - (1)));

if((n__$1 > (0))){
return result;
} else {
var G__21141 = result;
var G__21142 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__21141,G__21142) : rf.call(null,G__21141,G__21142));
}
});
G__21143 = function(result,input){
switch(arguments.length){
case 0:
return G__21143__0.call(this);
case 1:
return G__21143__1.call(this,result);
case 2:
return G__21143__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__21143.cljs$core$IFn$_invoke$arity$0 = G__21143__0;
G__21143.cljs$core$IFn$_invoke$arity$1 = G__21143__1;
G__21143.cljs$core$IFn$_invoke$arity$2 = G__21143__2;
return G__21143;
})()
;})(na))
});
});
var drop__2 = (function (n,coll){
var step = (function (n__$1,coll__$1){
while(true){
var s = cljs.core.seq(coll__$1);
if(((n__$1 > (0))) && (s)){
var G__21144 = (n__$1 - (1));
var G__21145 = cljs.core.rest(s);
n__$1 = G__21144;
coll__$1 = G__21145;
continue;
} else {
return s;
}
break;
}
});
return (new cljs.core.LazySeq(null,((function (step){
return (function (){
return step(n,coll);
});})(step))
,null,null));
});
drop = function(n,coll){
switch(arguments.length){
case 1:
return drop__1.call(this,n);
case 2:
return drop__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
drop.cljs$core$IFn$_invoke$arity$1 = drop__1;
drop.cljs$core$IFn$_invoke$arity$2 = drop__2;
return drop;
})()
;
/**
* Return a lazy sequence of all but the last n (default 1) items in coll
*/
cljs.core.drop_last = (function() {
var drop_last = null;
var drop_last__1 = (function (s){
return drop_last.cljs$core$IFn$_invoke$arity$2((1),s);
});
var drop_last__2 = (function (n,s){
return cljs.core.map.cljs$core$IFn$_invoke$arity$3((function (x,_){
return x;
}),s,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,s));
});
drop_last = function(n,s){
switch(arguments.length){
case 1:
return drop_last__1.call(this,n);
case 2:
return drop_last__2.call(this,n,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
drop_last.cljs$core$IFn$_invoke$arity$1 = drop_last__1;
drop_last.cljs$core$IFn$_invoke$arity$2 = drop_last__2;
return drop_last;
})()
;
/**
* Returns a seq of the last n items in coll.  Depending on the type
* of coll may be no better than linear time.  For vectors, see also subvec.
*/
cljs.core.take_last = (function take_last(n,coll){
var s = cljs.core.seq(coll);
var lead = cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,coll));
while(true){
if(lead){
var G__21148 = cljs.core.next(s);
var G__21149 = cljs.core.next(lead);
s = G__21148;
lead = G__21149;
continue;
} else {
return s;
}
break;
}
});
/**
* Returns a lazy sequence of the items in coll starting from the
* first item for which (pred item) returns logical false.  Returns a
* stateful transducer when no collection is provided.
*/
cljs.core.drop_while = (function() {
var drop_while = null;
var drop_while__1 = (function (pred){
return (function (rf){
var da = cljs.core.volatile_BANG_(true);
return ((function (da){
return (function() {
var G__21162 = null;
var G__21162__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__21162__1 = (function (result){
var G__21156 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__21156) : rf.call(null,G__21156));
});
var G__21162__2 = (function (result,input){
var drop_QMARK_ = cljs.core.deref(da);
if(cljs.core.truth_((function (){var and__7492__auto__ = drop_QMARK_;
if(cljs.core.truth_(and__7492__auto__)){
var G__21157 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__21157) : pred.call(null,G__21157));
} else {
return and__7492__auto__;
}
})())){
return result;
} else {
cljs.core.vreset_BANG_(da,null);

var G__21158 = result;
var G__21159 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__21158,G__21159) : rf.call(null,G__21158,G__21159));
}
});
G__21162 = function(result,input){
switch(arguments.length){
case 0:
return G__21162__0.call(this);
case 1:
return G__21162__1.call(this,result);
case 2:
return G__21162__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__21162.cljs$core$IFn$_invoke$arity$0 = G__21162__0;
G__21162.cljs$core$IFn$_invoke$arity$1 = G__21162__1;
G__21162.cljs$core$IFn$_invoke$arity$2 = G__21162__2;
return G__21162;
})()
;})(da))
});
});
var drop_while__2 = (function (pred,coll){
var step = (function (pred__$1,coll__$1){
while(true){
var s = cljs.core.seq(coll__$1);
if(cljs.core.truth_((function (){var and__7492__auto__ = s;
if(and__7492__auto__){
var G__21161 = cljs.core.first(s);
return (pred__$1.cljs$core$IFn$_invoke$arity$1 ? pred__$1.cljs$core$IFn$_invoke$arity$1(G__21161) : pred__$1.call(null,G__21161));
} else {
return and__7492__auto__;
}
})())){
var G__21163 = pred__$1;
var G__21164 = cljs.core.rest(s);
pred__$1 = G__21163;
coll__$1 = G__21164;
continue;
} else {
return s;
}
break;
}
});
return (new cljs.core.LazySeq(null,((function (step){
return (function (){
return step(pred,coll);
});})(step))
,null,null));
});
drop_while = function(pred,coll){
switch(arguments.length){
case 1:
return drop_while__1.call(this,pred);
case 2:
return drop_while__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
drop_while.cljs$core$IFn$_invoke$arity$1 = drop_while__1;
drop_while.cljs$core$IFn$_invoke$arity$2 = drop_while__2;
return drop_while;
})()
;
/**
* Returns a lazy (infinite!) sequence of repetitions of the items in coll.
*/
cljs.core.cycle = (function cycle(coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(s,cycle(s));
} else {
return null;
}
}),null,null));
});
/**
* Returns a vector of [(take n coll) (drop n coll)]
*/
cljs.core.split_at = (function split_at(n,coll){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,coll),cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,coll)], null);
});
/**
* Returns a lazy (infinite!, or length n if supplied) sequence of xs.
*/
cljs.core.repeat = (function() {
var repeat = null;
var repeat__1 = (function (x){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons(x,repeat.cljs$core$IFn$_invoke$arity$1(x));
}),null,null));
});
var repeat__2 = (function (n,x){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,repeat.cljs$core$IFn$_invoke$arity$1(x));
});
repeat = function(n,x){
switch(arguments.length){
case 1:
return repeat__1.call(this,n);
case 2:
return repeat__2.call(this,n,x);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
repeat.cljs$core$IFn$_invoke$arity$1 = repeat__1;
repeat.cljs$core$IFn$_invoke$arity$2 = repeat__2;
return repeat;
})()
;
/**
* Returns a lazy seq of n xs.
*/
cljs.core.replicate = (function replicate(n,x){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(x));
});
/**
* Takes a function of no args, presumably with side effects, and
* returns an infinite (or length n if supplied) lazy sequence of calls
* to it
*/
cljs.core.repeatedly = (function() {
var repeatedly = null;
var repeatedly__1 = (function (f){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons((function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),repeatedly.cljs$core$IFn$_invoke$arity$1(f));
}),null,null));
});
var repeatedly__2 = (function (n,f){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,repeatedly.cljs$core$IFn$_invoke$arity$1(f));
});
repeatedly = function(n,f){
switch(arguments.length){
case 1:
return repeatedly__1.call(this,n);
case 2:
return repeatedly__2.call(this,n,f);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
repeatedly.cljs$core$IFn$_invoke$arity$1 = repeatedly__1;
repeatedly.cljs$core$IFn$_invoke$arity$2 = repeatedly__2;
return repeatedly;
})()
;
/**
* Returns a lazy sequence of x, (f x), (f (f x)) etc. f must be free of side-effects
*/
cljs.core.iterate = (function iterate(f,x){
return cljs.core.cons(x,(new cljs.core.LazySeq(null,(function (){
return iterate(f,(function (){var G__21173 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__21173) : f.call(null,G__21173));
})());
}),null,null)));
});
/**
* Returns a lazy seq of the first item in each coll, then the second etc.
* @param {...*} var_args
*/
cljs.core.interleave = (function() {
var interleave = null;
var interleave__2 = (function (c1,c2){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
if((s1) && (s2)){
return cljs.core.cons(cljs.core.first(s1),cljs.core.cons(cljs.core.first(s2),interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s1),cljs.core.rest(s2))));
} else {
return null;
}
}),null,null));
});
var interleave__3 = (function() { 
var G__21176__delegate = function (c1,c2,colls){
return (new cljs.core.LazySeq(null,(function (){
var ss = cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq,cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls,c2,cljs.core.array_seq([c1], 0)));
if(cljs.core.every_QMARK_(cljs.core.identity,ss)){
return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.first,ss),cljs.core.apply.cljs$core$IFn$_invoke$arity$2(interleave,cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest,ss)));
} else {
return null;
}
}),null,null));
};
var G__21176 = function (c1,c2,var_args){
var colls = null;
if (arguments.length > 2) {
var G__21177__i = 0, G__21177__a = new Array(arguments.length -  2);
while (G__21177__i < G__21177__a.length) {G__21177__a[G__21177__i] = arguments[G__21177__i + 2]; ++G__21177__i;}
  colls = new cljs.core.IndexedSeq(G__21177__a,0);
} 
return G__21176__delegate.call(this,c1,c2,colls);};
G__21176.cljs$lang$maxFixedArity = 2;
G__21176.cljs$lang$applyTo = (function (arglist__21178){
var c1 = cljs.core.first(arglist__21178);
arglist__21178 = cljs.core.next(arglist__21178);
var c2 = cljs.core.first(arglist__21178);
var colls = cljs.core.rest(arglist__21178);
return G__21176__delegate(c1,c2,colls);
});
G__21176.cljs$core$IFn$_invoke$arity$variadic = G__21176__delegate;
return G__21176;
})()
;
interleave = function(c1,c2,var_args){
var colls = var_args;
switch(arguments.length){
case 2:
return interleave__2.call(this,c1,c2);
default:
var G__21179 = null;
if (arguments.length > 2) {
var G__21180__i = 0, G__21180__a = new Array(arguments.length -  2);
while (G__21180__i < G__21180__a.length) {G__21180__a[G__21180__i] = arguments[G__21180__i + 2]; ++G__21180__i;}
G__21179 = new cljs.core.IndexedSeq(G__21180__a,0);
}
return interleave__3.cljs$core$IFn$_invoke$arity$variadic(c1,c2, G__21179);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
interleave.cljs$lang$maxFixedArity = 2;
interleave.cljs$lang$applyTo = interleave__3.cljs$lang$applyTo;
interleave.cljs$core$IFn$_invoke$arity$2 = interleave__2;
interleave.cljs$core$IFn$_invoke$arity$variadic = interleave__3.cljs$core$IFn$_invoke$arity$variadic;
return interleave;
})()
;
/**
* Returns a lazy seq of the elements of coll separated by sep
*/
cljs.core.interpose = (function() {
var interpose = null;
var interpose__1 = (function (sep){
return (function (rf){
var started = cljs.core.volatile_BANG_(false);
return ((function (started){
return (function() {
var G__21195 = null;
var G__21195__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__21195__1 = (function (result){
var G__21188 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__21188) : rf.call(null,G__21188));
});
var G__21195__2 = (function (result,input){
if(cljs.core.truth_(cljs.core.deref(started))){
var sepr = (function (){var G__21189 = result;
var G__21190 = sep;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__21189,G__21190) : rf.call(null,G__21189,G__21190));
})();
if(cljs.core.reduced_QMARK_(sepr)){
return sepr;
} else {
var G__21191 = sepr;
var G__21192 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__21191,G__21192) : rf.call(null,G__21191,G__21192));
}
} else {
cljs.core.vreset_BANG_(started,true);

var G__21193 = result;
var G__21194 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__21193,G__21194) : rf.call(null,G__21193,G__21194));
}
});
G__21195 = function(result,input){
switch(arguments.length){
case 0:
return G__21195__0.call(this);
case 1:
return G__21195__1.call(this,result);
case 2:
return G__21195__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__21195.cljs$core$IFn$_invoke$arity$0 = G__21195__0;
G__21195.cljs$core$IFn$_invoke$arity$1 = G__21195__1;
G__21195.cljs$core$IFn$_invoke$arity$2 = G__21195__2;
return G__21195;
})()
;})(started))
});
});
var interpose__2 = (function (sep,coll){
return cljs.core.drop.cljs$core$IFn$_invoke$arity$2((1),cljs.core.interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(sep),coll));
});
interpose = function(sep,coll){
switch(arguments.length){
case 1:
return interpose__1.call(this,sep);
case 2:
return interpose__2.call(this,sep,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
interpose.cljs$core$IFn$_invoke$arity$1 = interpose__1;
interpose.cljs$core$IFn$_invoke$arity$2 = interpose__2;
return interpose;
})()
;
/**
* Take a collection of collections, and return a lazy seq
* of items from the inner collection
*/
cljs.core.flatten1 = (function flatten1(colls){
var cat = (function cat(coll,colls__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4124__auto__ = cljs.core.seq(coll);
if(temp__4124__auto__){
var coll__$1 = temp__4124__auto__;
return cljs.core.cons(cljs.core.first(coll__$1),cat(cljs.core.rest(coll__$1),colls__$1));
} else {
if(cljs.core.seq(colls__$1)){
return cat(cljs.core.first(colls__$1),cljs.core.rest(colls__$1));
} else {
return null;
}
}
}),null,null));
});
return cat(null,colls);
});
/**
* Returns the result of applying concat to the result of applying map
* to f and colls.  Thus function f should return a collection. Returns
* a transducer when no collections are provided
* @param {...*} var_args
*/
cljs.core.mapcat = (function() {
var mapcat = null;
var mapcat__1 = (function (f){
return cljs.core.comp.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$1(f),cljs.core.cat);
});
var mapcat__2 = (function() { 
var G__21204__delegate = function (f,colls){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.concat,cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.map,f,colls));
};
var G__21204 = function (f,var_args){
var colls = null;
if (arguments.length > 1) {
var G__21205__i = 0, G__21205__a = new Array(arguments.length -  1);
while (G__21205__i < G__21205__a.length) {G__21205__a[G__21205__i] = arguments[G__21205__i + 1]; ++G__21205__i;}
  colls = new cljs.core.IndexedSeq(G__21205__a,0);
} 
return G__21204__delegate.call(this,f,colls);};
G__21204.cljs$lang$maxFixedArity = 1;
G__21204.cljs$lang$applyTo = (function (arglist__21206){
var f = cljs.core.first(arglist__21206);
var colls = cljs.core.rest(arglist__21206);
return G__21204__delegate(f,colls);
});
G__21204.cljs$core$IFn$_invoke$arity$variadic = G__21204__delegate;
return G__21204;
})()
;
mapcat = function(f,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return mapcat__1.call(this,f);
default:
var G__21207 = null;
if (arguments.length > 1) {
var G__21208__i = 0, G__21208__a = new Array(arguments.length -  1);
while (G__21208__i < G__21208__a.length) {G__21208__a[G__21208__i] = arguments[G__21208__i + 1]; ++G__21208__i;}
G__21207 = new cljs.core.IndexedSeq(G__21208__a,0);
}
return mapcat__2.cljs$core$IFn$_invoke$arity$variadic(f, G__21207);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
mapcat.cljs$lang$maxFixedArity = 1;
mapcat.cljs$lang$applyTo = mapcat__2.cljs$lang$applyTo;
mapcat.cljs$core$IFn$_invoke$arity$1 = mapcat__1;
mapcat.cljs$core$IFn$_invoke$arity$variadic = mapcat__2.cljs$core$IFn$_invoke$arity$variadic;
return mapcat;
})()
;
/**
* Returns a lazy sequence of the items in coll for which
* (pred item) returns true. pred must be free of side-effects.
* Returns a transducer when no collection is provided.
*/
cljs.core.filter = (function() {
var filter = null;
var filter__1 = (function (pred){
return (function (rf){
return (function() {
var G__21227 = null;
var G__21227__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__21227__1 = (function (result){
var G__21221 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__21221) : rf.call(null,G__21221));
});
var G__21227__2 = (function (result,input){
if(cljs.core.truth_((function (){var G__21222 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__21222) : pred.call(null,G__21222));
})())){
var G__21223 = result;
var G__21224 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__21223,G__21224) : rf.call(null,G__21223,G__21224));
} else {
return result;
}
});
G__21227 = function(result,input){
switch(arguments.length){
case 0:
return G__21227__0.call(this);
case 1:
return G__21227__1.call(this,result);
case 2:
return G__21227__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__21227.cljs$core$IFn$_invoke$arity$0 = G__21227__0;
G__21227.cljs$core$IFn$_invoke$arity$1 = G__21227__1;
G__21227.cljs$core$IFn$_invoke$arity$2 = G__21227__2;
return G__21227;
})()
});
});
var filter__2 = (function (pred,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__8391__auto___21228 = size;
var i_21229 = (0);
while(true){
if((i_21229 < n__8391__auto___21228)){
if(cljs.core.truth_((function (){var G__21225 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_21229);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__21225) : pred.call(null,G__21225));
})())){
cljs.core.chunk_append(b,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_21229));
} else {
}

var G__21230 = (i_21229 + (1));
i_21229 = G__21230;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),filter.cljs$core$IFn$_invoke$arity$2(pred,cljs.core.chunk_rest(s)));
} else {
var f = cljs.core.first(s);
var r = cljs.core.rest(s);
if(cljs.core.truth_((function (){var G__21226 = f;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__21226) : pred.call(null,G__21226));
})())){
return cljs.core.cons(f,filter.cljs$core$IFn$_invoke$arity$2(pred,r));
} else {
return filter.cljs$core$IFn$_invoke$arity$2(pred,r);
}
}
} else {
return null;
}
}),null,null));
});
filter = function(pred,coll){
switch(arguments.length){
case 1:
return filter__1.call(this,pred);
case 2:
return filter__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
filter.cljs$core$IFn$_invoke$arity$1 = filter__1;
filter.cljs$core$IFn$_invoke$arity$2 = filter__2;
return filter;
})()
;
/**
* Returns a lazy sequence of the items in coll for which
* (pred item) returns false. pred must be free of side-effects.
* Returns a transducer when no collection is provided.
*/
cljs.core.remove = (function() {
var remove = null;
var remove__1 = (function (pred){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$1(cljs.core.complement(pred));
});
var remove__2 = (function (pred,coll){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(cljs.core.complement(pred),coll);
});
remove = function(pred,coll){
switch(arguments.length){
case 1:
return remove__1.call(this,pred);
case 2:
return remove__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
remove.cljs$core$IFn$_invoke$arity$1 = remove__1;
remove.cljs$core$IFn$_invoke$arity$2 = remove__2;
return remove;
})()
;
/**
* Returns a lazy sequence of the nodes in a tree, via a depth-first walk.
* branch? must be a fn of one arg that returns true if passed a node
* that can have children (but may not).  children must be a fn of one
* arg that returns a sequence of the children. Will only be called on
* nodes for which branch? returns true. Root is the root node of the
* tree.
*/
cljs.core.tree_seq = (function tree_seq(branch_QMARK_,children,root){
var walk = (function walk(node){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons(node,(cljs.core.truth_((function (){var G__21237 = node;
return (branch_QMARK_.cljs$core$IFn$_invoke$arity$1 ? branch_QMARK_.cljs$core$IFn$_invoke$arity$1(G__21237) : branch_QMARK_.call(null,G__21237));
})())?cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(walk,cljs.core.array_seq([(function (){var G__21238 = node;
return (children.cljs$core$IFn$_invoke$arity$1 ? children.cljs$core$IFn$_invoke$arity$1(G__21238) : children.call(null,G__21238));
})()], 0)):null));
}),null,null));
});
return walk(root);
});
/**
* Takes any nested combination of sequential things (lists, vectors,
* etc.) and returns their contents as a single, flat sequence.
* (flatten nil) returns nil.
*/
cljs.core.flatten = (function flatten(x){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2((function (p1__21239_SHARP_){
return !(cljs.core.sequential_QMARK_(p1__21239_SHARP_));
}),cljs.core.rest(cljs.core.tree_seq(cljs.core.sequential_QMARK_,cljs.core.seq,x)));
});
/**
* Returns a new coll consisting of to-coll with all of the items of
* from-coll conjoined. A transducer may be supplied.
*/
cljs.core.into = (function() {
var into = null;
var into__2 = (function (to,from){
if(!((to == null))){
if((function (){var G__21242 = to;
if(G__21242){
var bit__8178__auto__ = (G__21242.cljs$lang$protocol_mask$partition1$ & (4));
if((bit__8178__auto__) || (G__21242.cljs$core$IEditableCollection$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_,cljs.core.transient$(to),from)),cljs.core.meta(to));
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,to,from);
}
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.List.EMPTY,from);
}
});
var into__3 = (function (to,xform,from){
if((function (){var G__21243 = to;
if(G__21243){
var bit__8178__auto__ = (G__21243.cljs$lang$protocol_mask$partition1$ & (4));
if((bit__8178__auto__) || (G__21243.cljs$core$IEditableCollection$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform,cljs.core.conj_BANG_,cljs.core.transient$(to),from)),cljs.core.meta(to));
} else {
return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform,cljs.core.conj,to,from);
}
});
into = function(to,xform,from){
switch(arguments.length){
case 2:
return into__2.call(this,to,xform);
case 3:
return into__3.call(this,to,xform,from);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
into.cljs$core$IFn$_invoke$arity$2 = into__2;
into.cljs$core$IFn$_invoke$arity$3 = into__3;
return into;
})()
;
/**
* Returns a vector consisting of the result of applying f to the
* set of first items of each coll, followed by applying f to the set
* of second items in each coll, until any one of the colls is
* exhausted.  Any remaining items in other colls are ignored. Function
* f should accept number-of-colls arguments.
* @param {...*} var_args
*/
cljs.core.mapv = (function() {
var mapv = null;
var mapv__2 = (function (f,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (v,o){
return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v,(function (){var G__21245 = o;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__21245) : f.call(null,G__21245));
})());
}),cljs.core.transient$(cljs.core.PersistentVector.EMPTY),coll));
});
var mapv__3 = (function (f,c1,c2){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$3(f,c1,c2));
});
var mapv__4 = (function (f,c1,c2,c3){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$4(f,c1,c2,c3));
});
var mapv__5 = (function() { 
var G__21246__delegate = function (f,c1,c2,c3,colls){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(cljs.core.map,f,c1,c2,c3,cljs.core.array_seq([colls], 0)));
};
var G__21246 = function (f,c1,c2,c3,var_args){
var colls = null;
if (arguments.length > 4) {
var G__21247__i = 0, G__21247__a = new Array(arguments.length -  4);
while (G__21247__i < G__21247__a.length) {G__21247__a[G__21247__i] = arguments[G__21247__i + 4]; ++G__21247__i;}
  colls = new cljs.core.IndexedSeq(G__21247__a,0);
} 
return G__21246__delegate.call(this,f,c1,c2,c3,colls);};
G__21246.cljs$lang$maxFixedArity = 4;
G__21246.cljs$lang$applyTo = (function (arglist__21248){
var f = cljs.core.first(arglist__21248);
arglist__21248 = cljs.core.next(arglist__21248);
var c1 = cljs.core.first(arglist__21248);
arglist__21248 = cljs.core.next(arglist__21248);
var c2 = cljs.core.first(arglist__21248);
arglist__21248 = cljs.core.next(arglist__21248);
var c3 = cljs.core.first(arglist__21248);
var colls = cljs.core.rest(arglist__21248);
return G__21246__delegate(f,c1,c2,c3,colls);
});
G__21246.cljs$core$IFn$_invoke$arity$variadic = G__21246__delegate;
return G__21246;
})()
;
mapv = function(f,c1,c2,c3,var_args){
var colls = var_args;
switch(arguments.length){
case 2:
return mapv__2.call(this,f,c1);
case 3:
return mapv__3.call(this,f,c1,c2);
case 4:
return mapv__4.call(this,f,c1,c2,c3);
default:
var G__21249 = null;
if (arguments.length > 4) {
var G__21250__i = 0, G__21250__a = new Array(arguments.length -  4);
while (G__21250__i < G__21250__a.length) {G__21250__a[G__21250__i] = arguments[G__21250__i + 4]; ++G__21250__i;}
G__21249 = new cljs.core.IndexedSeq(G__21250__a,0);
}
return mapv__5.cljs$core$IFn$_invoke$arity$variadic(f,c1,c2,c3, G__21249);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
mapv.cljs$lang$maxFixedArity = 4;
mapv.cljs$lang$applyTo = mapv__5.cljs$lang$applyTo;
mapv.cljs$core$IFn$_invoke$arity$2 = mapv__2;
mapv.cljs$core$IFn$_invoke$arity$3 = mapv__3;
mapv.cljs$core$IFn$_invoke$arity$4 = mapv__4;
mapv.cljs$core$IFn$_invoke$arity$variadic = mapv__5.cljs$core$IFn$_invoke$arity$variadic;
return mapv;
})()
;
/**
* Returns a vector of the items in coll for which
* (pred item) returns true. pred must be free of side-effects.
*/
cljs.core.filterv = (function filterv(pred,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (v,o){
if(cljs.core.truth_((function (){var G__21252 = o;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__21252) : pred.call(null,G__21252));
})())){
return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v,o);
} else {
return v;
}
}),cljs.core.transient$(cljs.core.PersistentVector.EMPTY),coll));
});
/**
* Returns a lazy sequence of lists of n items each, at offsets step
* apart. If step is not supplied, defaults to n, i.e. the partitions
* do not overlap. If a pad collection is supplied, use its elements as
* necessary to complete last partition up to n items. In case there are
* not enough padding elements, return a partition with less than n items.
*/
cljs.core.partition = (function() {
var partition = null;
var partition__2 = (function (n,coll){
return partition.cljs$core$IFn$_invoke$arity$3(n,n,coll);
});
var partition__3 = (function (n,step,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s);
if((n === cljs.core.count(p))){
return cljs.core.cons(p,partition.cljs$core$IFn$_invoke$arity$3(n,step,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
var partition__4 = (function (n,step,pad,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s);
if((n === cljs.core.count(p))){
return cljs.core.cons(p,partition.cljs$core$IFn$_invoke$arity$4(n,step,pad,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return cljs.core._conj(cljs.core.List.EMPTY,cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(p,pad)));
}
} else {
return null;
}
}),null,null));
});
partition = function(n,step,pad,coll){
switch(arguments.length){
case 2:
return partition__2.call(this,n,step);
case 3:
return partition__3.call(this,n,step,pad);
case 4:
return partition__4.call(this,n,step,pad,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partition.cljs$core$IFn$_invoke$arity$2 = partition__2;
partition.cljs$core$IFn$_invoke$arity$3 = partition__3;
partition.cljs$core$IFn$_invoke$arity$4 = partition__4;
return partition;
})()
;
/**
* Returns the value in a nested associative structure,
* where ks is a sequence of keys. Returns nil if the key is not present,
* or the not-found value if supplied.
*/
cljs.core.get_in = (function() {
var get_in = null;
var get_in__2 = (function (m,ks){
return get_in.cljs$core$IFn$_invoke$arity$3(m,ks,null);
});
var get_in__3 = (function (m,ks,not_found){
var sentinel = cljs.core.lookup_sentinel;
var m__$1 = m;
var ks__$1 = cljs.core.seq(ks);
while(true){
if(ks__$1){
if(!((function (){var G__21267 = m__$1;
if(G__21267){
var bit__8185__auto__ = (G__21267.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__8185__auto__) || (G__21267.cljs$core$ILookup$)){
return true;
} else {
if((!G__21267.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,G__21267);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,G__21267);
}
})())){
return not_found;
} else {
var m__$2 = cljs.core.get.cljs$core$IFn$_invoke$arity$3(m__$1,cljs.core.first(ks__$1),sentinel);
if((sentinel === m__$2)){
return not_found;
} else {
var G__21268 = sentinel;
var G__21269 = m__$2;
var G__21270 = cljs.core.next(ks__$1);
sentinel = G__21268;
m__$1 = G__21269;
ks__$1 = G__21270;
continue;
}
}
} else {
return m__$1;
}
break;
}
});
get_in = function(m,ks,not_found){
switch(arguments.length){
case 2:
return get_in__2.call(this,m,ks);
case 3:
return get_in__3.call(this,m,ks,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
get_in.cljs$core$IFn$_invoke$arity$2 = get_in__2;
get_in.cljs$core$IFn$_invoke$arity$3 = get_in__3;
return get_in;
})()
;
/**
* Associates a value in a nested associative structure, where ks is a
* sequence of keys and v is the new value and returns a new nested structure.
* If any levels do not exist, hash-maps will be created.
*/
cljs.core.assoc_in = (function assoc_in(m,p__21271,v){
var vec__21276 = p__21271;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21276,(0),null);
var ks = cljs.core.nthnext(vec__21276,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,assoc_in(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,v));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,v);
}
});
/**
* 'Updates' a value in a nested associative structure, where ks is a
* sequence of keys and f is a function that will take the old value
* and any supplied args and return the new value, and returns a new
* nested structure.  If any levels do not exist, hash-maps will be
* created.
* @param {...*} var_args
*/
cljs.core.update_in = (function() {
var update_in = null;
var update_in__3 = (function (m,p__21277,f){
var vec__21315 = p__21277;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21315,(0),null);
var ks = cljs.core.nthnext(vec__21315,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$3(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__21316 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__21316) : f.call(null,G__21316));
})());
}
});
var update_in__4 = (function (m,p__21278,f,a){
var vec__21317 = p__21278;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21317,(0),null);
var ks = cljs.core.nthnext(vec__21317,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$4(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__21318 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__21319 = a;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__21318,G__21319) : f.call(null,G__21318,G__21319));
})());
}
});
var update_in__5 = (function (m,p__21279,f,a,b){
var vec__21320 = p__21279;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21320,(0),null);
var ks = cljs.core.nthnext(vec__21320,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$5(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,b));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__21321 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__21322 = a;
var G__21323 = b;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__21321,G__21322,G__21323) : f.call(null,G__21321,G__21322,G__21323));
})());
}
});
var update_in__6 = (function (m,p__21280,f,a,b,c){
var vec__21324 = p__21280;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21324,(0),null);
var ks = cljs.core.nthnext(vec__21324,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$6(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,b,c));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__21325 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__21326 = a;
var G__21327 = b;
var G__21328 = c;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__21325,G__21326,G__21327,G__21328) : f.call(null,G__21325,G__21326,G__21327,G__21328));
})());
}
});
var update_in__7 = (function() { 
var G__21330__delegate = function (m,p__21281,f,a,b,c,args){
var vec__21329 = p__21281;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21329,(0),null);
var ks = cljs.core.nthnext(vec__21329,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(update_in,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,cljs.core.array_seq([b,c,args], 0)));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),a,b,c,cljs.core.array_seq([args], 0)));
}
};
var G__21330 = function (m,p__21281,f,a,b,c,var_args){
var args = null;
if (arguments.length > 6) {
var G__21331__i = 0, G__21331__a = new Array(arguments.length -  6);
while (G__21331__i < G__21331__a.length) {G__21331__a[G__21331__i] = arguments[G__21331__i + 6]; ++G__21331__i;}
  args = new cljs.core.IndexedSeq(G__21331__a,0);
} 
return G__21330__delegate.call(this,m,p__21281,f,a,b,c,args);};
G__21330.cljs$lang$maxFixedArity = 6;
G__21330.cljs$lang$applyTo = (function (arglist__21332){
var m = cljs.core.first(arglist__21332);
arglist__21332 = cljs.core.next(arglist__21332);
var p__21281 = cljs.core.first(arglist__21332);
arglist__21332 = cljs.core.next(arglist__21332);
var f = cljs.core.first(arglist__21332);
arglist__21332 = cljs.core.next(arglist__21332);
var a = cljs.core.first(arglist__21332);
arglist__21332 = cljs.core.next(arglist__21332);
var b = cljs.core.first(arglist__21332);
arglist__21332 = cljs.core.next(arglist__21332);
var c = cljs.core.first(arglist__21332);
var args = cljs.core.rest(arglist__21332);
return G__21330__delegate(m,p__21281,f,a,b,c,args);
});
G__21330.cljs$core$IFn$_invoke$arity$variadic = G__21330__delegate;
return G__21330;
})()
;
update_in = function(m,p__21281,f,a,b,c,var_args){
var args = var_args;
switch(arguments.length){
case 3:
return update_in__3.call(this,m,p__21281,f);
case 4:
return update_in__4.call(this,m,p__21281,f,a);
case 5:
return update_in__5.call(this,m,p__21281,f,a,b);
case 6:
return update_in__6.call(this,m,p__21281,f,a,b,c);
default:
var G__21333 = null;
if (arguments.length > 6) {
var G__21334__i = 0, G__21334__a = new Array(arguments.length -  6);
while (G__21334__i < G__21334__a.length) {G__21334__a[G__21334__i] = arguments[G__21334__i + 6]; ++G__21334__i;}
G__21333 = new cljs.core.IndexedSeq(G__21334__a,0);
}
return update_in__7.cljs$core$IFn$_invoke$arity$variadic(m,p__21281,f,a,b,c, G__21333);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
update_in.cljs$lang$maxFixedArity = 6;
update_in.cljs$lang$applyTo = update_in__7.cljs$lang$applyTo;
update_in.cljs$core$IFn$_invoke$arity$3 = update_in__3;
update_in.cljs$core$IFn$_invoke$arity$4 = update_in__4;
update_in.cljs$core$IFn$_invoke$arity$5 = update_in__5;
update_in.cljs$core$IFn$_invoke$arity$6 = update_in__6;
update_in.cljs$core$IFn$_invoke$arity$variadic = update_in__7.cljs$core$IFn$_invoke$arity$variadic;
return update_in;
})()
;
/**
* 'Updates' a value in an associative structure, where k is a
* key and f is a function that will take the old value
* and any supplied args and return the new value, and returns a new
* structure.  If the key does not exist, nil is passed as the old value.
* @param {...*} var_args
*/
cljs.core.update = (function() {
var update = null;
var update__3 = (function (m,k,f){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__21345 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__21345) : f.call(null,G__21345));
})());
});
var update__4 = (function (m,k,f,x){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__21346 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__21347 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__21346,G__21347) : f.call(null,G__21346,G__21347));
})());
});
var update__5 = (function (m,k,f,x,y){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__21348 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__21349 = x;
var G__21350 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__21348,G__21349,G__21350) : f.call(null,G__21348,G__21349,G__21350));
})());
});
var update__6 = (function (m,k,f,x,y,z){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__21351 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__21352 = x;
var G__21353 = y;
var G__21354 = z;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__21351,G__21352,G__21353,G__21354) : f.call(null,G__21351,G__21352,G__21353,G__21354));
})());
});
var update__7 = (function() { 
var G__21355__delegate = function (m,k,f,x,y,z,more){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),x,y,z,cljs.core.array_seq([more], 0)));
};
var G__21355 = function (m,k,f,x,y,z,var_args){
var more = null;
if (arguments.length > 6) {
var G__21356__i = 0, G__21356__a = new Array(arguments.length -  6);
while (G__21356__i < G__21356__a.length) {G__21356__a[G__21356__i] = arguments[G__21356__i + 6]; ++G__21356__i;}
  more = new cljs.core.IndexedSeq(G__21356__a,0);
} 
return G__21355__delegate.call(this,m,k,f,x,y,z,more);};
G__21355.cljs$lang$maxFixedArity = 6;
G__21355.cljs$lang$applyTo = (function (arglist__21357){
var m = cljs.core.first(arglist__21357);
arglist__21357 = cljs.core.next(arglist__21357);
var k = cljs.core.first(arglist__21357);
arglist__21357 = cljs.core.next(arglist__21357);
var f = cljs.core.first(arglist__21357);
arglist__21357 = cljs.core.next(arglist__21357);
var x = cljs.core.first(arglist__21357);
arglist__21357 = cljs.core.next(arglist__21357);
var y = cljs.core.first(arglist__21357);
arglist__21357 = cljs.core.next(arglist__21357);
var z = cljs.core.first(arglist__21357);
var more = cljs.core.rest(arglist__21357);
return G__21355__delegate(m,k,f,x,y,z,more);
});
G__21355.cljs$core$IFn$_invoke$arity$variadic = G__21355__delegate;
return G__21355;
})()
;
update = function(m,k,f,x,y,z,var_args){
var more = var_args;
switch(arguments.length){
case 3:
return update__3.call(this,m,k,f);
case 4:
return update__4.call(this,m,k,f,x);
case 5:
return update__5.call(this,m,k,f,x,y);
case 6:
return update__6.call(this,m,k,f,x,y,z);
default:
var G__21358 = null;
if (arguments.length > 6) {
var G__21359__i = 0, G__21359__a = new Array(arguments.length -  6);
while (G__21359__i < G__21359__a.length) {G__21359__a[G__21359__i] = arguments[G__21359__i + 6]; ++G__21359__i;}
G__21358 = new cljs.core.IndexedSeq(G__21359__a,0);
}
return update__7.cljs$core$IFn$_invoke$arity$variadic(m,k,f,x,y,z, G__21358);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
update.cljs$lang$maxFixedArity = 6;
update.cljs$lang$applyTo = update__7.cljs$lang$applyTo;
update.cljs$core$IFn$_invoke$arity$3 = update__3;
update.cljs$core$IFn$_invoke$arity$4 = update__4;
update.cljs$core$IFn$_invoke$arity$5 = update__5;
update.cljs$core$IFn$_invoke$arity$6 = update__6;
update.cljs$core$IFn$_invoke$arity$variadic = update__7.cljs$core$IFn$_invoke$arity$variadic;
return update;
})()
;

/**
* @constructor
*/
cljs.core.VectorNode = (function (edit,arr){
this.edit = edit;
this.arr = arr;
})

cljs.core.VectorNode.cljs$lang$type = true;

cljs.core.VectorNode.cljs$lang$ctorStr = "cljs.core/VectorNode";

cljs.core.VectorNode.cljs$lang$ctorPrWriter = (function (this__8091__auto__,writer__8092__auto__,opt__8093__auto__){
return cljs.core._write(writer__8092__auto__,"cljs.core/VectorNode");
});

cljs.core.__GT_VectorNode = (function __GT_VectorNode(edit,arr){
return (new cljs.core.VectorNode(edit,arr));
});

cljs.core.pv_fresh_node = (function pv_fresh_node(edit){
return (new cljs.core.VectorNode(edit,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
});
cljs.core.pv_aget = (function pv_aget(node,idx){
return (node.arr[idx]);
});
cljs.core.pv_aset = (function pv_aset(node,idx,val){
return (node.arr[idx] = val);
});
cljs.core.pv_clone_node = (function pv_clone_node(node){
return (new cljs.core.VectorNode(node.edit,cljs.core.aclone(node.arr)));
});
cljs.core.tail_off = (function tail_off(pv){
var cnt = pv.cnt;
if((cnt < (32))){
return (0);
} else {
return (((cnt - (1)) >>> (5)) << (5));
}
});
cljs.core.new_path = (function new_path(edit,level,node){
var ll = level;
var ret = node;
while(true){
if((ll === (0))){
return ret;
} else {
var embed = ret;
var r = cljs.core.pv_fresh_node(edit);
var _ = cljs.core.pv_aset(r,(0),embed);
var G__21360 = (ll - (5));
var G__21361 = r;
ll = G__21360;
ret = G__21361;
continue;
}
break;
}
});
cljs.core.push_tail = (function push_tail(pv,level,parent,tailnode){
var ret = cljs.core.pv_clone_node(parent);
var subidx = (((pv.cnt - (1)) >>> level) & (31));
if(((5) === level)){
cljs.core.pv_aset(ret,subidx,tailnode);

return ret;
} else {
var child = cljs.core.pv_aget(parent,subidx);
if(!((child == null))){
var node_to_insert = push_tail(pv,(level - (5)),child,tailnode);
cljs.core.pv_aset(ret,subidx,node_to_insert);

return ret;
} else {
var node_to_insert = cljs.core.new_path(null,(level - (5)),tailnode);
cljs.core.pv_aset(ret,subidx,node_to_insert);

return ret;
}
}
});
cljs.core.vector_index_out_of_bounds = (function vector_index_out_of_bounds(i,cnt){
throw (new Error([cljs.core.str("No item "),cljs.core.str(i),cljs.core.str(" in vector of length "),cljs.core.str(cnt)].join('')));
});
cljs.core.first_array_for_longvec = (function first_array_for_longvec(pv){
var node = pv.root;
var level = pv.shift;
while(true){
if((level > (0))){
var G__21366 = cljs.core.pv_aget(node,(0));
var G__21367 = (level - (5));
node = G__21366;
level = G__21367;
continue;
} else {
return node.arr;
}
break;
}
});
cljs.core.unchecked_array_for = (function unchecked_array_for(pv,i){
if((i >= cljs.core.tail_off(pv))){
return pv.tail;
} else {
var node = pv.root;
var level = pv.shift;
while(true){
if((level > (0))){
var G__21368 = cljs.core.pv_aget(node,((i >>> level) & (31)));
var G__21369 = (level - (5));
node = G__21368;
level = G__21369;
continue;
} else {
return node.arr;
}
break;
}
}
});
cljs.core.array_for = (function array_for(pv,i){
if((((0) <= i)) && ((i < pv.cnt))){
return cljs.core.unchecked_array_for(pv,i);
} else {
return cljs.core.vector_index_out_of_bounds(i,pv.cnt);
}
});
cljs.core.do_assoc = (function do_assoc(pv,level,node,i,val){
var ret = cljs.core.pv_clone_node(node);
if((level === (0))){
cljs.core.pv_aset(ret,(i & (31)),val);

return ret;
} else {
var subidx = ((i >>> level) & (31));
cljs.core.pv_aset(ret,subidx,do_assoc(pv,(level - (5)),cljs.core.pv_aget(node,subidx),i,val));

return ret;
}
});
cljs.core.pop_tail = (function pop_tail(pv,level,node){
var subidx = (((pv.cnt - (2)) >>> level) & (31));
if((level > (5))){
var new_child = pop_tail(pv,(level - (5)),cljs.core.pv_aget(node,subidx));
if(((new_child == null)) && ((subidx === (0)))){
return null;
} else {
var ret = cljs.core.pv_clone_node(node);
cljs.core.pv_aset(ret,subidx,new_child);

return ret;
}
} else {
if((subidx === (0))){
return null;
} else {
var ret = cljs.core.pv_clone_node(node);
cljs.core.pv_aset(ret,subidx,null);

return ret;

}
}
});

/**
* @constructor
*/
cljs.core.RangedIterator = (function (i,base,arr,v,start,end){
this.i = i;
this.base = base;
this.arr = arr;
this.v = v;
this.start = start;
this.end = end;
})
cljs.core.RangedIterator.prototype.hasNext = (function (){
var self__ = this;
var this$ = this;
return (self__.i < self__.end);
});

cljs.core.RangedIterator.prototype.next = (function (){
var self__ = this;
var this$ = this;
if(((self__.i - self__.base) === (32))){
self__.arr = cljs.core.unchecked_array_for(self__.v,self__.i);

self__.base = (self__.base + (32));
} else {
}

var ret = (self__.arr[(self__.i & (31))]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.RangedIterator.cljs$lang$type = true;

cljs.core.RangedIterator.cljs$lang$ctorStr = "cljs.core/RangedIterator";

cljs.core.RangedIterator.cljs$lang$ctorPrWriter = (function (this__8091__auto__,writer__8092__auto__,opt__8093__auto__){
return cljs.core._write(writer__8092__auto__,"cljs.core/RangedIterator");
});

cljs.core.__GT_RangedIterator = (function __GT_RangedIterator(i,base,arr,v,start,end){
return (new cljs.core.RangedIterator(i,base,arr,v,start,end));
});

cljs.core.ranged_iterator = (function ranged_iterator(v,start,end){
var i = start;
return (new cljs.core.RangedIterator(i,(i - (i % (32))),(((start < cljs.core.count(v)))?cljs.core.unchecked_array_for(v,i):null),v,start,end));
});







/**
* @constructor
*/
cljs.core.PersistentVector = (function (meta,cnt,shift,root,tail,__hash){
this.meta = meta;
this.cnt = cnt;
this.shift = shift;
this.root = root;
this.tail = tail;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 167668511;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentVector.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentVector.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (v,f,init){
var self__ = this;
var v__$1 = this;
var i = (0);
var init__$1 = init;
while(true){
if((i < self__.cnt)){
var arr = cljs.core.unchecked_array_for(v__$1,i);
var len = arr.length;
var init__$2 = (function (){var j = (0);
var init__$2 = init__$1;
while(true){
if((j < len)){
var init__$3 = (function (){var G__21379 = init__$2;
var G__21380 = (j + i);
var G__21381 = (arr[j]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__21379,G__21380,G__21381) : f.call(null,G__21379,G__21380,G__21381));
})();
if(cljs.core.reduced_QMARK_(init__$3)){
return init__$3;
} else {
var G__21392 = (j + (1));
var G__21393 = init__$3;
j = G__21392;
init__$2 = G__21393;
continue;
}
} else {
return init__$2;
}
break;
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__21382 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__21382) : cljs.core.deref.call(null,G__21382));
} else {
var G__21394 = (i + len);
var G__21395 = init__$2;
i = G__21394;
init__$1 = G__21395;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
return (cljs.core.array_for(coll__$1,n)[(n & (31))]);
});

cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
return (cljs.core.unchecked_array_for(coll__$1,n)[(n & (31))]);
} else {
return not_found;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (coll,n,val){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
if((cljs.core.tail_off(coll__$1) <= n)){
var new_tail = cljs.core.aclone(self__.tail);
(new_tail[(n & (31))] = val);

return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,self__.root,new_tail,null));
} else {
return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,cljs.core.do_assoc(coll__$1,self__.shift,self__.root,n,val),self__.tail,null));
}
} else {
if((n === self__.cnt)){
return cljs.core._conj(coll__$1,val);
} else {
throw (new Error([cljs.core.str("Index "),cljs.core.str(n),cljs.core.str(" out of bounds  [0,"),cljs.core.str(self__.cnt),cljs.core.str("]")].join('')));

}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IIterable$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.ranged_iterator(this$__$1,(0),self__.cnt);
});

cljs.core.PersistentVector.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentVector.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,self__.root,self__.tail,self__.__hash));
});

cljs.core.PersistentVector.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(0));
});

cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(1));
});

cljs.core.PersistentVector.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(self__.cnt - (1)));
} else {
return null;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt === (0))){
throw (new Error("Can't pop empty vector"));
} else {
if(((1) === self__.cnt)){
return cljs.core._with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
} else {
if(((1) < (self__.cnt - cljs.core.tail_off(coll__$1)))){
return (new cljs.core.PersistentVector(self__.meta,(self__.cnt - (1)),self__.shift,self__.root,self__.tail.slice((0),(-1)),null));
} else {
var new_tail = cljs.core.unchecked_array_for(coll__$1,(self__.cnt - (2)));
var nr = cljs.core.pop_tail(coll__$1,self__.shift,self__.root);
var new_root = (((nr == null))?cljs.core.PersistentVector.EMPTY_NODE:nr);
var cnt_1 = (self__.cnt - (1));
if((((5) < self__.shift)) && ((cljs.core.pv_aget(new_root,(1)) == null))){
return (new cljs.core.PersistentVector(self__.meta,cnt_1,(self__.shift - (5)),cljs.core.pv_aget(new_root,(0)),new_tail,null));
} else {
return (new cljs.core.PersistentVector(self__.meta,cnt_1,self__.shift,new_root,new_tail,null));
}

}
}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return (new cljs.core.RSeq(coll__$1,(self__.cnt - (1)),null));
} else {
return null;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__7925__auto__ = self__.__hash;
if(!((h__7925__auto__ == null))){
return h__7925__auto__;
} else {
var h__7925__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__7925__auto____$1;

return h__7925__auto____$1;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
if((other instanceof cljs.core.PersistentVector)){
if((self__.cnt === cljs.core.count(other))){
var me_iter = cljs.core._iterator(coll__$1);
var you_iter = cljs.core._iterator(other);
while(true){
if(cljs.core.truth_(me_iter.hasNext())){
var x = me_iter.next();
var y = you_iter.next();
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
continue;
} else {
return false;
}
} else {
return true;
}
break;
}
} else {
return false;
}
} else {
return cljs.core.equiv_sequential(coll__$1,other);
}
});

cljs.core.PersistentVector.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientVector(self__.cnt,self__.shift,(function (){var G__21383 = self__.root;
return (cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1(G__21383) : cljs.core.tv_editable_root.call(null,G__21383));
})(),(function (){var G__21384 = self__.tail;
return (cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1(G__21384) : cljs.core.tv_editable_tail.call(null,G__21384));
})()));
});

cljs.core.PersistentVector.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (v,f){
var self__ = this;
var v__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(v__$1,f);
});

cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (v,f,init){
var self__ = this;
var v__$1 = this;
var i = (0);
var init__$1 = init;
while(true){
if((i < self__.cnt)){
var arr = cljs.core.unchecked_array_for(v__$1,i);
var len = arr.length;
var init__$2 = (function (){var j = (0);
var init__$2 = init__$1;
while(true){
if((j < len)){
var init__$3 = (function (){var G__21385 = init__$2;
var G__21386 = (arr[j]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__21385,G__21386) : f.call(null,G__21385,G__21386));
})();
if(cljs.core.reduced_QMARK_(init__$3)){
return init__$3;
} else {
var G__21396 = (j + (1));
var G__21397 = init__$3;
j = G__21396;
init__$2 = G__21397;
continue;
}
} else {
return init__$2;
}
break;
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__21387 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__21387) : cljs.core.deref.call(null,G__21387));
} else {
var G__21398 = (i + len);
var G__21399 = init__$2;
i = G__21398;
init__$1 = G__21399;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._assoc_n(coll__$1,k,v);
} else {
throw (new Error("Vector's key for assoc must be a number."));
}
});

cljs.core.PersistentVector.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt === (0))){
return null;
} else {
if((self__.cnt <= (32))){
return (new cljs.core.IndexedSeq(self__.tail,(0)));
} else {
var G__21388 = coll__$1;
var G__21389 = cljs.core.first_array_for_longvec(coll__$1);
var G__21390 = (0);
var G__21391 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__21388,G__21389,G__21390,G__21391) : cljs.core.chunked_seq.call(null,G__21388,G__21389,G__21390,G__21391));

}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentVector(meta__$1,self__.cnt,self__.shift,self__.root,self__.tail,self__.__hash));
});

cljs.core.PersistentVector.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
if(((self__.cnt - cljs.core.tail_off(coll__$1)) < (32))){
var len = self__.tail.length;
var new_tail = (new Array((len + (1))));
var n__8391__auto___21400 = len;
var i_21401 = (0);
while(true){
if((i_21401 < n__8391__auto___21400)){
(new_tail[i_21401] = (self__.tail[i_21401]));

var G__21402 = (i_21401 + (1));
i_21401 = G__21402;
continue;
} else {
}
break;
}

(new_tail[len] = o);

return (new cljs.core.PersistentVector(self__.meta,(self__.cnt + (1)),self__.shift,self__.root,new_tail,null));
} else {
var root_overflow_QMARK_ = ((self__.cnt >>> (5)) > ((1) << self__.shift));
var new_shift = ((root_overflow_QMARK_)?(self__.shift + (5)):self__.shift);
var new_root = ((root_overflow_QMARK_)?(function (){var n_r = cljs.core.pv_fresh_node(null);
cljs.core.pv_aset(n_r,(0),self__.root);

cljs.core.pv_aset(n_r,(1),cljs.core.new_path(null,self__.shift,(new cljs.core.VectorNode(null,self__.tail))));

return n_r;
})():cljs.core.push_tail(coll__$1,self__.shift,self__.root,(new cljs.core.VectorNode(null,self__.tail))));
return (new cljs.core.PersistentVector(self__.meta,(self__.cnt + (1)),new_shift,new_root,[o],null));
}
});

cljs.core.PersistentVector.prototype.call = (function() {
var G__21403 = null;
var G__21403__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});
var G__21403__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});
G__21403 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__21403__2.call(this,self__,k);
case 3:
return G__21403__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__21403.cljs$core$IFn$_invoke$arity$2 = G__21403__2;
G__21403.cljs$core$IFn$_invoke$arity$3 = G__21403__3;
return G__21403;
})()
;

cljs.core.PersistentVector.prototype.apply = (function (self__,args21378){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args21378)));
});

cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});

cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});

cljs.core.PersistentVector.cljs$lang$type = true;

cljs.core.PersistentVector.cljs$lang$ctorStr = "cljs.core/PersistentVector";

cljs.core.PersistentVector.cljs$lang$ctorPrWriter = (function (this__8091__auto__,writer__8092__auto__,opt__8093__auto__){
return cljs.core._write(writer__8092__auto__,"cljs.core/PersistentVector");
});

cljs.core.__GT_PersistentVector = (function __GT_PersistentVector(meta,cnt,shift,root,tail,__hash){
return (new cljs.core.PersistentVector(meta,cnt,shift,root,tail,__hash));
});

cljs.core.PersistentVector.EMPTY_NODE = (new cljs.core.VectorNode(null,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
cljs.core.PersistentVector.EMPTY = (new cljs.core.PersistentVector(null,(0),(5),cljs.core.PersistentVector.EMPTY_NODE,[],cljs.core.empty_ordered_hash));
cljs.core.PersistentVector.fromArray = (function (xs,no_clone){
var l = xs.length;
var xs__$1 = ((no_clone)?xs:cljs.core.aclone(xs));
if((l < (32))){
return (new cljs.core.PersistentVector(null,l,(5),cljs.core.PersistentVector.EMPTY_NODE,xs__$1,null));
} else {
var node = xs__$1.slice((0),(32));
var v = (new cljs.core.PersistentVector(null,(32),(5),cljs.core.PersistentVector.EMPTY_NODE,node,null));
var i = (32);
var out = v.cljs$core$IEditableCollection$_as_transient$arity$1(null);
while(true){
if((i < l)){
var G__21404 = (i + (1));
var G__21405 = cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(out,(xs__$1[i]));
i = G__21404;
out = G__21405;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
}
});
(cljs.core.PersistentVector.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__8482__auto__ = this;
return cljs.core.es6_iterator(this__8482__auto__);
}));
cljs.core.vec = (function vec(coll){
if(coll instanceof Array){
return cljs.core.PersistentVector.fromArray(coll,true);
} else {
return cljs.core._persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_,cljs.core._as_transient(cljs.core.PersistentVector.EMPTY),coll));
}
});
/**
* @param {...*} var_args
*/
cljs.core.vector = (function() { 
var vector__delegate = function (args){
if(((args instanceof cljs.core.IndexedSeq)) && ((args.i === (0)))){
return cljs.core.PersistentVector.fromArray(args.arr,true);
} else {
return cljs.core.vec(args);
}
};
var vector = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__21406__i = 0, G__21406__a = new Array(arguments.length -  0);
while (G__21406__i < G__21406__a.length) {G__21406__a[G__21406__i] = arguments[G__21406__i + 0]; ++G__21406__i;}
  args = new cljs.core.IndexedSeq(G__21406__a,0);
} 
return vector__delegate.call(this,args);};
vector.cljs$lang$maxFixedArity = 0;
vector.cljs$lang$applyTo = (function (arglist__21407){
var args = cljs.core.seq(arglist__21407);
return vector__delegate(args);
});
vector.cljs$core$IFn$_invoke$arity$variadic = vector__delegate;
return vector;
})()
;

/**
* @constructor
*/
cljs.core.ChunkedSeq = (function (vec,node,i,off,meta,__hash){
this.vec = vec;
this.node = node;
this.i = i;
this.off = off;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 32375020;
this.cljs$lang$protocol_mask$partition1$ = 1536;
})
cljs.core.ChunkedSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ChunkedSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ChunkedSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(((self__.off + (1)) < self__.node.length)){
var s = (function (){var G__21408 = self__.vec;
var G__21409 = self__.node;
var G__21410 = self__.i;
var G__21411 = (self__.off + (1));
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__21408,G__21409,G__21410,G__21411) : cljs.core.chunked_seq.call(null,G__21408,G__21409,G__21410,G__21411));
})();
if((s == null)){
return null;
} else {
return s;
}
} else {
return cljs.core._chunked_next(coll__$1);
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__7925__auto__ = self__.__hash;
if(!((h__7925__auto__ == null))){
return h__7925__auto__;
} else {
var h__7925__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__7925__auto____$1;

return h__7925__auto____$1;
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2((function (){var G__21412 = self__.vec;
var G__21413 = (self__.i + self__.off);
var G__21414 = cljs.core.count(self__.vec);
return (cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(G__21412,G__21413,G__21414) : cljs.core.subvec.call(null,G__21412,G__21413,G__21414));
})(),f);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3((function (){var G__21415 = self__.vec;
var G__21416 = (self__.i + self__.off);
var G__21417 = cljs.core.count(self__.vec);
return (cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(G__21415,G__21416,G__21417) : cljs.core.subvec.call(null,G__21415,G__21416,G__21417));
})(),f,start);
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.node[self__.off]);
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(((self__.off + (1)) < self__.node.length)){
var s = (function (){var G__21418 = self__.vec;
var G__21419 = self__.node;
var G__21420 = self__.i;
var G__21421 = (self__.off + (1));
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__21418,G__21419,G__21420,G__21421) : cljs.core.chunked_seq.call(null,G__21418,G__21419,G__21420,G__21421));
})();
if((s == null)){
return cljs.core.List.EMPTY;
} else {
return s;
}
} else {
return cljs.core._chunked_rest(coll__$1);
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$2(self__.node,self__.off);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var end = (self__.i + self__.node.length);
if((end < cljs.core._count(self__.vec))){
var G__21422 = self__.vec;
var G__21423 = cljs.core.unchecked_array_for(self__.vec,end);
var G__21424 = end;
var G__21425 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__21422,G__21423,G__21424,G__21425) : cljs.core.chunked_seq.call(null,G__21422,G__21423,G__21424,G__21425));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,m){
var self__ = this;
var coll__$1 = this;
var G__21426 = self__.vec;
var G__21427 = self__.node;
var G__21428 = self__.i;
var G__21429 = self__.off;
var G__21430 = m;
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5(G__21426,G__21427,G__21428,G__21429,G__21430) : cljs.core.chunked_seq.call(null,G__21426,G__21427,G__21428,G__21429,G__21430));
});

cljs.core.ChunkedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var end = (self__.i + self__.node.length);
if((end < cljs.core._count(self__.vec))){
var G__21431 = self__.vec;
var G__21432 = cljs.core.unchecked_array_for(self__.vec,end);
var G__21433 = end;
var G__21434 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__21431,G__21432,G__21433,G__21434) : cljs.core.chunked_seq.call(null,G__21431,G__21432,G__21433,G__21434));
} else {
return null;
}
});

cljs.core.ChunkedSeq.cljs$lang$type = true;

cljs.core.ChunkedSeq.cljs$lang$ctorStr = "cljs.core/ChunkedSeq";

cljs.core.ChunkedSeq.cljs$lang$ctorPrWriter = (function (this__8091__auto__,writer__8092__auto__,opt__8093__auto__){
return cljs.core._write(writer__8092__auto__,"cljs.core/ChunkedSeq");
});

cljs.core.__GT_ChunkedSeq = (function __GT_ChunkedSeq(vec,node,i,off,meta,__hash){
return (new cljs.core.ChunkedSeq(vec,node,i,off,meta,__hash));
});

(cljs.core.ChunkedSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__8482__auto__ = this;
return cljs.core.es6_iterator(this__8482__auto__);
}));
cljs.core.chunked_seq = (function() {
var chunked_seq = null;
var chunked_seq__3 = (function (vec,i,off){
return (new cljs.core.ChunkedSeq(vec,cljs.core.array_for(vec,i),i,off,null,null));
});
var chunked_seq__4 = (function (vec,node,i,off){
return (new cljs.core.ChunkedSeq(vec,node,i,off,null,null));
});
var chunked_seq__5 = (function (vec,node,i,off,meta){
return (new cljs.core.ChunkedSeq(vec,node,i,off,meta,null));
});
chunked_seq = function(vec,node,i,off,meta){
switch(arguments.length){
case 3:
return chunked_seq__3.call(this,vec,node,i);
case 4:
return chunked_seq__4.call(this,vec,node,i,off);
case 5:
return chunked_seq__5.call(this,vec,node,i,off,meta);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
chunked_seq.cljs$core$IFn$_invoke$arity$3 = chunked_seq__3;
chunked_seq.cljs$core$IFn$_invoke$arity$4 = chunked_seq__4;
chunked_seq.cljs$core$IFn$_invoke$arity$5 = chunked_seq__5;
return chunked_seq;
})()
;

/**
* @constructor
*/
cljs.core.Subvec = (function (meta,v,start,end,__hash){
this.meta = meta;
this.v = v;
this.start = start;
this.end = end;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 166617887;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Subvec.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Subvec.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
if(((n < (0))) || ((self__.end <= (self__.start + n)))){
return cljs.core.vector_index_out_of_bounds(n,(self__.end - self__.start));
} else {
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,(self__.start + n));
}
});

cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if(((n < (0))) || ((self__.end <= (self__.start + n)))){
return not_found;
} else {
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(self__.v,(self__.start + n),not_found);
}
});

cljs.core.Subvec.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (coll,n,val){
var self__ = this;
var coll__$1 = this;
var v_pos = (self__.start + n);
var G__21436 = self__.meta;
var G__21437 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.v,v_pos,val);
var G__21438 = self__.start;
var G__21439 = (function (){var x__7821__auto__ = self__.end;
var y__7822__auto__ = (v_pos + (1));
return ((x__7821__auto__ > y__7822__auto__) ? x__7821__auto__ : y__7822__auto__);
})();
var G__21440 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__21436,G__21437,G__21438,G__21439,G__21440) : cljs.core.build_subvec.call(null,G__21436,G__21437,G__21438,G__21439,G__21440));
});

cljs.core.Subvec.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.Subvec.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Subvec(self__.meta,self__.v,self__.start,self__.end,self__.__hash));
});

cljs.core.Subvec.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.end - self__.start);
});

cljs.core.Subvec.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,(self__.end - (1)));
});

cljs.core.Subvec.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.start === self__.end)){
throw (new Error("Can't pop empty vector"));
} else {
var G__21441 = self__.meta;
var G__21442 = self__.v;
var G__21443 = self__.start;
var G__21444 = (self__.end - (1));
var G__21445 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__21441,G__21442,G__21443,G__21444,G__21445) : cljs.core.build_subvec.call(null,G__21441,G__21442,G__21443,G__21444,G__21445));
}
});

cljs.core.Subvec.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(!((self__.start === self__.end))){
return (new cljs.core.RSeq(coll__$1,((self__.end - self__.start) - (1)),null));
} else {
return null;
}
});

cljs.core.Subvec.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__7925__auto__ = self__.__hash;
if(!((h__7925__auto__ == null))){
return h__7925__auto__;
} else {
var h__7925__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__7925__auto____$1;

return h__7925__auto____$1;
}
});

cljs.core.Subvec.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.Subvec.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(coll__$1,f);
});

cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start__$1){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(coll__$1,f,start__$1);
});

cljs.core.Subvec.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,key,val){
var self__ = this;
var coll__$1 = this;
if(typeof key === 'number'){
return cljs.core._assoc_n(coll__$1,key,val);
} else {
throw (new Error("Subvec's key for assoc must be a number."));
}
});

cljs.core.Subvec.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var subvec_seq = ((function (coll__$1){
return (function subvec_seq(i){
if((i === self__.end)){
return null;
} else {
return cljs.core.cons(cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,i),(new cljs.core.LazySeq(null,((function (coll__$1){
return (function (){
return subvec_seq((i + (1)));
});})(coll__$1))
,null,null)));
}
});})(coll__$1))
;
return subvec_seq(self__.start);
});

cljs.core.Subvec.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
var G__21447 = meta__$1;
var G__21448 = self__.v;
var G__21449 = self__.start;
var G__21450 = self__.end;
var G__21451 = self__.__hash;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__21447,G__21448,G__21449,G__21450,G__21451) : cljs.core.build_subvec.call(null,G__21447,G__21448,G__21449,G__21450,G__21451));
});

cljs.core.Subvec.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__21452 = self__.meta;
var G__21453 = cljs.core._assoc_n(self__.v,self__.end,o);
var G__21454 = self__.start;
var G__21455 = (self__.end + (1));
var G__21456 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__21452,G__21453,G__21454,G__21455,G__21456) : cljs.core.build_subvec.call(null,G__21452,G__21453,G__21454,G__21455,G__21456));
});

cljs.core.Subvec.prototype.call = (function() {
var G__21457 = null;
var G__21457__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});
var G__21457__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});
G__21457 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__21457__2.call(this,self__,k);
case 3:
return G__21457__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__21457.cljs$core$IFn$_invoke$arity$2 = G__21457__2;
G__21457.cljs$core$IFn$_invoke$arity$3 = G__21457__3;
return G__21457;
})()
;

cljs.core.Subvec.prototype.apply = (function (self__,args21435){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args21435)));
});

cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});

cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});

cljs.core.Subvec.cljs$lang$type = true;

cljs.core.Subvec.cljs$lang$ctorStr = "cljs.core/Subvec";

cljs.core.Subvec.cljs$lang$ctorPrWriter = (function (this__8091__auto__,writer__8092__auto__,opt__8093__auto__){
return cljs.core._write(writer__8092__auto__,"cljs.core/Subvec");
});

cljs.core.__GT_Subvec = (function __GT_Subvec(meta,v,start,end,__hash){
return (new cljs.core.Subvec(meta,v,start,end,__hash));
});

(cljs.core.Subvec.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__8482__auto__ = this;
return cljs.core.es6_iterator(this__8482__auto__);
}));
cljs.core.build_subvec = (function build_subvec(meta,v,start,end,__hash){
while(true){
if((v instanceof cljs.core.Subvec)){
var G__21458 = meta;
var G__21459 = v.v;
var G__21460 = (v.start + start);
var G__21461 = (v.start + end);
var G__21462 = __hash;
meta = G__21458;
v = G__21459;
start = G__21460;
end = G__21461;
__hash = G__21462;
continue;
} else {
var c = cljs.core.count(v);
if(((start < (0))) || ((end < (0))) || ((start > c)) || ((end > c))){
throw (new Error("Index out of bounds"));
} else {
}

return (new cljs.core.Subvec(meta,v,start,end,__hash));
}
break;
}
});
/**
* Returns a persistent vector of the items in vector from
* start (inclusive) to end (exclusive).  If end is not supplied,
* defaults to (count vector). This operation is O(1) and very fast, as
* the resulting vector shares structure with the original and no
* trimming is done.
*/
cljs.core.subvec = (function() {
var subvec = null;
var subvec__2 = (function (v,start){
return subvec.cljs$core$IFn$_invoke$arity$3(v,start,cljs.core.count(v));
});
var subvec__3 = (function (v,start,end){
return cljs.core.build_subvec(null,v,start,end,null);
});
subvec = function(v,start,end){
switch(arguments.length){
case 2:
return subvec__2.call(this,v,start);
case 3:
return subvec__3.call(this,v,start,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
subvec.cljs$core$IFn$_invoke$arity$2 = subvec__2;
subvec.cljs$core$IFn$_invoke$arity$3 = subvec__3;
return subvec;
})()
;
cljs.core.tv_ensure_editable = (function tv_ensure_editable(edit,node){
if((edit === node.edit)){
return node;
} else {
return (new cljs.core.VectorNode(edit,cljs.core.aclone(node.arr)));
}
});
cljs.core.tv_editable_root = (function tv_editable_root(node){
return (new cljs.core.VectorNode((function (){var obj21469 = {};
return obj21469;
})(),cljs.core.aclone(node.arr)));
});
cljs.core.tv_editable_tail = (function tv_editable_tail(tl){
var ret = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
cljs.core.array_copy(tl,(0),ret,(0),tl.length);

return ret;
});
cljs.core.tv_push_tail = (function tv_push_tail(tv,level,parent,tail_node){
var ret = cljs.core.tv_ensure_editable(tv.root.edit,parent);
var subidx = (((tv.cnt - (1)) >>> level) & (31));
cljs.core.pv_aset(ret,subidx,(((level === (5)))?tail_node:(function (){var child = cljs.core.pv_aget(ret,subidx);
if(!((child == null))){
return tv_push_tail(tv,(level - (5)),child,tail_node);
} else {
return cljs.core.new_path(tv.root.edit,(level - (5)),tail_node);
}
})()));

return ret;
});
cljs.core.tv_pop_tail = (function tv_pop_tail(tv,level,node){
var node__$1 = cljs.core.tv_ensure_editable(tv.root.edit,node);
var subidx = (((tv.cnt - (2)) >>> level) & (31));
if((level > (5))){
var new_child = tv_pop_tail(tv,(level - (5)),cljs.core.pv_aget(node__$1,subidx));
if(((new_child == null)) && ((subidx === (0)))){
return null;
} else {
cljs.core.pv_aset(node__$1,subidx,new_child);

return node__$1;
}
} else {
if((subidx === (0))){
return null;
} else {
cljs.core.pv_aset(node__$1,subidx,null);

return node__$1;

}
}
});
cljs.core.unchecked_editable_array_for = (function unchecked_editable_array_for(tv,i){
if((i >= cljs.core.tail_off(tv))){
return tv.tail;
} else {
var root = tv.root;
var node = root;
var level = tv.shift;
while(true){
if((level > (0))){
var G__21477 = cljs.core.tv_ensure_editable(root.edit,cljs.core.pv_aget(node,((i >>> level) & (31))));
var G__21478 = (level - (5));
node = G__21477;
level = G__21478;
continue;
} else {
return node.arr;
}
break;
}
}
});

/**
* @constructor
*/
cljs.core.TransientVector = (function (cnt,shift,root,tail){
this.cnt = cnt;
this.shift = shift;
this.root = root;
this.tail = tail;
this.cljs$lang$protocol_mask$partition0$ = 275;
this.cljs$lang$protocol_mask$partition1$ = 88;
})
cljs.core.TransientVector.prototype.call = (function() {
var G__21482 = null;
var G__21482__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__21482__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__21482 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__21482__2.call(this,self__,k);
case 3:
return G__21482__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__21482.cljs$core$IFn$_invoke$arity$2 = G__21482__2;
G__21482.cljs$core$IFn$_invoke$arity$3 = G__21482__3;
return G__21482;
})()
;

cljs.core.TransientVector.prototype.apply = (function (self__,args21479){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args21479)));
});

cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
if(self__.root.edit){
return (cljs.core.array_for(coll__$1,n)[(n & (31))]);
} else {
throw (new Error("nth after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,n);
} else {
return not_found;
}
});

cljs.core.TransientVector.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(self__.root.edit){
return self__.cnt;
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3 = (function (tcoll,n,val){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if((((0) <= n)) && ((n < self__.cnt))){
if((cljs.core.tail_off(tcoll__$1) <= n)){
(self__.tail[(n & (31))] = val);

return tcoll__$1;
} else {
var new_root = ((function (tcoll__$1){
return (function go(level,node){
var node__$1 = cljs.core.tv_ensure_editable(self__.root.edit,node);
if((level === (0))){
cljs.core.pv_aset(node__$1,(n & (31)),val);

return node__$1;
} else {
var subidx = ((n >>> level) & (31));
cljs.core.pv_aset(node__$1,subidx,go((level - (5)),cljs.core.pv_aget(node__$1,subidx)));

return node__$1;
}
});})(tcoll__$1))
.call(null,self__.shift,self__.root);
self__.root = new_root;

return tcoll__$1;
}
} else {
if((n === self__.cnt)){
return cljs.core._conj_BANG_(tcoll__$1,val);
} else {
throw (new Error([cljs.core.str("Index "),cljs.core.str(n),cljs.core.str(" out of bounds for TransientVector of length"),cljs.core.str(self__.cnt)].join('')));

}
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_pop_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if((self__.cnt === (0))){
throw (new Error("Can't pop empty vector"));
} else {
if(((1) === self__.cnt)){
self__.cnt = (0);

return tcoll__$1;
} else {
if((((self__.cnt - (1)) & (31)) > (0))){
self__.cnt = (self__.cnt - (1));

return tcoll__$1;
} else {
var new_tail = cljs.core.unchecked_editable_array_for(tcoll__$1,(self__.cnt - (2)));
var new_root = (function (){var nr = cljs.core.tv_pop_tail(tcoll__$1,self__.shift,self__.root);
if(!((nr == null))){
return nr;
} else {
return (new cljs.core.VectorNode(self__.root.edit,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
}
})();
if((((5) < self__.shift)) && ((cljs.core.pv_aget(new_root,(1)) == null))){
var new_root__$1 = cljs.core.tv_ensure_editable(self__.root.edit,cljs.core.pv_aget(new_root,(0)));
self__.root = new_root__$1;

self__.shift = (self__.shift - (5));

self__.cnt = (self__.cnt - (1));

self__.tail = new_tail;

return tcoll__$1;
} else {
self__.root = new_root;

self__.cnt = (self__.cnt - (1));

self__.tail = new_tail;

return tcoll__$1;
}

}
}
}
} else {
throw (new Error("pop! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
if(typeof key === 'number'){
return cljs.core._assoc_n_BANG_(tcoll__$1,key,val);
} else {
throw (new Error("TransientVector's key for assoc! must be a number."));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if(((self__.cnt - cljs.core.tail_off(tcoll__$1)) < (32))){
(self__.tail[(self__.cnt & (31))] = o);

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
} else {
var tail_node = (new cljs.core.VectorNode(self__.root.edit,self__.tail));
var new_tail = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
(new_tail[(0)] = o);

self__.tail = new_tail;

if(((self__.cnt >>> (5)) > ((1) << self__.shift))){
var new_root_array = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var new_shift = (self__.shift + (5));
(new_root_array[(0)] = self__.root);

(new_root_array[(1)] = cljs.core.new_path(self__.root.edit,self__.shift,tail_node));

self__.root = (new cljs.core.VectorNode(self__.root.edit,new_root_array));

self__.shift = new_shift;

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
} else {
var new_root = cljs.core.tv_push_tail(tcoll__$1,self__.shift,self__.root,tail_node);
self__.root = new_root;

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
}
}
} else {
throw (new Error("conj! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
self__.root.edit = null;

var len = (self__.cnt - cljs.core.tail_off(tcoll__$1));
var trimmed_tail = (new Array(len));
cljs.core.array_copy(self__.tail,(0),trimmed_tail,(0),len);

return (new cljs.core.PersistentVector(null,self__.cnt,self__.shift,self__.root,trimmed_tail,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientVector.cljs$lang$type = true;

cljs.core.TransientVector.cljs$lang$ctorStr = "cljs.core/TransientVector";

cljs.core.TransientVector.cljs$lang$ctorPrWriter = (function (this__8091__auto__,writer__8092__auto__,opt__8093__auto__){
return cljs.core._write(writer__8092__auto__,"cljs.core/TransientVector");
});

cljs.core.__GT_TransientVector = (function __GT_TransientVector(cnt,shift,root,tail){
return (new cljs.core.TransientVector(cnt,shift,root,tail));
});


/**
* @constructor
*/
cljs.core.PersistentQueueSeq = (function (meta,front,rear,__hash){
this.meta = meta;
this.front = front;
this.rear = rear;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 31850572;
})
cljs.core.PersistentQueueSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentQueueSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__7925__auto__ = self__.__hash;
if(!((h__7925__auto__ == null))){
return h__7925__auto__;
} else {
var h__7925__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__7925__auto____$1;

return h__7925__auto____$1;
}
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var temp__4124__auto__ = cljs.core.next(self__.front);
if(temp__4124__auto__){
var f1 = temp__4124__auto__;
return (new cljs.core.PersistentQueueSeq(self__.meta,f1,self__.rear,null));
} else {
if((self__.rear == null)){
return cljs.core._empty(coll__$1);
} else {
return (new cljs.core.PersistentQueueSeq(self__.meta,self__.rear,null,null));
}
}
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueueSeq(meta__$1,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentQueueSeq.cljs$lang$type = true;

cljs.core.PersistentQueueSeq.cljs$lang$ctorStr = "cljs.core/PersistentQueueSeq";

cljs.core.PersistentQueueSeq.cljs$lang$ctorPrWriter = (function (this__8091__auto__,writer__8092__auto__,opt__8093__auto__){
return cljs.core._write(writer__8092__auto__,"cljs.core/PersistentQueueSeq");
});

cljs.core.__GT_PersistentQueueSeq = (function __GT_PersistentQueueSeq(meta,front,rear,__hash){
return (new cljs.core.PersistentQueueSeq(meta,front,rear,__hash));
});

(cljs.core.PersistentQueueSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__8482__auto__ = this;
return cljs.core.es6_iterator(this__8482__auto__);
}));

/**
* @constructor
*/
cljs.core.PersistentQueue = (function (meta,count,front,rear,__hash){
this.meta = meta;
this.count = count;
this.front = front;
this.rear = rear;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 31858766;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentQueue.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentQueue.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentQueue.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentQueue.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueue(self__.meta,self__.count,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueue.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.count;
});

cljs.core.PersistentQueue.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueue.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_(self__.front)){
var temp__4124__auto__ = cljs.core.next(self__.front);
if(temp__4124__auto__){
var f1 = temp__4124__auto__;
return (new cljs.core.PersistentQueue(self__.meta,(self__.count - (1)),f1,self__.rear,null));
} else {
return (new cljs.core.PersistentQueue(self__.meta,(self__.count - (1)),cljs.core.seq(self__.rear),cljs.core.PersistentVector.EMPTY,null));
}
} else {
return coll__$1;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__7925__auto__ = self__.__hash;
if(!((h__7925__auto__ == null))){
return h__7925__auto__;
} else {
var h__7925__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__7925__auto____$1;

return h__7925__auto____$1;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentQueue.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentQueue.EMPTY,self__.meta);
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.rest(cljs.core.seq(coll__$1));
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var rear__$1 = cljs.core.seq(self__.rear);
if(cljs.core.truth_((function (){var or__7504__auto__ = self__.front;
if(cljs.core.truth_(or__7504__auto__)){
return or__7504__auto__;
} else {
return rear__$1;
}
})())){
return (new cljs.core.PersistentQueueSeq(null,self__.front,cljs.core.seq(rear__$1),null));
} else {
return null;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueue(meta__$1,self__.count,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueue.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_(self__.front)){
return (new cljs.core.PersistentQueue(self__.meta,(self__.count + (1)),self__.front,cljs.core.conj.cljs$core$IFn$_invoke$arity$2((function (){var or__7504__auto__ = self__.rear;
if(cljs.core.truth_(or__7504__auto__)){
return or__7504__auto__;
} else {
return cljs.core.PersistentVector.EMPTY;
}
})(),o),null));
} else {
return (new cljs.core.PersistentQueue(self__.meta,(self__.count + (1)),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(self__.front,o),cljs.core.PersistentVector.EMPTY,null));
}
});

cljs.core.PersistentQueue.cljs$lang$type = true;

cljs.core.PersistentQueue.cljs$lang$ctorStr = "cljs.core/PersistentQueue";

cljs.core.PersistentQueue.cljs$lang$ctorPrWriter = (function (this__8091__auto__,writer__8092__auto__,opt__8093__auto__){
return cljs.core._write(writer__8092__auto__,"cljs.core/PersistentQueue");
});

cljs.core.__GT_PersistentQueue = (function __GT_PersistentQueue(meta,count,front,rear,__hash){
return (new cljs.core.PersistentQueue(meta,count,front,rear,__hash));
});

cljs.core.PersistentQueue.EMPTY = (new cljs.core.PersistentQueue(null,(0),null,cljs.core.PersistentVector.EMPTY,cljs.core.empty_ordered_hash));
(cljs.core.PersistentQueue.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__8482__auto__ = this;
return cljs.core.es6_iterator(this__8482__auto__);
}));

/**
* @constructor
*/
cljs.core.NeverEquiv = (function (){
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2097152;
})
cljs.core.NeverEquiv.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var self__ = this;
var o__$1 = this;
return false;
});

cljs.core.NeverEquiv.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.NeverEquiv.cljs$lang$type = true;

cljs.core.NeverEquiv.cljs$lang$ctorStr = "cljs.core/NeverEquiv";

cljs.core.NeverEquiv.cljs$lang$ctorPrWriter = (function (this__8091__auto__,writer__8092__auto__,opt__8093__auto__){
return cljs.core._write(writer__8092__auto__,"cljs.core/NeverEquiv");
});

cljs.core.__GT_NeverEquiv = (function __GT_NeverEquiv(){
return (new cljs.core.NeverEquiv());
});

cljs.core.never_equiv = (new cljs.core.NeverEquiv());
/**
* Assumes y is a map. Returns true if x equals y, otherwise returns
* false.
*/
cljs.core.equiv_map = (function equiv_map(x,y){
return cljs.core.boolean$(((cljs.core.map_QMARK_(y))?(((cljs.core.count(x) === cljs.core.count(y)))?cljs.core.every_QMARK_(cljs.core.identity,cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (xkv){
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(y,cljs.core.first(xkv),cljs.core.never_equiv),cljs.core.second(xkv));
}),x)):null):null));
});
cljs.core.scan_array = (function scan_array(incr,k,array){
var len = array.length;
var i = (0);
while(true){
if((i < len)){
if((k === (array[i]))){
return i;
} else {
var G__21483 = (i + incr);
i = G__21483;
continue;
}
} else {
return null;
}
break;
}
});
cljs.core.obj_map_compare_keys = (function obj_map_compare_keys(a,b){
var a__$1 = cljs.core.hash(a);
var b__$1 = cljs.core.hash(b);
if((a__$1 < b__$1)){
return (-1);
} else {
if((a__$1 > b__$1)){
return (1);
} else {
return (0);

}
}
});
cljs.core.obj_map__GT_hash_map = (function obj_map__GT_hash_map(m,k,v){
var ks = m.keys;
var len = ks.length;
var so = m.strobj;
var mm = cljs.core.meta(m);
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if((i < len)){
var k__$1 = (ks[i]);
var G__21484 = (i + (1));
var G__21485 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,k__$1,(so[k__$1]));
i = G__21484;
out = G__21485;
continue;
} else {
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,k,v)),mm);
}
break;
}
});
cljs.core.obj_clone = (function obj_clone(obj,ks){
var new_obj = (function (){var obj21489 = {};
return obj21489;
})();
var l = ks.length;
var i_21490 = (0);
while(true){
if((i_21490 < l)){
var k_21491 = (ks[i_21490]);
(new_obj[k_21491] = (obj[k_21491]));

var G__21492 = (i_21490 + (1));
i_21490 = G__21492;
continue;
} else {
}
break;
}

return new_obj;
});

/**
* @constructor
*/
cljs.core.ObjMap = (function (meta,keys,strobj,update_count,__hash){
this.meta = meta;
this.keys = keys;
this.strobj = strobj;
this.update_count = update_count;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16123663;
this.cljs$lang$protocol_mask$partition1$ = 4;
})
cljs.core.ObjMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ObjMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__7492__auto__ = (function (){var G__21496 = k;
return goog.isString(G__21496);
})();
if(cljs.core.truth_(and__7492__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__7492__auto__;
}
})())){
return (self__.strobj[k]);
} else {
return not_found;
}
});

cljs.core.ObjMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var len = self__.keys.length;
var keys__$1 = self__.keys.sort(cljs.core.obj_map_compare_keys);
var init__$1 = init;
while(true){
if(cljs.core.seq(keys__$1)){
var k = cljs.core.first(keys__$1);
var init__$2 = (function (){var G__21497 = init__$1;
var G__21498 = k;
var G__21499 = (self__.strobj[k]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__21497,G__21498,G__21499) : f.call(null,G__21497,G__21498,G__21499));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__21500 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__21500) : cljs.core.deref.call(null,G__21500));
} else {
var G__21506 = cljs.core.rest(keys__$1);
var G__21507 = init__$2;
keys__$1 = G__21506;
init__$1 = G__21507;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.ObjMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ObjMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.keys.length;
});

cljs.core.ObjMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__7925__auto__ = self__.__hash;
if(!((h__7925__auto__ == null))){
return h__7925__auto__;
} else {
var h__7925__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__7925__auto____$1;

return h__7925__auto____$1;
}
});

cljs.core.ObjMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.ObjMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.transient$(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY,coll__$1));
});

cljs.core.ObjMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.ObjMap.EMPTY,self__.meta);
});

cljs.core.ObjMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__7492__auto__ = (function (){var G__21502 = k;
return goog.isString(G__21502);
})();
if(cljs.core.truth_(and__7492__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__7492__auto__;
}
})())){
var new_keys = cljs.core.aclone(self__.keys);
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
new_keys.splice(cljs.core.scan_array((1),k,new_keys),(1));

delete new_strobj[k];

return (new cljs.core.ObjMap(self__.meta,new_keys,new_strobj,(self__.update_count + (1)),null));
} else {
return coll__$1;
}
});

cljs.core.ObjMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var G__21503 = k;
return goog.isString(G__21503);
})())){
if(((self__.update_count > cljs.core.ObjMap.HASHMAP_THRESHOLD)) || ((self__.keys.length >= cljs.core.ObjMap.HASHMAP_THRESHOLD))){
return cljs.core.obj_map__GT_hash_map(coll__$1,k,v);
} else {
if(!((cljs.core.scan_array((1),k,self__.keys) == null))){
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
(new_strobj[k] = v);

return (new cljs.core.ObjMap(self__.meta,self__.keys,new_strobj,(self__.update_count + (1)),null));
} else {
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
var new_keys = cljs.core.aclone(self__.keys);
(new_strobj[k] = v);

new_keys.push(k);

return (new cljs.core.ObjMap(self__.meta,new_keys,new_strobj,(self__.update_count + (1)),null));
}
}
} else {
return cljs.core.obj_map__GT_hash_map(coll__$1,k,v);
}
});

cljs.core.ObjMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__7492__auto__ = (function (){var G__21505 = k;
return goog.isString(G__21505);
})();
if(cljs.core.truth_(and__7492__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__7492__auto__;
}
})())){
return true;
} else {
return false;
}
});

cljs.core.ObjMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.keys.length > (0))){
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(((function (coll__$1){
return (function (p1__21493_SHARP_){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[p1__21493_SHARP_,(self__.strobj[p1__21493_SHARP_])],null));
});})(coll__$1))
,self__.keys.sort(cljs.core.obj_map_compare_keys));
} else {
return null;
}
});

cljs.core.ObjMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ObjMap(meta__$1,self__.keys,self__.strobj,self__.update_count,self__.__hash));
});

cljs.core.ObjMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,coll__$1,entry);
}
});

cljs.core.ObjMap.prototype.call = (function() {
var G__21508 = null;
var G__21508__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__21508__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__21508 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__21508__2.call(this,self__,k);
case 3:
return G__21508__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__21508.cljs$core$IFn$_invoke$arity$2 = G__21508__2;
G__21508.cljs$core$IFn$_invoke$arity$3 = G__21508__3;
return G__21508;
})()
;

cljs.core.ObjMap.prototype.apply = (function (self__,args21494){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args21494)));
});

cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.ObjMap.cljs$lang$type = true;

cljs.core.ObjMap.cljs$lang$ctorStr = "cljs.core/ObjMap";

cljs.core.ObjMap.cljs$lang$ctorPrWriter = (function (this__8091__auto__,writer__8092__auto__,opt__8093__auto__){
return cljs.core._write(writer__8092__auto__,"cljs.core/ObjMap");
});

cljs.core.__GT_ObjMap = (function __GT_ObjMap(meta,keys,strobj,update_count,__hash){
return (new cljs.core.ObjMap(meta,keys,strobj,update_count,__hash));
});

cljs.core.ObjMap.EMPTY = (new cljs.core.ObjMap(null,[],(function (){var obj21510 = {};
return obj21510;
})(),(0),cljs.core.empty_unordered_hash));
cljs.core.ObjMap.HASHMAP_THRESHOLD = (8);
cljs.core.ObjMap.fromObject = (function (ks,obj){
return (new cljs.core.ObjMap(null,ks,obj,(0),null));
});

/**
* @constructor
*/
cljs.core.ES6EntriesIterator = (function (s){
this.s = s;
})
cljs.core.ES6EntriesIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var vec__21511 = cljs.core.first(self__.s);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21511,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21511,(1),null);
self__.s = cljs.core.next(self__.s);

return {"done": false, "value": [k,v]};
} else {
return {"done": true, "value": null};
}
});

cljs.core.ES6EntriesIterator.cljs$lang$type = true;

cljs.core.ES6EntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6EntriesIterator";

cljs.core.ES6EntriesIterator.cljs$lang$ctorPrWriter = (function (this__8091__auto__,writer__8092__auto__,opt__8093__auto__){
return cljs.core._write(writer__8092__auto__,"cljs.core/ES6EntriesIterator");
});

cljs.core.__GT_ES6EntriesIterator = (function __GT_ES6EntriesIterator(s){
return (new cljs.core.ES6EntriesIterator(s));
});

cljs.core.es6_entries_iterator = (function es6_entries_iterator(coll){
return (new cljs.core.ES6EntriesIterator(cljs.core.seq(coll)));
});

/**
* @constructor
*/
cljs.core.ES6SetEntriesIterator = (function (s){
this.s = s;
})
cljs.core.ES6SetEntriesIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var x = cljs.core.first(self__.s);
self__.s = cljs.core.next(self__.s);

return {"done": false, "value": [x,x]};
} else {
return {"done": true, "value": null};
}
});

cljs.core.ES6SetEntriesIterator.cljs$lang$type = true;

cljs.core.ES6SetEntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6SetEntriesIterator";

cljs.core.ES6SetEntriesIterator.cljs$lang$ctorPrWriter = (function (this__8091__auto__,writer__8092__auto__,opt__8093__auto__){
return cljs.core._write(writer__8092__auto__,"cljs.core/ES6SetEntriesIterator");
});

cljs.core.__GT_ES6SetEntriesIterator = (function __GT_ES6SetEntriesIterator(s){
return (new cljs.core.ES6SetEntriesIterator(s));
});

cljs.core.es6_set_entries_iterator = (function es6_set_entries_iterator(coll){
return (new cljs.core.ES6SetEntriesIterator(cljs.core.seq(coll)));
});
cljs.core.array_map_index_of_nil_QMARK_ = (function array_map_index_of_nil_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if(((arr[i]) == null)){
return i;
} else {
var G__21512 = (i + (2));
i = G__21512;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_keyword_QMARK_ = (function array_map_index_of_keyword_QMARK_(arr,m,k){
var len = arr.length;
var kstr = k.fqn;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((function (){var k_SINGLEQUOTE_ = (arr[i]);
return ((k_SINGLEQUOTE_ instanceof cljs.core.Keyword)) && ((kstr === k_SINGLEQUOTE_.fqn));
})()){
return i;
} else {
var G__21513 = (i + (2));
i = G__21513;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_symbol_QMARK_ = (function array_map_index_of_symbol_QMARK_(arr,m,k){
var len = arr.length;
var kstr = k.str;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((function (){var k_SINGLEQUOTE_ = (arr[i]);
return ((k_SINGLEQUOTE_ instanceof cljs.core.Symbol)) && ((kstr === k_SINGLEQUOTE_.str));
})()){
return i;
} else {
var G__21514 = (i + (2));
i = G__21514;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_identical_QMARK_ = (function array_map_index_of_identical_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((k === (arr[i]))){
return i;
} else {
var G__21515 = (i + (2));
i = G__21515;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_equiv_QMARK_ = (function array_map_index_of_equiv_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k,(arr[i]))){
return i;
} else {
var G__21516 = (i + (2));
i = G__21516;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of = (function array_map_index_of(m,k){
var arr = m.arr;
if((k instanceof cljs.core.Keyword)){
return cljs.core.array_map_index_of_keyword_QMARK_(arr,m,k);
} else {
if(cljs.core.truth_((function (){var or__7504__auto__ = (function (){var G__21520 = k;
return goog.isString(G__21520);
})();
if(cljs.core.truth_(or__7504__auto__)){
return or__7504__auto__;
} else {
return typeof k === 'number';
}
})())){
return cljs.core.array_map_index_of_identical_QMARK_(arr,m,k);
} else {
if((k instanceof cljs.core.Symbol)){
return cljs.core.array_map_index_of_symbol_QMARK_(arr,m,k);
} else {
if((k == null)){
return cljs.core.array_map_index_of_nil_QMARK_(arr,m,k);
} else {
return cljs.core.array_map_index_of_equiv_QMARK_(arr,m,k);

}
}
}
}
});
cljs.core.array_map_extend_kv = (function array_map_extend_kv(m,k,v){
var arr = m.arr;
var l = arr.length;
var narr = (new Array((l + (2))));
var i_21521 = (0);
while(true){
if((i_21521 < l)){
(narr[i_21521] = (arr[i_21521]));

var G__21522 = (i_21521 + (1));
i_21521 = G__21522;
continue;
} else {
}
break;
}

(narr[l] = k);

(narr[(l + (1))] = v);

return narr;
});

/**
* @constructor
*/
cljs.core.PersistentArrayMapSeq = (function (arr,i,_meta){
this.arr = arr;
this.i = i;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374990;
})
cljs.core.PersistentArrayMapSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentArrayMapSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i < (self__.arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(self__.arr,(self__.i + (2)),self__._meta));
} else {
return null;
}
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return ((self__.arr.length - self__.i) / (2));
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[self__.i]),(self__.arr[(self__.i + (1))])], null);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i < (self__.arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(self__.arr,(self__.i + (2)),self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentArrayMapSeq(self__.arr,self__.i,new_meta));
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentArrayMapSeq.cljs$lang$type = true;

cljs.core.PersistentArrayMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapSeq";

cljs.core.PersistentArrayMapSeq.cljs$lang$ctorPrWriter = (function (this__8091__auto__,writer__8092__auto__,opt__8093__auto__){
return cljs.core._write(writer__8092__auto__,"cljs.core/PersistentArrayMapSeq");
});

cljs.core.__GT_PersistentArrayMapSeq = (function __GT_PersistentArrayMapSeq(arr,i,_meta){
return (new cljs.core.PersistentArrayMapSeq(arr,i,_meta));
});

(cljs.core.PersistentArrayMapSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__8482__auto__ = this;
return cljs.core.es6_iterator(this__8482__auto__);
}));
cljs.core.persistent_array_map_seq = (function persistent_array_map_seq(arr,i,_meta){
if((i <= (arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(arr,i,_meta));
} else {
return null;
}
});


/**
* @constructor
*/
cljs.core.PersistentArrayMapIterator = (function (arr,i,cnt){
this.arr = arr;
this.i = i;
this.cnt = cnt;
})
cljs.core.PersistentArrayMapIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.cnt);
});

cljs.core.PersistentArrayMapIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[self__.i]),(self__.arr[(self__.i + (1))])], null);
self__.i = (self__.i + (2));

return ret;
});

cljs.core.PersistentArrayMapIterator.cljs$lang$type = true;

cljs.core.PersistentArrayMapIterator.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapIterator";

cljs.core.PersistentArrayMapIterator.cljs$lang$ctorPrWriter = (function (this__8091__auto__,writer__8092__auto__,opt__8093__auto__){
return cljs.core._write(writer__8092__auto__,"cljs.core/PersistentArrayMapIterator");
});

cljs.core.__GT_PersistentArrayMapIterator = (function __GT_PersistentArrayMapIterator(arr,i,cnt){
return (new cljs.core.PersistentArrayMapIterator(arr,i,cnt));
});


/**
* @constructor
*/
cljs.core.PersistentArrayMap = (function (meta,cnt,arr,__hash){
this.meta = meta;
this.cnt = cnt;
this.arr = arr;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16647951;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentArrayMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentArrayMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentArrayMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__21524 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__21524) : cljs.core.keys.call(null,G__21524));
})());
});

cljs.core.PersistentArrayMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentArrayMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__21525 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__21525) : cljs.core.vals.call(null,G__21525));
})());
});

cljs.core.PersistentArrayMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentArrayMap.prototype.get = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentArrayMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__21526 = cljs.core.seq(coll);
var chunk__21527 = null;
var count__21528 = (0);
var i__21529 = (0);
while(true){
if((i__21529 < count__21528)){
var vec__21530 = chunk__21527.cljs$core$IIndexed$_nth$arity$2(null,i__21529);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21530,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21530,(1),null);
var G__21531_21544 = v;
var G__21532_21545 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__21531_21544,G__21532_21545) : f.call(null,G__21531_21544,G__21532_21545));

var G__21546 = seq__21526;
var G__21547 = chunk__21527;
var G__21548 = count__21528;
var G__21549 = (i__21529 + (1));
seq__21526 = G__21546;
chunk__21527 = G__21547;
count__21528 = G__21548;
i__21529 = G__21549;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__21526);
if(temp__4126__auto__){
var seq__21526__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__21526__$1)){
var c__8291__auto__ = cljs.core.chunk_first(seq__21526__$1);
var G__21550 = cljs.core.chunk_rest(seq__21526__$1);
var G__21551 = c__8291__auto__;
var G__21552 = cljs.core.count(c__8291__auto__);
var G__21553 = (0);
seq__21526 = G__21550;
chunk__21527 = G__21551;
count__21528 = G__21552;
i__21529 = G__21553;
continue;
} else {
var vec__21533 = cljs.core.first(seq__21526__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21533,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21533,(1),null);
var G__21534_21554 = v;
var G__21535_21555 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__21534_21554,G__21535_21555) : f.call(null,G__21534_21554,G__21535_21555));

var G__21556 = cljs.core.next(seq__21526__$1);
var G__21557 = null;
var G__21558 = (0);
var G__21559 = (0);
seq__21526 = G__21556;
chunk__21527 = G__21557;
count__21528 = G__21558;
i__21529 = G__21559;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx === (-1))){
return not_found;
} else {
return (self__.arr[(idx + (1))]);
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var len = self__.arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var init__$2 = (function (){var G__21536 = init__$1;
var G__21537 = (self__.arr[i]);
var G__21538 = (self__.arr[(i + (1))]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__21536,G__21537,G__21538) : f.call(null,G__21536,G__21537,G__21538));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__21539 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__21539) : cljs.core.deref.call(null,G__21539));
} else {
var G__21560 = (i + (2));
var G__21561 = init__$2;
i = G__21560;
init__$1 = G__21561;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$ = true;

cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return (new cljs.core.PersistentArrayMapIterator(self__.arr,(0),(self__.cnt * (2))));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentArrayMap(self__.meta,self__.cnt,self__.arr,self__.__hash));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__7925__auto__ = self__.__hash;
if(!((h__7925__auto__ == null))){
return h__7925__auto__;
} else {
var h__7925__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__7925__auto____$1;

return h__7925__auto____$1;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
if((function (){var G__21540 = other;
if(G__21540){
var bit__8178__auto__ = (G__21540.cljs$lang$protocol_mask$partition0$ & (1024));
if((bit__8178__auto__) || (G__21540.cljs$core$IMap$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
var alen = self__.arr.length;
var other__$1 = other;
if((self__.cnt === other__$1.cljs$core$ICounted$_count$arity$1(null))){
var i = (0);
while(true){
if((i < alen)){
var v = other__$1.cljs$core$ILookup$_lookup$arity$3(null,(self__.arr[i]),cljs.core.lookup_sentinel);
if(!((v === cljs.core.lookup_sentinel))){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((self__.arr[(i + (1))]),v)){
var G__21562 = (i + (2));
i = G__21562;
continue;
} else {
return false;
}
} else {
return false;
}
} else {
return true;
}
break;
}
} else {
return false;
}
} else {
return cljs.core.equiv_map(coll__$1,other);
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientArrayMap((function (){var obj21542 = {};
return obj21542;
})(),self__.arr.length,cljs.core.aclone(self__.arr)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.PersistentArrayMap.EMPTY,self__.meta);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx >= (0))){
var len = self__.arr.length;
var new_len = (len - (2));
if((new_len === (0))){
return cljs.core._empty(coll__$1);
} else {
var new_arr = (new Array(new_len));
var s = (0);
var d = (0);
while(true){
if((s >= len)){
return (new cljs.core.PersistentArrayMap(self__.meta,(self__.cnt - (1)),new_arr,null));
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k,(self__.arr[s]))){
var G__21563 = (s + (2));
var G__21564 = d;
s = G__21563;
d = G__21564;
continue;
} else {
(new_arr[d] = (self__.arr[s]));

(new_arr[(d + (1))] = (self__.arr[(s + (1))]));

var G__21565 = (s + (2));
var G__21566 = (d + (2));
s = G__21565;
d = G__21566;
continue;

}
}
break;
}
}
} else {
return coll__$1;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx === (-1))){
if((self__.cnt < cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD)){
var arr__$1 = cljs.core.array_map_extend_kv(coll__$1,k,v);
return (new cljs.core.PersistentArrayMap(self__.meta,(self__.cnt + (1)),arr__$1,null));
} else {
return cljs.core._with_meta(cljs.core._assoc(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY,coll__$1),k,v),self__.meta);
}
} else {
if((v === (self__.arr[(idx + (1))]))){
return coll__$1;
} else {
var arr__$1 = (function (){var G__21543 = cljs.core.aclone(self__.arr);
(G__21543[(idx + (1))] = v);

return G__21543;
})();
return (new cljs.core.PersistentArrayMap(self__.meta,self__.cnt,arr__$1,null));

}
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return !((cljs.core.array_map_index_of(coll__$1,k) === (-1)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.persistent_array_map_seq(self__.arr,(0),null);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentArrayMap(meta__$1,self__.cnt,self__.arr,self__.__hash));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__21567 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__21568 = cljs.core.next(es);
ret = G__21567;
es = G__21568;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentArrayMap.prototype.call = (function() {
var G__21569 = null;
var G__21569__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__21569__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__21569 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__21569__2.call(this,self__,k);
case 3:
return G__21569__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__21569.cljs$core$IFn$_invoke$arity$2 = G__21569__2;
G__21569.cljs$core$IFn$_invoke$arity$3 = G__21569__3;
return G__21569;
})()
;

cljs.core.PersistentArrayMap.prototype.apply = (function (self__,args21523){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args21523)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentArrayMap.cljs$lang$type = true;

cljs.core.PersistentArrayMap.cljs$lang$ctorStr = "cljs.core/PersistentArrayMap";

cljs.core.PersistentArrayMap.cljs$lang$ctorPrWriter = (function (this__8091__auto__,writer__8092__auto__,opt__8093__auto__){
return cljs.core._write(writer__8092__auto__,"cljs.core/PersistentArrayMap");
});

cljs.core.__GT_PersistentArrayMap = (function __GT_PersistentArrayMap(meta,cnt,arr,__hash){
return (new cljs.core.PersistentArrayMap(meta,cnt,arr,__hash));
});

cljs.core.PersistentArrayMap.EMPTY = (new cljs.core.PersistentArrayMap(null,(0),[],cljs.core.empty_unordered_hash));
cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD = (8);
cljs.core.PersistentArrayMap.fromArray = (function (arr,no_clone,no_check){
var arr__$1 = ((no_clone)?arr:cljs.core.aclone(arr));
if(no_check){
var cnt = (arr__$1.length / (2));
return (new cljs.core.PersistentArrayMap(null,cnt,arr__$1,null));
} else {
var len = arr__$1.length;
var i = (0);
var ret = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
while(true){
if((i < len)){
var G__21570 = (i + (2));
var G__21571 = cljs.core._assoc_BANG_(ret,(arr__$1[i]),(arr__$1[(i + (1))]));
i = G__21570;
ret = G__21571;
continue;
} else {
return cljs.core._persistent_BANG_(ret);
}
break;
}
}
});
(cljs.core.PersistentArrayMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__8482__auto__ = this;
return cljs.core.es6_iterator(this__8482__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientArrayMap = (function (editable_QMARK_,len,arr){
this.editable_QMARK_ = editable_QMARK_;
this.len = len;
this.arr = arr;
this.cljs$lang$protocol_mask$partition1$ = 56;
this.cljs$lang$protocol_mask$partition0$ = 258;
})
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = (function (tcoll,key){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,key);
if((idx >= (0))){
(self__.arr[idx] = (self__.arr[(self__.len - (2))]));

(self__.arr[(idx + (1))] = (self__.arr[(self__.len - (1))]));

var G__21572_21580 = self__.arr;
G__21572_21580.pop();

G__21572_21580.pop();


self__.len = (self__.len - (2));
} else {
}

return tcoll__$1;
} else {
throw (new Error("dissoc! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,key);
if((idx === (-1))){
if(((self__.len + (2)) <= ((2) * cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD))){
self__.len = (self__.len + (2));

self__.arr.push(key);

self__.arr.push(val);

return tcoll__$1;
} else {
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3((function (){var G__21573 = self__.len;
var G__21574 = self__.arr;
return (cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2 ? cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2(G__21573,G__21574) : cljs.core.array__GT_transient_hash_map.call(null,G__21573,G__21574));
})(),key,val);
}
} else {
if((val === (self__.arr[(idx + (1))]))){
return tcoll__$1;
} else {
(self__.arr[(idx + (1))] = val);

return tcoll__$1;
}
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
if((function (){var G__21575 = o;
if(G__21575){
var bit__8185__auto__ = (G__21575.cljs$lang$protocol_mask$partition0$ & (2048));
if((bit__8185__auto__) || (G__21575.cljs$core$IMapEntry$)){
return true;
} else {
if((!G__21575.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__21575);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__21575);
}
})()){
return cljs.core._assoc_BANG_(tcoll__$1,(function (){var G__21576 = o;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__21576) : cljs.core.key.call(null,G__21576));
})(),(function (){var G__21577 = o;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__21577) : cljs.core.val.call(null,G__21577));
})());
} else {
var es = cljs.core.seq(o);
var tcoll__$2 = tcoll__$1;
while(true){
var temp__4124__auto__ = cljs.core.first(es);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
var G__21581 = cljs.core.next(es);
var G__21582 = cljs.core._assoc_BANG_(tcoll__$2,(function (){var G__21578 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__21578) : cljs.core.key.call(null,G__21578));
})(),(function (){var G__21579 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__21579) : cljs.core.val.call(null,G__21579));
})());
es = G__21581;
tcoll__$2 = G__21582;
continue;
} else {
return tcoll__$2;
}
break;
}
}
} else {
throw (new Error("conj! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
self__.editable_QMARK_ = false;

return (new cljs.core.PersistentArrayMap(null,cljs.core.quot(self__.len,(2)),self__.arr,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,k){
var self__ = this;
var tcoll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(tcoll__$1,k,null);
});

cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,k,not_found){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,k);
if((idx === (-1))){
return not_found;
} else {
return (self__.arr[(idx + (1))]);
}
} else {
throw (new Error("lookup after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
return cljs.core.quot(self__.len,(2));
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientArrayMap.cljs$lang$type = true;

cljs.core.TransientArrayMap.cljs$lang$ctorStr = "cljs.core/TransientArrayMap";

cljs.core.TransientArrayMap.cljs$lang$ctorPrWriter = (function (this__8091__auto__,writer__8092__auto__,opt__8093__auto__){
return cljs.core._write(writer__8092__auto__,"cljs.core/TransientArrayMap");
});

cljs.core.__GT_TransientArrayMap = (function __GT_TransientArrayMap(editable_QMARK_,len,arr){
return (new cljs.core.TransientArrayMap(editable_QMARK_,len,arr));
});


cljs.core.array__GT_transient_hash_map = (function array__GT_transient_hash_map(len,arr){
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
var i = (0);
while(true){
if((i < len)){
var G__21583 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,(arr[i]),(arr[(i + (1))]));
var G__21584 = (i + (2));
out = G__21583;
i = G__21584;
continue;
} else {
return out;
}
break;
}
});

/**
* @constructor
*/
cljs.core.Box = (function (val){
this.val = val;
})

cljs.core.Box.cljs$lang$type = true;

cljs.core.Box.cljs$lang$ctorStr = "cljs.core/Box";

cljs.core.Box.cljs$lang$ctorPrWriter = (function (this__8091__auto__,writer__8092__auto__,opt__8093__auto__){
return cljs.core._write(writer__8092__auto__,"cljs.core/Box");
});

cljs.core.__GT_Box = (function __GT_Box(val){
return (new cljs.core.Box(val));
});






cljs.core.key_test = (function key_test(key,other){
if((key === other)){
return true;
} else {
if(cljs.core.keyword_identical_QMARK_(key,other)){
return true;
} else {
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(key,other);

}
}
});
cljs.core.mask = (function mask(hash,shift){
return ((hash >>> shift) & (31));
});
cljs.core.clone_and_set = (function() {
var clone_and_set = null;
var clone_and_set__3 = (function (arr,i,a){
var G__21587 = cljs.core.aclone(arr);
(G__21587[i] = a);

return G__21587;
});
var clone_and_set__5 = (function (arr,i,a,j,b){
var G__21588 = cljs.core.aclone(arr);
(G__21588[i] = a);

(G__21588[j] = b);

return G__21588;
});
clone_and_set = function(arr,i,a,j,b){
switch(arguments.length){
case 3:
return clone_and_set__3.call(this,arr,i,a);
case 5:
return clone_and_set__5.call(this,arr,i,a,j,b);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
clone_and_set.cljs$core$IFn$_invoke$arity$3 = clone_and_set__3;
clone_and_set.cljs$core$IFn$_invoke$arity$5 = clone_and_set__5;
return clone_and_set;
})()
;
cljs.core.remove_pair = (function remove_pair(arr,i){
var new_arr = (new Array((arr.length - (2))));
cljs.core.array_copy(arr,(0),new_arr,(0),((2) * i));

cljs.core.array_copy(arr,((2) * (i + (1))),new_arr,((2) * i),(new_arr.length - ((2) * i)));

return new_arr;
});
cljs.core.bitmap_indexed_node_index = (function bitmap_indexed_node_index(bitmap,bit){
return cljs.core.bit_count((bitmap & (bit - (1))));
});
cljs.core.bitpos = (function bitpos(hash,shift){
return ((1) << ((hash >>> shift) & 0x01f));
});
cljs.core.edit_and_set = (function() {
var edit_and_set = null;
var edit_and_set__4 = (function (inode,edit,i,a){
var editable = inode.ensure_editable(edit);
(editable.arr[i] = a);

return editable;
});
var edit_and_set__6 = (function (inode,edit,i,a,j,b){
var editable = inode.ensure_editable(edit);
(editable.arr[i] = a);

(editable.arr[j] = b);

return editable;
});
edit_and_set = function(inode,edit,i,a,j,b){
switch(arguments.length){
case 4:
return edit_and_set__4.call(this,inode,edit,i,a);
case 6:
return edit_and_set__6.call(this,inode,edit,i,a,j,b);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
edit_and_set.cljs$core$IFn$_invoke$arity$4 = edit_and_set__4;
edit_and_set.cljs$core$IFn$_invoke$arity$6 = edit_and_set__6;
return edit_and_set;
})()
;
cljs.core.inode_kv_reduce = (function inode_kv_reduce(arr,f,init){
var len = arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var init__$2 = (function (){var k = (arr[i]);
if(!((k == null))){
var G__21593 = init__$1;
var G__21594 = k;
var G__21595 = (arr[(i + (1))]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__21593,G__21594,G__21595) : f.call(null,G__21593,G__21594,G__21595));
} else {
var node = (arr[(i + (1))]);
if(!((node == null))){
return node.kv_reduce(f,init__$1);
} else {
return init__$1;
}
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__21596 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__21596) : cljs.core.deref.call(null,G__21596));
} else {
var G__21597 = (i + (2));
var G__21598 = init__$2;
i = G__21597;
init__$1 = G__21598;
continue;
}
} else {
return init__$1;
}
break;
}
});

/**
* @constructor
*/
cljs.core.BitmapIndexedNode = (function (edit,bitmap,arr){
this.edit = edit;
this.bitmap = bitmap;
this.arr = arr;
})
cljs.core.BitmapIndexedNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
var n = cljs.core.bit_count(self__.bitmap);
var new_arr = (new Array((((n < (0)))?(4):((2) * (n + (1))))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * n));

return (new cljs.core.BitmapIndexedNode(e,self__.bitmap,new_arr));
}
});

cljs.core.BitmapIndexedNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return inode;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_without_BANG_(edit__$1,(shift + (5)),hash,key,removed_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
if(!((n == null))){
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),n);
} else {
if((self__.bitmap === bit)){
return null;
} else {
return inode.edit_and_remove_pair(edit__$1,bit,idx);

}
}
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
(removed_leaf_QMARK_[(0)] = true);

return inode.edit_and_remove_pair(edit__$1,bit,idx);
} else {
return inode;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.edit_and_remove_pair = (function (e,bit,i){
var self__ = this;
var inode = this;
if((self__.bitmap === bit)){
return null;
} else {
var editable = inode.ensure_editable(e);
var earr = editable.arr;
var len = earr.length;
editable.bitmap = (bit ^ editable.bitmap);

cljs.core.array_copy(earr,((2) * (i + (1))),earr,((2) * i),(len - ((2) * (i + (1)))));

(earr[(len - (2))] = null);

(earr[(len - (1))] = null);

return editable;
}
});

cljs.core.BitmapIndexedNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__21599 = self__.arr;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(G__21599) : cljs.core.create_inode_seq.call(null,G__21599));
});

cljs.core.BitmapIndexedNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
return cljs.core.inode_kv_reduce(self__.arr,f,init);
});

cljs.core.BitmapIndexedNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return not_found;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
return val_or_node.inode_lookup((shift + (5)),hash,key,not_found);
} else {
if(cljs.core.key_test(key,key_or_nil)){
return val_or_node;
} else {
return not_found;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
if(((self__.bitmap & bit) === (0))){
var n = cljs.core.bit_count(self__.bitmap);
if((((2) * n) < self__.arr.length)){
var editable = inode.ensure_editable(edit__$1);
var earr = editable.arr;
added_leaf_QMARK_.val = true;

cljs.core.array_copy_downward(earr,((2) * idx),earr,((2) * (idx + (1))),((2) * (n - idx)));

(earr[((2) * idx)] = key);

(earr[(((2) * idx) + (1))] = val);

editable.bitmap = (editable.bitmap | bit);

return editable;
} else {
if((n >= (16))){
var nodes = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var jdx = ((hash >>> shift) & 0x01f);
(nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_));

var i_21613 = (0);
var j_21614 = (0);
while(true){
if((i_21613 < (32))){
if((((self__.bitmap >>> i_21613) & (1)) === (0))){
var G__21615 = (i_21613 + (1));
var G__21616 = j_21614;
i_21613 = G__21615;
j_21614 = G__21616;
continue;
} else {
(nodes[i_21613] = ((!(((self__.arr[j_21614]) == null)))?cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),cljs.core.hash((self__.arr[j_21614])),(self__.arr[j_21614]),(self__.arr[(j_21614 + (1))]),added_leaf_QMARK_):(self__.arr[(j_21614 + (1))])));

var G__21617 = (i_21613 + (1));
var G__21618 = (j_21614 + (2));
i_21613 = G__21617;
j_21614 = G__21618;
continue;
}
} else {
}
break;
}

return (new cljs.core.ArrayNode(edit__$1,(n + (1)),nodes));
} else {
var new_arr = (new Array(((2) * (n + (4)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * idx));

(new_arr[((2) * idx)] = key);

(new_arr[(((2) * idx) + (1))] = val);

cljs.core.array_copy(self__.arr,((2) * idx),new_arr,((2) * (idx + (1))),((2) * (n - idx)));

added_leaf_QMARK_.val = true;

var editable = inode.ensure_editable(edit__$1);
editable.arr = new_arr;

editable.bitmap = (editable.bitmap | bit);

return editable;

}
}
} else {
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),n);
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
if((val === val_or_node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),val);
}
} else {
added_leaf_QMARK_.val = true;

return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode,edit__$1,((2) * idx),null,(((2) * idx) + (1)),(function (){var G__21600 = edit__$1;
var G__21601 = (shift + (5));
var G__21602 = key_or_nil;
var G__21603 = val_or_node;
var G__21604 = hash;
var G__21605 = key;
var G__21606 = val;
return (cljs.core.create_node.cljs$core$IFn$_invoke$arity$7 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$7(G__21600,G__21601,G__21602,G__21603,G__21604,G__21605,G__21606) : cljs.core.create_node.call(null,G__21600,G__21601,G__21602,G__21603,G__21604,G__21605,G__21606));
})());

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
if(((self__.bitmap & bit) === (0))){
var n = cljs.core.bit_count(self__.bitmap);
if((n >= (16))){
var nodes = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var jdx = ((hash >>> shift) & 0x01f);
(nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_));

var i_21619 = (0);
var j_21620 = (0);
while(true){
if((i_21619 < (32))){
if((((self__.bitmap >>> i_21619) & (1)) === (0))){
var G__21621 = (i_21619 + (1));
var G__21622 = j_21620;
i_21619 = G__21621;
j_21620 = G__21622;
continue;
} else {
(nodes[i_21619] = ((!(((self__.arr[j_21620]) == null)))?cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),cljs.core.hash((self__.arr[j_21620])),(self__.arr[j_21620]),(self__.arr[(j_21620 + (1))]),added_leaf_QMARK_):(self__.arr[(j_21620 + (1))])));

var G__21623 = (i_21619 + (1));
var G__21624 = (j_21620 + (2));
i_21619 = G__21623;
j_21620 = G__21624;
continue;
}
} else {
}
break;
}

return (new cljs.core.ArrayNode(null,(n + (1)),nodes));
} else {
var new_arr = (new Array(((2) * (n + (1)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * idx));

(new_arr[((2) * idx)] = key);

(new_arr[(((2) * idx) + (1))] = val);

cljs.core.array_copy(self__.arr,((2) * idx),new_arr,((2) * (idx + (1))),((2) * (n - idx)));

added_leaf_QMARK_.val = true;

return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap | bit),new_arr));
}
} else {
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),n)));
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
if((val === val_or_node)){
return inode;
} else {
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),val)));
}
} else {
added_leaf_QMARK_.val = true;

return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$5(self__.arr,((2) * idx),null,(((2) * idx) + (1)),(function (){var G__21607 = (shift + (5));
var G__21608 = key_or_nil;
var G__21609 = val_or_node;
var G__21610 = hash;
var G__21611 = key;
var G__21612 = val;
return (cljs.core.create_node.cljs$core$IFn$_invoke$arity$6 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$6(G__21607,G__21608,G__21609,G__21610,G__21611,G__21612) : cljs.core.create_node.call(null,G__21607,G__21608,G__21609,G__21610,G__21611,G__21612));
})())));

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return not_found;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
return val_or_node.inode_find((shift + (5)),hash,key,not_found);
} else {
if(cljs.core.key_test(key,key_or_nil)){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [key_or_nil,val_or_node], null);
} else {
return not_found;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return inode;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_without((shift + (5)),hash,key);
if((n === val_or_node)){
return inode;
} else {
if(!((n == null))){
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),n)));
} else {
if((self__.bitmap === bit)){
return null;
} else {
return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap ^ bit),cljs.core.remove_pair(self__.arr,idx)));

}
}
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap ^ bit),cljs.core.remove_pair(self__.arr,idx)));
} else {
return inode;

}
}
}
});

cljs.core.BitmapIndexedNode.cljs$lang$type = true;

cljs.core.BitmapIndexedNode.cljs$lang$ctorStr = "cljs.core/BitmapIndexedNode";

cljs.core.BitmapIndexedNode.cljs$lang$ctorPrWriter = (function (this__8091__auto__,writer__8092__auto__,opt__8093__auto__){
return cljs.core._write(writer__8092__auto__,"cljs.core/BitmapIndexedNode");
});

cljs.core.__GT_BitmapIndexedNode = (function __GT_BitmapIndexedNode(edit,bitmap,arr){
return (new cljs.core.BitmapIndexedNode(edit,bitmap,arr));
});

cljs.core.BitmapIndexedNode.EMPTY = (new cljs.core.BitmapIndexedNode(null,(0),[]));
cljs.core.pack_array_node = (function pack_array_node(array_node,edit,idx){
var arr = array_node.arr;
var len = arr.length;
var new_arr = (new Array(((2) * (array_node.cnt - (1)))));
var i = (0);
var j = (1);
var bitmap = (0);
while(true){
if((i < len)){
if((!((i === idx))) && (!(((arr[i]) == null)))){
(new_arr[j] = (arr[i]));

var G__21625 = (i + (1));
var G__21626 = (j + (2));
var G__21627 = (bitmap | ((1) << i));
i = G__21625;
j = G__21626;
bitmap = G__21627;
continue;
} else {
var G__21628 = (i + (1));
var G__21629 = j;
var G__21630 = bitmap;
i = G__21628;
j = G__21629;
bitmap = G__21630;
continue;
}
} else {
return (new cljs.core.BitmapIndexedNode(edit,bitmap,new_arr));
}
break;
}
});

/**
* @constructor
*/
cljs.core.ArrayNode = (function (edit,cnt,arr){
this.edit = edit;
this.cnt = cnt;
this.arr = arr;
})
cljs.core.ArrayNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
return (new cljs.core.ArrayNode(e,self__.cnt,cljs.core.aclone(self__.arr)));
}
});

cljs.core.ArrayNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
return inode;
} else {
var n = node.inode_without_BANG_(edit__$1,(shift + (5)),hash,key,removed_leaf_QMARK_);
if((n === node)){
return inode;
} else {
if((n == null)){
if((self__.cnt <= (8))){
return cljs.core.pack_array_node(inode,edit__$1,idx);
} else {
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);
editable.cnt = (editable.cnt - (1));

return editable;
}
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);

}
}
}
});

cljs.core.ArrayNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__21631 = self__.arr;
return (cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1(G__21631) : cljs.core.create_array_node_seq.call(null,G__21631));
});

cljs.core.ArrayNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
var len = self__.arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var node = (self__.arr[i]);
if(!((node == null))){
var init__$2 = node.kv_reduce(f,init__$1);
if(cljs.core.reduced_QMARK_(init__$2)){
var G__21632 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__21632) : cljs.core.deref.call(null,G__21632));
} else {
var G__21633 = (i + (1));
var G__21634 = init__$2;
i = G__21633;
init__$1 = G__21634;
continue;
}
} else {
var G__21635 = (i + (1));
var G__21636 = init__$1;
i = G__21635;
init__$1 = G__21636;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.ArrayNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
return node.inode_lookup((shift + (5)),hash,key,not_found);
} else {
return not_found;
}
});

cljs.core.ArrayNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_));
editable.cnt = (editable.cnt + (1));

return editable;
} else {
var n = node.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);
}
}
});

cljs.core.ArrayNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
return (new cljs.core.ArrayNode(null,(self__.cnt + (1)),cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_))));
} else {
var n = node.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === node)){
return inode;
} else {
return (new cljs.core.ArrayNode(null,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));
}
}
});

cljs.core.ArrayNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
return node.inode_find((shift + (5)),hash,key,not_found);
} else {
return not_found;
}
});

cljs.core.ArrayNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
var n = node.inode_without((shift + (5)),hash,key);
if((n === node)){
return inode;
} else {
if((n == null)){
if((self__.cnt <= (8))){
return cljs.core.pack_array_node(inode,null,idx);
} else {
return (new cljs.core.ArrayNode(null,(self__.cnt - (1)),cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));
}
} else {
return (new cljs.core.ArrayNode(null,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));

}
}
} else {
return inode;
}
});

cljs.core.ArrayNode.cljs$lang$type = true;

cljs.core.ArrayNode.cljs$lang$ctorStr = "cljs.core/ArrayNode";

cljs.core.ArrayNode.cljs$lang$ctorPrWriter = (function (this__8091__auto__,writer__8092__auto__,opt__8093__auto__){
return cljs.core._write(writer__8092__auto__,"cljs.core/ArrayNode");
});

cljs.core.__GT_ArrayNode = (function __GT_ArrayNode(edit,cnt,arr){
return (new cljs.core.ArrayNode(edit,cnt,arr));
});

cljs.core.hash_collision_node_find_index = (function hash_collision_node_find_index(arr,cnt,key){
var lim = ((2) * cnt);
var i = (0);
while(true){
if((i < lim)){
if(cljs.core.key_test(key,(arr[i]))){
return i;
} else {
var G__21637 = (i + (2));
i = G__21637;
continue;
}
} else {
return (-1);
}
break;
}
});

/**
* @constructor
*/
cljs.core.HashCollisionNode = (function (edit,collision_hash,cnt,arr){
this.edit = edit;
this.collision_hash = collision_hash;
this.cnt = cnt;
this.arr = arr;
})
cljs.core.HashCollisionNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
var new_arr = (new Array(((2) * (self__.cnt + (1)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * self__.cnt));

return (new cljs.core.HashCollisionNode(e,self__.collision_hash,self__.cnt,new_arr));
}
});

cljs.core.HashCollisionNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
return inode;
} else {
(removed_leaf_QMARK_[(0)] = true);

if((self__.cnt === (1))){
return null;
} else {
var editable = inode.ensure_editable(edit__$1);
var earr = editable.arr;
(earr[idx] = (earr[(((2) * self__.cnt) - (2))]));

(earr[(idx + (1))] = (earr[(((2) * self__.cnt) - (1))]));

(earr[(((2) * self__.cnt) - (1))] = null);

(earr[(((2) * self__.cnt) - (2))] = null);

editable.cnt = (editable.cnt - (1));

return editable;
}
}
});

cljs.core.HashCollisionNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__21638 = self__.arr;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(G__21638) : cljs.core.create_inode_seq.call(null,G__21638));
});

cljs.core.HashCollisionNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
return cljs.core.inode_kv_reduce(self__.arr,f,init);
});

cljs.core.HashCollisionNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx < (0))){
return not_found;
} else {
if(cljs.core.key_test(key,(self__.arr[idx]))){
return (self__.arr[(idx + (1))]);
} else {
return not_found;

}
}
});

cljs.core.HashCollisionNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
if((hash === self__.collision_hash)){
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
if((self__.arr.length > ((2) * self__.cnt))){
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode,edit__$1,((2) * self__.cnt),key,(((2) * self__.cnt) + (1)),val);
added_leaf_QMARK_.val = true;

editable.cnt = (editable.cnt + (1));

return editable;
} else {
var len = self__.arr.length;
var new_arr = (new Array((len + (2))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),len);

(new_arr[len] = key);

(new_arr[(len + (1))] = val);

added_leaf_QMARK_.val = true;

return inode.ensure_editable_array(edit__$1,(self__.cnt + (1)),new_arr);
}
} else {
if(((self__.arr[(idx + (1))]) === val)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(idx + (1)),val);
}
}
} else {
return (new cljs.core.BitmapIndexedNode(edit__$1,(1 << ((self__.collision_hash >>> shift) & 0x01f)),[null,inode,null,null])).inode_assoc_BANG_(edit__$1,shift,hash,key,val,added_leaf_QMARK_);
}
});

cljs.core.HashCollisionNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
if((hash === self__.collision_hash)){
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
var len = ((2) * self__.cnt);
var new_arr = (new Array((len + (2))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),len);

(new_arr[len] = key);

(new_arr[(len + (1))] = val);

added_leaf_QMARK_.val = true;

return (new cljs.core.HashCollisionNode(null,self__.collision_hash,(self__.cnt + (1)),new_arr));
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((self__.arr[idx]),val)){
return inode;
} else {
return (new cljs.core.HashCollisionNode(null,self__.collision_hash,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(idx + (1)),val)));
}
}
} else {
return (new cljs.core.BitmapIndexedNode(null,(1 << ((self__.collision_hash >>> shift) & 0x01f)),[null,inode])).inode_assoc(shift,hash,key,val,added_leaf_QMARK_);
}
});

cljs.core.HashCollisionNode.prototype.ensure_editable_array = (function (e,count,array){
var self__ = this;
var inode = this;
if((e === self__.edit)){
self__.arr = array;

self__.cnt = count;

return inode;
} else {
return (new cljs.core.HashCollisionNode(self__.edit,self__.collision_hash,count,array));
}
});

cljs.core.HashCollisionNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx < (0))){
return not_found;
} else {
if(cljs.core.key_test(key,(self__.arr[idx]))){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[idx]),(self__.arr[(idx + (1))])], null);
} else {
return not_found;

}
}
});

cljs.core.HashCollisionNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
return inode;
} else {
if((self__.cnt === (1))){
return null;
} else {
return (new cljs.core.HashCollisionNode(null,self__.collision_hash,(self__.cnt - (1)),cljs.core.remove_pair(self__.arr,cljs.core.quot(idx,(2)))));

}
}
});

cljs.core.HashCollisionNode.cljs$lang$type = true;

cljs.core.HashCollisionNode.cljs$lang$ctorStr = "cljs.core/HashCollisionNode";

cljs.core.HashCollisionNode.cljs$lang$ctorPrWriter = (function (this__8091__auto__,writer__8092__auto__,opt__8093__auto__){
return cljs.core._write(writer__8092__auto__,"cljs.core/HashCollisionNode");
});

cljs.core.__GT_HashCollisionNode = (function __GT_HashCollisionNode(edit,collision_hash,cnt,arr){
return (new cljs.core.HashCollisionNode(edit,collision_hash,cnt,arr));
});

cljs.core.create_node = (function() {
var create_node = null;
var create_node__6 = (function (shift,key1,val1,key2hash,key2,val2){
var key1hash = cljs.core.hash(key1);
if((key1hash === key2hash)){
return (new cljs.core.HashCollisionNode(null,key1hash,(2),[key1,val1,key2,val2]));
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift,key1hash,key1,val1,added_leaf_QMARK_).inode_assoc(shift,key2hash,key2,val2,added_leaf_QMARK_);
}
});
var create_node__7 = (function (edit,shift,key1,val1,key2hash,key2,val2){
var key1hash = cljs.core.hash(key1);
if((key1hash === key2hash)){
return (new cljs.core.HashCollisionNode(null,key1hash,(2),[key1,val1,key2,val2]));
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit,shift,key1hash,key1,val1,added_leaf_QMARK_).inode_assoc_BANG_(edit,shift,key2hash,key2,val2,added_leaf_QMARK_);
}
});
create_node = function(edit,shift,key1,val1,key2hash,key2,val2){
switch(arguments.length){
case 6:
return create_node__6.call(this,edit,shift,key1,val1,key2hash,key2);
case 7:
return create_node__7.call(this,edit,shift,key1,val1,key2hash,key2,val2);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
create_node.cljs$core$IFn$_invoke$arity$6 = create_node__6;
create_node.cljs$core$IFn$_invoke$arity$7 = create_node__7;
return create_node;
})()
;

/**
* @constructor
*/
cljs.core.NodeSeq = (function (meta,nodes,i,s,__hash){
this.meta = meta;
this.nodes = nodes;
this.i = i;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374860;
})
cljs.core.NodeSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.NodeSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.NodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.NodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__7925__auto__ = self__.__hash;
if(!((h__7925__auto__ == null))){
return h__7925__auto__;
} else {
var h__7925__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__7925__auto____$1;

return h__7925__auto____$1;
}
});

cljs.core.NodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.NodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.s == null)){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.nodes[self__.i]),(self__.nodes[(self__.i + (1))])], null);
} else {
return cljs.core.first(self__.s);
}
});

cljs.core.NodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.s == null)){
var G__21639 = self__.nodes;
var G__21640 = (self__.i + (2));
var G__21641 = null;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__21639,G__21640,G__21641) : cljs.core.create_inode_seq.call(null,G__21639,G__21640,G__21641));
} else {
var G__21642 = self__.nodes;
var G__21643 = self__.i;
var G__21644 = cljs.core.next(self__.s);
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__21642,G__21643,G__21644) : cljs.core.create_inode_seq.call(null,G__21642,G__21643,G__21644));
}
});

cljs.core.NodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.NodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.NodeSeq(meta__$1,self__.nodes,self__.i,self__.s,self__.__hash));
});

cljs.core.NodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.NodeSeq.cljs$lang$type = true;

cljs.core.NodeSeq.cljs$lang$ctorStr = "cljs.core/NodeSeq";

cljs.core.NodeSeq.cljs$lang$ctorPrWriter = (function (this__8091__auto__,writer__8092__auto__,opt__8093__auto__){
return cljs.core._write(writer__8092__auto__,"cljs.core/NodeSeq");
});

cljs.core.__GT_NodeSeq = (function __GT_NodeSeq(meta,nodes,i,s,__hash){
return (new cljs.core.NodeSeq(meta,nodes,i,s,__hash));
});

(cljs.core.NodeSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__8482__auto__ = this;
return cljs.core.es6_iterator(this__8482__auto__);
}));
cljs.core.create_inode_seq = (function() {
var create_inode_seq = null;
var create_inode_seq__1 = (function (nodes){
return create_inode_seq.cljs$core$IFn$_invoke$arity$3(nodes,(0),null);
});
var create_inode_seq__3 = (function (nodes,i,s){
if((s == null)){
var len = nodes.length;
var j = i;
while(true){
if((j < len)){
if(!(((nodes[j]) == null))){
return (new cljs.core.NodeSeq(null,nodes,j,null,null));
} else {
var temp__4124__auto__ = (nodes[(j + (1))]);
if(cljs.core.truth_(temp__4124__auto__)){
var node = temp__4124__auto__;
var temp__4124__auto____$1 = node.inode_seq();
if(cljs.core.truth_(temp__4124__auto____$1)){
var node_seq = temp__4124__auto____$1;
return (new cljs.core.NodeSeq(null,nodes,(j + (2)),node_seq,null));
} else {
var G__21648 = (j + (2));
j = G__21648;
continue;
}
} else {
var G__21649 = (j + (2));
j = G__21649;
continue;
}
}
} else {
return null;
}
break;
}
} else {
return (new cljs.core.NodeSeq(null,nodes,i,s,null));
}
});
create_inode_seq = function(nodes,i,s){
switch(arguments.length){
case 1:
return create_inode_seq__1.call(this,nodes);
case 3:
return create_inode_seq__3.call(this,nodes,i,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
create_inode_seq.cljs$core$IFn$_invoke$arity$1 = create_inode_seq__1;
create_inode_seq.cljs$core$IFn$_invoke$arity$3 = create_inode_seq__3;
return create_inode_seq;
})()
;

/**
* @constructor
*/
cljs.core.ArrayNodeSeq = (function (meta,nodes,i,s,__hash){
this.meta = meta;
this.nodes = nodes;
this.i = i;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374860;
})
cljs.core.ArrayNodeSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ArrayNodeSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__7925__auto__ = self__.__hash;
if(!((h__7925__auto__ == null))){
return h__7925__auto__;
} else {
var h__7925__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__7925__auto____$1;

return h__7925__auto____$1;
}
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.s);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var G__21650 = null;
var G__21651 = self__.nodes;
var G__21652 = self__.i;
var G__21653 = cljs.core.next(self__.s);
return (cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4(G__21650,G__21651,G__21652,G__21653) : cljs.core.create_array_node_seq.call(null,G__21650,G__21651,G__21652,G__21653));
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ArrayNodeSeq(meta__$1,self__.nodes,self__.i,self__.s,self__.__hash));
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ArrayNodeSeq.cljs$lang$type = true;

cljs.core.ArrayNodeSeq.cljs$lang$ctorStr = "cljs.core/ArrayNodeSeq";

cljs.core.ArrayNodeSeq.cljs$lang$ctorPrWriter = (function (this__8091__auto__,writer__8092__auto__,opt__8093__auto__){
return cljs.core._write(writer__8092__auto__,"cljs.core/ArrayNodeSeq");
});

cljs.core.__GT_ArrayNodeSeq = (function __GT_ArrayNodeSeq(meta,nodes,i,s,__hash){
return (new cljs.core.ArrayNodeSeq(meta,nodes,i,s,__hash));
});

(cljs.core.ArrayNodeSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__8482__auto__ = this;
return cljs.core.es6_iterator(this__8482__auto__);
}));
cljs.core.create_array_node_seq = (function() {
var create_array_node_seq = null;
var create_array_node_seq__1 = (function (nodes){
return create_array_node_seq.cljs$core$IFn$_invoke$arity$4(null,nodes,(0),null);
});
var create_array_node_seq__4 = (function (meta,nodes,i,s){
if((s == null)){
var len = nodes.length;
var j = i;
while(true){
if((j < len)){
var temp__4124__auto__ = (nodes[j]);
if(cljs.core.truth_(temp__4124__auto__)){
var nj = temp__4124__auto__;
var temp__4124__auto____$1 = nj.inode_seq();
if(cljs.core.truth_(temp__4124__auto____$1)){
var ns = temp__4124__auto____$1;
return (new cljs.core.ArrayNodeSeq(meta,nodes,(j + (1)),ns,null));
} else {
var G__21658 = (j + (1));
j = G__21658;
continue;
}
} else {
var G__21659 = (j + (1));
j = G__21659;
continue;
}
} else {
return null;
}
break;
}
} else {
return (new cljs.core.ArrayNodeSeq(meta,nodes,i,s,null));
}
});
create_array_node_seq = function(meta,nodes,i,s){
switch(arguments.length){
case 1:
return create_array_node_seq__1.call(this,meta);
case 4:
return create_array_node_seq__4.call(this,meta,nodes,i,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
create_array_node_seq.cljs$core$IFn$_invoke$arity$1 = create_array_node_seq__1;
create_array_node_seq.cljs$core$IFn$_invoke$arity$4 = create_array_node_seq__4;
return create_array_node_seq;
})()
;

/**
* @constructor
*/
cljs.core.PersistentHashMap = (function (meta,cnt,root,has_nil_QMARK_,nil_val,__hash){
this.meta = meta;
this.cnt = cnt;
this.root = root;
this.has_nil_QMARK_ = has_nil_QMARK_;
this.nil_val = nil_val;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16123663;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentHashMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentHashMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentHashMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__21661 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__21661) : cljs.core.keys.call(null,G__21661));
})());
});

cljs.core.PersistentHashMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__21662 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__21662) : cljs.core.vals.call(null,G__21662));
})());
});

cljs.core.PersistentHashMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentHashMap.prototype.get = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentHashMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__21663 = cljs.core.seq(coll);
var chunk__21664 = null;
var count__21665 = (0);
var i__21666 = (0);
while(true){
if((i__21666 < count__21665)){
var vec__21667 = chunk__21664.cljs$core$IIndexed$_nth$arity$2(null,i__21666);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21667,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21667,(1),null);
var G__21668_21679 = v;
var G__21669_21680 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__21668_21679,G__21669_21680) : f.call(null,G__21668_21679,G__21669_21680));

var G__21681 = seq__21663;
var G__21682 = chunk__21664;
var G__21683 = count__21665;
var G__21684 = (i__21666 + (1));
seq__21663 = G__21681;
chunk__21664 = G__21682;
count__21665 = G__21683;
i__21666 = G__21684;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__21663);
if(temp__4126__auto__){
var seq__21663__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__21663__$1)){
var c__8291__auto__ = cljs.core.chunk_first(seq__21663__$1);
var G__21685 = cljs.core.chunk_rest(seq__21663__$1);
var G__21686 = c__8291__auto__;
var G__21687 = cljs.core.count(c__8291__auto__);
var G__21688 = (0);
seq__21663 = G__21685;
chunk__21664 = G__21686;
count__21665 = G__21687;
i__21666 = G__21688;
continue;
} else {
var vec__21670 = cljs.core.first(seq__21663__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21670,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21670,(1),null);
var G__21671_21689 = v;
var G__21672_21690 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__21671_21689,G__21672_21690) : f.call(null,G__21671_21689,G__21672_21690));

var G__21691 = cljs.core.next(seq__21663__$1);
var G__21692 = null;
var G__21693 = (0);
var G__21694 = (0);
seq__21663 = G__21691;
chunk__21664 = G__21692;
count__21665 = G__21693;
i__21666 = G__21694;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return not_found;
}
} else {
if((self__.root == null)){
return not_found;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k,not_found);

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var init__$1 = ((self__.has_nil_QMARK_)?(function (){var G__21673 = init;
var G__21674 = null;
var G__21675 = self__.nil_val;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__21673,G__21674,G__21675) : f.call(null,G__21673,G__21674,G__21675));
})():init);
if(cljs.core.reduced_QMARK_(init__$1)){
var G__21676 = init__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__21676) : cljs.core.deref.call(null,G__21676));
} else {
if(!((self__.root == null))){
return self__.root.kv_reduce(f,init__$1);
} else {
return init__$1;

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentHashMap(self__.meta,self__.cnt,self__.root,self__.has_nil_QMARK_,self__.nil_val,self__.__hash));
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentHashMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__7925__auto__ = self__.__hash;
if(!((h__7925__auto__ == null))){
return h__7925__auto__;
} else {
var h__7925__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__7925__auto____$1;

return h__7925__auto____$1;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientHashMap((function (){var obj21678 = {};
return obj21678;
})(),self__.root,self__.cnt,self__.has_nil_QMARK_,self__.nil_val));
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.PersistentHashMap.EMPTY,self__.meta);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return (new cljs.core.PersistentHashMap(self__.meta,(self__.cnt - (1)),self__.root,false,null,null));
} else {
return coll__$1;
}
} else {
if((self__.root == null)){
return coll__$1;
} else {
var new_root = self__.root.inode_without((0),cljs.core.hash(k),k);
if((new_root === self__.root)){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,(self__.cnt - (1)),new_root,self__.has_nil_QMARK_,self__.nil_val,null));
}

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if((self__.has_nil_QMARK_) && ((v === self__.nil_val))){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,((self__.has_nil_QMARK_)?self__.cnt:(self__.cnt + (1))),self__.root,true,v,null));
}
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
var new_root = (((self__.root == null))?cljs.core.BitmapIndexedNode.EMPTY:self__.root).inode_assoc((0),cljs.core.hash(k),k,v,added_leaf_QMARK_);
if((new_root === self__.root)){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,((added_leaf_QMARK_.val)?(self__.cnt + (1)):self__.cnt),new_root,self__.has_nil_QMARK_,self__.nil_val,null));
}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if((k == null)){
return self__.has_nil_QMARK_;
} else {
if((self__.root == null)){
return false;
} else {
return !((self__.root.inode_lookup((0),cljs.core.hash(k),k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel));

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
var s = ((!((self__.root == null)))?self__.root.inode_seq():null);
if(self__.has_nil_QMARK_){
return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null,self__.nil_val], null),s);
} else {
return s;
}
} else {
return null;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashMap(meta__$1,self__.cnt,self__.root,self__.has_nil_QMARK_,self__.nil_val,self__.__hash));
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__21695 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__21696 = cljs.core.next(es);
ret = G__21695;
es = G__21696;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentHashMap.prototype.call = (function() {
var G__21697 = null;
var G__21697__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__21697__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__21697 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__21697__2.call(this,self__,k);
case 3:
return G__21697__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__21697.cljs$core$IFn$_invoke$arity$2 = G__21697__2;
G__21697.cljs$core$IFn$_invoke$arity$3 = G__21697__3;
return G__21697;
})()
;

cljs.core.PersistentHashMap.prototype.apply = (function (self__,args21660){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args21660)));
});

cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentHashMap.cljs$lang$type = true;

cljs.core.PersistentHashMap.cljs$lang$ctorStr = "cljs.core/PersistentHashMap";

cljs.core.PersistentHashMap.cljs$lang$ctorPrWriter = (function (this__8091__auto__,writer__8092__auto__,opt__8093__auto__){
return cljs.core._write(writer__8092__auto__,"cljs.core/PersistentHashMap");
});

cljs.core.__GT_PersistentHashMap = (function __GT_PersistentHashMap(meta,cnt,root,has_nil_QMARK_,nil_val,__hash){
return (new cljs.core.PersistentHashMap(meta,cnt,root,has_nil_QMARK_,nil_val,__hash));
});

cljs.core.PersistentHashMap.EMPTY = (new cljs.core.PersistentHashMap(null,(0),null,false,null,cljs.core.empty_unordered_hash));
cljs.core.PersistentHashMap.fromArray = (function (arr,no_clone){
var arr__$1 = ((no_clone)?arr:cljs.core.aclone(arr));
var len = arr__$1.length;
var i = (0);
var ret = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if((i < len)){
var G__21698 = (i + (2));
var G__21699 = cljs.core._assoc_BANG_(ret,(arr__$1[i]),(arr__$1[(i + (1))]));
i = G__21698;
ret = G__21699;
continue;
} else {
return cljs.core._persistent_BANG_(ret);
}
break;
}
});
cljs.core.PersistentHashMap.fromArrays = (function (ks,vs){
var len = ks.length;
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if((i < len)){
var G__21700 = (i + (1));
var G__21701 = out.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(null,(ks[i]),(vs[i]));
i = G__21700;
out = G__21701;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
});
(cljs.core.PersistentHashMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__8482__auto__ = this;
return cljs.core.es6_iterator(this__8482__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientHashMap = (function (edit,root,count,has_nil_QMARK_,nil_val){
this.edit = edit;
this.root = root;
this.count = count;
this.has_nil_QMARK_ = has_nil_QMARK_;
this.nil_val = nil_val;
this.cljs$lang$protocol_mask$partition1$ = 56;
this.cljs$lang$protocol_mask$partition0$ = 258;
})
cljs.core.TransientHashMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = (function (tcoll,key){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.without_BANG_(key);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.assoc_BANG_(key,val);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,val){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.conj_BANG_(val);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.persistent_BANG_();
});

cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,k){
var self__ = this;
var tcoll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return null;
}
} else {
if((self__.root == null)){
return null;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k);
}
}
});

cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,k,not_found){
var self__ = this;
var tcoll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return not_found;
}
} else {
if((self__.root == null)){
return not_found;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k,not_found);
}
}
});

cljs.core.TransientHashMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(self__.edit){
return self__.count;
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.conj_BANG_ = (function (o){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((function (){var G__21702 = o;
if(G__21702){
var bit__8185__auto__ = (G__21702.cljs$lang$protocol_mask$partition0$ & (2048));
if((bit__8185__auto__) || (G__21702.cljs$core$IMapEntry$)){
return true;
} else {
if((!G__21702.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__21702);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__21702);
}
})()){
return tcoll.assoc_BANG_((function (){var G__21703 = o;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__21703) : cljs.core.key.call(null,G__21703));
})(),(function (){var G__21704 = o;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__21704) : cljs.core.val.call(null,G__21704));
})());
} else {
var es = cljs.core.seq(o);
var tcoll__$1 = tcoll;
while(true){
var temp__4124__auto__ = cljs.core.first(es);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
var G__21707 = cljs.core.next(es);
var G__21708 = tcoll__$1.assoc_BANG_((function (){var G__21705 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__21705) : cljs.core.key.call(null,G__21705));
})(),(function (){var G__21706 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__21706) : cljs.core.val.call(null,G__21706));
})());
es = G__21707;
tcoll__$1 = G__21708;
continue;
} else {
return tcoll__$1;
}
break;
}
}
} else {
throw (new Error("conj! after persistent"));
}
});

cljs.core.TransientHashMap.prototype.assoc_BANG_ = (function (k,v){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((k == null)){
if((self__.nil_val === v)){
} else {
self__.nil_val = v;
}

if(self__.has_nil_QMARK_){
} else {
self__.count = (self__.count + (1));

self__.has_nil_QMARK_ = true;
}

return tcoll;
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
var node = (((self__.root == null))?cljs.core.BitmapIndexedNode.EMPTY:self__.root).inode_assoc_BANG_(self__.edit,(0),cljs.core.hash(k),k,v,added_leaf_QMARK_);
if((node === self__.root)){
} else {
self__.root = node;
}

if(added_leaf_QMARK_.val){
self__.count = (self__.count + (1));
} else {
}

return tcoll;
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.without_BANG_ = (function (k){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((k == null)){
if(self__.has_nil_QMARK_){
self__.has_nil_QMARK_ = false;

self__.nil_val = null;

self__.count = (self__.count - (1));

return tcoll;
} else {
return tcoll;
}
} else {
if((self__.root == null)){
return tcoll;
} else {
var removed_leaf_QMARK_ = (new cljs.core.Box(false));
var node = self__.root.inode_without_BANG_(self__.edit,(0),cljs.core.hash(k),k,removed_leaf_QMARK_);
if((node === self__.root)){
} else {
self__.root = node;
}

if(cljs.core.truth_((removed_leaf_QMARK_[(0)]))){
self__.count = (self__.count - (1));
} else {
}

return tcoll;
}
}
} else {
throw (new Error("dissoc! after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.persistent_BANG_ = (function (){
var self__ = this;
var tcoll = this;
if(self__.edit){
self__.edit = null;

return (new cljs.core.PersistentHashMap(null,self__.count,self__.root,self__.has_nil_QMARK_,self__.nil_val,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientHashMap.cljs$lang$type = true;

cljs.core.TransientHashMap.cljs$lang$ctorStr = "cljs.core/TransientHashMap";

cljs.core.TransientHashMap.cljs$lang$ctorPrWriter = (function (this__8091__auto__,writer__8092__auto__,opt__8093__auto__){
return cljs.core._write(writer__8092__auto__,"cljs.core/TransientHashMap");
});

cljs.core.__GT_TransientHashMap = (function __GT_TransientHashMap(edit,root,count,has_nil_QMARK_,nil_val){
return (new cljs.core.TransientHashMap(edit,root,count,has_nil_QMARK_,nil_val));
});

cljs.core.tree_map_seq_push = (function tree_map_seq_push(node,stack,ascending_QMARK_){
var t = node;
var stack__$1 = stack;
while(true){
if(!((t == null))){
var G__21709 = ((ascending_QMARK_)?t.left:t.right);
var G__21710 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack__$1,t);
t = G__21709;
stack__$1 = G__21710;
continue;
} else {
return stack__$1;
}
break;
}
});

/**
* @constructor
*/
cljs.core.PersistentTreeMapSeq = (function (meta,stack,ascending_QMARK_,cnt,__hash){
this.meta = meta;
this.stack = stack;
this.ascending_QMARK_ = ascending_QMARK_;
this.cnt = cnt;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374862;
})
cljs.core.PersistentTreeMapSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeMapSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt < (0))){
return (cljs.core.count(cljs.core.next(coll__$1)) + (1));
} else {
return self__.cnt;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__7925__auto__ = self__.__hash;
if(!((h__7925__auto__ == null))){
return h__7925__auto__;
} else {
var h__7925__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__7925__auto____$1;

return h__7925__auto____$1;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.peek(self__.stack);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var t = cljs.core.first(self__.stack);
var next_stack = cljs.core.tree_map_seq_push(((self__.ascending_QMARK_)?t.right:t.left),cljs.core.next(self__.stack),self__.ascending_QMARK_);
if(!((next_stack == null))){
return (new cljs.core.PersistentTreeMapSeq(null,next_stack,self__.ascending_QMARK_,(self__.cnt - (1)),null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMapSeq(meta__$1,self__.stack,self__.ascending_QMARK_,self__.cnt,self__.__hash));
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentTreeMapSeq.cljs$lang$type = true;

cljs.core.PersistentTreeMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentTreeMapSeq";

cljs.core.PersistentTreeMapSeq.cljs$lang$ctorPrWriter = (function (this__8091__auto__,writer__8092__auto__,opt__8093__auto__){
return cljs.core._write(writer__8092__auto__,"cljs.core/PersistentTreeMapSeq");
});

cljs.core.__GT_PersistentTreeMapSeq = (function __GT_PersistentTreeMapSeq(meta,stack,ascending_QMARK_,cnt,__hash){
return (new cljs.core.PersistentTreeMapSeq(meta,stack,ascending_QMARK_,cnt,__hash));
});

(cljs.core.PersistentTreeMapSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__8482__auto__ = this;
return cljs.core.es6_iterator(this__8482__auto__);
}));
cljs.core.create_tree_map_seq = (function create_tree_map_seq(tree,ascending_QMARK_,cnt){
return (new cljs.core.PersistentTreeMapSeq(null,cljs.core.tree_map_seq_push(tree,null,ascending_QMARK_),ascending_QMARK_,cnt,null));
});

cljs.core.balance_left = (function balance_left(key,val,ins,right){
if((ins instanceof cljs.core.RedNode)){
if((ins.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.key,ins.val,ins.left.blacken(),(new cljs.core.BlackNode(key,val,ins.right,right,null)),null));
} else {
if((ins.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.right.key,ins.right.val,(new cljs.core.BlackNode(ins.key,ins.val,ins.left,ins.right.left,null)),(new cljs.core.BlackNode(key,val,ins.right.right,right,null)),null));
} else {
return (new cljs.core.BlackNode(key,val,ins,right,null));

}
}
} else {
return (new cljs.core.BlackNode(key,val,ins,right,null));
}
});
cljs.core.balance_right = (function balance_right(key,val,left,ins){
if((ins instanceof cljs.core.RedNode)){
if((ins.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.key,ins.val,(new cljs.core.BlackNode(key,val,left,ins.left,null)),ins.right.blacken(),null));
} else {
if((ins.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.left.key,ins.left.val,(new cljs.core.BlackNode(key,val,left,ins.left.left,null)),(new cljs.core.BlackNode(ins.key,ins.val,ins.left.right,ins.right,null)),null));
} else {
return (new cljs.core.BlackNode(key,val,left,ins,null));

}
}
} else {
return (new cljs.core.BlackNode(key,val,left,ins,null));
}
});
cljs.core.balance_left_del = (function balance_left_del(key,val,del,right){
if((del instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(key,val,del.blacken(),right,null));
} else {
if((right instanceof cljs.core.BlackNode)){
return cljs.core.balance_right(key,val,del,right.redden());
} else {
if(((right instanceof cljs.core.RedNode)) && ((right.left instanceof cljs.core.BlackNode))){
return (new cljs.core.RedNode(right.left.key,right.left.val,(new cljs.core.BlackNode(key,val,del,right.left.left,null)),cljs.core.balance_right(right.key,right.val,right.left.right,right.right.redden()),null));
} else {
throw (new Error("red-black tree invariant violation"));

}
}
}
});
cljs.core.balance_right_del = (function balance_right_del(key,val,left,del){
if((del instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(key,val,left,del.blacken(),null));
} else {
if((left instanceof cljs.core.BlackNode)){
return cljs.core.balance_left(key,val,left.redden(),del);
} else {
if(((left instanceof cljs.core.RedNode)) && ((left.right instanceof cljs.core.BlackNode))){
return (new cljs.core.RedNode(left.right.key,left.right.val,cljs.core.balance_left(left.key,left.val,left.left.redden(),left.right.left),(new cljs.core.BlackNode(key,val,left.right.right,del,null)),null));
} else {
throw (new Error("red-black tree invariant violation"));

}
}
}
});
cljs.core.tree_map_kv_reduce = (function tree_map_kv_reduce(node,f,init){
var init__$1 = ((!((node.left == null)))?tree_map_kv_reduce(node.left,f,init):init);
if(cljs.core.reduced_QMARK_(init__$1)){
var G__21723 = init__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__21723) : cljs.core.deref.call(null,G__21723));
} else {
var init__$2 = (function (){var G__21724 = init__$1;
var G__21725 = node.key;
var G__21726 = node.val;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__21724,G__21725,G__21726) : f.call(null,G__21724,G__21725,G__21726));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__21727 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__21727) : cljs.core.deref.call(null,G__21727));
} else {
var init__$3 = ((!((node.right == null)))?tree_map_kv_reduce(node.right,f,init__$2):init__$2);
if(cljs.core.reduced_QMARK_(init__$3)){
var G__21728 = init__$3;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__21728) : cljs.core.deref.call(null,G__21728));
} else {
return init__$3;
}
}
}
});

/**
* @constructor
*/
cljs.core.BlackNode = (function (key,val,left,right,__hash){
this.key = key;
this.val = val;
this.left = left;
this.right = right;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32402207;
})
cljs.core.BlackNode.prototype.add_right = (function (ins){
var self__ = this;
var node = this;
return ins.balance_right(node);
});

cljs.core.BlackNode.prototype.redden = (function (){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,self__.right,null));
});

cljs.core.BlackNode.prototype.blacken = (function (){
var self__ = this;
var node = this;
return node;
});

cljs.core.BlackNode.prototype.add_left = (function (ins){
var self__ = this;
var node = this;
return ins.balance_left(node);
});

cljs.core.BlackNode.prototype.replace = (function (key__$1,val__$1,left__$1,right__$1){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(key__$1,val__$1,left__$1,right__$1,null));
});

cljs.core.BlackNode.prototype.balance_left = (function (parent){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(parent.key,parent.val,node,parent.right,null));
});

cljs.core.BlackNode.prototype.balance_right = (function (parent){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(parent.key,parent.val,parent.left,node,null));
});

cljs.core.BlackNode.prototype.remove_left = (function (del){
var self__ = this;
var node = this;
return cljs.core.balance_left_del(self__.key,self__.val,del,self__.right);
});

cljs.core.BlackNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var node = this;
return cljs.core.tree_map_kv_reduce(node,f,init);
});

cljs.core.BlackNode.prototype.remove_right = (function (del){
var self__ = this;
var node = this;
return cljs.core.balance_right_del(self__.key,self__.val,self__.left,del);
});

cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (node,k){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,null);
});

cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (node,k,not_found){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,not_found);
});

cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (node,n){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return null;

}
}
});

cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (node,n,not_found){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return not_found;

}
}
});

cljs.core.BlackNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (node,n,v){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null).cljs$core$IVector$_assoc_n$arity$3(null,n,v);
});

cljs.core.BlackNode.prototype.cljs$core$IMeta$_meta$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return null;
});

cljs.core.BlackNode.prototype.cljs$core$ICounted$_count$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return (2);
});

cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.key;
});

cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.BlackNode.prototype.cljs$core$IStack$_peek$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.BlackNode.prototype.cljs$core$IStack$_pop$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
});

cljs.core.BlackNode.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__7925__auto__ = self__.__hash;
if(!((h__7925__auto__ == null))){
return h__7925__auto__;
} else {
var h__7925__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__7925__auto____$1;

return h__7925__auto____$1;
}
});

cljs.core.BlackNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.BlackNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core.PersistentVector.EMPTY;
});

cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (node,f){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1,f);
});

cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (node,f,start){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1,f,start);
});

cljs.core.BlackNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (node,k,v){
var self__ = this;
var node__$1 = this;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),k,v);
});

cljs.core.BlackNode.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY,self__.val),self__.key);
});

cljs.core.BlackNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (node,meta){
var self__ = this;
var node__$1 = this;
return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),meta);
});

cljs.core.BlackNode.prototype.cljs$core$ICollection$_conj$arity$2 = (function (node,o){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val,o], null);
});

cljs.core.BlackNode.prototype.call = (function() {
var G__21730 = null;
var G__21730__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__21730__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__21730 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__21730__2.call(this,self__,k);
case 3:
return G__21730__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__21730.cljs$core$IFn$_invoke$arity$2 = G__21730__2;
G__21730.cljs$core$IFn$_invoke$arity$3 = G__21730__3;
return G__21730;
})()
;

cljs.core.BlackNode.prototype.apply = (function (self__,args21729){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args21729)));
});

cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.BlackNode.cljs$lang$type = true;

cljs.core.BlackNode.cljs$lang$ctorStr = "cljs.core/BlackNode";

cljs.core.BlackNode.cljs$lang$ctorPrWriter = (function (this__8091__auto__,writer__8092__auto__,opt__8093__auto__){
return cljs.core._write(writer__8092__auto__,"cljs.core/BlackNode");
});

cljs.core.__GT_BlackNode = (function __GT_BlackNode(key,val,left,right,__hash){
return (new cljs.core.BlackNode(key,val,left,right,__hash));
});

(cljs.core.BlackNode.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__8482__auto__ = this;
return cljs.core.es6_iterator(this__8482__auto__);
}));

/**
* @constructor
*/
cljs.core.RedNode = (function (key,val,left,right,__hash){
this.key = key;
this.val = val;
this.left = left;
this.right = right;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32402207;
})
cljs.core.RedNode.prototype.add_right = (function (ins){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,ins,null));
});

cljs.core.RedNode.prototype.redden = (function (){
var self__ = this;
var node = this;
throw (new Error("red-black tree invariant violation"));
});

cljs.core.RedNode.prototype.blacken = (function (){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(self__.key,self__.val,self__.left,self__.right,null));
});

cljs.core.RedNode.prototype.add_left = (function (ins){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,ins,self__.right,null));
});

cljs.core.RedNode.prototype.replace = (function (key__$1,val__$1,left__$1,right__$1){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(key__$1,val__$1,left__$1,right__$1,null));
});

cljs.core.RedNode.prototype.balance_left = (function (parent){
var self__ = this;
var node = this;
if((self__.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.key,self__.val,self__.left.blacken(),(new cljs.core.BlackNode(parent.key,parent.val,self__.right,parent.right,null)),null));
} else {
if((self__.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.right.key,self__.right.val,(new cljs.core.BlackNode(self__.key,self__.val,self__.left,self__.right.left,null)),(new cljs.core.BlackNode(parent.key,parent.val,self__.right.right,parent.right,null)),null));
} else {
return (new cljs.core.BlackNode(parent.key,parent.val,node,parent.right,null));

}
}
});

cljs.core.RedNode.prototype.balance_right = (function (parent){
var self__ = this;
var node = this;
if((self__.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.key,self__.val,(new cljs.core.BlackNode(parent.key,parent.val,parent.left,self__.left,null)),self__.right.blacken(),null));
} else {
if((self__.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.left.key,self__.left.val,(new cljs.core.BlackNode(parent.key,parent.val,parent.left,self__.left.left,null)),(new cljs.core.BlackNode(self__.key,self__.val,self__.left.right,self__.right,null)),null));
} else {
return (new cljs.core.BlackNode(parent.key,parent.val,parent.left,node,null));

}
}
});

cljs.core.RedNode.prototype.remove_left = (function (del){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,del,self__.right,null));
});

cljs.core.RedNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var node = this;
return cljs.core.tree_map_kv_reduce(node,f,init);
});

cljs.core.RedNode.prototype.remove_right = (function (del){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,del,null));
});

cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (node,k){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,null);
});

cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (node,k,not_found){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,not_found);
});

cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (node,n){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return null;

}
}
});

cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (node,n,not_found){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return not_found;

}
}
});

cljs.core.RedNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (node,n,v){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null).cljs$core$IVector$_assoc_n$arity$3(null,n,v);
});

cljs.core.RedNode.prototype.cljs$core$IMeta$_meta$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return null;
});

cljs.core.RedNode.prototype.cljs$core$ICounted$_count$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return (2);
});

cljs.core.RedNode.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.key;
});

cljs.core.RedNode.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.RedNode.prototype.cljs$core$IStack$_peek$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.RedNode.prototype.cljs$core$IStack$_pop$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
});

cljs.core.RedNode.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__7925__auto__ = self__.__hash;
if(!((h__7925__auto__ == null))){
return h__7925__auto__;
} else {
var h__7925__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__7925__auto____$1;

return h__7925__auto____$1;
}
});

cljs.core.RedNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.RedNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core.PersistentVector.EMPTY;
});

cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (node,f){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1,f);
});

cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (node,f,start){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1,f,start);
});

cljs.core.RedNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (node,k,v){
var self__ = this;
var node__$1 = this;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),k,v);
});

cljs.core.RedNode.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY,self__.val),self__.key);
});

cljs.core.RedNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (node,meta){
var self__ = this;
var node__$1 = this;
return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),meta);
});

cljs.core.RedNode.prototype.cljs$core$ICollection$_conj$arity$2 = (function (node,o){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val,o], null);
});

cljs.core.RedNode.prototype.call = (function() {
var G__21732 = null;
var G__21732__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__21732__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__21732 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__21732__2.call(this,self__,k);
case 3:
return G__21732__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__21732.cljs$core$IFn$_invoke$arity$2 = G__21732__2;
G__21732.cljs$core$IFn$_invoke$arity$3 = G__21732__3;
return G__21732;
})()
;

cljs.core.RedNode.prototype.apply = (function (self__,args21731){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args21731)));
});

cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.RedNode.cljs$lang$type = true;

cljs.core.RedNode.cljs$lang$ctorStr = "cljs.core/RedNode";

cljs.core.RedNode.cljs$lang$ctorPrWriter = (function (this__8091__auto__,writer__8092__auto__,opt__8093__auto__){
return cljs.core._write(writer__8092__auto__,"cljs.core/RedNode");
});

cljs.core.__GT_RedNode = (function __GT_RedNode(key,val,left,right,__hash){
return (new cljs.core.RedNode(key,val,left,right,__hash));
});

(cljs.core.RedNode.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__8482__auto__ = this;
return cljs.core.es6_iterator(this__8482__auto__);
}));
cljs.core.tree_map_add = (function tree_map_add(comp,tree,k,v,found){
if((tree == null)){
return (new cljs.core.RedNode(k,v,null,null,null));
} else {
var c = (function (){var G__21745 = k;
var G__21746 = tree.key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__21745,G__21746) : comp.call(null,G__21745,G__21746));
})();
if((c === (0))){
(found[(0)] = tree);

return null;
} else {
if((c < (0))){
var ins = tree_map_add(comp,tree.left,k,v,found);
if(!((ins == null))){
return tree.add_left(ins);
} else {
return null;
}
} else {
var ins = tree_map_add(comp,tree.right,k,v,found);
if(!((ins == null))){
return tree.add_right(ins);
} else {
return null;
}

}
}
}
});
cljs.core.tree_map_append = (function tree_map_append(left,right){
if((left == null)){
return right;
} else {
if((right == null)){
return left;
} else {
if((left instanceof cljs.core.RedNode)){
if((right instanceof cljs.core.RedNode)){
var app = tree_map_append(left.right,right.left);
if((app instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(app.key,app.val,(new cljs.core.RedNode(left.key,left.val,left.left,app.left,null)),(new cljs.core.RedNode(right.key,right.val,app.right,right.right,null)),null));
} else {
return (new cljs.core.RedNode(left.key,left.val,left.left,(new cljs.core.RedNode(right.key,right.val,app,right.right,null)),null));
}
} else {
return (new cljs.core.RedNode(left.key,left.val,left.left,tree_map_append(left.right,right),null));
}
} else {
if((right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(right.key,right.val,tree_map_append(left,right.left),right.right,null));
} else {
var app = tree_map_append(left.right,right.left);
if((app instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(app.key,app.val,(new cljs.core.BlackNode(left.key,left.val,left.left,app.left,null)),(new cljs.core.BlackNode(right.key,right.val,app.right,right.right,null)),null));
} else {
return cljs.core.balance_left_del(left.key,left.val,left.left,(new cljs.core.BlackNode(right.key,right.val,app,right.right,null)));
}

}
}
}
}
});
cljs.core.tree_map_remove = (function tree_map_remove(comp,tree,k,found){
if(!((tree == null))){
var c = (function (){var G__21765 = k;
var G__21766 = tree.key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__21765,G__21766) : comp.call(null,G__21765,G__21766));
})();
if((c === (0))){
(found[(0)] = tree);

return cljs.core.tree_map_append(tree.left,tree.right);
} else {
if((c < (0))){
var del = tree_map_remove(comp,tree.left,k,found);
if((!((del == null))) || (!(((found[(0)]) == null)))){
if((tree.left instanceof cljs.core.BlackNode)){
return cljs.core.balance_left_del(tree.key,tree.val,del,tree.right);
} else {
return (new cljs.core.RedNode(tree.key,tree.val,del,tree.right,null));
}
} else {
return null;
}
} else {
var del = tree_map_remove(comp,tree.right,k,found);
if((!((del == null))) || (!(((found[(0)]) == null)))){
if((tree.right instanceof cljs.core.BlackNode)){
return cljs.core.balance_right_del(tree.key,tree.val,tree.left,del);
} else {
return (new cljs.core.RedNode(tree.key,tree.val,tree.left,del,null));
}
} else {
return null;
}

}
}
} else {
return null;
}
});
cljs.core.tree_map_replace = (function tree_map_replace(comp,tree,k,v){
var tk = tree.key;
var c = (function (){var G__21777 = k;
var G__21778 = tk;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__21777,G__21778) : comp.call(null,G__21777,G__21778));
})();
if((c === (0))){
return tree.replace(tk,v,tree.left,tree.right);
} else {
if((c < (0))){
return tree.replace(tk,tree.val,tree_map_replace(comp,tree.left,k,v),tree.right);
} else {
return tree.replace(tk,tree.val,tree.left,tree_map_replace(comp,tree.right,k,v));

}
}
});

/**
* @constructor
*/
cljs.core.PersistentTreeMap = (function (comp,tree,cnt,meta,__hash){
this.comp = comp;
this.tree = tree;
this.cnt = cnt;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 418776847;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentTreeMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__21780 = cljs.core.seq(coll);
var chunk__21781 = null;
var count__21782 = (0);
var i__21783 = (0);
while(true){
if((i__21783 < count__21782)){
var vec__21784 = chunk__21781.cljs$core$IIndexed$_nth$arity$2(null,i__21783);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21784,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21784,(1),null);
var G__21785_21797 = v;
var G__21786_21798 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__21785_21797,G__21786_21798) : f.call(null,G__21785_21797,G__21786_21798));

var G__21799 = seq__21780;
var G__21800 = chunk__21781;
var G__21801 = count__21782;
var G__21802 = (i__21783 + (1));
seq__21780 = G__21799;
chunk__21781 = G__21800;
count__21782 = G__21801;
i__21783 = G__21802;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__21780);
if(temp__4126__auto__){
var seq__21780__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__21780__$1)){
var c__8291__auto__ = cljs.core.chunk_first(seq__21780__$1);
var G__21803 = cljs.core.chunk_rest(seq__21780__$1);
var G__21804 = c__8291__auto__;
var G__21805 = cljs.core.count(c__8291__auto__);
var G__21806 = (0);
seq__21780 = G__21803;
chunk__21781 = G__21804;
count__21782 = G__21805;
i__21783 = G__21806;
continue;
} else {
var vec__21787 = cljs.core.first(seq__21780__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21787,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21787,(1),null);
var G__21788_21807 = v;
var G__21789_21808 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__21788_21807,G__21789_21808) : f.call(null,G__21788_21807,G__21789_21808));

var G__21809 = cljs.core.next(seq__21780__$1);
var G__21810 = null;
var G__21811 = (0);
var G__21812 = (0);
seq__21780 = G__21809;
chunk__21781 = G__21810;
count__21782 = G__21811;
i__21783 = G__21812;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentTreeMap.prototype.get = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentTreeMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__21790 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__21790) : cljs.core.keys.call(null,G__21790));
})());
});

cljs.core.PersistentTreeMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__21791 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__21791) : cljs.core.vals.call(null,G__21791));
})());
});

cljs.core.PersistentTreeMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeMap.prototype.entry_at = (function (k){
var self__ = this;
var coll = this;
var t = self__.tree;
while(true){
if(!((t == null))){
var c = (function (){var G__21792 = k;
var G__21793 = t.key;
return (self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__21792,G__21793) : self__.comp.call(null,G__21792,G__21793));
})();
if((c === (0))){
return t;
} else {
if((c < (0))){
var G__21813 = t.left;
t = G__21813;
continue;
} else {
var G__21814 = t.right;
t = G__21814;
continue;

}
}
} else {
return null;
}
break;
}
});

cljs.core.PersistentTreeMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
var n = coll__$1.entry_at(k);
if(!((n == null))){
return n.val;
} else {
return not_found;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
if(!((self__.tree == null))){
return cljs.core.tree_map_kv_reduce(self__.tree,f,init);
} else {
return init;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,self__.tree,self__.cnt,self__.meta,self__.__hash));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,false,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__7925__auto__ = self__.__hash;
if(!((h__7925__auto__ == null))){
return h__7925__auto__;
} else {
var h__7925__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__7925__auto____$1;

return h__7925__auto____$1;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,null,(0),self__.meta,(0)));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
var found = [null];
var t = cljs.core.tree_map_remove(self__.comp,self__.tree,k,found);
if((t == null)){
if((cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found,(0)) == null)){
return coll__$1;
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,null,(0),self__.meta,null));
}
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,t.blacken(),(self__.cnt - (1)),self__.meta,null));
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
var found = [null];
var t = cljs.core.tree_map_add(self__.comp,self__.tree,k,v,found);
if((t == null)){
var found_node = cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found,(0));
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(v,found_node.val)){
return coll__$1;
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,cljs.core.tree_map_replace(self__.comp,self__.tree,k,v),self__.cnt,self__.meta,null));
}
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,t.blacken(),(self__.cnt + (1)),self__.meta,null));
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return !((coll__$1.entry_at(k) == null));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,true,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,self__.tree,self__.cnt,meta__$1,self__.__hash));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__21815 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__21816 = cljs.core.next(es);
ret = G__21815;
es = G__21816;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentTreeMap.prototype.call = (function() {
var G__21817 = null;
var G__21817__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__21817__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__21817 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__21817__2.call(this,self__,k);
case 3:
return G__21817__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__21817.cljs$core$IFn$_invoke$arity$2 = G__21817__2;
G__21817.cljs$core$IFn$_invoke$arity$3 = G__21817__3;
return G__21817;
})()
;

cljs.core.PersistentTreeMap.prototype.apply = (function (self__,args21779){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args21779)));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = (function (coll,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,ascending_QMARK_,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = (function (coll,k,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
var stack = null;
var t = self__.tree;
while(true){
if(!((t == null))){
var c = (function (){var G__21794 = k;
var G__21795 = t.key;
return (self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__21794,G__21795) : self__.comp.call(null,G__21794,G__21795));
})();
if((c === (0))){
return (new cljs.core.PersistentTreeMapSeq(null,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t),ascending_QMARK_,(-1),null));
} else {
if(cljs.core.truth_(ascending_QMARK_)){
if((c < (0))){
var G__21818 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t);
var G__21819 = t.left;
stack = G__21818;
t = G__21819;
continue;
} else {
var G__21820 = stack;
var G__21821 = t.right;
stack = G__21820;
t = G__21821;
continue;
}
} else {
if((c > (0))){
var G__21822 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t);
var G__21823 = t.right;
stack = G__21822;
t = G__21823;
continue;
} else {
var G__21824 = stack;
var G__21825 = t.left;
stack = G__21824;
t = G__21825;
continue;
}

}
}
} else {
if((stack == null)){
return null;
} else {
return (new cljs.core.PersistentTreeMapSeq(null,stack,ascending_QMARK_,(-1),null));
}
}
break;
}
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_entry_key$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
var G__21796 = entry;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__21796) : cljs.core.key.call(null,G__21796));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_comparator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.comp;
});

cljs.core.PersistentTreeMap.cljs$lang$type = true;

cljs.core.PersistentTreeMap.cljs$lang$ctorStr = "cljs.core/PersistentTreeMap";

cljs.core.PersistentTreeMap.cljs$lang$ctorPrWriter = (function (this__8091__auto__,writer__8092__auto__,opt__8093__auto__){
return cljs.core._write(writer__8092__auto__,"cljs.core/PersistentTreeMap");
});

cljs.core.__GT_PersistentTreeMap = (function __GT_PersistentTreeMap(comp,tree,cnt,meta,__hash){
return (new cljs.core.PersistentTreeMap(comp,tree,cnt,meta,__hash));
});

cljs.core.PersistentTreeMap.EMPTY = (new cljs.core.PersistentTreeMap(cljs.core.compare,null,(0),null,cljs.core.empty_unordered_hash));
(cljs.core.PersistentTreeMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__8482__auto__ = this;
return cljs.core.es6_iterator(this__8482__auto__);
}));
/**
* keyval => key val
* Returns a new hash map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.hash_map = (function() { 
var hash_map__delegate = function (keyvals){
var in$ = cljs.core.seq(keyvals);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if(in$){
var G__21826 = cljs.core.nnext(in$);
var G__21827 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__21826;
out = G__21827;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
};
var hash_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__21828__i = 0, G__21828__a = new Array(arguments.length -  0);
while (G__21828__i < G__21828__a.length) {G__21828__a[G__21828__i] = arguments[G__21828__i + 0]; ++G__21828__i;}
  keyvals = new cljs.core.IndexedSeq(G__21828__a,0);
} 
return hash_map__delegate.call(this,keyvals);};
hash_map.cljs$lang$maxFixedArity = 0;
hash_map.cljs$lang$applyTo = (function (arglist__21829){
var keyvals = cljs.core.seq(arglist__21829);
return hash_map__delegate(keyvals);
});
hash_map.cljs$core$IFn$_invoke$arity$variadic = hash_map__delegate;
return hash_map;
})()
;
/**
* keyval => key val
* Returns a new array map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.array_map = (function() { 
var array_map__delegate = function (keyvals){
return cljs.core.PersistentArrayMap.fromArray(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array,keyvals),true,false);
};
var array_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__21830__i = 0, G__21830__a = new Array(arguments.length -  0);
while (G__21830__i < G__21830__a.length) {G__21830__a[G__21830__i] = arguments[G__21830__i + 0]; ++G__21830__i;}
  keyvals = new cljs.core.IndexedSeq(G__21830__a,0);
} 
return array_map__delegate.call(this,keyvals);};
array_map.cljs$lang$maxFixedArity = 0;
array_map.cljs$lang$applyTo = (function (arglist__21831){
var keyvals = cljs.core.seq(arglist__21831);
return array_map__delegate(keyvals);
});
array_map.cljs$core$IFn$_invoke$arity$variadic = array_map__delegate;
return array_map;
})()
;
/**
* keyval => key val
* Returns a new object map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.obj_map = (function() { 
var obj_map__delegate = function (keyvals){
var ks = [];
var obj = (function (){var obj21835 = {};
return obj21835;
})();
var kvs = cljs.core.seq(keyvals);
while(true){
if(kvs){
ks.push(cljs.core.first(kvs));

(obj[cljs.core.first(kvs)] = cljs.core.second(kvs));

var G__21836 = cljs.core.nnext(kvs);
kvs = G__21836;
continue;
} else {
return cljs.core.ObjMap.fromObject(ks,obj);
}
break;
}
};
var obj_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__21837__i = 0, G__21837__a = new Array(arguments.length -  0);
while (G__21837__i < G__21837__a.length) {G__21837__a[G__21837__i] = arguments[G__21837__i + 0]; ++G__21837__i;}
  keyvals = new cljs.core.IndexedSeq(G__21837__a,0);
} 
return obj_map__delegate.call(this,keyvals);};
obj_map.cljs$lang$maxFixedArity = 0;
obj_map.cljs$lang$applyTo = (function (arglist__21838){
var keyvals = cljs.core.seq(arglist__21838);
return obj_map__delegate(keyvals);
});
obj_map.cljs$core$IFn$_invoke$arity$variadic = obj_map__delegate;
return obj_map;
})()
;
/**
* keyval => key val
* Returns a new sorted map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.sorted_map = (function() { 
var sorted_map__delegate = function (keyvals){
var in$ = cljs.core.seq(keyvals);
var out = cljs.core.PersistentTreeMap.EMPTY;
while(true){
if(in$){
var G__21839 = cljs.core.nnext(in$);
var G__21840 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__21839;
out = G__21840;
continue;
} else {
return out;
}
break;
}
};
var sorted_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__21841__i = 0, G__21841__a = new Array(arguments.length -  0);
while (G__21841__i < G__21841__a.length) {G__21841__a[G__21841__i] = arguments[G__21841__i + 0]; ++G__21841__i;}
  keyvals = new cljs.core.IndexedSeq(G__21841__a,0);
} 
return sorted_map__delegate.call(this,keyvals);};
sorted_map.cljs$lang$maxFixedArity = 0;
sorted_map.cljs$lang$applyTo = (function (arglist__21842){
var keyvals = cljs.core.seq(arglist__21842);
return sorted_map__delegate(keyvals);
});
sorted_map.cljs$core$IFn$_invoke$arity$variadic = sorted_map__delegate;
return sorted_map;
})()
;
/**
* keyval => key val
* Returns a new sorted map with supplied mappings, using the supplied comparator.
* @param {...*} var_args
*/
cljs.core.sorted_map_by = (function() { 
var sorted_map_by__delegate = function (comparator,keyvals){
var in$ = cljs.core.seq(keyvals);
var out = (new cljs.core.PersistentTreeMap(cljs.core.fn__GT_comparator(comparator),null,(0),null,(0)));
while(true){
if(in$){
var G__21843 = cljs.core.nnext(in$);
var G__21844 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__21843;
out = G__21844;
continue;
} else {
return out;
}
break;
}
};
var sorted_map_by = function (comparator,var_args){
var keyvals = null;
if (arguments.length > 1) {
var G__21845__i = 0, G__21845__a = new Array(arguments.length -  1);
while (G__21845__i < G__21845__a.length) {G__21845__a[G__21845__i] = arguments[G__21845__i + 1]; ++G__21845__i;}
  keyvals = new cljs.core.IndexedSeq(G__21845__a,0);
} 
return sorted_map_by__delegate.call(this,comparator,keyvals);};
sorted_map_by.cljs$lang$maxFixedArity = 1;
sorted_map_by.cljs$lang$applyTo = (function (arglist__21846){
var comparator = cljs.core.first(arglist__21846);
var keyvals = cljs.core.rest(arglist__21846);
return sorted_map_by__delegate(comparator,keyvals);
});
sorted_map_by.cljs$core$IFn$_invoke$arity$variadic = sorted_map_by__delegate;
return sorted_map_by;
})()
;

/**
* @constructor
*/
cljs.core.KeySeq = (function (mseq,_meta){
this.mseq = mseq;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
})
cljs.core.KeySeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.KeySeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.KeySeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.KeySeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__21847 = self__.mseq;
if(G__21847){
var bit__8185__auto__ = (G__21847.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__8185__auto__) || (G__21847.cljs$core$INext$)){
return true;
} else {
if((!G__21847.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__21847);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__21847);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if((nseq == null)){
return null;
} else {
return (new cljs.core.KeySeq(nseq,self__._meta));
}
});

cljs.core.KeySeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.KeySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
return me.cljs$core$IMapEntry$_key$arity$1(null);
});

cljs.core.KeySeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__21848 = self__.mseq;
if(G__21848){
var bit__8185__auto__ = (G__21848.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__8185__auto__) || (G__21848.cljs$core$INext$)){
return true;
} else {
if((!G__21848.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__21848);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__21848);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if(!((nseq == null))){
return (new cljs.core.KeySeq(nseq,self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.KeySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.KeySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.KeySeq(self__.mseq,new_meta));
});

cljs.core.KeySeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.KeySeq.cljs$lang$type = true;

cljs.core.KeySeq.cljs$lang$ctorStr = "cljs.core/KeySeq";

cljs.core.KeySeq.cljs$lang$ctorPrWriter = (function (this__8091__auto__,writer__8092__auto__,opt__8093__auto__){
return cljs.core._write(writer__8092__auto__,"cljs.core/KeySeq");
});

cljs.core.__GT_KeySeq = (function __GT_KeySeq(mseq,_meta){
return (new cljs.core.KeySeq(mseq,_meta));
});

(cljs.core.KeySeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__8482__auto__ = this;
return cljs.core.es6_iterator(this__8482__auto__);
}));
/**
* Returns a sequence of the map's keys.
*/
cljs.core.keys = (function keys(hash_map){
var temp__4126__auto__ = cljs.core.seq(hash_map);
if(temp__4126__auto__){
var mseq = temp__4126__auto__;
return (new cljs.core.KeySeq(mseq,null));
} else {
return null;
}
});
/**
* Returns the key of the map entry.
*/
cljs.core.key = (function key(map_entry){
return cljs.core._key(map_entry);
});

/**
* @constructor
*/
cljs.core.ValSeq = (function (mseq,_meta){
this.mseq = mseq;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
})
cljs.core.ValSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ValSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ValSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.ValSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__21849 = self__.mseq;
if(G__21849){
var bit__8185__auto__ = (G__21849.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__8185__auto__) || (G__21849.cljs$core$INext$)){
return true;
} else {
if((!G__21849.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__21849);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__21849);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if((nseq == null)){
return null;
} else {
return (new cljs.core.ValSeq(nseq,self__._meta));
}
});

cljs.core.ValSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ValSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
return me.cljs$core$IMapEntry$_val$arity$1(null);
});

cljs.core.ValSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__21850 = self__.mseq;
if(G__21850){
var bit__8185__auto__ = (G__21850.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__8185__auto__) || (G__21850.cljs$core$INext$)){
return true;
} else {
if((!G__21850.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__21850);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__21850);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if(!((nseq == null))){
return (new cljs.core.ValSeq(nseq,self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.ValSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ValSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ValSeq(self__.mseq,new_meta));
});

cljs.core.ValSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ValSeq.cljs$lang$type = true;

cljs.core.ValSeq.cljs$lang$ctorStr = "cljs.core/ValSeq";

cljs.core.ValSeq.cljs$lang$ctorPrWriter = (function (this__8091__auto__,writer__8092__auto__,opt__8093__auto__){
return cljs.core._write(writer__8092__auto__,"cljs.core/ValSeq");
});

cljs.core.__GT_ValSeq = (function __GT_ValSeq(mseq,_meta){
return (new cljs.core.ValSeq(mseq,_meta));
});

(cljs.core.ValSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__8482__auto__ = this;
return cljs.core.es6_iterator(this__8482__auto__);
}));
/**
* Returns a sequence of the map's values.
*/
cljs.core.vals = (function vals(hash_map){
var temp__4126__auto__ = cljs.core.seq(hash_map);
if(temp__4126__auto__){
var mseq = temp__4126__auto__;
return (new cljs.core.ValSeq(mseq,null));
} else {
return null;
}
});
/**
* Returns the value in the map entry.
*/
cljs.core.val = (function val(map_entry){
return cljs.core._val(map_entry);
});
/**
* Returns a map that consists of the rest of the maps conj-ed onto
* the first.  If a key occurs in more than one map, the mapping from
* the latter (left-to-right) will be the mapping in the result.
* @param {...*} var_args
*/
cljs.core.merge = (function() { 
var merge__delegate = function (maps){
if(cljs.core.truth_(cljs.core.some(cljs.core.identity,maps))){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2((function (p1__21851_SHARP_,p2__21852_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2((function (){var or__7504__auto__ = p1__21851_SHARP_;
if(cljs.core.truth_(or__7504__auto__)){
return or__7504__auto__;
} else {
return cljs.core.PersistentArrayMap.EMPTY;
}
})(),p2__21852_SHARP_);
}),maps);
} else {
return null;
}
};
var merge = function (var_args){
var maps = null;
if (arguments.length > 0) {
var G__21853__i = 0, G__21853__a = new Array(arguments.length -  0);
while (G__21853__i < G__21853__a.length) {G__21853__a[G__21853__i] = arguments[G__21853__i + 0]; ++G__21853__i;}
  maps = new cljs.core.IndexedSeq(G__21853__a,0);
} 
return merge__delegate.call(this,maps);};
merge.cljs$lang$maxFixedArity = 0;
merge.cljs$lang$applyTo = (function (arglist__21854){
var maps = cljs.core.seq(arglist__21854);
return merge__delegate(maps);
});
merge.cljs$core$IFn$_invoke$arity$variadic = merge__delegate;
return merge;
})()
;
/**
* Returns a map that consists of the rest of the maps conj-ed onto
* the first.  If a key occurs in more than one map, the mapping(s)
* from the latter (left-to-right) will be combined with the mapping in
* the result by calling (f val-in-result val-in-latter).
* @param {...*} var_args
*/
cljs.core.merge_with = (function() { 
var merge_with__delegate = function (f,maps){
if(cljs.core.truth_(cljs.core.some(cljs.core.identity,maps))){
var merge_entry = (function (m,e){
var k = cljs.core.first(e);
var v = cljs.core.second(e);
if(cljs.core.contains_QMARK_(m,k)){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__21857 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__21858 = v;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__21857,G__21858) : f.call(null,G__21857,G__21858));
})());
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,v);
}
});
var merge2 = ((function (merge_entry){
return (function (m1,m2){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(merge_entry,(function (){var or__7504__auto__ = m1;
if(cljs.core.truth_(or__7504__auto__)){
return or__7504__auto__;
} else {
return cljs.core.PersistentArrayMap.EMPTY;
}
})(),cljs.core.seq(m2));
});})(merge_entry))
;
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(merge2,maps);
} else {
return null;
}
};
var merge_with = function (f,var_args){
var maps = null;
if (arguments.length > 1) {
var G__21859__i = 0, G__21859__a = new Array(arguments.length -  1);
while (G__21859__i < G__21859__a.length) {G__21859__a[G__21859__i] = arguments[G__21859__i + 1]; ++G__21859__i;}
  maps = new cljs.core.IndexedSeq(G__21859__a,0);
} 
return merge_with__delegate.call(this,f,maps);};
merge_with.cljs$lang$maxFixedArity = 1;
merge_with.cljs$lang$applyTo = (function (arglist__21860){
var f = cljs.core.first(arglist__21860);
var maps = cljs.core.rest(arglist__21860);
return merge_with__delegate(f,maps);
});
merge_with.cljs$core$IFn$_invoke$arity$variadic = merge_with__delegate;
return merge_with;
})()
;
/**
* Returns a map containing only those entries in map whose key is in keys
*/
cljs.core.select_keys = (function select_keys(map,keyseq){
var ret = cljs.core.PersistentArrayMap.EMPTY;
var keys = cljs.core.seq(keyseq);
while(true){
if(keys){
var key = cljs.core.first(keys);
var entry = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map,key,new cljs.core.Keyword("cljs.core","not-found","cljs.core/not-found",-1572889185));
var G__21861 = ((cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(entry,new cljs.core.Keyword("cljs.core","not-found","cljs.core/not-found",-1572889185)))?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret,key,entry):ret);
var G__21862 = cljs.core.next(keys);
ret = G__21861;
keys = G__21862;
continue;
} else {
return cljs.core.with_meta(ret,cljs.core.meta(map));
}
break;
}
});

/**
* @constructor
*/
cljs.core.PersistentHashSet = (function (meta,hash_map,__hash){
this.meta = meta;
this.hash_map = hash_map;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 15077647;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentHashSet.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentHashSet.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentHashSet.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentHashSet.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__21865 = cljs.core.seq(coll);
var chunk__21866 = null;
var count__21867 = (0);
var i__21868 = (0);
while(true){
if((i__21868 < count__21867)){
var vec__21869 = chunk__21866.cljs$core$IIndexed$_nth$arity$2(null,i__21868);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21869,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21869,(1),null);
var G__21870_21875 = v;
var G__21871_21876 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__21870_21875,G__21871_21876) : f.call(null,G__21870_21875,G__21871_21876));

var G__21877 = seq__21865;
var G__21878 = chunk__21866;
var G__21879 = count__21867;
var G__21880 = (i__21868 + (1));
seq__21865 = G__21877;
chunk__21866 = G__21878;
count__21867 = G__21879;
i__21868 = G__21880;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__21865);
if(temp__4126__auto__){
var seq__21865__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__21865__$1)){
var c__8291__auto__ = cljs.core.chunk_first(seq__21865__$1);
var G__21881 = cljs.core.chunk_rest(seq__21865__$1);
var G__21882 = c__8291__auto__;
var G__21883 = cljs.core.count(c__8291__auto__);
var G__21884 = (0);
seq__21865 = G__21881;
chunk__21866 = G__21882;
count__21867 = G__21883;
i__21868 = G__21884;
continue;
} else {
var vec__21872 = cljs.core.first(seq__21865__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21872,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21872,(1),null);
var G__21873_21885 = v;
var G__21874_21886 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__21873_21885,G__21874_21886) : f.call(null,G__21873_21885,G__21874_21886));

var G__21887 = cljs.core.next(seq__21865__$1);
var G__21888 = null;
var G__21889 = (0);
var G__21890 = (0);
seq__21865 = G__21887;
chunk__21866 = G__21888;
count__21867 = G__21889;
i__21868 = G__21890;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,v,null);
});

cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,v,not_found){
var self__ = this;
var coll__$1 = this;
if(cljs.core._contains_key_QMARK_(self__.hash_map,v)){
return v;
} else {
return not_found;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,self__.hash_map,self__.__hash));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._count(self__.hash_map);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__7925__auto__ = self__.__hash;
if(!((h__7925__auto__ == null))){
return h__7925__auto__;
} else {
var h__7925__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__7925__auto____$1;

return h__7925__auto____$1;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return (cljs.core.set_QMARK_(other)) && ((cljs.core.count(coll__$1) === cljs.core.count(other))) && (cljs.core.every_QMARK_(((function (coll__$1){
return (function (p1__21863_SHARP_){
return cljs.core.contains_QMARK_(coll__$1,p1__21863_SHARP_);
});})(coll__$1))
,other));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientHashSet(cljs.core._as_transient(self__.hash_map)));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentHashSet.EMPTY,self__.meta);
});

cljs.core.PersistentHashSet.prototype.cljs$core$ISet$_disjoin$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,cljs.core._dissoc(self__.hash_map,v),null));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.keys(self__.hash_map);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(meta__$1,self__.hash_map,self__.__hash));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.hash_map,o,null),null));
});

cljs.core.PersistentHashSet.prototype.call = (function() {
var G__21891 = null;
var G__21891__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__21891__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__21891 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__21891__2.call(this,self__,k);
case 3:
return G__21891__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__21891.cljs$core$IFn$_invoke$arity$2 = G__21891__2;
G__21891.cljs$core$IFn$_invoke$arity$3 = G__21891__3;
return G__21891;
})()
;

cljs.core.PersistentHashSet.prototype.apply = (function (self__,args21864){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args21864)));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentHashSet.cljs$lang$type = true;

cljs.core.PersistentHashSet.cljs$lang$ctorStr = "cljs.core/PersistentHashSet";

cljs.core.PersistentHashSet.cljs$lang$ctorPrWriter = (function (this__8091__auto__,writer__8092__auto__,opt__8093__auto__){
return cljs.core._write(writer__8092__auto__,"cljs.core/PersistentHashSet");
});

cljs.core.__GT_PersistentHashSet = (function __GT_PersistentHashSet(meta,hash_map,__hash){
return (new cljs.core.PersistentHashSet(meta,hash_map,__hash));
});

cljs.core.PersistentHashSet.EMPTY = (new cljs.core.PersistentHashSet(null,cljs.core.PersistentArrayMap.EMPTY,cljs.core.empty_unordered_hash));
cljs.core.PersistentHashSet.fromArray = (function (items,no_clone){
var len = items.length;
if((len <= cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD)){
var arr = ((no_clone)?items:cljs.core.aclone(items));
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
while(true){
if((i < len)){
var G__21892 = (i + (1));
var G__21893 = cljs.core._assoc_BANG_(out,(items[i]),null);
i = G__21892;
out = G__21893;
continue;
} else {
return (new cljs.core.PersistentHashSet(null,cljs.core._persistent_BANG_(out),null));
}
break;
}
} else {
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashSet.EMPTY);
while(true){
if((i < len)){
var G__21894 = (i + (1));
var G__21895 = cljs.core._conj_BANG_(out,(items[i]));
i = G__21894;
out = G__21895;
continue;
} else {
return cljs.core._persistent_BANG_(out);
}
break;
}
}
});
(cljs.core.PersistentHashSet.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__8482__auto__ = this;
return cljs.core.es6_iterator(this__8482__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientHashSet = (function (transient_map){
this.transient_map = transient_map;
this.cljs$lang$protocol_mask$partition0$ = 259;
this.cljs$lang$protocol_mask$partition1$ = 136;
})
cljs.core.TransientHashSet.prototype.call = (function() {
var G__21897 = null;
var G__21897__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var tcoll = self____$1;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return null;
} else {
return k;
}
});
var G__21897__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var tcoll = self____$1;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return k;
}
});
G__21897 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__21897__2.call(this,self__,k);
case 3:
return G__21897__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__21897.cljs$core$IFn$_invoke$arity$2 = G__21897__2;
G__21897.cljs$core$IFn$_invoke$arity$3 = G__21897__3;
return G__21897;
})()
;

cljs.core.TransientHashSet.prototype.apply = (function (self__,args21896){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args21896)));
});

cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var tcoll = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return null;
} else {
return k;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var tcoll = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return k;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,v){
var self__ = this;
var tcoll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(tcoll__$1,v,null);
});

cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,v,not_found){
var self__ = this;
var tcoll__$1 = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,v,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return v;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return cljs.core.count(self__.transient_map);
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientSet$_disjoin_BANG_$arity$2 = (function (tcoll,v){
var self__ = this;
var tcoll__$1 = this;
self__.transient_map = cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$2(self__.transient_map,v);

return tcoll__$1;
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
self__.transient_map = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(self__.transient_map,o,null);

return tcoll__$1;
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return (new cljs.core.PersistentHashSet(null,cljs.core.persistent_BANG_(self__.transient_map),null));
});

cljs.core.TransientHashSet.cljs$lang$type = true;

cljs.core.TransientHashSet.cljs$lang$ctorStr = "cljs.core/TransientHashSet";

cljs.core.TransientHashSet.cljs$lang$ctorPrWriter = (function (this__8091__auto__,writer__8092__auto__,opt__8093__auto__){
return cljs.core._write(writer__8092__auto__,"cljs.core/TransientHashSet");
});

cljs.core.__GT_TransientHashSet = (function __GT_TransientHashSet(transient_map){
return (new cljs.core.TransientHashSet(transient_map));
});


/**
* @constructor
*/
cljs.core.PersistentTreeSet = (function (meta,tree_map,__hash){
this.meta = meta;
this.tree_map = tree_map;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 417730831;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentTreeSet.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeSet.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeSet.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentTreeSet.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__21900 = cljs.core.seq(coll);
var chunk__21901 = null;
var count__21902 = (0);
var i__21903 = (0);
while(true){
if((i__21903 < count__21902)){
var vec__21904 = chunk__21901.cljs$core$IIndexed$_nth$arity$2(null,i__21903);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21904,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21904,(1),null);
var G__21905_21910 = v;
var G__21906_21911 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__21905_21910,G__21906_21911) : f.call(null,G__21905_21910,G__21906_21911));

var G__21912 = seq__21900;
var G__21913 = chunk__21901;
var G__21914 = count__21902;
var G__21915 = (i__21903 + (1));
seq__21900 = G__21912;
chunk__21901 = G__21913;
count__21902 = G__21914;
i__21903 = G__21915;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__21900);
if(temp__4126__auto__){
var seq__21900__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__21900__$1)){
var c__8291__auto__ = cljs.core.chunk_first(seq__21900__$1);
var G__21916 = cljs.core.chunk_rest(seq__21900__$1);
var G__21917 = c__8291__auto__;
var G__21918 = cljs.core.count(c__8291__auto__);
var G__21919 = (0);
seq__21900 = G__21916;
chunk__21901 = G__21917;
count__21902 = G__21918;
i__21903 = G__21919;
continue;
} else {
var vec__21907 = cljs.core.first(seq__21900__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21907,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21907,(1),null);
var G__21908_21920 = v;
var G__21909_21921 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__21908_21920,G__21909_21921) : f.call(null,G__21908_21920,G__21909_21921));

var G__21922 = cljs.core.next(seq__21900__$1);
var G__21923 = null;
var G__21924 = (0);
var G__21925 = (0);
seq__21900 = G__21922;
chunk__21901 = G__21923;
count__21902 = G__21924;
i__21903 = G__21925;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,v,null);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,v,not_found){
var self__ = this;
var coll__$1 = this;
var n = self__.tree_map.entry_at(v);
if(!((n == null))){
return n.key;
} else {
return not_found;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,self__.tree_map,self__.__hash));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.count(self__.tree_map);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core.count(self__.tree_map) > (0))){
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core.rseq(self__.tree_map));
} else {
return null;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__7925__auto__ = self__.__hash;
if(!((h__7925__auto__ == null))){
return h__7925__auto__;
} else {
var h__7925__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__7925__auto____$1;

return h__7925__auto____$1;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return (cljs.core.set_QMARK_(other)) && ((cljs.core.count(coll__$1) === cljs.core.count(other))) && (cljs.core.every_QMARK_(((function (coll__$1){
return (function (p1__21898_SHARP_){
return cljs.core.contains_QMARK_(coll__$1,p1__21898_SHARP_);
});})(coll__$1))
,other));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core._empty(self__.tree_map),(0)));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISet$_disjoin$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.tree_map,v),null));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.keys(self__.tree_map);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(meta__$1,self__.tree_map,self__.__hash));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.tree_map,o,null),null));
});

cljs.core.PersistentTreeSet.prototype.call = (function() {
var G__21926 = null;
var G__21926__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__21926__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__21926 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__21926__2.call(this,self__,k);
case 3:
return G__21926__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__21926.cljs$core$IFn$_invoke$arity$2 = G__21926__2;
G__21926.cljs$core$IFn$_invoke$arity$3 = G__21926__3;
return G__21926;
})()
;

cljs.core.PersistentTreeSet.prototype.apply = (function (self__,args21899){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args21899)));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = (function (coll,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core._sorted_seq(self__.tree_map,ascending_QMARK_));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = (function (coll,k,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core._sorted_seq_from(self__.tree_map,k,ascending_QMARK_));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_entry_key$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
return entry;
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_comparator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._comparator(self__.tree_map);
});

cljs.core.PersistentTreeSet.cljs$lang$type = true;

cljs.core.PersistentTreeSet.cljs$lang$ctorStr = "cljs.core/PersistentTreeSet";

cljs.core.PersistentTreeSet.cljs$lang$ctorPrWriter = (function (this__8091__auto__,writer__8092__auto__,opt__8093__auto__){
return cljs.core._write(writer__8092__auto__,"cljs.core/PersistentTreeSet");
});

cljs.core.__GT_PersistentTreeSet = (function __GT_PersistentTreeSet(meta,tree_map,__hash){
return (new cljs.core.PersistentTreeSet(meta,tree_map,__hash));
});

cljs.core.PersistentTreeSet.EMPTY = (new cljs.core.PersistentTreeSet(null,cljs.core.PersistentTreeMap.EMPTY,cljs.core.empty_unordered_hash));
(cljs.core.PersistentTreeSet.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__8482__auto__ = this;
return cljs.core.es6_iterator(this__8482__auto__);
}));
cljs.core.set_from_indexed_seq = (function set_from_indexed_seq(iseq){
var arr = iseq.arr;
var ret = (function (){var a__8385__auto__ = arr;
var i = (0);
var res = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
while(true){
if((i < a__8385__auto__.length)){
var G__21927 = (i + (1));
var G__21928 = res.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null,(arr[i]));
i = G__21927;
res = G__21928;
continue;
} else {
return res;
}
break;
}
})();
return ret.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(null);
});
/**
* Returns a set of the distinct elements of coll.
*/
cljs.core.set = (function set(coll){
var in$ = cljs.core.seq(coll);
if((in$ == null)){
return cljs.core.PersistentHashSet.EMPTY;
} else {
if(((in$ instanceof cljs.core.IndexedSeq)) && ((in$.i === (0)))){
return cljs.core.set_from_indexed_seq(in$);
} else {
var in$__$1 = in$;
var out = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
while(true){
if(!((in$__$1 == null))){
var G__21929 = in$__$1.cljs$core$INext$_next$arity$1(null);
var G__21930 = out.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null,in$__$1.cljs$core$ISeq$_first$arity$1(null));
in$__$1 = G__21929;
out = G__21930;
continue;
} else {
return out.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(null);
}
break;
}

}
}
});
/**
* @param {...*} var_args
*/
cljs.core.hash_set = (function() {
var hash_set = null;
var hash_set__0 = (function (){
return cljs.core.PersistentHashSet.EMPTY;
});
var hash_set__1 = (function() { 
var G__21931__delegate = function (keys){
return cljs.core.set(keys);
};
var G__21931 = function (var_args){
var keys = null;
if (arguments.length > 0) {
var G__21932__i = 0, G__21932__a = new Array(arguments.length -  0);
while (G__21932__i < G__21932__a.length) {G__21932__a[G__21932__i] = arguments[G__21932__i + 0]; ++G__21932__i;}
  keys = new cljs.core.IndexedSeq(G__21932__a,0);
} 
return G__21931__delegate.call(this,keys);};
G__21931.cljs$lang$maxFixedArity = 0;
G__21931.cljs$lang$applyTo = (function (arglist__21933){
var keys = cljs.core.seq(arglist__21933);
return G__21931__delegate(keys);
});
G__21931.cljs$core$IFn$_invoke$arity$variadic = G__21931__delegate;
return G__21931;
})()
;
hash_set = function(var_args){
var keys = var_args;
switch(arguments.length){
case 0:
return hash_set__0.call(this);
default:
var G__21934 = null;
if (arguments.length > 0) {
var G__21935__i = 0, G__21935__a = new Array(arguments.length -  0);
while (G__21935__i < G__21935__a.length) {G__21935__a[G__21935__i] = arguments[G__21935__i + 0]; ++G__21935__i;}
G__21934 = new cljs.core.IndexedSeq(G__21935__a,0);
}
return hash_set__1.cljs$core$IFn$_invoke$arity$variadic(G__21934);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
hash_set.cljs$lang$maxFixedArity = 0;
hash_set.cljs$lang$applyTo = hash_set__1.cljs$lang$applyTo;
hash_set.cljs$core$IFn$_invoke$arity$0 = hash_set__0;
hash_set.cljs$core$IFn$_invoke$arity$variadic = hash_set__1.cljs$core$IFn$_invoke$arity$variadic;
return hash_set;
})()
;
/**
* Returns a new sorted set with supplied keys.
* @param {...*} var_args
*/
cljs.core.sorted_set = (function() { 
var sorted_set__delegate = function (keys){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,cljs.core.PersistentTreeSet.EMPTY,keys);
};
var sorted_set = function (var_args){
var keys = null;
if (arguments.length > 0) {
var G__21936__i = 0, G__21936__a = new Array(arguments.length -  0);
while (G__21936__i < G__21936__a.length) {G__21936__a[G__21936__i] = arguments[G__21936__i + 0]; ++G__21936__i;}
  keys = new cljs.core.IndexedSeq(G__21936__a,0);
} 
return sorted_set__delegate.call(this,keys);};
sorted_set.cljs$lang$maxFixedArity = 0;
sorted_set.cljs$lang$applyTo = (function (arglist__21937){
var keys = cljs.core.seq(arglist__21937);
return sorted_set__delegate(keys);
});
sorted_set.cljs$core$IFn$_invoke$arity$variadic = sorted_set__delegate;
return sorted_set;
})()
;
/**
* Returns a new sorted set with supplied keys, using the supplied comparator.
* @param {...*} var_args
*/
cljs.core.sorted_set_by = (function() { 
var sorted_set_by__delegate = function (comparator,keys){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,(new cljs.core.PersistentTreeSet(null,cljs.core.sorted_map_by(comparator),(0))),keys);
};
var sorted_set_by = function (comparator,var_args){
var keys = null;
if (arguments.length > 1) {
var G__21938__i = 0, G__21938__a = new Array(arguments.length -  1);
while (G__21938__i < G__21938__a.length) {G__21938__a[G__21938__i] = arguments[G__21938__i + 1]; ++G__21938__i;}
  keys = new cljs.core.IndexedSeq(G__21938__a,0);
} 
return sorted_set_by__delegate.call(this,comparator,keys);};
sorted_set_by.cljs$lang$maxFixedArity = 1;
sorted_set_by.cljs$lang$applyTo = (function (arglist__21939){
var comparator = cljs.core.first(arglist__21939);
var keys = cljs.core.rest(arglist__21939);
return sorted_set_by__delegate(comparator,keys);
});
sorted_set_by.cljs$core$IFn$_invoke$arity$variadic = sorted_set_by__delegate;
return sorted_set_by;
})()
;
/**
* Given a map of replacement pairs and a vector/collection, returns a
* vector/seq with any elements = a key in smap replaced with the
* corresponding val in smap.  Returns a transducer when no collection
* is provided.
*/
cljs.core.replace = (function() {
var replace = null;
var replace__1 = (function (smap){
return cljs.core.map.cljs$core$IFn$_invoke$arity$1((function (p1__21940_SHARP_){
var temp__4124__auto__ = cljs.core.find(smap,p1__21940_SHARP_);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
return cljs.core.val(e);
} else {
return p1__21940_SHARP_;
}
}));
});
var replace__2 = (function (smap,coll){
if(cljs.core.vector_QMARK_(coll)){
var n = cljs.core.count(coll);
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (n){
return (function (v,i){
var temp__4124__auto__ = cljs.core.find(smap,cljs.core.nth.cljs$core$IFn$_invoke$arity$2(v,i));
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(v,i,cljs.core.second(e));
} else {
return v;
}
});})(n))
,coll,cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.iterate(cljs.core.inc,(0))));
} else {
return cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (p1__21941_SHARP_){
var temp__4124__auto__ = cljs.core.find(smap,p1__21941_SHARP_);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
return cljs.core.second(e);
} else {
return p1__21941_SHARP_;
}
}),coll);
}
});
replace = function(smap,coll){
switch(arguments.length){
case 1:
return replace__1.call(this,smap);
case 2:
return replace__2.call(this,smap,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
replace.cljs$core$IFn$_invoke$arity$1 = replace__1;
replace.cljs$core$IFn$_invoke$arity$2 = replace__2;
return replace;
})()
;
/**
* Returns a lazy sequence of the elements of coll with duplicates removed
*/
cljs.core.distinct = (function() {
var distinct = null;
var distinct__0 = (function (){
return (function (rf){
var seen = cljs.core.volatile_BANG_(cljs.core.PersistentHashSet.EMPTY);
return ((function (seen){
return (function() {
var G__21962 = null;
var G__21962__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__21962__1 = (function (result){
var G__21952 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__21952) : rf.call(null,G__21952));
});
var G__21962__2 = (function (result,input){
if(cljs.core.contains_QMARK_((function (){var G__21953 = seen;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__21953) : cljs.core.deref.call(null,G__21953));
})(),input)){
return result;
} else {
seen.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(seen.cljs$core$IDeref$_deref$arity$1(null),input));

var G__21954 = result;
var G__21955 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__21954,G__21955) : rf.call(null,G__21954,G__21955));
}
});
G__21962 = function(result,input){
switch(arguments.length){
case 0:
return G__21962__0.call(this);
case 1:
return G__21962__1.call(this,result);
case 2:
return G__21962__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__21962.cljs$core$IFn$_invoke$arity$0 = G__21962__0;
G__21962.cljs$core$IFn$_invoke$arity$1 = G__21962__1;
G__21962.cljs$core$IFn$_invoke$arity$2 = G__21962__2;
return G__21962;
})()
;})(seen))
});
});
var distinct__1 = (function (coll){
var step = (function step(xs,seen){
return (new cljs.core.LazySeq(null,(function (){
return (function (p__21960,seen__$1){
while(true){
var vec__21961 = p__21960;
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21961,(0),null);
var xs__$1 = vec__21961;
var temp__4126__auto__ = cljs.core.seq(xs__$1);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.contains_QMARK_(seen__$1,f)){
var G__21963 = cljs.core.rest(s);
var G__21964 = seen__$1;
p__21960 = G__21963;
seen__$1 = G__21964;
continue;
} else {
return cljs.core.cons(f,step(cljs.core.rest(s),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(seen__$1,f)));
}
} else {
return null;
}
break;
}
}).call(null,xs,seen);
}),null,null));
});
return step(coll,cljs.core.PersistentHashSet.EMPTY);
});
distinct = function(coll){
switch(arguments.length){
case 0:
return distinct__0.call(this);
case 1:
return distinct__1.call(this,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
distinct.cljs$core$IFn$_invoke$arity$0 = distinct__0;
distinct.cljs$core$IFn$_invoke$arity$1 = distinct__1;
return distinct;
})()
;
cljs.core.butlast = (function butlast(s){
var ret = cljs.core.PersistentVector.EMPTY;
var s__$1 = s;
while(true){
if(cljs.core.next(s__$1)){
var G__21965 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(ret,cljs.core.first(s__$1));
var G__21966 = cljs.core.next(s__$1);
ret = G__21965;
s__$1 = G__21966;
continue;
} else {
return cljs.core.seq(ret);
}
break;
}
});
/**
* Returns the name String of a string, symbol or keyword.
*/
cljs.core.name = (function name(x){
if((function (){var G__21968 = x;
if(G__21968){
var bit__8178__auto__ = (G__21968.cljs$lang$protocol_mask$partition1$ & (4096));
if((bit__8178__auto__) || (G__21968.cljs$core$INamed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$INamed$_name$arity$1(null);
} else {
if(typeof x === 'string'){
return x;
} else {
throw (new Error([cljs.core.str("Doesn't support name: "),cljs.core.str(x)].join('')));
}
}
});
/**
* Returns a map with the keys mapped to the corresponding vals.
*/
cljs.core.zipmap = (function zipmap(keys,vals){
var map = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
var ks = cljs.core.seq(keys);
var vs = cljs.core.seq(vals);
while(true){
if((ks) && (vs)){
var G__21969 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(map,cljs.core.first(ks),cljs.core.first(vs));
var G__21970 = cljs.core.next(ks);
var G__21971 = cljs.core.next(vs);
map = G__21969;
ks = G__21970;
vs = G__21971;
continue;
} else {
return cljs.core.persistent_BANG_(map);
}
break;
}
});
/**
* Returns the x for which (k x), a number, is greatest.
* @param {...*} var_args
*/
cljs.core.max_key = (function() {
var max_key = null;
var max_key__2 = (function (k,x){
return x;
});
var max_key__3 = (function (k,x,y){
if(((function (){var G__21982 = x;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__21982) : k.call(null,G__21982));
})() > (function (){var G__21983 = y;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__21983) : k.call(null,G__21983));
})())){
return x;
} else {
return y;
}
});
var max_key__4 = (function() { 
var G__21984__delegate = function (k,x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__21972_SHARP_,p2__21973_SHARP_){
return max_key.cljs$core$IFn$_invoke$arity$3(k,p1__21972_SHARP_,p2__21973_SHARP_);
}),max_key.cljs$core$IFn$_invoke$arity$3(k,x,y),more);
};
var G__21984 = function (k,x,y,var_args){
var more = null;
if (arguments.length > 3) {
var G__21985__i = 0, G__21985__a = new Array(arguments.length -  3);
while (G__21985__i < G__21985__a.length) {G__21985__a[G__21985__i] = arguments[G__21985__i + 3]; ++G__21985__i;}
  more = new cljs.core.IndexedSeq(G__21985__a,0);
} 
return G__21984__delegate.call(this,k,x,y,more);};
G__21984.cljs$lang$maxFixedArity = 3;
G__21984.cljs$lang$applyTo = (function (arglist__21986){
var k = cljs.core.first(arglist__21986);
arglist__21986 = cljs.core.next(arglist__21986);
var x = cljs.core.first(arglist__21986);
arglist__21986 = cljs.core.next(arglist__21986);
var y = cljs.core.first(arglist__21986);
var more = cljs.core.rest(arglist__21986);
return G__21984__delegate(k,x,y,more);
});
G__21984.cljs$core$IFn$_invoke$arity$variadic = G__21984__delegate;
return G__21984;
})()
;
max_key = function(k,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return max_key__2.call(this,k,x);
case 3:
return max_key__3.call(this,k,x,y);
default:
var G__21987 = null;
if (arguments.length > 3) {
var G__21988__i = 0, G__21988__a = new Array(arguments.length -  3);
while (G__21988__i < G__21988__a.length) {G__21988__a[G__21988__i] = arguments[G__21988__i + 3]; ++G__21988__i;}
G__21987 = new cljs.core.IndexedSeq(G__21988__a,0);
}
return max_key__4.cljs$core$IFn$_invoke$arity$variadic(k,x,y, G__21987);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
max_key.cljs$lang$maxFixedArity = 3;
max_key.cljs$lang$applyTo = max_key__4.cljs$lang$applyTo;
max_key.cljs$core$IFn$_invoke$arity$2 = max_key__2;
max_key.cljs$core$IFn$_invoke$arity$3 = max_key__3;
max_key.cljs$core$IFn$_invoke$arity$variadic = max_key__4.cljs$core$IFn$_invoke$arity$variadic;
return max_key;
})()
;
/**
* Returns the x for which (k x), a number, is least.
* @param {...*} var_args
*/
cljs.core.min_key = (function() {
var min_key = null;
var min_key__2 = (function (k,x){
return x;
});
var min_key__3 = (function (k,x,y){
if(((function (){var G__21999 = x;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__21999) : k.call(null,G__21999));
})() < (function (){var G__22000 = y;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__22000) : k.call(null,G__22000));
})())){
return x;
} else {
return y;
}
});
var min_key__4 = (function() { 
var G__22001__delegate = function (k,x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__21989_SHARP_,p2__21990_SHARP_){
return min_key.cljs$core$IFn$_invoke$arity$3(k,p1__21989_SHARP_,p2__21990_SHARP_);
}),min_key.cljs$core$IFn$_invoke$arity$3(k,x,y),more);
};
var G__22001 = function (k,x,y,var_args){
var more = null;
if (arguments.length > 3) {
var G__22002__i = 0, G__22002__a = new Array(arguments.length -  3);
while (G__22002__i < G__22002__a.length) {G__22002__a[G__22002__i] = arguments[G__22002__i + 3]; ++G__22002__i;}
  more = new cljs.core.IndexedSeq(G__22002__a,0);
} 
return G__22001__delegate.call(this,k,x,y,more);};
G__22001.cljs$lang$maxFixedArity = 3;
G__22001.cljs$lang$applyTo = (function (arglist__22003){
var k = cljs.core.first(arglist__22003);
arglist__22003 = cljs.core.next(arglist__22003);
var x = cljs.core.first(arglist__22003);
arglist__22003 = cljs.core.next(arglist__22003);
var y = cljs.core.first(arglist__22003);
var more = cljs.core.rest(arglist__22003);
return G__22001__delegate(k,x,y,more);
});
G__22001.cljs$core$IFn$_invoke$arity$variadic = G__22001__delegate;
return G__22001;
})()
;
min_key = function(k,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return min_key__2.call(this,k,x);
case 3:
return min_key__3.call(this,k,x,y);
default:
var G__22004 = null;
if (arguments.length > 3) {
var G__22005__i = 0, G__22005__a = new Array(arguments.length -  3);
while (G__22005__i < G__22005__a.length) {G__22005__a[G__22005__i] = arguments[G__22005__i + 3]; ++G__22005__i;}
G__22004 = new cljs.core.IndexedSeq(G__22005__a,0);
}
return min_key__4.cljs$core$IFn$_invoke$arity$variadic(k,x,y, G__22004);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
min_key.cljs$lang$maxFixedArity = 3;
min_key.cljs$lang$applyTo = min_key__4.cljs$lang$applyTo;
min_key.cljs$core$IFn$_invoke$arity$2 = min_key__2;
min_key.cljs$core$IFn$_invoke$arity$3 = min_key__3;
min_key.cljs$core$IFn$_invoke$arity$variadic = min_key__4.cljs$core$IFn$_invoke$arity$variadic;
return min_key;
})()
;

/**
* @constructor
*/
cljs.core.ArrayList = (function (arr){
this.arr = arr;
})
cljs.core.ArrayList.prototype.add = (function (x){
var self__ = this;
var _ = this;
return self__.arr.push(x);
});

cljs.core.ArrayList.prototype.size = (function (){
var self__ = this;
var _ = this;
return self__.arr.length;
});

cljs.core.ArrayList.prototype.clear = (function (){
var self__ = this;
var _ = this;
return self__.arr = [];
});

cljs.core.ArrayList.prototype.isEmpty = (function (){
var self__ = this;
var _ = this;
return (self__.arr.length === (0));
});

cljs.core.ArrayList.prototype.toArray = (function (){
var self__ = this;
var _ = this;
return self__.arr;
});

cljs.core.ArrayList.cljs$lang$type = true;

cljs.core.ArrayList.cljs$lang$ctorStr = "cljs.core/ArrayList";

cljs.core.ArrayList.cljs$lang$ctorPrWriter = (function (this__8091__auto__,writer__8092__auto__,opt__8093__auto__){
return cljs.core._write(writer__8092__auto__,"cljs.core/ArrayList");
});

cljs.core.__GT_ArrayList = (function __GT_ArrayList(arr){
return (new cljs.core.ArrayList(arr));
});

cljs.core.array_list = (function array_list(){
return (new cljs.core.ArrayList([]));
});
/**
* Returns a lazy sequence of lists like partition, but may include
* partitions with fewer than n items at the end.  Returns a stateful
* transducer when no collection is provided.
*/
cljs.core.partition_all = (function() {
var partition_all = null;
var partition_all__1 = (function (n){
return (function (rf){
var a = cljs.core.array_list();
return ((function (a){
return (function() {
var G__22022 = null;
var G__22022__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__22022__1 = (function (result){
var result__$1 = (cljs.core.truth_(a.isEmpty())?result:(function (){var v = cljs.core.vec(a.toArray());
a.clear();

return cljs.core.unreduced((function (){var G__22017 = result;
var G__22018 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__22017,G__22018) : rf.call(null,G__22017,G__22018));
})());
})());
var G__22019 = result__$1;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__22019) : rf.call(null,G__22019));
});
var G__22022__2 = (function (result,input){
a.add(input);

if((n === a.size())){
var v = cljs.core.vec(a.toArray());
a.clear();

var G__22020 = result;
var G__22021 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__22020,G__22021) : rf.call(null,G__22020,G__22021));
} else {
return result;
}
});
G__22022 = function(result,input){
switch(arguments.length){
case 0:
return G__22022__0.call(this);
case 1:
return G__22022__1.call(this,result);
case 2:
return G__22022__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__22022.cljs$core$IFn$_invoke$arity$0 = G__22022__0;
G__22022.cljs$core$IFn$_invoke$arity$1 = G__22022__1;
G__22022.cljs$core$IFn$_invoke$arity$2 = G__22022__2;
return G__22022;
})()
;})(a))
});
});
var partition_all__2 = (function (n,coll){
return partition_all.cljs$core$IFn$_invoke$arity$3(n,n,coll);
});
var partition_all__3 = (function (n,step,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.cons(cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s),partition_all.cljs$core$IFn$_invoke$arity$3(n,step,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return null;
}
}),null,null));
});
partition_all = function(n,step,coll){
switch(arguments.length){
case 1:
return partition_all__1.call(this,n);
case 2:
return partition_all__2.call(this,n,step);
case 3:
return partition_all__3.call(this,n,step,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partition_all.cljs$core$IFn$_invoke$arity$1 = partition_all__1;
partition_all.cljs$core$IFn$_invoke$arity$2 = partition_all__2;
partition_all.cljs$core$IFn$_invoke$arity$3 = partition_all__3;
return partition_all;
})()
;
/**
* Returns a lazy sequence of successive items from coll while
* (pred item) returns true. pred must be free of side-effects.
* Returns a transducer when no collection is provided.
*/
cljs.core.take_while = (function() {
var take_while = null;
var take_while__1 = (function (pred){
return (function (rf){
return (function() {
var G__22035 = null;
var G__22035__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__22035__1 = (function (result){
var G__22030 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__22030) : rf.call(null,G__22030));
});
var G__22035__2 = (function (result,input){
if(cljs.core.truth_((function (){var G__22031 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__22031) : pred.call(null,G__22031));
})())){
var G__22032 = result;
var G__22033 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__22032,G__22033) : rf.call(null,G__22032,G__22033));
} else {
return cljs.core.reduced(result);
}
});
G__22035 = function(result,input){
switch(arguments.length){
case 0:
return G__22035__0.call(this);
case 1:
return G__22035__1.call(this,result);
case 2:
return G__22035__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__22035.cljs$core$IFn$_invoke$arity$0 = G__22035__0;
G__22035.cljs$core$IFn$_invoke$arity$1 = G__22035__1;
G__22035.cljs$core$IFn$_invoke$arity$2 = G__22035__2;
return G__22035;
})()
});
});
var take_while__2 = (function (pred,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.truth_((function (){var G__22034 = cljs.core.first(s);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__22034) : pred.call(null,G__22034));
})())){
return cljs.core.cons(cljs.core.first(s),take_while.cljs$core$IFn$_invoke$arity$2(pred,cljs.core.rest(s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
take_while = function(pred,coll){
switch(arguments.length){
case 1:
return take_while__1.call(this,pred);
case 2:
return take_while__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
take_while.cljs$core$IFn$_invoke$arity$1 = take_while__1;
take_while.cljs$core$IFn$_invoke$arity$2 = take_while__2;
return take_while;
})()
;
cljs.core.mk_bound_fn = (function mk_bound_fn(sc,test,key){
return (function (e){
var comp = cljs.core._comparator(sc);
var G__22040 = (function (){var G__22042 = cljs.core._entry_key(sc,e);
var G__22043 = key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__22042,G__22043) : comp.call(null,G__22042,G__22043));
})();
var G__22041 = (0);
return (test.cljs$core$IFn$_invoke$arity$2 ? test.cljs$core$IFn$_invoke$arity$2(G__22040,G__22041) : test.call(null,G__22040,G__22041));
});
});
/**
* sc must be a sorted collection, test(s) one of <, <=, > or
* >=. Returns a seq of those entries with keys ek for
* which (test (.. sc comparator (compare ek key)) 0) is true
*/
cljs.core.subseq = (function() {
var subseq = null;
var subseq__3 = (function (sc,test,key){
var include = cljs.core.mk_bound_fn(sc,test,key);
if(cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._GT_,cljs.core._GT__EQ_], true).call(null,test))){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,key,true);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__22047 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22047,(0),null);
var s = vec__22047;
if(cljs.core.truth_((function (){var G__22048 = e;
return (include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(G__22048) : include.call(null,G__22048));
})())){
return s;
} else {
return cljs.core.next(s);
}
} else {
return null;
}
} else {
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include,cljs.core._sorted_seq(sc,true));
}
});
var subseq__5 = (function (sc,start_test,start_key,end_test,end_key){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,start_key,true);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__22049 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22049,(0),null);
var s = vec__22049;
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc,end_test,end_key),(cljs.core.truth_(cljs.core.mk_bound_fn(sc,start_test,start_key).call(null,e))?s:cljs.core.next(s)));
} else {
return null;
}
});
subseq = function(sc,start_test,start_key,end_test,end_key){
switch(arguments.length){
case 3:
return subseq__3.call(this,sc,start_test,start_key);
case 5:
return subseq__5.call(this,sc,start_test,start_key,end_test,end_key);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
subseq.cljs$core$IFn$_invoke$arity$3 = subseq__3;
subseq.cljs$core$IFn$_invoke$arity$5 = subseq__5;
return subseq;
})()
;
/**
* sc must be a sorted collection, test(s) one of <, <=, > or
* >=. Returns a reverse seq of those entries with keys ek for
* which (test (.. sc comparator (compare ek key)) 0) is true
*/
cljs.core.rsubseq = (function() {
var rsubseq = null;
var rsubseq__3 = (function (sc,test,key){
var include = cljs.core.mk_bound_fn(sc,test,key);
if(cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._LT_,cljs.core._LT__EQ_], true).call(null,test))){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,key,false);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__22053 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22053,(0),null);
var s = vec__22053;
if(cljs.core.truth_((function (){var G__22054 = e;
return (include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(G__22054) : include.call(null,G__22054));
})())){
return s;
} else {
return cljs.core.next(s);
}
} else {
return null;
}
} else {
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include,cljs.core._sorted_seq(sc,false));
}
});
var rsubseq__5 = (function (sc,start_test,start_key,end_test,end_key){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,end_key,false);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__22055 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22055,(0),null);
var s = vec__22055;
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc,start_test,start_key),(cljs.core.truth_(cljs.core.mk_bound_fn(sc,end_test,end_key).call(null,e))?s:cljs.core.next(s)));
} else {
return null;
}
});
rsubseq = function(sc,start_test,start_key,end_test,end_key){
switch(arguments.length){
case 3:
return rsubseq__3.call(this,sc,start_test,start_key);
case 5:
return rsubseq__5.call(this,sc,start_test,start_key,end_test,end_key);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
rsubseq.cljs$core$IFn$_invoke$arity$3 = rsubseq__3;
rsubseq.cljs$core$IFn$_invoke$arity$5 = rsubseq__5;
return rsubseq;
})()
;

/**
* @constructor
*/
cljs.core.RangeIterator = (function (i,end,step){
this.i = i;
this.end = end;
this.step = step;
})
cljs.core.RangeIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
if((self__.step > (0))){
return (self__.i < self__.end);
} else {
return (self__.i > self__.end);
}
});

cljs.core.RangeIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = self__.i;
self__.i = (self__.i + self__.step);

return ret;
});

cljs.core.RangeIterator.cljs$lang$type = true;

cljs.core.RangeIterator.cljs$lang$ctorStr = "cljs.core/RangeIterator";

cljs.core.RangeIterator.cljs$lang$ctorPrWriter = (function (this__8091__auto__,writer__8092__auto__,opt__8093__auto__){
return cljs.core._write(writer__8092__auto__,"cljs.core/RangeIterator");
});

cljs.core.__GT_RangeIterator = (function __GT_RangeIterator(i,end,step){
return (new cljs.core.RangeIterator(i,end,step));
});


/**
* @constructor
*/
cljs.core.Range = (function (meta,start,end,step,__hash){
this.meta = meta;
this.start = start;
this.end = end;
this.step = step;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 32375006;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Range.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Range.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (rng,n){
var self__ = this;
var rng__$1 = this;
if((n < cljs.core._count(rng__$1))){
return (self__.start + (n * self__.step));
} else {
if(((self__.start > self__.end)) && ((self__.step === (0)))){
return self__.start;
} else {
throw (new Error("Index out of bounds"));
}
}
});

cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (rng,n,not_found){
var self__ = this;
var rng__$1 = this;
if((n < cljs.core._count(rng__$1))){
return (self__.start + (n * self__.step));
} else {
if(((self__.start > self__.end)) && ((self__.step === (0)))){
return self__.start;
} else {
return not_found;
}
}
});

cljs.core.Range.prototype.cljs$core$IIterable$ = true;

cljs.core.Range.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.RangeIterator(self__.start,self__.end,self__.step));
});

cljs.core.Range.prototype.cljs$core$IMeta$_meta$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
return self__.meta;
});

cljs.core.Range.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Range(self__.meta,self__.start,self__.end,self__.step,self__.__hash));
});

cljs.core.Range.prototype.cljs$core$INext$_next$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((self__.step > (0))){
if(((self__.start + self__.step) < self__.end)){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return null;
}
} else {
if(((self__.start + self__.step) > self__.end)){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return null;
}
}
});

cljs.core.Range.prototype.cljs$core$ICounted$_count$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if(cljs.core.not(cljs.core._seq(rng__$1))){
return (0);
} else {
var G__22056 = ((self__.end - self__.start) / self__.step);
return (Math.ceil.cljs$core$IFn$_invoke$arity$1 ? Math.ceil.cljs$core$IFn$_invoke$arity$1(G__22056) : Math.ceil.call(null,G__22056));
}
});

cljs.core.Range.prototype.cljs$core$IHash$_hash$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
var h__7925__auto__ = self__.__hash;
if(!((h__7925__auto__ == null))){
return h__7925__auto__;
} else {
var h__7925__auto____$1 = cljs.core.hash_ordered_coll(rng__$1);
self__.__hash = h__7925__auto____$1;

return h__7925__auto____$1;
}
});

cljs.core.Range.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (rng,other){
var self__ = this;
var rng__$1 = this;
return cljs.core.equiv_sequential(rng__$1,other);
});

cljs.core.Range.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (rng,f){
var self__ = this;
var rng__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(rng__$1,f);
});

cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (rng,f,init){
var self__ = this;
var rng__$1 = this;
var i = self__.start;
var ret = init;
while(true){
if((((self__.step > (0)))?(i < self__.end):(i > self__.end))){
var ret__$1 = (function (){var G__22057 = ret;
var G__22058 = i;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__22057,G__22058) : f.call(null,G__22057,G__22058));
})();
if(cljs.core.reduced_QMARK_(ret__$1)){
var G__22059 = ret__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__22059) : cljs.core.deref.call(null,G__22059));
} else {
var G__22060 = (i + self__.step);
var G__22061 = ret__$1;
i = G__22060;
ret = G__22061;
continue;
}
} else {
return ret;
}
break;
}
});

cljs.core.Range.prototype.cljs$core$ISeq$_first$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((cljs.core._seq(rng__$1) == null)){
return null;
} else {
return self__.start;
}
});

cljs.core.Range.prototype.cljs$core$ISeq$_rest$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if(!((cljs.core._seq(rng__$1) == null))){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.Range.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((self__.step > (0))){
if((self__.start < self__.end)){
return rng__$1;
} else {
return null;
}
} else {
if((self__.start > self__.end)){
return rng__$1;
} else {
return null;
}
}
});

cljs.core.Range.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (rng,meta__$1){
var self__ = this;
var rng__$1 = this;
return (new cljs.core.Range(meta__$1,self__.start,self__.end,self__.step,self__.__hash));
});

cljs.core.Range.prototype.cljs$core$ICollection$_conj$arity$2 = (function (rng,o){
var self__ = this;
var rng__$1 = this;
return cljs.core.cons(o,rng__$1);
});

cljs.core.Range.cljs$lang$type = true;

cljs.core.Range.cljs$lang$ctorStr = "cljs.core/Range";

cljs.core.Range.cljs$lang$ctorPrWriter = (function (this__8091__auto__,writer__8092__auto__,opt__8093__auto__){
return cljs.core._write(writer__8092__auto__,"cljs.core/Range");
});

cljs.core.__GT_Range = (function __GT_Range(meta,start,end,step,__hash){
return (new cljs.core.Range(meta,start,end,step,__hash));
});

(cljs.core.Range.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__8482__auto__ = this;
return cljs.core.es6_iterator(this__8482__auto__);
}));
/**
* Returns a lazy seq of nums from start (inclusive) to end
* (exclusive), by step, where start defaults to 0, step to 1,
* and end to infinity.
*/
cljs.core.range = (function() {
var range = null;
var range__0 = (function (){
return range.cljs$core$IFn$_invoke$arity$3((0),Number.MAX_VALUE,(1));
});
var range__1 = (function (end){
return range.cljs$core$IFn$_invoke$arity$3((0),end,(1));
});
var range__2 = (function (start,end){
return range.cljs$core$IFn$_invoke$arity$3(start,end,(1));
});
var range__3 = (function (start,end,step){
return (new cljs.core.Range(null,start,end,step,null));
});
range = function(start,end,step){
switch(arguments.length){
case 0:
return range__0.call(this);
case 1:
return range__1.call(this,start);
case 2:
return range__2.call(this,start,end);
case 3:
return range__3.call(this,start,end,step);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
range.cljs$core$IFn$_invoke$arity$0 = range__0;
range.cljs$core$IFn$_invoke$arity$1 = range__1;
range.cljs$core$IFn$_invoke$arity$2 = range__2;
range.cljs$core$IFn$_invoke$arity$3 = range__3;
return range;
})()
;
/**
* Returns a lazy seq of every nth item in coll.  Returns a stateful
* transducer when no collection is provided.
*/
cljs.core.take_nth = (function() {
var take_nth = null;
var take_nth__1 = (function (n){
return (function (rf){
var ia = cljs.core.volatile_BANG_((-1));
return ((function (ia){
return (function() {
var G__22079 = null;
var G__22079__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__22079__1 = (function (result){
var G__22076 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__22076) : rf.call(null,G__22076));
});
var G__22079__2 = (function (result,input){
var i = ia.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(ia.cljs$core$IDeref$_deref$arity$1(null) + (1)));
if((cljs.core.rem(i,n) === (0))){
var G__22077 = result;
var G__22078 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__22077,G__22078) : rf.call(null,G__22077,G__22078));
} else {
return result;
}
});
G__22079 = function(result,input){
switch(arguments.length){
case 0:
return G__22079__0.call(this);
case 1:
return G__22079__1.call(this,result);
case 2:
return G__22079__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__22079.cljs$core$IFn$_invoke$arity$0 = G__22079__0;
G__22079.cljs$core$IFn$_invoke$arity$1 = G__22079__1;
G__22079.cljs$core$IFn$_invoke$arity$2 = G__22079__2;
return G__22079;
})()
;})(ia))
});
});
var take_nth__2 = (function (n,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.cons(cljs.core.first(s),take_nth.cljs$core$IFn$_invoke$arity$2(n,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,s)));
} else {
return null;
}
}),null,null));
});
take_nth = function(n,coll){
switch(arguments.length){
case 1:
return take_nth__1.call(this,n);
case 2:
return take_nth__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
take_nth.cljs$core$IFn$_invoke$arity$1 = take_nth__1;
take_nth.cljs$core$IFn$_invoke$arity$2 = take_nth__2;
return take_nth;
})()
;
/**
* Returns a vector of [(take-while pred coll) (drop-while pred coll)]
*/
cljs.core.split_with = (function split_with(pred,coll){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(pred,coll),cljs.core.drop_while.cljs$core$IFn$_invoke$arity$2(pred,coll)], null);
});
/**
* Applies f to each value in coll, splitting it each time f returns a
* new value.  Returns a lazy seq of partitions.  Returns a stateful
* transducer when no collection is provided.
*/
cljs.core.partition_by = (function() {
var partition_by = null;
var partition_by__1 = (function (f){
return (function (rf){
var a = cljs.core.array_list();
var pa = cljs.core.volatile_BANG_(new cljs.core.Keyword("cljs.core","none","cljs.core/none",926646439));
return ((function (a,pa){
return (function() {
var G__22101 = null;
var G__22101__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__22101__1 = (function (result){
var result__$1 = (cljs.core.truth_(a.isEmpty())?result:(function (){var v = cljs.core.vec(a.toArray());
a.clear();

return cljs.core.unreduced((function (){var G__22092 = result;
var G__22093 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__22092,G__22093) : rf.call(null,G__22092,G__22093));
})());
})());
var G__22094 = result__$1;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__22094) : rf.call(null,G__22094));
});
var G__22101__2 = (function (result,input){
var pval = (function (){var G__22095 = pa;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__22095) : cljs.core.deref.call(null,G__22095));
})();
var val = (function (){var G__22096 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__22096) : f.call(null,G__22096));
})();
cljs.core.vreset_BANG_(pa,val);

if((cljs.core.keyword_identical_QMARK_(pval,new cljs.core.Keyword("cljs.core","none","cljs.core/none",926646439))) || (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(val,pval))){
a.add(input);

return result;
} else {
var v = cljs.core.vec(a.toArray());
a.clear();

var ret = (function (){var G__22097 = result;
var G__22098 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__22097,G__22098) : rf.call(null,G__22097,G__22098));
})();
if(cljs.core.reduced_QMARK_(ret)){
} else {
a.add(input);
}

return ret;
}
});
G__22101 = function(result,input){
switch(arguments.length){
case 0:
return G__22101__0.call(this);
case 1:
return G__22101__1.call(this,result);
case 2:
return G__22101__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__22101.cljs$core$IFn$_invoke$arity$0 = G__22101__0;
G__22101.cljs$core$IFn$_invoke$arity$1 = G__22101__1;
G__22101.cljs$core$IFn$_invoke$arity$2 = G__22101__2;
return G__22101;
})()
;})(a,pa))
});
});
var partition_by__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
var fst = cljs.core.first(s);
var fv = (function (){var G__22099 = fst;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__22099) : f.call(null,G__22099));
})();
var run = cljs.core.cons(fst,cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(((function (fst,fv,s,temp__4126__auto__){
return (function (p1__22080_SHARP_){
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(fv,(function (){var G__22100 = p1__22080_SHARP_;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__22100) : f.call(null,G__22100));
})());
});})(fst,fv,s,temp__4126__auto__))
,cljs.core.next(s)));
return cljs.core.cons(run,partition_by.cljs$core$IFn$_invoke$arity$2(f,cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(cljs.core.count(run),s))));
} else {
return null;
}
}),null,null));
});
partition_by = function(f,coll){
switch(arguments.length){
case 1:
return partition_by__1.call(this,f);
case 2:
return partition_by__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partition_by.cljs$core$IFn$_invoke$arity$1 = partition_by__1;
partition_by.cljs$core$IFn$_invoke$arity$2 = partition_by__2;
return partition_by;
})()
;
/**
* Returns a map from distinct items in coll to the number of times
* they appear.
*/
cljs.core.frequencies = (function frequencies(coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (counts,x){
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(counts,x,(cljs.core.get.cljs$core$IFn$_invoke$arity$3(counts,x,(0)) + (1)));
}),cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY),coll));
});
/**
* Returns a lazy seq of the intermediate values of the reduction (as
* per reduce) of coll by f, starting with init.
*/
cljs.core.reductions = (function() {
var reductions = null;
var reductions__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4124__auto__ = cljs.core.seq(coll);
if(temp__4124__auto__){
var s = temp__4124__auto__;
return reductions.cljs$core$IFn$_invoke$arity$3(f,cljs.core.first(s),cljs.core.rest(s));
} else {
return cljs.core._conj(cljs.core.List.EMPTY,(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})());
}
}),null,null));
});
var reductions__3 = (function (f,init,coll){
return cljs.core.cons(init,(new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return reductions.cljs$core$IFn$_invoke$arity$3(f,(function (){var G__22110 = init;
var G__22111 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__22110,G__22111) : f.call(null,G__22110,G__22111));
})(),cljs.core.rest(s));
} else {
return null;
}
}),null,null)));
});
reductions = function(f,init,coll){
switch(arguments.length){
case 2:
return reductions__2.call(this,f,init);
case 3:
return reductions__3.call(this,f,init,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
reductions.cljs$core$IFn$_invoke$arity$2 = reductions__2;
reductions.cljs$core$IFn$_invoke$arity$3 = reductions__3;
return reductions;
})()
;
/**
* Takes a set of functions and returns a fn that is the juxtaposition
* of those fns.  The returned fn takes a variable number of args, and
* returns a vector containing the result of applying each fn to the
* args (left-to-right).
* ((juxt a b c) x) => [(a x) (b x) (c x)]
* @param {...*} var_args
*/
cljs.core.juxt = (function() {
var juxt = null;
var juxt__1 = (function (f){
return (function() {
var G__22206 = null;
var G__22206__0 = (function (){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})()],null));
});
var G__22206__1 = (function (x){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__22164 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__22164) : f.call(null,G__22164));
})()],null));
});
var G__22206__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__22165 = x;
var G__22166 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__22165,G__22166) : f.call(null,G__22165,G__22166));
})()],null));
});
var G__22206__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__22167 = x;
var G__22168 = y;
var G__22169 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__22167,G__22168,G__22169) : f.call(null,G__22167,G__22168,G__22169));
})()],null));
});
var G__22206__4 = (function() { 
var G__22207__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args)],null));
};
var G__22207 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__22208__i = 0, G__22208__a = new Array(arguments.length -  3);
while (G__22208__i < G__22208__a.length) {G__22208__a[G__22208__i] = arguments[G__22208__i + 3]; ++G__22208__i;}
  args = new cljs.core.IndexedSeq(G__22208__a,0);
} 
return G__22207__delegate.call(this,x,y,z,args);};
G__22207.cljs$lang$maxFixedArity = 3;
G__22207.cljs$lang$applyTo = (function (arglist__22209){
var x = cljs.core.first(arglist__22209);
arglist__22209 = cljs.core.next(arglist__22209);
var y = cljs.core.first(arglist__22209);
arglist__22209 = cljs.core.next(arglist__22209);
var z = cljs.core.first(arglist__22209);
var args = cljs.core.rest(arglist__22209);
return G__22207__delegate(x,y,z,args);
});
G__22207.cljs$core$IFn$_invoke$arity$variadic = G__22207__delegate;
return G__22207;
})()
;
G__22206 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__22206__0.call(this);
case 1:
return G__22206__1.call(this,x);
case 2:
return G__22206__2.call(this,x,y);
case 3:
return G__22206__3.call(this,x,y,z);
default:
var G__22210 = null;
if (arguments.length > 3) {
var G__22211__i = 0, G__22211__a = new Array(arguments.length -  3);
while (G__22211__i < G__22211__a.length) {G__22211__a[G__22211__i] = arguments[G__22211__i + 3]; ++G__22211__i;}
G__22210 = new cljs.core.IndexedSeq(G__22211__a,0);
}
return G__22206__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__22210);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__22206.cljs$lang$maxFixedArity = 3;
G__22206.cljs$lang$applyTo = G__22206__4.cljs$lang$applyTo;
G__22206.cljs$core$IFn$_invoke$arity$0 = G__22206__0;
G__22206.cljs$core$IFn$_invoke$arity$1 = G__22206__1;
G__22206.cljs$core$IFn$_invoke$arity$2 = G__22206__2;
G__22206.cljs$core$IFn$_invoke$arity$3 = G__22206__3;
G__22206.cljs$core$IFn$_invoke$arity$variadic = G__22206__4.cljs$core$IFn$_invoke$arity$variadic;
return G__22206;
})()
});
var juxt__2 = (function (f,g){
return (function() {
var G__22212 = null;
var G__22212__0 = (function (){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),(function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})()],null));
});
var G__22212__1 = (function (x){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__22170 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__22170) : f.call(null,G__22170));
})(),(function (){var G__22171 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__22171) : g.call(null,G__22171));
})()],null));
});
var G__22212__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__22172 = x;
var G__22173 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__22172,G__22173) : f.call(null,G__22172,G__22173));
})(),(function (){var G__22174 = x;
var G__22175 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__22174,G__22175) : g.call(null,G__22174,G__22175));
})()],null));
});
var G__22212__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__22176 = x;
var G__22177 = y;
var G__22178 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__22176,G__22177,G__22178) : f.call(null,G__22176,G__22177,G__22178));
})(),(function (){var G__22179 = x;
var G__22180 = y;
var G__22181 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__22179,G__22180,G__22181) : g.call(null,G__22179,G__22180,G__22181));
})()],null));
});
var G__22212__4 = (function() { 
var G__22213__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args)],null));
};
var G__22213 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__22214__i = 0, G__22214__a = new Array(arguments.length -  3);
while (G__22214__i < G__22214__a.length) {G__22214__a[G__22214__i] = arguments[G__22214__i + 3]; ++G__22214__i;}
  args = new cljs.core.IndexedSeq(G__22214__a,0);
} 
return G__22213__delegate.call(this,x,y,z,args);};
G__22213.cljs$lang$maxFixedArity = 3;
G__22213.cljs$lang$applyTo = (function (arglist__22215){
var x = cljs.core.first(arglist__22215);
arglist__22215 = cljs.core.next(arglist__22215);
var y = cljs.core.first(arglist__22215);
arglist__22215 = cljs.core.next(arglist__22215);
var z = cljs.core.first(arglist__22215);
var args = cljs.core.rest(arglist__22215);
return G__22213__delegate(x,y,z,args);
});
G__22213.cljs$core$IFn$_invoke$arity$variadic = G__22213__delegate;
return G__22213;
})()
;
G__22212 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__22212__0.call(this);
case 1:
return G__22212__1.call(this,x);
case 2:
return G__22212__2.call(this,x,y);
case 3:
return G__22212__3.call(this,x,y,z);
default:
var G__22216 = null;
if (arguments.length > 3) {
var G__22217__i = 0, G__22217__a = new Array(arguments.length -  3);
while (G__22217__i < G__22217__a.length) {G__22217__a[G__22217__i] = arguments[G__22217__i + 3]; ++G__22217__i;}
G__22216 = new cljs.core.IndexedSeq(G__22217__a,0);
}
return G__22212__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__22216);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__22212.cljs$lang$maxFixedArity = 3;
G__22212.cljs$lang$applyTo = G__22212__4.cljs$lang$applyTo;
G__22212.cljs$core$IFn$_invoke$arity$0 = G__22212__0;
G__22212.cljs$core$IFn$_invoke$arity$1 = G__22212__1;
G__22212.cljs$core$IFn$_invoke$arity$2 = G__22212__2;
G__22212.cljs$core$IFn$_invoke$arity$3 = G__22212__3;
G__22212.cljs$core$IFn$_invoke$arity$variadic = G__22212__4.cljs$core$IFn$_invoke$arity$variadic;
return G__22212;
})()
});
var juxt__3 = (function (f,g,h){
return (function() {
var G__22218 = null;
var G__22218__0 = (function (){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),(function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})(),(function (){return (h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null));
})()],null));
});
var G__22218__1 = (function (x){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__22182 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__22182) : f.call(null,G__22182));
})(),(function (){var G__22183 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__22183) : g.call(null,G__22183));
})(),(function (){var G__22184 = x;
return (h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(G__22184) : h.call(null,G__22184));
})()],null));
});
var G__22218__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__22185 = x;
var G__22186 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__22185,G__22186) : f.call(null,G__22185,G__22186));
})(),(function (){var G__22187 = x;
var G__22188 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__22187,G__22188) : g.call(null,G__22187,G__22188));
})(),(function (){var G__22189 = x;
var G__22190 = y;
return (h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(G__22189,G__22190) : h.call(null,G__22189,G__22190));
})()],null));
});
var G__22218__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__22191 = x;
var G__22192 = y;
var G__22193 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__22191,G__22192,G__22193) : f.call(null,G__22191,G__22192,G__22193));
})(),(function (){var G__22194 = x;
var G__22195 = y;
var G__22196 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__22194,G__22195,G__22196) : g.call(null,G__22194,G__22195,G__22196));
})(),(function (){var G__22197 = x;
var G__22198 = y;
var G__22199 = z;
return (h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(G__22197,G__22198,G__22199) : h.call(null,G__22197,G__22198,G__22199));
})()],null));
});
var G__22218__4 = (function() { 
var G__22219__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h,x,y,z,args)],null));
};
var G__22219 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__22220__i = 0, G__22220__a = new Array(arguments.length -  3);
while (G__22220__i < G__22220__a.length) {G__22220__a[G__22220__i] = arguments[G__22220__i + 3]; ++G__22220__i;}
  args = new cljs.core.IndexedSeq(G__22220__a,0);
} 
return G__22219__delegate.call(this,x,y,z,args);};
G__22219.cljs$lang$maxFixedArity = 3;
G__22219.cljs$lang$applyTo = (function (arglist__22221){
var x = cljs.core.first(arglist__22221);
arglist__22221 = cljs.core.next(arglist__22221);
var y = cljs.core.first(arglist__22221);
arglist__22221 = cljs.core.next(arglist__22221);
var z = cljs.core.first(arglist__22221);
var args = cljs.core.rest(arglist__22221);
return G__22219__delegate(x,y,z,args);
});
G__22219.cljs$core$IFn$_invoke$arity$variadic = G__22219__delegate;
return G__22219;
})()
;
G__22218 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__22218__0.call(this);
case 1:
return G__22218__1.call(this,x);
case 2:
return G__22218__2.call(this,x,y);
case 3:
return G__22218__3.call(this,x,y,z);
default:
var G__22222 = null;
if (arguments.length > 3) {
var G__22223__i = 0, G__22223__a = new Array(arguments.length -  3);
while (G__22223__i < G__22223__a.length) {G__22223__a[G__22223__i] = arguments[G__22223__i + 3]; ++G__22223__i;}
G__22222 = new cljs.core.IndexedSeq(G__22223__a,0);
}
return G__22218__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__22222);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__22218.cljs$lang$maxFixedArity = 3;
G__22218.cljs$lang$applyTo = G__22218__4.cljs$lang$applyTo;
G__22218.cljs$core$IFn$_invoke$arity$0 = G__22218__0;
G__22218.cljs$core$IFn$_invoke$arity$1 = G__22218__1;
G__22218.cljs$core$IFn$_invoke$arity$2 = G__22218__2;
G__22218.cljs$core$IFn$_invoke$arity$3 = G__22218__3;
G__22218.cljs$core$IFn$_invoke$arity$variadic = G__22218__4.cljs$core$IFn$_invoke$arity$variadic;
return G__22218;
})()
});
var juxt__4 = (function() { 
var G__22224__delegate = function (f,g,h,fs){
var fs__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f,g,h,fs);
return ((function (fs__$1){
return (function() {
var G__22225 = null;
var G__22225__0 = (function (){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__22112_SHARP_,p2__22113_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__22112_SHARP_,(function (){return (p2__22113_SHARP_.cljs$core$IFn$_invoke$arity$0 ? p2__22113_SHARP_.cljs$core$IFn$_invoke$arity$0() : p2__22113_SHARP_.call(null));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__22225__1 = (function (x){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__22114_SHARP_,p2__22115_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__22114_SHARP_,(function (){var G__22200 = x;
return (p2__22115_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p2__22115_SHARP_.cljs$core$IFn$_invoke$arity$1(G__22200) : p2__22115_SHARP_.call(null,G__22200));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__22225__2 = (function (x,y){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__22116_SHARP_,p2__22117_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__22116_SHARP_,(function (){var G__22201 = x;
var G__22202 = y;
return (p2__22117_SHARP_.cljs$core$IFn$_invoke$arity$2 ? p2__22117_SHARP_.cljs$core$IFn$_invoke$arity$2(G__22201,G__22202) : p2__22117_SHARP_.call(null,G__22201,G__22202));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__22225__3 = (function (x,y,z){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__22118_SHARP_,p2__22119_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__22118_SHARP_,(function (){var G__22203 = x;
var G__22204 = y;
var G__22205 = z;
return (p2__22119_SHARP_.cljs$core$IFn$_invoke$arity$3 ? p2__22119_SHARP_.cljs$core$IFn$_invoke$arity$3(G__22203,G__22204,G__22205) : p2__22119_SHARP_.call(null,G__22203,G__22204,G__22205));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__22225__4 = (function() { 
var G__22226__delegate = function (x,y,z,args){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__22120_SHARP_,p2__22121_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__22120_SHARP_,cljs.core.apply.cljs$core$IFn$_invoke$arity$5(p2__22121_SHARP_,x,y,z,args));
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
};
var G__22226 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__22227__i = 0, G__22227__a = new Array(arguments.length -  3);
while (G__22227__i < G__22227__a.length) {G__22227__a[G__22227__i] = arguments[G__22227__i + 3]; ++G__22227__i;}
  args = new cljs.core.IndexedSeq(G__22227__a,0);
} 
return G__22226__delegate.call(this,x,y,z,args);};
G__22226.cljs$lang$maxFixedArity = 3;
G__22226.cljs$lang$applyTo = (function (arglist__22228){
var x = cljs.core.first(arglist__22228);
arglist__22228 = cljs.core.next(arglist__22228);
var y = cljs.core.first(arglist__22228);
arglist__22228 = cljs.core.next(arglist__22228);
var z = cljs.core.first(arglist__22228);
var args = cljs.core.rest(arglist__22228);
return G__22226__delegate(x,y,z,args);
});
G__22226.cljs$core$IFn$_invoke$arity$variadic = G__22226__delegate;
return G__22226;
})()
;
G__22225 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__22225__0.call(this);
case 1:
return G__22225__1.call(this,x);
case 2:
return G__22225__2.call(this,x,y);
case 3:
return G__22225__3.call(this,x,y,z);
default:
var G__22229 = null;
if (arguments.length > 3) {
var G__22230__i = 0, G__22230__a = new Array(arguments.length -  3);
while (G__22230__i < G__22230__a.length) {G__22230__a[G__22230__i] = arguments[G__22230__i + 3]; ++G__22230__i;}
G__22229 = new cljs.core.IndexedSeq(G__22230__a,0);
}
return G__22225__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__22229);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__22225.cljs$lang$maxFixedArity = 3;
G__22225.cljs$lang$applyTo = G__22225__4.cljs$lang$applyTo;
G__22225.cljs$core$IFn$_invoke$arity$0 = G__22225__0;
G__22225.cljs$core$IFn$_invoke$arity$1 = G__22225__1;
G__22225.cljs$core$IFn$_invoke$arity$2 = G__22225__2;
G__22225.cljs$core$IFn$_invoke$arity$3 = G__22225__3;
G__22225.cljs$core$IFn$_invoke$arity$variadic = G__22225__4.cljs$core$IFn$_invoke$arity$variadic;
return G__22225;
})()
;})(fs__$1))
};
var G__22224 = function (f,g,h,var_args){
var fs = null;
if (arguments.length > 3) {
var G__22231__i = 0, G__22231__a = new Array(arguments.length -  3);
while (G__22231__i < G__22231__a.length) {G__22231__a[G__22231__i] = arguments[G__22231__i + 3]; ++G__22231__i;}
  fs = new cljs.core.IndexedSeq(G__22231__a,0);
} 
return G__22224__delegate.call(this,f,g,h,fs);};
G__22224.cljs$lang$maxFixedArity = 3;
G__22224.cljs$lang$applyTo = (function (arglist__22232){
var f = cljs.core.first(arglist__22232);
arglist__22232 = cljs.core.next(arglist__22232);
var g = cljs.core.first(arglist__22232);
arglist__22232 = cljs.core.next(arglist__22232);
var h = cljs.core.first(arglist__22232);
var fs = cljs.core.rest(arglist__22232);
return G__22224__delegate(f,g,h,fs);
});
G__22224.cljs$core$IFn$_invoke$arity$variadic = G__22224__delegate;
return G__22224;
})()
;
juxt = function(f,g,h,var_args){
var fs = var_args;
switch(arguments.length){
case 1:
return juxt__1.call(this,f);
case 2:
return juxt__2.call(this,f,g);
case 3:
return juxt__3.call(this,f,g,h);
default:
var G__22233 = null;
if (arguments.length > 3) {
var G__22234__i = 0, G__22234__a = new Array(arguments.length -  3);
while (G__22234__i < G__22234__a.length) {G__22234__a[G__22234__i] = arguments[G__22234__i + 3]; ++G__22234__i;}
G__22233 = new cljs.core.IndexedSeq(G__22234__a,0);
}
return juxt__4.cljs$core$IFn$_invoke$arity$variadic(f,g,h, G__22233);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
juxt.cljs$lang$maxFixedArity = 3;
juxt.cljs$lang$applyTo = juxt__4.cljs$lang$applyTo;
juxt.cljs$core$IFn$_invoke$arity$1 = juxt__1;
juxt.cljs$core$IFn$_invoke$arity$2 = juxt__2;
juxt.cljs$core$IFn$_invoke$arity$3 = juxt__3;
juxt.cljs$core$IFn$_invoke$arity$variadic = juxt__4.cljs$core$IFn$_invoke$arity$variadic;
return juxt;
})()
;
/**
* When lazy sequences are produced via functions that have side
* effects, any effects other than those needed to produce the first
* element in the seq do not occur until the seq is consumed. dorun can
* be used to force any effects. Walks through the successive nexts of
* the seq, does not retain the head and returns nil.
*/
cljs.core.dorun = (function() {
var dorun = null;
var dorun__1 = (function (coll){
while(true){
if(cljs.core.seq(coll)){
var G__22235 = cljs.core.next(coll);
coll = G__22235;
continue;
} else {
return null;
}
break;
}
});
var dorun__2 = (function (n,coll){
while(true){
if((cljs.core.seq(coll)) && ((n > (0)))){
var G__22236 = (n - (1));
var G__22237 = cljs.core.next(coll);
n = G__22236;
coll = G__22237;
continue;
} else {
return null;
}
break;
}
});
dorun = function(n,coll){
switch(arguments.length){
case 1:
return dorun__1.call(this,n);
case 2:
return dorun__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dorun.cljs$core$IFn$_invoke$arity$1 = dorun__1;
dorun.cljs$core$IFn$_invoke$arity$2 = dorun__2;
return dorun;
})()
;
/**
* When lazy sequences are produced via functions that have side
* effects, any effects other than those needed to produce the first
* element in the seq do not occur until the seq is consumed. doall can
* be used to force any effects. Walks through the successive nexts of
* the seq, retains the head and returns it, thus causing the entire
* seq to reside in memory at one time.
*/
cljs.core.doall = (function() {
var doall = null;
var doall__1 = (function (coll){
cljs.core.dorun.cljs$core$IFn$_invoke$arity$1(coll);

return coll;
});
var doall__2 = (function (n,coll){
cljs.core.dorun.cljs$core$IFn$_invoke$arity$2(n,coll);

return coll;
});
doall = function(n,coll){
switch(arguments.length){
case 1:
return doall__1.call(this,n);
case 2:
return doall__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
doall.cljs$core$IFn$_invoke$arity$1 = doall__1;
doall.cljs$core$IFn$_invoke$arity$2 = doall__2;
return doall;
})()
;
cljs.core.regexp_QMARK_ = (function regexp_QMARK_(o){
return (o instanceof RegExp);
});
/**
* Returns the result of (re-find re s) if re fully matches s.
*/
cljs.core.re_matches = (function re_matches(re,s){
if(typeof s === 'string'){
var matches = re.exec(s);
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(matches),s)){
if((cljs.core.count(matches) === (1))){
return cljs.core.first(matches);
} else {
return cljs.core.vec(matches);
}
} else {
return null;
}
} else {
throw (new TypeError("re-matches must match against a string."));
}
});
/**
* Returns the first regex match, if any, of s to re, using
* re.exec(s). Returns a vector, containing first the matching
* substring, then any capturing groups if the regular expression contains
* capturing groups.
*/
cljs.core.re_find = (function re_find(re,s){
if(typeof s === 'string'){
var matches = re.exec(s);
if((matches == null)){
return null;
} else {
if((cljs.core.count(matches) === (1))){
return cljs.core.first(matches);
} else {
return cljs.core.vec(matches);
}
}
} else {
throw (new TypeError("re-find must match against a string."));
}
});
/**
* Returns a lazy sequence of successive matches of re in s.
*/
cljs.core.re_seq = (function re_seq(re,s){
var match_data = cljs.core.re_find(re,s);
var match_idx = s.search(re);
var match_str = ((cljs.core.coll_QMARK_(match_data))?cljs.core.first(match_data):match_data);
var post_match = cljs.core.subs.cljs$core$IFn$_invoke$arity$2(s,(match_idx + cljs.core.count(match_str)));
if(cljs.core.truth_(match_data)){
return (new cljs.core.LazySeq(null,((function (match_data,match_idx,match_str,post_match){
return (function (){
return cljs.core.cons(match_data,((cljs.core.seq(post_match))?re_seq(re,post_match):null));
});})(match_data,match_idx,match_str,post_match))
,null,null));
} else {
return null;
}
});
/**
* Returns an instance of RegExp which has compiled the provided string.
*/
cljs.core.re_pattern = (function re_pattern(s){
if((s instanceof RegExp)){
return s;
} else {
var vec__22241 = cljs.core.re_find(/^(?:\(\?([idmsux]*)\))?(.*)/,s);
var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22241,(0),null);
var flags = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22241,(1),null);
var pattern = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22241,(2),null);
return (new RegExp(pattern,flags));
}
});
cljs.core.pr_sequential_writer = (function pr_sequential_writer(writer,print_one,begin,sep,end,opts,coll){
var _STAR_print_level_STAR_22249 = cljs.core._STAR_print_level_STAR_;
cljs.core._STAR_print_level_STAR_ = (((cljs.core._STAR_print_level_STAR_ == null))?null:(cljs.core._STAR_print_level_STAR_ - (1)));

try{if((!((cljs.core._STAR_print_level_STAR_ == null))) && ((cljs.core._STAR_print_level_STAR_ < (0)))){
return cljs.core._write(writer,"#");
} else {
cljs.core._write(writer,begin);

if((new cljs.core.Keyword(null,"print-length","print-length",1931866356).cljs$core$IFn$_invoke$arity$1(opts) === (0))){
if(cljs.core.seq(coll)){
cljs.core._write(writer,(function (){var or__7504__auto__ = new cljs.core.Keyword(null,"more-marker","more-marker",-14717935).cljs$core$IFn$_invoke$arity$1(opts);
if(cljs.core.truth_(or__7504__auto__)){
return or__7504__auto__;
} else {
return "...";
}
})());
} else {
}
} else {
if(cljs.core.seq(coll)){
var G__22250_22256 = cljs.core.first(coll);
var G__22251_22257 = writer;
var G__22252_22258 = opts;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__22250_22256,G__22251_22257,G__22252_22258) : print_one.call(null,G__22250_22256,G__22251_22257,G__22252_22258));
} else {
}

var coll_22259__$1 = cljs.core.next(coll);
var n_22260 = (new cljs.core.Keyword(null,"print-length","print-length",1931866356).cljs$core$IFn$_invoke$arity$1(opts) - (1));
while(true){
if((coll_22259__$1) && (((n_22260 == null)) || (!((n_22260 === (0)))))){
cljs.core._write(writer,sep);

var G__22253_22261 = cljs.core.first(coll_22259__$1);
var G__22254_22262 = writer;
var G__22255_22263 = opts;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__22253_22261,G__22254_22262,G__22255_22263) : print_one.call(null,G__22253_22261,G__22254_22262,G__22255_22263));

var G__22264 = cljs.core.next(coll_22259__$1);
var G__22265 = (n_22260 - (1));
coll_22259__$1 = G__22264;
n_22260 = G__22265;
continue;
} else {
if((cljs.core.seq(coll_22259__$1)) && ((n_22260 === (0)))){
cljs.core._write(writer,sep);

cljs.core._write(writer,(function (){var or__7504__auto__ = new cljs.core.Keyword(null,"more-marker","more-marker",-14717935).cljs$core$IFn$_invoke$arity$1(opts);
if(cljs.core.truth_(or__7504__auto__)){
return or__7504__auto__;
} else {
return "...";
}
})());
} else {
}
}
break;
}
}

return cljs.core._write(writer,end);
}
}finally {cljs.core._STAR_print_level_STAR_ = _STAR_print_level_STAR_22249;
}});
/**
* @param {...*} var_args
*/
cljs.core.write_all = (function() { 
var write_all__delegate = function (writer,ss){
var seq__22270 = cljs.core.seq(ss);
var chunk__22271 = null;
var count__22272 = (0);
var i__22273 = (0);
while(true){
if((i__22273 < count__22272)){
var s = chunk__22271.cljs$core$IIndexed$_nth$arity$2(null,i__22273);
cljs.core._write(writer,s);

var G__22274 = seq__22270;
var G__22275 = chunk__22271;
var G__22276 = count__22272;
var G__22277 = (i__22273 + (1));
seq__22270 = G__22274;
chunk__22271 = G__22275;
count__22272 = G__22276;
i__22273 = G__22277;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__22270);
if(temp__4126__auto__){
var seq__22270__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__22270__$1)){
var c__8291__auto__ = cljs.core.chunk_first(seq__22270__$1);
var G__22278 = cljs.core.chunk_rest(seq__22270__$1);
var G__22279 = c__8291__auto__;
var G__22280 = cljs.core.count(c__8291__auto__);
var G__22281 = (0);
seq__22270 = G__22278;
chunk__22271 = G__22279;
count__22272 = G__22280;
i__22273 = G__22281;
continue;
} else {
var s = cljs.core.first(seq__22270__$1);
cljs.core._write(writer,s);

var G__22282 = cljs.core.next(seq__22270__$1);
var G__22283 = null;
var G__22284 = (0);
var G__22285 = (0);
seq__22270 = G__22282;
chunk__22271 = G__22283;
count__22272 = G__22284;
i__22273 = G__22285;
continue;
}
} else {
return null;
}
}
break;
}
};
var write_all = function (writer,var_args){
var ss = null;
if (arguments.length > 1) {
var G__22286__i = 0, G__22286__a = new Array(arguments.length -  1);
while (G__22286__i < G__22286__a.length) {G__22286__a[G__22286__i] = arguments[G__22286__i + 1]; ++G__22286__i;}
  ss = new cljs.core.IndexedSeq(G__22286__a,0);
} 
return write_all__delegate.call(this,writer,ss);};
write_all.cljs$lang$maxFixedArity = 1;
write_all.cljs$lang$applyTo = (function (arglist__22287){
var writer = cljs.core.first(arglist__22287);
var ss = cljs.core.rest(arglist__22287);
return write_all__delegate(writer,ss);
});
write_all.cljs$core$IFn$_invoke$arity$variadic = write_all__delegate;
return write_all;
})()
;
cljs.core.string_print = (function string_print(x){
(cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1 ? cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1(x) : cljs.core._STAR_print_fn_STAR_.call(null,x));

return null;
});
cljs.core.flush = (function flush(){
return null;
});
cljs.core.char_escapes = (function (){var obj22289 = {"\"":"\\\"","\\":"\\\\","\b":"\\b","\f":"\\f","\n":"\\n","\r":"\\r","\t":"\\t"};
return obj22289;
})();
cljs.core.quote_string = (function quote_string(s){
return [cljs.core.str("\""),cljs.core.str(s.replace((function (){var G__22292 = "[\\\\\"\b\f\n\r\t]";
var G__22293 = "g";
return RegExp(G__22292,G__22293);
})(),(function (match){
return (cljs.core.char_escapes[match]);
}))),cljs.core.str("\"")].join('');
});
cljs.core.pr_writer_impl = (function pr_writer_impl(obj,writer,opts){
if((obj == null)){
return cljs.core._write(writer,"nil");
} else {
if((void 0 === obj)){
return cljs.core._write(writer,"#<undefined>");
} else {
if(cljs.core.truth_((function (){var and__7492__auto__ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts,new cljs.core.Keyword(null,"meta","meta",1499536964));
if(cljs.core.truth_(and__7492__auto__)){
var and__7492__auto____$1 = (function (){var G__22307 = obj;
if(G__22307){
var bit__8185__auto__ = (G__22307.cljs$lang$protocol_mask$partition0$ & (131072));
if((bit__8185__auto__) || (G__22307.cljs$core$IMeta$)){
return true;
} else {
if((!G__22307.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__22307);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__22307);
}
})();
if(and__7492__auto____$1){
return cljs.core.meta(obj);
} else {
return and__7492__auto____$1;
}
} else {
return and__7492__auto__;
}
})())){
cljs.core._write(writer,"^");

var G__22308_22318 = cljs.core.meta(obj);
var G__22309_22319 = writer;
var G__22310_22320 = opts;
(cljs.core.pr_writer.cljs$core$IFn$_invoke$arity$3 ? cljs.core.pr_writer.cljs$core$IFn$_invoke$arity$3(G__22308_22318,G__22309_22319,G__22310_22320) : cljs.core.pr_writer.call(null,G__22308_22318,G__22309_22319,G__22310_22320));

cljs.core._write(writer," ");
} else {
}

if((obj == null)){
return cljs.core._write(writer,"nil");
} else {
if(obj.cljs$lang$type){
return obj.cljs$lang$ctorPrWriter(obj,writer,opts);
} else {
if((function (){var G__22311 = obj;
if(G__22311){
var bit__8178__auto__ = (G__22311.cljs$lang$protocol_mask$partition0$ & (2147483648));
if((bit__8178__auto__) || (G__22311.cljs$core$IPrintWithWriter$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null,writer,opts);
} else {
if(((cljs.core.type(obj) === Boolean)) || (typeof obj === 'number')){
return cljs.core._write(writer,[cljs.core.str(obj)].join(''));
} else {
if(cljs.core.object_QMARK_(obj)){
cljs.core._write(writer,"#js ");

var G__22312 = cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (k){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.cljs$core$IFn$_invoke$arity$1(k),(obj[k])], null);
}),cljs.core.js_keys(obj));
var G__22313 = cljs.core.pr_writer;
var G__22314 = writer;
var G__22315 = opts;
return (cljs.core.print_map.cljs$core$IFn$_invoke$arity$4 ? cljs.core.print_map.cljs$core$IFn$_invoke$arity$4(G__22312,G__22313,G__22314,G__22315) : cljs.core.print_map.call(null,G__22312,G__22313,G__22314,G__22315));
} else {
if(obj instanceof Array){
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#js ["," ","]",opts,obj);
} else {
if(cljs.core.truth_((function (){var G__22316 = obj;
return goog.isString(G__22316);
})())){
if(cljs.core.truth_(new cljs.core.Keyword(null,"readably","readably",1129599760).cljs$core$IFn$_invoke$arity$1(opts))){
return cljs.core._write(writer,cljs.core.quote_string(obj));
} else {
return cljs.core._write(writer,obj);
}
} else {
if(cljs.core.fn_QMARK_(obj)){
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#<",[cljs.core.str(obj)].join(''),">"], 0));
} else {
if((obj instanceof Date)){
var normalize = (function (n,len){
var ns = [cljs.core.str(n)].join('');
while(true){
if((cljs.core.count(ns) < len)){
var G__22321 = [cljs.core.str("0"),cljs.core.str(ns)].join('');
ns = G__22321;
continue;
} else {
return ns;
}
break;
}
});
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#inst \"",[cljs.core.str(obj.getUTCFullYear())].join(''),"-",normalize((obj.getUTCMonth() + (1)),(2)),"-",normalize(obj.getUTCDate(),(2)),"T",normalize(obj.getUTCHours(),(2)),":",normalize(obj.getUTCMinutes(),(2)),":",normalize(obj.getUTCSeconds(),(2)),".",normalize(obj.getUTCMilliseconds(),(3)),"-","00:00\""], 0));
} else {
if(cljs.core.regexp_QMARK_(obj)){
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#\"",obj.source,"\""], 0));
} else {
if((function (){var G__22317 = obj;
if(G__22317){
var bit__8185__auto__ = (G__22317.cljs$lang$protocol_mask$partition0$ & (2147483648));
if((bit__8185__auto__) || (G__22317.cljs$core$IPrintWithWriter$)){
return true;
} else {
if((!G__22317.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IPrintWithWriter,G__22317);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IPrintWithWriter,G__22317);
}
})()){
return cljs.core._pr_writer(obj,writer,opts);
} else {
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#<",[cljs.core.str(obj)].join(''),">"], 0));

}
}
}
}
}
}
}
}
}
}
}

}
}
});
/**
* Prefer this to pr-seq, because it makes the printing function
* configurable, allowing efficient implementations such as appending
* to a StringBuffer.
*/
cljs.core.pr_writer = (function pr_writer(obj,writer,opts){
var temp__4124__auto__ = new cljs.core.Keyword(null,"alt-impl","alt-impl",670969595).cljs$core$IFn$_invoke$arity$1(opts);
if(cljs.core.truth_(temp__4124__auto__)){
var alt_impl = temp__4124__auto__;
var G__22325 = obj;
var G__22326 = writer;
var G__22327 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(opts,new cljs.core.Keyword(null,"fallback-impl","fallback-impl",-1501286995),cljs.core.pr_writer_impl);
return (alt_impl.cljs$core$IFn$_invoke$arity$3 ? alt_impl.cljs$core$IFn$_invoke$arity$3(G__22325,G__22326,G__22327) : alt_impl.call(null,G__22325,G__22326,G__22327));
} else {
return cljs.core.pr_writer_impl(obj,writer,opts);
}
});
cljs.core.pr_seq_writer = (function pr_seq_writer(objs,writer,opts){
cljs.core.pr_writer(cljs.core.first(objs),writer,opts);

var seq__22332 = cljs.core.seq(cljs.core.next(objs));
var chunk__22333 = null;
var count__22334 = (0);
var i__22335 = (0);
while(true){
if((i__22335 < count__22334)){
var obj = chunk__22333.cljs$core$IIndexed$_nth$arity$2(null,i__22335);
cljs.core._write(writer," ");

cljs.core.pr_writer(obj,writer,opts);

var G__22336 = seq__22332;
var G__22337 = chunk__22333;
var G__22338 = count__22334;
var G__22339 = (i__22335 + (1));
seq__22332 = G__22336;
chunk__22333 = G__22337;
count__22334 = G__22338;
i__22335 = G__22339;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__22332);
if(temp__4126__auto__){
var seq__22332__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__22332__$1)){
var c__8291__auto__ = cljs.core.chunk_first(seq__22332__$1);
var G__22340 = cljs.core.chunk_rest(seq__22332__$1);
var G__22341 = c__8291__auto__;
var G__22342 = cljs.core.count(c__8291__auto__);
var G__22343 = (0);
seq__22332 = G__22340;
chunk__22333 = G__22341;
count__22334 = G__22342;
i__22335 = G__22343;
continue;
} else {
var obj = cljs.core.first(seq__22332__$1);
cljs.core._write(writer," ");

cljs.core.pr_writer(obj,writer,opts);

var G__22344 = cljs.core.next(seq__22332__$1);
var G__22345 = null;
var G__22346 = (0);
var G__22347 = (0);
seq__22332 = G__22344;
chunk__22333 = G__22345;
count__22334 = G__22346;
i__22335 = G__22347;
continue;
}
} else {
return null;
}
}
break;
}
});
cljs.core.pr_sb_with_opts = (function pr_sb_with_opts(objs,opts){
var sb = (new goog.string.StringBuffer());
var writer = (new cljs.core.StringBufferWriter(sb));
cljs.core.pr_seq_writer(objs,writer,opts);

writer.cljs$core$IWriter$_flush$arity$1(null);

return sb;
});
/**
* Prints a sequence of objects to a string, observing all the
* options given in opts
*/
cljs.core.pr_str_with_opts = (function pr_str_with_opts(objs,opts){
if(cljs.core.empty_QMARK_(objs)){
return "";
} else {
return [cljs.core.str(cljs.core.pr_sb_with_opts(objs,opts))].join('');
}
});
/**
* Same as pr-str-with-opts followed by (newline)
*/
cljs.core.prn_str_with_opts = (function prn_str_with_opts(objs,opts){
if(cljs.core.empty_QMARK_(objs)){
return "\n";
} else {
var sb = cljs.core.pr_sb_with_opts(objs,opts);
sb.append("\n");

return [cljs.core.str(sb)].join('');
}
});
/**
* Prints a sequence of objects using string-print, observing all
* the options given in opts
*/
cljs.core.pr_with_opts = (function pr_with_opts(objs,opts){
return cljs.core.string_print(cljs.core.pr_str_with_opts(objs,opts));
});
cljs.core.newline = (function newline(opts){
cljs.core.string_print("\n");

if(cljs.core.truth_(cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts,new cljs.core.Keyword(null,"flush-on-newline","flush-on-newline",-151457939)))){
return cljs.core.flush();
} else {
return null;
}
});
/**
* pr to a string, returning it. Fundamental entrypoint to IPrintWithWriter.
* @param {...*} var_args
*/
cljs.core.pr_str = (function() { 
var pr_str__delegate = function (objs){
return cljs.core.pr_str_with_opts(objs,cljs.core.pr_opts());
};
var pr_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__22348__i = 0, G__22348__a = new Array(arguments.length -  0);
while (G__22348__i < G__22348__a.length) {G__22348__a[G__22348__i] = arguments[G__22348__i + 0]; ++G__22348__i;}
  objs = new cljs.core.IndexedSeq(G__22348__a,0);
} 
return pr_str__delegate.call(this,objs);};
pr_str.cljs$lang$maxFixedArity = 0;
pr_str.cljs$lang$applyTo = (function (arglist__22349){
var objs = cljs.core.seq(arglist__22349);
return pr_str__delegate(objs);
});
pr_str.cljs$core$IFn$_invoke$arity$variadic = pr_str__delegate;
return pr_str;
})()
;
/**
* Same as pr-str followed by (newline)
* @param {...*} var_args
*/
cljs.core.prn_str = (function() { 
var prn_str__delegate = function (objs){
return cljs.core.prn_str_with_opts(objs,cljs.core.pr_opts());
};
var prn_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__22350__i = 0, G__22350__a = new Array(arguments.length -  0);
while (G__22350__i < G__22350__a.length) {G__22350__a[G__22350__i] = arguments[G__22350__i + 0]; ++G__22350__i;}
  objs = new cljs.core.IndexedSeq(G__22350__a,0);
} 
return prn_str__delegate.call(this,objs);};
prn_str.cljs$lang$maxFixedArity = 0;
prn_str.cljs$lang$applyTo = (function (arglist__22351){
var objs = cljs.core.seq(arglist__22351);
return prn_str__delegate(objs);
});
prn_str.cljs$core$IFn$_invoke$arity$variadic = prn_str__delegate;
return prn_str;
})()
;
/**
* Prints the object(s) using string-print.  Prints the
* object(s), separated by spaces if there is more than one.
* By default, pr and prn print in a way that objects can be
* read by the reader
* @param {...*} var_args
*/
cljs.core.pr = (function() { 
var pr__delegate = function (objs){
return cljs.core.pr_with_opts(objs,cljs.core.pr_opts());
};
var pr = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__22352__i = 0, G__22352__a = new Array(arguments.length -  0);
while (G__22352__i < G__22352__a.length) {G__22352__a[G__22352__i] = arguments[G__22352__i + 0]; ++G__22352__i;}
  objs = new cljs.core.IndexedSeq(G__22352__a,0);
} 
return pr__delegate.call(this,objs);};
pr.cljs$lang$maxFixedArity = 0;
pr.cljs$lang$applyTo = (function (arglist__22353){
var objs = cljs.core.seq(arglist__22353);
return pr__delegate(objs);
});
pr.cljs$core$IFn$_invoke$arity$variadic = pr__delegate;
return pr;
})()
;
/**
* Prints the object(s) using string-print.
* print and println produce output for human consumption.
* @param {...*} var_args
*/
cljs.core.print = (function() { 
var cljs_core_print__delegate = function (objs){
return cljs.core.pr_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));
};
var cljs_core_print = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__22354__i = 0, G__22354__a = new Array(arguments.length -  0);
while (G__22354__i < G__22354__a.length) {G__22354__a[G__22354__i] = arguments[G__22354__i + 0]; ++G__22354__i;}
  objs = new cljs.core.IndexedSeq(G__22354__a,0);
} 
return cljs_core_print__delegate.call(this,objs);};
cljs_core_print.cljs$lang$maxFixedArity = 0;
cljs_core_print.cljs$lang$applyTo = (function (arglist__22355){
var objs = cljs.core.seq(arglist__22355);
return cljs_core_print__delegate(objs);
});
cljs_core_print.cljs$core$IFn$_invoke$arity$variadic = cljs_core_print__delegate;
return cljs_core_print;
})()
;
/**
* print to a string, returning it
* @param {...*} var_args
*/
cljs.core.print_str = (function() { 
var print_str__delegate = function (objs){
return cljs.core.pr_str_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));
};
var print_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__22356__i = 0, G__22356__a = new Array(arguments.length -  0);
while (G__22356__i < G__22356__a.length) {G__22356__a[G__22356__i] = arguments[G__22356__i + 0]; ++G__22356__i;}
  objs = new cljs.core.IndexedSeq(G__22356__a,0);
} 
return print_str__delegate.call(this,objs);};
print_str.cljs$lang$maxFixedArity = 0;
print_str.cljs$lang$applyTo = (function (arglist__22357){
var objs = cljs.core.seq(arglist__22357);
return print_str__delegate(objs);
});
print_str.cljs$core$IFn$_invoke$arity$variadic = print_str__delegate;
return print_str;
})()
;
/**
* Same as print followed by (newline)
* @param {...*} var_args
*/
cljs.core.println = (function() { 
var println__delegate = function (objs){
cljs.core.pr_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));

if(cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)){
return cljs.core.newline(cljs.core.pr_opts());
} else {
return null;
}
};
var println = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__22358__i = 0, G__22358__a = new Array(arguments.length -  0);
while (G__22358__i < G__22358__a.length) {G__22358__a[G__22358__i] = arguments[G__22358__i + 0]; ++G__22358__i;}
  objs = new cljs.core.IndexedSeq(G__22358__a,0);
} 
return println__delegate.call(this,objs);};
println.cljs$lang$maxFixedArity = 0;
println.cljs$lang$applyTo = (function (arglist__22359){
var objs = cljs.core.seq(arglist__22359);
return println__delegate(objs);
});
println.cljs$core$IFn$_invoke$arity$variadic = println__delegate;
return println;
})()
;
/**
* println to a string, returning it
* @param {...*} var_args
*/
cljs.core.println_str = (function() { 
var println_str__delegate = function (objs){
return cljs.core.prn_str_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));
};
var println_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__22360__i = 0, G__22360__a = new Array(arguments.length -  0);
while (G__22360__i < G__22360__a.length) {G__22360__a[G__22360__i] = arguments[G__22360__i + 0]; ++G__22360__i;}
  objs = new cljs.core.IndexedSeq(G__22360__a,0);
} 
return println_str__delegate.call(this,objs);};
println_str.cljs$lang$maxFixedArity = 0;
println_str.cljs$lang$applyTo = (function (arglist__22361){
var objs = cljs.core.seq(arglist__22361);
return println_str__delegate(objs);
});
println_str.cljs$core$IFn$_invoke$arity$variadic = println_str__delegate;
return println_str;
})()
;
/**
* Same as pr followed by (newline).
* @param {...*} var_args
*/
cljs.core.prn = (function() { 
var prn__delegate = function (objs){
cljs.core.pr_with_opts(objs,cljs.core.pr_opts());

if(cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)){
return cljs.core.newline(cljs.core.pr_opts());
} else {
return null;
}
};
var prn = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__22362__i = 0, G__22362__a = new Array(arguments.length -  0);
while (G__22362__i < G__22362__a.length) {G__22362__a[G__22362__i] = arguments[G__22362__i + 0]; ++G__22362__i;}
  objs = new cljs.core.IndexedSeq(G__22362__a,0);
} 
return prn__delegate.call(this,objs);};
prn.cljs$lang$maxFixedArity = 0;
prn.cljs$lang$applyTo = (function (arglist__22363){
var objs = cljs.core.seq(arglist__22363);
return prn__delegate(objs);
});
prn.cljs$core$IFn$_invoke$arity$variadic = prn__delegate;
return prn;
})()
;
cljs.core.print_map = (function print_map(m,print_one,writer,opts){
return cljs.core.pr_sequential_writer(writer,(function (e,w,opts__$1){
var G__22370_22376 = cljs.core.key(e);
var G__22371_22377 = w;
var G__22372_22378 = opts__$1;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__22370_22376,G__22371_22377,G__22372_22378) : print_one.call(null,G__22370_22376,G__22371_22377,G__22372_22378));

cljs.core._write(w," ");

var G__22373 = cljs.core.val(e);
var G__22374 = w;
var G__22375 = opts__$1;
return (print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__22373,G__22374,G__22375) : print_one.call(null,G__22373,G__22374,G__22375));
}),"{",", ","}",opts,cljs.core.seq(m));
});
cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#<Volatile: ");

cljs.core.pr_writer(a__$1.state,writer,opts);

return cljs.core._write(writer,">");
});

cljs.core.Var.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Var.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#'");

return cljs.core.pr_writer(a__$1.sym,writer,opts);
});

cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#{"," ","}",opts,coll__$1);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#{"," ","}",opts,coll__$1);
});

cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#<Atom: ");

cljs.core.pr_writer(a__$1.state,writer,opts);

return cljs.core._write(writer,">");
});

cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core._write(writer,"()");
});

cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#queue ["," ","]",opts,cljs.core.seq(coll__$1));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.Range.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Range.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.List.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.List.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});
cljs.core.PersistentVector.prototype.cljs$core$IComparable$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1,y);
});

cljs.core.Subvec.prototype.cljs$core$IComparable$ = true;

cljs.core.Subvec.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1,y);
});

cljs.core.Keyword.prototype.cljs$core$IComparable$ = true;

cljs.core.Keyword.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_keywords(x__$1,y);
});

cljs.core.Symbol.prototype.cljs$core$IComparable$ = true;

cljs.core.Symbol.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_symbols(x__$1,y);
});
/**
* Atomically sets the metadata for a namespace/var/ref/agent/atom to be:
* 
* (apply f its-current-meta args)
* 
* f must be free of side-effects
* @param {...*} var_args
*/
cljs.core.alter_meta_BANG_ = (function() { 
var alter_meta_BANG___delegate = function (iref,f,args){
return iref.meta = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f,iref.meta,args);
};
var alter_meta_BANG_ = function (iref,f,var_args){
var args = null;
if (arguments.length > 2) {
var G__22379__i = 0, G__22379__a = new Array(arguments.length -  2);
while (G__22379__i < G__22379__a.length) {G__22379__a[G__22379__i] = arguments[G__22379__i + 2]; ++G__22379__i;}
  args = new cljs.core.IndexedSeq(G__22379__a,0);
} 
return alter_meta_BANG___delegate.call(this,iref,f,args);};
alter_meta_BANG_.cljs$lang$maxFixedArity = 2;
alter_meta_BANG_.cljs$lang$applyTo = (function (arglist__22380){
var iref = cljs.core.first(arglist__22380);
arglist__22380 = cljs.core.next(arglist__22380);
var f = cljs.core.first(arglist__22380);
var args = cljs.core.rest(arglist__22380);
return alter_meta_BANG___delegate(iref,f,args);
});
alter_meta_BANG_.cljs$core$IFn$_invoke$arity$variadic = alter_meta_BANG___delegate;
return alter_meta_BANG_;
})()
;
/**
* Atomically resets the metadata for an atom
*/
cljs.core.reset_meta_BANG_ = (function reset_meta_BANG_(iref,m){
return iref.meta = m;
});
/**
* Alpha - subject to change.
* 
* Adds a watch function to an atom reference. The watch fn must be a
* fn of 4 args: a key, the reference, its old-state, its
* new-state. Whenever the reference's state might have been changed,
* any registered watches will have their functions called. The watch
* fn will be called synchronously. Note that an atom's state
* may have changed again prior to the fn call, so use old/new-state
* rather than derefing the reference. Keys must be unique per
* reference, and can be used to remove the watch with remove-watch,
* but are otherwise considered opaque by the watch mechanism.  Bear in
* mind that regardless of the result or action of the watch fns the
* atom's value will change.  Example:
* 
* (def a (atom 0))
* (add-watch a :inc (fn [k r o n] (assert (== 0 n))))
* (swap! a inc)
* ;; Assertion Error
* (deref a)
* ;=> 1
*/
cljs.core.add_watch = (function add_watch(iref,key,f){
cljs.core._add_watch(iref,key,f);

return iref;
});
/**
* Alpha - subject to change.
* 
* Removes a watch (set by add-watch) from a reference
*/
cljs.core.remove_watch = (function remove_watch(iref,key){
cljs.core._remove_watch(iref,key);

return iref;
});
cljs.core.gensym_counter = null;
/**
* Returns a new symbol with a unique name. If a prefix string is
* supplied, the name is prefix# where # is some unique number. If
* prefix is not supplied, the prefix is 'G__'.
*/
cljs.core.gensym = (function() {
var gensym = null;
var gensym__0 = (function (){
return gensym.cljs$core$IFn$_invoke$arity$1("G__");
});
var gensym__1 = (function (prefix_string){
if((cljs.core.gensym_counter == null)){
cljs.core.gensym_counter = (function (){var G__22383 = (0);
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__22383) : cljs.core.atom.call(null,G__22383));
})();
} else {
}

return cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([cljs.core.str(prefix_string),cljs.core.str(cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cljs.core.gensym_counter,cljs.core.inc))].join(''));
});
gensym = function(prefix_string){
switch(arguments.length){
case 0:
return gensym__0.call(this);
case 1:
return gensym__1.call(this,prefix_string);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
gensym.cljs$core$IFn$_invoke$arity$0 = gensym__0;
gensym.cljs$core$IFn$_invoke$arity$1 = gensym__1;
return gensym;
})()
;
cljs.core.fixture1 = (1);
cljs.core.fixture2 = (2);

/**
* @constructor
*/
cljs.core.Delay = (function (f,value){
this.f = f;
this.value = value;
this.cljs$lang$protocol_mask$partition1$ = 1;
this.cljs$lang$protocol_mask$partition0$ = 32768;
})
cljs.core.Delay.prototype.cljs$core$IPending$_realized_QMARK_$arity$1 = (function (d){
var self__ = this;
var d__$1 = this;
return cljs.core.not(self__.f);
});

cljs.core.Delay.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(cljs.core.truth_(self__.f)){
self__.value = (function (){return (self__.f.cljs$core$IFn$_invoke$arity$0 ? self__.f.cljs$core$IFn$_invoke$arity$0() : self__.f.call(null));
})();

self__.f = null;
} else {
}

return self__.value;
});

cljs.core.Delay.cljs$lang$type = true;

cljs.core.Delay.cljs$lang$ctorStr = "cljs.core/Delay";

cljs.core.Delay.cljs$lang$ctorPrWriter = (function (this__8091__auto__,writer__8092__auto__,opt__8093__auto__){
return cljs.core._write(writer__8092__auto__,"cljs.core/Delay");
});

cljs.core.__GT_Delay = (function __GT_Delay(f,value){
return (new cljs.core.Delay(f,value));
});

/**
* returns true if x is a Delay created with delay
*/
cljs.core.delay_QMARK_ = (function delay_QMARK_(x){
return (x instanceof cljs.core.Delay);
});
/**
* If x is a Delay, returns the (possibly cached) value of its expression, else returns x
*/
cljs.core.force = (function force(x){
if(cljs.core.delay_QMARK_(x)){
var G__22385 = x;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__22385) : cljs.core.deref.call(null,G__22385));
} else {
return x;
}
});
/**
* Returns true if a value has been produced for a promise, delay, future or lazy sequence.
*/
cljs.core.realized_QMARK_ = (function realized_QMARK_(d){
return cljs.core._realized_QMARK_(d);
});
cljs.core.preserving_reduced = (function preserving_reduced(rf){
return (function (p1__22386_SHARP_,p2__22387_SHARP_){
var ret = (function (){var G__22390 = p1__22386_SHARP_;
var G__22391 = p2__22387_SHARP_;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__22390,G__22391) : rf.call(null,G__22390,G__22391));
})();
if(cljs.core.reduced_QMARK_(ret)){
return cljs.core.reduced(ret);
} else {
return ret;
}
});
});
/**
* A transducer which concatenates the contents of each input, which must be a
* collection, into the reduction.
*/
cljs.core.cat = (function cat(rf){
var rf1 = cljs.core.preserving_reduced(rf);
return ((function (rf1){
return (function() {
var G__22394 = null;
var G__22394__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__22394__1 = (function (result){
var G__22393 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__22393) : rf.call(null,G__22393));
});
var G__22394__2 = (function (result,input){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(rf1,result,input);
});
G__22394 = function(result,input){
switch(arguments.length){
case 0:
return G__22394__0.call(this);
case 1:
return G__22394__1.call(this,result);
case 2:
return G__22394__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__22394.cljs$core$IFn$_invoke$arity$0 = G__22394__0;
G__22394.cljs$core$IFn$_invoke$arity$1 = G__22394__1;
G__22394.cljs$core$IFn$_invoke$arity$2 = G__22394__2;
return G__22394;
})()
;})(rf1))
});
/**
* Returns a lazy sequence removing consecutive duplicates in coll.
* Returns a transducer when no collection is provided.
*/
cljs.core.dedupe = (function() {
var dedupe = null;
var dedupe__0 = (function (){
return (function (rf){
var pa = cljs.core.volatile_BANG_(new cljs.core.Keyword("cljs.core","none","cljs.core/none",926646439));
return ((function (pa){
return (function() {
var G__22403 = null;
var G__22403__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__22403__1 = (function (result){
var G__22399 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__22399) : rf.call(null,G__22399));
});
var G__22403__2 = (function (result,input){
var prior = (function (){var G__22400 = pa;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__22400) : cljs.core.deref.call(null,G__22400));
})();
cljs.core.vreset_BANG_(pa,input);

if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(prior,input)){
return result;
} else {
var G__22401 = result;
var G__22402 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__22401,G__22402) : rf.call(null,G__22401,G__22402));
}
});
G__22403 = function(result,input){
switch(arguments.length){
case 0:
return G__22403__0.call(this);
case 1:
return G__22403__1.call(this,result);
case 2:
return G__22403__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__22403.cljs$core$IFn$_invoke$arity$0 = G__22403__0;
G__22403.cljs$core$IFn$_invoke$arity$1 = G__22403__1;
G__22403.cljs$core$IFn$_invoke$arity$2 = G__22403__2;
return G__22403;
})()
;})(pa))
});
});
var dedupe__1 = (function (coll){
return cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(dedupe.cljs$core$IFn$_invoke$arity$0(),coll);
});
dedupe = function(coll){
switch(arguments.length){
case 0:
return dedupe__0.call(this);
case 1:
return dedupe__1.call(this,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dedupe.cljs$core$IFn$_invoke$arity$0 = dedupe__0;
dedupe.cljs$core$IFn$_invoke$arity$1 = dedupe__1;
return dedupe;
})()
;
/**
* Returns items from coll with random probability of prob (0.0 -
* 1.0).  Returns a transducer when no collection is provided.
*/
cljs.core.random_sample = (function() {
var random_sample = null;
var random_sample__1 = (function (prob){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$1((function (_){
return ((function (){return (cljs.core.rand.cljs$core$IFn$_invoke$arity$0 ? cljs.core.rand.cljs$core$IFn$_invoke$arity$0() : cljs.core.rand.call(null));
})() < prob);
}));
});
var random_sample__2 = (function (prob,coll){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2((function (_){
return ((function (){return (cljs.core.rand.cljs$core$IFn$_invoke$arity$0 ? cljs.core.rand.cljs$core$IFn$_invoke$arity$0() : cljs.core.rand.call(null));
})() < prob);
}),coll);
});
random_sample = function(prob,coll){
switch(arguments.length){
case 1:
return random_sample__1.call(this,prob);
case 2:
return random_sample__2.call(this,prob,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
random_sample.cljs$core$IFn$_invoke$arity$1 = random_sample__1;
random_sample.cljs$core$IFn$_invoke$arity$2 = random_sample__2;
return random_sample;
})()
;

/**
* @constructor
*/
cljs.core.Eduction = (function (xform,coll){
this.xform = xform;
this.coll = coll;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2173173760;
})
cljs.core.Eduction.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll__$1,writer,opts){
var self__ = this;
var coll__$2 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$2);
});

cljs.core.Eduction.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (_,f,init){
var self__ = this;
var ___$1 = this;
return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(self__.xform,f,init,self__.coll);
});

cljs.core.Eduction.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return cljs.core.seq(cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(self__.xform,self__.coll));
});

cljs.core.Eduction.cljs$lang$type = true;

cljs.core.Eduction.cljs$lang$ctorStr = "cljs.core/Eduction";

cljs.core.Eduction.cljs$lang$ctorPrWriter = (function (this__8091__auto__,writer__8092__auto__,opt__8093__auto__){
return cljs.core._write(writer__8092__auto__,"cljs.core/Eduction");
});

cljs.core.__GT_Eduction = (function __GT_Eduction(xform,coll){
return (new cljs.core.Eduction(xform,coll));
});

(cljs.core.Eduction.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__8482__auto__ = this;
return cljs.core.es6_iterator(this__8482__auto__);
}));
/**
* Returns a reducible/iterable/seqable application of
* the transducer to the items in coll. Note that these applications
* will be performed every time iterator/seq/reduce is called.
*/
cljs.core.eduction = (function eduction(xform,coll){
return (new cljs.core.Eduction(xform,coll));
});
/**
* Runs the supplied procedure (via reduce), for purposes of side
* effects, on successive items in the collection. Returns nil
*/
cljs.core.run_BANG_ = (function run_BANG_(proc,coll){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__22405_SHARP_,p2__22404_SHARP_){
var G__22407 = p2__22404_SHARP_;
return (proc.cljs$core$IFn$_invoke$arity$1 ? proc.cljs$core$IFn$_invoke$arity$1(G__22407) : proc.call(null,G__22407));
}),null,coll);
});

cljs.core.IEncodeJS = (function (){var obj22409 = {};
return obj22409;
})();

cljs.core._clj__GT_js = (function _clj__GT_js(x){
if((function (){var and__7492__auto__ = x;
if(and__7492__auto__){
return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1;
} else {
return and__7492__auto__;
}
})()){
return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1(x);
} else {
var x__8148__auto__ = (((x == null))?null:x);
return (function (){var or__7504__auto__ = (cljs.core._clj__GT_js[(function (){var G__22413 = x__8148__auto__;
return goog.typeOf(G__22413);
})()]);
if(or__7504__auto__){
return or__7504__auto__;
} else {
var or__7504__auto____$1 = (cljs.core._clj__GT_js["_"]);
if(or__7504__auto____$1){
return or__7504__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeJS.-clj->js",x);
}
}
})().call(null,x);
}
});

cljs.core._key__GT_js = (function _key__GT_js(x){
if((function (){var and__7492__auto__ = x;
if(and__7492__auto__){
return x.cljs$core$IEncodeJS$_key__GT_js$arity$1;
} else {
return and__7492__auto__;
}
})()){
return x.cljs$core$IEncodeJS$_key__GT_js$arity$1(x);
} else {
var x__8148__auto__ = (((x == null))?null:x);
return (function (){var or__7504__auto__ = (cljs.core._key__GT_js[(function (){var G__22417 = x__8148__auto__;
return goog.typeOf(G__22417);
})()]);
if(or__7504__auto__){
return or__7504__auto__;
} else {
var or__7504__auto____$1 = (cljs.core._key__GT_js["_"]);
if(or__7504__auto____$1){
return or__7504__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeJS.-key->js",x);
}
}
})().call(null,x);
}
});

cljs.core.key__GT_js = (function key__GT_js(k){
if((function (){var G__22420 = k;
if(G__22420){
var bit__8185__auto__ = null;
if(cljs.core.truth_((function (){var or__7504__auto__ = bit__8185__auto__;
if(cljs.core.truth_(or__7504__auto__)){
return or__7504__auto__;
} else {
return G__22420.cljs$core$IEncodeJS$;
}
})())){
return true;
} else {
if((!G__22420.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__22420);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__22420);
}
})()){
return cljs.core._clj__GT_js(k);
} else {
if((typeof k === 'string') || (typeof k === 'number') || ((k instanceof cljs.core.Keyword)) || ((k instanceof cljs.core.Symbol))){
var G__22421 = k;
return (cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1 ? cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1(G__22421) : cljs.core.clj__GT_js.call(null,G__22421));
} else {
return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([k], 0));
}
}
});
/**
* Recursively transforms ClojureScript values to JavaScript.
* sets/vectors/lists become Arrays, Keywords and Symbol become Strings,
* Maps become Objects. Arbitrary keys are encoded to by key->js.
*/
cljs.core.clj__GT_js = (function clj__GT_js(x){
if((x == null)){
return null;
} else {
if((function (){var G__22437 = x;
if(G__22437){
var bit__8185__auto__ = null;
if(cljs.core.truth_((function (){var or__7504__auto__ = bit__8185__auto__;
if(cljs.core.truth_(or__7504__auto__)){
return or__7504__auto__;
} else {
return G__22437.cljs$core$IEncodeJS$;
}
})())){
return true;
} else {
if((!G__22437.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__22437);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__22437);
}
})()){
return cljs.core._clj__GT_js(x);
} else {
if((x instanceof cljs.core.Keyword)){
return cljs.core.name(x);
} else {
if((x instanceof cljs.core.Symbol)){
return [cljs.core.str(x)].join('');
} else {
if(cljs.core.map_QMARK_(x)){
var m = (function (){var obj22439 = {};
return obj22439;
})();
var seq__22440_22450 = cljs.core.seq(x);
var chunk__22441_22451 = null;
var count__22442_22452 = (0);
var i__22443_22453 = (0);
while(true){
if((i__22443_22453 < count__22442_22452)){
var vec__22444_22454 = chunk__22441_22451.cljs$core$IIndexed$_nth$arity$2(null,i__22443_22453);
var k_22455 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22444_22454,(0),null);
var v_22456 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22444_22454,(1),null);
(m[cljs.core.key__GT_js(k_22455)] = clj__GT_js(v_22456));

var G__22457 = seq__22440_22450;
var G__22458 = chunk__22441_22451;
var G__22459 = count__22442_22452;
var G__22460 = (i__22443_22453 + (1));
seq__22440_22450 = G__22457;
chunk__22441_22451 = G__22458;
count__22442_22452 = G__22459;
i__22443_22453 = G__22460;
continue;
} else {
var temp__4126__auto___22461 = cljs.core.seq(seq__22440_22450);
if(temp__4126__auto___22461){
var seq__22440_22462__$1 = temp__4126__auto___22461;
if(cljs.core.chunked_seq_QMARK_(seq__22440_22462__$1)){
var c__8291__auto___22463 = cljs.core.chunk_first(seq__22440_22462__$1);
var G__22464 = cljs.core.chunk_rest(seq__22440_22462__$1);
var G__22465 = c__8291__auto___22463;
var G__22466 = cljs.core.count(c__8291__auto___22463);
var G__22467 = (0);
seq__22440_22450 = G__22464;
chunk__22441_22451 = G__22465;
count__22442_22452 = G__22466;
i__22443_22453 = G__22467;
continue;
} else {
var vec__22445_22468 = cljs.core.first(seq__22440_22462__$1);
var k_22469 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22445_22468,(0),null);
var v_22470 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22445_22468,(1),null);
(m[cljs.core.key__GT_js(k_22469)] = clj__GT_js(v_22470));

var G__22471 = cljs.core.next(seq__22440_22462__$1);
var G__22472 = null;
var G__22473 = (0);
var G__22474 = (0);
seq__22440_22450 = G__22471;
chunk__22441_22451 = G__22472;
count__22442_22452 = G__22473;
i__22443_22453 = G__22474;
continue;
}
} else {
}
}
break;
}

return m;
} else {
if(cljs.core.coll_QMARK_(x)){
var arr = [];
var seq__22446_22475 = cljs.core.seq(cljs.core.map.cljs$core$IFn$_invoke$arity$2(clj__GT_js,x));
var chunk__22447_22476 = null;
var count__22448_22477 = (0);
var i__22449_22478 = (0);
while(true){
if((i__22449_22478 < count__22448_22477)){
var x_22479__$1 = chunk__22447_22476.cljs$core$IIndexed$_nth$arity$2(null,i__22449_22478);
arr.push(x_22479__$1);

var G__22480 = seq__22446_22475;
var G__22481 = chunk__22447_22476;
var G__22482 = count__22448_22477;
var G__22483 = (i__22449_22478 + (1));
seq__22446_22475 = G__22480;
chunk__22447_22476 = G__22481;
count__22448_22477 = G__22482;
i__22449_22478 = G__22483;
continue;
} else {
var temp__4126__auto___22484 = cljs.core.seq(seq__22446_22475);
if(temp__4126__auto___22484){
var seq__22446_22485__$1 = temp__4126__auto___22484;
if(cljs.core.chunked_seq_QMARK_(seq__22446_22485__$1)){
var c__8291__auto___22486 = cljs.core.chunk_first(seq__22446_22485__$1);
var G__22487 = cljs.core.chunk_rest(seq__22446_22485__$1);
var G__22488 = c__8291__auto___22486;
var G__22489 = cljs.core.count(c__8291__auto___22486);
var G__22490 = (0);
seq__22446_22475 = G__22487;
chunk__22447_22476 = G__22488;
count__22448_22477 = G__22489;
i__22449_22478 = G__22490;
continue;
} else {
var x_22491__$1 = cljs.core.first(seq__22446_22485__$1);
arr.push(x_22491__$1);

var G__22492 = cljs.core.next(seq__22446_22485__$1);
var G__22493 = null;
var G__22494 = (0);
var G__22495 = (0);
seq__22446_22475 = G__22492;
chunk__22447_22476 = G__22493;
count__22448_22477 = G__22494;
i__22449_22478 = G__22495;
continue;
}
} else {
}
}
break;
}

return arr;
} else {
return x;

}
}
}
}
}
}
});

cljs.core.IEncodeClojure = (function (){var obj22497 = {};
return obj22497;
})();

cljs.core._js__GT_clj = (function _js__GT_clj(x,options){
if((function (){var and__7492__auto__ = x;
if(and__7492__auto__){
return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2;
} else {
return and__7492__auto__;
}
})()){
return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2(x,options);
} else {
var x__8148__auto__ = (((x == null))?null:x);
return (function (){var or__7504__auto__ = (cljs.core._js__GT_clj[(function (){var G__22501 = x__8148__auto__;
return goog.typeOf(G__22501);
})()]);
if(or__7504__auto__){
return or__7504__auto__;
} else {
var or__7504__auto____$1 = (cljs.core._js__GT_clj["_"]);
if(or__7504__auto____$1){
return or__7504__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeClojure.-js->clj",x);
}
}
})().call(null,x,options);
}
});

/**
* Recursively transforms JavaScript arrays into ClojureScript
* vectors, and JavaScript objects into ClojureScript maps.  With
* option ':keywordize-keys true' will convert object fields from
* strings to keywords.
* @param {...*} var_args
*/
cljs.core.js__GT_clj = (function() {
var js__GT_clj = null;
var js__GT_clj__1 = (function (x){
return js__GT_clj.cljs$core$IFn$_invoke$arity$variadic(x,cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"keywordize-keys","keywordize-keys",1310784252),false], null)], 0));
});
var js__GT_clj__2 = (function() { 
var G__22558__delegate = function (x,opts){
var map__22531 = opts;
var map__22531__$1 = ((cljs.core.seq_QMARK_(map__22531))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__22531):map__22531);
var keywordize_keys = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__22531__$1,new cljs.core.Keyword(null,"keywordize-keys","keywordize-keys",1310784252));
var keyfn = (cljs.core.truth_(keywordize_keys)?cljs.core.keyword:cljs.core.str);
var f = ((function (map__22531,map__22531__$1,keywordize_keys,keyfn){
return (function thisfn(x__$1){
if((function (){var G__22547 = x__$1;
if(G__22547){
var bit__8185__auto__ = null;
if(cljs.core.truth_((function (){var or__7504__auto__ = bit__8185__auto__;
if(cljs.core.truth_(or__7504__auto__)){
return or__7504__auto__;
} else {
return G__22547.cljs$core$IEncodeClojure$;
}
})())){
return true;
} else {
if((!G__22547.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure,G__22547);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure,G__22547);
}
})()){
return cljs.core._js__GT_clj(x__$1,cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array_map,opts));
} else {
if(cljs.core.seq_QMARK_(x__$1)){
return cljs.core.doall.cljs$core$IFn$_invoke$arity$1(cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn,x__$1));
} else {
if(cljs.core.coll_QMARK_(x__$1)){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.empty(x__$1),cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn,x__$1));
} else {
if(x__$1 instanceof Array){
return cljs.core.vec(cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn,x__$1));
} else {
if((cljs.core.type(x__$1) === Object)){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,(function (){var iter__8260__auto__ = ((function (map__22531,map__22531__$1,keywordize_keys,keyfn){
return (function iter__22548(s__22549){
return (new cljs.core.LazySeq(null,((function (map__22531,map__22531__$1,keywordize_keys,keyfn){
return (function (){
var s__22549__$1 = s__22549;
while(true){
var temp__4126__auto__ = cljs.core.seq(s__22549__$1);
if(temp__4126__auto__){
var s__22549__$2 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s__22549__$2)){
var c__8258__auto__ = cljs.core.chunk_first(s__22549__$2);
var size__8259__auto__ = cljs.core.count(c__8258__auto__);
var b__22551 = cljs.core.chunk_buffer(size__8259__auto__);
if((function (){var i__22550 = (0);
while(true){
if((i__22550 < size__8259__auto__)){
var k = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c__8258__auto__,i__22550);
cljs.core.chunk_append(b__22551,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__22556 = k;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__22556) : keyfn.call(null,G__22556));
})(),thisfn((x__$1[k]))], null));

var G__22559 = (i__22550 + (1));
i__22550 = G__22559;
continue;
} else {
return true;
}
break;
}
})()){
return cljs.core.chunk_cons(cljs.core.chunk(b__22551),iter__22548(cljs.core.chunk_rest(s__22549__$2)));
} else {
return cljs.core.chunk_cons(cljs.core.chunk(b__22551),null);
}
} else {
var k = cljs.core.first(s__22549__$2);
return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__22557 = k;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__22557) : keyfn.call(null,G__22557));
})(),thisfn((x__$1[k]))], null),iter__22548(cljs.core.rest(s__22549__$2)));
}
} else {
return null;
}
break;
}
});})(map__22531,map__22531__$1,keywordize_keys,keyfn))
,null,null));
});})(map__22531,map__22531__$1,keywordize_keys,keyfn))
;
return iter__8260__auto__(cljs.core.js_keys(x__$1));
})());
} else {
return x__$1;

}
}
}
}
}
});})(map__22531,map__22531__$1,keywordize_keys,keyfn))
;
return f(x);
};
var G__22558 = function (x,var_args){
var opts = null;
if (arguments.length > 1) {
var G__22560__i = 0, G__22560__a = new Array(arguments.length -  1);
while (G__22560__i < G__22560__a.length) {G__22560__a[G__22560__i] = arguments[G__22560__i + 1]; ++G__22560__i;}
  opts = new cljs.core.IndexedSeq(G__22560__a,0);
} 
return G__22558__delegate.call(this,x,opts);};
G__22558.cljs$lang$maxFixedArity = 1;
G__22558.cljs$lang$applyTo = (function (arglist__22561){
var x = cljs.core.first(arglist__22561);
var opts = cljs.core.rest(arglist__22561);
return G__22558__delegate(x,opts);
});
G__22558.cljs$core$IFn$_invoke$arity$variadic = G__22558__delegate;
return G__22558;
})()
;
js__GT_clj = function(x,var_args){
var opts = var_args;
switch(arguments.length){
case 1:
return js__GT_clj__1.call(this,x);
default:
var G__22562 = null;
if (arguments.length > 1) {
var G__22563__i = 0, G__22563__a = new Array(arguments.length -  1);
while (G__22563__i < G__22563__a.length) {G__22563__a[G__22563__i] = arguments[G__22563__i + 1]; ++G__22563__i;}
G__22562 = new cljs.core.IndexedSeq(G__22563__a,0);
}
return js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic(x, G__22562);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
js__GT_clj.cljs$lang$maxFixedArity = 1;
js__GT_clj.cljs$lang$applyTo = js__GT_clj__2.cljs$lang$applyTo;
js__GT_clj.cljs$core$IFn$_invoke$arity$1 = js__GT_clj__1;
js__GT_clj.cljs$core$IFn$_invoke$arity$variadic = js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic;
return js__GT_clj;
})()
;
/**
* Returns a memoized version of a referentially transparent function. The
* memoized version of the function keeps a cache of the mapping from arguments
* to results and, when calls with the same arguments are repeated often, has
* higher performance at the expense of higher memory use.
*/
cljs.core.memoize = (function memoize(f){
var mem = (function (){var G__22566 = cljs.core.PersistentArrayMap.EMPTY;
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__22566) : cljs.core.atom.call(null,G__22566));
})();
return ((function (mem){
return (function() { 
var G__22568__delegate = function (args){
var v = cljs.core.get.cljs$core$IFn$_invoke$arity$3((function (){var G__22567 = mem;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__22567) : cljs.core.deref.call(null,G__22567));
})(),args,cljs.core.lookup_sentinel);
if((v === cljs.core.lookup_sentinel)){
var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,args);
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(mem,cljs.core.assoc,args,ret);

return ret;
} else {
return v;
}
};
var G__22568 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__22569__i = 0, G__22569__a = new Array(arguments.length -  0);
while (G__22569__i < G__22569__a.length) {G__22569__a[G__22569__i] = arguments[G__22569__i + 0]; ++G__22569__i;}
  args = new cljs.core.IndexedSeq(G__22569__a,0);
} 
return G__22568__delegate.call(this,args);};
G__22568.cljs$lang$maxFixedArity = 0;
G__22568.cljs$lang$applyTo = (function (arglist__22570){
var args = cljs.core.seq(arglist__22570);
return G__22568__delegate(args);
});
G__22568.cljs$core$IFn$_invoke$arity$variadic = G__22568__delegate;
return G__22568;
})()
;
;})(mem))
});
/**
* trampoline can be used to convert algorithms requiring mutual
* recursion without stack consumption. Calls f with supplied args, if
* any. If f returns a fn, calls that fn with no arguments, and
* continues to repeat, until the return value is not a fn, then
* returns that non-fn value. Note that if you want to return a fn as a
* final value, you must wrap it in some data structure and unpack it
* after trampoline returns.
* @param {...*} var_args
*/
cljs.core.trampoline = (function() {
var trampoline = null;
var trampoline__1 = (function (f){
while(true){
var ret = (function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})();
if(cljs.core.fn_QMARK_(ret)){
var G__22572 = ret;
f = G__22572;
continue;
} else {
return ret;
}
break;
}
});
var trampoline__2 = (function() { 
var G__22573__delegate = function (f,args){
return trampoline.cljs$core$IFn$_invoke$arity$1((function (){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,args);
}));
};
var G__22573 = function (f,var_args){
var args = null;
if (arguments.length > 1) {
var G__22574__i = 0, G__22574__a = new Array(arguments.length -  1);
while (G__22574__i < G__22574__a.length) {G__22574__a[G__22574__i] = arguments[G__22574__i + 1]; ++G__22574__i;}
  args = new cljs.core.IndexedSeq(G__22574__a,0);
} 
return G__22573__delegate.call(this,f,args);};
G__22573.cljs$lang$maxFixedArity = 1;
G__22573.cljs$lang$applyTo = (function (arglist__22575){
var f = cljs.core.first(arglist__22575);
var args = cljs.core.rest(arglist__22575);
return G__22573__delegate(f,args);
});
G__22573.cljs$core$IFn$_invoke$arity$variadic = G__22573__delegate;
return G__22573;
})()
;
trampoline = function(f,var_args){
var args = var_args;
switch(arguments.length){
case 1:
return trampoline__1.call(this,f);
default:
var G__22576 = null;
if (arguments.length > 1) {
var G__22577__i = 0, G__22577__a = new Array(arguments.length -  1);
while (G__22577__i < G__22577__a.length) {G__22577__a[G__22577__i] = arguments[G__22577__i + 1]; ++G__22577__i;}
G__22576 = new cljs.core.IndexedSeq(G__22577__a,0);
}
return trampoline__2.cljs$core$IFn$_invoke$arity$variadic(f, G__22576);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
trampoline.cljs$lang$maxFixedArity = 1;
trampoline.cljs$lang$applyTo = trampoline__2.cljs$lang$applyTo;
trampoline.cljs$core$IFn$_invoke$arity$1 = trampoline__1;
trampoline.cljs$core$IFn$_invoke$arity$variadic = trampoline__2.cljs$core$IFn$_invoke$arity$variadic;
return trampoline;
})()
;
/**
* Returns a random floating point number between 0 (inclusive) and
* n (default 1) (exclusive).
*/
cljs.core.rand = (function() {
var rand = null;
var rand__0 = (function (){
return rand.cljs$core$IFn$_invoke$arity$1((1));
});
var rand__1 = (function (n){
return ((function (){return (Math.random.cljs$core$IFn$_invoke$arity$0 ? Math.random.cljs$core$IFn$_invoke$arity$0() : Math.random.call(null));
})() * n);
});
rand = function(n){
switch(arguments.length){
case 0:
return rand__0.call(this);
case 1:
return rand__1.call(this,n);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
rand.cljs$core$IFn$_invoke$arity$0 = rand__0;
rand.cljs$core$IFn$_invoke$arity$1 = rand__1;
return rand;
})()
;
/**
* Returns a random integer between 0 (inclusive) and n (exclusive).
*/
cljs.core.rand_int = (function rand_int(n){
var G__22580 = ((function (){return (Math.random.cljs$core$IFn$_invoke$arity$0 ? Math.random.cljs$core$IFn$_invoke$arity$0() : Math.random.call(null));
})() * n);
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__22580) : Math.floor.call(null,G__22580));
});
/**
* Return a random element of the (sequential) collection. Will have
* the same performance characteristics as nth for the given
* collection.
*/
cljs.core.rand_nth = (function rand_nth(coll){
return cljs.core.nth.cljs$core$IFn$_invoke$arity$2(coll,cljs.core.rand_int(cljs.core.count(coll)));
});
/**
* Returns a map of the elements of coll keyed by the result of
* f on each element. The value at each key will be a vector of the
* corresponding elements, in the order they appeared in coll.
*/
cljs.core.group_by = (function group_by(f,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (ret,x){
var k = (function (){var G__22582 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__22582) : f.call(null,G__22582));
})();
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.PersistentVector.EMPTY),x));
}),cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY),coll));
});
/**
* Creates a hierarchy object for use with derive, isa? etc.
*/
cljs.core.make_hierarchy = (function make_hierarchy(){
return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"parents","parents",-2027538891),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,"descendants","descendants",1824886031),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,"ancestors","ancestors",-776045424),cljs.core.PersistentArrayMap.EMPTY], null);
});
cljs.core._global_hierarchy = null;
cljs.core.get_global_hierarchy = (function get_global_hierarchy(){
if((cljs.core._global_hierarchy == null)){
cljs.core._global_hierarchy = (function (){var G__22584 = cljs.core.make_hierarchy();
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__22584) : cljs.core.atom.call(null,G__22584));
})();
} else {
}

return cljs.core._global_hierarchy;
});
/**
* @param {...*} var_args
*/
cljs.core.swap_global_hierarchy_BANG_ = (function() { 
var swap_global_hierarchy_BANG___delegate = function (f,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core.swap_BANG_,cljs.core.get_global_hierarchy(),f,args);
};
var swap_global_hierarchy_BANG_ = function (f,var_args){
var args = null;
if (arguments.length > 1) {
var G__22585__i = 0, G__22585__a = new Array(arguments.length -  1);
while (G__22585__i < G__22585__a.length) {G__22585__a[G__22585__i] = arguments[G__22585__i + 1]; ++G__22585__i;}
  args = new cljs.core.IndexedSeq(G__22585__a,0);
} 
return swap_global_hierarchy_BANG___delegate.call(this,f,args);};
swap_global_hierarchy_BANG_.cljs$lang$maxFixedArity = 1;
swap_global_hierarchy_BANG_.cljs$lang$applyTo = (function (arglist__22586){
var f = cljs.core.first(arglist__22586);
var args = cljs.core.rest(arglist__22586);
return swap_global_hierarchy_BANG___delegate(f,args);
});
swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_global_hierarchy_BANG___delegate;
return swap_global_hierarchy_BANG_;
})()
;
/**
* Returns true if (= child parent), or child is directly or indirectly derived from
* parent, either via a JavaScript type inheritance relationship or a
* relationship established via derive. h must be a hierarchy obtained
* from make-hierarchy, if not supplied defaults to the global
* hierarchy
*/
cljs.core.isa_QMARK_ = (function() {
var isa_QMARK_ = null;
var isa_QMARK___2 = (function (child,parent){
return isa_QMARK_.cljs$core$IFn$_invoke$arity$3((function (){var G__22651 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__22651) : cljs.core.deref.call(null,G__22651));
})(),child,parent);
});
var isa_QMARK___3 = (function (h,child,parent){
var or__7504__auto__ = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(child,parent);
if(or__7504__auto__){
return or__7504__auto__;
} else {
var or__7504__auto____$1 = cljs.core.contains_QMARK_(new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h).call(null,child),parent);
if(or__7504__auto____$1){
return or__7504__auto____$1;
} else {
var and__7492__auto__ = cljs.core.vector_QMARK_(parent);
if(and__7492__auto__){
var and__7492__auto____$1 = cljs.core.vector_QMARK_(child);
if(and__7492__auto____$1){
var and__7492__auto____$2 = (cljs.core.count(parent) === cljs.core.count(child));
if(and__7492__auto____$2){
var ret = true;
var i = (0);
while(true){
if((!(ret)) || ((i === cljs.core.count(parent)))){
return ret;
} else {
var G__22676 = isa_QMARK_.cljs$core$IFn$_invoke$arity$3(h,(function (){var G__22674 = i;
return (child.cljs$core$IFn$_invoke$arity$1 ? child.cljs$core$IFn$_invoke$arity$1(G__22674) : child.call(null,G__22674));
})(),(function (){var G__22675 = i;
return (parent.cljs$core$IFn$_invoke$arity$1 ? parent.cljs$core$IFn$_invoke$arity$1(G__22675) : parent.call(null,G__22675));
})());
var G__22677 = (i + (1));
ret = G__22676;
i = G__22677;
continue;
}
break;
}
} else {
return and__7492__auto____$2;
}
} else {
return and__7492__auto____$1;
}
} else {
return and__7492__auto__;
}
}
}
});
isa_QMARK_ = function(h,child,parent){
switch(arguments.length){
case 2:
return isa_QMARK___2.call(this,h,child);
case 3:
return isa_QMARK___3.call(this,h,child,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
isa_QMARK_.cljs$core$IFn$_invoke$arity$2 = isa_QMARK___2;
isa_QMARK_.cljs$core$IFn$_invoke$arity$3 = isa_QMARK___3;
return isa_QMARK_;
})()
;
/**
* Returns the immediate parents of tag, either via a JavaScript type
* inheritance relationship or a relationship established via derive. h
* must be a hierarchy obtained from make-hierarchy, if not supplied
* defaults to the global hierarchy
*/
cljs.core.parents = (function() {
var parents = null;
var parents__1 = (function (tag){
return parents.cljs$core$IFn$_invoke$arity$2((function (){var G__22681 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__22681) : cljs.core.deref.call(null,G__22681));
})(),tag);
});
var parents__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h),tag));
});
parents = function(h,tag){
switch(arguments.length){
case 1:
return parents__1.call(this,h);
case 2:
return parents__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
parents.cljs$core$IFn$_invoke$arity$1 = parents__1;
parents.cljs$core$IFn$_invoke$arity$2 = parents__2;
return parents;
})()
;
/**
* Returns the immediate and indirect parents of tag, either via a JavaScript type
* inheritance relationship or a relationship established via derive. h
* must be a hierarchy obtained from make-hierarchy, if not supplied
* defaults to the global hierarchy
*/
cljs.core.ancestors = (function() {
var ancestors = null;
var ancestors__1 = (function (tag){
return ancestors.cljs$core$IFn$_invoke$arity$2((function (){var G__22685 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__22685) : cljs.core.deref.call(null,G__22685));
})(),tag);
});
var ancestors__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h),tag));
});
ancestors = function(h,tag){
switch(arguments.length){
case 1:
return ancestors__1.call(this,h);
case 2:
return ancestors__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ancestors.cljs$core$IFn$_invoke$arity$1 = ancestors__1;
ancestors.cljs$core$IFn$_invoke$arity$2 = ancestors__2;
return ancestors;
})()
;
/**
* Returns the immediate and indirect children of tag, through a
* relationship established via derive. h must be a hierarchy obtained
* from make-hierarchy, if not supplied defaults to the global
* hierarchy. Note: does not work on JavaScript type inheritance
* relationships.
*/
cljs.core.descendants = (function() {
var descendants = null;
var descendants__1 = (function (tag){
return descendants.cljs$core$IFn$_invoke$arity$2((function (){var G__22689 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__22689) : cljs.core.deref.call(null,G__22689));
})(),tag);
});
var descendants__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,"descendants","descendants",1824886031).cljs$core$IFn$_invoke$arity$1(h),tag));
});
descendants = function(h,tag){
switch(arguments.length){
case 1:
return descendants__1.call(this,h);
case 2:
return descendants__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
descendants.cljs$core$IFn$_invoke$arity$1 = descendants__1;
descendants.cljs$core$IFn$_invoke$arity$2 = descendants__2;
return descendants;
})()
;
/**
* Establishes a parent/child relationship between parent and
* tag. Parent must be a namespace-qualified symbol or keyword and
* child can be either a namespace-qualified symbol or keyword or a
* class. h must be a hierarchy obtained from make-hierarchy, if not
* supplied defaults to, and modifies, the global hierarchy.
*/
cljs.core.derive = (function() {
var derive = null;
var derive__2 = (function (tag,parent){
if(cljs.core.truth_(cljs.core.namespace(parent))){
} else {
throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(new cljs.core.Symbol(null,"namespace","namespace",1263021155,null),new cljs.core.Symbol(null,"parent","parent",761652748,null))], 0)))].join('')));
}

cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(derive,cljs.core.array_seq([tag,parent], 0));

return null;
});
var derive__3 = (function (h,tag,parent){
if(cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(tag,parent)){
} else {
throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(new cljs.core.Symbol(null,"not=","not=",1466536204,null),new cljs.core.Symbol(null,"tag","tag",350170304,null),new cljs.core.Symbol(null,"parent","parent",761652748,null))], 0)))].join('')));
}

var tp = new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h);
var td = new cljs.core.Keyword(null,"descendants","descendants",1824886031).cljs$core$IFn$_invoke$arity$1(h);
var ta = new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h);
var tf = ((function (tp,td,ta){
return (function (m,source,sources,target,targets){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (tp,td,ta){
return (function (ret,k){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.get.cljs$core$IFn$_invoke$arity$3(targets,k,cljs.core.PersistentHashSet.EMPTY),cljs.core.cons(target,(function (){var G__22698 = target;
return (targets.cljs$core$IFn$_invoke$arity$1 ? targets.cljs$core$IFn$_invoke$arity$1(G__22698) : targets.call(null,G__22698));
})())));
});})(tp,td,ta))
,m,cljs.core.cons(source,(function (){var G__22699 = source;
return (sources.cljs$core$IFn$_invoke$arity$1 ? sources.cljs$core$IFn$_invoke$arity$1(G__22699) : sources.call(null,G__22699));
})()));
});})(tp,td,ta))
;
var or__7504__auto__ = ((cljs.core.contains_QMARK_((function (){var G__22703 = tag;
return (tp.cljs$core$IFn$_invoke$arity$1 ? tp.cljs$core$IFn$_invoke$arity$1(G__22703) : tp.call(null,G__22703));
})(),parent))?null:(function (){
if(cljs.core.contains_QMARK_((function (){var G__22704 = tag;
return (ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(G__22704) : ta.call(null,G__22704));
})(),parent)){
throw (new Error([cljs.core.str(tag),cljs.core.str("already has"),cljs.core.str(parent),cljs.core.str("as ancestor")].join('')));
} else {
}

if(cljs.core.contains_QMARK_((function (){var G__22705 = parent;
return (ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(G__22705) : ta.call(null,G__22705));
})(),tag)){
throw (new Error([cljs.core.str("Cyclic derivation:"),cljs.core.str(parent),cljs.core.str("has"),cljs.core.str(tag),cljs.core.str("as ancestor")].join('')));
} else {
}

return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"parents","parents",-2027538891),cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h),tag,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(tp,tag,cljs.core.PersistentHashSet.EMPTY),parent)),new cljs.core.Keyword(null,"ancestors","ancestors",-776045424),tf(new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h),tag,td,parent,ta),new cljs.core.Keyword(null,"descendants","descendants",1824886031),tf(new cljs.core.Keyword(null,"descendants","descendants",1824886031).cljs$core$IFn$_invoke$arity$1(h),parent,ta,tag,td)], null);
})()
);
if(cljs.core.truth_(or__7504__auto__)){
return or__7504__auto__;
} else {
return h;
}
});
derive = function(h,tag,parent){
switch(arguments.length){
case 2:
return derive__2.call(this,h,tag);
case 3:
return derive__3.call(this,h,tag,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
derive.cljs$core$IFn$_invoke$arity$2 = derive__2;
derive.cljs$core$IFn$_invoke$arity$3 = derive__3;
return derive;
})()
;
/**
* Removes a parent/child relationship between parent and
* tag. h must be a hierarchy obtained from make-hierarchy, if not
* supplied defaults to, and modifies, the global hierarchy.
*/
cljs.core.underive = (function() {
var underive = null;
var underive__2 = (function (tag,parent){
cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(underive,cljs.core.array_seq([tag,parent], 0));

return null;
});
var underive__3 = (function (h,tag,parent){
var parentMap = new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h);
var childsParents = (cljs.core.truth_((function (){var G__22712 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__22712) : parentMap.call(null,G__22712));
})())?cljs.core.disj.cljs$core$IFn$_invoke$arity$2((function (){var G__22713 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__22713) : parentMap.call(null,G__22713));
})(),parent):cljs.core.PersistentHashSet.EMPTY);
var newParents = (cljs.core.truth_(cljs.core.not_empty(childsParents))?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(parentMap,tag,childsParents):cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(parentMap,tag));
var deriv_seq = cljs.core.flatten(cljs.core.map.cljs$core$IFn$_invoke$arity$2(((function (parentMap,childsParents,newParents){
return (function (p1__22706_SHARP_){
return cljs.core.cons(cljs.core.first(p1__22706_SHARP_),cljs.core.interpose.cljs$core$IFn$_invoke$arity$2(cljs.core.first(p1__22706_SHARP_),cljs.core.second(p1__22706_SHARP_)));
});})(parentMap,childsParents,newParents))
,cljs.core.seq(newParents)));
if(cljs.core.contains_QMARK_((function (){var G__22714 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__22714) : parentMap.call(null,G__22714));
})(),parent)){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (parentMap,childsParents,newParents,deriv_seq){
return (function (p1__22707_SHARP_,p2__22708_SHARP_){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.derive,p1__22707_SHARP_,p2__22708_SHARP_);
});})(parentMap,childsParents,newParents,deriv_seq))
,cljs.core.make_hierarchy(),cljs.core.partition.cljs$core$IFn$_invoke$arity$2((2),deriv_seq));
} else {
return h;
}
});
underive = function(h,tag,parent){
switch(arguments.length){
case 2:
return underive__2.call(this,h,tag);
case 3:
return underive__3.call(this,h,tag,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
underive.cljs$core$IFn$_invoke$arity$2 = underive__2;
underive.cljs$core$IFn$_invoke$arity$3 = underive__3;
return underive;
})()
;
cljs.core.reset_cache = (function reset_cache(method_cache,method_table,cached_hierarchy,hierarchy){
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(method_cache,(function (_){
var G__22717 = method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__22717) : cljs.core.deref.call(null,G__22717));
}));

return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cached_hierarchy,(function (_){
var G__22718 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__22718) : cljs.core.deref.call(null,G__22718));
}));
});
cljs.core.prefers_STAR_ = (function prefers_STAR_(x,y,prefer_table){
var xprefs = (function (){var G__22734 = prefer_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__22734) : cljs.core.deref.call(null,G__22734));
})().call(null,x);
var or__7504__auto__ = (cljs.core.truth_((function (){var and__7492__auto__ = xprefs;
if(cljs.core.truth_(and__7492__auto__)){
var G__22736 = y;
return (xprefs.cljs$core$IFn$_invoke$arity$1 ? xprefs.cljs$core$IFn$_invoke$arity$1(G__22736) : xprefs.call(null,G__22736));
} else {
return and__7492__auto__;
}
})())?true:null);
if(cljs.core.truth_(or__7504__auto__)){
return or__7504__auto__;
} else {
var or__7504__auto____$1 = (function (){var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(y);
while(true){
if((cljs.core.count(ps) > (0))){
if(cljs.core.truth_(prefers_STAR_(x,cljs.core.first(ps),prefer_table))){
} else {
}

var G__22737 = cljs.core.rest(ps);
ps = G__22737;
continue;
} else {
return null;
}
break;
}
})();
if(cljs.core.truth_(or__7504__auto____$1)){
return or__7504__auto____$1;
} else {
var or__7504__auto____$2 = (function (){var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(x);
while(true){
if((cljs.core.count(ps) > (0))){
if(cljs.core.truth_(prefers_STAR_(cljs.core.first(ps),y,prefer_table))){
} else {
}

var G__22738 = cljs.core.rest(ps);
ps = G__22738;
continue;
} else {
return null;
}
break;
}
})();
if(cljs.core.truth_(or__7504__auto____$2)){
return or__7504__auto____$2;
} else {
return false;
}
}
}
});
cljs.core.dominates = (function dominates(x,y,prefer_table){
var or__7504__auto__ = cljs.core.prefers_STAR_(x,y,prefer_table);
if(cljs.core.truth_(or__7504__auto__)){
return or__7504__auto__;
} else {
return cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$2(x,y);
}
});
cljs.core.find_and_cache_best_method = (function find_and_cache_best_method(name,dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
var best_entry = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (be,p__22752){
var vec__22753 = p__22752;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22753,(0),null);
var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22753,(1),null);
var e = vec__22753;
if(cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3((function (){var G__22754 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__22754) : cljs.core.deref.call(null,G__22754));
})(),dispatch_val,k)){
var be2 = (cljs.core.truth_((function (){var or__7504__auto__ = (be == null);
if(or__7504__auto__){
return or__7504__auto__;
} else {
return cljs.core.dominates(k,cljs.core.first(be),prefer_table);
}
})())?e:be);
if(cljs.core.truth_(cljs.core.dominates(cljs.core.first(be2),k,prefer_table))){
} else {
throw (new Error([cljs.core.str("Multiple methods in multimethod '"),cljs.core.str(name),cljs.core.str("' match dispatch value: "),cljs.core.str(dispatch_val),cljs.core.str(" -> "),cljs.core.str(k),cljs.core.str(" and "),cljs.core.str(cljs.core.first(be2)),cljs.core.str(", and neither is preferred")].join('')));
}

return be2;
} else {
return be;
}
}),null,(function (){var G__22755 = method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__22755) : cljs.core.deref.call(null,G__22755));
})());
if(cljs.core.truth_(best_entry)){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((function (){var G__22756 = cached_hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__22756) : cljs.core.deref.call(null,G__22756));
})(),(function (){var G__22757 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__22757) : cljs.core.deref.call(null,G__22757));
})())){
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(method_cache,cljs.core.assoc,dispatch_val,cljs.core.second(best_entry));

return cljs.core.second(best_entry);
} else {
cljs.core.reset_cache(method_cache,method_table,cached_hierarchy,hierarchy);

return find_and_cache_best_method(name,dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy);
}
} else {
return null;
}
});

cljs.core.IMultiFn = (function (){var obj22759 = {};
return obj22759;
})();

cljs.core._reset = (function _reset(mf){
if((function (){var and__7492__auto__ = mf;
if(and__7492__auto__){
return mf.cljs$core$IMultiFn$_reset$arity$1;
} else {
return and__7492__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_reset$arity$1(mf);
} else {
var x__8148__auto__ = (((mf == null))?null:mf);
return (function (){var or__7504__auto__ = (cljs.core._reset[(function (){var G__22763 = x__8148__auto__;
return goog.typeOf(G__22763);
})()]);
if(or__7504__auto__){
return or__7504__auto__;
} else {
var or__7504__auto____$1 = (cljs.core._reset["_"]);
if(or__7504__auto____$1){
return or__7504__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-reset",mf);
}
}
})().call(null,mf);
}
});

cljs.core._add_method = (function _add_method(mf,dispatch_val,method){
if((function (){var and__7492__auto__ = mf;
if(and__7492__auto__){
return mf.cljs$core$IMultiFn$_add_method$arity$3;
} else {
return and__7492__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_add_method$arity$3(mf,dispatch_val,method);
} else {
var x__8148__auto__ = (((mf == null))?null:mf);
return (function (){var or__7504__auto__ = (cljs.core._add_method[(function (){var G__22767 = x__8148__auto__;
return goog.typeOf(G__22767);
})()]);
if(or__7504__auto__){
return or__7504__auto__;
} else {
var or__7504__auto____$1 = (cljs.core._add_method["_"]);
if(or__7504__auto____$1){
return or__7504__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-add-method",mf);
}
}
})().call(null,mf,dispatch_val,method);
}
});

cljs.core._remove_method = (function _remove_method(mf,dispatch_val){
if((function (){var and__7492__auto__ = mf;
if(and__7492__auto__){
return mf.cljs$core$IMultiFn$_remove_method$arity$2;
} else {
return and__7492__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_remove_method$arity$2(mf,dispatch_val);
} else {
var x__8148__auto__ = (((mf == null))?null:mf);
return (function (){var or__7504__auto__ = (cljs.core._remove_method[(function (){var G__22771 = x__8148__auto__;
return goog.typeOf(G__22771);
})()]);
if(or__7504__auto__){
return or__7504__auto__;
} else {
var or__7504__auto____$1 = (cljs.core._remove_method["_"]);
if(or__7504__auto____$1){
return or__7504__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-remove-method",mf);
}
}
})().call(null,mf,dispatch_val);
}
});

cljs.core._prefer_method = (function _prefer_method(mf,dispatch_val,dispatch_val_y){
if((function (){var and__7492__auto__ = mf;
if(and__7492__auto__){
return mf.cljs$core$IMultiFn$_prefer_method$arity$3;
} else {
return and__7492__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_prefer_method$arity$3(mf,dispatch_val,dispatch_val_y);
} else {
var x__8148__auto__ = (((mf == null))?null:mf);
return (function (){var or__7504__auto__ = (cljs.core._prefer_method[(function (){var G__22775 = x__8148__auto__;
return goog.typeOf(G__22775);
})()]);
if(or__7504__auto__){
return or__7504__auto__;
} else {
var or__7504__auto____$1 = (cljs.core._prefer_method["_"]);
if(or__7504__auto____$1){
return or__7504__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-prefer-method",mf);
}
}
})().call(null,mf,dispatch_val,dispatch_val_y);
}
});

cljs.core._get_method = (function _get_method(mf,dispatch_val){
if((function (){var and__7492__auto__ = mf;
if(and__7492__auto__){
return mf.cljs$core$IMultiFn$_get_method$arity$2;
} else {
return and__7492__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_get_method$arity$2(mf,dispatch_val);
} else {
var x__8148__auto__ = (((mf == null))?null:mf);
return (function (){var or__7504__auto__ = (cljs.core._get_method[(function (){var G__22779 = x__8148__auto__;
return goog.typeOf(G__22779);
})()]);
if(or__7504__auto__){
return or__7504__auto__;
} else {
var or__7504__auto____$1 = (cljs.core._get_method["_"]);
if(or__7504__auto____$1){
return or__7504__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-get-method",mf);
}
}
})().call(null,mf,dispatch_val);
}
});

cljs.core._methods = (function _methods(mf){
if((function (){var and__7492__auto__ = mf;
if(and__7492__auto__){
return mf.cljs$core$IMultiFn$_methods$arity$1;
} else {
return and__7492__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_methods$arity$1(mf);
} else {
var x__8148__auto__ = (((mf == null))?null:mf);
return (function (){var or__7504__auto__ = (cljs.core._methods[(function (){var G__22783 = x__8148__auto__;
return goog.typeOf(G__22783);
})()]);
if(or__7504__auto__){
return or__7504__auto__;
} else {
var or__7504__auto____$1 = (cljs.core._methods["_"]);
if(or__7504__auto____$1){
return or__7504__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-methods",mf);
}
}
})().call(null,mf);
}
});

cljs.core._prefers = (function _prefers(mf){
if((function (){var and__7492__auto__ = mf;
if(and__7492__auto__){
return mf.cljs$core$IMultiFn$_prefers$arity$1;
} else {
return and__7492__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_prefers$arity$1(mf);
} else {
var x__8148__auto__ = (((mf == null))?null:mf);
return (function (){var or__7504__auto__ = (cljs.core._prefers[(function (){var G__22787 = x__8148__auto__;
return goog.typeOf(G__22787);
})()]);
if(or__7504__auto__){
return or__7504__auto__;
} else {
var or__7504__auto____$1 = (cljs.core._prefers["_"]);
if(or__7504__auto____$1){
return or__7504__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-prefers",mf);
}
}
})().call(null,mf);
}
});

cljs.core.throw_no_method_error = (function throw_no_method_error(name,dispatch_val){
throw (new Error([cljs.core.str("No method in multimethod '"),cljs.core.str(name),cljs.core.str("' for dispatch value: "),cljs.core.str(dispatch_val)].join('')));
});

/**
* @constructor
*/
cljs.core.MultiFn = (function (name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
this.name = name;
this.dispatch_fn = dispatch_fn;
this.default_dispatch_val = default_dispatch_val;
this.hierarchy = hierarchy;
this.method_table = method_table;
this.prefer_table = prefer_table;
this.method_cache = method_cache;
this.cached_hierarchy = cached_hierarchy;
this.cljs$lang$protocol_mask$partition0$ = 4194305;
this.cljs$lang$protocol_mask$partition1$ = 4352;
})
cljs.core.MultiFn.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__22789 = this$__$1;
return goog.getUid(G__22789);
});

cljs.core.MultiFn.prototype.cljs$core$INamed$_name$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core._name(self__.name);
});

cljs.core.MultiFn.prototype.cljs$core$INamed$_namespace$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core._namespace(self__.name);
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_reset$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_table,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_cache,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.cached_hierarchy,((function (mf__$1){
return (function (mf__$2){
return null;
});})(mf__$1))
);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_add_method$arity$3 = (function (mf,dispatch_val,method){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(self__.method_table,cljs.core.assoc,dispatch_val,method);

cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_remove_method$arity$2 = (function (mf,dispatch_val){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(self__.method_table,cljs.core.dissoc,dispatch_val);

cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_get_method$arity$2 = (function (mf,dispatch_val){
var self__ = this;
var mf__$1 = this;
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((function (){var G__22790 = self__.cached_hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__22790) : cljs.core.deref.call(null,G__22790));
})(),(function (){var G__22791 = self__.hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__22791) : cljs.core.deref.call(null,G__22791));
})())){
} else {
cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);
}

var temp__4124__auto__ = (function (){var G__22792 = self__.method_cache;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__22792) : cljs.core.deref.call(null,G__22792));
})().call(null,dispatch_val);
if(cljs.core.truth_(temp__4124__auto__)){
var target_fn = temp__4124__auto__;
return target_fn;
} else {
var temp__4124__auto____$1 = cljs.core.find_and_cache_best_method(self__.name,dispatch_val,self__.hierarchy,self__.method_table,self__.prefer_table,self__.method_cache,self__.cached_hierarchy);
if(cljs.core.truth_(temp__4124__auto____$1)){
var target_fn = temp__4124__auto____$1;
return target_fn;
} else {
return (function (){var G__22793 = self__.method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__22793) : cljs.core.deref.call(null,G__22793));
})().call(null,self__.default_dispatch_val);
}
}
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefer_method$arity$3 = (function (mf,dispatch_val_x,dispatch_val_y){
var self__ = this;
var mf__$1 = this;
if(cljs.core.truth_(cljs.core.prefers_STAR_(dispatch_val_x,dispatch_val_y,self__.prefer_table))){
throw (new Error([cljs.core.str("Preference conflict in multimethod '"),cljs.core.str(self__.name),cljs.core.str("': "),cljs.core.str(dispatch_val_y),cljs.core.str(" is already preferred to "),cljs.core.str(dispatch_val_x)].join('')));
} else {
}

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table,((function (mf__$1){
return (function (old){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(old,dispatch_val_x,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(old,dispatch_val_x,cljs.core.PersistentHashSet.EMPTY),dispatch_val_y));
});})(mf__$1))
);

return cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_methods$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
var G__22794 = self__.method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__22794) : cljs.core.deref.call(null,G__22794));
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefers$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
var G__22795 = self__.prefer_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__22795) : cljs.core.deref.call(null,G__22795));
});

cljs.core.MultiFn.prototype.call = (function() {
var G__23636 = null;
var G__23636__1 = (function (self__){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return (target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null));
});
var G__23636__2 = (function (self__,a){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__22796 = a;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(G__22796) : self__.dispatch_fn.call(null,G__22796));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__22797 = a;
return (target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(G__22797) : target_fn.call(null,G__22797));
});
var G__23636__3 = (function (self__,a,b){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__22798 = a;
var G__22799 = b;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(G__22798,G__22799) : self__.dispatch_fn.call(null,G__22798,G__22799));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__22800 = a;
var G__22801 = b;
return (target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(G__22800,G__22801) : target_fn.call(null,G__22800,G__22801));
});
var G__23636__4 = (function (self__,a,b,c){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__22802 = a;
var G__22803 = b;
var G__22804 = c;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(G__22802,G__22803,G__22804) : self__.dispatch_fn.call(null,G__22802,G__22803,G__22804));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__22805 = a;
var G__22806 = b;
var G__22807 = c;
return (target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(G__22805,G__22806,G__22807) : target_fn.call(null,G__22805,G__22806,G__22807));
});
var G__23636__5 = (function (self__,a,b,c,d){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__22808 = a;
var G__22809 = b;
var G__22810 = c;
var G__22811 = d;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(G__22808,G__22809,G__22810,G__22811) : self__.dispatch_fn.call(null,G__22808,G__22809,G__22810,G__22811));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__22812 = a;
var G__22813 = b;
var G__22814 = c;
var G__22815 = d;
return (target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(G__22812,G__22813,G__22814,G__22815) : target_fn.call(null,G__22812,G__22813,G__22814,G__22815));
});
var G__23636__6 = (function (self__,a,b,c,d,e){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__22816 = a;
var G__22817 = b;
var G__22818 = c;
var G__22819 = d;
var G__22820 = e;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(G__22816,G__22817,G__22818,G__22819,G__22820) : self__.dispatch_fn.call(null,G__22816,G__22817,G__22818,G__22819,G__22820));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__22821 = a;
var G__22822 = b;
var G__22823 = c;
var G__22824 = d;
var G__22825 = e;
return (target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(G__22821,G__22822,G__22823,G__22824,G__22825) : target_fn.call(null,G__22821,G__22822,G__22823,G__22824,G__22825));
});
var G__23636__7 = (function (self__,a,b,c,d,e,f){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__22826 = a;
var G__22827 = b;
var G__22828 = c;
var G__22829 = d;
var G__22830 = e;
var G__22831 = f;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(G__22826,G__22827,G__22828,G__22829,G__22830,G__22831) : self__.dispatch_fn.call(null,G__22826,G__22827,G__22828,G__22829,G__22830,G__22831));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__22832 = a;
var G__22833 = b;
var G__22834 = c;
var G__22835 = d;
var G__22836 = e;
var G__22837 = f;
return (target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(G__22832,G__22833,G__22834,G__22835,G__22836,G__22837) : target_fn.call(null,G__22832,G__22833,G__22834,G__22835,G__22836,G__22837));
});
var G__23636__8 = (function (self__,a,b,c,d,e,f,g){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__22838 = a;
var G__22839 = b;
var G__22840 = c;
var G__22841 = d;
var G__22842 = e;
var G__22843 = f;
var G__22844 = g;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(G__22838,G__22839,G__22840,G__22841,G__22842,G__22843,G__22844) : self__.dispatch_fn.call(null,G__22838,G__22839,G__22840,G__22841,G__22842,G__22843,G__22844));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__22845 = a;
var G__22846 = b;
var G__22847 = c;
var G__22848 = d;
var G__22849 = e;
var G__22850 = f;
var G__22851 = g;
return (target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(G__22845,G__22846,G__22847,G__22848,G__22849,G__22850,G__22851) : target_fn.call(null,G__22845,G__22846,G__22847,G__22848,G__22849,G__22850,G__22851));
});
var G__23636__9 = (function (self__,a,b,c,d,e,f,g,h){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__22852 = a;
var G__22853 = b;
var G__22854 = c;
var G__22855 = d;
var G__22856 = e;
var G__22857 = f;
var G__22858 = g;
var G__22859 = h;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(G__22852,G__22853,G__22854,G__22855,G__22856,G__22857,G__22858,G__22859) : self__.dispatch_fn.call(null,G__22852,G__22853,G__22854,G__22855,G__22856,G__22857,G__22858,G__22859));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__22860 = a;
var G__22861 = b;
var G__22862 = c;
var G__22863 = d;
var G__22864 = e;
var G__22865 = f;
var G__22866 = g;
var G__22867 = h;
return (target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(G__22860,G__22861,G__22862,G__22863,G__22864,G__22865,G__22866,G__22867) : target_fn.call(null,G__22860,G__22861,G__22862,G__22863,G__22864,G__22865,G__22866,G__22867));
});
var G__23636__10 = (function (self__,a,b,c,d,e,f,g,h,i){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__22868 = a;
var G__22869 = b;
var G__22870 = c;
var G__22871 = d;
var G__22872 = e;
var G__22873 = f;
var G__22874 = g;
var G__22875 = h;
var G__22876 = i;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(G__22868,G__22869,G__22870,G__22871,G__22872,G__22873,G__22874,G__22875,G__22876) : self__.dispatch_fn.call(null,G__22868,G__22869,G__22870,G__22871,G__22872,G__22873,G__22874,G__22875,G__22876));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__22877 = a;
var G__22878 = b;
var G__22879 = c;
var G__22880 = d;
var G__22881 = e;
var G__22882 = f;
var G__22883 = g;
var G__22884 = h;
var G__22885 = i;
return (target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(G__22877,G__22878,G__22879,G__22880,G__22881,G__22882,G__22883,G__22884,G__22885) : target_fn.call(null,G__22877,G__22878,G__22879,G__22880,G__22881,G__22882,G__22883,G__22884,G__22885));
});
var G__23636__11 = (function (self__,a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__22886 = a;
var G__22887 = b;
var G__22888 = c;
var G__22889 = d;
var G__22890 = e;
var G__22891 = f;
var G__22892 = g;
var G__22893 = h;
var G__22894 = i;
var G__22895 = j;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(G__22886,G__22887,G__22888,G__22889,G__22890,G__22891,G__22892,G__22893,G__22894,G__22895) : self__.dispatch_fn.call(null,G__22886,G__22887,G__22888,G__22889,G__22890,G__22891,G__22892,G__22893,G__22894,G__22895));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__22896 = a;
var G__22897 = b;
var G__22898 = c;
var G__22899 = d;
var G__22900 = e;
var G__22901 = f;
var G__22902 = g;
var G__22903 = h;
var G__22904 = i;
var G__22905 = j;
return (target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(G__22896,G__22897,G__22898,G__22899,G__22900,G__22901,G__22902,G__22903,G__22904,G__22905) : target_fn.call(null,G__22896,G__22897,G__22898,G__22899,G__22900,G__22901,G__22902,G__22903,G__22904,G__22905));
});
var G__23636__12 = (function (self__,a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__22906 = a;
var G__22907 = b;
var G__22908 = c;
var G__22909 = d;
var G__22910 = e;
var G__22911 = f;
var G__22912 = g;
var G__22913 = h;
var G__22914 = i;
var G__22915 = j;
var G__22916 = k;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(G__22906,G__22907,G__22908,G__22909,G__22910,G__22911,G__22912,G__22913,G__22914,G__22915,G__22916) : self__.dispatch_fn.call(null,G__22906,G__22907,G__22908,G__22909,G__22910,G__22911,G__22912,G__22913,G__22914,G__22915,G__22916));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__22917 = a;
var G__22918 = b;
var G__22919 = c;
var G__22920 = d;
var G__22921 = e;
var G__22922 = f;
var G__22923 = g;
var G__22924 = h;
var G__22925 = i;
var G__22926 = j;
var G__22927 = k;
return (target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(G__22917,G__22918,G__22919,G__22920,G__22921,G__22922,G__22923,G__22924,G__22925,G__22926,G__22927) : target_fn.call(null,G__22917,G__22918,G__22919,G__22920,G__22921,G__22922,G__22923,G__22924,G__22925,G__22926,G__22927));
});
var G__23636__13 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__22928 = a;
var G__22929 = b;
var G__22930 = c;
var G__22931 = d;
var G__22932 = e;
var G__22933 = f;
var G__22934 = g;
var G__22935 = h;
var G__22936 = i;
var G__22937 = j;
var G__22938 = k;
var G__22939 = l;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(G__22928,G__22929,G__22930,G__22931,G__22932,G__22933,G__22934,G__22935,G__22936,G__22937,G__22938,G__22939) : self__.dispatch_fn.call(null,G__22928,G__22929,G__22930,G__22931,G__22932,G__22933,G__22934,G__22935,G__22936,G__22937,G__22938,G__22939));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__22940 = a;
var G__22941 = b;
var G__22942 = c;
var G__22943 = d;
var G__22944 = e;
var G__22945 = f;
var G__22946 = g;
var G__22947 = h;
var G__22948 = i;
var G__22949 = j;
var G__22950 = k;
var G__22951 = l;
return (target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(G__22940,G__22941,G__22942,G__22943,G__22944,G__22945,G__22946,G__22947,G__22948,G__22949,G__22950,G__22951) : target_fn.call(null,G__22940,G__22941,G__22942,G__22943,G__22944,G__22945,G__22946,G__22947,G__22948,G__22949,G__22950,G__22951));
});
var G__23636__14 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__22952 = a;
var G__22953 = b;
var G__22954 = c;
var G__22955 = d;
var G__22956 = e;
var G__22957 = f;
var G__22958 = g;
var G__22959 = h;
var G__22960 = i;
var G__22961 = j;
var G__22962 = k;
var G__22963 = l;
var G__22964 = m;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(G__22952,G__22953,G__22954,G__22955,G__22956,G__22957,G__22958,G__22959,G__22960,G__22961,G__22962,G__22963,G__22964) : self__.dispatch_fn.call(null,G__22952,G__22953,G__22954,G__22955,G__22956,G__22957,G__22958,G__22959,G__22960,G__22961,G__22962,G__22963,G__22964));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__22965 = a;
var G__22966 = b;
var G__22967 = c;
var G__22968 = d;
var G__22969 = e;
var G__22970 = f;
var G__22971 = g;
var G__22972 = h;
var G__22973 = i;
var G__22974 = j;
var G__22975 = k;
var G__22976 = l;
var G__22977 = m;
return (target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(G__22965,G__22966,G__22967,G__22968,G__22969,G__22970,G__22971,G__22972,G__22973,G__22974,G__22975,G__22976,G__22977) : target_fn.call(null,G__22965,G__22966,G__22967,G__22968,G__22969,G__22970,G__22971,G__22972,G__22973,G__22974,G__22975,G__22976,G__22977));
});
var G__23636__15 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__22978 = a;
var G__22979 = b;
var G__22980 = c;
var G__22981 = d;
var G__22982 = e;
var G__22983 = f;
var G__22984 = g;
var G__22985 = h;
var G__22986 = i;
var G__22987 = j;
var G__22988 = k;
var G__22989 = l;
var G__22990 = m;
var G__22991 = n;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(G__22978,G__22979,G__22980,G__22981,G__22982,G__22983,G__22984,G__22985,G__22986,G__22987,G__22988,G__22989,G__22990,G__22991) : self__.dispatch_fn.call(null,G__22978,G__22979,G__22980,G__22981,G__22982,G__22983,G__22984,G__22985,G__22986,G__22987,G__22988,G__22989,G__22990,G__22991));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__22992 = a;
var G__22993 = b;
var G__22994 = c;
var G__22995 = d;
var G__22996 = e;
var G__22997 = f;
var G__22998 = g;
var G__22999 = h;
var G__23000 = i;
var G__23001 = j;
var G__23002 = k;
var G__23003 = l;
var G__23004 = m;
var G__23005 = n;
return (target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(G__22992,G__22993,G__22994,G__22995,G__22996,G__22997,G__22998,G__22999,G__23000,G__23001,G__23002,G__23003,G__23004,G__23005) : target_fn.call(null,G__22992,G__22993,G__22994,G__22995,G__22996,G__22997,G__22998,G__22999,G__23000,G__23001,G__23002,G__23003,G__23004,G__23005));
});
var G__23636__16 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__23006 = a;
var G__23007 = b;
var G__23008 = c;
var G__23009 = d;
var G__23010 = e;
var G__23011 = f;
var G__23012 = g;
var G__23013 = h;
var G__23014 = i;
var G__23015 = j;
var G__23016 = k;
var G__23017 = l;
var G__23018 = m;
var G__23019 = n;
var G__23020 = o;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(G__23006,G__23007,G__23008,G__23009,G__23010,G__23011,G__23012,G__23013,G__23014,G__23015,G__23016,G__23017,G__23018,G__23019,G__23020) : self__.dispatch_fn.call(null,G__23006,G__23007,G__23008,G__23009,G__23010,G__23011,G__23012,G__23013,G__23014,G__23015,G__23016,G__23017,G__23018,G__23019,G__23020));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__23021 = a;
var G__23022 = b;
var G__23023 = c;
var G__23024 = d;
var G__23025 = e;
var G__23026 = f;
var G__23027 = g;
var G__23028 = h;
var G__23029 = i;
var G__23030 = j;
var G__23031 = k;
var G__23032 = l;
var G__23033 = m;
var G__23034 = n;
var G__23035 = o;
return (target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(G__23021,G__23022,G__23023,G__23024,G__23025,G__23026,G__23027,G__23028,G__23029,G__23030,G__23031,G__23032,G__23033,G__23034,G__23035) : target_fn.call(null,G__23021,G__23022,G__23023,G__23024,G__23025,G__23026,G__23027,G__23028,G__23029,G__23030,G__23031,G__23032,G__23033,G__23034,G__23035));
});
var G__23636__17 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__23036 = a;
var G__23037 = b;
var G__23038 = c;
var G__23039 = d;
var G__23040 = e;
var G__23041 = f;
var G__23042 = g;
var G__23043 = h;
var G__23044 = i;
var G__23045 = j;
var G__23046 = k;
var G__23047 = l;
var G__23048 = m;
var G__23049 = n;
var G__23050 = o;
var G__23051 = p;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(G__23036,G__23037,G__23038,G__23039,G__23040,G__23041,G__23042,G__23043,G__23044,G__23045,G__23046,G__23047,G__23048,G__23049,G__23050,G__23051) : self__.dispatch_fn.call(null,G__23036,G__23037,G__23038,G__23039,G__23040,G__23041,G__23042,G__23043,G__23044,G__23045,G__23046,G__23047,G__23048,G__23049,G__23050,G__23051));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__23052 = a;
var G__23053 = b;
var G__23054 = c;
var G__23055 = d;
var G__23056 = e;
var G__23057 = f;
var G__23058 = g;
var G__23059 = h;
var G__23060 = i;
var G__23061 = j;
var G__23062 = k;
var G__23063 = l;
var G__23064 = m;
var G__23065 = n;
var G__23066 = o;
var G__23067 = p;
return (target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(G__23052,G__23053,G__23054,G__23055,G__23056,G__23057,G__23058,G__23059,G__23060,G__23061,G__23062,G__23063,G__23064,G__23065,G__23066,G__23067) : target_fn.call(null,G__23052,G__23053,G__23054,G__23055,G__23056,G__23057,G__23058,G__23059,G__23060,G__23061,G__23062,G__23063,G__23064,G__23065,G__23066,G__23067));
});
var G__23636__18 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__23068 = a;
var G__23069 = b;
var G__23070 = c;
var G__23071 = d;
var G__23072 = e;
var G__23073 = f;
var G__23074 = g;
var G__23075 = h;
var G__23076 = i;
var G__23077 = j;
var G__23078 = k;
var G__23079 = l;
var G__23080 = m;
var G__23081 = n;
var G__23082 = o;
var G__23083 = p;
var G__23084 = q;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(G__23068,G__23069,G__23070,G__23071,G__23072,G__23073,G__23074,G__23075,G__23076,G__23077,G__23078,G__23079,G__23080,G__23081,G__23082,G__23083,G__23084) : self__.dispatch_fn.call(null,G__23068,G__23069,G__23070,G__23071,G__23072,G__23073,G__23074,G__23075,G__23076,G__23077,G__23078,G__23079,G__23080,G__23081,G__23082,G__23083,G__23084));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__23085 = a;
var G__23086 = b;
var G__23087 = c;
var G__23088 = d;
var G__23089 = e;
var G__23090 = f;
var G__23091 = g;
var G__23092 = h;
var G__23093 = i;
var G__23094 = j;
var G__23095 = k;
var G__23096 = l;
var G__23097 = m;
var G__23098 = n;
var G__23099 = o;
var G__23100 = p;
var G__23101 = q;
return (target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(G__23085,G__23086,G__23087,G__23088,G__23089,G__23090,G__23091,G__23092,G__23093,G__23094,G__23095,G__23096,G__23097,G__23098,G__23099,G__23100,G__23101) : target_fn.call(null,G__23085,G__23086,G__23087,G__23088,G__23089,G__23090,G__23091,G__23092,G__23093,G__23094,G__23095,G__23096,G__23097,G__23098,G__23099,G__23100,G__23101));
});
var G__23636__19 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__23102 = a;
var G__23103 = b;
var G__23104 = c;
var G__23105 = d;
var G__23106 = e;
var G__23107 = f;
var G__23108 = g;
var G__23109 = h;
var G__23110 = i;
var G__23111 = j;
var G__23112 = k;
var G__23113 = l;
var G__23114 = m;
var G__23115 = n;
var G__23116 = o;
var G__23117 = p;
var G__23118 = q;
var G__23119 = r;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(G__23102,G__23103,G__23104,G__23105,G__23106,G__23107,G__23108,G__23109,G__23110,G__23111,G__23112,G__23113,G__23114,G__23115,G__23116,G__23117,G__23118,G__23119) : self__.dispatch_fn.call(null,G__23102,G__23103,G__23104,G__23105,G__23106,G__23107,G__23108,G__23109,G__23110,G__23111,G__23112,G__23113,G__23114,G__23115,G__23116,G__23117,G__23118,G__23119));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__23120 = a;
var G__23121 = b;
var G__23122 = c;
var G__23123 = d;
var G__23124 = e;
var G__23125 = f;
var G__23126 = g;
var G__23127 = h;
var G__23128 = i;
var G__23129 = j;
var G__23130 = k;
var G__23131 = l;
var G__23132 = m;
var G__23133 = n;
var G__23134 = o;
var G__23135 = p;
var G__23136 = q;
var G__23137 = r;
return (target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(G__23120,G__23121,G__23122,G__23123,G__23124,G__23125,G__23126,G__23127,G__23128,G__23129,G__23130,G__23131,G__23132,G__23133,G__23134,G__23135,G__23136,G__23137) : target_fn.call(null,G__23120,G__23121,G__23122,G__23123,G__23124,G__23125,G__23126,G__23127,G__23128,G__23129,G__23130,G__23131,G__23132,G__23133,G__23134,G__23135,G__23136,G__23137));
});
var G__23636__20 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__23138 = a;
var G__23139 = b;
var G__23140 = c;
var G__23141 = d;
var G__23142 = e;
var G__23143 = f;
var G__23144 = g;
var G__23145 = h;
var G__23146 = i;
var G__23147 = j;
var G__23148 = k;
var G__23149 = l;
var G__23150 = m;
var G__23151 = n;
var G__23152 = o;
var G__23153 = p;
var G__23154 = q;
var G__23155 = r;
var G__23156 = s;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(G__23138,G__23139,G__23140,G__23141,G__23142,G__23143,G__23144,G__23145,G__23146,G__23147,G__23148,G__23149,G__23150,G__23151,G__23152,G__23153,G__23154,G__23155,G__23156) : self__.dispatch_fn.call(null,G__23138,G__23139,G__23140,G__23141,G__23142,G__23143,G__23144,G__23145,G__23146,G__23147,G__23148,G__23149,G__23150,G__23151,G__23152,G__23153,G__23154,G__23155,G__23156));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__23157 = a;
var G__23158 = b;
var G__23159 = c;
var G__23160 = d;
var G__23161 = e;
var G__23162 = f;
var G__23163 = g;
var G__23164 = h;
var G__23165 = i;
var G__23166 = j;
var G__23167 = k;
var G__23168 = l;
var G__23169 = m;
var G__23170 = n;
var G__23171 = o;
var G__23172 = p;
var G__23173 = q;
var G__23174 = r;
var G__23175 = s;
return (target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(G__23157,G__23158,G__23159,G__23160,G__23161,G__23162,G__23163,G__23164,G__23165,G__23166,G__23167,G__23168,G__23169,G__23170,G__23171,G__23172,G__23173,G__23174,G__23175) : target_fn.call(null,G__23157,G__23158,G__23159,G__23160,G__23161,G__23162,G__23163,G__23164,G__23165,G__23166,G__23167,G__23168,G__23169,G__23170,G__23171,G__23172,G__23173,G__23174,G__23175));
});
var G__23636__21 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__23176 = a;
var G__23177 = b;
var G__23178 = c;
var G__23179 = d;
var G__23180 = e;
var G__23181 = f;
var G__23182 = g;
var G__23183 = h;
var G__23184 = i;
var G__23185 = j;
var G__23186 = k;
var G__23187 = l;
var G__23188 = m;
var G__23189 = n;
var G__23190 = o;
var G__23191 = p;
var G__23192 = q;
var G__23193 = r;
var G__23194 = s;
var G__23195 = t;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(G__23176,G__23177,G__23178,G__23179,G__23180,G__23181,G__23182,G__23183,G__23184,G__23185,G__23186,G__23187,G__23188,G__23189,G__23190,G__23191,G__23192,G__23193,G__23194,G__23195) : self__.dispatch_fn.call(null,G__23176,G__23177,G__23178,G__23179,G__23180,G__23181,G__23182,G__23183,G__23184,G__23185,G__23186,G__23187,G__23188,G__23189,G__23190,G__23191,G__23192,G__23193,G__23194,G__23195));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__23196 = a;
var G__23197 = b;
var G__23198 = c;
var G__23199 = d;
var G__23200 = e;
var G__23201 = f;
var G__23202 = g;
var G__23203 = h;
var G__23204 = i;
var G__23205 = j;
var G__23206 = k;
var G__23207 = l;
var G__23208 = m;
var G__23209 = n;
var G__23210 = o;
var G__23211 = p;
var G__23212 = q;
var G__23213 = r;
var G__23214 = s;
var G__23215 = t;
return (target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(G__23196,G__23197,G__23198,G__23199,G__23200,G__23201,G__23202,G__23203,G__23204,G__23205,G__23206,G__23207,G__23208,G__23209,G__23210,G__23211,G__23212,G__23213,G__23214,G__23215) : target_fn.call(null,G__23196,G__23197,G__23198,G__23199,G__23200,G__23201,G__23202,G__23203,G__23204,G__23205,G__23206,G__23207,G__23208,G__23209,G__23210,G__23211,G__23212,G__23213,G__23214,G__23215));
});
var G__23636__22 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
});
G__23636 = function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return G__23636__1.call(this,self__);
case 2:
return G__23636__2.call(this,self__,a);
case 3:
return G__23636__3.call(this,self__,a,b);
case 4:
return G__23636__4.call(this,self__,a,b,c);
case 5:
return G__23636__5.call(this,self__,a,b,c,d);
case 6:
return G__23636__6.call(this,self__,a,b,c,d,e);
case 7:
return G__23636__7.call(this,self__,a,b,c,d,e,f);
case 8:
return G__23636__8.call(this,self__,a,b,c,d,e,f,g);
case 9:
return G__23636__9.call(this,self__,a,b,c,d,e,f,g,h);
case 10:
return G__23636__10.call(this,self__,a,b,c,d,e,f,g,h,i);
case 11:
return G__23636__11.call(this,self__,a,b,c,d,e,f,g,h,i,j);
case 12:
return G__23636__12.call(this,self__,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return G__23636__13.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return G__23636__14.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return G__23636__15.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return G__23636__16.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return G__23636__17.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return G__23636__18.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return G__23636__19.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return G__23636__20.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return G__23636__21.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return G__23636__22.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__23636.cljs$core$IFn$_invoke$arity$1 = G__23636__1;
G__23636.cljs$core$IFn$_invoke$arity$2 = G__23636__2;
G__23636.cljs$core$IFn$_invoke$arity$3 = G__23636__3;
G__23636.cljs$core$IFn$_invoke$arity$4 = G__23636__4;
G__23636.cljs$core$IFn$_invoke$arity$5 = G__23636__5;
G__23636.cljs$core$IFn$_invoke$arity$6 = G__23636__6;
G__23636.cljs$core$IFn$_invoke$arity$7 = G__23636__7;
G__23636.cljs$core$IFn$_invoke$arity$8 = G__23636__8;
G__23636.cljs$core$IFn$_invoke$arity$9 = G__23636__9;
G__23636.cljs$core$IFn$_invoke$arity$10 = G__23636__10;
G__23636.cljs$core$IFn$_invoke$arity$11 = G__23636__11;
G__23636.cljs$core$IFn$_invoke$arity$12 = G__23636__12;
G__23636.cljs$core$IFn$_invoke$arity$13 = G__23636__13;
G__23636.cljs$core$IFn$_invoke$arity$14 = G__23636__14;
G__23636.cljs$core$IFn$_invoke$arity$15 = G__23636__15;
G__23636.cljs$core$IFn$_invoke$arity$16 = G__23636__16;
G__23636.cljs$core$IFn$_invoke$arity$17 = G__23636__17;
G__23636.cljs$core$IFn$_invoke$arity$18 = G__23636__18;
G__23636.cljs$core$IFn$_invoke$arity$19 = G__23636__19;
G__23636.cljs$core$IFn$_invoke$arity$20 = G__23636__20;
G__23636.cljs$core$IFn$_invoke$arity$21 = G__23636__21;
G__23636.cljs$core$IFn$_invoke$arity$22 = G__23636__22;
return G__23636;
})()
;

cljs.core.MultiFn.prototype.apply = (function (self__,args22788){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args22788)));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){
var self__ = this;
var mf = this;
var dispatch_val = (function (){return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return (target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$1 = (function (a){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__23216 = a;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(G__23216) : self__.dispatch_fn.call(null,G__23216));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__23217 = a;
return (target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(G__23217) : target_fn.call(null,G__23217));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$2 = (function (a,b){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__23218 = a;
var G__23219 = b;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(G__23218,G__23219) : self__.dispatch_fn.call(null,G__23218,G__23219));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__23220 = a;
var G__23221 = b;
return (target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(G__23220,G__23221) : target_fn.call(null,G__23220,G__23221));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$3 = (function (a,b,c){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__23222 = a;
var G__23223 = b;
var G__23224 = c;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(G__23222,G__23223,G__23224) : self__.dispatch_fn.call(null,G__23222,G__23223,G__23224));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__23225 = a;
var G__23226 = b;
var G__23227 = c;
return (target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(G__23225,G__23226,G__23227) : target_fn.call(null,G__23225,G__23226,G__23227));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$4 = (function (a,b,c,d){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__23228 = a;
var G__23229 = b;
var G__23230 = c;
var G__23231 = d;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(G__23228,G__23229,G__23230,G__23231) : self__.dispatch_fn.call(null,G__23228,G__23229,G__23230,G__23231));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__23232 = a;
var G__23233 = b;
var G__23234 = c;
var G__23235 = d;
return (target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(G__23232,G__23233,G__23234,G__23235) : target_fn.call(null,G__23232,G__23233,G__23234,G__23235));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$5 = (function (a,b,c,d,e){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__23236 = a;
var G__23237 = b;
var G__23238 = c;
var G__23239 = d;
var G__23240 = e;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(G__23236,G__23237,G__23238,G__23239,G__23240) : self__.dispatch_fn.call(null,G__23236,G__23237,G__23238,G__23239,G__23240));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__23241 = a;
var G__23242 = b;
var G__23243 = c;
var G__23244 = d;
var G__23245 = e;
return (target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(G__23241,G__23242,G__23243,G__23244,G__23245) : target_fn.call(null,G__23241,G__23242,G__23243,G__23244,G__23245));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$6 = (function (a,b,c,d,e,f){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__23246 = a;
var G__23247 = b;
var G__23248 = c;
var G__23249 = d;
var G__23250 = e;
var G__23251 = f;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(G__23246,G__23247,G__23248,G__23249,G__23250,G__23251) : self__.dispatch_fn.call(null,G__23246,G__23247,G__23248,G__23249,G__23250,G__23251));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__23252 = a;
var G__23253 = b;
var G__23254 = c;
var G__23255 = d;
var G__23256 = e;
var G__23257 = f;
return (target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(G__23252,G__23253,G__23254,G__23255,G__23256,G__23257) : target_fn.call(null,G__23252,G__23253,G__23254,G__23255,G__23256,G__23257));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$7 = (function (a,b,c,d,e,f,g){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__23258 = a;
var G__23259 = b;
var G__23260 = c;
var G__23261 = d;
var G__23262 = e;
var G__23263 = f;
var G__23264 = g;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(G__23258,G__23259,G__23260,G__23261,G__23262,G__23263,G__23264) : self__.dispatch_fn.call(null,G__23258,G__23259,G__23260,G__23261,G__23262,G__23263,G__23264));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__23265 = a;
var G__23266 = b;
var G__23267 = c;
var G__23268 = d;
var G__23269 = e;
var G__23270 = f;
var G__23271 = g;
return (target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(G__23265,G__23266,G__23267,G__23268,G__23269,G__23270,G__23271) : target_fn.call(null,G__23265,G__23266,G__23267,G__23268,G__23269,G__23270,G__23271));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$8 = (function (a,b,c,d,e,f,g,h){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__23272 = a;
var G__23273 = b;
var G__23274 = c;
var G__23275 = d;
var G__23276 = e;
var G__23277 = f;
var G__23278 = g;
var G__23279 = h;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(G__23272,G__23273,G__23274,G__23275,G__23276,G__23277,G__23278,G__23279) : self__.dispatch_fn.call(null,G__23272,G__23273,G__23274,G__23275,G__23276,G__23277,G__23278,G__23279));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__23280 = a;
var G__23281 = b;
var G__23282 = c;
var G__23283 = d;
var G__23284 = e;
var G__23285 = f;
var G__23286 = g;
var G__23287 = h;
return (target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(G__23280,G__23281,G__23282,G__23283,G__23284,G__23285,G__23286,G__23287) : target_fn.call(null,G__23280,G__23281,G__23282,G__23283,G__23284,G__23285,G__23286,G__23287));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$9 = (function (a,b,c,d,e,f,g,h,i){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__23288 = a;
var G__23289 = b;
var G__23290 = c;
var G__23291 = d;
var G__23292 = e;
var G__23293 = f;
var G__23294 = g;
var G__23295 = h;
var G__23296 = i;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(G__23288,G__23289,G__23290,G__23291,G__23292,G__23293,G__23294,G__23295,G__23296) : self__.dispatch_fn.call(null,G__23288,G__23289,G__23290,G__23291,G__23292,G__23293,G__23294,G__23295,G__23296));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__23297 = a;
var G__23298 = b;
var G__23299 = c;
var G__23300 = d;
var G__23301 = e;
var G__23302 = f;
var G__23303 = g;
var G__23304 = h;
var G__23305 = i;
return (target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(G__23297,G__23298,G__23299,G__23300,G__23301,G__23302,G__23303,G__23304,G__23305) : target_fn.call(null,G__23297,G__23298,G__23299,G__23300,G__23301,G__23302,G__23303,G__23304,G__23305));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$10 = (function (a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__23306 = a;
var G__23307 = b;
var G__23308 = c;
var G__23309 = d;
var G__23310 = e;
var G__23311 = f;
var G__23312 = g;
var G__23313 = h;
var G__23314 = i;
var G__23315 = j;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(G__23306,G__23307,G__23308,G__23309,G__23310,G__23311,G__23312,G__23313,G__23314,G__23315) : self__.dispatch_fn.call(null,G__23306,G__23307,G__23308,G__23309,G__23310,G__23311,G__23312,G__23313,G__23314,G__23315));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__23316 = a;
var G__23317 = b;
var G__23318 = c;
var G__23319 = d;
var G__23320 = e;
var G__23321 = f;
var G__23322 = g;
var G__23323 = h;
var G__23324 = i;
var G__23325 = j;
return (target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(G__23316,G__23317,G__23318,G__23319,G__23320,G__23321,G__23322,G__23323,G__23324,G__23325) : target_fn.call(null,G__23316,G__23317,G__23318,G__23319,G__23320,G__23321,G__23322,G__23323,G__23324,G__23325));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$11 = (function (a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__23326 = a;
var G__23327 = b;
var G__23328 = c;
var G__23329 = d;
var G__23330 = e;
var G__23331 = f;
var G__23332 = g;
var G__23333 = h;
var G__23334 = i;
var G__23335 = j;
var G__23336 = k;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(G__23326,G__23327,G__23328,G__23329,G__23330,G__23331,G__23332,G__23333,G__23334,G__23335,G__23336) : self__.dispatch_fn.call(null,G__23326,G__23327,G__23328,G__23329,G__23330,G__23331,G__23332,G__23333,G__23334,G__23335,G__23336));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__23337 = a;
var G__23338 = b;
var G__23339 = c;
var G__23340 = d;
var G__23341 = e;
var G__23342 = f;
var G__23343 = g;
var G__23344 = h;
var G__23345 = i;
var G__23346 = j;
var G__23347 = k;
return (target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(G__23337,G__23338,G__23339,G__23340,G__23341,G__23342,G__23343,G__23344,G__23345,G__23346,G__23347) : target_fn.call(null,G__23337,G__23338,G__23339,G__23340,G__23341,G__23342,G__23343,G__23344,G__23345,G__23346,G__23347));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$12 = (function (a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__23348 = a;
var G__23349 = b;
var G__23350 = c;
var G__23351 = d;
var G__23352 = e;
var G__23353 = f;
var G__23354 = g;
var G__23355 = h;
var G__23356 = i;
var G__23357 = j;
var G__23358 = k;
var G__23359 = l;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(G__23348,G__23349,G__23350,G__23351,G__23352,G__23353,G__23354,G__23355,G__23356,G__23357,G__23358,G__23359) : self__.dispatch_fn.call(null,G__23348,G__23349,G__23350,G__23351,G__23352,G__23353,G__23354,G__23355,G__23356,G__23357,G__23358,G__23359));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__23360 = a;
var G__23361 = b;
var G__23362 = c;
var G__23363 = d;
var G__23364 = e;
var G__23365 = f;
var G__23366 = g;
var G__23367 = h;
var G__23368 = i;
var G__23369 = j;
var G__23370 = k;
var G__23371 = l;
return (target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(G__23360,G__23361,G__23362,G__23363,G__23364,G__23365,G__23366,G__23367,G__23368,G__23369,G__23370,G__23371) : target_fn.call(null,G__23360,G__23361,G__23362,G__23363,G__23364,G__23365,G__23366,G__23367,G__23368,G__23369,G__23370,G__23371));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$13 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__23372 = a;
var G__23373 = b;
var G__23374 = c;
var G__23375 = d;
var G__23376 = e;
var G__23377 = f;
var G__23378 = g;
var G__23379 = h;
var G__23380 = i;
var G__23381 = j;
var G__23382 = k;
var G__23383 = l;
var G__23384 = m;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(G__23372,G__23373,G__23374,G__23375,G__23376,G__23377,G__23378,G__23379,G__23380,G__23381,G__23382,G__23383,G__23384) : self__.dispatch_fn.call(null,G__23372,G__23373,G__23374,G__23375,G__23376,G__23377,G__23378,G__23379,G__23380,G__23381,G__23382,G__23383,G__23384));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__23385 = a;
var G__23386 = b;
var G__23387 = c;
var G__23388 = d;
var G__23389 = e;
var G__23390 = f;
var G__23391 = g;
var G__23392 = h;
var G__23393 = i;
var G__23394 = j;
var G__23395 = k;
var G__23396 = l;
var G__23397 = m;
return (target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(G__23385,G__23386,G__23387,G__23388,G__23389,G__23390,G__23391,G__23392,G__23393,G__23394,G__23395,G__23396,G__23397) : target_fn.call(null,G__23385,G__23386,G__23387,G__23388,G__23389,G__23390,G__23391,G__23392,G__23393,G__23394,G__23395,G__23396,G__23397));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$14 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__23398 = a;
var G__23399 = b;
var G__23400 = c;
var G__23401 = d;
var G__23402 = e;
var G__23403 = f;
var G__23404 = g;
var G__23405 = h;
var G__23406 = i;
var G__23407 = j;
var G__23408 = k;
var G__23409 = l;
var G__23410 = m;
var G__23411 = n;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(G__23398,G__23399,G__23400,G__23401,G__23402,G__23403,G__23404,G__23405,G__23406,G__23407,G__23408,G__23409,G__23410,G__23411) : self__.dispatch_fn.call(null,G__23398,G__23399,G__23400,G__23401,G__23402,G__23403,G__23404,G__23405,G__23406,G__23407,G__23408,G__23409,G__23410,G__23411));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__23412 = a;
var G__23413 = b;
var G__23414 = c;
var G__23415 = d;
var G__23416 = e;
var G__23417 = f;
var G__23418 = g;
var G__23419 = h;
var G__23420 = i;
var G__23421 = j;
var G__23422 = k;
var G__23423 = l;
var G__23424 = m;
var G__23425 = n;
return (target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(G__23412,G__23413,G__23414,G__23415,G__23416,G__23417,G__23418,G__23419,G__23420,G__23421,G__23422,G__23423,G__23424,G__23425) : target_fn.call(null,G__23412,G__23413,G__23414,G__23415,G__23416,G__23417,G__23418,G__23419,G__23420,G__23421,G__23422,G__23423,G__23424,G__23425));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$15 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__23426 = a;
var G__23427 = b;
var G__23428 = c;
var G__23429 = d;
var G__23430 = e;
var G__23431 = f;
var G__23432 = g;
var G__23433 = h;
var G__23434 = i;
var G__23435 = j;
var G__23436 = k;
var G__23437 = l;
var G__23438 = m;
var G__23439 = n;
var G__23440 = o;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(G__23426,G__23427,G__23428,G__23429,G__23430,G__23431,G__23432,G__23433,G__23434,G__23435,G__23436,G__23437,G__23438,G__23439,G__23440) : self__.dispatch_fn.call(null,G__23426,G__23427,G__23428,G__23429,G__23430,G__23431,G__23432,G__23433,G__23434,G__23435,G__23436,G__23437,G__23438,G__23439,G__23440));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__23441 = a;
var G__23442 = b;
var G__23443 = c;
var G__23444 = d;
var G__23445 = e;
var G__23446 = f;
var G__23447 = g;
var G__23448 = h;
var G__23449 = i;
var G__23450 = j;
var G__23451 = k;
var G__23452 = l;
var G__23453 = m;
var G__23454 = n;
var G__23455 = o;
return (target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(G__23441,G__23442,G__23443,G__23444,G__23445,G__23446,G__23447,G__23448,G__23449,G__23450,G__23451,G__23452,G__23453,G__23454,G__23455) : target_fn.call(null,G__23441,G__23442,G__23443,G__23444,G__23445,G__23446,G__23447,G__23448,G__23449,G__23450,G__23451,G__23452,G__23453,G__23454,G__23455));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$16 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__23456 = a;
var G__23457 = b;
var G__23458 = c;
var G__23459 = d;
var G__23460 = e;
var G__23461 = f;
var G__23462 = g;
var G__23463 = h;
var G__23464 = i;
var G__23465 = j;
var G__23466 = k;
var G__23467 = l;
var G__23468 = m;
var G__23469 = n;
var G__23470 = o;
var G__23471 = p;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(G__23456,G__23457,G__23458,G__23459,G__23460,G__23461,G__23462,G__23463,G__23464,G__23465,G__23466,G__23467,G__23468,G__23469,G__23470,G__23471) : self__.dispatch_fn.call(null,G__23456,G__23457,G__23458,G__23459,G__23460,G__23461,G__23462,G__23463,G__23464,G__23465,G__23466,G__23467,G__23468,G__23469,G__23470,G__23471));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__23472 = a;
var G__23473 = b;
var G__23474 = c;
var G__23475 = d;
var G__23476 = e;
var G__23477 = f;
var G__23478 = g;
var G__23479 = h;
var G__23480 = i;
var G__23481 = j;
var G__23482 = k;
var G__23483 = l;
var G__23484 = m;
var G__23485 = n;
var G__23486 = o;
var G__23487 = p;
return (target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(G__23472,G__23473,G__23474,G__23475,G__23476,G__23477,G__23478,G__23479,G__23480,G__23481,G__23482,G__23483,G__23484,G__23485,G__23486,G__23487) : target_fn.call(null,G__23472,G__23473,G__23474,G__23475,G__23476,G__23477,G__23478,G__23479,G__23480,G__23481,G__23482,G__23483,G__23484,G__23485,G__23486,G__23487));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$17 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__23488 = a;
var G__23489 = b;
var G__23490 = c;
var G__23491 = d;
var G__23492 = e;
var G__23493 = f;
var G__23494 = g;
var G__23495 = h;
var G__23496 = i;
var G__23497 = j;
var G__23498 = k;
var G__23499 = l;
var G__23500 = m;
var G__23501 = n;
var G__23502 = o;
var G__23503 = p;
var G__23504 = q;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(G__23488,G__23489,G__23490,G__23491,G__23492,G__23493,G__23494,G__23495,G__23496,G__23497,G__23498,G__23499,G__23500,G__23501,G__23502,G__23503,G__23504) : self__.dispatch_fn.call(null,G__23488,G__23489,G__23490,G__23491,G__23492,G__23493,G__23494,G__23495,G__23496,G__23497,G__23498,G__23499,G__23500,G__23501,G__23502,G__23503,G__23504));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__23505 = a;
var G__23506 = b;
var G__23507 = c;
var G__23508 = d;
var G__23509 = e;
var G__23510 = f;
var G__23511 = g;
var G__23512 = h;
var G__23513 = i;
var G__23514 = j;
var G__23515 = k;
var G__23516 = l;
var G__23517 = m;
var G__23518 = n;
var G__23519 = o;
var G__23520 = p;
var G__23521 = q;
return (target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(G__23505,G__23506,G__23507,G__23508,G__23509,G__23510,G__23511,G__23512,G__23513,G__23514,G__23515,G__23516,G__23517,G__23518,G__23519,G__23520,G__23521) : target_fn.call(null,G__23505,G__23506,G__23507,G__23508,G__23509,G__23510,G__23511,G__23512,G__23513,G__23514,G__23515,G__23516,G__23517,G__23518,G__23519,G__23520,G__23521));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$18 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__23522 = a;
var G__23523 = b;
var G__23524 = c;
var G__23525 = d;
var G__23526 = e;
var G__23527 = f;
var G__23528 = g;
var G__23529 = h;
var G__23530 = i;
var G__23531 = j;
var G__23532 = k;
var G__23533 = l;
var G__23534 = m;
var G__23535 = n;
var G__23536 = o;
var G__23537 = p;
var G__23538 = q;
var G__23539 = r;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(G__23522,G__23523,G__23524,G__23525,G__23526,G__23527,G__23528,G__23529,G__23530,G__23531,G__23532,G__23533,G__23534,G__23535,G__23536,G__23537,G__23538,G__23539) : self__.dispatch_fn.call(null,G__23522,G__23523,G__23524,G__23525,G__23526,G__23527,G__23528,G__23529,G__23530,G__23531,G__23532,G__23533,G__23534,G__23535,G__23536,G__23537,G__23538,G__23539));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__23540 = a;
var G__23541 = b;
var G__23542 = c;
var G__23543 = d;
var G__23544 = e;
var G__23545 = f;
var G__23546 = g;
var G__23547 = h;
var G__23548 = i;
var G__23549 = j;
var G__23550 = k;
var G__23551 = l;
var G__23552 = m;
var G__23553 = n;
var G__23554 = o;
var G__23555 = p;
var G__23556 = q;
var G__23557 = r;
return (target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(G__23540,G__23541,G__23542,G__23543,G__23544,G__23545,G__23546,G__23547,G__23548,G__23549,G__23550,G__23551,G__23552,G__23553,G__23554,G__23555,G__23556,G__23557) : target_fn.call(null,G__23540,G__23541,G__23542,G__23543,G__23544,G__23545,G__23546,G__23547,G__23548,G__23549,G__23550,G__23551,G__23552,G__23553,G__23554,G__23555,G__23556,G__23557));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$19 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__23558 = a;
var G__23559 = b;
var G__23560 = c;
var G__23561 = d;
var G__23562 = e;
var G__23563 = f;
var G__23564 = g;
var G__23565 = h;
var G__23566 = i;
var G__23567 = j;
var G__23568 = k;
var G__23569 = l;
var G__23570 = m;
var G__23571 = n;
var G__23572 = o;
var G__23573 = p;
var G__23574 = q;
var G__23575 = r;
var G__23576 = s;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(G__23558,G__23559,G__23560,G__23561,G__23562,G__23563,G__23564,G__23565,G__23566,G__23567,G__23568,G__23569,G__23570,G__23571,G__23572,G__23573,G__23574,G__23575,G__23576) : self__.dispatch_fn.call(null,G__23558,G__23559,G__23560,G__23561,G__23562,G__23563,G__23564,G__23565,G__23566,G__23567,G__23568,G__23569,G__23570,G__23571,G__23572,G__23573,G__23574,G__23575,G__23576));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__23577 = a;
var G__23578 = b;
var G__23579 = c;
var G__23580 = d;
var G__23581 = e;
var G__23582 = f;
var G__23583 = g;
var G__23584 = h;
var G__23585 = i;
var G__23586 = j;
var G__23587 = k;
var G__23588 = l;
var G__23589 = m;
var G__23590 = n;
var G__23591 = o;
var G__23592 = p;
var G__23593 = q;
var G__23594 = r;
var G__23595 = s;
return (target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(G__23577,G__23578,G__23579,G__23580,G__23581,G__23582,G__23583,G__23584,G__23585,G__23586,G__23587,G__23588,G__23589,G__23590,G__23591,G__23592,G__23593,G__23594,G__23595) : target_fn.call(null,G__23577,G__23578,G__23579,G__23580,G__23581,G__23582,G__23583,G__23584,G__23585,G__23586,G__23587,G__23588,G__23589,G__23590,G__23591,G__23592,G__23593,G__23594,G__23595));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$20 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__23596 = a;
var G__23597 = b;
var G__23598 = c;
var G__23599 = d;
var G__23600 = e;
var G__23601 = f;
var G__23602 = g;
var G__23603 = h;
var G__23604 = i;
var G__23605 = j;
var G__23606 = k;
var G__23607 = l;
var G__23608 = m;
var G__23609 = n;
var G__23610 = o;
var G__23611 = p;
var G__23612 = q;
var G__23613 = r;
var G__23614 = s;
var G__23615 = t;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(G__23596,G__23597,G__23598,G__23599,G__23600,G__23601,G__23602,G__23603,G__23604,G__23605,G__23606,G__23607,G__23608,G__23609,G__23610,G__23611,G__23612,G__23613,G__23614,G__23615) : self__.dispatch_fn.call(null,G__23596,G__23597,G__23598,G__23599,G__23600,G__23601,G__23602,G__23603,G__23604,G__23605,G__23606,G__23607,G__23608,G__23609,G__23610,G__23611,G__23612,G__23613,G__23614,G__23615));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__23616 = a;
var G__23617 = b;
var G__23618 = c;
var G__23619 = d;
var G__23620 = e;
var G__23621 = f;
var G__23622 = g;
var G__23623 = h;
var G__23624 = i;
var G__23625 = j;
var G__23626 = k;
var G__23627 = l;
var G__23628 = m;
var G__23629 = n;
var G__23630 = o;
var G__23631 = p;
var G__23632 = q;
var G__23633 = r;
var G__23634 = s;
var G__23635 = t;
return (target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(G__23616,G__23617,G__23618,G__23619,G__23620,G__23621,G__23622,G__23623,G__23624,G__23625,G__23626,G__23627,G__23628,G__23629,G__23630,G__23631,G__23632,G__23633,G__23634,G__23635) : target_fn.call(null,G__23616,G__23617,G__23618,G__23619,G__23620,G__23621,G__23622,G__23623,G__23624,G__23625,G__23626,G__23627,G__23628,G__23629,G__23630,G__23631,G__23632,G__23633,G__23634,G__23635));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$21 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var mf = this;
var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
});

cljs.core.MultiFn.cljs$lang$type = true;

cljs.core.MultiFn.cljs$lang$ctorStr = "cljs.core/MultiFn";

cljs.core.MultiFn.cljs$lang$ctorPrWriter = (function (this__8091__auto__,writer__8092__auto__,opt__8093__auto__){
return cljs.core._write(writer__8092__auto__,"cljs.core/MultiFn");
});

cljs.core.__GT_MultiFn = (function __GT_MultiFn(name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
return (new cljs.core.MultiFn(name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy));
});

/**
* Removes all of the methods of multimethod.
*/
cljs.core.remove_all_methods = (function remove_all_methods(multifn){
return cljs.core._reset(multifn);
});
/**
* Removes the method of multimethod associated with dispatch-value.
*/
cljs.core.remove_method = (function remove_method(multifn,dispatch_val){
return cljs.core._remove_method(multifn,dispatch_val);
});
/**
* Causes the multimethod to prefer matches of dispatch-val-x over dispatch-val-y
* when there is a conflict
*/
cljs.core.prefer_method = (function prefer_method(multifn,dispatch_val_x,dispatch_val_y){
return cljs.core._prefer_method(multifn,dispatch_val_x,dispatch_val_y);
});
/**
* Given a multimethod, returns a map of dispatch values -> dispatch fns
*/
cljs.core.methods$ = (function methods$(multifn){
return cljs.core._methods(multifn);
});
/**
* Given a multimethod and a dispatch value, returns the dispatch fn
* that would apply to that value, or nil if none apply and no default
*/
cljs.core.get_method = (function get_method(multifn,dispatch_val){
return cljs.core._get_method(multifn,dispatch_val);
});
/**
* Given a multimethod, returns a map of preferred value -> set of other values
*/
cljs.core.prefers = (function prefers(multifn){
return cljs.core._prefers(multifn);
});

/**
* @constructor
*/
cljs.core.UUID = (function (uuid){
this.uuid = uuid;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2153775104;
})
cljs.core.UUID.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__23637 = cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([this$__$1], 0));
return goog.string.hashCode(G__23637);
});

cljs.core.UUID.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (_,writer,___$1){
var self__ = this;
var ___$2 = this;
return cljs.core._write(writer,[cljs.core.str("#uuid \""),cljs.core.str(self__.uuid),cljs.core.str("\"")].join(''));
});

cljs.core.UUID.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
return ((other instanceof cljs.core.UUID)) && ((self__.uuid === other.uuid));
});

cljs.core.UUID.prototype.toString = (function (){
var self__ = this;
var _ = this;
return self__.uuid;
});

cljs.core.UUID.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.UUID.cljs$lang$type = true;

cljs.core.UUID.cljs$lang$ctorStr = "cljs.core/UUID";

cljs.core.UUID.cljs$lang$ctorPrWriter = (function (this__8091__auto__,writer__8092__auto__,opt__8093__auto__){
return cljs.core._write(writer__8092__auto__,"cljs.core/UUID");
});

cljs.core.__GT_UUID = (function __GT_UUID(uuid){
return (new cljs.core.UUID(uuid));
});


/**
* @constructor
*/
cljs.core.ExceptionInfo = (function (message,data,cause){
this.message = message;
this.data = data;
this.cause = cause;
})

cljs.core.ExceptionInfo.cljs$lang$type = true;

cljs.core.ExceptionInfo.cljs$lang$ctorStr = "cljs.core/ExceptionInfo";

cljs.core.ExceptionInfo.cljs$lang$ctorPrWriter = (function (this__8091__auto__,writer__8092__auto__,opt__8093__auto__){
return cljs.core._write(writer__8092__auto__,"cljs.core/ExceptionInfo");
});

cljs.core.__GT_ExceptionInfo = (function __GT_ExceptionInfo(message,data,cause){
return (new cljs.core.ExceptionInfo(message,data,cause));
});

cljs.core.pr_writer_ex_info = (function pr_writer_ex_info(obj,writer,opts){
cljs.core._write(writer,"#ExceptionInfo{:message ");

cljs.core.pr_writer(obj.message,writer,opts);

if(cljs.core.truth_(obj.data)){
cljs.core._write(writer,", :data ");

cljs.core.pr_writer(obj.data,writer,opts);
} else {
}

if(cljs.core.truth_(obj.cause)){
cljs.core._write(writer,", :cause ");

cljs.core.pr_writer(obj.cause,writer,opts);
} else {
}

return cljs.core._write(writer,"}");
});
/**
* Alpha - subject to change.
* Create an instance of ExceptionInfo, an Error type that carries a
* map of additional data.
*/
cljs.core.ex_info = (function() {
var ex_info = null;
var ex_info__2 = (function (msg,data){
return ex_info.cljs$core$IFn$_invoke$arity$3(msg,data,null);
});
var ex_info__3 = (function (msg,data,cause){
cljs.core.ExceptionInfo.prototype = (function (){var G__23642 = msg;
return Error(G__23642);
})();

cljs.core.ExceptionInfo.prototype.name = "ExceptionInfo";

cljs.core.ExceptionInfo.prototype.constructor = cljs.core.ExceptionInfo;

cljs.core.ExceptionInfo.prototype.toString = cljs.core.pr_str_STAR_;

cljs.core.ExceptionInfo.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ExceptionInfo.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (obj,writer,opts){
var obj__$1 = this;
return cljs.core.pr_writer_ex_info(obj__$1,writer,opts);
});

return (new cljs.core.ExceptionInfo(msg,data,cause));
});
ex_info = function(msg,data,cause){
switch(arguments.length){
case 2:
return ex_info__2.call(this,msg,data);
case 3:
return ex_info__3.call(this,msg,data,cause);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ex_info.cljs$core$IFn$_invoke$arity$2 = ex_info__2;
ex_info.cljs$core$IFn$_invoke$arity$3 = ex_info__3;
return ex_info;
})()
;
/**
* Alpha - subject to change.
* Returns exception data (a map) if ex is an ExceptionInfo.
* Otherwise returns nil.
*/
cljs.core.ex_data = (function ex_data(ex){
if((ex instanceof cljs.core.ExceptionInfo)){
return ex.data;
} else {
return null;
}
});
/**
* Alpha - subject to change.
* Returns the message attached to the given Error / ExceptionInfo object.
* For non-Errors returns nil.
*/
cljs.core.ex_message = (function ex_message(ex){
if((ex instanceof Error)){
return ex.message;
} else {
return null;
}
});
/**
* Alpha - subject to change.
* Returns exception cause (an Error / ExceptionInfo) if ex is an
* ExceptionInfo.
* Otherwise returns nil.
*/
cljs.core.ex_cause = (function ex_cause(ex){
if((ex instanceof cljs.core.ExceptionInfo)){
return ex.cause;
} else {
return null;
}
});
/**
* Returns an JavaScript compatible comparator based upon pred.
*/
cljs.core.comparator = (function comparator(pred){
return (function (x,y){
if(cljs.core.truth_((function (){var G__23647 = x;
var G__23648 = y;
return (pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(G__23647,G__23648) : pred.call(null,G__23647,G__23648));
})())){
return (-1);
} else {
if(cljs.core.truth_((function (){var G__23649 = y;
var G__23650 = x;
return (pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(G__23649,G__23650) : pred.call(null,G__23649,G__23650));
})())){
return (1);
} else {
return (0);

}
}
});
});
cljs.core.special_symbol_QMARK_ = (function special_symbol_QMARK_(x){
return cljs.core.contains_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 19, [new cljs.core.Symbol(null,"&","&",-2144855648,null),null,new cljs.core.Symbol(null,"defrecord*","defrecord*",-1936366207,null),null,new cljs.core.Symbol(null,"try","try",-1273693247,null),null,new cljs.core.Symbol(null,"loop*","loop*",615029416,null),null,new cljs.core.Symbol(null,"do","do",1686842252,null),null,new cljs.core.Symbol(null,"letfn*","letfn*",-110097810,null),null,new cljs.core.Symbol(null,"if","if",1181717262,null),null,new cljs.core.Symbol(null,"new","new",-444906321,null),null,new cljs.core.Symbol(null,"ns","ns",2082130287,null),null,new cljs.core.Symbol(null,"deftype*","deftype*",962659890,null),null,new cljs.core.Symbol(null,"let*","let*",1920721458,null),null,new cljs.core.Symbol(null,"js*","js*",-1134233646,null),null,new cljs.core.Symbol(null,"fn*","fn*",-752876845,null),null,new cljs.core.Symbol(null,"recur","recur",1202958259,null),null,new cljs.core.Symbol(null,"set!","set!",250714521,null),null,new cljs.core.Symbol(null,".",".",1975675962,null),null,new cljs.core.Symbol(null,"quote","quote",1377916282,null),null,new cljs.core.Symbol(null,"throw","throw",595905694,null),null,new cljs.core.Symbol(null,"def","def",597100991,null),null], null), null),x);
});
/**
* test [v] finds fn at key :test in var metadata and calls it,
* presuming failure will throw exception
*/
cljs.core.test = (function test(v){
var f = v.cljs$lang$test;
if(cljs.core.truth_(f)){
(f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));

return new cljs.core.Keyword(null,"ok","ok",967785236);
} else {
return new cljs.core.Keyword(null,"no-test","no-test",-1679482642);
}
});
