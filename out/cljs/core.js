// Compiled by ClojureScript 0.0-2674 {:static-fns true}
goog.provide('cljs.core');
goog.require('goog.string.StringBuffer');
goog.require('goog.array');
goog.require('goog.object');
goog.require('goog.string');
cljs.core._STAR_clojurescript_version_STAR_ = "0.0-2674";
cljs.core._STAR_unchecked_if_STAR_ = false;
if(typeof cljs.core._STAR_print_fn_STAR_ !== 'undefined'){
} else {
/**
* Each runtime environment provides a different way to print output.
* Whatever function *print-fn* is bound to will be passed any
* Strings which should be printed.
*/
cljs.core._STAR_print_fn_STAR_ = (function _STAR_print_fn_STAR_(_){
throw (new Error("No *print-fn* fn set for evaluation environment"));
});
}
/**
* Set *print-fn* to f.
*/
cljs.core.set_print_fn_BANG_ = (function set_print_fn_BANG_(f){
return cljs.core._STAR_print_fn_STAR_ = f;
});
cljs.core._STAR_flush_on_newline_STAR_ = true;
cljs.core._STAR_print_newline_STAR_ = true;
cljs.core._STAR_print_readably_STAR_ = true;
cljs.core._STAR_print_meta_STAR_ = false;
cljs.core._STAR_print_dup_STAR_ = false;
cljs.core._STAR_print_length_STAR_ = null;
cljs.core._STAR_print_level_STAR_ = null;
if(typeof cljs.core._STAR_loaded_libs_STAR_ !== 'undefined'){
} else {
cljs.core._STAR_loaded_libs_STAR_ = null;
}
cljs.core.pr_opts = (function pr_opts(){
return new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,"flush-on-newline","flush-on-newline",-151457939),cljs.core._STAR_flush_on_newline_STAR_,new cljs.core.Keyword(null,"readably","readably",1129599760),cljs.core._STAR_print_readably_STAR_,new cljs.core.Keyword(null,"meta","meta",1499536964),cljs.core._STAR_print_meta_STAR_,new cljs.core.Keyword(null,"dup","dup",556298533),cljs.core._STAR_print_dup_STAR_,new cljs.core.Keyword(null,"print-length","print-length",1931866356),cljs.core._STAR_print_length_STAR_], null);
});
/**
* Set *print-fn* to console.log
*/
cljs.core.enable_console_print_BANG_ = (function enable_console_print_BANG_(){
cljs.core._STAR_print_newline_STAR_ = false;

return cljs.core._STAR_print_fn_STAR_ = (function() { 
var G__5222__delegate = function (args){
return console.log.apply(console,(function (){var G__5221 = args;
return (cljs.core.into_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(G__5221) : cljs.core.into_array.call(null,G__5221));
})());
};
var G__5222 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__5223__i = 0, G__5223__a = new Array(arguments.length -  0);
while (G__5223__i < G__5223__a.length) {G__5223__a[G__5223__i] = arguments[G__5223__i + 0]; ++G__5223__i;}
  args = new cljs.core.IndexedSeq(G__5223__a,0);
} 
return G__5222__delegate.call(this,args);};
G__5222.cljs$lang$maxFixedArity = 0;
G__5222.cljs$lang$applyTo = (function (arglist__5224){
var args = cljs.core.seq(arglist__5224);
return G__5222__delegate(args);
});
G__5222.cljs$core$IFn$_invoke$arity$variadic = G__5222__delegate;
return G__5222;
})()
;
});
/**
* Internal - do not use!
*/
cljs.core.truth_ = (function truth_(x){
return (x != null && x !== false);
});
cljs.core.not_native = null;

/**
* Tests if 2 arguments are the same object
*/
cljs.core.identical_QMARK_ = (function identical_QMARK_(x,y){
return (x === y);
});
/**
* Returns true if x is nil, false otherwise.
*/
cljs.core.nil_QMARK_ = (function nil_QMARK_(x){
return (x == null);
});
cljs.core.array_QMARK_ = (function array_QMARK_(x){
return x instanceof Array;
});
cljs.core.number_QMARK_ = (function number_QMARK_(n){
return typeof n === 'number';
});
/**
* Returns true if x is logical false, false otherwise.
*/
cljs.core.not = (function not(x){
if(cljs.core.truth_(x)){
return false;
} else {
return true;
}
});
/**
* Returns true if x is not nil, false otherwise.
*/
cljs.core.some_QMARK_ = (function some_QMARK_(x){
return !((x == null));
});
cljs.core.object_QMARK_ = (function object_QMARK_(x){
if(!((x == null))){
return (x.constructor === Object);
} else {
return false;
}
});
cljs.core.string_QMARK_ = (function string_QMARK_(x){
var G__5226 = x;
return goog.isString(G__5226);
});
/**
* Internal - do not use!
*/
cljs.core.native_satisfies_QMARK_ = (function native_satisfies_QMARK_(p,x){
var x__$1 = (((x == null))?null:x);
if((p[(function (){var G__5228 = x__$1;
return goog.typeOf(G__5228);
})()])){
return true;
} else {
if((p["_"])){
return true;
} else {
return false;

}
}
});
cljs.core.is_proto_ = (function is_proto_(x){
return (x.constructor.prototype === x);
});
/**
* When compiled for a command-line target, whatever
* function *main-fn* is set to will be called with the command-line
* argv as arguments
*/
cljs.core._STAR_main_cli_fn_STAR_ = null;
cljs.core.type = (function type(x){
if((x == null)){
return null;
} else {
return x.constructor;
}
});
cljs.core.missing_protocol = (function missing_protocol(proto,obj){
var ty = cljs.core.type(obj);
var ty__$1 = (cljs.core.truth_((function (){var and__3720__auto__ = ty;
if(cljs.core.truth_(and__3720__auto__)){
return ty.cljs$lang$type;
} else {
return and__3720__auto__;
}
})())?ty.cljs$lang$ctorStr:(function (){var G__5230 = obj;
return goog.typeOf(G__5230);
})());
return (new Error(["No protocol method ",proto," defined for type ",ty__$1,": ",obj].join("")));
});
cljs.core.type__GT_str = (function type__GT_str(ty){
var temp__4124__auto__ = ty.cljs$lang$ctorStr;
if(cljs.core.truth_(temp__4124__auto__)){
var s = temp__4124__auto__;
return s;
} else {
return [cljs.core.str(ty)].join('');
}
});
if((typeof Symbol !== 'undefined') && (((function (){var G__5232 = Symbol;
return goog.typeOf(G__5232);
})() === "function"))){
cljs.core.ITER_SYMBOL = Symbol.iterator;
} else {
cljs.core.ITER_SYMBOL = "@@iterator";
}
cljs.core.make_array = (function() {
var make_array = null;
var make_array__1 = (function (size){
return (new Array(size));
});
var make_array__2 = (function (type,size){
return make_array.cljs$core$IFn$_invoke$arity$1(size);
});
make_array = function(type,size){
switch(arguments.length){
case 1:
return make_array__1.call(this,type);
case 2:
return make_array__2.call(this,type,size);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
make_array.cljs$core$IFn$_invoke$arity$1 = make_array__1;
make_array.cljs$core$IFn$_invoke$arity$2 = make_array__2;
return make_array;
})()
;
/**
* Returns a javascript array, cloned from the passed in array
*/
cljs.core.aclone = (function aclone(arr){
var len = arr.length;
var new_arr = (new Array(len));
var n__4619__auto___5234 = len;
var i_5235 = (0);
while(true){
if((i_5235 < n__4619__auto___5234)){
(new_arr[i_5235] = (arr[i_5235]));

var G__5236 = (i_5235 + (1));
i_5235 = G__5236;
continue;
} else {
}
break;
}

return new_arr;
});
/**
* Creates a new javascript array.
* @param {...*} var_args
*/
cljs.core.array = (function array(var_args){
var a = (new Array(arguments.length));
var i = (0);
while(true){
if((i < a.length)){
(a[i] = (arguments[i]));

var G__5237 = (i + (1));
i = G__5237;
continue;
} else {
return a;
}
break;
}
});
/**
* Returns the value at the index.
* @param {...*} var_args
*/
cljs.core.aget = (function() {
var aget = null;
var aget__2 = (function (array,i){
return (array[i]);
});
var aget__3 = (function() { 
var G__5246__delegate = function (array,i,idxs){
var G__5243 = aget;
var G__5244 = aget.cljs$core$IFn$_invoke$arity$2(array,i);
var G__5245 = idxs;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$3 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$3(G__5243,G__5244,G__5245) : cljs.core.apply.call(null,G__5243,G__5244,G__5245));
};
var G__5246 = function (array,i,var_args){
var idxs = null;
if (arguments.length > 2) {
var G__5247__i = 0, G__5247__a = new Array(arguments.length -  2);
while (G__5247__i < G__5247__a.length) {G__5247__a[G__5247__i] = arguments[G__5247__i + 2]; ++G__5247__i;}
  idxs = new cljs.core.IndexedSeq(G__5247__a,0);
} 
return G__5246__delegate.call(this,array,i,idxs);};
G__5246.cljs$lang$maxFixedArity = 2;
G__5246.cljs$lang$applyTo = (function (arglist__5248){
var array = cljs.core.first(arglist__5248);
arglist__5248 = cljs.core.next(arglist__5248);
var i = cljs.core.first(arglist__5248);
var idxs = cljs.core.rest(arglist__5248);
return G__5246__delegate(array,i,idxs);
});
G__5246.cljs$core$IFn$_invoke$arity$variadic = G__5246__delegate;
return G__5246;
})()
;
aget = function(array,i,var_args){
var idxs = var_args;
switch(arguments.length){
case 2:
return aget__2.call(this,array,i);
default:
var G__5249 = null;
if (arguments.length > 2) {
var G__5250__i = 0, G__5250__a = new Array(arguments.length -  2);
while (G__5250__i < G__5250__a.length) {G__5250__a[G__5250__i] = arguments[G__5250__i + 2]; ++G__5250__i;}
G__5249 = new cljs.core.IndexedSeq(G__5250__a,0);
}
return aget__3.cljs$core$IFn$_invoke$arity$variadic(array,i, G__5249);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
aget.cljs$lang$maxFixedArity = 2;
aget.cljs$lang$applyTo = aget__3.cljs$lang$applyTo;
aget.cljs$core$IFn$_invoke$arity$2 = aget__2;
aget.cljs$core$IFn$_invoke$arity$variadic = aget__3.cljs$core$IFn$_invoke$arity$variadic;
return aget;
})()
;
/**
* Sets the value at the index.
* @param {...*} var_args
*/
cljs.core.aset = (function() {
var aset = null;
var aset__3 = (function (array,i,val){
return (array[i] = val);
});
var aset__4 = (function() { 
var G__5259__delegate = function (array,idx,idx2,idxv){
var G__5255 = aset;
var G__5256 = (array[idx]);
var G__5257 = idx2;
var G__5258 = idxv;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$4 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$4(G__5255,G__5256,G__5257,G__5258) : cljs.core.apply.call(null,G__5255,G__5256,G__5257,G__5258));
};
var G__5259 = function (array,idx,idx2,var_args){
var idxv = null;
if (arguments.length > 3) {
var G__5260__i = 0, G__5260__a = new Array(arguments.length -  3);
while (G__5260__i < G__5260__a.length) {G__5260__a[G__5260__i] = arguments[G__5260__i + 3]; ++G__5260__i;}
  idxv = new cljs.core.IndexedSeq(G__5260__a,0);
} 
return G__5259__delegate.call(this,array,idx,idx2,idxv);};
G__5259.cljs$lang$maxFixedArity = 3;
G__5259.cljs$lang$applyTo = (function (arglist__5261){
var array = cljs.core.first(arglist__5261);
arglist__5261 = cljs.core.next(arglist__5261);
var idx = cljs.core.first(arglist__5261);
arglist__5261 = cljs.core.next(arglist__5261);
var idx2 = cljs.core.first(arglist__5261);
var idxv = cljs.core.rest(arglist__5261);
return G__5259__delegate(array,idx,idx2,idxv);
});
G__5259.cljs$core$IFn$_invoke$arity$variadic = G__5259__delegate;
return G__5259;
})()
;
aset = function(array,idx,idx2,var_args){
var idxv = var_args;
switch(arguments.length){
case 3:
return aset__3.call(this,array,idx,idx2);
default:
var G__5262 = null;
if (arguments.length > 3) {
var G__5263__i = 0, G__5263__a = new Array(arguments.length -  3);
while (G__5263__i < G__5263__a.length) {G__5263__a[G__5263__i] = arguments[G__5263__i + 3]; ++G__5263__i;}
G__5262 = new cljs.core.IndexedSeq(G__5263__a,0);
}
return aset__4.cljs$core$IFn$_invoke$arity$variadic(array,idx,idx2, G__5262);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
aset.cljs$lang$maxFixedArity = 3;
aset.cljs$lang$applyTo = aset__4.cljs$lang$applyTo;
aset.cljs$core$IFn$_invoke$arity$3 = aset__3;
aset.cljs$core$IFn$_invoke$arity$variadic = aset__4.cljs$core$IFn$_invoke$arity$variadic;
return aset;
})()
;
/**
* Returns the length of the array. Works on arrays of all types.
*/
cljs.core.alength = (function alength(array){
return array.length;
});
cljs.core.into_array = (function() {
var into_array = null;
var into_array__1 = (function (aseq){
return into_array.cljs$core$IFn$_invoke$arity$2(null,aseq);
});
var into_array__2 = (function (type,aseq){
var G__5269 = (function (a,x){
a.push(x);

return a;
});
var G__5270 = [];
var G__5271 = aseq;
return (cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(G__5269,G__5270,G__5271) : cljs.core.reduce.call(null,G__5269,G__5270,G__5271));
});
into_array = function(type,aseq){
switch(arguments.length){
case 1:
return into_array__1.call(this,type);
case 2:
return into_array__2.call(this,type,aseq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
into_array.cljs$core$IFn$_invoke$arity$1 = into_array__1;
into_array.cljs$core$IFn$_invoke$arity$2 = into_array__2;
return into_array;
})()
;
/**
* Invoke JavaScript object method via string. Needed when the
* string is not a valid unquoted property name.
* @param {...*} var_args
*/
cljs.core.js_invoke = (function() { 
var js_invoke__delegate = function (obj,s,args){
return (obj[s]).apply(obj,cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(args));
};
var js_invoke = function (obj,s,var_args){
var args = null;
if (arguments.length > 2) {
var G__5272__i = 0, G__5272__a = new Array(arguments.length -  2);
while (G__5272__i < G__5272__a.length) {G__5272__a[G__5272__i] = arguments[G__5272__i + 2]; ++G__5272__i;}
  args = new cljs.core.IndexedSeq(G__5272__a,0);
} 
return js_invoke__delegate.call(this,obj,s,args);};
js_invoke.cljs$lang$maxFixedArity = 2;
js_invoke.cljs$lang$applyTo = (function (arglist__5273){
var obj = cljs.core.first(arglist__5273);
arglist__5273 = cljs.core.next(arglist__5273);
var s = cljs.core.first(arglist__5273);
var args = cljs.core.rest(arglist__5273);
return js_invoke__delegate(obj,s,args);
});
js_invoke.cljs$core$IFn$_invoke$arity$variadic = js_invoke__delegate;
return js_invoke;
})()
;

cljs.core.Fn = (function (){var obj5275 = {};
return obj5275;
})();


cljs.core.IFn = (function (){var obj5277 = {};
return obj5277;
})();

cljs.core._invoke = (function() {
var _invoke = null;
var _invoke__1 = (function (this$){
if((function (){var and__3720__auto__ = this$;
if(and__3720__auto__){
return this$.cljs$core$IFn$_invoke$arity$1;
} else {
return and__3720__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$1(this$);
} else {
var x__4376__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3732__auto__ = (cljs.core._invoke[(function (){var G__5323 = x__4376__auto__;
return goog.typeOf(G__5323);
})()]);
if(or__3732__auto__){
return or__3732__auto__;
} else {
var or__3732__auto____$1 = (cljs.core._invoke["_"]);
if(or__3732__auto____$1){
return or__3732__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$);
}
});
var _invoke__2 = (function (this$,a){
if((function (){var and__3720__auto__ = this$;
if(and__3720__auto__){
return this$.cljs$core$IFn$_invoke$arity$2;
} else {
return and__3720__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$2(this$,a);
} else {
var x__4376__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3732__auto__ = (cljs.core._invoke[(function (){var G__5325 = x__4376__auto__;
return goog.typeOf(G__5325);
})()]);
if(or__3732__auto__){
return or__3732__auto__;
} else {
var or__3732__auto____$1 = (cljs.core._invoke["_"]);
if(or__3732__auto____$1){
return or__3732__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a);
}
});
var _invoke__3 = (function (this$,a,b){
if((function (){var and__3720__auto__ = this$;
if(and__3720__auto__){
return this$.cljs$core$IFn$_invoke$arity$3;
} else {
return and__3720__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$3(this$,a,b);
} else {
var x__4376__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3732__auto__ = (cljs.core._invoke[(function (){var G__5327 = x__4376__auto__;
return goog.typeOf(G__5327);
})()]);
if(or__3732__auto__){
return or__3732__auto__;
} else {
var or__3732__auto____$1 = (cljs.core._invoke["_"]);
if(or__3732__auto____$1){
return or__3732__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b);
}
});
var _invoke__4 = (function (this$,a,b,c){
if((function (){var and__3720__auto__ = this$;
if(and__3720__auto__){
return this$.cljs$core$IFn$_invoke$arity$4;
} else {
return and__3720__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$4(this$,a,b,c);
} else {
var x__4376__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3732__auto__ = (cljs.core._invoke[(function (){var G__5329 = x__4376__auto__;
return goog.typeOf(G__5329);
})()]);
if(or__3732__auto__){
return or__3732__auto__;
} else {
var or__3732__auto____$1 = (cljs.core._invoke["_"]);
if(or__3732__auto____$1){
return or__3732__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c);
}
});
var _invoke__5 = (function (this$,a,b,c,d){
if((function (){var and__3720__auto__ = this$;
if(and__3720__auto__){
return this$.cljs$core$IFn$_invoke$arity$5;
} else {
return and__3720__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$5(this$,a,b,c,d);
} else {
var x__4376__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3732__auto__ = (cljs.core._invoke[(function (){var G__5331 = x__4376__auto__;
return goog.typeOf(G__5331);
})()]);
if(or__3732__auto__){
return or__3732__auto__;
} else {
var or__3732__auto____$1 = (cljs.core._invoke["_"]);
if(or__3732__auto____$1){
return or__3732__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d);
}
});
var _invoke__6 = (function (this$,a,b,c,d,e){
if((function (){var and__3720__auto__ = this$;
if(and__3720__auto__){
return this$.cljs$core$IFn$_invoke$arity$6;
} else {
return and__3720__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$6(this$,a,b,c,d,e);
} else {
var x__4376__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3732__auto__ = (cljs.core._invoke[(function (){var G__5333 = x__4376__auto__;
return goog.typeOf(G__5333);
})()]);
if(or__3732__auto__){
return or__3732__auto__;
} else {
var or__3732__auto____$1 = (cljs.core._invoke["_"]);
if(or__3732__auto____$1){
return or__3732__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e);
}
});
var _invoke__7 = (function (this$,a,b,c,d,e,f){
if((function (){var and__3720__auto__ = this$;
if(and__3720__auto__){
return this$.cljs$core$IFn$_invoke$arity$7;
} else {
return and__3720__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$7(this$,a,b,c,d,e,f);
} else {
var x__4376__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3732__auto__ = (cljs.core._invoke[(function (){var G__5335 = x__4376__auto__;
return goog.typeOf(G__5335);
})()]);
if(or__3732__auto__){
return or__3732__auto__;
} else {
var or__3732__auto____$1 = (cljs.core._invoke["_"]);
if(or__3732__auto____$1){
return or__3732__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f);
}
});
var _invoke__8 = (function (this$,a,b,c,d,e,f,g){
if((function (){var and__3720__auto__ = this$;
if(and__3720__auto__){
return this$.cljs$core$IFn$_invoke$arity$8;
} else {
return and__3720__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$8(this$,a,b,c,d,e,f,g);
} else {
var x__4376__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3732__auto__ = (cljs.core._invoke[(function (){var G__5337 = x__4376__auto__;
return goog.typeOf(G__5337);
})()]);
if(or__3732__auto__){
return or__3732__auto__;
} else {
var or__3732__auto____$1 = (cljs.core._invoke["_"]);
if(or__3732__auto____$1){
return or__3732__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g);
}
});
var _invoke__9 = (function (this$,a,b,c,d,e,f,g,h){
if((function (){var and__3720__auto__ = this$;
if(and__3720__auto__){
return this$.cljs$core$IFn$_invoke$arity$9;
} else {
return and__3720__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$9(this$,a,b,c,d,e,f,g,h);
} else {
var x__4376__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3732__auto__ = (cljs.core._invoke[(function (){var G__5339 = x__4376__auto__;
return goog.typeOf(G__5339);
})()]);
if(or__3732__auto__){
return or__3732__auto__;
} else {
var or__3732__auto____$1 = (cljs.core._invoke["_"]);
if(or__3732__auto____$1){
return or__3732__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h);
}
});
var _invoke__10 = (function (this$,a,b,c,d,e,f,g,h,i){
if((function (){var and__3720__auto__ = this$;
if(and__3720__auto__){
return this$.cljs$core$IFn$_invoke$arity$10;
} else {
return and__3720__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$10(this$,a,b,c,d,e,f,g,h,i);
} else {
var x__4376__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3732__auto__ = (cljs.core._invoke[(function (){var G__5341 = x__4376__auto__;
return goog.typeOf(G__5341);
})()]);
if(or__3732__auto__){
return or__3732__auto__;
} else {
var or__3732__auto____$1 = (cljs.core._invoke["_"]);
if(or__3732__auto____$1){
return or__3732__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i);
}
});
var _invoke__11 = (function (this$,a,b,c,d,e,f,g,h,i,j){
if((function (){var and__3720__auto__ = this$;
if(and__3720__auto__){
return this$.cljs$core$IFn$_invoke$arity$11;
} else {
return and__3720__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$11(this$,a,b,c,d,e,f,g,h,i,j);
} else {
var x__4376__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3732__auto__ = (cljs.core._invoke[(function (){var G__5343 = x__4376__auto__;
return goog.typeOf(G__5343);
})()]);
if(or__3732__auto__){
return or__3732__auto__;
} else {
var or__3732__auto____$1 = (cljs.core._invoke["_"]);
if(or__3732__auto____$1){
return or__3732__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j);
}
});
var _invoke__12 = (function (this$,a,b,c,d,e,f,g,h,i,j,k){
if((function (){var and__3720__auto__ = this$;
if(and__3720__auto__){
return this$.cljs$core$IFn$_invoke$arity$12;
} else {
return and__3720__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$12(this$,a,b,c,d,e,f,g,h,i,j,k);
} else {
var x__4376__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3732__auto__ = (cljs.core._invoke[(function (){var G__5345 = x__4376__auto__;
return goog.typeOf(G__5345);
})()]);
if(or__3732__auto__){
return or__3732__auto__;
} else {
var or__3732__auto____$1 = (cljs.core._invoke["_"]);
if(or__3732__auto____$1){
return or__3732__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k);
}
});
var _invoke__13 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l){
if((function (){var and__3720__auto__ = this$;
if(and__3720__auto__){
return this$.cljs$core$IFn$_invoke$arity$13;
} else {
return and__3720__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$13(this$,a,b,c,d,e,f,g,h,i,j,k,l);
} else {
var x__4376__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3732__auto__ = (cljs.core._invoke[(function (){var G__5347 = x__4376__auto__;
return goog.typeOf(G__5347);
})()]);
if(or__3732__auto__){
return or__3732__auto__;
} else {
var or__3732__auto____$1 = (cljs.core._invoke["_"]);
if(or__3732__auto____$1){
return or__3732__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l);
}
});
var _invoke__14 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m){
if((function (){var and__3720__auto__ = this$;
if(and__3720__auto__){
return this$.cljs$core$IFn$_invoke$arity$14;
} else {
return and__3720__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$14(this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
} else {
var x__4376__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3732__auto__ = (cljs.core._invoke[(function (){var G__5349 = x__4376__auto__;
return goog.typeOf(G__5349);
})()]);
if(or__3732__auto__){
return or__3732__auto__;
} else {
var or__3732__auto____$1 = (cljs.core._invoke["_"]);
if(or__3732__auto____$1){
return or__3732__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
}
});
var _invoke__15 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
if((function (){var and__3720__auto__ = this$;
if(and__3720__auto__){
return this$.cljs$core$IFn$_invoke$arity$15;
} else {
return and__3720__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$15(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
} else {
var x__4376__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3732__auto__ = (cljs.core._invoke[(function (){var G__5351 = x__4376__auto__;
return goog.typeOf(G__5351);
})()]);
if(or__3732__auto__){
return or__3732__auto__;
} else {
var or__3732__auto____$1 = (cljs.core._invoke["_"]);
if(or__3732__auto____$1){
return or__3732__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
}
});
var _invoke__16 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
if((function (){var and__3720__auto__ = this$;
if(and__3720__auto__){
return this$.cljs$core$IFn$_invoke$arity$16;
} else {
return and__3720__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$16(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
} else {
var x__4376__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3732__auto__ = (cljs.core._invoke[(function (){var G__5353 = x__4376__auto__;
return goog.typeOf(G__5353);
})()]);
if(or__3732__auto__){
return or__3732__auto__;
} else {
var or__3732__auto____$1 = (cljs.core._invoke["_"]);
if(or__3732__auto____$1){
return or__3732__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
}
});
var _invoke__17 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
if((function (){var and__3720__auto__ = this$;
if(and__3720__auto__){
return this$.cljs$core$IFn$_invoke$arity$17;
} else {
return and__3720__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$17(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
} else {
var x__4376__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3732__auto__ = (cljs.core._invoke[(function (){var G__5355 = x__4376__auto__;
return goog.typeOf(G__5355);
})()]);
if(or__3732__auto__){
return or__3732__auto__;
} else {
var or__3732__auto____$1 = (cljs.core._invoke["_"]);
if(or__3732__auto____$1){
return or__3732__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
}
});
var _invoke__18 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
if((function (){var and__3720__auto__ = this$;
if(and__3720__auto__){
return this$.cljs$core$IFn$_invoke$arity$18;
} else {
return and__3720__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$18(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
} else {
var x__4376__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3732__auto__ = (cljs.core._invoke[(function (){var G__5357 = x__4376__auto__;
return goog.typeOf(G__5357);
})()]);
if(or__3732__auto__){
return or__3732__auto__;
} else {
var or__3732__auto____$1 = (cljs.core._invoke["_"]);
if(or__3732__auto____$1){
return or__3732__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
}
});
var _invoke__19 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
if((function (){var and__3720__auto__ = this$;
if(and__3720__auto__){
return this$.cljs$core$IFn$_invoke$arity$19;
} else {
return and__3720__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$19(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
} else {
var x__4376__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3732__auto__ = (cljs.core._invoke[(function (){var G__5359 = x__4376__auto__;
return goog.typeOf(G__5359);
})()]);
if(or__3732__auto__){
return or__3732__auto__;
} else {
var or__3732__auto____$1 = (cljs.core._invoke["_"]);
if(or__3732__auto____$1){
return or__3732__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
}
});
var _invoke__20 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
if((function (){var and__3720__auto__ = this$;
if(and__3720__auto__){
return this$.cljs$core$IFn$_invoke$arity$20;
} else {
return and__3720__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$20(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
} else {
var x__4376__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3732__auto__ = (cljs.core._invoke[(function (){var G__5361 = x__4376__auto__;
return goog.typeOf(G__5361);
})()]);
if(or__3732__auto__){
return or__3732__auto__;
} else {
var or__3732__auto____$1 = (cljs.core._invoke["_"]);
if(or__3732__auto____$1){
return or__3732__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
}
});
var _invoke__21 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
if((function (){var and__3720__auto__ = this$;
if(and__3720__auto__){
return this$.cljs$core$IFn$_invoke$arity$21;
} else {
return and__3720__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$21(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
} else {
var x__4376__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3732__auto__ = (cljs.core._invoke[(function (){var G__5363 = x__4376__auto__;
return goog.typeOf(G__5363);
})()]);
if(or__3732__auto__){
return or__3732__auto__;
} else {
var or__3732__auto____$1 = (cljs.core._invoke["_"]);
if(or__3732__auto____$1){
return or__3732__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
}
});
var _invoke__22 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
if((function (){var and__3720__auto__ = this$;
if(and__3720__auto__){
return this$.cljs$core$IFn$_invoke$arity$22;
} else {
return and__3720__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$22(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
} else {
var x__4376__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3732__auto__ = (cljs.core._invoke[(function (){var G__5365 = x__4376__auto__;
return goog.typeOf(G__5365);
})()]);
if(or__3732__auto__){
return or__3732__auto__;
} else {
var or__3732__auto____$1 = (cljs.core._invoke["_"]);
if(or__3732__auto____$1){
return or__3732__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
});
_invoke = function(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return _invoke__1.call(this,this$);
case 2:
return _invoke__2.call(this,this$,a);
case 3:
return _invoke__3.call(this,this$,a,b);
case 4:
return _invoke__4.call(this,this$,a,b,c);
case 5:
return _invoke__5.call(this,this$,a,b,c,d);
case 6:
return _invoke__6.call(this,this$,a,b,c,d,e);
case 7:
return _invoke__7.call(this,this$,a,b,c,d,e,f);
case 8:
return _invoke__8.call(this,this$,a,b,c,d,e,f,g);
case 9:
return _invoke__9.call(this,this$,a,b,c,d,e,f,g,h);
case 10:
return _invoke__10.call(this,this$,a,b,c,d,e,f,g,h,i);
case 11:
return _invoke__11.call(this,this$,a,b,c,d,e,f,g,h,i,j);
case 12:
return _invoke__12.call(this,this$,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return _invoke__13.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return _invoke__14.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return _invoke__15.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return _invoke__16.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return _invoke__17.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return _invoke__18.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return _invoke__19.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return _invoke__20.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return _invoke__21.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return _invoke__22.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_invoke.cljs$core$IFn$_invoke$arity$1 = _invoke__1;
_invoke.cljs$core$IFn$_invoke$arity$2 = _invoke__2;
_invoke.cljs$core$IFn$_invoke$arity$3 = _invoke__3;
_invoke.cljs$core$IFn$_invoke$arity$4 = _invoke__4;
_invoke.cljs$core$IFn$_invoke$arity$5 = _invoke__5;
_invoke.cljs$core$IFn$_invoke$arity$6 = _invoke__6;
_invoke.cljs$core$IFn$_invoke$arity$7 = _invoke__7;
_invoke.cljs$core$IFn$_invoke$arity$8 = _invoke__8;
_invoke.cljs$core$IFn$_invoke$arity$9 = _invoke__9;
_invoke.cljs$core$IFn$_invoke$arity$10 = _invoke__10;
_invoke.cljs$core$IFn$_invoke$arity$11 = _invoke__11;
_invoke.cljs$core$IFn$_invoke$arity$12 = _invoke__12;
_invoke.cljs$core$IFn$_invoke$arity$13 = _invoke__13;
_invoke.cljs$core$IFn$_invoke$arity$14 = _invoke__14;
_invoke.cljs$core$IFn$_invoke$arity$15 = _invoke__15;
_invoke.cljs$core$IFn$_invoke$arity$16 = _invoke__16;
_invoke.cljs$core$IFn$_invoke$arity$17 = _invoke__17;
_invoke.cljs$core$IFn$_invoke$arity$18 = _invoke__18;
_invoke.cljs$core$IFn$_invoke$arity$19 = _invoke__19;
_invoke.cljs$core$IFn$_invoke$arity$20 = _invoke__20;
_invoke.cljs$core$IFn$_invoke$arity$21 = _invoke__21;
_invoke.cljs$core$IFn$_invoke$arity$22 = _invoke__22;
return _invoke;
})()
;


cljs.core.ICloneable = (function (){var obj5367 = {};
return obj5367;
})();

cljs.core._clone = (function _clone(value){
if((function (){var and__3720__auto__ = value;
if(and__3720__auto__){
return value.cljs$core$ICloneable$_clone$arity$1;
} else {
return and__3720__auto__;
}
})()){
return value.cljs$core$ICloneable$_clone$arity$1(value);
} else {
var x__4376__auto__ = (((value == null))?null:value);
return (function (){var or__3732__auto__ = (cljs.core._clone[(function (){var G__5371 = x__4376__auto__;
return goog.typeOf(G__5371);
})()]);
if(or__3732__auto__){
return or__3732__auto__;
} else {
var or__3732__auto____$1 = (cljs.core._clone["_"]);
if(or__3732__auto____$1){
return or__3732__auto____$1;
} else {
throw cljs.core.missing_protocol("ICloneable.-clone",value);
}
}
})().call(null,value);
}
});


cljs.core.ICounted = (function (){var obj5373 = {};
return obj5373;
})();

cljs.core._count = (function _count(coll){
if((function (){var and__3720__auto__ = coll;
if(and__3720__auto__){
return coll.cljs$core$ICounted$_count$arity$1;
} else {
return and__3720__auto__;
}
})()){
return coll.cljs$core$ICounted$_count$arity$1(coll);
} else {
var x__4376__auto__ = (((coll == null))?null:coll);
return (function (){var or__3732__auto__ = (cljs.core._count[(function (){var G__5377 = x__4376__auto__;
return goog.typeOf(G__5377);
})()]);
if(or__3732__auto__){
return or__3732__auto__;
} else {
var or__3732__auto____$1 = (cljs.core._count["_"]);
if(or__3732__auto____$1){
return or__3732__auto____$1;
} else {
throw cljs.core.missing_protocol("ICounted.-count",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IEmptyableCollection = (function (){var obj5379 = {};
return obj5379;
})();

cljs.core._empty = (function _empty(coll){
if((function (){var and__3720__auto__ = coll;
if(and__3720__auto__){
return coll.cljs$core$IEmptyableCollection$_empty$arity$1;
} else {
return and__3720__auto__;
}
})()){
return coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll);
} else {
var x__4376__auto__ = (((coll == null))?null:coll);
return (function (){var or__3732__auto__ = (cljs.core._empty[(function (){var G__5383 = x__4376__auto__;
return goog.typeOf(G__5383);
})()]);
if(or__3732__auto__){
return or__3732__auto__;
} else {
var or__3732__auto____$1 = (cljs.core._empty["_"]);
if(or__3732__auto____$1){
return or__3732__auto____$1;
} else {
throw cljs.core.missing_protocol("IEmptyableCollection.-empty",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ICollection = (function (){var obj5385 = {};
return obj5385;
})();

cljs.core._conj = (function _conj(coll,o){
if((function (){var and__3720__auto__ = coll;
if(and__3720__auto__){
return coll.cljs$core$ICollection$_conj$arity$2;
} else {
return and__3720__auto__;
}
})()){
return coll.cljs$core$ICollection$_conj$arity$2(coll,o);
} else {
var x__4376__auto__ = (((coll == null))?null:coll);
return (function (){var or__3732__auto__ = (cljs.core._conj[(function (){var G__5389 = x__4376__auto__;
return goog.typeOf(G__5389);
})()]);
if(or__3732__auto__){
return or__3732__auto__;
} else {
var or__3732__auto____$1 = (cljs.core._conj["_"]);
if(or__3732__auto____$1){
return or__3732__auto____$1;
} else {
throw cljs.core.missing_protocol("ICollection.-conj",coll);
}
}
})().call(null,coll,o);
}
});


cljs.core.IIndexed = (function (){var obj5391 = {};
return obj5391;
})();

cljs.core._nth = (function() {
var _nth = null;
var _nth__2 = (function (coll,n){
if((function (){var and__3720__auto__ = coll;
if(and__3720__auto__){
return coll.cljs$core$IIndexed$_nth$arity$2;
} else {
return and__3720__auto__;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$2(coll,n);
} else {
var x__4376__auto__ = (((coll == null))?null:coll);
return (function (){var or__3732__auto__ = (cljs.core._nth[(function (){var G__5397 = x__4376__auto__;
return goog.typeOf(G__5397);
})()]);
if(or__3732__auto__){
return or__3732__auto__;
} else {
var or__3732__auto____$1 = (cljs.core._nth["_"]);
if(or__3732__auto____$1){
return or__3732__auto____$1;
} else {
throw cljs.core.missing_protocol("IIndexed.-nth",coll);
}
}
})().call(null,coll,n);
}
});
var _nth__3 = (function (coll,n,not_found){
if((function (){var and__3720__auto__ = coll;
if(and__3720__auto__){
return coll.cljs$core$IIndexed$_nth$arity$3;
} else {
return and__3720__auto__;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$3(coll,n,not_found);
} else {
var x__4376__auto__ = (((coll == null))?null:coll);
return (function (){var or__3732__auto__ = (cljs.core._nth[(function (){var G__5399 = x__4376__auto__;
return goog.typeOf(G__5399);
})()]);
if(or__3732__auto__){
return or__3732__auto__;
} else {
var or__3732__auto____$1 = (cljs.core._nth["_"]);
if(or__3732__auto____$1){
return or__3732__auto____$1;
} else {
throw cljs.core.missing_protocol("IIndexed.-nth",coll);
}
}
})().call(null,coll,n,not_found);
}
});
_nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return _nth__2.call(this,coll,n);
case 3:
return _nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_nth.cljs$core$IFn$_invoke$arity$2 = _nth__2;
_nth.cljs$core$IFn$_invoke$arity$3 = _nth__3;
return _nth;
})()
;


cljs.core.ASeq = (function (){var obj5401 = {};
return obj5401;
})();


cljs.core.ISeq = (function (){var obj5403 = {};
return obj5403;
})();

cljs.core._first = (function _first(coll){
if((function (){var and__3720__auto__ = coll;
if(and__3720__auto__){
return coll.cljs$core$ISeq$_first$arity$1;
} else {
return and__3720__auto__;
}
})()){
return coll.cljs$core$ISeq$_first$arity$1(coll);
} else {
var x__4376__auto__ = (((coll == null))?null:coll);
return (function (){var or__3732__auto__ = (cljs.core._first[(function (){var G__5407 = x__4376__auto__;
return goog.typeOf(G__5407);
})()]);
if(or__3732__auto__){
return or__3732__auto__;
} else {
var or__3732__auto____$1 = (cljs.core._first["_"]);
if(or__3732__auto____$1){
return or__3732__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeq.-first",coll);
}
}
})().call(null,coll);
}
});

cljs.core._rest = (function _rest(coll){
if((function (){var and__3720__auto__ = coll;
if(and__3720__auto__){
return coll.cljs$core$ISeq$_rest$arity$1;
} else {
return and__3720__auto__;
}
})()){
return coll.cljs$core$ISeq$_rest$arity$1(coll);
} else {
var x__4376__auto__ = (((coll == null))?null:coll);
return (function (){var or__3732__auto__ = (cljs.core._rest[(function (){var G__5411 = x__4376__auto__;
return goog.typeOf(G__5411);
})()]);
if(or__3732__auto__){
return or__3732__auto__;
} else {
var or__3732__auto____$1 = (cljs.core._rest["_"]);
if(or__3732__auto____$1){
return or__3732__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeq.-rest",coll);
}
}
})().call(null,coll);
}
});


cljs.core.INext = (function (){var obj5413 = {};
return obj5413;
})();

cljs.core._next = (function _next(coll){
if((function (){var and__3720__auto__ = coll;
if(and__3720__auto__){
return coll.cljs$core$INext$_next$arity$1;
} else {
return and__3720__auto__;
}
})()){
return coll.cljs$core$INext$_next$arity$1(coll);
} else {
var x__4376__auto__ = (((coll == null))?null:coll);
return (function (){var or__3732__auto__ = (cljs.core._next[(function (){var G__5417 = x__4376__auto__;
return goog.typeOf(G__5417);
})()]);
if(or__3732__auto__){
return or__3732__auto__;
} else {
var or__3732__auto____$1 = (cljs.core._next["_"]);
if(or__3732__auto____$1){
return or__3732__auto____$1;
} else {
throw cljs.core.missing_protocol("INext.-next",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ILookup = (function (){var obj5419 = {};
return obj5419;
})();

cljs.core._lookup = (function() {
var _lookup = null;
var _lookup__2 = (function (o,k){
if((function (){var and__3720__auto__ = o;
if(and__3720__auto__){
return o.cljs$core$ILookup$_lookup$arity$2;
} else {
return and__3720__auto__;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$2(o,k);
} else {
var x__4376__auto__ = (((o == null))?null:o);
return (function (){var or__3732__auto__ = (cljs.core._lookup[(function (){var G__5425 = x__4376__auto__;
return goog.typeOf(G__5425);
})()]);
if(or__3732__auto__){
return or__3732__auto__;
} else {
var or__3732__auto____$1 = (cljs.core._lookup["_"]);
if(or__3732__auto____$1){
return or__3732__auto____$1;
} else {
throw cljs.core.missing_protocol("ILookup.-lookup",o);
}
}
})().call(null,o,k);
}
});
var _lookup__3 = (function (o,k,not_found){
if((function (){var and__3720__auto__ = o;
if(and__3720__auto__){
return o.cljs$core$ILookup$_lookup$arity$3;
} else {
return and__3720__auto__;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$3(o,k,not_found);
} else {
var x__4376__auto__ = (((o == null))?null:o);
return (function (){var or__3732__auto__ = (cljs.core._lookup[(function (){var G__5427 = x__4376__auto__;
return goog.typeOf(G__5427);
})()]);
if(or__3732__auto__){
return or__3732__auto__;
} else {
var or__3732__auto____$1 = (cljs.core._lookup["_"]);
if(or__3732__auto____$1){
return or__3732__auto____$1;
} else {
throw cljs.core.missing_protocol("ILookup.-lookup",o);
}
}
})().call(null,o,k,not_found);
}
});
_lookup = function(o,k,not_found){
switch(arguments.length){
case 2:
return _lookup__2.call(this,o,k);
case 3:
return _lookup__3.call(this,o,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_lookup.cljs$core$IFn$_invoke$arity$2 = _lookup__2;
_lookup.cljs$core$IFn$_invoke$arity$3 = _lookup__3;
return _lookup;
})()
;


cljs.core.IAssociative = (function (){var obj5429 = {};
return obj5429;
})();

cljs.core._contains_key_QMARK_ = (function _contains_key_QMARK_(coll,k){
if((function (){var and__3720__auto__ = coll;
if(and__3720__auto__){
return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2;
} else {
return and__3720__auto__;
}
})()){
return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2(coll,k);
} else {
var x__4376__auto__ = (((coll == null))?null:coll);
return (function (){var or__3732__auto__ = (cljs.core._contains_key_QMARK_[(function (){var G__5433 = x__4376__auto__;
return goog.typeOf(G__5433);
})()]);
if(or__3732__auto__){
return or__3732__auto__;
} else {
var or__3732__auto____$1 = (cljs.core._contains_key_QMARK_["_"]);
if(or__3732__auto____$1){
return or__3732__auto____$1;
} else {
throw cljs.core.missing_protocol("IAssociative.-contains-key?",coll);
}
}
})().call(null,coll,k);
}
});

cljs.core._assoc = (function _assoc(coll,k,v){
if((function (){var and__3720__auto__ = coll;
if(and__3720__auto__){
return coll.cljs$core$IAssociative$_assoc$arity$3;
} else {
return and__3720__auto__;
}
})()){
return coll.cljs$core$IAssociative$_assoc$arity$3(coll,k,v);
} else {
var x__4376__auto__ = (((coll == null))?null:coll);
return (function (){var or__3732__auto__ = (cljs.core._assoc[(function (){var G__5437 = x__4376__auto__;
return goog.typeOf(G__5437);
})()]);
if(or__3732__auto__){
return or__3732__auto__;
} else {
var or__3732__auto____$1 = (cljs.core._assoc["_"]);
if(or__3732__auto____$1){
return or__3732__auto____$1;
} else {
throw cljs.core.missing_protocol("IAssociative.-assoc",coll);
}
}
})().call(null,coll,k,v);
}
});


cljs.core.IMap = (function (){var obj5439 = {};
return obj5439;
})();

cljs.core._dissoc = (function _dissoc(coll,k){
if((function (){var and__3720__auto__ = coll;
if(and__3720__auto__){
return coll.cljs$core$IMap$_dissoc$arity$2;
} else {
return and__3720__auto__;
}
})()){
return coll.cljs$core$IMap$_dissoc$arity$2(coll,k);
} else {
var x__4376__auto__ = (((coll == null))?null:coll);
return (function (){var or__3732__auto__ = (cljs.core._dissoc[(function (){var G__5443 = x__4376__auto__;
return goog.typeOf(G__5443);
})()]);
if(or__3732__auto__){
return or__3732__auto__;
} else {
var or__3732__auto____$1 = (cljs.core._dissoc["_"]);
if(or__3732__auto____$1){
return or__3732__auto____$1;
} else {
throw cljs.core.missing_protocol("IMap.-dissoc",coll);
}
}
})().call(null,coll,k);
}
});


cljs.core.IMapEntry = (function (){var obj5445 = {};
return obj5445;
})();

cljs.core._key = (function _key(coll){
if((function (){var and__3720__auto__ = coll;
if(and__3720__auto__){
return coll.cljs$core$IMapEntry$_key$arity$1;
} else {
return and__3720__auto__;
}
})()){
return coll.cljs$core$IMapEntry$_key$arity$1(coll);
} else {
var x__4376__auto__ = (((coll == null))?null:coll);
return (function (){var or__3732__auto__ = (cljs.core._key[(function (){var G__5449 = x__4376__auto__;
return goog.typeOf(G__5449);
})()]);
if(or__3732__auto__){
return or__3732__auto__;
} else {
var or__3732__auto____$1 = (cljs.core._key["_"]);
if(or__3732__auto____$1){
return or__3732__auto____$1;
} else {
throw cljs.core.missing_protocol("IMapEntry.-key",coll);
}
}
})().call(null,coll);
}
});

cljs.core._val = (function _val(coll){
if((function (){var and__3720__auto__ = coll;
if(and__3720__auto__){
return coll.cljs$core$IMapEntry$_val$arity$1;
} else {
return and__3720__auto__;
}
})()){
return coll.cljs$core$IMapEntry$_val$arity$1(coll);
} else {
var x__4376__auto__ = (((coll == null))?null:coll);
return (function (){var or__3732__auto__ = (cljs.core._val[(function (){var G__5453 = x__4376__auto__;
return goog.typeOf(G__5453);
})()]);
if(or__3732__auto__){
return or__3732__auto__;
} else {
var or__3732__auto____$1 = (cljs.core._val["_"]);
if(or__3732__auto____$1){
return or__3732__auto____$1;
} else {
throw cljs.core.missing_protocol("IMapEntry.-val",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ISet = (function (){var obj5455 = {};
return obj5455;
})();

cljs.core._disjoin = (function _disjoin(coll,v){
if((function (){var and__3720__auto__ = coll;
if(and__3720__auto__){
return coll.cljs$core$ISet$_disjoin$arity$2;
} else {
return and__3720__auto__;
}
})()){
return coll.cljs$core$ISet$_disjoin$arity$2(coll,v);
} else {
var x__4376__auto__ = (((coll == null))?null:coll);
return (function (){var or__3732__auto__ = (cljs.core._disjoin[(function (){var G__5459 = x__4376__auto__;
return goog.typeOf(G__5459);
})()]);
if(or__3732__auto__){
return or__3732__auto__;
} else {
var or__3732__auto____$1 = (cljs.core._disjoin["_"]);
if(or__3732__auto____$1){
return or__3732__auto____$1;
} else {
throw cljs.core.missing_protocol("ISet.-disjoin",coll);
}
}
})().call(null,coll,v);
}
});


cljs.core.IStack = (function (){var obj5461 = {};
return obj5461;
})();

cljs.core._peek = (function _peek(coll){
if((function (){var and__3720__auto__ = coll;
if(and__3720__auto__){
return coll.cljs$core$IStack$_peek$arity$1;
} else {
return and__3720__auto__;
}
})()){
return coll.cljs$core$IStack$_peek$arity$1(coll);
} else {
var x__4376__auto__ = (((coll == null))?null:coll);
return (function (){var or__3732__auto__ = (cljs.core._peek[(function (){var G__5465 = x__4376__auto__;
return goog.typeOf(G__5465);
})()]);
if(or__3732__auto__){
return or__3732__auto__;
} else {
var or__3732__auto____$1 = (cljs.core._peek["_"]);
if(or__3732__auto____$1){
return or__3732__auto____$1;
} else {
throw cljs.core.missing_protocol("IStack.-peek",coll);
}
}
})().call(null,coll);
}
});

cljs.core._pop = (function _pop(coll){
if((function (){var and__3720__auto__ = coll;
if(and__3720__auto__){
return coll.cljs$core$IStack$_pop$arity$1;
} else {
return and__3720__auto__;
}
})()){
return coll.cljs$core$IStack$_pop$arity$1(coll);
} else {
var x__4376__auto__ = (((coll == null))?null:coll);
return (function (){var or__3732__auto__ = (cljs.core._pop[(function (){var G__5469 = x__4376__auto__;
return goog.typeOf(G__5469);
})()]);
if(or__3732__auto__){
return or__3732__auto__;
} else {
var or__3732__auto____$1 = (cljs.core._pop["_"]);
if(or__3732__auto____$1){
return or__3732__auto____$1;
} else {
throw cljs.core.missing_protocol("IStack.-pop",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IVector = (function (){var obj5471 = {};
return obj5471;
})();

cljs.core._assoc_n = (function _assoc_n(coll,n,val){
if((function (){var and__3720__auto__ = coll;
if(and__3720__auto__){
return coll.cljs$core$IVector$_assoc_n$arity$3;
} else {
return and__3720__auto__;
}
})()){
return coll.cljs$core$IVector$_assoc_n$arity$3(coll,n,val);
} else {
var x__4376__auto__ = (((coll == null))?null:coll);
return (function (){var or__3732__auto__ = (cljs.core._assoc_n[(function (){var G__5475 = x__4376__auto__;
return goog.typeOf(G__5475);
})()]);
if(or__3732__auto__){
return or__3732__auto__;
} else {
var or__3732__auto____$1 = (cljs.core._assoc_n["_"]);
if(or__3732__auto____$1){
return or__3732__auto____$1;
} else {
throw cljs.core.missing_protocol("IVector.-assoc-n",coll);
}
}
})().call(null,coll,n,val);
}
});


cljs.core.IDeref = (function (){var obj5477 = {};
return obj5477;
})();

cljs.core._deref = (function _deref(o){
if((function (){var and__3720__auto__ = o;
if(and__3720__auto__){
return o.cljs$core$IDeref$_deref$arity$1;
} else {
return and__3720__auto__;
}
})()){
return o.cljs$core$IDeref$_deref$arity$1(o);
} else {
var x__4376__auto__ = (((o == null))?null:o);
return (function (){var or__3732__auto__ = (cljs.core._deref[(function (){var G__5481 = x__4376__auto__;
return goog.typeOf(G__5481);
})()]);
if(or__3732__auto__){
return or__3732__auto__;
} else {
var or__3732__auto____$1 = (cljs.core._deref["_"]);
if(or__3732__auto____$1){
return or__3732__auto____$1;
} else {
throw cljs.core.missing_protocol("IDeref.-deref",o);
}
}
})().call(null,o);
}
});


cljs.core.IDerefWithTimeout = (function (){var obj5483 = {};
return obj5483;
})();

cljs.core._deref_with_timeout = (function _deref_with_timeout(o,msec,timeout_val){
if((function (){var and__3720__auto__ = o;
if(and__3720__auto__){
return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3;
} else {
return and__3720__auto__;
}
})()){
return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3(o,msec,timeout_val);
} else {
var x__4376__auto__ = (((o == null))?null:o);
return (function (){var or__3732__auto__ = (cljs.core._deref_with_timeout[(function (){var G__5487 = x__4376__auto__;
return goog.typeOf(G__5487);
})()]);
if(or__3732__auto__){
return or__3732__auto__;
} else {
var or__3732__auto____$1 = (cljs.core._deref_with_timeout["_"]);
if(or__3732__auto____$1){
return or__3732__auto____$1;
} else {
throw cljs.core.missing_protocol("IDerefWithTimeout.-deref-with-timeout",o);
}
}
})().call(null,o,msec,timeout_val);
}
});


cljs.core.IMeta = (function (){var obj5489 = {};
return obj5489;
})();

cljs.core._meta = (function _meta(o){
if((function (){var and__3720__auto__ = o;
if(and__3720__auto__){
return o.cljs$core$IMeta$_meta$arity$1;
} else {
return and__3720__auto__;
}
})()){
return o.cljs$core$IMeta$_meta$arity$1(o);
} else {
var x__4376__auto__ = (((o == null))?null:o);
return (function (){var or__3732__auto__ = (cljs.core._meta[(function (){var G__5493 = x__4376__auto__;
return goog.typeOf(G__5493);
})()]);
if(or__3732__auto__){
return or__3732__auto__;
} else {
var or__3732__auto____$1 = (cljs.core._meta["_"]);
if(or__3732__auto____$1){
return or__3732__auto____$1;
} else {
throw cljs.core.missing_protocol("IMeta.-meta",o);
}
}
})().call(null,o);
}
});


cljs.core.IWithMeta = (function (){var obj5495 = {};
return obj5495;
})();

cljs.core._with_meta = (function _with_meta(o,meta){
if((function (){var and__3720__auto__ = o;
if(and__3720__auto__){
return o.cljs$core$IWithMeta$_with_meta$arity$2;
} else {
return and__3720__auto__;
}
})()){
return o.cljs$core$IWithMeta$_with_meta$arity$2(o,meta);
} else {
var x__4376__auto__ = (((o == null))?null:o);
return (function (){var or__3732__auto__ = (cljs.core._with_meta[(function (){var G__5499 = x__4376__auto__;
return goog.typeOf(G__5499);
})()]);
if(or__3732__auto__){
return or__3732__auto__;
} else {
var or__3732__auto____$1 = (cljs.core._with_meta["_"]);
if(or__3732__auto____$1){
return or__3732__auto____$1;
} else {
throw cljs.core.missing_protocol("IWithMeta.-with-meta",o);
}
}
})().call(null,o,meta);
}
});


cljs.core.IReduce = (function (){var obj5501 = {};
return obj5501;
})();

cljs.core._reduce = (function() {
var _reduce = null;
var _reduce__2 = (function (coll,f){
if((function (){var and__3720__auto__ = coll;
if(and__3720__auto__){
return coll.cljs$core$IReduce$_reduce$arity$2;
} else {
return and__3720__auto__;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$2(coll,f);
} else {
var x__4376__auto__ = (((coll == null))?null:coll);
return (function (){var or__3732__auto__ = (cljs.core._reduce[(function (){var G__5507 = x__4376__auto__;
return goog.typeOf(G__5507);
})()]);
if(or__3732__auto__){
return or__3732__auto__;
} else {
var or__3732__auto____$1 = (cljs.core._reduce["_"]);
if(or__3732__auto____$1){
return or__3732__auto____$1;
} else {
throw cljs.core.missing_protocol("IReduce.-reduce",coll);
}
}
})().call(null,coll,f);
}
});
var _reduce__3 = (function (coll,f,start){
if((function (){var and__3720__auto__ = coll;
if(and__3720__auto__){
return coll.cljs$core$IReduce$_reduce$arity$3;
} else {
return and__3720__auto__;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$3(coll,f,start);
} else {
var x__4376__auto__ = (((coll == null))?null:coll);
return (function (){var or__3732__auto__ = (cljs.core._reduce[(function (){var G__5509 = x__4376__auto__;
return goog.typeOf(G__5509);
})()]);
if(or__3732__auto__){
return or__3732__auto__;
} else {
var or__3732__auto____$1 = (cljs.core._reduce["_"]);
if(or__3732__auto____$1){
return or__3732__auto____$1;
} else {
throw cljs.core.missing_protocol("IReduce.-reduce",coll);
}
}
})().call(null,coll,f,start);
}
});
_reduce = function(coll,f,start){
switch(arguments.length){
case 2:
return _reduce__2.call(this,coll,f);
case 3:
return _reduce__3.call(this,coll,f,start);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_reduce.cljs$core$IFn$_invoke$arity$2 = _reduce__2;
_reduce.cljs$core$IFn$_invoke$arity$3 = _reduce__3;
return _reduce;
})()
;


cljs.core.IKVReduce = (function (){var obj5511 = {};
return obj5511;
})();

cljs.core._kv_reduce = (function _kv_reduce(coll,f,init){
if((function (){var and__3720__auto__ = coll;
if(and__3720__auto__){
return coll.cljs$core$IKVReduce$_kv_reduce$arity$3;
} else {
return and__3720__auto__;
}
})()){
return coll.cljs$core$IKVReduce$_kv_reduce$arity$3(coll,f,init);
} else {
var x__4376__auto__ = (((coll == null))?null:coll);
return (function (){var or__3732__auto__ = (cljs.core._kv_reduce[(function (){var G__5515 = x__4376__auto__;
return goog.typeOf(G__5515);
})()]);
if(or__3732__auto__){
return or__3732__auto__;
} else {
var or__3732__auto____$1 = (cljs.core._kv_reduce["_"]);
if(or__3732__auto____$1){
return or__3732__auto____$1;
} else {
throw cljs.core.missing_protocol("IKVReduce.-kv-reduce",coll);
}
}
})().call(null,coll,f,init);
}
});


cljs.core.IEquiv = (function (){var obj5517 = {};
return obj5517;
})();

cljs.core._equiv = (function _equiv(o,other){
if((function (){var and__3720__auto__ = o;
if(and__3720__auto__){
return o.cljs$core$IEquiv$_equiv$arity$2;
} else {
return and__3720__auto__;
}
})()){
return o.cljs$core$IEquiv$_equiv$arity$2(o,other);
} else {
var x__4376__auto__ = (((o == null))?null:o);
return (function (){var or__3732__auto__ = (cljs.core._equiv[(function (){var G__5521 = x__4376__auto__;
return goog.typeOf(G__5521);
})()]);
if(or__3732__auto__){
return or__3732__auto__;
} else {
var or__3732__auto____$1 = (cljs.core._equiv["_"]);
if(or__3732__auto____$1){
return or__3732__auto____$1;
} else {
throw cljs.core.missing_protocol("IEquiv.-equiv",o);
}
}
})().call(null,o,other);
}
});


cljs.core.IHash = (function (){var obj5523 = {};
return obj5523;
})();

cljs.core._hash = (function _hash(o){
if((function (){var and__3720__auto__ = o;
if(and__3720__auto__){
return o.cljs$core$IHash$_hash$arity$1;
} else {
return and__3720__auto__;
}
})()){
return o.cljs$core$IHash$_hash$arity$1(o);
} else {
var x__4376__auto__ = (((o == null))?null:o);
return (function (){var or__3732__auto__ = (cljs.core._hash[(function (){var G__5527 = x__4376__auto__;
return goog.typeOf(G__5527);
})()]);
if(or__3732__auto__){
return or__3732__auto__;
} else {
var or__3732__auto____$1 = (cljs.core._hash["_"]);
if(or__3732__auto____$1){
return or__3732__auto____$1;
} else {
throw cljs.core.missing_protocol("IHash.-hash",o);
}
}
})().call(null,o);
}
});


cljs.core.ISeqable = (function (){var obj5529 = {};
return obj5529;
})();

cljs.core._seq = (function _seq(o){
if((function (){var and__3720__auto__ = o;
if(and__3720__auto__){
return o.cljs$core$ISeqable$_seq$arity$1;
} else {
return and__3720__auto__;
}
})()){
return o.cljs$core$ISeqable$_seq$arity$1(o);
} else {
var x__4376__auto__ = (((o == null))?null:o);
return (function (){var or__3732__auto__ = (cljs.core._seq[(function (){var G__5533 = x__4376__auto__;
return goog.typeOf(G__5533);
})()]);
if(or__3732__auto__){
return or__3732__auto__;
} else {
var or__3732__auto____$1 = (cljs.core._seq["_"]);
if(or__3732__auto____$1){
return or__3732__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeqable.-seq",o);
}
}
})().call(null,o);
}
});


cljs.core.ISequential = (function (){var obj5535 = {};
return obj5535;
})();


cljs.core.IList = (function (){var obj5537 = {};
return obj5537;
})();


cljs.core.IRecord = (function (){var obj5539 = {};
return obj5539;
})();


cljs.core.IReversible = (function (){var obj5541 = {};
return obj5541;
})();

cljs.core._rseq = (function _rseq(coll){
if((function (){var and__3720__auto__ = coll;
if(and__3720__auto__){
return coll.cljs$core$IReversible$_rseq$arity$1;
} else {
return and__3720__auto__;
}
})()){
return coll.cljs$core$IReversible$_rseq$arity$1(coll);
} else {
var x__4376__auto__ = (((coll == null))?null:coll);
return (function (){var or__3732__auto__ = (cljs.core._rseq[(function (){var G__5545 = x__4376__auto__;
return goog.typeOf(G__5545);
})()]);
if(or__3732__auto__){
return or__3732__auto__;
} else {
var or__3732__auto____$1 = (cljs.core._rseq["_"]);
if(or__3732__auto____$1){
return or__3732__auto____$1;
} else {
throw cljs.core.missing_protocol("IReversible.-rseq",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ISorted = (function (){var obj5547 = {};
return obj5547;
})();

cljs.core._sorted_seq = (function _sorted_seq(coll,ascending_QMARK_){
if((function (){var and__3720__auto__ = coll;
if(and__3720__auto__){
return coll.cljs$core$ISorted$_sorted_seq$arity$2;
} else {
return and__3720__auto__;
}
})()){
return coll.cljs$core$ISorted$_sorted_seq$arity$2(coll,ascending_QMARK_);
} else {
var x__4376__auto__ = (((coll == null))?null:coll);
return (function (){var or__3732__auto__ = (cljs.core._sorted_seq[(function (){var G__5551 = x__4376__auto__;
return goog.typeOf(G__5551);
})()]);
if(or__3732__auto__){
return or__3732__auto__;
} else {
var or__3732__auto____$1 = (cljs.core._sorted_seq["_"]);
if(or__3732__auto____$1){
return or__3732__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-sorted-seq",coll);
}
}
})().call(null,coll,ascending_QMARK_);
}
});

cljs.core._sorted_seq_from = (function _sorted_seq_from(coll,k,ascending_QMARK_){
if((function (){var and__3720__auto__ = coll;
if(and__3720__auto__){
return coll.cljs$core$ISorted$_sorted_seq_from$arity$3;
} else {
return and__3720__auto__;
}
})()){
return coll.cljs$core$ISorted$_sorted_seq_from$arity$3(coll,k,ascending_QMARK_);
} else {
var x__4376__auto__ = (((coll == null))?null:coll);
return (function (){var or__3732__auto__ = (cljs.core._sorted_seq_from[(function (){var G__5555 = x__4376__auto__;
return goog.typeOf(G__5555);
})()]);
if(or__3732__auto__){
return or__3732__auto__;
} else {
var or__3732__auto____$1 = (cljs.core._sorted_seq_from["_"]);
if(or__3732__auto____$1){
return or__3732__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-sorted-seq-from",coll);
}
}
})().call(null,coll,k,ascending_QMARK_);
}
});

cljs.core._entry_key = (function _entry_key(coll,entry){
if((function (){var and__3720__auto__ = coll;
if(and__3720__auto__){
return coll.cljs$core$ISorted$_entry_key$arity$2;
} else {
return and__3720__auto__;
}
})()){
return coll.cljs$core$ISorted$_entry_key$arity$2(coll,entry);
} else {
var x__4376__auto__ = (((coll == null))?null:coll);
return (function (){var or__3732__auto__ = (cljs.core._entry_key[(function (){var G__5559 = x__4376__auto__;
return goog.typeOf(G__5559);
})()]);
if(or__3732__auto__){
return or__3732__auto__;
} else {
var or__3732__auto____$1 = (cljs.core._entry_key["_"]);
if(or__3732__auto____$1){
return or__3732__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-entry-key",coll);
}
}
})().call(null,coll,entry);
}
});

cljs.core._comparator = (function _comparator(coll){
if((function (){var and__3720__auto__ = coll;
if(and__3720__auto__){
return coll.cljs$core$ISorted$_comparator$arity$1;
} else {
return and__3720__auto__;
}
})()){
return coll.cljs$core$ISorted$_comparator$arity$1(coll);
} else {
var x__4376__auto__ = (((coll == null))?null:coll);
return (function (){var or__3732__auto__ = (cljs.core._comparator[(function (){var G__5563 = x__4376__auto__;
return goog.typeOf(G__5563);
})()]);
if(or__3732__auto__){
return or__3732__auto__;
} else {
var or__3732__auto____$1 = (cljs.core._comparator["_"]);
if(or__3732__auto____$1){
return or__3732__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-comparator",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IWriter = (function (){var obj5565 = {};
return obj5565;
})();

cljs.core._write = (function _write(writer,s){
if((function (){var and__3720__auto__ = writer;
if(and__3720__auto__){
return writer.cljs$core$IWriter$_write$arity$2;
} else {
return and__3720__auto__;
}
})()){
return writer.cljs$core$IWriter$_write$arity$2(writer,s);
} else {
var x__4376__auto__ = (((writer == null))?null:writer);
return (function (){var or__3732__auto__ = (cljs.core._write[(function (){var G__5569 = x__4376__auto__;
return goog.typeOf(G__5569);
})()]);
if(or__3732__auto__){
return or__3732__auto__;
} else {
var or__3732__auto____$1 = (cljs.core._write["_"]);
if(or__3732__auto____$1){
return or__3732__auto____$1;
} else {
throw cljs.core.missing_protocol("IWriter.-write",writer);
}
}
})().call(null,writer,s);
}
});

cljs.core._flush = (function _flush(writer){
if((function (){var and__3720__auto__ = writer;
if(and__3720__auto__){
return writer.cljs$core$IWriter$_flush$arity$1;
} else {
return and__3720__auto__;
}
})()){
return writer.cljs$core$IWriter$_flush$arity$1(writer);
} else {
var x__4376__auto__ = (((writer == null))?null:writer);
return (function (){var or__3732__auto__ = (cljs.core._flush[(function (){var G__5573 = x__4376__auto__;
return goog.typeOf(G__5573);
})()]);
if(or__3732__auto__){
return or__3732__auto__;
} else {
var or__3732__auto____$1 = (cljs.core._flush["_"]);
if(or__3732__auto____$1){
return or__3732__auto____$1;
} else {
throw cljs.core.missing_protocol("IWriter.-flush",writer);
}
}
})().call(null,writer);
}
});


cljs.core.IPrintWithWriter = (function (){var obj5575 = {};
return obj5575;
})();

cljs.core._pr_writer = (function _pr_writer(o,writer,opts){
if((function (){var and__3720__auto__ = o;
if(and__3720__auto__){
return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3;
} else {
return and__3720__auto__;
}
})()){
return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3(o,writer,opts);
} else {
var x__4376__auto__ = (((o == null))?null:o);
return (function (){var or__3732__auto__ = (cljs.core._pr_writer[(function (){var G__5579 = x__4376__auto__;
return goog.typeOf(G__5579);
})()]);
if(or__3732__auto__){
return or__3732__auto__;
} else {
var or__3732__auto____$1 = (cljs.core._pr_writer["_"]);
if(or__3732__auto____$1){
return or__3732__auto____$1;
} else {
throw cljs.core.missing_protocol("IPrintWithWriter.-pr-writer",o);
}
}
})().call(null,o,writer,opts);
}
});


cljs.core.IPending = (function (){var obj5581 = {};
return obj5581;
})();

cljs.core._realized_QMARK_ = (function _realized_QMARK_(d){
if((function (){var and__3720__auto__ = d;
if(and__3720__auto__){
return d.cljs$core$IPending$_realized_QMARK_$arity$1;
} else {
return and__3720__auto__;
}
})()){
return d.cljs$core$IPending$_realized_QMARK_$arity$1(d);
} else {
var x__4376__auto__ = (((d == null))?null:d);
return (function (){var or__3732__auto__ = (cljs.core._realized_QMARK_[(function (){var G__5585 = x__4376__auto__;
return goog.typeOf(G__5585);
})()]);
if(or__3732__auto__){
return or__3732__auto__;
} else {
var or__3732__auto____$1 = (cljs.core._realized_QMARK_["_"]);
if(or__3732__auto____$1){
return or__3732__auto____$1;
} else {
throw cljs.core.missing_protocol("IPending.-realized?",d);
}
}
})().call(null,d);
}
});


cljs.core.IWatchable = (function (){var obj5587 = {};
return obj5587;
})();

cljs.core._notify_watches = (function _notify_watches(this$,oldval,newval){
if((function (){var and__3720__auto__ = this$;
if(and__3720__auto__){
return this$.cljs$core$IWatchable$_notify_watches$arity$3;
} else {
return and__3720__auto__;
}
})()){
return this$.cljs$core$IWatchable$_notify_watches$arity$3(this$,oldval,newval);
} else {
var x__4376__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3732__auto__ = (cljs.core._notify_watches[(function (){var G__5591 = x__4376__auto__;
return goog.typeOf(G__5591);
})()]);
if(or__3732__auto__){
return or__3732__auto__;
} else {
var or__3732__auto____$1 = (cljs.core._notify_watches["_"]);
if(or__3732__auto____$1){
return or__3732__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-notify-watches",this$);
}
}
})().call(null,this$,oldval,newval);
}
});

cljs.core._add_watch = (function _add_watch(this$,key,f){
if((function (){var and__3720__auto__ = this$;
if(and__3720__auto__){
return this$.cljs$core$IWatchable$_add_watch$arity$3;
} else {
return and__3720__auto__;
}
})()){
return this$.cljs$core$IWatchable$_add_watch$arity$3(this$,key,f);
} else {
var x__4376__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3732__auto__ = (cljs.core._add_watch[(function (){var G__5595 = x__4376__auto__;
return goog.typeOf(G__5595);
})()]);
if(or__3732__auto__){
return or__3732__auto__;
} else {
var or__3732__auto____$1 = (cljs.core._add_watch["_"]);
if(or__3732__auto____$1){
return or__3732__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-add-watch",this$);
}
}
})().call(null,this$,key,f);
}
});

cljs.core._remove_watch = (function _remove_watch(this$,key){
if((function (){var and__3720__auto__ = this$;
if(and__3720__auto__){
return this$.cljs$core$IWatchable$_remove_watch$arity$2;
} else {
return and__3720__auto__;
}
})()){
return this$.cljs$core$IWatchable$_remove_watch$arity$2(this$,key);
} else {
var x__4376__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3732__auto__ = (cljs.core._remove_watch[(function (){var G__5599 = x__4376__auto__;
return goog.typeOf(G__5599);
})()]);
if(or__3732__auto__){
return or__3732__auto__;
} else {
var or__3732__auto____$1 = (cljs.core._remove_watch["_"]);
if(or__3732__auto____$1){
return or__3732__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-remove-watch",this$);
}
}
})().call(null,this$,key);
}
});


cljs.core.IEditableCollection = (function (){var obj5601 = {};
return obj5601;
})();

cljs.core._as_transient = (function _as_transient(coll){
if((function (){var and__3720__auto__ = coll;
if(and__3720__auto__){
return coll.cljs$core$IEditableCollection$_as_transient$arity$1;
} else {
return and__3720__auto__;
}
})()){
return coll.cljs$core$IEditableCollection$_as_transient$arity$1(coll);
} else {
var x__4376__auto__ = (((coll == null))?null:coll);
return (function (){var or__3732__auto__ = (cljs.core._as_transient[(function (){var G__5605 = x__4376__auto__;
return goog.typeOf(G__5605);
})()]);
if(or__3732__auto__){
return or__3732__auto__;
} else {
var or__3732__auto____$1 = (cljs.core._as_transient["_"]);
if(or__3732__auto____$1){
return or__3732__auto____$1;
} else {
throw cljs.core.missing_protocol("IEditableCollection.-as-transient",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ITransientCollection = (function (){var obj5607 = {};
return obj5607;
})();

cljs.core._conj_BANG_ = (function _conj_BANG_(tcoll,val){
if((function (){var and__3720__auto__ = tcoll;
if(and__3720__auto__){
return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2;
} else {
return and__3720__auto__;
}
})()){
return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2(tcoll,val);
} else {
var x__4376__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3732__auto__ = (cljs.core._conj_BANG_[(function (){var G__5611 = x__4376__auto__;
return goog.typeOf(G__5611);
})()]);
if(or__3732__auto__){
return or__3732__auto__;
} else {
var or__3732__auto____$1 = (cljs.core._conj_BANG_["_"]);
if(or__3732__auto____$1){
return or__3732__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientCollection.-conj!",tcoll);
}
}
})().call(null,tcoll,val);
}
});

cljs.core._persistent_BANG_ = (function _persistent_BANG_(tcoll){
if((function (){var and__3720__auto__ = tcoll;
if(and__3720__auto__){
return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1;
} else {
return and__3720__auto__;
}
})()){
return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(tcoll);
} else {
var x__4376__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3732__auto__ = (cljs.core._persistent_BANG_[(function (){var G__5615 = x__4376__auto__;
return goog.typeOf(G__5615);
})()]);
if(or__3732__auto__){
return or__3732__auto__;
} else {
var or__3732__auto____$1 = (cljs.core._persistent_BANG_["_"]);
if(or__3732__auto____$1){
return or__3732__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientCollection.-persistent!",tcoll);
}
}
})().call(null,tcoll);
}
});


cljs.core.ITransientAssociative = (function (){var obj5617 = {};
return obj5617;
})();

cljs.core._assoc_BANG_ = (function _assoc_BANG_(tcoll,key,val){
if((function (){var and__3720__auto__ = tcoll;
if(and__3720__auto__){
return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3;
} else {
return and__3720__auto__;
}
})()){
return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll,key,val);
} else {
var x__4376__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3732__auto__ = (cljs.core._assoc_BANG_[(function (){var G__5621 = x__4376__auto__;
return goog.typeOf(G__5621);
})()]);
if(or__3732__auto__){
return or__3732__auto__;
} else {
var or__3732__auto____$1 = (cljs.core._assoc_BANG_["_"]);
if(or__3732__auto____$1){
return or__3732__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientAssociative.-assoc!",tcoll);
}
}
})().call(null,tcoll,key,val);
}
});


cljs.core.ITransientMap = (function (){var obj5623 = {};
return obj5623;
})();

cljs.core._dissoc_BANG_ = (function _dissoc_BANG_(tcoll,key){
if((function (){var and__3720__auto__ = tcoll;
if(and__3720__auto__){
return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2;
} else {
return and__3720__auto__;
}
})()){
return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2(tcoll,key);
} else {
var x__4376__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3732__auto__ = (cljs.core._dissoc_BANG_[(function (){var G__5627 = x__4376__auto__;
return goog.typeOf(G__5627);
})()]);
if(or__3732__auto__){
return or__3732__auto__;
} else {
var or__3732__auto____$1 = (cljs.core._dissoc_BANG_["_"]);
if(or__3732__auto____$1){
return or__3732__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientMap.-dissoc!",tcoll);
}
}
})().call(null,tcoll,key);
}
});


cljs.core.ITransientVector = (function (){var obj5629 = {};
return obj5629;
})();

cljs.core._assoc_n_BANG_ = (function _assoc_n_BANG_(tcoll,n,val){
if((function (){var and__3720__auto__ = tcoll;
if(and__3720__auto__){
return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3;
} else {
return and__3720__auto__;
}
})()){
return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3(tcoll,n,val);
} else {
var x__4376__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3732__auto__ = (cljs.core._assoc_n_BANG_[(function (){var G__5633 = x__4376__auto__;
return goog.typeOf(G__5633);
})()]);
if(or__3732__auto__){
return or__3732__auto__;
} else {
var or__3732__auto____$1 = (cljs.core._assoc_n_BANG_["_"]);
if(or__3732__auto____$1){
return or__3732__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientVector.-assoc-n!",tcoll);
}
}
})().call(null,tcoll,n,val);
}
});

cljs.core._pop_BANG_ = (function _pop_BANG_(tcoll){
if((function (){var and__3720__auto__ = tcoll;
if(and__3720__auto__){
return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1;
} else {
return and__3720__auto__;
}
})()){
return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1(tcoll);
} else {
var x__4376__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3732__auto__ = (cljs.core._pop_BANG_[(function (){var G__5637 = x__4376__auto__;
return goog.typeOf(G__5637);
})()]);
if(or__3732__auto__){
return or__3732__auto__;
} else {
var or__3732__auto____$1 = (cljs.core._pop_BANG_["_"]);
if(or__3732__auto____$1){
return or__3732__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientVector.-pop!",tcoll);
}
}
})().call(null,tcoll);
}
});


cljs.core.ITransientSet = (function (){var obj5639 = {};
return obj5639;
})();

cljs.core._disjoin_BANG_ = (function _disjoin_BANG_(tcoll,v){
if((function (){var and__3720__auto__ = tcoll;
if(and__3720__auto__){
return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2;
} else {
return and__3720__auto__;
}
})()){
return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2(tcoll,v);
} else {
var x__4376__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3732__auto__ = (cljs.core._disjoin_BANG_[(function (){var G__5643 = x__4376__auto__;
return goog.typeOf(G__5643);
})()]);
if(or__3732__auto__){
return or__3732__auto__;
} else {
var or__3732__auto____$1 = (cljs.core._disjoin_BANG_["_"]);
if(or__3732__auto____$1){
return or__3732__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientSet.-disjoin!",tcoll);
}
}
})().call(null,tcoll,v);
}
});


cljs.core.IComparable = (function (){var obj5645 = {};
return obj5645;
})();

cljs.core._compare = (function _compare(x,y){
if((function (){var and__3720__auto__ = x;
if(and__3720__auto__){
return x.cljs$core$IComparable$_compare$arity$2;
} else {
return and__3720__auto__;
}
})()){
return x.cljs$core$IComparable$_compare$arity$2(x,y);
} else {
var x__4376__auto__ = (((x == null))?null:x);
return (function (){var or__3732__auto__ = (cljs.core._compare[(function (){var G__5649 = x__4376__auto__;
return goog.typeOf(G__5649);
})()]);
if(or__3732__auto__){
return or__3732__auto__;
} else {
var or__3732__auto____$1 = (cljs.core._compare["_"]);
if(or__3732__auto____$1){
return or__3732__auto____$1;
} else {
throw cljs.core.missing_protocol("IComparable.-compare",x);
}
}
})().call(null,x,y);
}
});


cljs.core.IChunk = (function (){var obj5651 = {};
return obj5651;
})();

cljs.core._drop_first = (function _drop_first(coll){
if((function (){var and__3720__auto__ = coll;
if(and__3720__auto__){
return coll.cljs$core$IChunk$_drop_first$arity$1;
} else {
return and__3720__auto__;
}
})()){
return coll.cljs$core$IChunk$_drop_first$arity$1(coll);
} else {
var x__4376__auto__ = (((coll == null))?null:coll);
return (function (){var or__3732__auto__ = (cljs.core._drop_first[(function (){var G__5655 = x__4376__auto__;
return goog.typeOf(G__5655);
})()]);
if(or__3732__auto__){
return or__3732__auto__;
} else {
var or__3732__auto____$1 = (cljs.core._drop_first["_"]);
if(or__3732__auto____$1){
return or__3732__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunk.-drop-first",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IChunkedSeq = (function (){var obj5657 = {};
return obj5657;
})();

cljs.core._chunked_first = (function _chunked_first(coll){
if((function (){var and__3720__auto__ = coll;
if(and__3720__auto__){
return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1;
} else {
return and__3720__auto__;
}
})()){
return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1(coll);
} else {
var x__4376__auto__ = (((coll == null))?null:coll);
return (function (){var or__3732__auto__ = (cljs.core._chunked_first[(function (){var G__5661 = x__4376__auto__;
return goog.typeOf(G__5661);
})()]);
if(or__3732__auto__){
return or__3732__auto__;
} else {
var or__3732__auto____$1 = (cljs.core._chunked_first["_"]);
if(or__3732__auto____$1){
return or__3732__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedSeq.-chunked-first",coll);
}
}
})().call(null,coll);
}
});

cljs.core._chunked_rest = (function _chunked_rest(coll){
if((function (){var and__3720__auto__ = coll;
if(and__3720__auto__){
return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1;
} else {
return and__3720__auto__;
}
})()){
return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1(coll);
} else {
var x__4376__auto__ = (((coll == null))?null:coll);
return (function (){var or__3732__auto__ = (cljs.core._chunked_rest[(function (){var G__5665 = x__4376__auto__;
return goog.typeOf(G__5665);
})()]);
if(or__3732__auto__){
return or__3732__auto__;
} else {
var or__3732__auto____$1 = (cljs.core._chunked_rest["_"]);
if(or__3732__auto____$1){
return or__3732__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedSeq.-chunked-rest",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IChunkedNext = (function (){var obj5667 = {};
return obj5667;
})();

cljs.core._chunked_next = (function _chunked_next(coll){
if((function (){var and__3720__auto__ = coll;
if(and__3720__auto__){
return coll.cljs$core$IChunkedNext$_chunked_next$arity$1;
} else {
return and__3720__auto__;
}
})()){
return coll.cljs$core$IChunkedNext$_chunked_next$arity$1(coll);
} else {
var x__4376__auto__ = (((coll == null))?null:coll);
return (function (){var or__3732__auto__ = (cljs.core._chunked_next[(function (){var G__5671 = x__4376__auto__;
return goog.typeOf(G__5671);
})()]);
if(or__3732__auto__){
return or__3732__auto__;
} else {
var or__3732__auto____$1 = (cljs.core._chunked_next["_"]);
if(or__3732__auto____$1){
return or__3732__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedNext.-chunked-next",coll);
}
}
})().call(null,coll);
}
});


cljs.core.INamed = (function (){var obj5673 = {};
return obj5673;
})();

cljs.core._name = (function _name(x){
if((function (){var and__3720__auto__ = x;
if(and__3720__auto__){
return x.cljs$core$INamed$_name$arity$1;
} else {
return and__3720__auto__;
}
})()){
return x.cljs$core$INamed$_name$arity$1(x);
} else {
var x__4376__auto__ = (((x == null))?null:x);
return (function (){var or__3732__auto__ = (cljs.core._name[(function (){var G__5677 = x__4376__auto__;
return goog.typeOf(G__5677);
})()]);
if(or__3732__auto__){
return or__3732__auto__;
} else {
var or__3732__auto____$1 = (cljs.core._name["_"]);
if(or__3732__auto____$1){
return or__3732__auto____$1;
} else {
throw cljs.core.missing_protocol("INamed.-name",x);
}
}
})().call(null,x);
}
});

cljs.core._namespace = (function _namespace(x){
if((function (){var and__3720__auto__ = x;
if(and__3720__auto__){
return x.cljs$core$INamed$_namespace$arity$1;
} else {
return and__3720__auto__;
}
})()){
return x.cljs$core$INamed$_namespace$arity$1(x);
} else {
var x__4376__auto__ = (((x == null))?null:x);
return (function (){var or__3732__auto__ = (cljs.core._namespace[(function (){var G__5681 = x__4376__auto__;
return goog.typeOf(G__5681);
})()]);
if(or__3732__auto__){
return or__3732__auto__;
} else {
var or__3732__auto____$1 = (cljs.core._namespace["_"]);
if(or__3732__auto____$1){
return or__3732__auto____$1;
} else {
throw cljs.core.missing_protocol("INamed.-namespace",x);
}
}
})().call(null,x);
}
});


cljs.core.IAtom = (function (){var obj5683 = {};
return obj5683;
})();


cljs.core.IReset = (function (){var obj5685 = {};
return obj5685;
})();

cljs.core._reset_BANG_ = (function _reset_BANG_(o,new_value){
if((function (){var and__3720__auto__ = o;
if(and__3720__auto__){
return o.cljs$core$IReset$_reset_BANG_$arity$2;
} else {
return and__3720__auto__;
}
})()){
return o.cljs$core$IReset$_reset_BANG_$arity$2(o,new_value);
} else {
var x__4376__auto__ = (((o == null))?null:o);
return (function (){var or__3732__auto__ = (cljs.core._reset_BANG_[(function (){var G__5689 = x__4376__auto__;
return goog.typeOf(G__5689);
})()]);
if(or__3732__auto__){
return or__3732__auto__;
} else {
var or__3732__auto____$1 = (cljs.core._reset_BANG_["_"]);
if(or__3732__auto____$1){
return or__3732__auto____$1;
} else {
throw cljs.core.missing_protocol("IReset.-reset!",o);
}
}
})().call(null,o,new_value);
}
});


cljs.core.ISwap = (function (){var obj5691 = {};
return obj5691;
})();

cljs.core._swap_BANG_ = (function() {
var _swap_BANG_ = null;
var _swap_BANG___2 = (function (o,f){
if((function (){var and__3720__auto__ = o;
if(and__3720__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$2;
} else {
return and__3720__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$2(o,f);
} else {
var x__4376__auto__ = (((o == null))?null:o);
return (function (){var or__3732__auto__ = (cljs.core._swap_BANG_[(function (){var G__5701 = x__4376__auto__;
return goog.typeOf(G__5701);
})()]);
if(or__3732__auto__){
return or__3732__auto__;
} else {
var or__3732__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__3732__auto____$1){
return or__3732__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f);
}
});
var _swap_BANG___3 = (function (o,f,a){
if((function (){var and__3720__auto__ = o;
if(and__3720__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$3;
} else {
return and__3720__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$3(o,f,a);
} else {
var x__4376__auto__ = (((o == null))?null:o);
return (function (){var or__3732__auto__ = (cljs.core._swap_BANG_[(function (){var G__5703 = x__4376__auto__;
return goog.typeOf(G__5703);
})()]);
if(or__3732__auto__){
return or__3732__auto__;
} else {
var or__3732__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__3732__auto____$1){
return or__3732__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a);
}
});
var _swap_BANG___4 = (function (o,f,a,b){
if((function (){var and__3720__auto__ = o;
if(and__3720__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$4;
} else {
return and__3720__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$4(o,f,a,b);
} else {
var x__4376__auto__ = (((o == null))?null:o);
return (function (){var or__3732__auto__ = (cljs.core._swap_BANG_[(function (){var G__5705 = x__4376__auto__;
return goog.typeOf(G__5705);
})()]);
if(or__3732__auto__){
return or__3732__auto__;
} else {
var or__3732__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__3732__auto____$1){
return or__3732__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a,b);
}
});
var _swap_BANG___5 = (function (o,f,a,b,xs){
if((function (){var and__3720__auto__ = o;
if(and__3720__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$5;
} else {
return and__3720__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$5(o,f,a,b,xs);
} else {
var x__4376__auto__ = (((o == null))?null:o);
return (function (){var or__3732__auto__ = (cljs.core._swap_BANG_[(function (){var G__5707 = x__4376__auto__;
return goog.typeOf(G__5707);
})()]);
if(or__3732__auto__){
return or__3732__auto__;
} else {
var or__3732__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__3732__auto____$1){
return or__3732__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a,b,xs);
}
});
_swap_BANG_ = function(o,f,a,b,xs){
switch(arguments.length){
case 2:
return _swap_BANG___2.call(this,o,f);
case 3:
return _swap_BANG___3.call(this,o,f,a);
case 4:
return _swap_BANG___4.call(this,o,f,a,b);
case 5:
return _swap_BANG___5.call(this,o,f,a,b,xs);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_swap_BANG_.cljs$core$IFn$_invoke$arity$2 = _swap_BANG___2;
_swap_BANG_.cljs$core$IFn$_invoke$arity$3 = _swap_BANG___3;
_swap_BANG_.cljs$core$IFn$_invoke$arity$4 = _swap_BANG___4;
_swap_BANG_.cljs$core$IFn$_invoke$arity$5 = _swap_BANG___5;
return _swap_BANG_;
})()
;


cljs.core.IVolatile = (function (){var obj5709 = {};
return obj5709;
})();

cljs.core._vreset_BANG_ = (function _vreset_BANG_(o,new_value){
if((function (){var and__3720__auto__ = o;
if(and__3720__auto__){
return o.cljs$core$IVolatile$_vreset_BANG_$arity$2;
} else {
return and__3720__auto__;
}
})()){
return o.cljs$core$IVolatile$_vreset_BANG_$arity$2(o,new_value);
} else {
var x__4376__auto__ = (((o == null))?null:o);
return (function (){var or__3732__auto__ = (cljs.core._vreset_BANG_[(function (){var G__5713 = x__4376__auto__;
return goog.typeOf(G__5713);
})()]);
if(or__3732__auto__){
return or__3732__auto__;
} else {
var or__3732__auto____$1 = (cljs.core._vreset_BANG_["_"]);
if(or__3732__auto____$1){
return or__3732__auto____$1;
} else {
throw cljs.core.missing_protocol("IVolatile.-vreset!",o);
}
}
})().call(null,o,new_value);
}
});


cljs.core.IIterable = (function (){var obj5715 = {};
return obj5715;
})();

cljs.core._iterator = (function _iterator(coll){
if((function (){var and__3720__auto__ = coll;
if(and__3720__auto__){
return coll.cljs$core$IIterable$_iterator$arity$1;
} else {
return and__3720__auto__;
}
})()){
return coll.cljs$core$IIterable$_iterator$arity$1(coll);
} else {
var x__4376__auto__ = (((coll == null))?null:coll);
return (function (){var or__3732__auto__ = (cljs.core._iterator[(function (){var G__5719 = x__4376__auto__;
return goog.typeOf(G__5719);
})()]);
if(or__3732__auto__){
return or__3732__auto__;
} else {
var or__3732__auto____$1 = (cljs.core._iterator["_"]);
if(or__3732__auto____$1){
return or__3732__auto____$1;
} else {
throw cljs.core.missing_protocol("IIterable.-iterator",coll);
}
}
})().call(null,coll);
}
});


/**
* @constructor
*/
cljs.core.StringBufferWriter = (function (sb){
this.sb = sb;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 1073741824;
})
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_write$arity$2 = (function (_,s){
var self__ = this;
var ___$1 = this;
return self__.sb.append(s);
});

cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_flush$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return null;
});

cljs.core.StringBufferWriter.cljs$lang$type = true;

cljs.core.StringBufferWriter.cljs$lang$ctorStr = "cljs.core/StringBufferWriter";

cljs.core.StringBufferWriter.cljs$lang$ctorPrWriter = (function (this__4319__auto__,writer__4320__auto__,opt__4321__auto__){
return cljs.core._write(writer__4320__auto__,"cljs.core/StringBufferWriter");
});

cljs.core.__GT_StringBufferWriter = (function __GT_StringBufferWriter(sb){
return (new cljs.core.StringBufferWriter(sb));
});

/**
* Support so that collections can implement toString without
* loading all the printing machinery.
*/
cljs.core.pr_str_STAR_ = (function pr_str_STAR_(obj){
var sb = (new goog.string.StringBuffer());
var writer = (new cljs.core.StringBufferWriter(sb));
obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null,writer,cljs.core.pr_opts());

writer.cljs$core$IWriter$_flush$arity$1(null);

return [cljs.core.str(sb)].join('');
});
cljs.core.int_rotate_left = (function int_rotate_left(x,n){
return ((x << n) | (x >>> (- n)));
});
if((typeof Math.imul !== 'undefined') && (!(((function (){var G__5722 = (4294967295);
var G__5723 = (5);
return (Math.imul.cljs$core$IFn$_invoke$arity$2 ? Math.imul.cljs$core$IFn$_invoke$arity$2(G__5722,G__5723) : Math.imul.call(null,G__5722,G__5723));
})() === (0))))){
cljs.core.imul = (function imul(a,b){
var G__5726 = a;
var G__5727 = b;
return (Math.imul.cljs$core$IFn$_invoke$arity$2 ? Math.imul.cljs$core$IFn$_invoke$arity$2(G__5726,G__5727) : Math.imul.call(null,G__5726,G__5727));
});
} else {
cljs.core.imul = (function imul(a,b){
var ah = ((a >>> (16)) & (65535));
var al = (a & (65535));
var bh = ((b >>> (16)) & (65535));
var bl = (b & (65535));
return (((al * bl) + ((((ah * bl) + (al * bh)) << (16)) >>> (0))) | (0));
});
}
cljs.core.m3_seed = (0);
cljs.core.m3_C1 = (3432918353);
cljs.core.m3_C2 = (461845907);
cljs.core.m3_mix_K1 = (function m3_mix_K1(k1){
return cljs.core.imul(cljs.core.int_rotate_left(cljs.core.imul(k1,cljs.core.m3_C1),(15)),cljs.core.m3_C2);
});
cljs.core.m3_mix_H1 = (function m3_mix_H1(h1,k1){
return (cljs.core.imul(cljs.core.int_rotate_left((h1 ^ k1),(13)),(5)) + (3864292196));
});
cljs.core.m3_fmix = (function m3_fmix(h1,len){
var h1__$1 = h1;
var h1__$2 = (h1__$1 ^ len);
var h1__$3 = (h1__$2 ^ (h1__$2 >>> (16)));
var h1__$4 = cljs.core.imul(h1__$3,(2246822507));
var h1__$5 = (h1__$4 ^ (h1__$4 >>> (13)));
var h1__$6 = cljs.core.imul(h1__$5,(3266489909));
var h1__$7 = (h1__$6 ^ (h1__$6 >>> (16)));
return h1__$7;
});
cljs.core.m3_hash_int = (function m3_hash_int(in$){
if((in$ === (0))){
return in$;
} else {
var k1 = cljs.core.m3_mix_K1(in$);
var h1 = cljs.core.m3_mix_H1(cljs.core.m3_seed,k1);
return cljs.core.m3_fmix(h1,(4));
}
});
cljs.core.m3_hash_unencoded_chars = (function m3_hash_unencoded_chars(in$){
var h1 = (function (){var i = (1);
var h1 = cljs.core.m3_seed;
while(true){
if((i < in$.length)){
var G__5728 = (i + (2));
var G__5729 = cljs.core.m3_mix_H1(h1,cljs.core.m3_mix_K1((in$.charCodeAt((i - (1))) | (in$.charCodeAt(i) << (16)))));
i = G__5728;
h1 = G__5729;
continue;
} else {
return h1;
}
break;
}
})();
var h1__$1 = ((((in$.length & (1)) === (1)))?(h1 ^ cljs.core.m3_mix_K1(in$.charCodeAt((in$.length - (1))))):h1);
return cljs.core.m3_fmix(h1__$1,cljs.core.imul((2),in$.length));
});



cljs.core.string_hash_cache = (function (){var obj5731 = {};
return obj5731;
})();
cljs.core.string_hash_cache_count = (0);
cljs.core.hash_string_STAR_ = (function hash_string_STAR_(s){
if(!((s == null))){
var len = s.length;
if((len > (0))){
var i = (0);
var hash = (0);
while(true){
if((i < len)){
var G__5732 = (i + (1));
var G__5733 = (cljs.core.imul((31),hash) + s.charCodeAt(i));
i = G__5732;
hash = G__5733;
continue;
} else {
return hash;
}
break;
}
} else {
return (0);
}
} else {
return (0);
}
});
cljs.core.add_to_string_hash_cache = (function add_to_string_hash_cache(k){
var h = cljs.core.hash_string_STAR_(k);
(cljs.core.string_hash_cache[k] = h);

cljs.core.string_hash_cache_count = (cljs.core.string_hash_cache_count + (1));

return h;
});
cljs.core.hash_string = (function hash_string(k){
if((cljs.core.string_hash_cache_count > (255))){
cljs.core.string_hash_cache = (function (){var obj5737 = {};
return obj5737;
})();

cljs.core.string_hash_cache_count = (0);
} else {
}

var h = (cljs.core.string_hash_cache[k]);
if(typeof h === 'number'){
return h;
} else {
return cljs.core.add_to_string_hash_cache(k);
}
});
cljs.core.hash = (function hash(o){
if((function (){var G__5740 = o;
if(G__5740){
var bit__4406__auto__ = (G__5740.cljs$lang$protocol_mask$partition0$ & (4194304));
if((bit__4406__auto__) || (G__5740.cljs$core$IHash$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$IHash$_hash$arity$1(null);
} else {
if(typeof o === 'number'){
return ((function (){var G__5741 = o;
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__5741) : Math.floor.call(null,G__5741));
})() % (2147483647));
} else {
if(o === true){
return (1);
} else {
if(o === false){
return (0);
} else {
if(typeof o === 'string'){
return cljs.core.m3_hash_int(cljs.core.hash_string(o));
} else {
if((o instanceof Date)){
return o.valueOf();
} else {
if((o == null)){
return (0);
} else {
return cljs.core._hash(o);

}
}
}
}
}
}
}
});
cljs.core.hash_combine = (function hash_combine(seed,hash){
return (seed ^ (((hash + (2654435769)) + (seed << (6))) + (seed >> (2))));
});
cljs.core.instance_QMARK_ = (function instance_QMARK_(t,o){
return (o instanceof t);
});
cljs.core.symbol_QMARK_ = (function symbol_QMARK_(x){
return (x instanceof cljs.core.Symbol);
});
cljs.core.hash_symbol = (function hash_symbol(sym){
return cljs.core.hash_combine(cljs.core.m3_hash_unencoded_chars(sym.name),cljs.core.hash_string(sym.ns));
});
cljs.core.compare_symbols = (function compare_symbols(a,b){
if((a.str === b.str)){
return (0);
} else {
if(cljs.core.truth_((function (){var and__3720__auto__ = cljs.core.not(a.ns);
if(and__3720__auto__){
return b.ns;
} else {
return and__3720__auto__;
}
})())){
return (-1);
} else {
if(cljs.core.truth_(a.ns)){
if(cljs.core.not(b.ns)){
return (1);
} else {
var nsc = (function (){var G__5748 = a.ns;
var G__5749 = b.ns;
return goog.array.defaultCompare(G__5748,G__5749);
})();
if(((0) === nsc)){
var G__5750 = a.name;
var G__5751 = b.name;
return goog.array.defaultCompare(G__5750,G__5751);
} else {
return nsc;
}
}
} else {
var G__5752 = a.name;
var G__5753 = b.name;
return goog.array.defaultCompare(G__5752,G__5753);

}
}
}
});

/**
* @constructor
*/
cljs.core.Symbol = (function (ns,name,str,_hash,_meta){
this.ns = ns;
this.name = name;
this.str = str;
this._hash = _hash;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition0$ = 2154168321;
this.cljs$lang$protocol_mask$partition1$ = 4096;
})
cljs.core.Symbol.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (o,writer,_){
var self__ = this;
var o__$1 = this;
return cljs.core._write(writer,self__.str);
});

cljs.core.Symbol.prototype.cljs$core$INamed$_name$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.name;
});

cljs.core.Symbol.prototype.cljs$core$INamed$_namespace$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.ns;
});

cljs.core.Symbol.prototype.cljs$core$IHash$_hash$arity$1 = (function (sym){
var self__ = this;
var sym__$1 = this;
var h__4153__auto__ = self__._hash;
if(!((h__4153__auto__ == null))){
return h__4153__auto__;
} else {
var h__4153__auto____$1 = cljs.core.hash_symbol(sym__$1);
self__._hash = h__4153__auto____$1;

return h__4153__auto____$1;
}
});

cljs.core.Symbol.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_,new_meta){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Symbol(self__.ns,self__.name,self__.str,self__._hash,new_meta));
});

cljs.core.Symbol.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__._meta;
});

cljs.core.Symbol.prototype.call = (function() {
var G__5755 = null;
var G__5755__2 = (function (self__,coll){
var self__ = this;
var self____$1 = this;
var sym = self____$1;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,null);
});
var G__5755__3 = (function (self__,coll,not_found){
var self__ = this;
var self____$1 = this;
var sym = self____$1;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,not_found);
});
G__5755 = function(self__,coll,not_found){
switch(arguments.length){
case 2:
return G__5755__2.call(this,self__,coll);
case 3:
return G__5755__3.call(this,self__,coll,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__5755.cljs$core$IFn$_invoke$arity$2 = G__5755__2;
G__5755.cljs$core$IFn$_invoke$arity$3 = G__5755__3;
return G__5755;
})()
;

cljs.core.Symbol.prototype.apply = (function (self__,args5754){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args5754)));
});

cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$1 = (function (coll){
var self__ = this;
var sym = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,null);
});

cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$2 = (function (coll,not_found){
var self__ = this;
var sym = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,not_found);
});

cljs.core.Symbol.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
if((other instanceof cljs.core.Symbol)){
return (self__.str === other.str);
} else {
return false;
}
});

cljs.core.Symbol.prototype.toString = (function (){
var self__ = this;
var _ = this;
return self__.str;
});

cljs.core.Symbol.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Symbol.cljs$lang$type = true;

cljs.core.Symbol.cljs$lang$ctorStr = "cljs.core/Symbol";

cljs.core.Symbol.cljs$lang$ctorPrWriter = (function (this__4319__auto__,writer__4320__auto__,opt__4321__auto__){
return cljs.core._write(writer__4320__auto__,"cljs.core/Symbol");
});

cljs.core.__GT_Symbol = (function __GT_Symbol(ns,name,str,_hash,_meta){
return (new cljs.core.Symbol(ns,name,str,_hash,_meta));
});

cljs.core.symbol = (function() {
var symbol = null;
var symbol__1 = (function (name){
if((name instanceof cljs.core.Symbol)){
return name;
} else {
return symbol.cljs$core$IFn$_invoke$arity$2(null,name);
}
});
var symbol__2 = (function (ns,name){
var sym_str = ((!((ns == null)))?[cljs.core.str(ns),cljs.core.str("/"),cljs.core.str(name)].join(''):name);
return (new cljs.core.Symbol(ns,name,sym_str,null,null));
});
symbol = function(ns,name){
switch(arguments.length){
case 1:
return symbol__1.call(this,ns);
case 2:
return symbol__2.call(this,ns,name);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
symbol.cljs$core$IFn$_invoke$arity$1 = symbol__1;
symbol.cljs$core$IFn$_invoke$arity$2 = symbol__2;
return symbol;
})()
;

/**
* @constructor
*/
cljs.core.Var = (function (val,sym,_meta){
this.val = val;
this.sym = sym;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 163840;
})
cljs.core.Var.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__._meta;
});

cljs.core.Var.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.val;
});

cljs.core.Var.cljs$lang$type = true;

cljs.core.Var.cljs$lang$ctorStr = "cljs.core/Var";

cljs.core.Var.cljs$lang$ctorPrWriter = (function (this__4319__auto__,writer__4320__auto__,opt__4321__auto__){
return cljs.core._write(writer__4320__auto__,"cljs.core/Var");
});

cljs.core.__GT_Var = (function __GT_Var(val,sym,_meta){
return (new cljs.core.Var(val,sym,_meta));
});



cljs.core.iterable_QMARK_ = (function iterable_QMARK_(x){
var G__5759 = x;
if(G__5759){
var bit__4413__auto__ = null;
if(cljs.core.truth_((function (){var or__3732__auto__ = bit__4413__auto__;
if(cljs.core.truth_(or__3732__auto__)){
return or__3732__auto__;
} else {
return G__5759.cljs$core$IIterable$;
}
})())){
return true;
} else {
if((!G__5759.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable,G__5759);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable,G__5759);
}
});
cljs.core.clone = (function clone(value){
return cljs.core._clone(value);
});
cljs.core.cloneable_QMARK_ = (function cloneable_QMARK_(value){
var G__5761 = value;
if(G__5761){
var bit__4413__auto__ = (G__5761.cljs$lang$protocol_mask$partition1$ & (8192));
if((bit__4413__auto__) || (G__5761.cljs$core$ICloneable$)){
return true;
} else {
if((!G__5761.cljs$lang$protocol_mask$partition1$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable,G__5761);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable,G__5761);
}
});
/**
* Returns a seq on the collection. If the collection is
* empty, returns nil.  (seq nil) returns nil. seq also works on
* Strings.
*/
cljs.core.seq = (function seq(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__5763 = coll;
if(G__5763){
var bit__4406__auto__ = (G__5763.cljs$lang$protocol_mask$partition0$ & (8388608));
if((bit__4406__auto__) || (G__5763.cljs$core$ISeqable$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeqable$_seq$arity$1(null);
} else {
if(coll instanceof Array){
if((coll.length === (0))){
return null;
} else {
return (new cljs.core.IndexedSeq(coll,(0)));
}
} else {
if(typeof coll === 'string'){
if((coll.length === (0))){
return null;
} else {
return (new cljs.core.IndexedSeq(coll,(0)));
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,coll)){
return cljs.core._seq(coll);
} else {
throw (new Error([cljs.core.str(coll),cljs.core.str(" is not ISeqable")].join('')));

}
}
}
}
}
});
/**
* Returns the first item in the collection. Calls seq on its
* argument. If coll is nil, returns nil.
*/
cljs.core.first = (function first(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__5765 = coll;
if(G__5765){
var bit__4406__auto__ = (G__5765.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__4406__auto__) || (G__5765.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeq$_first$arity$1(null);
} else {
var s = cljs.core.seq(coll);
if((s == null)){
return null;
} else {
return cljs.core._first(s);
}
}
}
});
/**
* Returns a possibly empty seq of the items after the first. Calls seq on its
* argument.
*/
cljs.core.rest = (function rest(coll){
if(!((coll == null))){
if((function (){var G__5767 = coll;
if(G__5767){
var bit__4406__auto__ = (G__5767.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__4406__auto__) || (G__5767.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeq$_rest$arity$1(null);
} else {
var s = cljs.core.seq(coll);
if(s){
return cljs.core._rest(s);
} else {
return cljs.core.List.EMPTY;
}
}
} else {
return cljs.core.List.EMPTY;
}
});
/**
* Returns a seq of the items after the first. Calls seq on its
* argument.  If there are no more items, returns nil
*/
cljs.core.next = (function next(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__5769 = coll;
if(G__5769){
var bit__4406__auto__ = (G__5769.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__4406__auto__) || (G__5769.cljs$core$INext$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$INext$_next$arity$1(null);
} else {
return cljs.core.seq(cljs.core.rest(coll));
}
}
});
/**
* Equality. Returns true if x equals y, false if not. Compares
* numbers and collections in a type-independent manner.  Clojure's immutable data
* structures define -equiv (and thus =) as a value, not an identity,
* comparison.
* @param {...*} var_args
*/
cljs.core._EQ_ = (function() {
var _EQ_ = null;
var _EQ___1 = (function (x){
return true;
});
var _EQ___2 = (function (x,y){
if((x == null)){
return (y == null);
} else {
return ((x === y)) || (cljs.core._equiv(x,y));
}
});
var _EQ___3 = (function() { 
var G__5774__delegate = function (x,y,more){
while(true){
if(_EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
if(cljs.core.next(more)){
var G__5775 = y;
var G__5776 = cljs.core.first(more);
var G__5777 = cljs.core.next(more);
x = G__5775;
y = G__5776;
more = G__5777;
continue;
} else {
return _EQ_.cljs$core$IFn$_invoke$arity$2(y,cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__5774 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__5778__i = 0, G__5778__a = new Array(arguments.length -  2);
while (G__5778__i < G__5778__a.length) {G__5778__a[G__5778__i] = arguments[G__5778__i + 2]; ++G__5778__i;}
  more = new cljs.core.IndexedSeq(G__5778__a,0);
} 
return G__5774__delegate.call(this,x,y,more);};
G__5774.cljs$lang$maxFixedArity = 2;
G__5774.cljs$lang$applyTo = (function (arglist__5779){
var x = cljs.core.first(arglist__5779);
arglist__5779 = cljs.core.next(arglist__5779);
var y = cljs.core.first(arglist__5779);
var more = cljs.core.rest(arglist__5779);
return G__5774__delegate(x,y,more);
});
G__5774.cljs$core$IFn$_invoke$arity$variadic = G__5774__delegate;
return G__5774;
})()
;
_EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _EQ___1.call(this,x);
case 2:
return _EQ___2.call(this,x,y);
default:
var G__5780 = null;
if (arguments.length > 2) {
var G__5781__i = 0, G__5781__a = new Array(arguments.length -  2);
while (G__5781__i < G__5781__a.length) {G__5781__a[G__5781__i] = arguments[G__5781__i + 2]; ++G__5781__i;}
G__5780 = new cljs.core.IndexedSeq(G__5781__a,0);
}
return _EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__5780);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_EQ_.cljs$lang$maxFixedArity = 2;
_EQ_.cljs$lang$applyTo = _EQ___3.cljs$lang$applyTo;
_EQ_.cljs$core$IFn$_invoke$arity$1 = _EQ___1;
_EQ_.cljs$core$IFn$_invoke$arity$2 = _EQ___2;
_EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _EQ_;
})()
;

/**
* @constructor
*/
cljs.core.ES6Iterator = (function (s){
this.s = s;
})
cljs.core.ES6Iterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var x = cljs.core.first(self__.s);
self__.s = cljs.core.next(self__.s);

return {"done": false, "value": x};
} else {
return {"done": true, "value": null};
}
});

cljs.core.ES6Iterator.cljs$lang$type = true;

cljs.core.ES6Iterator.cljs$lang$ctorStr = "cljs.core/ES6Iterator";

cljs.core.ES6Iterator.cljs$lang$ctorPrWriter = (function (this__4319__auto__,writer__4320__auto__,opt__4321__auto__){
return cljs.core._write(writer__4320__auto__,"cljs.core/ES6Iterator");
});

cljs.core.__GT_ES6Iterator = (function __GT_ES6Iterator(s){
return (new cljs.core.ES6Iterator(s));
});

cljs.core.es6_iterator = (function es6_iterator(coll){
return (new cljs.core.ES6Iterator(cljs.core.seq(coll)));
});

/**
* @constructor
*/
cljs.core.ES6IteratorSeq = (function (value,iter,_rest){
this.value = value;
this.iter = iter;
this._rest = _rest;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 8388672;
})
cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.value;
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if((self__._rest == null)){
self__._rest = (function (){var G__5782 = self__.iter;
return (cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1(G__5782) : cljs.core.es6_iterator_seq.call(null,G__5782));
})();
} else {
}

return self__._rest;
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.ES6IteratorSeq.cljs$lang$type = true;

cljs.core.ES6IteratorSeq.cljs$lang$ctorStr = "cljs.core/ES6IteratorSeq";

cljs.core.ES6IteratorSeq.cljs$lang$ctorPrWriter = (function (this__4319__auto__,writer__4320__auto__,opt__4321__auto__){
return cljs.core._write(writer__4320__auto__,"cljs.core/ES6IteratorSeq");
});

cljs.core.__GT_ES6IteratorSeq = (function __GT_ES6IteratorSeq(value,iter,_rest){
return (new cljs.core.ES6IteratorSeq(value,iter,_rest));
});

cljs.core.es6_iterator_seq = (function es6_iterator_seq(iter){
var v = iter.next();
if(cljs.core.truth_(v.done)){
return cljs.core.List.EMPTY;
} else {
return (new cljs.core.ES6IteratorSeq(v.value,iter,null));
}
});
/**
* Mix final collection hash for ordered or unordered collections.
* hash-basis is the combined collection hash, count is the number
* of elements included in the basis. Note this is the hash code
* consistent with =, different from .hashCode.
* See http://clojure.org/data_structures#hash for full algorithms.
*/
cljs.core.mix_collection_hash = (function mix_collection_hash(hash_basis,count){
var h1 = cljs.core.m3_seed;
var k1 = cljs.core.m3_mix_K1(hash_basis);
var h1__$1 = cljs.core.m3_mix_H1(h1,k1);
return cljs.core.m3_fmix(h1__$1,count);
});
/**
* Returns the hash code, consistent with =, for an external ordered
* collection implementing Iterable.
* See http://clojure.org/data_structures#hash for full algorithms.
*/
cljs.core.hash_ordered_coll = (function hash_ordered_coll(coll){
var n = (0);
var hash_code = (1);
var coll__$1 = cljs.core.seq(coll);
while(true){
if(!((coll__$1 == null))){
var G__5783 = (n + (1));
var G__5784 = ((cljs.core.imul((31),hash_code) + cljs.core.hash(cljs.core.first(coll__$1))) | (0));
var G__5785 = cljs.core.next(coll__$1);
n = G__5783;
hash_code = G__5784;
coll__$1 = G__5785;
continue;
} else {
return cljs.core.mix_collection_hash(hash_code,n);
}
break;
}
});
cljs.core.empty_ordered_hash = cljs.core.mix_collection_hash((1),(0));
/**
* Returns the hash code, consistent with =, for an external unordered
* collection implementing Iterable. For maps, the iterator should
* return map entries whose hash is computed as
* (hash-ordered-coll [k v]).
* See http://clojure.org/data_structures#hash for full algorithms.
*/
cljs.core.hash_unordered_coll = (function hash_unordered_coll(coll){
var n = (0);
var hash_code = (0);
var coll__$1 = cljs.core.seq(coll);
while(true){
if(!((coll__$1 == null))){
var G__5786 = (n + (1));
var G__5787 = ((hash_code + cljs.core.hash(cljs.core.first(coll__$1))) | (0));
var G__5788 = cljs.core.next(coll__$1);
n = G__5786;
hash_code = G__5787;
coll__$1 = G__5788;
continue;
} else {
return cljs.core.mix_collection_hash(hash_code,n);
}
break;
}
});
cljs.core.empty_unordered_hash = cljs.core.mix_collection_hash((0),(0));


(cljs.core.ICounted["null"] = true);

(cljs.core._count["null"] = (function (_){
return (0);
}));
Date.prototype.cljs$core$IEquiv$ = true;

Date.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var o__$1 = this;
return ((other instanceof Date)) && ((o__$1.toString() === other.toString()));
});
(cljs.core.IEquiv["number"] = true);

(cljs.core._equiv["number"] = (function (x,o){
return (x === o);
}));
(cljs.core.IMeta["function"] = true);

(cljs.core._meta["function"] = (function (_){
return null;
}));

(cljs.core.Fn["function"] = true);
(cljs.core.IHash["_"] = true);

(cljs.core._hash["_"] = (function (o){
var G__5789 = o;
return goog.getUid(G__5789);
}));
/**
* Returns a number one greater than num.
*/
cljs.core.inc = (function inc(x){
return (x + (1));
});

/**
* @constructor
*/
cljs.core.Reduced = (function (val){
this.val = val;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32768;
})
cljs.core.Reduced.prototype.cljs$core$IDeref$_deref$arity$1 = (function (o){
var self__ = this;
var o__$1 = this;
return self__.val;
});

cljs.core.Reduced.cljs$lang$type = true;

cljs.core.Reduced.cljs$lang$ctorStr = "cljs.core/Reduced";

cljs.core.Reduced.cljs$lang$ctorPrWriter = (function (this__4319__auto__,writer__4320__auto__,opt__4321__auto__){
return cljs.core._write(writer__4320__auto__,"cljs.core/Reduced");
});

cljs.core.__GT_Reduced = (function __GT_Reduced(val){
return (new cljs.core.Reduced(val));
});

/**
* Wraps x in a way such that a reduce will terminate with the value x
*/
cljs.core.reduced = (function reduced(x){
return (new cljs.core.Reduced(x));
});
/**
* Returns true if x is the result of a call to reduced
*/
cljs.core.reduced_QMARK_ = (function reduced_QMARK_(r){
return (r instanceof cljs.core.Reduced);
});
/**
* If x is already reduced?, returns it, else returns (reduced x)
*/
cljs.core.ensure_reduced = (function ensure_reduced(x){
if(cljs.core.reduced_QMARK_(x)){
return x;
} else {
return cljs.core.reduced(x);
}
});
/**
* If x is reduced?, returns (deref x), else returns x
*/
cljs.core.unreduced = (function unreduced(x){
if(cljs.core.reduced_QMARK_(x)){
var G__5791 = x;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__5791) : cljs.core.deref.call(null,G__5791));
} else {
return x;
}
});
cljs.core.deref = (function deref(o){
return cljs.core._deref(o);
});
/**
* Accepts any collection which satisfies the ICount and IIndexed protocols and
* reduces them without incurring seq initialization
*/
cljs.core.ci_reduce = (function() {
var ci_reduce = null;
var ci_reduce__2 = (function (cicoll,f){
var cnt = cljs.core._count(cicoll);
if((cnt === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var val = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,(0));
var n = (1);
while(true){
if((n < cnt)){
var nval = (function (){var G__5798 = val;
var G__5799 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__5798,G__5799) : f.call(null,G__5798,G__5799));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__5804 = nval;
var G__5805 = (n + (1));
val = G__5804;
n = G__5805;
continue;
}
} else {
return val;
}
break;
}
}
});
var ci_reduce__3 = (function (cicoll,f,val){
var cnt = cljs.core._count(cicoll);
var val__$1 = val;
var n = (0);
while(true){
if((n < cnt)){
var nval = (function (){var G__5800 = val__$1;
var G__5801 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__5800,G__5801) : f.call(null,G__5800,G__5801));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__5806 = nval;
var G__5807 = (n + (1));
val__$1 = G__5806;
n = G__5807;
continue;
}
} else {
return val__$1;
}
break;
}
});
var ci_reduce__4 = (function (cicoll,f,val,idx){
var cnt = cljs.core._count(cicoll);
var val__$1 = val;
var n = idx;
while(true){
if((n < cnt)){
var nval = (function (){var G__5802 = val__$1;
var G__5803 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__5802,G__5803) : f.call(null,G__5802,G__5803));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__5808 = nval;
var G__5809 = (n + (1));
val__$1 = G__5808;
n = G__5809;
continue;
}
} else {
return val__$1;
}
break;
}
});
ci_reduce = function(cicoll,f,val,idx){
switch(arguments.length){
case 2:
return ci_reduce__2.call(this,cicoll,f);
case 3:
return ci_reduce__3.call(this,cicoll,f,val);
case 4:
return ci_reduce__4.call(this,cicoll,f,val,idx);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ci_reduce.cljs$core$IFn$_invoke$arity$2 = ci_reduce__2;
ci_reduce.cljs$core$IFn$_invoke$arity$3 = ci_reduce__3;
ci_reduce.cljs$core$IFn$_invoke$arity$4 = ci_reduce__4;
return ci_reduce;
})()
;
cljs.core.array_reduce = (function() {
var array_reduce = null;
var array_reduce__2 = (function (arr,f){
var cnt = arr.length;
if((arr.length === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var val = (arr[(0)]);
var n = (1);
while(true){
if((n < cnt)){
var nval = (function (){var G__5816 = val;
var G__5817 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__5816,G__5817) : f.call(null,G__5816,G__5817));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__5822 = nval;
var G__5823 = (n + (1));
val = G__5822;
n = G__5823;
continue;
}
} else {
return val;
}
break;
}
}
});
var array_reduce__3 = (function (arr,f,val){
var cnt = arr.length;
var val__$1 = val;
var n = (0);
while(true){
if((n < cnt)){
var nval = (function (){var G__5818 = val__$1;
var G__5819 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__5818,G__5819) : f.call(null,G__5818,G__5819));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__5824 = nval;
var G__5825 = (n + (1));
val__$1 = G__5824;
n = G__5825;
continue;
}
} else {
return val__$1;
}
break;
}
});
var array_reduce__4 = (function (arr,f,val,idx){
var cnt = arr.length;
var val__$1 = val;
var n = idx;
while(true){
if((n < cnt)){
var nval = (function (){var G__5820 = val__$1;
var G__5821 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__5820,G__5821) : f.call(null,G__5820,G__5821));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__5826 = nval;
var G__5827 = (n + (1));
val__$1 = G__5826;
n = G__5827;
continue;
}
} else {
return val__$1;
}
break;
}
});
array_reduce = function(arr,f,val,idx){
switch(arguments.length){
case 2:
return array_reduce__2.call(this,arr,f);
case 3:
return array_reduce__3.call(this,arr,f,val);
case 4:
return array_reduce__4.call(this,arr,f,val,idx);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
array_reduce.cljs$core$IFn$_invoke$arity$2 = array_reduce__2;
array_reduce.cljs$core$IFn$_invoke$arity$3 = array_reduce__3;
array_reduce.cljs$core$IFn$_invoke$arity$4 = array_reduce__4;
return array_reduce;
})()
;



/**
* Returns true if coll implements count in constant time
*/
cljs.core.counted_QMARK_ = (function counted_QMARK_(x){
var G__5829 = x;
if(G__5829){
var bit__4413__auto__ = (G__5829.cljs$lang$protocol_mask$partition0$ & (2));
if((bit__4413__auto__) || (G__5829.cljs$core$ICounted$)){
return true;
} else {
if((!G__5829.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,G__5829);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,G__5829);
}
});
/**
* Returns true if coll implements nth in constant time
*/
cljs.core.indexed_QMARK_ = (function indexed_QMARK_(x){
var G__5831 = x;
if(G__5831){
var bit__4413__auto__ = (G__5831.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__4413__auto__) || (G__5831.cljs$core$IIndexed$)){
return true;
} else {
if((!G__5831.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,G__5831);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,G__5831);
}
});

/**
* @constructor
*/
cljs.core.IndexedSeqIterator = (function (arr,i){
this.arr = arr;
this.i = i;
})
cljs.core.IndexedSeqIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.arr.length);
});

cljs.core.IndexedSeqIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = (self__.arr[self__.i]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.IndexedSeqIterator.cljs$lang$type = true;

cljs.core.IndexedSeqIterator.cljs$lang$ctorStr = "cljs.core/IndexedSeqIterator";

cljs.core.IndexedSeqIterator.cljs$lang$ctorPrWriter = (function (this__4319__auto__,writer__4320__auto__,opt__4321__auto__){
return cljs.core._write(writer__4320__auto__,"cljs.core/IndexedSeqIterator");
});

cljs.core.__GT_IndexedSeqIterator = (function __GT_IndexedSeqIterator(arr,i){
return (new cljs.core.IndexedSeqIterator(arr,i));
});


/**
* @constructor
*/
cljs.core.IndexedSeq = (function (arr,i){
this.arr = arr;
this.i = i;
this.cljs$lang$protocol_mask$partition0$ = 166199550;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.IndexedSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.IndexedSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
var i__$1 = (n + self__.i);
if((i__$1 < self__.arr.length)){
return (self__.arr[i__$1]);
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
var i__$1 = (n + self__.i);
if((i__$1 < self__.arr.length)){
return (self__.arr[i__$1]);
} else {
return not_found;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IIterable$ = true;

cljs.core.IndexedSeq.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.IndexedSeqIterator(self__.arr,self__.i));
});

cljs.core.IndexedSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.IndexedSeq(self__.arr,self__.i));
});

cljs.core.IndexedSeq.prototype.cljs$core$INext$_next$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(((self__.i + (1)) < self__.arr.length)){
return (new cljs.core.IndexedSeq(self__.arr,(self__.i + (1))));
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.arr.length - self__.i);
});

cljs.core.IndexedSeq.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var c = cljs.core._count(coll__$1);
if((c > (0))){
return (new cljs.core.RSeq(coll__$1,(c - (1)),null));
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.IndexedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
var G__5832 = coll__$1;
var G__5833 = other;
return (cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(G__5832,G__5833) : cljs.core.equiv_sequential.call(null,G__5832,G__5833));
});

cljs.core.IndexedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,(self__.arr[self__.i]),(self__.i + (1)));
});

cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,start,self__.i);
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.arr[self__.i]);
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(((self__.i + (1)) < self__.arr.length)){
return (new cljs.core.IndexedSeq(self__.arr,(self__.i + (1))));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.IndexedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__5834 = o;
var G__5835 = coll__$1;
return (cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(G__5834,G__5835) : cljs.core.cons.call(null,G__5834,G__5835));
});

cljs.core.IndexedSeq.cljs$lang$type = true;

cljs.core.IndexedSeq.cljs$lang$ctorStr = "cljs.core/IndexedSeq";

cljs.core.IndexedSeq.cljs$lang$ctorPrWriter = (function (this__4319__auto__,writer__4320__auto__,opt__4321__auto__){
return cljs.core._write(writer__4320__auto__,"cljs.core/IndexedSeq");
});

cljs.core.__GT_IndexedSeq = (function __GT_IndexedSeq(arr,i){
return (new cljs.core.IndexedSeq(arr,i));
});

(cljs.core.IndexedSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4710__auto__ = this;
return cljs.core.es6_iterator(this__4710__auto__);
}));
cljs.core.prim_seq = (function() {
var prim_seq = null;
var prim_seq__1 = (function (prim){
return prim_seq.cljs$core$IFn$_invoke$arity$2(prim,(0));
});
var prim_seq__2 = (function (prim,i){
if((i < prim.length)){
return (new cljs.core.IndexedSeq(prim,i));
} else {
return null;
}
});
prim_seq = function(prim,i){
switch(arguments.length){
case 1:
return prim_seq__1.call(this,prim);
case 2:
return prim_seq__2.call(this,prim,i);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
prim_seq.cljs$core$IFn$_invoke$arity$1 = prim_seq__1;
prim_seq.cljs$core$IFn$_invoke$arity$2 = prim_seq__2;
return prim_seq;
})()
;
cljs.core.array_seq = (function() {
var array_seq = null;
var array_seq__1 = (function (array){
return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array,(0));
});
var array_seq__2 = (function (array,i){
return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array,i);
});
array_seq = function(array,i){
switch(arguments.length){
case 1:
return array_seq__1.call(this,array);
case 2:
return array_seq__2.call(this,array,i);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
array_seq.cljs$core$IFn$_invoke$arity$1 = array_seq__1;
array_seq.cljs$core$IFn$_invoke$arity$2 = array_seq__2;
return array_seq;
})()
;


/**
* @constructor
*/
cljs.core.RSeq = (function (ci,i,meta){
this.ci = ci;
this.i = i;
this.meta = meta;
this.cljs$lang$protocol_mask$partition0$ = 32374990;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.RSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.RSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.RSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.RSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.RSeq(self__.ci,self__.i,self__.meta));
});

cljs.core.RSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i > (0))){
return (new cljs.core.RSeq(self__.ci,(self__.i - (1)),null));
} else {
return null;
}
});

cljs.core.RSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.i + (1));
});

cljs.core.RSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.RSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
var G__5838 = coll__$1;
var G__5839 = other;
return (cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(G__5838,G__5839) : cljs.core.equiv_sequential.call(null,G__5838,G__5839));
});

cljs.core.RSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var G__5840 = cljs.core.List.EMPTY;
var G__5841 = self__.meta;
return (cljs.core.with_meta.cljs$core$IFn$_invoke$arity$2 ? cljs.core.with_meta.cljs$core$IFn$_invoke$arity$2(G__5840,G__5841) : cljs.core.with_meta.call(null,G__5840,G__5841));
});

cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (col,f){
var self__ = this;
var col__$1 = this;
var G__5842 = f;
var G__5843 = col__$1;
return (cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(G__5842,G__5843) : cljs.core.seq_reduce.call(null,G__5842,G__5843));
});

cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (col,f,start){
var self__ = this;
var col__$1 = this;
var G__5844 = f;
var G__5845 = start;
var G__5846 = col__$1;
return (cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(G__5844,G__5845,G__5846) : cljs.core.seq_reduce.call(null,G__5844,G__5845,G__5846));
});

cljs.core.RSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.ci,self__.i);
});

cljs.core.RSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i > (0))){
return (new cljs.core.RSeq(self__.ci,(self__.i - (1)),null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.RSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.RSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.RSeq(self__.ci,self__.i,new_meta));
});

cljs.core.RSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__5847 = o;
var G__5848 = coll__$1;
return (cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(G__5847,G__5848) : cljs.core.cons.call(null,G__5847,G__5848));
});

cljs.core.RSeq.cljs$lang$type = true;

cljs.core.RSeq.cljs$lang$ctorStr = "cljs.core/RSeq";

cljs.core.RSeq.cljs$lang$ctorPrWriter = (function (this__4319__auto__,writer__4320__auto__,opt__4321__auto__){
return cljs.core._write(writer__4320__auto__,"cljs.core/RSeq");
});

cljs.core.__GT_RSeq = (function __GT_RSeq(ci,i,meta){
return (new cljs.core.RSeq(ci,i,meta));
});

(cljs.core.RSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4710__auto__ = this;
return cljs.core.es6_iterator(this__4710__auto__);
}));
/**
* Same as (first (next x))
*/
cljs.core.second = (function second(coll){
return cljs.core.first(cljs.core.next(coll));
});
/**
* Same as (first (first x))
*/
cljs.core.ffirst = (function ffirst(coll){
return cljs.core.first(cljs.core.first(coll));
});
/**
* Same as (next (first x))
*/
cljs.core.nfirst = (function nfirst(coll){
return cljs.core.next(cljs.core.first(coll));
});
/**
* Same as (first (next x))
*/
cljs.core.fnext = (function fnext(coll){
return cljs.core.first(cljs.core.next(coll));
});
/**
* Same as (next (next x))
*/
cljs.core.nnext = (function nnext(coll){
return cljs.core.next(cljs.core.next(coll));
});
/**
* Return the last item in coll, in linear time
*/
cljs.core.last = (function last(s){
while(true){
var sn = cljs.core.next(s);
if(!((sn == null))){
var G__5849 = sn;
s = G__5849;
continue;
} else {
return cljs.core.first(s);
}
break;
}
});
(cljs.core.IEquiv["_"] = true);

(cljs.core._equiv["_"] = (function (x,o){
return (x === o);
}));
/**
* conj[oin]. Returns a new collection with the xs
* 'added'. (conj nil item) returns (item).  The 'addition' may
* happen at different 'places' depending on the concrete type.
* @param {...*} var_args
*/
cljs.core.conj = (function() {
var conj = null;
var conj__0 = (function (){
return cljs.core.PersistentVector.EMPTY;
});
var conj__1 = (function (coll){
return coll;
});
var conj__2 = (function (coll,x){
if(!((coll == null))){
return cljs.core._conj(coll,x);
} else {
return cljs.core._conj(cljs.core.List.EMPTY,x);
}
});
var conj__3 = (function() { 
var G__5854__delegate = function (coll,x,xs){
while(true){
if(cljs.core.truth_(xs)){
var G__5855 = conj.cljs$core$IFn$_invoke$arity$2(coll,x);
var G__5856 = cljs.core.first(xs);
var G__5857 = cljs.core.next(xs);
coll = G__5855;
x = G__5856;
xs = G__5857;
continue;
} else {
return conj.cljs$core$IFn$_invoke$arity$2(coll,x);
}
break;
}
};
var G__5854 = function (coll,x,var_args){
var xs = null;
if (arguments.length > 2) {
var G__5858__i = 0, G__5858__a = new Array(arguments.length -  2);
while (G__5858__i < G__5858__a.length) {G__5858__a[G__5858__i] = arguments[G__5858__i + 2]; ++G__5858__i;}
  xs = new cljs.core.IndexedSeq(G__5858__a,0);
} 
return G__5854__delegate.call(this,coll,x,xs);};
G__5854.cljs$lang$maxFixedArity = 2;
G__5854.cljs$lang$applyTo = (function (arglist__5859){
var coll = cljs.core.first(arglist__5859);
arglist__5859 = cljs.core.next(arglist__5859);
var x = cljs.core.first(arglist__5859);
var xs = cljs.core.rest(arglist__5859);
return G__5854__delegate(coll,x,xs);
});
G__5854.cljs$core$IFn$_invoke$arity$variadic = G__5854__delegate;
return G__5854;
})()
;
conj = function(coll,x,var_args){
var xs = var_args;
switch(arguments.length){
case 0:
return conj__0.call(this);
case 1:
return conj__1.call(this,coll);
case 2:
return conj__2.call(this,coll,x);
default:
var G__5860 = null;
if (arguments.length > 2) {
var G__5861__i = 0, G__5861__a = new Array(arguments.length -  2);
while (G__5861__i < G__5861__a.length) {G__5861__a[G__5861__i] = arguments[G__5861__i + 2]; ++G__5861__i;}
G__5860 = new cljs.core.IndexedSeq(G__5861__a,0);
}
return conj__3.cljs$core$IFn$_invoke$arity$variadic(coll,x, G__5860);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
conj.cljs$lang$maxFixedArity = 2;
conj.cljs$lang$applyTo = conj__3.cljs$lang$applyTo;
conj.cljs$core$IFn$_invoke$arity$0 = conj__0;
conj.cljs$core$IFn$_invoke$arity$1 = conj__1;
conj.cljs$core$IFn$_invoke$arity$2 = conj__2;
conj.cljs$core$IFn$_invoke$arity$variadic = conj__3.cljs$core$IFn$_invoke$arity$variadic;
return conj;
})()
;
/**
* Returns an empty collection of the same category as coll, or nil
*/
cljs.core.empty = (function empty(coll){
if((coll == null)){
return null;
} else {
return cljs.core._empty(coll);
}
});
cljs.core.accumulating_seq_count = (function accumulating_seq_count(coll){
var s = cljs.core.seq(coll);
var acc = (0);
while(true){
if(cljs.core.counted_QMARK_(s)){
return (acc + cljs.core._count(s));
} else {
var G__5862 = cljs.core.next(s);
var G__5863 = (acc + (1));
s = G__5862;
acc = G__5863;
continue;
}
break;
}
});
/**
* Returns the number of items in the collection. (count nil) returns
* 0.  Also works on strings, arrays, and Maps
*/
cljs.core.count = (function count(coll){
if(!((coll == null))){
if((function (){var G__5865 = coll;
if(G__5865){
var bit__4406__auto__ = (G__5865.cljs$lang$protocol_mask$partition0$ & (2));
if((bit__4406__auto__) || (G__5865.cljs$core$ICounted$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ICounted$_count$arity$1(null);
} else {
if(coll instanceof Array){
return coll.length;
} else {
if(typeof coll === 'string'){
return coll.length;
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,coll)){
return cljs.core._count(coll);
} else {
return cljs.core.accumulating_seq_count(coll);

}
}
}
}
} else {
return (0);
}
});
cljs.core.linear_traversal_nth = (function() {
var linear_traversal_nth = null;
var linear_traversal_nth__2 = (function (coll,n){
while(true){
if((coll == null)){
throw (new Error("Index out of bounds"));
} else {
if((n === (0))){
if(cljs.core.seq(coll)){
return cljs.core.first(coll);
} else {
throw (new Error("Index out of bounds"));
}
} else {
if(cljs.core.indexed_QMARK_(coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if(cljs.core.seq(coll)){
var G__5866 = cljs.core.next(coll);
var G__5867 = (n - (1));
coll = G__5866;
n = G__5867;
continue;
} else {
throw (new Error("Index out of bounds"));

}
}
}
}
break;
}
});
var linear_traversal_nth__3 = (function (coll,n,not_found){
while(true){
if((coll == null)){
return not_found;
} else {
if((n === (0))){
if(cljs.core.seq(coll)){
return cljs.core.first(coll);
} else {
return not_found;
}
} else {
if(cljs.core.indexed_QMARK_(coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll,n,not_found);
} else {
if(cljs.core.seq(coll)){
var G__5868 = cljs.core.next(coll);
var G__5869 = (n - (1));
var G__5870 = not_found;
coll = G__5868;
n = G__5869;
not_found = G__5870;
continue;
} else {
return not_found;

}
}
}
}
break;
}
});
linear_traversal_nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return linear_traversal_nth__2.call(this,coll,n);
case 3:
return linear_traversal_nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
linear_traversal_nth.cljs$core$IFn$_invoke$arity$2 = linear_traversal_nth__2;
linear_traversal_nth.cljs$core$IFn$_invoke$arity$3 = linear_traversal_nth__3;
return linear_traversal_nth;
})()
;
/**
* Returns the value at the index. get returns nil if index out of
* bounds, nth throws an exception unless not-found is supplied.  nth
* also works for strings, arrays, regex Matchers and Lists, and,
* in O(n) time, for sequences.
*/
cljs.core.nth = (function() {
var nth = null;
var nth__2 = (function (coll,n){
if(!(typeof n === 'number')){
throw (new Error("index argument to nth must be a number"));
} else {
if((coll == null)){
return coll;
} else {
if((function (){var G__5875 = coll;
if(G__5875){
var bit__4406__auto__ = (G__5875.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__4406__auto__) || (G__5875.cljs$core$IIndexed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$2(null,n);
} else {
if(coll instanceof Array){
if((n < coll.length)){
return (coll[n]);
} else {
return null;
}
} else {
if(typeof coll === 'string'){
if((n < coll.length)){
return (coll[n]);
} else {
return null;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if((function (){var G__5876 = coll;
if(G__5876){
var bit__4413__auto__ = (G__5876.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__4413__auto__) || (G__5876.cljs$core$ISeq$)){
return true;
} else {
if((!G__5876.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__5876);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__5876);
}
})()){
return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
throw (new Error([cljs.core.str("nth not supported on this type "),cljs.core.str(cljs.core.type__GT_str(cljs.core.type(coll)))].join('')));

}
}
}
}
}
}
}
});
var nth__3 = (function (coll,n,not_found){
if(!(typeof n === 'number')){
throw (new Error("index argument to nth must be a number."));
} else {
if((coll == null)){
return not_found;
} else {
if((function (){var G__5877 = coll;
if(G__5877){
var bit__4406__auto__ = (G__5877.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__4406__auto__) || (G__5877.cljs$core$IIndexed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$3(null,n,not_found);
} else {
if(coll instanceof Array){
if((n < coll.length)){
return (coll[n]);
} else {
return not_found;
}
} else {
if(typeof coll === 'string'){
if((n < coll.length)){
return (coll[n]);
} else {
return not_found;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if((function (){var G__5878 = coll;
if(G__5878){
var bit__4413__auto__ = (G__5878.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__4413__auto__) || (G__5878.cljs$core$ISeq$)){
return true;
} else {
if((!G__5878.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__5878);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__5878);
}
})()){
return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$3(coll,n,not_found);
} else {
throw (new Error([cljs.core.str("nth not supported on this type "),cljs.core.str(cljs.core.type__GT_str(cljs.core.type(coll)))].join('')));

}
}
}
}
}
}
}
});
nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return nth__2.call(this,coll,n);
case 3:
return nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
nth.cljs$core$IFn$_invoke$arity$2 = nth__2;
nth.cljs$core$IFn$_invoke$arity$3 = nth__3;
return nth;
})()
;
/**
* Returns the nth rest of coll, coll when n is 0.
*/
cljs.core.nthrest = (function nthrest(coll,n){
var n__$1 = n;
var xs = coll;
while(true){
if(((n__$1 > (0))) && (cljs.core.seq(xs))){
var G__5879 = (n__$1 - (1));
var G__5880 = cljs.core.rest(xs);
n__$1 = G__5879;
xs = G__5880;
continue;
} else {
return xs;
}
break;
}
});
/**
* Returns the value mapped to key, not-found or nil if key not present.
*/
cljs.core.get = (function() {
var get = null;
var get__2 = (function (o,k){
if((o == null)){
return null;
} else {
if((function (){var G__5883 = o;
if(G__5883){
var bit__4406__auto__ = (G__5883.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__4406__auto__) || (G__5883.cljs$core$ILookup$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$2(null,k);
} else {
if(o instanceof Array){
if((k < o.length)){
return (o[k]);
} else {
return null;
}
} else {
if(typeof o === 'string'){
if((k < o.length)){
return (o[k]);
} else {
return null;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,o)){
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$2(o,k);
} else {
return null;

}
}
}
}
}
});
var get__3 = (function (o,k,not_found){
if(!((o == null))){
if((function (){var G__5884 = o;
if(G__5884){
var bit__4406__auto__ = (G__5884.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__4406__auto__) || (G__5884.cljs$core$ILookup$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
} else {
if(o instanceof Array){
if((k < o.length)){
return (o[k]);
} else {
return not_found;
}
} else {
if(typeof o === 'string'){
if((k < o.length)){
return (o[k]);
} else {
return not_found;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,o)){
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(o,k,not_found);
} else {
return not_found;

}
}
}
}
} else {
return not_found;
}
});
get = function(o,k,not_found){
switch(arguments.length){
case 2:
return get__2.call(this,o,k);
case 3:
return get__3.call(this,o,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
get.cljs$core$IFn$_invoke$arity$2 = get__2;
get.cljs$core$IFn$_invoke$arity$3 = get__3;
return get;
})()
;
/**
* assoc[iate]. When applied to a map, returns a new map of the
* same (hashed/sorted) type, that contains the mapping of key(s) to
* val(s). When applied to a vector, returns a new vector that
* contains val at index.
* @param {...*} var_args
*/
cljs.core.assoc = (function() {
var assoc = null;
var assoc__3 = (function (coll,k,v){
if(!((coll == null))){
return cljs.core._assoc(coll,k,v);
} else {
return cljs.core.PersistentHashMap.fromArrays([k],[v]);
}
});
var assoc__4 = (function() { 
var G__5888__delegate = function (coll,k,v,kvs){
while(true){
var ret = assoc.cljs$core$IFn$_invoke$arity$3(coll,k,v);
if(cljs.core.truth_(kvs)){
var G__5889 = ret;
var G__5890 = cljs.core.first(kvs);
var G__5891 = cljs.core.second(kvs);
var G__5892 = cljs.core.nnext(kvs);
coll = G__5889;
k = G__5890;
v = G__5891;
kvs = G__5892;
continue;
} else {
return ret;
}
break;
}
};
var G__5888 = function (coll,k,v,var_args){
var kvs = null;
if (arguments.length > 3) {
var G__5893__i = 0, G__5893__a = new Array(arguments.length -  3);
while (G__5893__i < G__5893__a.length) {G__5893__a[G__5893__i] = arguments[G__5893__i + 3]; ++G__5893__i;}
  kvs = new cljs.core.IndexedSeq(G__5893__a,0);
} 
return G__5888__delegate.call(this,coll,k,v,kvs);};
G__5888.cljs$lang$maxFixedArity = 3;
G__5888.cljs$lang$applyTo = (function (arglist__5894){
var coll = cljs.core.first(arglist__5894);
arglist__5894 = cljs.core.next(arglist__5894);
var k = cljs.core.first(arglist__5894);
arglist__5894 = cljs.core.next(arglist__5894);
var v = cljs.core.first(arglist__5894);
var kvs = cljs.core.rest(arglist__5894);
return G__5888__delegate(coll,k,v,kvs);
});
G__5888.cljs$core$IFn$_invoke$arity$variadic = G__5888__delegate;
return G__5888;
})()
;
assoc = function(coll,k,v,var_args){
var kvs = var_args;
switch(arguments.length){
case 3:
return assoc__3.call(this,coll,k,v);
default:
var G__5895 = null;
if (arguments.length > 3) {
var G__5896__i = 0, G__5896__a = new Array(arguments.length -  3);
while (G__5896__i < G__5896__a.length) {G__5896__a[G__5896__i] = arguments[G__5896__i + 3]; ++G__5896__i;}
G__5895 = new cljs.core.IndexedSeq(G__5896__a,0);
}
return assoc__4.cljs$core$IFn$_invoke$arity$variadic(coll,k,v, G__5895);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
assoc.cljs$lang$maxFixedArity = 3;
assoc.cljs$lang$applyTo = assoc__4.cljs$lang$applyTo;
assoc.cljs$core$IFn$_invoke$arity$3 = assoc__3;
assoc.cljs$core$IFn$_invoke$arity$variadic = assoc__4.cljs$core$IFn$_invoke$arity$variadic;
return assoc;
})()
;
/**
* dissoc[iate]. Returns a new map of the same (hashed/sorted) type,
* that does not contain a mapping for key(s).
* @param {...*} var_args
*/
cljs.core.dissoc = (function() {
var dissoc = null;
var dissoc__1 = (function (coll){
return coll;
});
var dissoc__2 = (function (coll,k){
if((coll == null)){
return null;
} else {
return cljs.core._dissoc(coll,k);
}
});
var dissoc__3 = (function() { 
var G__5899__delegate = function (coll,k,ks){
while(true){
if((coll == null)){
return null;
} else {
var ret = dissoc.cljs$core$IFn$_invoke$arity$2(coll,k);
if(cljs.core.truth_(ks)){
var G__5900 = ret;
var G__5901 = cljs.core.first(ks);
var G__5902 = cljs.core.next(ks);
coll = G__5900;
k = G__5901;
ks = G__5902;
continue;
} else {
return ret;
}
}
break;
}
};
var G__5899 = function (coll,k,var_args){
var ks = null;
if (arguments.length > 2) {
var G__5903__i = 0, G__5903__a = new Array(arguments.length -  2);
while (G__5903__i < G__5903__a.length) {G__5903__a[G__5903__i] = arguments[G__5903__i + 2]; ++G__5903__i;}
  ks = new cljs.core.IndexedSeq(G__5903__a,0);
} 
return G__5899__delegate.call(this,coll,k,ks);};
G__5899.cljs$lang$maxFixedArity = 2;
G__5899.cljs$lang$applyTo = (function (arglist__5904){
var coll = cljs.core.first(arglist__5904);
arglist__5904 = cljs.core.next(arglist__5904);
var k = cljs.core.first(arglist__5904);
var ks = cljs.core.rest(arglist__5904);
return G__5899__delegate(coll,k,ks);
});
G__5899.cljs$core$IFn$_invoke$arity$variadic = G__5899__delegate;
return G__5899;
})()
;
dissoc = function(coll,k,var_args){
var ks = var_args;
switch(arguments.length){
case 1:
return dissoc__1.call(this,coll);
case 2:
return dissoc__2.call(this,coll,k);
default:
var G__5905 = null;
if (arguments.length > 2) {
var G__5906__i = 0, G__5906__a = new Array(arguments.length -  2);
while (G__5906__i < G__5906__a.length) {G__5906__a[G__5906__i] = arguments[G__5906__i + 2]; ++G__5906__i;}
G__5905 = new cljs.core.IndexedSeq(G__5906__a,0);
}
return dissoc__3.cljs$core$IFn$_invoke$arity$variadic(coll,k, G__5905);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dissoc.cljs$lang$maxFixedArity = 2;
dissoc.cljs$lang$applyTo = dissoc__3.cljs$lang$applyTo;
dissoc.cljs$core$IFn$_invoke$arity$1 = dissoc__1;
dissoc.cljs$core$IFn$_invoke$arity$2 = dissoc__2;
dissoc.cljs$core$IFn$_invoke$arity$variadic = dissoc__3.cljs$core$IFn$_invoke$arity$variadic;
return dissoc;
})()
;
cljs.core.fn_QMARK_ = (function fn_QMARK_(f){
var or__3732__auto__ = (function (){var G__5911 = f;
return goog.isFunction(G__5911);
})();
if(cljs.core.truth_(or__3732__auto__)){
return or__3732__auto__;
} else {
var G__5912 = f;
if(G__5912){
var bit__4413__auto__ = null;
if(cljs.core.truth_((function (){var or__3732__auto____$1 = bit__4413__auto__;
if(cljs.core.truth_(or__3732__auto____$1)){
return or__3732__auto____$1;
} else {
return G__5912.cljs$core$Fn$;
}
})())){
return true;
} else {
if((!G__5912.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.Fn,G__5912);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.Fn,G__5912);
}
}
});

/**
* @constructor
*/
cljs.core.MetaFn = (function (afn,meta){
this.afn = afn;
this.meta = meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 393217;
})
cljs.core.MetaFn.prototype.call = (function() {
var G__6378 = null;
var G__6378__1 = (function (self__){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null));
});
var G__6378__2 = (function (self__,a){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__5914 = a;
return (self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(G__5914) : self__.afn.call(null,G__5914));
});
var G__6378__3 = (function (self__,a,b){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__5915 = a;
var G__5916 = b;
return (self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(G__5915,G__5916) : self__.afn.call(null,G__5915,G__5916));
});
var G__6378__4 = (function (self__,a,b,c){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__5917 = a;
var G__5918 = b;
var G__5919 = c;
return (self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(G__5917,G__5918,G__5919) : self__.afn.call(null,G__5917,G__5918,G__5919));
});
var G__6378__5 = (function (self__,a,b,c,d){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__5920 = a;
var G__5921 = b;
var G__5922 = c;
var G__5923 = d;
return (self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(G__5920,G__5921,G__5922,G__5923) : self__.afn.call(null,G__5920,G__5921,G__5922,G__5923));
});
var G__6378__6 = (function (self__,a,b,c,d,e){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__5924 = a;
var G__5925 = b;
var G__5926 = c;
var G__5927 = d;
var G__5928 = e;
return (self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(G__5924,G__5925,G__5926,G__5927,G__5928) : self__.afn.call(null,G__5924,G__5925,G__5926,G__5927,G__5928));
});
var G__6378__7 = (function (self__,a,b,c,d,e,f){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__5929 = a;
var G__5930 = b;
var G__5931 = c;
var G__5932 = d;
var G__5933 = e;
var G__5934 = f;
return (self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(G__5929,G__5930,G__5931,G__5932,G__5933,G__5934) : self__.afn.call(null,G__5929,G__5930,G__5931,G__5932,G__5933,G__5934));
});
var G__6378__8 = (function (self__,a,b,c,d,e,f,g){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__5935 = a;
var G__5936 = b;
var G__5937 = c;
var G__5938 = d;
var G__5939 = e;
var G__5940 = f;
var G__5941 = g;
return (self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(G__5935,G__5936,G__5937,G__5938,G__5939,G__5940,G__5941) : self__.afn.call(null,G__5935,G__5936,G__5937,G__5938,G__5939,G__5940,G__5941));
});
var G__6378__9 = (function (self__,a,b,c,d,e,f,g,h){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__5942 = a;
var G__5943 = b;
var G__5944 = c;
var G__5945 = d;
var G__5946 = e;
var G__5947 = f;
var G__5948 = g;
var G__5949 = h;
return (self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(G__5942,G__5943,G__5944,G__5945,G__5946,G__5947,G__5948,G__5949) : self__.afn.call(null,G__5942,G__5943,G__5944,G__5945,G__5946,G__5947,G__5948,G__5949));
});
var G__6378__10 = (function (self__,a,b,c,d,e,f,g,h,i){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__5950 = a;
var G__5951 = b;
var G__5952 = c;
var G__5953 = d;
var G__5954 = e;
var G__5955 = f;
var G__5956 = g;
var G__5957 = h;
var G__5958 = i;
return (self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(G__5950,G__5951,G__5952,G__5953,G__5954,G__5955,G__5956,G__5957,G__5958) : self__.afn.call(null,G__5950,G__5951,G__5952,G__5953,G__5954,G__5955,G__5956,G__5957,G__5958));
});
var G__6378__11 = (function (self__,a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__5959 = a;
var G__5960 = b;
var G__5961 = c;
var G__5962 = d;
var G__5963 = e;
var G__5964 = f;
var G__5965 = g;
var G__5966 = h;
var G__5967 = i;
var G__5968 = j;
return (self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(G__5959,G__5960,G__5961,G__5962,G__5963,G__5964,G__5965,G__5966,G__5967,G__5968) : self__.afn.call(null,G__5959,G__5960,G__5961,G__5962,G__5963,G__5964,G__5965,G__5966,G__5967,G__5968));
});
var G__6378__12 = (function (self__,a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__5969 = a;
var G__5970 = b;
var G__5971 = c;
var G__5972 = d;
var G__5973 = e;
var G__5974 = f;
var G__5975 = g;
var G__5976 = h;
var G__5977 = i;
var G__5978 = j;
var G__5979 = k;
return (self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(G__5969,G__5970,G__5971,G__5972,G__5973,G__5974,G__5975,G__5976,G__5977,G__5978,G__5979) : self__.afn.call(null,G__5969,G__5970,G__5971,G__5972,G__5973,G__5974,G__5975,G__5976,G__5977,G__5978,G__5979));
});
var G__6378__13 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__5980 = a;
var G__5981 = b;
var G__5982 = c;
var G__5983 = d;
var G__5984 = e;
var G__5985 = f;
var G__5986 = g;
var G__5987 = h;
var G__5988 = i;
var G__5989 = j;
var G__5990 = k;
var G__5991 = l;
return (self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(G__5980,G__5981,G__5982,G__5983,G__5984,G__5985,G__5986,G__5987,G__5988,G__5989,G__5990,G__5991) : self__.afn.call(null,G__5980,G__5981,G__5982,G__5983,G__5984,G__5985,G__5986,G__5987,G__5988,G__5989,G__5990,G__5991));
});
var G__6378__14 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__5992 = a;
var G__5993 = b;
var G__5994 = c;
var G__5995 = d;
var G__5996 = e;
var G__5997 = f;
var G__5998 = g;
var G__5999 = h;
var G__6000 = i;
var G__6001 = j;
var G__6002 = k;
var G__6003 = l;
var G__6004 = m;
return (self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(G__5992,G__5993,G__5994,G__5995,G__5996,G__5997,G__5998,G__5999,G__6000,G__6001,G__6002,G__6003,G__6004) : self__.afn.call(null,G__5992,G__5993,G__5994,G__5995,G__5996,G__5997,G__5998,G__5999,G__6000,G__6001,G__6002,G__6003,G__6004));
});
var G__6378__15 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__6005 = a;
var G__6006 = b;
var G__6007 = c;
var G__6008 = d;
var G__6009 = e;
var G__6010 = f;
var G__6011 = g;
var G__6012 = h;
var G__6013 = i;
var G__6014 = j;
var G__6015 = k;
var G__6016 = l;
var G__6017 = m;
var G__6018 = n;
return (self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(G__6005,G__6006,G__6007,G__6008,G__6009,G__6010,G__6011,G__6012,G__6013,G__6014,G__6015,G__6016,G__6017,G__6018) : self__.afn.call(null,G__6005,G__6006,G__6007,G__6008,G__6009,G__6010,G__6011,G__6012,G__6013,G__6014,G__6015,G__6016,G__6017,G__6018));
});
var G__6378__16 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__6019 = a;
var G__6020 = b;
var G__6021 = c;
var G__6022 = d;
var G__6023 = e;
var G__6024 = f;
var G__6025 = g;
var G__6026 = h;
var G__6027 = i;
var G__6028 = j;
var G__6029 = k;
var G__6030 = l;
var G__6031 = m;
var G__6032 = n;
var G__6033 = o;
return (self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(G__6019,G__6020,G__6021,G__6022,G__6023,G__6024,G__6025,G__6026,G__6027,G__6028,G__6029,G__6030,G__6031,G__6032,G__6033) : self__.afn.call(null,G__6019,G__6020,G__6021,G__6022,G__6023,G__6024,G__6025,G__6026,G__6027,G__6028,G__6029,G__6030,G__6031,G__6032,G__6033));
});
var G__6378__17 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__6034 = a;
var G__6035 = b;
var G__6036 = c;
var G__6037 = d;
var G__6038 = e;
var G__6039 = f;
var G__6040 = g;
var G__6041 = h;
var G__6042 = i;
var G__6043 = j;
var G__6044 = k;
var G__6045 = l;
var G__6046 = m;
var G__6047 = n;
var G__6048 = o;
var G__6049 = p;
return (self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(G__6034,G__6035,G__6036,G__6037,G__6038,G__6039,G__6040,G__6041,G__6042,G__6043,G__6044,G__6045,G__6046,G__6047,G__6048,G__6049) : self__.afn.call(null,G__6034,G__6035,G__6036,G__6037,G__6038,G__6039,G__6040,G__6041,G__6042,G__6043,G__6044,G__6045,G__6046,G__6047,G__6048,G__6049));
});
var G__6378__18 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__6050 = a;
var G__6051 = b;
var G__6052 = c;
var G__6053 = d;
var G__6054 = e;
var G__6055 = f;
var G__6056 = g;
var G__6057 = h;
var G__6058 = i;
var G__6059 = j;
var G__6060 = k;
var G__6061 = l;
var G__6062 = m;
var G__6063 = n;
var G__6064 = o;
var G__6065 = p;
var G__6066 = q;
return (self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(G__6050,G__6051,G__6052,G__6053,G__6054,G__6055,G__6056,G__6057,G__6058,G__6059,G__6060,G__6061,G__6062,G__6063,G__6064,G__6065,G__6066) : self__.afn.call(null,G__6050,G__6051,G__6052,G__6053,G__6054,G__6055,G__6056,G__6057,G__6058,G__6059,G__6060,G__6061,G__6062,G__6063,G__6064,G__6065,G__6066));
});
var G__6378__19 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__6067 = a;
var G__6068 = b;
var G__6069 = c;
var G__6070 = d;
var G__6071 = e;
var G__6072 = f;
var G__6073 = g;
var G__6074 = h;
var G__6075 = i;
var G__6076 = j;
var G__6077 = k;
var G__6078 = l;
var G__6079 = m;
var G__6080 = n;
var G__6081 = o;
var G__6082 = p;
var G__6083 = q;
var G__6084 = r;
return (self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(G__6067,G__6068,G__6069,G__6070,G__6071,G__6072,G__6073,G__6074,G__6075,G__6076,G__6077,G__6078,G__6079,G__6080,G__6081,G__6082,G__6083,G__6084) : self__.afn.call(null,G__6067,G__6068,G__6069,G__6070,G__6071,G__6072,G__6073,G__6074,G__6075,G__6076,G__6077,G__6078,G__6079,G__6080,G__6081,G__6082,G__6083,G__6084));
});
var G__6378__20 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__6085 = a;
var G__6086 = b;
var G__6087 = c;
var G__6088 = d;
var G__6089 = e;
var G__6090 = f;
var G__6091 = g;
var G__6092 = h;
var G__6093 = i;
var G__6094 = j;
var G__6095 = k;
var G__6096 = l;
var G__6097 = m;
var G__6098 = n;
var G__6099 = o;
var G__6100 = p;
var G__6101 = q;
var G__6102 = r;
var G__6103 = s;
return (self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(G__6085,G__6086,G__6087,G__6088,G__6089,G__6090,G__6091,G__6092,G__6093,G__6094,G__6095,G__6096,G__6097,G__6098,G__6099,G__6100,G__6101,G__6102,G__6103) : self__.afn.call(null,G__6085,G__6086,G__6087,G__6088,G__6089,G__6090,G__6091,G__6092,G__6093,G__6094,G__6095,G__6096,G__6097,G__6098,G__6099,G__6100,G__6101,G__6102,G__6103));
});
var G__6378__21 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__6104 = a;
var G__6105 = b;
var G__6106 = c;
var G__6107 = d;
var G__6108 = e;
var G__6109 = f;
var G__6110 = g;
var G__6111 = h;
var G__6112 = i;
var G__6113 = j;
var G__6114 = k;
var G__6115 = l;
var G__6116 = m;
var G__6117 = n;
var G__6118 = o;
var G__6119 = p;
var G__6120 = q;
var G__6121 = r;
var G__6122 = s;
var G__6123 = t;
return (self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(G__6104,G__6105,G__6106,G__6107,G__6108,G__6109,G__6110,G__6111,G__6112,G__6113,G__6114,G__6115,G__6116,G__6117,G__6118,G__6119,G__6120,G__6121,G__6122,G__6123) : self__.afn.call(null,G__6104,G__6105,G__6106,G__6107,G__6108,G__6109,G__6110,G__6111,G__6112,G__6113,G__6114,G__6115,G__6116,G__6117,G__6118,G__6119,G__6120,G__6121,G__6122,G__6123));
});
var G__6378__22 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__6124 = self__.afn;
var G__6125 = a;
var G__6126 = b;
var G__6127 = c;
var G__6128 = d;
var G__6129 = e;
var G__6130 = f;
var G__6131 = g;
var G__6132 = h;
var G__6133 = i;
var G__6134 = j;
var G__6135 = k;
var G__6136 = l;
var G__6137 = m;
var G__6138 = n;
var G__6139 = o;
var G__6140 = p;
var G__6141 = q;
var G__6142 = r;
var G__6143 = s;
var G__6144 = t;
var G__6145 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__6124,G__6125,G__6126,G__6127,G__6128,G__6129,G__6130,G__6131,G__6132,G__6133,G__6134,G__6135,G__6136,G__6137,G__6138,G__6139,G__6140,G__6141,G__6142,G__6143,G__6144,G__6145) : cljs.core.apply.call(null,G__6124,G__6125,G__6126,G__6127,G__6128,G__6129,G__6130,G__6131,G__6132,G__6133,G__6134,G__6135,G__6136,G__6137,G__6138,G__6139,G__6140,G__6141,G__6142,G__6143,G__6144,G__6145));
});
G__6378 = function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return G__6378__1.call(this,self__);
case 2:
return G__6378__2.call(this,self__,a);
case 3:
return G__6378__3.call(this,self__,a,b);
case 4:
return G__6378__4.call(this,self__,a,b,c);
case 5:
return G__6378__5.call(this,self__,a,b,c,d);
case 6:
return G__6378__6.call(this,self__,a,b,c,d,e);
case 7:
return G__6378__7.call(this,self__,a,b,c,d,e,f);
case 8:
return G__6378__8.call(this,self__,a,b,c,d,e,f,g);
case 9:
return G__6378__9.call(this,self__,a,b,c,d,e,f,g,h);
case 10:
return G__6378__10.call(this,self__,a,b,c,d,e,f,g,h,i);
case 11:
return G__6378__11.call(this,self__,a,b,c,d,e,f,g,h,i,j);
case 12:
return G__6378__12.call(this,self__,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return G__6378__13.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return G__6378__14.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return G__6378__15.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return G__6378__16.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return G__6378__17.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return G__6378__18.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return G__6378__19.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return G__6378__20.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return G__6378__21.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return G__6378__22.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__6378.cljs$core$IFn$_invoke$arity$1 = G__6378__1;
G__6378.cljs$core$IFn$_invoke$arity$2 = G__6378__2;
G__6378.cljs$core$IFn$_invoke$arity$3 = G__6378__3;
G__6378.cljs$core$IFn$_invoke$arity$4 = G__6378__4;
G__6378.cljs$core$IFn$_invoke$arity$5 = G__6378__5;
G__6378.cljs$core$IFn$_invoke$arity$6 = G__6378__6;
G__6378.cljs$core$IFn$_invoke$arity$7 = G__6378__7;
G__6378.cljs$core$IFn$_invoke$arity$8 = G__6378__8;
G__6378.cljs$core$IFn$_invoke$arity$9 = G__6378__9;
G__6378.cljs$core$IFn$_invoke$arity$10 = G__6378__10;
G__6378.cljs$core$IFn$_invoke$arity$11 = G__6378__11;
G__6378.cljs$core$IFn$_invoke$arity$12 = G__6378__12;
G__6378.cljs$core$IFn$_invoke$arity$13 = G__6378__13;
G__6378.cljs$core$IFn$_invoke$arity$14 = G__6378__14;
G__6378.cljs$core$IFn$_invoke$arity$15 = G__6378__15;
G__6378.cljs$core$IFn$_invoke$arity$16 = G__6378__16;
G__6378.cljs$core$IFn$_invoke$arity$17 = G__6378__17;
G__6378.cljs$core$IFn$_invoke$arity$18 = G__6378__18;
G__6378.cljs$core$IFn$_invoke$arity$19 = G__6378__19;
G__6378.cljs$core$IFn$_invoke$arity$20 = G__6378__20;
G__6378.cljs$core$IFn$_invoke$arity$21 = G__6378__21;
G__6378.cljs$core$IFn$_invoke$arity$22 = G__6378__22;
return G__6378;
})()
;

cljs.core.MetaFn.prototype.apply = (function (self__,args5913){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args5913)));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){
var self__ = this;
var _ = this;
return (self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$1 = (function (a){
var self__ = this;
var _ = this;
var G__6146 = a;
return (self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(G__6146) : self__.afn.call(null,G__6146));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$2 = (function (a,b){
var self__ = this;
var _ = this;
var G__6147 = a;
var G__6148 = b;
return (self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(G__6147,G__6148) : self__.afn.call(null,G__6147,G__6148));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$3 = (function (a,b,c){
var self__ = this;
var _ = this;
var G__6149 = a;
var G__6150 = b;
var G__6151 = c;
return (self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(G__6149,G__6150,G__6151) : self__.afn.call(null,G__6149,G__6150,G__6151));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$4 = (function (a,b,c,d){
var self__ = this;
var _ = this;
var G__6152 = a;
var G__6153 = b;
var G__6154 = c;
var G__6155 = d;
return (self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(G__6152,G__6153,G__6154,G__6155) : self__.afn.call(null,G__6152,G__6153,G__6154,G__6155));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$5 = (function (a,b,c,d,e){
var self__ = this;
var _ = this;
var G__6156 = a;
var G__6157 = b;
var G__6158 = c;
var G__6159 = d;
var G__6160 = e;
return (self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(G__6156,G__6157,G__6158,G__6159,G__6160) : self__.afn.call(null,G__6156,G__6157,G__6158,G__6159,G__6160));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$6 = (function (a,b,c,d,e,f){
var self__ = this;
var _ = this;
var G__6161 = a;
var G__6162 = b;
var G__6163 = c;
var G__6164 = d;
var G__6165 = e;
var G__6166 = f;
return (self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(G__6161,G__6162,G__6163,G__6164,G__6165,G__6166) : self__.afn.call(null,G__6161,G__6162,G__6163,G__6164,G__6165,G__6166));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$7 = (function (a,b,c,d,e,f,g){
var self__ = this;
var _ = this;
var G__6167 = a;
var G__6168 = b;
var G__6169 = c;
var G__6170 = d;
var G__6171 = e;
var G__6172 = f;
var G__6173 = g;
return (self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(G__6167,G__6168,G__6169,G__6170,G__6171,G__6172,G__6173) : self__.afn.call(null,G__6167,G__6168,G__6169,G__6170,G__6171,G__6172,G__6173));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$8 = (function (a,b,c,d,e,f,g,h){
var self__ = this;
var _ = this;
var G__6174 = a;
var G__6175 = b;
var G__6176 = c;
var G__6177 = d;
var G__6178 = e;
var G__6179 = f;
var G__6180 = g;
var G__6181 = h;
return (self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(G__6174,G__6175,G__6176,G__6177,G__6178,G__6179,G__6180,G__6181) : self__.afn.call(null,G__6174,G__6175,G__6176,G__6177,G__6178,G__6179,G__6180,G__6181));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$9 = (function (a,b,c,d,e,f,g,h,i){
var self__ = this;
var _ = this;
var G__6182 = a;
var G__6183 = b;
var G__6184 = c;
var G__6185 = d;
var G__6186 = e;
var G__6187 = f;
var G__6188 = g;
var G__6189 = h;
var G__6190 = i;
return (self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(G__6182,G__6183,G__6184,G__6185,G__6186,G__6187,G__6188,G__6189,G__6190) : self__.afn.call(null,G__6182,G__6183,G__6184,G__6185,G__6186,G__6187,G__6188,G__6189,G__6190));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$10 = (function (a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var _ = this;
var G__6191 = a;
var G__6192 = b;
var G__6193 = c;
var G__6194 = d;
var G__6195 = e;
var G__6196 = f;
var G__6197 = g;
var G__6198 = h;
var G__6199 = i;
var G__6200 = j;
return (self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(G__6191,G__6192,G__6193,G__6194,G__6195,G__6196,G__6197,G__6198,G__6199,G__6200) : self__.afn.call(null,G__6191,G__6192,G__6193,G__6194,G__6195,G__6196,G__6197,G__6198,G__6199,G__6200));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$11 = (function (a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var _ = this;
var G__6201 = a;
var G__6202 = b;
var G__6203 = c;
var G__6204 = d;
var G__6205 = e;
var G__6206 = f;
var G__6207 = g;
var G__6208 = h;
var G__6209 = i;
var G__6210 = j;
var G__6211 = k;
return (self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(G__6201,G__6202,G__6203,G__6204,G__6205,G__6206,G__6207,G__6208,G__6209,G__6210,G__6211) : self__.afn.call(null,G__6201,G__6202,G__6203,G__6204,G__6205,G__6206,G__6207,G__6208,G__6209,G__6210,G__6211));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$12 = (function (a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var _ = this;
var G__6212 = a;
var G__6213 = b;
var G__6214 = c;
var G__6215 = d;
var G__6216 = e;
var G__6217 = f;
var G__6218 = g;
var G__6219 = h;
var G__6220 = i;
var G__6221 = j;
var G__6222 = k;
var G__6223 = l;
return (self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(G__6212,G__6213,G__6214,G__6215,G__6216,G__6217,G__6218,G__6219,G__6220,G__6221,G__6222,G__6223) : self__.afn.call(null,G__6212,G__6213,G__6214,G__6215,G__6216,G__6217,G__6218,G__6219,G__6220,G__6221,G__6222,G__6223));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$13 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var _ = this;
var G__6224 = a;
var G__6225 = b;
var G__6226 = c;
var G__6227 = d;
var G__6228 = e;
var G__6229 = f;
var G__6230 = g;
var G__6231 = h;
var G__6232 = i;
var G__6233 = j;
var G__6234 = k;
var G__6235 = l;
var G__6236 = m;
return (self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(G__6224,G__6225,G__6226,G__6227,G__6228,G__6229,G__6230,G__6231,G__6232,G__6233,G__6234,G__6235,G__6236) : self__.afn.call(null,G__6224,G__6225,G__6226,G__6227,G__6228,G__6229,G__6230,G__6231,G__6232,G__6233,G__6234,G__6235,G__6236));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$14 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var _ = this;
var G__6237 = a;
var G__6238 = b;
var G__6239 = c;
var G__6240 = d;
var G__6241 = e;
var G__6242 = f;
var G__6243 = g;
var G__6244 = h;
var G__6245 = i;
var G__6246 = j;
var G__6247 = k;
var G__6248 = l;
var G__6249 = m;
var G__6250 = n;
return (self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(G__6237,G__6238,G__6239,G__6240,G__6241,G__6242,G__6243,G__6244,G__6245,G__6246,G__6247,G__6248,G__6249,G__6250) : self__.afn.call(null,G__6237,G__6238,G__6239,G__6240,G__6241,G__6242,G__6243,G__6244,G__6245,G__6246,G__6247,G__6248,G__6249,G__6250));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$15 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var _ = this;
var G__6251 = a;
var G__6252 = b;
var G__6253 = c;
var G__6254 = d;
var G__6255 = e;
var G__6256 = f;
var G__6257 = g;
var G__6258 = h;
var G__6259 = i;
var G__6260 = j;
var G__6261 = k;
var G__6262 = l;
var G__6263 = m;
var G__6264 = n;
var G__6265 = o;
return (self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(G__6251,G__6252,G__6253,G__6254,G__6255,G__6256,G__6257,G__6258,G__6259,G__6260,G__6261,G__6262,G__6263,G__6264,G__6265) : self__.afn.call(null,G__6251,G__6252,G__6253,G__6254,G__6255,G__6256,G__6257,G__6258,G__6259,G__6260,G__6261,G__6262,G__6263,G__6264,G__6265));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$16 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var _ = this;
var G__6266 = a;
var G__6267 = b;
var G__6268 = c;
var G__6269 = d;
var G__6270 = e;
var G__6271 = f;
var G__6272 = g;
var G__6273 = h;
var G__6274 = i;
var G__6275 = j;
var G__6276 = k;
var G__6277 = l;
var G__6278 = m;
var G__6279 = n;
var G__6280 = o;
var G__6281 = p;
return (self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(G__6266,G__6267,G__6268,G__6269,G__6270,G__6271,G__6272,G__6273,G__6274,G__6275,G__6276,G__6277,G__6278,G__6279,G__6280,G__6281) : self__.afn.call(null,G__6266,G__6267,G__6268,G__6269,G__6270,G__6271,G__6272,G__6273,G__6274,G__6275,G__6276,G__6277,G__6278,G__6279,G__6280,G__6281));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$17 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var _ = this;
var G__6282 = a;
var G__6283 = b;
var G__6284 = c;
var G__6285 = d;
var G__6286 = e;
var G__6287 = f;
var G__6288 = g;
var G__6289 = h;
var G__6290 = i;
var G__6291 = j;
var G__6292 = k;
var G__6293 = l;
var G__6294 = m;
var G__6295 = n;
var G__6296 = o;
var G__6297 = p;
var G__6298 = q;
return (self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(G__6282,G__6283,G__6284,G__6285,G__6286,G__6287,G__6288,G__6289,G__6290,G__6291,G__6292,G__6293,G__6294,G__6295,G__6296,G__6297,G__6298) : self__.afn.call(null,G__6282,G__6283,G__6284,G__6285,G__6286,G__6287,G__6288,G__6289,G__6290,G__6291,G__6292,G__6293,G__6294,G__6295,G__6296,G__6297,G__6298));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$18 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var _ = this;
var G__6299 = a;
var G__6300 = b;
var G__6301 = c;
var G__6302 = d;
var G__6303 = e;
var G__6304 = f;
var G__6305 = g;
var G__6306 = h;
var G__6307 = i;
var G__6308 = j;
var G__6309 = k;
var G__6310 = l;
var G__6311 = m;
var G__6312 = n;
var G__6313 = o;
var G__6314 = p;
var G__6315 = q;
var G__6316 = r;
return (self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(G__6299,G__6300,G__6301,G__6302,G__6303,G__6304,G__6305,G__6306,G__6307,G__6308,G__6309,G__6310,G__6311,G__6312,G__6313,G__6314,G__6315,G__6316) : self__.afn.call(null,G__6299,G__6300,G__6301,G__6302,G__6303,G__6304,G__6305,G__6306,G__6307,G__6308,G__6309,G__6310,G__6311,G__6312,G__6313,G__6314,G__6315,G__6316));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$19 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var _ = this;
var G__6317 = a;
var G__6318 = b;
var G__6319 = c;
var G__6320 = d;
var G__6321 = e;
var G__6322 = f;
var G__6323 = g;
var G__6324 = h;
var G__6325 = i;
var G__6326 = j;
var G__6327 = k;
var G__6328 = l;
var G__6329 = m;
var G__6330 = n;
var G__6331 = o;
var G__6332 = p;
var G__6333 = q;
var G__6334 = r;
var G__6335 = s;
return (self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(G__6317,G__6318,G__6319,G__6320,G__6321,G__6322,G__6323,G__6324,G__6325,G__6326,G__6327,G__6328,G__6329,G__6330,G__6331,G__6332,G__6333,G__6334,G__6335) : self__.afn.call(null,G__6317,G__6318,G__6319,G__6320,G__6321,G__6322,G__6323,G__6324,G__6325,G__6326,G__6327,G__6328,G__6329,G__6330,G__6331,G__6332,G__6333,G__6334,G__6335));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$20 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var _ = this;
var G__6336 = a;
var G__6337 = b;
var G__6338 = c;
var G__6339 = d;
var G__6340 = e;
var G__6341 = f;
var G__6342 = g;
var G__6343 = h;
var G__6344 = i;
var G__6345 = j;
var G__6346 = k;
var G__6347 = l;
var G__6348 = m;
var G__6349 = n;
var G__6350 = o;
var G__6351 = p;
var G__6352 = q;
var G__6353 = r;
var G__6354 = s;
var G__6355 = t;
return (self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(G__6336,G__6337,G__6338,G__6339,G__6340,G__6341,G__6342,G__6343,G__6344,G__6345,G__6346,G__6347,G__6348,G__6349,G__6350,G__6351,G__6352,G__6353,G__6354,G__6355) : self__.afn.call(null,G__6336,G__6337,G__6338,G__6339,G__6340,G__6341,G__6342,G__6343,G__6344,G__6345,G__6346,G__6347,G__6348,G__6349,G__6350,G__6351,G__6352,G__6353,G__6354,G__6355));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$21 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var _ = this;
var G__6356 = self__.afn;
var G__6357 = a;
var G__6358 = b;
var G__6359 = c;
var G__6360 = d;
var G__6361 = e;
var G__6362 = f;
var G__6363 = g;
var G__6364 = h;
var G__6365 = i;
var G__6366 = j;
var G__6367 = k;
var G__6368 = l;
var G__6369 = m;
var G__6370 = n;
var G__6371 = o;
var G__6372 = p;
var G__6373 = q;
var G__6374 = r;
var G__6375 = s;
var G__6376 = t;
var G__6377 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__6356,G__6357,G__6358,G__6359,G__6360,G__6361,G__6362,G__6363,G__6364,G__6365,G__6366,G__6367,G__6368,G__6369,G__6370,G__6371,G__6372,G__6373,G__6374,G__6375,G__6376,G__6377) : cljs.core.apply.call(null,G__6356,G__6357,G__6358,G__6359,G__6360,G__6361,G__6362,G__6363,G__6364,G__6365,G__6366,G__6367,G__6368,G__6369,G__6370,G__6371,G__6372,G__6373,G__6374,G__6375,G__6376,G__6377));
});

cljs.core.MetaFn.prototype.cljs$core$Fn$ = true;

cljs.core.MetaFn.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_,new_meta){
var self__ = this;
var ___$1 = this;
return (new cljs.core.MetaFn(self__.afn,new_meta));
});

cljs.core.MetaFn.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.meta;
});

cljs.core.MetaFn.cljs$lang$type = true;

cljs.core.MetaFn.cljs$lang$ctorStr = "cljs.core/MetaFn";

cljs.core.MetaFn.cljs$lang$ctorPrWriter = (function (this__4319__auto__,writer__4320__auto__,opt__4321__auto__){
return cljs.core._write(writer__4320__auto__,"cljs.core/MetaFn");
});

cljs.core.__GT_MetaFn = (function __GT_MetaFn(afn,meta){
return (new cljs.core.MetaFn(afn,meta));
});

/**
* Returns an object of the same type and value as obj, with
* map m as its metadata.
*/
cljs.core.with_meta = (function with_meta(o,meta){
if((cljs.core.fn_QMARK_(o)) && (!((function (){var G__6382 = o;
if(G__6382){
var bit__4413__auto__ = (G__6382.cljs$lang$protocol_mask$partition0$ & (262144));
if((bit__4413__auto__) || (G__6382.cljs$core$IWithMeta$)){
return true;
} else {
if((!G__6382.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IWithMeta,G__6382);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IWithMeta,G__6382);
}
})()))){
return (new cljs.core.MetaFn(o,meta));
} else {
if((o == null)){
return null;
} else {
return cljs.core._with_meta(o,meta);
}
}
});
/**
* Returns the metadata of obj, returns nil if there is no metadata.
*/
cljs.core.meta = (function meta(o){
if((function (){var and__3720__auto__ = !((o == null));
if(and__3720__auto__){
var G__6386 = o;
if(G__6386){
var bit__4413__auto__ = (G__6386.cljs$lang$protocol_mask$partition0$ & (131072));
if((bit__4413__auto__) || (G__6386.cljs$core$IMeta$)){
return true;
} else {
if((!G__6386.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__6386);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__6386);
}
} else {
return and__3720__auto__;
}
})()){
return cljs.core._meta(o);
} else {
return null;
}
});
/**
* For a list or queue, same as first, for a vector, same as, but much
* more efficient than, last. If the collection is empty, returns nil.
*/
cljs.core.peek = (function peek(coll){
if((coll == null)){
return null;
} else {
return cljs.core._peek(coll);
}
});
/**
* For a list or queue, returns a new list/queue without the first
* item, for a vector, returns a new vector without the last item.
* Note - not the same as next/butlast.
*/
cljs.core.pop = (function pop(coll){
if((coll == null)){
return null;
} else {
return cljs.core._pop(coll);
}
});
/**
* disj[oin]. Returns a new set of the same (hashed/sorted) type, that
* does not contain key(s).
* @param {...*} var_args
*/
cljs.core.disj = (function() {
var disj = null;
var disj__1 = (function (coll){
return coll;
});
var disj__2 = (function (coll,k){
if((coll == null)){
return null;
} else {
return cljs.core._disjoin(coll,k);
}
});
var disj__3 = (function() { 
var G__6389__delegate = function (coll,k,ks){
while(true){
if((coll == null)){
return null;
} else {
var ret = disj.cljs$core$IFn$_invoke$arity$2(coll,k);
if(cljs.core.truth_(ks)){
var G__6390 = ret;
var G__6391 = cljs.core.first(ks);
var G__6392 = cljs.core.next(ks);
coll = G__6390;
k = G__6391;
ks = G__6392;
continue;
} else {
return ret;
}
}
break;
}
};
var G__6389 = function (coll,k,var_args){
var ks = null;
if (arguments.length > 2) {
var G__6393__i = 0, G__6393__a = new Array(arguments.length -  2);
while (G__6393__i < G__6393__a.length) {G__6393__a[G__6393__i] = arguments[G__6393__i + 2]; ++G__6393__i;}
  ks = new cljs.core.IndexedSeq(G__6393__a,0);
} 
return G__6389__delegate.call(this,coll,k,ks);};
G__6389.cljs$lang$maxFixedArity = 2;
G__6389.cljs$lang$applyTo = (function (arglist__6394){
var coll = cljs.core.first(arglist__6394);
arglist__6394 = cljs.core.next(arglist__6394);
var k = cljs.core.first(arglist__6394);
var ks = cljs.core.rest(arglist__6394);
return G__6389__delegate(coll,k,ks);
});
G__6389.cljs$core$IFn$_invoke$arity$variadic = G__6389__delegate;
return G__6389;
})()
;
disj = function(coll,k,var_args){
var ks = var_args;
switch(arguments.length){
case 1:
return disj__1.call(this,coll);
case 2:
return disj__2.call(this,coll,k);
default:
var G__6395 = null;
if (arguments.length > 2) {
var G__6396__i = 0, G__6396__a = new Array(arguments.length -  2);
while (G__6396__i < G__6396__a.length) {G__6396__a[G__6396__i] = arguments[G__6396__i + 2]; ++G__6396__i;}
G__6395 = new cljs.core.IndexedSeq(G__6396__a,0);
}
return disj__3.cljs$core$IFn$_invoke$arity$variadic(coll,k, G__6395);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
disj.cljs$lang$maxFixedArity = 2;
disj.cljs$lang$applyTo = disj__3.cljs$lang$applyTo;
disj.cljs$core$IFn$_invoke$arity$1 = disj__1;
disj.cljs$core$IFn$_invoke$arity$2 = disj__2;
disj.cljs$core$IFn$_invoke$arity$variadic = disj__3.cljs$core$IFn$_invoke$arity$variadic;
return disj;
})()
;
/**
* Returns true if coll has no items - same as (not (seq coll)).
* Please use the idiom (seq x) rather than (not (empty? x))
*/
cljs.core.empty_QMARK_ = (function empty_QMARK_(coll){
return ((coll == null)) || (cljs.core.not(cljs.core.seq(coll)));
});
/**
* Returns true if x satisfies ICollection
*/
cljs.core.coll_QMARK_ = (function coll_QMARK_(x){
if((x == null)){
return false;
} else {
var G__6398 = x;
if(G__6398){
var bit__4413__auto__ = (G__6398.cljs$lang$protocol_mask$partition0$ & (8));
if((bit__4413__auto__) || (G__6398.cljs$core$ICollection$)){
return true;
} else {
if((!G__6398.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection,G__6398);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection,G__6398);
}
}
});
/**
* Returns true if x satisfies ISet
*/
cljs.core.set_QMARK_ = (function set_QMARK_(x){
if((x == null)){
return false;
} else {
var G__6400 = x;
if(G__6400){
var bit__4413__auto__ = (G__6400.cljs$lang$protocol_mask$partition0$ & (4096));
if((bit__4413__auto__) || (G__6400.cljs$core$ISet$)){
return true;
} else {
if((!G__6400.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISet,G__6400);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISet,G__6400);
}
}
});
/**
* Returns true if coll implements Associative
*/
cljs.core.associative_QMARK_ = (function associative_QMARK_(x){
var G__6402 = x;
if(G__6402){
var bit__4413__auto__ = (G__6402.cljs$lang$protocol_mask$partition0$ & (512));
if((bit__4413__auto__) || (G__6402.cljs$core$IAssociative$)){
return true;
} else {
if((!G__6402.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative,G__6402);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative,G__6402);
}
});
/**
* Returns true if coll satisfies ISequential
*/
cljs.core.sequential_QMARK_ = (function sequential_QMARK_(x){
var G__6404 = x;
if(G__6404){
var bit__4413__auto__ = (G__6404.cljs$lang$protocol_mask$partition0$ & (16777216));
if((bit__4413__auto__) || (G__6404.cljs$core$ISequential$)){
return true;
} else {
if((!G__6404.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential,G__6404);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential,G__6404);
}
});
/**
* Returns true if coll satisfies ISorted
*/
cljs.core.sorted_QMARK_ = (function sorted_QMARK_(x){
var G__6406 = x;
if(G__6406){
var bit__4413__auto__ = (G__6406.cljs$lang$protocol_mask$partition0$ & (268435456));
if((bit__4413__auto__) || (G__6406.cljs$core$ISorted$)){
return true;
} else {
if((!G__6406.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted,G__6406);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted,G__6406);
}
});
/**
* Returns true if coll satisfies IReduce
*/
cljs.core.reduceable_QMARK_ = (function reduceable_QMARK_(x){
var G__6408 = x;
if(G__6408){
var bit__4413__auto__ = (G__6408.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__4413__auto__) || (G__6408.cljs$core$IReduce$)){
return true;
} else {
if((!G__6408.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,G__6408);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,G__6408);
}
});
/**
* Return true if x satisfies IMap
*/
cljs.core.map_QMARK_ = (function map_QMARK_(x){
if((x == null)){
return false;
} else {
var G__6410 = x;
if(G__6410){
var bit__4413__auto__ = (G__6410.cljs$lang$protocol_mask$partition0$ & (1024));
if((bit__4413__auto__) || (G__6410.cljs$core$IMap$)){
return true;
} else {
if((!G__6410.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMap,G__6410);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMap,G__6410);
}
}
});
/**
* Return true if x satisfies IVector
*/
cljs.core.vector_QMARK_ = (function vector_QMARK_(x){
var G__6412 = x;
if(G__6412){
var bit__4413__auto__ = (G__6412.cljs$lang$protocol_mask$partition0$ & (16384));
if((bit__4413__auto__) || (G__6412.cljs$core$IVector$)){
return true;
} else {
if((!G__6412.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IVector,G__6412);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IVector,G__6412);
}
});

cljs.core.chunked_seq_QMARK_ = (function chunked_seq_QMARK_(x){
var G__6414 = x;
if(G__6414){
var bit__4406__auto__ = (G__6414.cljs$lang$protocol_mask$partition1$ & (512));
if((bit__4406__auto__) || (G__6414.cljs$core$IChunkedSeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
});
/**
* @param {...*} var_args
*/
cljs.core.js_obj = (function() {
var js_obj = null;
var js_obj__0 = (function (){
var obj6420 = {};
return obj6420;
});
var js_obj__1 = (function() { 
var G__6423__delegate = function (keyvals){
var G__6421 = goog.object.create;
var G__6422 = keyvals;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$2 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(G__6421,G__6422) : cljs.core.apply.call(null,G__6421,G__6422));
};
var G__6423 = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__6424__i = 0, G__6424__a = new Array(arguments.length -  0);
while (G__6424__i < G__6424__a.length) {G__6424__a[G__6424__i] = arguments[G__6424__i + 0]; ++G__6424__i;}
  keyvals = new cljs.core.IndexedSeq(G__6424__a,0);
} 
return G__6423__delegate.call(this,keyvals);};
G__6423.cljs$lang$maxFixedArity = 0;
G__6423.cljs$lang$applyTo = (function (arglist__6425){
var keyvals = cljs.core.seq(arglist__6425);
return G__6423__delegate(keyvals);
});
G__6423.cljs$core$IFn$_invoke$arity$variadic = G__6423__delegate;
return G__6423;
})()
;
js_obj = function(var_args){
var keyvals = var_args;
switch(arguments.length){
case 0:
return js_obj__0.call(this);
default:
var G__6426 = null;
if (arguments.length > 0) {
var G__6427__i = 0, G__6427__a = new Array(arguments.length -  0);
while (G__6427__i < G__6427__a.length) {G__6427__a[G__6427__i] = arguments[G__6427__i + 0]; ++G__6427__i;}
G__6426 = new cljs.core.IndexedSeq(G__6427__a,0);
}
return js_obj__1.cljs$core$IFn$_invoke$arity$variadic(G__6426);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
js_obj.cljs$lang$maxFixedArity = 0;
js_obj.cljs$lang$applyTo = js_obj__1.cljs$lang$applyTo;
js_obj.cljs$core$IFn$_invoke$arity$0 = js_obj__0;
js_obj.cljs$core$IFn$_invoke$arity$variadic = js_obj__1.cljs$core$IFn$_invoke$arity$variadic;
return js_obj;
})()
;
cljs.core.js_keys = (function js_keys(obj){
var keys = [];
var G__6430_6432 = obj;
var G__6431_6433 = ((function (G__6430_6432,keys){
return (function (val,key,obj__$1){
return keys.push(key);
});})(G__6430_6432,keys))
;
goog.object.forEach(G__6430_6432,G__6431_6433);

return keys;
});
cljs.core.js_delete = (function js_delete(obj,key){
return delete obj[key];
});
cljs.core.array_copy = (function array_copy(from,i,to,j,len){
var i__$1 = i;
var j__$1 = j;
var len__$1 = len;
while(true){
if((len__$1 === (0))){
return to;
} else {
(to[j__$1] = (from[i__$1]));

var G__6434 = (i__$1 + (1));
var G__6435 = (j__$1 + (1));
var G__6436 = (len__$1 - (1));
i__$1 = G__6434;
j__$1 = G__6435;
len__$1 = G__6436;
continue;
}
break;
}
});
cljs.core.array_copy_downward = (function array_copy_downward(from,i,to,j,len){
var i__$1 = (i + (len - (1)));
var j__$1 = (j + (len - (1)));
var len__$1 = len;
while(true){
if((len__$1 === (0))){
return to;
} else {
(to[j__$1] = (from[i__$1]));

var G__6437 = (i__$1 - (1));
var G__6438 = (j__$1 - (1));
var G__6439 = (len__$1 - (1));
i__$1 = G__6437;
j__$1 = G__6438;
len__$1 = G__6439;
continue;
}
break;
}
});
cljs.core.lookup_sentinel = (function (){var obj6441 = {};
return obj6441;
})();
/**
* Returns true if x is the value false, false otherwise.
*/
cljs.core.false_QMARK_ = (function false_QMARK_(x){
return x === false;
});
/**
* Returns true if x is the value true, false otherwise.
*/
cljs.core.true_QMARK_ = (function true_QMARK_(x){
return x === true;
});
cljs.core.undefined_QMARK_ = (function undefined_QMARK_(x){
return (void 0 === x);
});
/**
* Return true if s satisfies ISeq
*/
cljs.core.seq_QMARK_ = (function seq_QMARK_(s){
if((s == null)){
return false;
} else {
var G__6443 = s;
if(G__6443){
var bit__4413__auto__ = (G__6443.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__4413__auto__) || (G__6443.cljs$core$ISeq$)){
return true;
} else {
if((!G__6443.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__6443);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__6443);
}
}
});
/**
* Return true if s satisfies ISeqable
*/
cljs.core.seqable_QMARK_ = (function seqable_QMARK_(s){
var G__6445 = s;
if(G__6445){
var bit__4413__auto__ = (G__6445.cljs$lang$protocol_mask$partition0$ & (8388608));
if((bit__4413__auto__) || (G__6445.cljs$core$ISeqable$)){
return true;
} else {
if((!G__6445.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,G__6445);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,G__6445);
}
});
cljs.core.boolean$ = (function boolean$(x){
if(cljs.core.truth_(x)){
return true;
} else {
return false;
}
});
cljs.core.ifn_QMARK_ = (function ifn_QMARK_(f){
var or__3732__auto__ = cljs.core.fn_QMARK_(f);
if(or__3732__auto__){
return or__3732__auto__;
} else {
var G__6449 = f;
if(G__6449){
var bit__4413__auto__ = (G__6449.cljs$lang$protocol_mask$partition0$ & (1));
if((bit__4413__auto__) || (G__6449.cljs$core$IFn$)){
return true;
} else {
if((!G__6449.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IFn,G__6449);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IFn,G__6449);
}
}
});
/**
* Returns true if n is an integer.
*/
cljs.core.integer_QMARK_ = (function integer_QMARK_(n){
return (typeof n === 'number') && (cljs.core.not((function (){var G__6462 = n;
return isNaN(G__6462);
})())) && (!((n === Infinity))) && (((function (){var G__6463 = n;
return parseFloat(G__6463);
})() === (function (){var G__6464 = n;
var G__6465 = (10);
return parseInt(G__6464,G__6465);
})()));
});
/**
* Returns true if key is present in the given collection, otherwise
* returns false.  Note that for numerically indexed collections like
* vectors and arrays, this tests if the numeric key is within the
* range of indexes. 'contains?' operates constant or logarithmic time;
* it will not perform a linear search for a value.  See also 'some'.
*/
cljs.core.contains_QMARK_ = (function contains_QMARK_(coll,v){
if((cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,v,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return false;
} else {
return true;
}
});
/**
* Returns the map entry for key, or nil if key not present.
*/
cljs.core.find = (function find(coll,k){
if((!((coll == null))) && (cljs.core.associative_QMARK_(coll)) && (cljs.core.contains_QMARK_(coll,k))){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k,cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,k)], null);
} else {
return null;
}
});
/**
* Returns true if no two of the arguments are =
* @param {...*} var_args
*/
cljs.core.distinct_QMARK_ = (function() {
var distinct_QMARK_ = null;
var distinct_QMARK___1 = (function (x){
return true;
});
var distinct_QMARK___2 = (function (x,y){
return !(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y));
});
var distinct_QMARK___3 = (function() { 
var G__6466__delegate = function (x,y,more){
if(!(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y))){
var s = cljs.core.PersistentHashSet.fromArray([x,y], true);
var xs = more;
while(true){
var x__$1 = cljs.core.first(xs);
var etc = cljs.core.next(xs);
if(cljs.core.truth_(xs)){
if(cljs.core.contains_QMARK_(s,x__$1)){
return false;
} else {
var G__6467 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(s,x__$1);
var G__6468 = etc;
s = G__6467;
xs = G__6468;
continue;
}
} else {
return true;
}
break;
}
} else {
return false;
}
};
var G__6466 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__6469__i = 0, G__6469__a = new Array(arguments.length -  2);
while (G__6469__i < G__6469__a.length) {G__6469__a[G__6469__i] = arguments[G__6469__i + 2]; ++G__6469__i;}
  more = new cljs.core.IndexedSeq(G__6469__a,0);
} 
return G__6466__delegate.call(this,x,y,more);};
G__6466.cljs$lang$maxFixedArity = 2;
G__6466.cljs$lang$applyTo = (function (arglist__6470){
var x = cljs.core.first(arglist__6470);
arglist__6470 = cljs.core.next(arglist__6470);
var y = cljs.core.first(arglist__6470);
var more = cljs.core.rest(arglist__6470);
return G__6466__delegate(x,y,more);
});
G__6466.cljs$core$IFn$_invoke$arity$variadic = G__6466__delegate;
return G__6466;
})()
;
distinct_QMARK_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return distinct_QMARK___1.call(this,x);
case 2:
return distinct_QMARK___2.call(this,x,y);
default:
var G__6471 = null;
if (arguments.length > 2) {
var G__6472__i = 0, G__6472__a = new Array(arguments.length -  2);
while (G__6472__i < G__6472__a.length) {G__6472__a[G__6472__i] = arguments[G__6472__i + 2]; ++G__6472__i;}
G__6471 = new cljs.core.IndexedSeq(G__6472__a,0);
}
return distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__6471);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
distinct_QMARK_.cljs$lang$maxFixedArity = 2;
distinct_QMARK_.cljs$lang$applyTo = distinct_QMARK___3.cljs$lang$applyTo;
distinct_QMARK_.cljs$core$IFn$_invoke$arity$1 = distinct_QMARK___1;
distinct_QMARK_.cljs$core$IFn$_invoke$arity$2 = distinct_QMARK___2;
distinct_QMARK_.cljs$core$IFn$_invoke$arity$variadic = distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic;
return distinct_QMARK_;
})()
;
/**
* Comparator. Returns a negative number, zero, or a positive number
* when x is logically 'less than', 'equal to', or 'greater than'
* y. Uses IComparable if available and google.array.defaultCompare for objects
* of the same type and special-cases nil to be less than any other object.
*/
cljs.core.compare = (function compare(x,y){
if((x === y)){
return (0);
} else {
if((x == null)){
return (-1);
} else {
if((y == null)){
return (1);
} else {
if((cljs.core.type(x) === cljs.core.type(y))){
if((function (){var G__6476 = x;
if(G__6476){
var bit__4406__auto__ = (G__6476.cljs$lang$protocol_mask$partition1$ & (2048));
if((bit__4406__auto__) || (G__6476.cljs$core$IComparable$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$IComparable$_compare$arity$2(null,y);
} else {
var G__6477 = x;
var G__6478 = y;
return goog.array.defaultCompare(G__6477,G__6478);
}
} else {
throw (new Error("compare on non-nil objects of different types"));

}
}
}
}
});
/**
* Compare indexed collection.
*/
cljs.core.compare_indexed = (function() {
var compare_indexed = null;
var compare_indexed__2 = (function (xs,ys){
var xl = cljs.core.count(xs);
var yl = cljs.core.count(ys);
if((xl < yl)){
return (-1);
} else {
if((xl > yl)){
return (1);
} else {
return compare_indexed.cljs$core$IFn$_invoke$arity$4(xs,ys,xl,(0));

}
}
});
var compare_indexed__4 = (function (xs,ys,len,n){
while(true){
var d = cljs.core.compare(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(xs,n),cljs.core.nth.cljs$core$IFn$_invoke$arity$2(ys,n));
if(((d === (0))) && (((n + (1)) < len))){
var G__6483 = xs;
var G__6484 = ys;
var G__6485 = len;
var G__6486 = (n + (1));
xs = G__6483;
ys = G__6484;
len = G__6485;
n = G__6486;
continue;
} else {
return d;
}
break;
}
});
compare_indexed = function(xs,ys,len,n){
switch(arguments.length){
case 2:
return compare_indexed__2.call(this,xs,ys);
case 4:
return compare_indexed__4.call(this,xs,ys,len,n);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
compare_indexed.cljs$core$IFn$_invoke$arity$2 = compare_indexed__2;
compare_indexed.cljs$core$IFn$_invoke$arity$4 = compare_indexed__4;
return compare_indexed;
})()
;
/**
* Given a fn that might be boolean valued or a comparator,
* return a fn that is a comparator.
*/
cljs.core.fn__GT_comparator = (function fn__GT_comparator(f){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(f,cljs.core.compare)){
return cljs.core.compare;
} else {
return (function (x,y){
var r = (function (){var G__6491 = x;
var G__6492 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__6491,G__6492) : f.call(null,G__6491,G__6492));
})();
if(typeof r === 'number'){
return r;
} else {
if(cljs.core.truth_(r)){
return (-1);
} else {
if(cljs.core.truth_((function (){var G__6493 = y;
var G__6494 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__6493,G__6494) : f.call(null,G__6493,G__6494));
})())){
return (1);
} else {
return (0);
}
}
}
});
}
});
/**
* Returns a sorted sequence of the items in coll. Comp can be
* boolean-valued comparison function, or a -/0/+ valued comparator.
* Comp defaults to compare.
*/
cljs.core.sort = (function() {
var sort = null;
var sort__1 = (function (coll){
return sort.cljs$core$IFn$_invoke$arity$2(cljs.core.compare,coll);
});
var sort__2 = (function (comp,coll){
if(cljs.core.seq(coll)){
var a = (function (){var G__6500 = coll;
return (cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(G__6500) : cljs.core.to_array.call(null,G__6500));
})();
var G__6501_6503 = a;
var G__6502_6504 = cljs.core.fn__GT_comparator(comp);
goog.array.stableSort(G__6501_6503,G__6502_6504);

return cljs.core.seq(a);
} else {
return cljs.core.List.EMPTY;
}
});
sort = function(comp,coll){
switch(arguments.length){
case 1:
return sort__1.call(this,comp);
case 2:
return sort__2.call(this,comp,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sort.cljs$core$IFn$_invoke$arity$1 = sort__1;
sort.cljs$core$IFn$_invoke$arity$2 = sort__2;
return sort;
})()
;
/**
* Returns a sorted sequence of the items in coll, where the sort
* order is determined by comparing (keyfn item).  Comp can be
* boolean-valued comparison funcion, or a -/0/+ valued comparator.
* Comp defaults to compare.
*/
cljs.core.sort_by = (function() {
var sort_by = null;
var sort_by__2 = (function (keyfn,coll){
return sort_by.cljs$core$IFn$_invoke$arity$3(keyfn,cljs.core.compare,coll);
});
var sort_by__3 = (function (keyfn,comp,coll){
return cljs.core.sort.cljs$core$IFn$_invoke$arity$2((function (x,y){
return cljs.core.fn__GT_comparator(comp).call(null,(function (){var G__6510 = x;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__6510) : keyfn.call(null,G__6510));
})(),(function (){var G__6511 = y;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__6511) : keyfn.call(null,G__6511));
})());
}),coll);
});
sort_by = function(keyfn,comp,coll){
switch(arguments.length){
case 2:
return sort_by__2.call(this,keyfn,comp);
case 3:
return sort_by__3.call(this,keyfn,comp,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sort_by.cljs$core$IFn$_invoke$arity$2 = sort_by__2;
sort_by.cljs$core$IFn$_invoke$arity$3 = sort_by__3;
return sort_by;
})()
;
cljs.core.seq_reduce = (function() {
var seq_reduce = null;
var seq_reduce__2 = (function (f,coll){
var temp__4124__auto__ = cljs.core.seq(coll);
if(temp__4124__auto__){
var s = temp__4124__auto__;
var G__6517 = f;
var G__6518 = cljs.core.first(s);
var G__6519 = cljs.core.next(s);
return (cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(G__6517,G__6518,G__6519) : cljs.core.reduce.call(null,G__6517,G__6518,G__6519));
} else {
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
}
});
var seq_reduce__3 = (function (f,val,coll){
var val__$1 = val;
var coll__$1 = cljs.core.seq(coll);
while(true){
if(coll__$1){
var nval = (function (){var G__6520 = val__$1;
var G__6521 = cljs.core.first(coll__$1);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__6520,G__6521) : f.call(null,G__6520,G__6521));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__6522 = nval;
var G__6523 = cljs.core.next(coll__$1);
val__$1 = G__6522;
coll__$1 = G__6523;
continue;
}
} else {
return val__$1;
}
break;
}
});
seq_reduce = function(f,val,coll){
switch(arguments.length){
case 2:
return seq_reduce__2.call(this,f,val);
case 3:
return seq_reduce__3.call(this,f,val,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
seq_reduce.cljs$core$IFn$_invoke$arity$2 = seq_reduce__2;
seq_reduce.cljs$core$IFn$_invoke$arity$3 = seq_reduce__3;
return seq_reduce;
})()
;
/**
* Return a random permutation of coll
*/
cljs.core.shuffle = (function shuffle(coll){
var a = (function (){var G__6527 = coll;
return (cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(G__6527) : cljs.core.to_array.call(null,G__6527));
})();
var G__6528_6530 = a;
goog.array.shuffle(G__6528_6530);

var G__6529 = a;
return (cljs.core.vec.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vec.cljs$core$IFn$_invoke$arity$1(G__6529) : cljs.core.vec.call(null,G__6529));
});
/**
* f should be a function of 2 arguments. If val is not supplied,
* returns the result of applying f to the first 2 items in coll, then
* applying f to that result and the 3rd item, etc. If coll contains no
* items, f must accept no arguments as well, and reduce returns the
* result of calling f with no arguments.  If coll has only 1 item, it
* is returned and f is not called.  If val is supplied, returns the
* result of applying f to val and the first item in coll, then
* applying f to that result and the 2nd item, etc. If coll contains no
* items, returns val and f is not called.
*/
cljs.core.reduce = (function() {
var reduce = null;
var reduce__2 = (function (f,coll){
if((function (){var G__6533 = coll;
if(G__6533){
var bit__4406__auto__ = (G__6533.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__4406__auto__) || (G__6533.cljs$core$IReduce$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$2(null,f);
} else {
if(coll instanceof Array){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
if(typeof coll === 'string'){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,coll)){
return cljs.core._reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll);

}
}
}
}
});
var reduce__3 = (function (f,val,coll){
if((function (){var G__6534 = coll;
if(G__6534){
var bit__4406__auto__ = (G__6534.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__4406__auto__) || (G__6534.cljs$core$IReduce$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$3(null,f,val);
} else {
if(coll instanceof Array){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
if(typeof coll === 'string'){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,coll)){
return cljs.core._reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,val,coll);

}
}
}
}
});
reduce = function(f,val,coll){
switch(arguments.length){
case 2:
return reduce__2.call(this,f,val);
case 3:
return reduce__3.call(this,f,val,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
reduce.cljs$core$IFn$_invoke$arity$2 = reduce__2;
reduce.cljs$core$IFn$_invoke$arity$3 = reduce__3;
return reduce;
})()
;
/**
* Reduces an associative collection. f should be a function of 3
* arguments. Returns the result of applying f to init, the first key
* and the first value in coll, then applying f to that result and the
* 2nd key and value, etc. If coll contains no entries, returns init
* and f is not called. Note that reduce-kv is supported on vectors,
* where the keys will be the ordinals.
*/
cljs.core.reduce_kv = (function reduce_kv(f,init,coll){
if(!((coll == null))){
return cljs.core._kv_reduce(coll,f,init);
} else {
return init;
}
});
cljs.core.identity = (function identity(x){
return x;
});
cljs.core.completing = (function() {
var completing = null;
var completing__1 = (function (f){
return completing.cljs$core$IFn$_invoke$arity$2(f,cljs.core.identity);
});
var completing__2 = (function (f,cf){
return (function() {
var G__6543 = null;
var G__6543__0 = (function (){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
});
var G__6543__1 = (function (x){
var G__6540 = x;
return (cf.cljs$core$IFn$_invoke$arity$1 ? cf.cljs$core$IFn$_invoke$arity$1(G__6540) : cf.call(null,G__6540));
});
var G__6543__2 = (function (x,y){
var G__6541 = x;
var G__6542 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__6541,G__6542) : f.call(null,G__6541,G__6542));
});
G__6543 = function(x,y){
switch(arguments.length){
case 0:
return G__6543__0.call(this);
case 1:
return G__6543__1.call(this,x);
case 2:
return G__6543__2.call(this,x,y);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__6543.cljs$core$IFn$_invoke$arity$0 = G__6543__0;
G__6543.cljs$core$IFn$_invoke$arity$1 = G__6543__1;
G__6543.cljs$core$IFn$_invoke$arity$2 = G__6543__2;
return G__6543;
})()
});
completing = function(f,cf){
switch(arguments.length){
case 1:
return completing__1.call(this,f);
case 2:
return completing__2.call(this,f,cf);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
completing.cljs$core$IFn$_invoke$arity$1 = completing__1;
completing.cljs$core$IFn$_invoke$arity$2 = completing__2;
return completing;
})()
;
/**
* reduce with a transformation of f (xf). If init is not
* supplied, (f) will be called to produce it. f should be a reducing
* step function that accepts both 1 and 2 arguments, if it accepts
* only 2 you can add the arity-1 with 'completing'. Returns the result
* of applying (the transformed) xf to init and the first item in coll,
* then applying xf to that result and the 2nd item, etc. If coll
* contains no items, returns init and f is not called. Note that
* certain transforms may inject or skip items.
*/
cljs.core.transduce = (function() {
var transduce = null;
var transduce__3 = (function (xform,f,coll){
return transduce.cljs$core$IFn$_invoke$arity$4(xform,f,(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),coll);
});
var transduce__4 = (function (xform,f,init,coll){
var f__$1 = (function (){var G__6550 = f;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__6550) : xform.call(null,G__6550));
})();
var ret = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(f__$1,init,coll);
var G__6551 = ret;
return (f__$1.cljs$core$IFn$_invoke$arity$1 ? f__$1.cljs$core$IFn$_invoke$arity$1(G__6551) : f__$1.call(null,G__6551));
});
transduce = function(xform,f,init,coll){
switch(arguments.length){
case 3:
return transduce__3.call(this,xform,f,init);
case 4:
return transduce__4.call(this,xform,f,init,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
transduce.cljs$core$IFn$_invoke$arity$3 = transduce__3;
transduce.cljs$core$IFn$_invoke$arity$4 = transduce__4;
return transduce;
})()
;
/**
* Returns the sum of nums. (+) returns 0.
* @param {...*} var_args
*/
cljs.core._PLUS_ = (function() {
var _PLUS_ = null;
var _PLUS___0 = (function (){
return (0);
});
var _PLUS___1 = (function (x){
return x;
});
var _PLUS___2 = (function (x,y){
return (x + y);
});
var _PLUS___3 = (function() { 
var G__6552__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_PLUS_,(x + y),more);
};
var G__6552 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__6553__i = 0, G__6553__a = new Array(arguments.length -  2);
while (G__6553__i < G__6553__a.length) {G__6553__a[G__6553__i] = arguments[G__6553__i + 2]; ++G__6553__i;}
  more = new cljs.core.IndexedSeq(G__6553__a,0);
} 
return G__6552__delegate.call(this,x,y,more);};
G__6552.cljs$lang$maxFixedArity = 2;
G__6552.cljs$lang$applyTo = (function (arglist__6554){
var x = cljs.core.first(arglist__6554);
arglist__6554 = cljs.core.next(arglist__6554);
var y = cljs.core.first(arglist__6554);
var more = cljs.core.rest(arglist__6554);
return G__6552__delegate(x,y,more);
});
G__6552.cljs$core$IFn$_invoke$arity$variadic = G__6552__delegate;
return G__6552;
})()
;
_PLUS_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return _PLUS___0.call(this);
case 1:
return _PLUS___1.call(this,x);
case 2:
return _PLUS___2.call(this,x,y);
default:
var G__6555 = null;
if (arguments.length > 2) {
var G__6556__i = 0, G__6556__a = new Array(arguments.length -  2);
while (G__6556__i < G__6556__a.length) {G__6556__a[G__6556__i] = arguments[G__6556__i + 2]; ++G__6556__i;}
G__6555 = new cljs.core.IndexedSeq(G__6556__a,0);
}
return _PLUS___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__6555);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_PLUS_.cljs$lang$maxFixedArity = 2;
_PLUS_.cljs$lang$applyTo = _PLUS___3.cljs$lang$applyTo;
_PLUS_.cljs$core$IFn$_invoke$arity$0 = _PLUS___0;
_PLUS_.cljs$core$IFn$_invoke$arity$1 = _PLUS___1;
_PLUS_.cljs$core$IFn$_invoke$arity$2 = _PLUS___2;
_PLUS_.cljs$core$IFn$_invoke$arity$variadic = _PLUS___3.cljs$core$IFn$_invoke$arity$variadic;
return _PLUS_;
})()
;
/**
* If no ys are supplied, returns the negation of x, else subtracts
* the ys from x and returns the result.
* @param {...*} var_args
*/
cljs.core._ = (function() {
var _ = null;
var ___1 = (function (x){
return (- x);
});
var ___2 = (function (x,y){
return (x - y);
});
var ___3 = (function() { 
var G__6557__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_,(x - y),more);
};
var G__6557 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__6558__i = 0, G__6558__a = new Array(arguments.length -  2);
while (G__6558__i < G__6558__a.length) {G__6558__a[G__6558__i] = arguments[G__6558__i + 2]; ++G__6558__i;}
  more = new cljs.core.IndexedSeq(G__6558__a,0);
} 
return G__6557__delegate.call(this,x,y,more);};
G__6557.cljs$lang$maxFixedArity = 2;
G__6557.cljs$lang$applyTo = (function (arglist__6559){
var x = cljs.core.first(arglist__6559);
arglist__6559 = cljs.core.next(arglist__6559);
var y = cljs.core.first(arglist__6559);
var more = cljs.core.rest(arglist__6559);
return G__6557__delegate(x,y,more);
});
G__6557.cljs$core$IFn$_invoke$arity$variadic = G__6557__delegate;
return G__6557;
})()
;
_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return ___1.call(this,x);
case 2:
return ___2.call(this,x,y);
default:
var G__6560 = null;
if (arguments.length > 2) {
var G__6561__i = 0, G__6561__a = new Array(arguments.length -  2);
while (G__6561__i < G__6561__a.length) {G__6561__a[G__6561__i] = arguments[G__6561__i + 2]; ++G__6561__i;}
G__6560 = new cljs.core.IndexedSeq(G__6561__a,0);
}
return ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__6560);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_.cljs$lang$maxFixedArity = 2;
_.cljs$lang$applyTo = ___3.cljs$lang$applyTo;
_.cljs$core$IFn$_invoke$arity$1 = ___1;
_.cljs$core$IFn$_invoke$arity$2 = ___2;
_.cljs$core$IFn$_invoke$arity$variadic = ___3.cljs$core$IFn$_invoke$arity$variadic;
return _;
})()
;
/**
* Returns the product of nums. (*) returns 1.
* @param {...*} var_args
*/
cljs.core._STAR_ = (function() {
var _STAR_ = null;
var _STAR___0 = (function (){
return (1);
});
var _STAR___1 = (function (x){
return x;
});
var _STAR___2 = (function (x,y){
return (x * y);
});
var _STAR___3 = (function() { 
var G__6562__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_STAR_,(x * y),more);
};
var G__6562 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__6563__i = 0, G__6563__a = new Array(arguments.length -  2);
while (G__6563__i < G__6563__a.length) {G__6563__a[G__6563__i] = arguments[G__6563__i + 2]; ++G__6563__i;}
  more = new cljs.core.IndexedSeq(G__6563__a,0);
} 
return G__6562__delegate.call(this,x,y,more);};
G__6562.cljs$lang$maxFixedArity = 2;
G__6562.cljs$lang$applyTo = (function (arglist__6564){
var x = cljs.core.first(arglist__6564);
arglist__6564 = cljs.core.next(arglist__6564);
var y = cljs.core.first(arglist__6564);
var more = cljs.core.rest(arglist__6564);
return G__6562__delegate(x,y,more);
});
G__6562.cljs$core$IFn$_invoke$arity$variadic = G__6562__delegate;
return G__6562;
})()
;
_STAR_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return _STAR___0.call(this);
case 1:
return _STAR___1.call(this,x);
case 2:
return _STAR___2.call(this,x,y);
default:
var G__6565 = null;
if (arguments.length > 2) {
var G__6566__i = 0, G__6566__a = new Array(arguments.length -  2);
while (G__6566__i < G__6566__a.length) {G__6566__a[G__6566__i] = arguments[G__6566__i + 2]; ++G__6566__i;}
G__6565 = new cljs.core.IndexedSeq(G__6566__a,0);
}
return _STAR___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__6565);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_STAR_.cljs$lang$maxFixedArity = 2;
_STAR_.cljs$lang$applyTo = _STAR___3.cljs$lang$applyTo;
_STAR_.cljs$core$IFn$_invoke$arity$0 = _STAR___0;
_STAR_.cljs$core$IFn$_invoke$arity$1 = _STAR___1;
_STAR_.cljs$core$IFn$_invoke$arity$2 = _STAR___2;
_STAR_.cljs$core$IFn$_invoke$arity$variadic = _STAR___3.cljs$core$IFn$_invoke$arity$variadic;
return _STAR_;
})()
;
/**
* If no denominators are supplied, returns 1/numerator,
* else returns numerator divided by all of the denominators.
* @param {...*} var_args
*/
cljs.core._SLASH_ = (function() {
var _SLASH_ = null;
var _SLASH___1 = (function (x){
return _SLASH_.cljs$core$IFn$_invoke$arity$2((1),x);
});
var _SLASH___2 = (function (x,y){
return (x / y);
});
var _SLASH___3 = (function() { 
var G__6571__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_SLASH_,_SLASH_.cljs$core$IFn$_invoke$arity$2(x,y),more);
};
var G__6571 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__6572__i = 0, G__6572__a = new Array(arguments.length -  2);
while (G__6572__i < G__6572__a.length) {G__6572__a[G__6572__i] = arguments[G__6572__i + 2]; ++G__6572__i;}
  more = new cljs.core.IndexedSeq(G__6572__a,0);
} 
return G__6571__delegate.call(this,x,y,more);};
G__6571.cljs$lang$maxFixedArity = 2;
G__6571.cljs$lang$applyTo = (function (arglist__6573){
var x = cljs.core.first(arglist__6573);
arglist__6573 = cljs.core.next(arglist__6573);
var y = cljs.core.first(arglist__6573);
var more = cljs.core.rest(arglist__6573);
return G__6571__delegate(x,y,more);
});
G__6571.cljs$core$IFn$_invoke$arity$variadic = G__6571__delegate;
return G__6571;
})()
;
_SLASH_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _SLASH___1.call(this,x);
case 2:
return _SLASH___2.call(this,x,y);
default:
var G__6574 = null;
if (arguments.length > 2) {
var G__6575__i = 0, G__6575__a = new Array(arguments.length -  2);
while (G__6575__i < G__6575__a.length) {G__6575__a[G__6575__i] = arguments[G__6575__i + 2]; ++G__6575__i;}
G__6574 = new cljs.core.IndexedSeq(G__6575__a,0);
}
return _SLASH___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__6574);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_SLASH_.cljs$lang$maxFixedArity = 2;
_SLASH_.cljs$lang$applyTo = _SLASH___3.cljs$lang$applyTo;
_SLASH_.cljs$core$IFn$_invoke$arity$1 = _SLASH___1;
_SLASH_.cljs$core$IFn$_invoke$arity$2 = _SLASH___2;
_SLASH_.cljs$core$IFn$_invoke$arity$variadic = _SLASH___3.cljs$core$IFn$_invoke$arity$variadic;
return _SLASH_;
})()
;
/**
* Returns non-nil if nums are in monotonically increasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._LT_ = (function() {
var _LT_ = null;
var _LT___1 = (function (x){
return true;
});
var _LT___2 = (function (x,y){
return (x < y);
});
var _LT___3 = (function() { 
var G__6576__delegate = function (x,y,more){
while(true){
if((x < y)){
if(cljs.core.next(more)){
var G__6577 = y;
var G__6578 = cljs.core.first(more);
var G__6579 = cljs.core.next(more);
x = G__6577;
y = G__6578;
more = G__6579;
continue;
} else {
return (y < cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__6576 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__6580__i = 0, G__6580__a = new Array(arguments.length -  2);
while (G__6580__i < G__6580__a.length) {G__6580__a[G__6580__i] = arguments[G__6580__i + 2]; ++G__6580__i;}
  more = new cljs.core.IndexedSeq(G__6580__a,0);
} 
return G__6576__delegate.call(this,x,y,more);};
G__6576.cljs$lang$maxFixedArity = 2;
G__6576.cljs$lang$applyTo = (function (arglist__6581){
var x = cljs.core.first(arglist__6581);
arglist__6581 = cljs.core.next(arglist__6581);
var y = cljs.core.first(arglist__6581);
var more = cljs.core.rest(arglist__6581);
return G__6576__delegate(x,y,more);
});
G__6576.cljs$core$IFn$_invoke$arity$variadic = G__6576__delegate;
return G__6576;
})()
;
_LT_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _LT___1.call(this,x);
case 2:
return _LT___2.call(this,x,y);
default:
var G__6582 = null;
if (arguments.length > 2) {
var G__6583__i = 0, G__6583__a = new Array(arguments.length -  2);
while (G__6583__i < G__6583__a.length) {G__6583__a[G__6583__i] = arguments[G__6583__i + 2]; ++G__6583__i;}
G__6582 = new cljs.core.IndexedSeq(G__6583__a,0);
}
return _LT___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__6582);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_LT_.cljs$lang$maxFixedArity = 2;
_LT_.cljs$lang$applyTo = _LT___3.cljs$lang$applyTo;
_LT_.cljs$core$IFn$_invoke$arity$1 = _LT___1;
_LT_.cljs$core$IFn$_invoke$arity$2 = _LT___2;
_LT_.cljs$core$IFn$_invoke$arity$variadic = _LT___3.cljs$core$IFn$_invoke$arity$variadic;
return _LT_;
})()
;
/**
* Returns non-nil if nums are in monotonically non-decreasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._LT__EQ_ = (function() {
var _LT__EQ_ = null;
var _LT__EQ___1 = (function (x){
return true;
});
var _LT__EQ___2 = (function (x,y){
return (x <= y);
});
var _LT__EQ___3 = (function() { 
var G__6584__delegate = function (x,y,more){
while(true){
if((x <= y)){
if(cljs.core.next(more)){
var G__6585 = y;
var G__6586 = cljs.core.first(more);
var G__6587 = cljs.core.next(more);
x = G__6585;
y = G__6586;
more = G__6587;
continue;
} else {
return (y <= cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__6584 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__6588__i = 0, G__6588__a = new Array(arguments.length -  2);
while (G__6588__i < G__6588__a.length) {G__6588__a[G__6588__i] = arguments[G__6588__i + 2]; ++G__6588__i;}
  more = new cljs.core.IndexedSeq(G__6588__a,0);
} 
return G__6584__delegate.call(this,x,y,more);};
G__6584.cljs$lang$maxFixedArity = 2;
G__6584.cljs$lang$applyTo = (function (arglist__6589){
var x = cljs.core.first(arglist__6589);
arglist__6589 = cljs.core.next(arglist__6589);
var y = cljs.core.first(arglist__6589);
var more = cljs.core.rest(arglist__6589);
return G__6584__delegate(x,y,more);
});
G__6584.cljs$core$IFn$_invoke$arity$variadic = G__6584__delegate;
return G__6584;
})()
;
_LT__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _LT__EQ___1.call(this,x);
case 2:
return _LT__EQ___2.call(this,x,y);
default:
var G__6590 = null;
if (arguments.length > 2) {
var G__6591__i = 0, G__6591__a = new Array(arguments.length -  2);
while (G__6591__i < G__6591__a.length) {G__6591__a[G__6591__i] = arguments[G__6591__i + 2]; ++G__6591__i;}
G__6590 = new cljs.core.IndexedSeq(G__6591__a,0);
}
return _LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__6590);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_LT__EQ_.cljs$lang$maxFixedArity = 2;
_LT__EQ_.cljs$lang$applyTo = _LT__EQ___3.cljs$lang$applyTo;
_LT__EQ_.cljs$core$IFn$_invoke$arity$1 = _LT__EQ___1;
_LT__EQ_.cljs$core$IFn$_invoke$arity$2 = _LT__EQ___2;
_LT__EQ_.cljs$core$IFn$_invoke$arity$variadic = _LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _LT__EQ_;
})()
;
/**
* Returns non-nil if nums are in monotonically decreasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._GT_ = (function() {
var _GT_ = null;
var _GT___1 = (function (x){
return true;
});
var _GT___2 = (function (x,y){
return (x > y);
});
var _GT___3 = (function() { 
var G__6592__delegate = function (x,y,more){
while(true){
if((x > y)){
if(cljs.core.next(more)){
var G__6593 = y;
var G__6594 = cljs.core.first(more);
var G__6595 = cljs.core.next(more);
x = G__6593;
y = G__6594;
more = G__6595;
continue;
} else {
return (y > cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__6592 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__6596__i = 0, G__6596__a = new Array(arguments.length -  2);
while (G__6596__i < G__6596__a.length) {G__6596__a[G__6596__i] = arguments[G__6596__i + 2]; ++G__6596__i;}
  more = new cljs.core.IndexedSeq(G__6596__a,0);
} 
return G__6592__delegate.call(this,x,y,more);};
G__6592.cljs$lang$maxFixedArity = 2;
G__6592.cljs$lang$applyTo = (function (arglist__6597){
var x = cljs.core.first(arglist__6597);
arglist__6597 = cljs.core.next(arglist__6597);
var y = cljs.core.first(arglist__6597);
var more = cljs.core.rest(arglist__6597);
return G__6592__delegate(x,y,more);
});
G__6592.cljs$core$IFn$_invoke$arity$variadic = G__6592__delegate;
return G__6592;
})()
;
_GT_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _GT___1.call(this,x);
case 2:
return _GT___2.call(this,x,y);
default:
var G__6598 = null;
if (arguments.length > 2) {
var G__6599__i = 0, G__6599__a = new Array(arguments.length -  2);
while (G__6599__i < G__6599__a.length) {G__6599__a[G__6599__i] = arguments[G__6599__i + 2]; ++G__6599__i;}
G__6598 = new cljs.core.IndexedSeq(G__6599__a,0);
}
return _GT___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__6598);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_GT_.cljs$lang$maxFixedArity = 2;
_GT_.cljs$lang$applyTo = _GT___3.cljs$lang$applyTo;
_GT_.cljs$core$IFn$_invoke$arity$1 = _GT___1;
_GT_.cljs$core$IFn$_invoke$arity$2 = _GT___2;
_GT_.cljs$core$IFn$_invoke$arity$variadic = _GT___3.cljs$core$IFn$_invoke$arity$variadic;
return _GT_;
})()
;
/**
* Returns non-nil if nums are in monotonically non-increasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._GT__EQ_ = (function() {
var _GT__EQ_ = null;
var _GT__EQ___1 = (function (x){
return true;
});
var _GT__EQ___2 = (function (x,y){
return (x >= y);
});
var _GT__EQ___3 = (function() { 
var G__6600__delegate = function (x,y,more){
while(true){
if((x >= y)){
if(cljs.core.next(more)){
var G__6601 = y;
var G__6602 = cljs.core.first(more);
var G__6603 = cljs.core.next(more);
x = G__6601;
y = G__6602;
more = G__6603;
continue;
} else {
return (y >= cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__6600 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__6604__i = 0, G__6604__a = new Array(arguments.length -  2);
while (G__6604__i < G__6604__a.length) {G__6604__a[G__6604__i] = arguments[G__6604__i + 2]; ++G__6604__i;}
  more = new cljs.core.IndexedSeq(G__6604__a,0);
} 
return G__6600__delegate.call(this,x,y,more);};
G__6600.cljs$lang$maxFixedArity = 2;
G__6600.cljs$lang$applyTo = (function (arglist__6605){
var x = cljs.core.first(arglist__6605);
arglist__6605 = cljs.core.next(arglist__6605);
var y = cljs.core.first(arglist__6605);
var more = cljs.core.rest(arglist__6605);
return G__6600__delegate(x,y,more);
});
G__6600.cljs$core$IFn$_invoke$arity$variadic = G__6600__delegate;
return G__6600;
})()
;
_GT__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _GT__EQ___1.call(this,x);
case 2:
return _GT__EQ___2.call(this,x,y);
default:
var G__6606 = null;
if (arguments.length > 2) {
var G__6607__i = 0, G__6607__a = new Array(arguments.length -  2);
while (G__6607__i < G__6607__a.length) {G__6607__a[G__6607__i] = arguments[G__6607__i + 2]; ++G__6607__i;}
G__6606 = new cljs.core.IndexedSeq(G__6607__a,0);
}
return _GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__6606);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_GT__EQ_.cljs$lang$maxFixedArity = 2;
_GT__EQ_.cljs$lang$applyTo = _GT__EQ___3.cljs$lang$applyTo;
_GT__EQ_.cljs$core$IFn$_invoke$arity$1 = _GT__EQ___1;
_GT__EQ_.cljs$core$IFn$_invoke$arity$2 = _GT__EQ___2;
_GT__EQ_.cljs$core$IFn$_invoke$arity$variadic = _GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _GT__EQ_;
})()
;
/**
* Returns a number one less than num.
*/
cljs.core.dec = (function dec(x){
return (x - (1));
});
/**
* Returns the greatest of the nums.
* @param {...*} var_args
*/
cljs.core.max = (function() {
var max = null;
var max__1 = (function (x){
return x;
});
var max__2 = (function (x,y){
var x__4049__auto__ = x;
var y__4050__auto__ = y;
return ((x__4049__auto__ > y__4050__auto__) ? x__4049__auto__ : y__4050__auto__);
});
var max__3 = (function() { 
var G__6608__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(max,(function (){var x__4049__auto__ = x;
var y__4050__auto__ = y;
return ((x__4049__auto__ > y__4050__auto__) ? x__4049__auto__ : y__4050__auto__);
})(),more);
};
var G__6608 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__6609__i = 0, G__6609__a = new Array(arguments.length -  2);
while (G__6609__i < G__6609__a.length) {G__6609__a[G__6609__i] = arguments[G__6609__i + 2]; ++G__6609__i;}
  more = new cljs.core.IndexedSeq(G__6609__a,0);
} 
return G__6608__delegate.call(this,x,y,more);};
G__6608.cljs$lang$maxFixedArity = 2;
G__6608.cljs$lang$applyTo = (function (arglist__6610){
var x = cljs.core.first(arglist__6610);
arglist__6610 = cljs.core.next(arglist__6610);
var y = cljs.core.first(arglist__6610);
var more = cljs.core.rest(arglist__6610);
return G__6608__delegate(x,y,more);
});
G__6608.cljs$core$IFn$_invoke$arity$variadic = G__6608__delegate;
return G__6608;
})()
;
max = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return max__1.call(this,x);
case 2:
return max__2.call(this,x,y);
default:
var G__6611 = null;
if (arguments.length > 2) {
var G__6612__i = 0, G__6612__a = new Array(arguments.length -  2);
while (G__6612__i < G__6612__a.length) {G__6612__a[G__6612__i] = arguments[G__6612__i + 2]; ++G__6612__i;}
G__6611 = new cljs.core.IndexedSeq(G__6612__a,0);
}
return max__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__6611);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
max.cljs$lang$maxFixedArity = 2;
max.cljs$lang$applyTo = max__3.cljs$lang$applyTo;
max.cljs$core$IFn$_invoke$arity$1 = max__1;
max.cljs$core$IFn$_invoke$arity$2 = max__2;
max.cljs$core$IFn$_invoke$arity$variadic = max__3.cljs$core$IFn$_invoke$arity$variadic;
return max;
})()
;
/**
* Returns the least of the nums.
* @param {...*} var_args
*/
cljs.core.min = (function() {
var min = null;
var min__1 = (function (x){
return x;
});
var min__2 = (function (x,y){
var x__4056__auto__ = x;
var y__4057__auto__ = y;
return ((x__4056__auto__ < y__4057__auto__) ? x__4056__auto__ : y__4057__auto__);
});
var min__3 = (function() { 
var G__6613__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(min,(function (){var x__4056__auto__ = x;
var y__4057__auto__ = y;
return ((x__4056__auto__ < y__4057__auto__) ? x__4056__auto__ : y__4057__auto__);
})(),more);
};
var G__6613 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__6614__i = 0, G__6614__a = new Array(arguments.length -  2);
while (G__6614__i < G__6614__a.length) {G__6614__a[G__6614__i] = arguments[G__6614__i + 2]; ++G__6614__i;}
  more = new cljs.core.IndexedSeq(G__6614__a,0);
} 
return G__6613__delegate.call(this,x,y,more);};
G__6613.cljs$lang$maxFixedArity = 2;
G__6613.cljs$lang$applyTo = (function (arglist__6615){
var x = cljs.core.first(arglist__6615);
arglist__6615 = cljs.core.next(arglist__6615);
var y = cljs.core.first(arglist__6615);
var more = cljs.core.rest(arglist__6615);
return G__6613__delegate(x,y,more);
});
G__6613.cljs$core$IFn$_invoke$arity$variadic = G__6613__delegate;
return G__6613;
})()
;
min = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return min__1.call(this,x);
case 2:
return min__2.call(this,x,y);
default:
var G__6616 = null;
if (arguments.length > 2) {
var G__6617__i = 0, G__6617__a = new Array(arguments.length -  2);
while (G__6617__i < G__6617__a.length) {G__6617__a[G__6617__i] = arguments[G__6617__i + 2]; ++G__6617__i;}
G__6616 = new cljs.core.IndexedSeq(G__6617__a,0);
}
return min__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__6616);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
min.cljs$lang$maxFixedArity = 2;
min.cljs$lang$applyTo = min__3.cljs$lang$applyTo;
min.cljs$core$IFn$_invoke$arity$1 = min__1;
min.cljs$core$IFn$_invoke$arity$2 = min__2;
min.cljs$core$IFn$_invoke$arity$variadic = min__3.cljs$core$IFn$_invoke$arity$variadic;
return min;
})()
;
cljs.core.byte$ = (function byte$(x){
return x;
});
/**
* Coerce to char
*/
cljs.core.char$ = (function char$(x){
if(typeof x === 'number'){
return String.fromCharCode(x);
} else {
if((typeof x === 'string') && ((x.length === (1)))){
return x;
} else {
throw (new Error("Argument to char must be a character or number"));

}
}
});
cljs.core.short$ = (function short$(x){
return x;
});
cljs.core.float$ = (function float$(x){
return x;
});
cljs.core.double$ = (function double$(x){
return x;
});
cljs.core.unchecked_byte = (function unchecked_byte(x){
return x;
});
cljs.core.unchecked_char = (function unchecked_char(x){
return x;
});
cljs.core.unchecked_short = (function unchecked_short(x){
return x;
});
cljs.core.unchecked_float = (function unchecked_float(x){
return x;
});
cljs.core.unchecked_double = (function unchecked_double(x){
return x;
});
/**
* Returns the sum of nums. (+) returns 0.
* @param {...*} var_args
*/
cljs.core.unchecked_add = (function() {
var unchecked_add = null;
var unchecked_add__0 = (function (){
return (0);
});
var unchecked_add__1 = (function (x){
return x;
});
var unchecked_add__2 = (function (x,y){
return (x + y);
});
var unchecked_add__3 = (function() { 
var G__6618__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_add,(x + y),more);
};
var G__6618 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__6619__i = 0, G__6619__a = new Array(arguments.length -  2);
while (G__6619__i < G__6619__a.length) {G__6619__a[G__6619__i] = arguments[G__6619__i + 2]; ++G__6619__i;}
  more = new cljs.core.IndexedSeq(G__6619__a,0);
} 
return G__6618__delegate.call(this,x,y,more);};
G__6618.cljs$lang$maxFixedArity = 2;
G__6618.cljs$lang$applyTo = (function (arglist__6620){
var x = cljs.core.first(arglist__6620);
arglist__6620 = cljs.core.next(arglist__6620);
var y = cljs.core.first(arglist__6620);
var more = cljs.core.rest(arglist__6620);
return G__6618__delegate(x,y,more);
});
G__6618.cljs$core$IFn$_invoke$arity$variadic = G__6618__delegate;
return G__6618;
})()
;
unchecked_add = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_add__0.call(this);
case 1:
return unchecked_add__1.call(this,x);
case 2:
return unchecked_add__2.call(this,x,y);
default:
var G__6621 = null;
if (arguments.length > 2) {
var G__6622__i = 0, G__6622__a = new Array(arguments.length -  2);
while (G__6622__i < G__6622__a.length) {G__6622__a[G__6622__i] = arguments[G__6622__i + 2]; ++G__6622__i;}
G__6621 = new cljs.core.IndexedSeq(G__6622__a,0);
}
return unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__6621);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_add.cljs$lang$maxFixedArity = 2;
unchecked_add.cljs$lang$applyTo = unchecked_add__3.cljs$lang$applyTo;
unchecked_add.cljs$core$IFn$_invoke$arity$0 = unchecked_add__0;
unchecked_add.cljs$core$IFn$_invoke$arity$1 = unchecked_add__1;
unchecked_add.cljs$core$IFn$_invoke$arity$2 = unchecked_add__2;
unchecked_add.cljs$core$IFn$_invoke$arity$variadic = unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_add;
})()
;
/**
* Returns the sum of nums. (+) returns 0.
* @param {...*} var_args
*/
cljs.core.unchecked_add_int = (function() {
var unchecked_add_int = null;
var unchecked_add_int__0 = (function (){
return (0);
});
var unchecked_add_int__1 = (function (x){
return x;
});
var unchecked_add_int__2 = (function (x,y){
return (x + y);
});
var unchecked_add_int__3 = (function() { 
var G__6623__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_add_int,(x + y),more);
};
var G__6623 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__6624__i = 0, G__6624__a = new Array(arguments.length -  2);
while (G__6624__i < G__6624__a.length) {G__6624__a[G__6624__i] = arguments[G__6624__i + 2]; ++G__6624__i;}
  more = new cljs.core.IndexedSeq(G__6624__a,0);
} 
return G__6623__delegate.call(this,x,y,more);};
G__6623.cljs$lang$maxFixedArity = 2;
G__6623.cljs$lang$applyTo = (function (arglist__6625){
var x = cljs.core.first(arglist__6625);
arglist__6625 = cljs.core.next(arglist__6625);
var y = cljs.core.first(arglist__6625);
var more = cljs.core.rest(arglist__6625);
return G__6623__delegate(x,y,more);
});
G__6623.cljs$core$IFn$_invoke$arity$variadic = G__6623__delegate;
return G__6623;
})()
;
unchecked_add_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_add_int__0.call(this);
case 1:
return unchecked_add_int__1.call(this,x);
case 2:
return unchecked_add_int__2.call(this,x,y);
default:
var G__6626 = null;
if (arguments.length > 2) {
var G__6627__i = 0, G__6627__a = new Array(arguments.length -  2);
while (G__6627__i < G__6627__a.length) {G__6627__a[G__6627__i] = arguments[G__6627__i + 2]; ++G__6627__i;}
G__6626 = new cljs.core.IndexedSeq(G__6627__a,0);
}
return unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__6626);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_add_int.cljs$lang$maxFixedArity = 2;
unchecked_add_int.cljs$lang$applyTo = unchecked_add_int__3.cljs$lang$applyTo;
unchecked_add_int.cljs$core$IFn$_invoke$arity$0 = unchecked_add_int__0;
unchecked_add_int.cljs$core$IFn$_invoke$arity$1 = unchecked_add_int__1;
unchecked_add_int.cljs$core$IFn$_invoke$arity$2 = unchecked_add_int__2;
unchecked_add_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_add_int;
})()
;
cljs.core.unchecked_dec = (function unchecked_dec(x){
return (x - (1));
});
cljs.core.unchecked_dec_int = (function unchecked_dec_int(x){
return (x - (1));
});
/**
* If no denominators are supplied, returns 1/numerator,
* else returns numerator divided by all of the denominators.
* @param {...*} var_args
*/
cljs.core.unchecked_divide_int = (function() {
var unchecked_divide_int = null;
var unchecked_divide_int__1 = (function (x){
return unchecked_divide_int.cljs$core$IFn$_invoke$arity$2((1),x);
});
var unchecked_divide_int__2 = (function (x,y){
return (x / y);
});
var unchecked_divide_int__3 = (function() { 
var G__6632__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_divide_int,unchecked_divide_int.cljs$core$IFn$_invoke$arity$2(x,y),more);
};
var G__6632 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__6633__i = 0, G__6633__a = new Array(arguments.length -  2);
while (G__6633__i < G__6633__a.length) {G__6633__a[G__6633__i] = arguments[G__6633__i + 2]; ++G__6633__i;}
  more = new cljs.core.IndexedSeq(G__6633__a,0);
} 
return G__6632__delegate.call(this,x,y,more);};
G__6632.cljs$lang$maxFixedArity = 2;
G__6632.cljs$lang$applyTo = (function (arglist__6634){
var x = cljs.core.first(arglist__6634);
arglist__6634 = cljs.core.next(arglist__6634);
var y = cljs.core.first(arglist__6634);
var more = cljs.core.rest(arglist__6634);
return G__6632__delegate(x,y,more);
});
G__6632.cljs$core$IFn$_invoke$arity$variadic = G__6632__delegate;
return G__6632;
})()
;
unchecked_divide_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return unchecked_divide_int__1.call(this,x);
case 2:
return unchecked_divide_int__2.call(this,x,y);
default:
var G__6635 = null;
if (arguments.length > 2) {
var G__6636__i = 0, G__6636__a = new Array(arguments.length -  2);
while (G__6636__i < G__6636__a.length) {G__6636__a[G__6636__i] = arguments[G__6636__i + 2]; ++G__6636__i;}
G__6635 = new cljs.core.IndexedSeq(G__6636__a,0);
}
return unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__6635);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_divide_int.cljs$lang$maxFixedArity = 2;
unchecked_divide_int.cljs$lang$applyTo = unchecked_divide_int__3.cljs$lang$applyTo;
unchecked_divide_int.cljs$core$IFn$_invoke$arity$1 = unchecked_divide_int__1;
unchecked_divide_int.cljs$core$IFn$_invoke$arity$2 = unchecked_divide_int__2;
unchecked_divide_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_divide_int;
})()
;
cljs.core.unchecked_inc = (function unchecked_inc(x){
return (x + (1));
});
cljs.core.unchecked_inc_int = (function unchecked_inc_int(x){
return (x + (1));
});
/**
* Returns the product of nums. (*) returns 1.
* @param {...*} var_args
*/
cljs.core.unchecked_multiply = (function() {
var unchecked_multiply = null;
var unchecked_multiply__0 = (function (){
return (1);
});
var unchecked_multiply__1 = (function (x){
return x;
});
var unchecked_multiply__2 = (function (x,y){
return (x * y);
});
var unchecked_multiply__3 = (function() { 
var G__6637__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_multiply,(x * y),more);
};
var G__6637 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__6638__i = 0, G__6638__a = new Array(arguments.length -  2);
while (G__6638__i < G__6638__a.length) {G__6638__a[G__6638__i] = arguments[G__6638__i + 2]; ++G__6638__i;}
  more = new cljs.core.IndexedSeq(G__6638__a,0);
} 
return G__6637__delegate.call(this,x,y,more);};
G__6637.cljs$lang$maxFixedArity = 2;
G__6637.cljs$lang$applyTo = (function (arglist__6639){
var x = cljs.core.first(arglist__6639);
arglist__6639 = cljs.core.next(arglist__6639);
var y = cljs.core.first(arglist__6639);
var more = cljs.core.rest(arglist__6639);
return G__6637__delegate(x,y,more);
});
G__6637.cljs$core$IFn$_invoke$arity$variadic = G__6637__delegate;
return G__6637;
})()
;
unchecked_multiply = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_multiply__0.call(this);
case 1:
return unchecked_multiply__1.call(this,x);
case 2:
return unchecked_multiply__2.call(this,x,y);
default:
var G__6640 = null;
if (arguments.length > 2) {
var G__6641__i = 0, G__6641__a = new Array(arguments.length -  2);
while (G__6641__i < G__6641__a.length) {G__6641__a[G__6641__i] = arguments[G__6641__i + 2]; ++G__6641__i;}
G__6640 = new cljs.core.IndexedSeq(G__6641__a,0);
}
return unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__6640);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_multiply.cljs$lang$maxFixedArity = 2;
unchecked_multiply.cljs$lang$applyTo = unchecked_multiply__3.cljs$lang$applyTo;
unchecked_multiply.cljs$core$IFn$_invoke$arity$0 = unchecked_multiply__0;
unchecked_multiply.cljs$core$IFn$_invoke$arity$1 = unchecked_multiply__1;
unchecked_multiply.cljs$core$IFn$_invoke$arity$2 = unchecked_multiply__2;
unchecked_multiply.cljs$core$IFn$_invoke$arity$variadic = unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_multiply;
})()
;
/**
* Returns the product of nums. (*) returns 1.
* @param {...*} var_args
*/
cljs.core.unchecked_multiply_int = (function() {
var unchecked_multiply_int = null;
var unchecked_multiply_int__0 = (function (){
return (1);
});
var unchecked_multiply_int__1 = (function (x){
return x;
});
var unchecked_multiply_int__2 = (function (x,y){
return (x * y);
});
var unchecked_multiply_int__3 = (function() { 
var G__6642__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_multiply_int,(x * y),more);
};
var G__6642 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__6643__i = 0, G__6643__a = new Array(arguments.length -  2);
while (G__6643__i < G__6643__a.length) {G__6643__a[G__6643__i] = arguments[G__6643__i + 2]; ++G__6643__i;}
  more = new cljs.core.IndexedSeq(G__6643__a,0);
} 
return G__6642__delegate.call(this,x,y,more);};
G__6642.cljs$lang$maxFixedArity = 2;
G__6642.cljs$lang$applyTo = (function (arglist__6644){
var x = cljs.core.first(arglist__6644);
arglist__6644 = cljs.core.next(arglist__6644);
var y = cljs.core.first(arglist__6644);
var more = cljs.core.rest(arglist__6644);
return G__6642__delegate(x,y,more);
});
G__6642.cljs$core$IFn$_invoke$arity$variadic = G__6642__delegate;
return G__6642;
})()
;
unchecked_multiply_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_multiply_int__0.call(this);
case 1:
return unchecked_multiply_int__1.call(this,x);
case 2:
return unchecked_multiply_int__2.call(this,x,y);
default:
var G__6645 = null;
if (arguments.length > 2) {
var G__6646__i = 0, G__6646__a = new Array(arguments.length -  2);
while (G__6646__i < G__6646__a.length) {G__6646__a[G__6646__i] = arguments[G__6646__i + 2]; ++G__6646__i;}
G__6645 = new cljs.core.IndexedSeq(G__6646__a,0);
}
return unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__6645);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_multiply_int.cljs$lang$maxFixedArity = 2;
unchecked_multiply_int.cljs$lang$applyTo = unchecked_multiply_int__3.cljs$lang$applyTo;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$0 = unchecked_multiply_int__0;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$1 = unchecked_multiply_int__1;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$2 = unchecked_multiply_int__2;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_multiply_int;
})()
;
cljs.core.unchecked_negate = (function unchecked_negate(x){
return (- x);
});
cljs.core.unchecked_negate_int = (function unchecked_negate_int(x){
return (- x);
});
cljs.core.unchecked_remainder_int = (function unchecked_remainder_int(x,n){
var G__6649 = x;
var G__6650 = n;
return (cljs.core.mod.cljs$core$IFn$_invoke$arity$2 ? cljs.core.mod.cljs$core$IFn$_invoke$arity$2(G__6649,G__6650) : cljs.core.mod.call(null,G__6649,G__6650));
});
/**
* If no ys are supplied, returns the negation of x, else subtracts
* the ys from x and returns the result.
* @param {...*} var_args
*/
cljs.core.unchecked_subtract = (function() {
var unchecked_subtract = null;
var unchecked_subtract__1 = (function (x){
return (- x);
});
var unchecked_subtract__2 = (function (x,y){
return (x - y);
});
var unchecked_subtract__3 = (function() { 
var G__6651__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_subtract,(x - y),more);
};
var G__6651 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__6652__i = 0, G__6652__a = new Array(arguments.length -  2);
while (G__6652__i < G__6652__a.length) {G__6652__a[G__6652__i] = arguments[G__6652__i + 2]; ++G__6652__i;}
  more = new cljs.core.IndexedSeq(G__6652__a,0);
} 
return G__6651__delegate.call(this,x,y,more);};
G__6651.cljs$lang$maxFixedArity = 2;
G__6651.cljs$lang$applyTo = (function (arglist__6653){
var x = cljs.core.first(arglist__6653);
arglist__6653 = cljs.core.next(arglist__6653);
var y = cljs.core.first(arglist__6653);
var more = cljs.core.rest(arglist__6653);
return G__6651__delegate(x,y,more);
});
G__6651.cljs$core$IFn$_invoke$arity$variadic = G__6651__delegate;
return G__6651;
})()
;
unchecked_subtract = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return unchecked_subtract__1.call(this,x);
case 2:
return unchecked_subtract__2.call(this,x,y);
default:
var G__6654 = null;
if (arguments.length > 2) {
var G__6655__i = 0, G__6655__a = new Array(arguments.length -  2);
while (G__6655__i < G__6655__a.length) {G__6655__a[G__6655__i] = arguments[G__6655__i + 2]; ++G__6655__i;}
G__6654 = new cljs.core.IndexedSeq(G__6655__a,0);
}
return unchecked_subtract__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__6654);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_subtract.cljs$lang$maxFixedArity = 2;
unchecked_subtract.cljs$lang$applyTo = unchecked_subtract__3.cljs$lang$applyTo;
unchecked_subtract.cljs$core$IFn$_invoke$arity$1 = unchecked_subtract__1;
unchecked_subtract.cljs$core$IFn$_invoke$arity$2 = unchecked_subtract__2;
unchecked_subtract.cljs$core$IFn$_invoke$arity$variadic = unchecked_subtract__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_subtract;
})()
;
/**
* If no ys are supplied, returns the negation of x, else subtracts
* the ys from x and returns the result.
* @param {...*} var_args
*/
cljs.core.unchecked_subtract_int = (function() {
var unchecked_subtract_int = null;
var unchecked_subtract_int__1 = (function (x){
return (- x);
});
var unchecked_subtract_int__2 = (function (x,y){
return (x - y);
});
var unchecked_subtract_int__3 = (function() { 
var G__6656__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_subtract_int,(x - y),more);
};
var G__6656 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__6657__i = 0, G__6657__a = new Array(arguments.length -  2);
while (G__6657__i < G__6657__a.length) {G__6657__a[G__6657__i] = arguments[G__6657__i + 2]; ++G__6657__i;}
  more = new cljs.core.IndexedSeq(G__6657__a,0);
} 
return G__6656__delegate.call(this,x,y,more);};
G__6656.cljs$lang$maxFixedArity = 2;
G__6656.cljs$lang$applyTo = (function (arglist__6658){
var x = cljs.core.first(arglist__6658);
arglist__6658 = cljs.core.next(arglist__6658);
var y = cljs.core.first(arglist__6658);
var more = cljs.core.rest(arglist__6658);
return G__6656__delegate(x,y,more);
});
G__6656.cljs$core$IFn$_invoke$arity$variadic = G__6656__delegate;
return G__6656;
})()
;
unchecked_subtract_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return unchecked_subtract_int__1.call(this,x);
case 2:
return unchecked_subtract_int__2.call(this,x,y);
default:
var G__6659 = null;
if (arguments.length > 2) {
var G__6660__i = 0, G__6660__a = new Array(arguments.length -  2);
while (G__6660__i < G__6660__a.length) {G__6660__a[G__6660__i] = arguments[G__6660__i + 2]; ++G__6660__i;}
G__6659 = new cljs.core.IndexedSeq(G__6660__a,0);
}
return unchecked_subtract_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__6659);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_subtract_int.cljs$lang$maxFixedArity = 2;
unchecked_subtract_int.cljs$lang$applyTo = unchecked_subtract_int__3.cljs$lang$applyTo;
unchecked_subtract_int.cljs$core$IFn$_invoke$arity$1 = unchecked_subtract_int__1;
unchecked_subtract_int.cljs$core$IFn$_invoke$arity$2 = unchecked_subtract_int__2;
unchecked_subtract_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_subtract_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_subtract_int;
})()
;
cljs.core.fix = (function fix(q){
if((q >= (0))){
var G__6663 = q;
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__6663) : Math.floor.call(null,G__6663));
} else {
var G__6664 = q;
return (Math.ceil.cljs$core$IFn$_invoke$arity$1 ? Math.ceil.cljs$core$IFn$_invoke$arity$1(G__6664) : Math.ceil.call(null,G__6664));
}
});
/**
* Coerce to int by stripping decimal places.
*/
cljs.core.int$ = (function int$(x){
return (x | (0));
});
/**
* Coerce to int by stripping decimal places.
*/
cljs.core.unchecked_int = (function unchecked_int(x){
return cljs.core.fix(x);
});
/**
* Coerce to long by stripping decimal places. Identical to `int'.
*/
cljs.core.long$ = (function long$(x){
return cljs.core.fix(x);
});
/**
* Coerce to long by stripping decimal places. Identical to `int'.
*/
cljs.core.unchecked_long = (function unchecked_long(x){
return cljs.core.fix(x);
});
cljs.core.booleans = (function booleans(x){
return x;
});
cljs.core.bytes = (function bytes(x){
return x;
});
cljs.core.chars = (function chars(x){
return x;
});
cljs.core.shorts = (function shorts(x){
return x;
});
cljs.core.ints = (function ints(x){
return x;
});
cljs.core.floats = (function floats(x){
return x;
});
cljs.core.doubles = (function doubles(x){
return x;
});
cljs.core.longs = (function longs(x){
return x;
});
/**
* Modulus of num and div with original javascript behavior. i.e. bug for negative numbers
*/
cljs.core.js_mod = (function js_mod(n,d){
return (n % d);
});
/**
* Modulus of num and div. Truncates toward negative infinity.
*/
cljs.core.mod = (function mod(n,d){
return (((n % d) + d) % d);
});
/**
* quot[ient] of dividing numerator by denominator.
*/
cljs.core.quot = (function quot(n,d){
var rem = (n % d);
return cljs.core.fix(((n - rem) / d));
});
/**
* remainder of dividing numerator by denominator.
*/
cljs.core.rem = (function rem(n,d){
var q = cljs.core.quot(n,d);
return (n - (d * q));
});
/**
* Bitwise exclusive or
* @param {...*} var_args
*/
cljs.core.bit_xor = (function() {
var bit_xor = null;
var bit_xor__2 = (function (x,y){
return (x ^ y);
});
var bit_xor__3 = (function() { 
var G__6665__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_xor,(x ^ y),more);
};
var G__6665 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__6666__i = 0, G__6666__a = new Array(arguments.length -  2);
while (G__6666__i < G__6666__a.length) {G__6666__a[G__6666__i] = arguments[G__6666__i + 2]; ++G__6666__i;}
  more = new cljs.core.IndexedSeq(G__6666__a,0);
} 
return G__6665__delegate.call(this,x,y,more);};
G__6665.cljs$lang$maxFixedArity = 2;
G__6665.cljs$lang$applyTo = (function (arglist__6667){
var x = cljs.core.first(arglist__6667);
arglist__6667 = cljs.core.next(arglist__6667);
var y = cljs.core.first(arglist__6667);
var more = cljs.core.rest(arglist__6667);
return G__6665__delegate(x,y,more);
});
G__6665.cljs$core$IFn$_invoke$arity$variadic = G__6665__delegate;
return G__6665;
})()
;
bit_xor = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_xor__2.call(this,x,y);
default:
var G__6668 = null;
if (arguments.length > 2) {
var G__6669__i = 0, G__6669__a = new Array(arguments.length -  2);
while (G__6669__i < G__6669__a.length) {G__6669__a[G__6669__i] = arguments[G__6669__i + 2]; ++G__6669__i;}
G__6668 = new cljs.core.IndexedSeq(G__6669__a,0);
}
return bit_xor__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__6668);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_xor.cljs$lang$maxFixedArity = 2;
bit_xor.cljs$lang$applyTo = bit_xor__3.cljs$lang$applyTo;
bit_xor.cljs$core$IFn$_invoke$arity$2 = bit_xor__2;
bit_xor.cljs$core$IFn$_invoke$arity$variadic = bit_xor__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_xor;
})()
;
/**
* Bitwise and
* @param {...*} var_args
*/
cljs.core.bit_and = (function() {
var bit_and = null;
var bit_and__2 = (function (x,y){
return (x & y);
});
var bit_and__3 = (function() { 
var G__6670__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_and,(x & y),more);
};
var G__6670 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__6671__i = 0, G__6671__a = new Array(arguments.length -  2);
while (G__6671__i < G__6671__a.length) {G__6671__a[G__6671__i] = arguments[G__6671__i + 2]; ++G__6671__i;}
  more = new cljs.core.IndexedSeq(G__6671__a,0);
} 
return G__6670__delegate.call(this,x,y,more);};
G__6670.cljs$lang$maxFixedArity = 2;
G__6670.cljs$lang$applyTo = (function (arglist__6672){
var x = cljs.core.first(arglist__6672);
arglist__6672 = cljs.core.next(arglist__6672);
var y = cljs.core.first(arglist__6672);
var more = cljs.core.rest(arglist__6672);
return G__6670__delegate(x,y,more);
});
G__6670.cljs$core$IFn$_invoke$arity$variadic = G__6670__delegate;
return G__6670;
})()
;
bit_and = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_and__2.call(this,x,y);
default:
var G__6673 = null;
if (arguments.length > 2) {
var G__6674__i = 0, G__6674__a = new Array(arguments.length -  2);
while (G__6674__i < G__6674__a.length) {G__6674__a[G__6674__i] = arguments[G__6674__i + 2]; ++G__6674__i;}
G__6673 = new cljs.core.IndexedSeq(G__6674__a,0);
}
return bit_and__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__6673);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_and.cljs$lang$maxFixedArity = 2;
bit_and.cljs$lang$applyTo = bit_and__3.cljs$lang$applyTo;
bit_and.cljs$core$IFn$_invoke$arity$2 = bit_and__2;
bit_and.cljs$core$IFn$_invoke$arity$variadic = bit_and__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_and;
})()
;
/**
* Bitwise or
* @param {...*} var_args
*/
cljs.core.bit_or = (function() {
var bit_or = null;
var bit_or__2 = (function (x,y){
return (x | y);
});
var bit_or__3 = (function() { 
var G__6675__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_or,(x | y),more);
};
var G__6675 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__6676__i = 0, G__6676__a = new Array(arguments.length -  2);
while (G__6676__i < G__6676__a.length) {G__6676__a[G__6676__i] = arguments[G__6676__i + 2]; ++G__6676__i;}
  more = new cljs.core.IndexedSeq(G__6676__a,0);
} 
return G__6675__delegate.call(this,x,y,more);};
G__6675.cljs$lang$maxFixedArity = 2;
G__6675.cljs$lang$applyTo = (function (arglist__6677){
var x = cljs.core.first(arglist__6677);
arglist__6677 = cljs.core.next(arglist__6677);
var y = cljs.core.first(arglist__6677);
var more = cljs.core.rest(arglist__6677);
return G__6675__delegate(x,y,more);
});
G__6675.cljs$core$IFn$_invoke$arity$variadic = G__6675__delegate;
return G__6675;
})()
;
bit_or = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_or__2.call(this,x,y);
default:
var G__6678 = null;
if (arguments.length > 2) {
var G__6679__i = 0, G__6679__a = new Array(arguments.length -  2);
while (G__6679__i < G__6679__a.length) {G__6679__a[G__6679__i] = arguments[G__6679__i + 2]; ++G__6679__i;}
G__6678 = new cljs.core.IndexedSeq(G__6679__a,0);
}
return bit_or__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__6678);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_or.cljs$lang$maxFixedArity = 2;
bit_or.cljs$lang$applyTo = bit_or__3.cljs$lang$applyTo;
bit_or.cljs$core$IFn$_invoke$arity$2 = bit_or__2;
bit_or.cljs$core$IFn$_invoke$arity$variadic = bit_or__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_or;
})()
;
/**
* Bitwise and
* @param {...*} var_args
*/
cljs.core.bit_and_not = (function() {
var bit_and_not = null;
var bit_and_not__2 = (function (x,y){
return (x & ~y);
});
var bit_and_not__3 = (function() { 
var G__6680__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_and_not,(x & ~y),more);
};
var G__6680 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__6681__i = 0, G__6681__a = new Array(arguments.length -  2);
while (G__6681__i < G__6681__a.length) {G__6681__a[G__6681__i] = arguments[G__6681__i + 2]; ++G__6681__i;}
  more = new cljs.core.IndexedSeq(G__6681__a,0);
} 
return G__6680__delegate.call(this,x,y,more);};
G__6680.cljs$lang$maxFixedArity = 2;
G__6680.cljs$lang$applyTo = (function (arglist__6682){
var x = cljs.core.first(arglist__6682);
arglist__6682 = cljs.core.next(arglist__6682);
var y = cljs.core.first(arglist__6682);
var more = cljs.core.rest(arglist__6682);
return G__6680__delegate(x,y,more);
});
G__6680.cljs$core$IFn$_invoke$arity$variadic = G__6680__delegate;
return G__6680;
})()
;
bit_and_not = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_and_not__2.call(this,x,y);
default:
var G__6683 = null;
if (arguments.length > 2) {
var G__6684__i = 0, G__6684__a = new Array(arguments.length -  2);
while (G__6684__i < G__6684__a.length) {G__6684__a[G__6684__i] = arguments[G__6684__i + 2]; ++G__6684__i;}
G__6683 = new cljs.core.IndexedSeq(G__6684__a,0);
}
return bit_and_not__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__6683);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_and_not.cljs$lang$maxFixedArity = 2;
bit_and_not.cljs$lang$applyTo = bit_and_not__3.cljs$lang$applyTo;
bit_and_not.cljs$core$IFn$_invoke$arity$2 = bit_and_not__2;
bit_and_not.cljs$core$IFn$_invoke$arity$variadic = bit_and_not__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_and_not;
})()
;
/**
* Clear bit at index n
*/
cljs.core.bit_clear = (function bit_clear(x,n){
return (x & ~(1 << n));
});
/**
* Flip bit at index n
*/
cljs.core.bit_flip = (function bit_flip(x,n){
return (x ^ (1 << n));
});
/**
* Bitwise complement
*/
cljs.core.bit_not = (function bit_not(x){
return (~ x);
});
/**
* Set bit at index n
*/
cljs.core.bit_set = (function bit_set(x,n){
return (x | (1 << n));
});
/**
* Test bit at index n
*/
cljs.core.bit_test = (function bit_test(x,n){
return ((x & (1 << n)) != 0);
});
/**
* Bitwise shift left
*/
cljs.core.bit_shift_left = (function bit_shift_left(x,n){
return (x << n);
});
/**
* Bitwise shift right
*/
cljs.core.bit_shift_right = (function bit_shift_right(x,n){
return (x >> n);
});
/**
* DEPRECATED: Bitwise shift right with zero fill
*/
cljs.core.bit_shift_right_zero_fill = (function bit_shift_right_zero_fill(x,n){
return (x >>> n);
});
/**
* Bitwise shift right with zero fill
*/
cljs.core.unsigned_bit_shift_right = (function unsigned_bit_shift_right(x,n){
return (x >>> n);
});
/**
* Counts the number of bits set in n
*/
cljs.core.bit_count = (function bit_count(v){
var v__$1 = (v - ((v >> (1)) & (1431655765)));
var v__$2 = ((v__$1 & (858993459)) + ((v__$1 >> (2)) & (858993459)));
return ((((v__$2 + (v__$2 >> (4))) & (252645135)) * (16843009)) >> (24));
});
/**
* Returns non-nil if nums all have the equivalent
* value, otherwise false. Behavior on non nums is
* undefined.
* @param {...*} var_args
*/
cljs.core._EQ__EQ_ = (function() {
var _EQ__EQ_ = null;
var _EQ__EQ___1 = (function (x){
return true;
});
var _EQ__EQ___2 = (function (x,y){
return cljs.core._equiv(x,y);
});
var _EQ__EQ___3 = (function() { 
var G__6689__delegate = function (x,y,more){
while(true){
if(_EQ__EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
if(cljs.core.next(more)){
var G__6690 = y;
var G__6691 = cljs.core.first(more);
var G__6692 = cljs.core.next(more);
x = G__6690;
y = G__6691;
more = G__6692;
continue;
} else {
return _EQ__EQ_.cljs$core$IFn$_invoke$arity$2(y,cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__6689 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__6693__i = 0, G__6693__a = new Array(arguments.length -  2);
while (G__6693__i < G__6693__a.length) {G__6693__a[G__6693__i] = arguments[G__6693__i + 2]; ++G__6693__i;}
  more = new cljs.core.IndexedSeq(G__6693__a,0);
} 
return G__6689__delegate.call(this,x,y,more);};
G__6689.cljs$lang$maxFixedArity = 2;
G__6689.cljs$lang$applyTo = (function (arglist__6694){
var x = cljs.core.first(arglist__6694);
arglist__6694 = cljs.core.next(arglist__6694);
var y = cljs.core.first(arglist__6694);
var more = cljs.core.rest(arglist__6694);
return G__6689__delegate(x,y,more);
});
G__6689.cljs$core$IFn$_invoke$arity$variadic = G__6689__delegate;
return G__6689;
})()
;
_EQ__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _EQ__EQ___1.call(this,x);
case 2:
return _EQ__EQ___2.call(this,x,y);
default:
var G__6695 = null;
if (arguments.length > 2) {
var G__6696__i = 0, G__6696__a = new Array(arguments.length -  2);
while (G__6696__i < G__6696__a.length) {G__6696__a[G__6696__i] = arguments[G__6696__i + 2]; ++G__6696__i;}
G__6695 = new cljs.core.IndexedSeq(G__6696__a,0);
}
return _EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__6695);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_EQ__EQ_.cljs$lang$maxFixedArity = 2;
_EQ__EQ_.cljs$lang$applyTo = _EQ__EQ___3.cljs$lang$applyTo;
_EQ__EQ_.cljs$core$IFn$_invoke$arity$1 = _EQ__EQ___1;
_EQ__EQ_.cljs$core$IFn$_invoke$arity$2 = _EQ__EQ___2;
_EQ__EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _EQ__EQ_;
})()
;
/**
* Returns true if num is greater than zero, else false
*/
cljs.core.pos_QMARK_ = (function pos_QMARK_(n){
return (n > (0));
});
cljs.core.zero_QMARK_ = (function zero_QMARK_(n){
return (n === (0));
});
/**
* Returns true if num is less than zero, else false
*/
cljs.core.neg_QMARK_ = (function neg_QMARK_(x){
return (x < (0));
});
/**
* Returns the nth next of coll, (seq coll) when n is 0.
*/
cljs.core.nthnext = (function nthnext(coll,n){
var n__$1 = n;
var xs = cljs.core.seq(coll);
while(true){
if((xs) && ((n__$1 > (0)))){
var G__6697 = (n__$1 - (1));
var G__6698 = cljs.core.next(xs);
n__$1 = G__6697;
xs = G__6698;
continue;
} else {
return xs;
}
break;
}
});
/**
* With no args, returns the empty string. With one arg x, returns
* x.toString().  (str nil) returns the empty string. With more than
* one arg, returns the concatenation of the str values of the args.
* @param {...*} var_args
*/
cljs.core.str = (function() {
var str = null;
var str__0 = (function (){
return "";
});
var str__1 = (function (x){
if((x == null)){
return "";
} else {
var G__6702 = x;
return goog.string.buildString(G__6702);
}
});
var str__2 = (function() { 
var G__6703__delegate = function (x,ys){
var sb = (new goog.string.StringBuffer(str.cljs$core$IFn$_invoke$arity$1(x)));
var more = ys;
while(true){
if(cljs.core.truth_(more)){
var G__6704 = sb.append(str.cljs$core$IFn$_invoke$arity$1(cljs.core.first(more)));
var G__6705 = cljs.core.next(more);
sb = G__6704;
more = G__6705;
continue;
} else {
return sb.toString();
}
break;
}
};
var G__6703 = function (x,var_args){
var ys = null;
if (arguments.length > 1) {
var G__6706__i = 0, G__6706__a = new Array(arguments.length -  1);
while (G__6706__i < G__6706__a.length) {G__6706__a[G__6706__i] = arguments[G__6706__i + 1]; ++G__6706__i;}
  ys = new cljs.core.IndexedSeq(G__6706__a,0);
} 
return G__6703__delegate.call(this,x,ys);};
G__6703.cljs$lang$maxFixedArity = 1;
G__6703.cljs$lang$applyTo = (function (arglist__6707){
var x = cljs.core.first(arglist__6707);
var ys = cljs.core.rest(arglist__6707);
return G__6703__delegate(x,ys);
});
G__6703.cljs$core$IFn$_invoke$arity$variadic = G__6703__delegate;
return G__6703;
})()
;
str = function(x,var_args){
var ys = var_args;
switch(arguments.length){
case 0:
return str__0.call(this);
case 1:
return str__1.call(this,x);
default:
var G__6708 = null;
if (arguments.length > 1) {
var G__6709__i = 0, G__6709__a = new Array(arguments.length -  1);
while (G__6709__i < G__6709__a.length) {G__6709__a[G__6709__i] = arguments[G__6709__i + 1]; ++G__6709__i;}
G__6708 = new cljs.core.IndexedSeq(G__6709__a,0);
}
return str__2.cljs$core$IFn$_invoke$arity$variadic(x, G__6708);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
str.cljs$lang$maxFixedArity = 1;
str.cljs$lang$applyTo = str__2.cljs$lang$applyTo;
str.cljs$core$IFn$_invoke$arity$0 = str__0;
str.cljs$core$IFn$_invoke$arity$1 = str__1;
str.cljs$core$IFn$_invoke$arity$variadic = str__2.cljs$core$IFn$_invoke$arity$variadic;
return str;
})()
;
/**
* Returns the substring of s beginning at start inclusive, and ending
* at end (defaults to length of string), exclusive.
*/
cljs.core.subs = (function() {
var subs = null;
var subs__2 = (function (s,start){
return s.substring(start);
});
var subs__3 = (function (s,start,end){
return s.substring(start,end);
});
subs = function(s,start,end){
switch(arguments.length){
case 2:
return subs__2.call(this,s,start);
case 3:
return subs__3.call(this,s,start,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
subs.cljs$core$IFn$_invoke$arity$2 = subs__2;
subs.cljs$core$IFn$_invoke$arity$3 = subs__3;
return subs;
})()
;

/**
* Assumes x is sequential. Returns true if x equals y, otherwise
* returns false.
*/
cljs.core.equiv_sequential = (function equiv_sequential(x,y){
return cljs.core.boolean$(((cljs.core.sequential_QMARK_(y))?(((cljs.core.counted_QMARK_(x)) && (cljs.core.counted_QMARK_(y)) && (!((cljs.core.count(x) === cljs.core.count(y)))))?false:(function (){var xs = cljs.core.seq(x);
var ys = cljs.core.seq(y);
while(true){
if((xs == null)){
return (ys == null);
} else {
if((ys == null)){
return false;
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(xs),cljs.core.first(ys))){
var G__6710 = cljs.core.next(xs);
var G__6711 = cljs.core.next(ys);
xs = G__6710;
ys = G__6711;
continue;
} else {
return false;

}
}
}
break;
}
})()):null));
});
cljs.core.hash_coll = (function hash_coll(coll){
if(cljs.core.seq(coll)){
var res = cljs.core.hash(cljs.core.first(coll));
var s = cljs.core.next(coll);
while(true){
if((s == null)){
return res;
} else {
var G__6712 = cljs.core.hash_combine(res,cljs.core.hash(cljs.core.first(s)));
var G__6713 = cljs.core.next(s);
res = G__6712;
s = G__6713;
continue;
}
break;
}
} else {
return (0);
}
});

cljs.core.hash_imap = (function hash_imap(m){
var h = (0);
var s = cljs.core.seq(m);
while(true){
if(s){
var e = cljs.core.first(s);
var G__6718 = ((h + (cljs.core.hash((function (){var G__6716 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__6716) : cljs.core.key.call(null,G__6716));
})()) ^ cljs.core.hash((function (){var G__6717 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__6717) : cljs.core.val.call(null,G__6717));
})()))) % (4503599627370496));
var G__6719 = cljs.core.next(s);
h = G__6718;
s = G__6719;
continue;
} else {
return h;
}
break;
}
});
cljs.core.hash_iset = (function hash_iset(s){
var h = (0);
var s__$1 = cljs.core.seq(s);
while(true){
if(s__$1){
var e = cljs.core.first(s__$1);
var G__6720 = ((h + cljs.core.hash(e)) % (4503599627370496));
var G__6721 = cljs.core.next(s__$1);
h = G__6720;
s__$1 = G__6721;
continue;
} else {
return h;
}
break;
}
});


/**
* Takes a JavaScript object and a map of names to functions and
* attaches said functions as methods on the object.  Any references to
* JavaScript's implicit this (via the this-as macro) will resolve to the
* object that the function is attached.
*/
cljs.core.extend_object_BANG_ = (function extend_object_BANG_(obj,fn_map){
var seq__6732_6742 = cljs.core.seq(fn_map);
var chunk__6733_6743 = null;
var count__6734_6744 = (0);
var i__6735_6745 = (0);
while(true){
if((i__6735_6745 < count__6734_6744)){
var vec__6736_6746 = chunk__6733_6743.cljs$core$IIndexed$_nth$arity$2(null,i__6735_6745);
var key_name_6747 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__6736_6746,(0),null);
var f_6748 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__6736_6746,(1),null);
var str_name_6749 = (function (){var G__6737 = key_name_6747;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__6737) : cljs.core.name.call(null,G__6737));
})();
(obj[str_name_6749] = f_6748);

var G__6750 = seq__6732_6742;
var G__6751 = chunk__6733_6743;
var G__6752 = count__6734_6744;
var G__6753 = (i__6735_6745 + (1));
seq__6732_6742 = G__6750;
chunk__6733_6743 = G__6751;
count__6734_6744 = G__6752;
i__6735_6745 = G__6753;
continue;
} else {
var temp__4126__auto___6754 = cljs.core.seq(seq__6732_6742);
if(temp__4126__auto___6754){
var seq__6732_6755__$1 = temp__4126__auto___6754;
if(cljs.core.chunked_seq_QMARK_(seq__6732_6755__$1)){
var c__4519__auto___6756 = (function (){var G__6738 = seq__6732_6755__$1;
return (cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1(G__6738) : cljs.core.chunk_first.call(null,G__6738));
})();
var G__6757 = (function (){var G__6739 = seq__6732_6755__$1;
return (cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1(G__6739) : cljs.core.chunk_rest.call(null,G__6739));
})();
var G__6758 = c__4519__auto___6756;
var G__6759 = cljs.core.count(c__4519__auto___6756);
var G__6760 = (0);
seq__6732_6742 = G__6757;
chunk__6733_6743 = G__6758;
count__6734_6744 = G__6759;
i__6735_6745 = G__6760;
continue;
} else {
var vec__6740_6761 = cljs.core.first(seq__6732_6755__$1);
var key_name_6762 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__6740_6761,(0),null);
var f_6763 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__6740_6761,(1),null);
var str_name_6764 = (function (){var G__6741 = key_name_6762;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__6741) : cljs.core.name.call(null,G__6741));
})();
(obj[str_name_6764] = f_6763);

var G__6765 = cljs.core.next(seq__6732_6755__$1);
var G__6766 = null;
var G__6767 = (0);
var G__6768 = (0);
seq__6732_6742 = G__6765;
chunk__6733_6743 = G__6766;
count__6734_6744 = G__6767;
i__6735_6745 = G__6768;
continue;
}
} else {
}
}
break;
}

return obj;
});

/**
* @constructor
*/
cljs.core.List = (function (meta,first,rest,count,__hash){
this.meta = meta;
this.first = first;
this.rest = rest;
this.count = count;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 65937646;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.List.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.List.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.List.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.List.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.List(self__.meta,self__.first,self__.rest,self__.count,self__.__hash));
});

cljs.core.List.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.count === (1))){
return null;
} else {
return self__.rest;
}
});

cljs.core.List.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.count;
});

cljs.core.List.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.List.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._rest(coll__$1);
});

cljs.core.List.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4153__auto__ = self__.__hash;
if(!((h__4153__auto__ == null))){
return h__4153__auto__;
} else {
var h__4153__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4153__auto____$1;

return h__4153__auto____$1;
}
});

cljs.core.List.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.List.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.List.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.List.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.count === (1))){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.List.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.List.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(meta__$1,self__.first,self__.rest,self__.count,self__.__hash));
});

cljs.core.List.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(self__.meta,o,coll__$1,(self__.count + (1)),null));
});

cljs.core.List.cljs$lang$type = true;

cljs.core.List.cljs$lang$ctorStr = "cljs.core/List";

cljs.core.List.cljs$lang$ctorPrWriter = (function (this__4319__auto__,writer__4320__auto__,opt__4321__auto__){
return cljs.core._write(writer__4320__auto__,"cljs.core/List");
});

cljs.core.__GT_List = (function __GT_List(meta,first,rest,count,__hash){
return (new cljs.core.List(meta,first,rest,count,__hash));
});

(cljs.core.List.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4710__auto__ = this;
return cljs.core.es6_iterator(this__4710__auto__);
}));

/**
* @constructor
*/
cljs.core.EmptyList = (function (meta){
this.meta = meta;
this.cljs$lang$protocol_mask$partition0$ = 65937614;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.EmptyList.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.EmptyList.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.EmptyList.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.EmptyList.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.EmptyList(self__.meta));
});

cljs.core.EmptyList.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (0);
});

cljs.core.EmptyList.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
throw (new Error("Can't pop empty list"));
});

cljs.core.EmptyList.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.empty_ordered_hash;
});

cljs.core.EmptyList.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.EmptyList.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.EmptyList.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.EmptyList(meta__$1));
});

cljs.core.EmptyList.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(self__.meta,o,null,(1),null));
});

cljs.core.EmptyList.cljs$lang$type = true;

cljs.core.EmptyList.cljs$lang$ctorStr = "cljs.core/EmptyList";

cljs.core.EmptyList.cljs$lang$ctorPrWriter = (function (this__4319__auto__,writer__4320__auto__,opt__4321__auto__){
return cljs.core._write(writer__4320__auto__,"cljs.core/EmptyList");
});

cljs.core.__GT_EmptyList = (function __GT_EmptyList(meta){
return (new cljs.core.EmptyList(meta));
});

cljs.core.List.EMPTY = (new cljs.core.EmptyList(null));
(cljs.core.EmptyList.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4710__auto__ = this;
return cljs.core.es6_iterator(this__4710__auto__);
}));
cljs.core.reversible_QMARK_ = (function reversible_QMARK_(coll){
var G__6770 = coll;
if(G__6770){
var bit__4413__auto__ = (G__6770.cljs$lang$protocol_mask$partition0$ & (134217728));
if((bit__4413__auto__) || (G__6770.cljs$core$IReversible$)){
return true;
} else {
if((!G__6770.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible,G__6770);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible,G__6770);
}
});
cljs.core.rseq = (function rseq(coll){
return cljs.core._rseq(coll);
});
/**
* Returns a seq of the items in coll in reverse order. Not lazy.
*/
cljs.core.reverse = (function reverse(coll){
if(cljs.core.reversible_QMARK_(coll)){
return cljs.core.rseq(coll);
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.List.EMPTY,coll);
}
});
/**
* @param {...*} var_args
*/
cljs.core.list = (function() { 
var list__delegate = function (xs){
var arr = ((((xs instanceof cljs.core.IndexedSeq)) && ((xs.i === (0))))?xs.arr:(function (){var arr = [];
var xs__$1 = xs;
while(true){
if(!((xs__$1 == null))){
arr.push(xs__$1.cljs$core$ISeq$_first$arity$1(null));

var G__6771 = xs__$1.cljs$core$INext$_next$arity$1(null);
xs__$1 = G__6771;
continue;
} else {
return arr;
}
break;
}
})());
var i = arr.length;
var r = cljs.core.List.EMPTY;
while(true){
if((i > (0))){
var G__6772 = (i - (1));
var G__6773 = r.cljs$core$ICollection$_conj$arity$2(null,(arr[(i - (1))]));
i = G__6772;
r = G__6773;
continue;
} else {
return r;
}
break;
}
};
var list = function (var_args){
var xs = null;
if (arguments.length > 0) {
var G__6774__i = 0, G__6774__a = new Array(arguments.length -  0);
while (G__6774__i < G__6774__a.length) {G__6774__a[G__6774__i] = arguments[G__6774__i + 0]; ++G__6774__i;}
  xs = new cljs.core.IndexedSeq(G__6774__a,0);
} 
return list__delegate.call(this,xs);};
list.cljs$lang$maxFixedArity = 0;
list.cljs$lang$applyTo = (function (arglist__6775){
var xs = cljs.core.seq(arglist__6775);
return list__delegate(xs);
});
list.cljs$core$IFn$_invoke$arity$variadic = list__delegate;
return list;
})()
;

/**
* @constructor
*/
cljs.core.Cons = (function (meta,first,rest,__hash){
this.meta = meta;
this.first = first;
this.rest = rest;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 65929452;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Cons.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Cons.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Cons.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.Cons.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Cons(self__.meta,self__.first,self__.rest,self__.__hash));
});

cljs.core.Cons.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.rest == null)){
return null;
} else {
return cljs.core.seq(self__.rest);
}
});

cljs.core.Cons.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4153__auto__ = self__.__hash;
if(!((h__4153__auto__ == null))){
return h__4153__auto__;
} else {
var h__4153__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4153__auto____$1;

return h__4153__auto____$1;
}
});

cljs.core.Cons.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.Cons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.Cons.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.Cons.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.rest == null)){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.Cons.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.Cons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.Cons(meta__$1,self__.first,self__.rest,self__.__hash));
});

cljs.core.Cons.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.Cons(null,o,coll__$1,self__.__hash));
});

cljs.core.Cons.cljs$lang$type = true;

cljs.core.Cons.cljs$lang$ctorStr = "cljs.core/Cons";

cljs.core.Cons.cljs$lang$ctorPrWriter = (function (this__4319__auto__,writer__4320__auto__,opt__4321__auto__){
return cljs.core._write(writer__4320__auto__,"cljs.core/Cons");
});

cljs.core.__GT_Cons = (function __GT_Cons(meta,first,rest,__hash){
return (new cljs.core.Cons(meta,first,rest,__hash));
});

(cljs.core.Cons.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4710__auto__ = this;
return cljs.core.es6_iterator(this__4710__auto__);
}));
/**
* Returns a new seq where x is the first element and seq is the rest.
*/
cljs.core.cons = (function cons(x,coll){
if((function (){var or__3732__auto__ = (coll == null);
if(or__3732__auto__){
return or__3732__auto__;
} else {
var G__6779 = coll;
if(G__6779){
var bit__4406__auto__ = (G__6779.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__4406__auto__) || (G__6779.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
}
})()){
return (new cljs.core.Cons(null,x,coll,null));
} else {
return (new cljs.core.Cons(null,x,cljs.core.seq(coll),null));
}
});
cljs.core.list_QMARK_ = (function list_QMARK_(x){
var G__6781 = x;
if(G__6781){
var bit__4413__auto__ = (G__6781.cljs$lang$protocol_mask$partition0$ & (33554432));
if((bit__4413__auto__) || (G__6781.cljs$core$IList$)){
return true;
} else {
if((!G__6781.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IList,G__6781);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IList,G__6781);
}
});
cljs.core.hash_keyword = (function hash_keyword(k){
return ((cljs.core.hash_symbol(k) + (2654435769)) | (0));
});
cljs.core.compare_keywords = (function compare_keywords(a,b){
if((a.fqn === b.fqn)){
return (0);
} else {
if(cljs.core.truth_((function (){var and__3720__auto__ = cljs.core.not(a.ns);
if(and__3720__auto__){
return b.ns;
} else {
return and__3720__auto__;
}
})())){
return (-1);
} else {
if(cljs.core.truth_(a.ns)){
if(cljs.core.not(b.ns)){
return (1);
} else {
var nsc = (function (){var G__6788 = a.ns;
var G__6789 = b.ns;
return goog.array.defaultCompare(G__6788,G__6789);
})();
if(((0) === nsc)){
var G__6790 = a.name;
var G__6791 = b.name;
return goog.array.defaultCompare(G__6790,G__6791);
} else {
return nsc;
}
}
} else {
var G__6792 = a.name;
var G__6793 = b.name;
return goog.array.defaultCompare(G__6792,G__6793);

}
}
}
});

/**
* @constructor
*/
cljs.core.Keyword = (function (ns,name,fqn,_hash){
this.ns = ns;
this.name = name;
this.fqn = fqn;
this._hash = _hash;
this.cljs$lang$protocol_mask$partition0$ = 2153775105;
this.cljs$lang$protocol_mask$partition1$ = 4096;
})
cljs.core.Keyword.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (o,writer,_){
var self__ = this;
var o__$1 = this;
return cljs.core._write(writer,[cljs.core.str(":"),cljs.core.str(self__.fqn)].join(''));
});

cljs.core.Keyword.prototype.cljs$core$INamed$_name$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.name;
});

cljs.core.Keyword.prototype.cljs$core$INamed$_namespace$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.ns;
});

cljs.core.Keyword.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var h__4153__auto__ = self__._hash;
if(!((h__4153__auto__ == null))){
return h__4153__auto__;
} else {
var h__4153__auto____$1 = cljs.core.hash_keyword(this$__$1);
self__._hash = h__4153__auto____$1;

return h__4153__auto____$1;
}
});

cljs.core.Keyword.prototype.call = (function() {
var G__6795 = null;
var G__6795__2 = (function (self__,coll){
var self__ = this;
var self____$1 = this;
var kw = self____$1;
return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,kw);
});
var G__6795__3 = (function (self__,coll,not_found){
var self__ = this;
var self____$1 = this;
var kw = self____$1;
return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,kw,not_found);
});
G__6795 = function(self__,coll,not_found){
switch(arguments.length){
case 2:
return G__6795__2.call(this,self__,coll);
case 3:
return G__6795__3.call(this,self__,coll,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__6795.cljs$core$IFn$_invoke$arity$2 = G__6795__2;
G__6795.cljs$core$IFn$_invoke$arity$3 = G__6795__3;
return G__6795;
})()
;

cljs.core.Keyword.prototype.apply = (function (self__,args6794){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args6794)));
});

cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$1 = (function (coll){
var self__ = this;
var kw = this;
return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,kw);
});

cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$2 = (function (coll,not_found){
var self__ = this;
var kw = this;
return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,kw,not_found);
});

cljs.core.Keyword.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
if((other instanceof cljs.core.Keyword)){
return (self__.fqn === other.fqn);
} else {
return false;
}
});

cljs.core.Keyword.prototype.toString = (function (){
var self__ = this;
var _ = this;
return [cljs.core.str(":"),cljs.core.str(self__.fqn)].join('');
});

cljs.core.Keyword.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Keyword.cljs$lang$type = true;

cljs.core.Keyword.cljs$lang$ctorStr = "cljs.core/Keyword";

cljs.core.Keyword.cljs$lang$ctorPrWriter = (function (this__4319__auto__,writer__4320__auto__,opt__4321__auto__){
return cljs.core._write(writer__4320__auto__,"cljs.core/Keyword");
});

cljs.core.__GT_Keyword = (function __GT_Keyword(ns,name,fqn,_hash){
return (new cljs.core.Keyword(ns,name,fqn,_hash));
});

cljs.core.keyword_QMARK_ = (function keyword_QMARK_(x){
return (x instanceof cljs.core.Keyword);
});
cljs.core.keyword_identical_QMARK_ = (function keyword_identical_QMARK_(x,y){
if((x === y)){
return true;
} else {
if(((x instanceof cljs.core.Keyword)) && ((y instanceof cljs.core.Keyword))){
return (x.fqn === y.fqn);
} else {
return false;
}
}
});
/**
* Returns the namespace String of a symbol or keyword, or nil if not present.
*/
cljs.core.namespace = (function namespace(x){
if((function (){var G__6797 = x;
if(G__6797){
var bit__4406__auto__ = (G__6797.cljs$lang$protocol_mask$partition1$ & (4096));
if((bit__4406__auto__) || (G__6797.cljs$core$INamed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$INamed$_namespace$arity$1(null);
} else {
throw (new Error([cljs.core.str("Doesn't support namespace: "),cljs.core.str(x)].join('')));
}
});
/**
* Returns a Keyword with the given namespace and name.  Do not use :
* in the keyword strings, it will be added automatically.
*/
cljs.core.keyword = (function() {
var keyword = null;
var keyword__1 = (function (name){
if((name instanceof cljs.core.Keyword)){
return name;
} else {
if((name instanceof cljs.core.Symbol)){
return (new cljs.core.Keyword(cljs.core.namespace(name),(function (){var G__6799 = name;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__6799) : cljs.core.name.call(null,G__6799));
})(),name.str,null));
} else {
if(typeof name === 'string'){
var parts = name.split("/");
if((parts.length === (2))){
return (new cljs.core.Keyword((parts[(0)]),(parts[(1)]),name,null));
} else {
return (new cljs.core.Keyword(null,(parts[(0)]),name,null));
}
} else {
return null;
}
}
}
});
var keyword__2 = (function (ns,name){
return (new cljs.core.Keyword(ns,name,[cljs.core.str((cljs.core.truth_(ns)?[cljs.core.str(ns),cljs.core.str("/")].join(''):null)),cljs.core.str(name)].join(''),null));
});
keyword = function(ns,name){
switch(arguments.length){
case 1:
return keyword__1.call(this,ns);
case 2:
return keyword__2.call(this,ns,name);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
keyword.cljs$core$IFn$_invoke$arity$1 = keyword__1;
keyword.cljs$core$IFn$_invoke$arity$2 = keyword__2;
return keyword;
})()
;

/**
* @constructor
*/
cljs.core.LazySeq = (function (meta,fn,s,__hash){
this.meta = meta;
this.fn = fn;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
})
cljs.core.LazySeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.LazySeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.LazySeq.prototype.sval = (function (){
var self__ = this;
var coll = this;
if((self__.fn == null)){
return self__.s;
} else {
self__.s = (function (){return (self__.fn.cljs$core$IFn$_invoke$arity$0 ? self__.fn.cljs$core$IFn$_invoke$arity$0() : self__.fn.call(null));
})();

self__.fn = null;

return self__.s;
}
});

cljs.core.LazySeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.LazySeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if((self__.s == null)){
return null;
} else {
return cljs.core.next(self__.s);
}
});

cljs.core.LazySeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4153__auto__ = self__.__hash;
if(!((h__4153__auto__ == null))){
return h__4153__auto__;
} else {
var h__4153__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4153__auto____$1;

return h__4153__auto____$1;
}
});

cljs.core.LazySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.LazySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if((self__.s == null)){
return null;
} else {
return cljs.core.first(self__.s);
}
});

cljs.core.LazySeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if(!((self__.s == null))){
return cljs.core.rest(self__.s);
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.LazySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
coll__$1.sval();

if((self__.s == null)){
return null;
} else {
var ls = self__.s;
while(true){
if((ls instanceof cljs.core.LazySeq)){
var G__6800 = ls.sval();
ls = G__6800;
continue;
} else {
self__.s = ls;

return cljs.core.seq(self__.s);
}
break;
}
}
});

cljs.core.LazySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.LazySeq(meta__$1,self__.fn,self__.s,self__.__hash));
});

cljs.core.LazySeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.LazySeq.cljs$lang$type = true;

cljs.core.LazySeq.cljs$lang$ctorStr = "cljs.core/LazySeq";

cljs.core.LazySeq.cljs$lang$ctorPrWriter = (function (this__4319__auto__,writer__4320__auto__,opt__4321__auto__){
return cljs.core._write(writer__4320__auto__,"cljs.core/LazySeq");
});

cljs.core.__GT_LazySeq = (function __GT_LazySeq(meta,fn,s,__hash){
return (new cljs.core.LazySeq(meta,fn,s,__hash));
});

(cljs.core.LazySeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4710__auto__ = this;
return cljs.core.es6_iterator(this__4710__auto__);
}));

/**
* @constructor
*/
cljs.core.ChunkBuffer = (function (buf,end){
this.buf = buf;
this.end = end;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2;
})
cljs.core.ChunkBuffer.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.end;
});

cljs.core.ChunkBuffer.prototype.add = (function (o){
var self__ = this;
var _ = this;
(self__.buf[self__.end] = o);

return self__.end = (self__.end + (1));
});

cljs.core.ChunkBuffer.prototype.chunk = (function (o){
var self__ = this;
var _ = this;
var ret = (new cljs.core.ArrayChunk(self__.buf,(0),self__.end));
self__.buf = null;

return ret;
});

cljs.core.ChunkBuffer.cljs$lang$type = true;

cljs.core.ChunkBuffer.cljs$lang$ctorStr = "cljs.core/ChunkBuffer";

cljs.core.ChunkBuffer.cljs$lang$ctorPrWriter = (function (this__4319__auto__,writer__4320__auto__,opt__4321__auto__){
return cljs.core._write(writer__4320__auto__,"cljs.core/ChunkBuffer");
});

cljs.core.__GT_ChunkBuffer = (function __GT_ChunkBuffer(buf,end){
return (new cljs.core.ChunkBuffer(buf,end));
});

cljs.core.chunk_buffer = (function chunk_buffer(capacity){
return (new cljs.core.ChunkBuffer((new Array(capacity)),(0)));
});

/**
* @constructor
*/
cljs.core.ArrayChunk = (function (arr,off,end){
this.arr = arr;
this.off = off;
this.end = end;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 524306;
})
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,(self__.arr[self__.off]),(self__.off + (1)));
});

cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,start,self__.off);
});

cljs.core.ArrayChunk.prototype.cljs$core$IChunk$ = true;

cljs.core.ArrayChunk.prototype.cljs$core$IChunk$_drop_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.off === self__.end)){
throw (new Error("-drop-first of empty chunk"));
} else {
return (new cljs.core.ArrayChunk(self__.arr,(self__.off + (1)),self__.end));
}
});

cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,i){
var self__ = this;
var coll__$1 = this;
return (self__.arr[(self__.off + i)]);
});

cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,i,not_found){
var self__ = this;
var coll__$1 = this;
if(((i >= (0))) && ((i < (self__.end - self__.off)))){
return (self__.arr[(self__.off + i)]);
} else {
return not_found;
}
});

cljs.core.ArrayChunk.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.end - self__.off);
});

cljs.core.ArrayChunk.cljs$lang$type = true;

cljs.core.ArrayChunk.cljs$lang$ctorStr = "cljs.core/ArrayChunk";

cljs.core.ArrayChunk.cljs$lang$ctorPrWriter = (function (this__4319__auto__,writer__4320__auto__,opt__4321__auto__){
return cljs.core._write(writer__4320__auto__,"cljs.core/ArrayChunk");
});

cljs.core.__GT_ArrayChunk = (function __GT_ArrayChunk(arr,off,end){
return (new cljs.core.ArrayChunk(arr,off,end));
});

cljs.core.array_chunk = (function() {
var array_chunk = null;
var array_chunk__1 = (function (arr){
return (new cljs.core.ArrayChunk(arr,(0),arr.length));
});
var array_chunk__2 = (function (arr,off){
return (new cljs.core.ArrayChunk(arr,off,arr.length));
});
var array_chunk__3 = (function (arr,off,end){
return (new cljs.core.ArrayChunk(arr,off,end));
});
array_chunk = function(arr,off,end){
switch(arguments.length){
case 1:
return array_chunk__1.call(this,arr);
case 2:
return array_chunk__2.call(this,arr,off);
case 3:
return array_chunk__3.call(this,arr,off,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
array_chunk.cljs$core$IFn$_invoke$arity$1 = array_chunk__1;
array_chunk.cljs$core$IFn$_invoke$arity$2 = array_chunk__2;
array_chunk.cljs$core$IFn$_invoke$arity$3 = array_chunk__3;
return array_chunk;
})()
;

/**
* @constructor
*/
cljs.core.ChunkedCons = (function (chunk,more,meta,__hash){
this.chunk = chunk;
this.more = more;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 31850732;
this.cljs$lang$protocol_mask$partition1$ = 1536;
})
cljs.core.ChunkedCons.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ChunkedCons.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ChunkedCons.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ChunkedCons.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core._count(self__.chunk) > (1))){
return (new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk),self__.more,self__.meta,null));
} else {
var more__$1 = cljs.core._seq(self__.more);
if((more__$1 == null)){
return null;
} else {
return more__$1;
}
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4153__auto__ = self__.__hash;
if(!((h__4153__auto__ == null))){
return h__4153__auto__;
} else {
var h__4153__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4153__auto____$1;

return h__4153__auto____$1;
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ChunkedCons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.chunk,(0));
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core._count(self__.chunk) > (1))){
return (new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk),self__.more,self__.meta,null));
} else {
if((self__.more == null)){
return cljs.core.List.EMPTY;
} else {
return self__.more;
}
}
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.chunk;
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.more == null)){
return cljs.core.List.EMPTY;
} else {
return self__.more;
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,m){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ChunkedCons(self__.chunk,self__.more,m,self__.__hash));
});

cljs.core.ChunkedCons.prototype.cljs$core$ICollection$_conj$arity$2 = (function (this$,o){
var self__ = this;
var this$__$1 = this;
return cljs.core.cons(o,this$__$1);
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.more == null)){
return null;
} else {
return self__.more;
}
});

cljs.core.ChunkedCons.cljs$lang$type = true;

cljs.core.ChunkedCons.cljs$lang$ctorStr = "cljs.core/ChunkedCons";

cljs.core.ChunkedCons.cljs$lang$ctorPrWriter = (function (this__4319__auto__,writer__4320__auto__,opt__4321__auto__){
return cljs.core._write(writer__4320__auto__,"cljs.core/ChunkedCons");
});

cljs.core.__GT_ChunkedCons = (function __GT_ChunkedCons(chunk,more,meta,__hash){
return (new cljs.core.ChunkedCons(chunk,more,meta,__hash));
});

(cljs.core.ChunkedCons.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4710__auto__ = this;
return cljs.core.es6_iterator(this__4710__auto__);
}));
cljs.core.chunk_cons = (function chunk_cons(chunk,rest){
if((cljs.core._count(chunk) === (0))){
return rest;
} else {
return (new cljs.core.ChunkedCons(chunk,rest,null,null));
}
});
cljs.core.chunk_append = (function chunk_append(b,x){
return b.add(x);
});
cljs.core.chunk = (function chunk(b){
return b.chunk();
});
cljs.core.chunk_first = (function chunk_first(s){
return cljs.core._chunked_first(s);
});
cljs.core.chunk_rest = (function chunk_rest(s){
return cljs.core._chunked_rest(s);
});
cljs.core.chunk_next = (function chunk_next(s){
if((function (){var G__6802 = s;
if(G__6802){
var bit__4406__auto__ = (G__6802.cljs$lang$protocol_mask$partition1$ & (1024));
if((bit__4406__auto__) || (G__6802.cljs$core$IChunkedNext$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core._chunked_next(s);
} else {
return cljs.core.seq(cljs.core._chunked_rest(s));
}
});
/**
* Naive impl of to-array as a start.
*/
cljs.core.to_array = (function to_array(s){
var ary = [];
var s__$1 = s;
while(true){
if(cljs.core.seq(s__$1)){
ary.push(cljs.core.first(s__$1));

var G__6803 = cljs.core.next(s__$1);
s__$1 = G__6803;
continue;
} else {
return ary;
}
break;
}
});
/**
* Returns a (potentially-ragged) 2-dimensional array
* containing the contents of coll.
*/
cljs.core.to_array_2d = (function to_array_2d(coll){
var ret = (new Array(cljs.core.count(coll)));
var i_6804 = (0);
var xs_6805 = cljs.core.seq(coll);
while(true){
if(xs_6805){
(ret[i_6804] = cljs.core.to_array(cljs.core.first(xs_6805)));

var G__6806 = (i_6804 + (1));
var G__6807 = cljs.core.next(xs_6805);
i_6804 = G__6806;
xs_6805 = G__6807;
continue;
} else {
}
break;
}

return ret;
});
cljs.core.int_array = (function() {
var int_array = null;
var int_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return int_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var int_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__6810 = (i + (1));
var G__6811 = cljs.core.next(s__$1);
i = G__6810;
s__$1 = G__6811;
continue;
} else {
return a;
}
break;
}
} else {
var n__4619__auto___6812 = size;
var i_6813 = (0);
while(true){
if((i_6813 < n__4619__auto___6812)){
(a[i_6813] = init_val_or_seq);

var G__6814 = (i_6813 + (1));
i_6813 = G__6814;
continue;
} else {
}
break;
}

return a;
}
});
int_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return int_array__1.call(this,size);
case 2:
return int_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
int_array.cljs$core$IFn$_invoke$arity$1 = int_array__1;
int_array.cljs$core$IFn$_invoke$arity$2 = int_array__2;
return int_array;
})()
;
cljs.core.long_array = (function() {
var long_array = null;
var long_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return long_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var long_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__6817 = (i + (1));
var G__6818 = cljs.core.next(s__$1);
i = G__6817;
s__$1 = G__6818;
continue;
} else {
return a;
}
break;
}
} else {
var n__4619__auto___6819 = size;
var i_6820 = (0);
while(true){
if((i_6820 < n__4619__auto___6819)){
(a[i_6820] = init_val_or_seq);

var G__6821 = (i_6820 + (1));
i_6820 = G__6821;
continue;
} else {
}
break;
}

return a;
}
});
long_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return long_array__1.call(this,size);
case 2:
return long_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
long_array.cljs$core$IFn$_invoke$arity$1 = long_array__1;
long_array.cljs$core$IFn$_invoke$arity$2 = long_array__2;
return long_array;
})()
;
cljs.core.double_array = (function() {
var double_array = null;
var double_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return double_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var double_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__6824 = (i + (1));
var G__6825 = cljs.core.next(s__$1);
i = G__6824;
s__$1 = G__6825;
continue;
} else {
return a;
}
break;
}
} else {
var n__4619__auto___6826 = size;
var i_6827 = (0);
while(true){
if((i_6827 < n__4619__auto___6826)){
(a[i_6827] = init_val_or_seq);

var G__6828 = (i_6827 + (1));
i_6827 = G__6828;
continue;
} else {
}
break;
}

return a;
}
});
double_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return double_array__1.call(this,size);
case 2:
return double_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
double_array.cljs$core$IFn$_invoke$arity$1 = double_array__1;
double_array.cljs$core$IFn$_invoke$arity$2 = double_array__2;
return double_array;
})()
;
cljs.core.object_array = (function() {
var object_array = null;
var object_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return object_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var object_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__6831 = (i + (1));
var G__6832 = cljs.core.next(s__$1);
i = G__6831;
s__$1 = G__6832;
continue;
} else {
return a;
}
break;
}
} else {
var n__4619__auto___6833 = size;
var i_6834 = (0);
while(true){
if((i_6834 < n__4619__auto___6833)){
(a[i_6834] = init_val_or_seq);

var G__6835 = (i_6834 + (1));
i_6834 = G__6835;
continue;
} else {
}
break;
}

return a;
}
});
object_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return object_array__1.call(this,size);
case 2:
return object_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
object_array.cljs$core$IFn$_invoke$arity$1 = object_array__1;
object_array.cljs$core$IFn$_invoke$arity$2 = object_array__2;
return object_array;
})()
;
cljs.core.bounded_count = (function bounded_count(s,n){
if(cljs.core.counted_QMARK_(s)){
return cljs.core.count(s);
} else {
var s__$1 = s;
var i = n;
var sum = (0);
while(true){
if(((i > (0))) && (cljs.core.seq(s__$1))){
var G__6836 = cljs.core.next(s__$1);
var G__6837 = (i - (1));
var G__6838 = (sum + (1));
s__$1 = G__6836;
i = G__6837;
sum = G__6838;
continue;
} else {
return sum;
}
break;
}
}
});
cljs.core.spread = (function spread(arglist){
if((arglist == null)){
return null;
} else {
if((cljs.core.next(arglist) == null)){
return cljs.core.seq(cljs.core.first(arglist));
} else {
return cljs.core.cons(cljs.core.first(arglist),spread(cljs.core.next(arglist)));

}
}
});
/**
* Returns a lazy seq representing the concatenation of the elements in the supplied colls.
* @param {...*} var_args
*/
cljs.core.concat = (function() {
var concat = null;
var concat__0 = (function (){
return (new cljs.core.LazySeq(null,(function (){
return null;
}),null,null));
});
var concat__1 = (function (x){
return (new cljs.core.LazySeq(null,(function (){
return x;
}),null,null));
});
var concat__2 = (function (x,y){
return (new cljs.core.LazySeq(null,(function (){
var s = cljs.core.seq(x);
if(s){
if(cljs.core.chunked_seq_QMARK_(s)){
return cljs.core.chunk_cons(cljs.core.chunk_first(s),concat.cljs$core$IFn$_invoke$arity$2(cljs.core.chunk_rest(s),y));
} else {
return cljs.core.cons(cljs.core.first(s),concat.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s),y));
}
} else {
return y;
}
}),null,null));
});
var concat__3 = (function() { 
var G__6858__delegate = function (x,y,zs){
var cat = (function cat(xys,zs__$1){
return (new cljs.core.LazySeq(null,(function (){
var xys__$1 = cljs.core.seq(xys);
if(xys__$1){
if(cljs.core.chunked_seq_QMARK_(xys__$1)){
return cljs.core.chunk_cons(cljs.core.chunk_first(xys__$1),cat(cljs.core.chunk_rest(xys__$1),zs__$1));
} else {
return cljs.core.cons(cljs.core.first(xys__$1),cat(cljs.core.rest(xys__$1),zs__$1));
}
} else {
if(cljs.core.truth_(zs__$1)){
return cat(cljs.core.first(zs__$1),cljs.core.next(zs__$1));
} else {
return null;
}
}
}),null,null));
});
return cat(concat.cljs$core$IFn$_invoke$arity$2(x,y),zs);
};
var G__6858 = function (x,y,var_args){
var zs = null;
if (arguments.length > 2) {
var G__6859__i = 0, G__6859__a = new Array(arguments.length -  2);
while (G__6859__i < G__6859__a.length) {G__6859__a[G__6859__i] = arguments[G__6859__i + 2]; ++G__6859__i;}
  zs = new cljs.core.IndexedSeq(G__6859__a,0);
} 
return G__6858__delegate.call(this,x,y,zs);};
G__6858.cljs$lang$maxFixedArity = 2;
G__6858.cljs$lang$applyTo = (function (arglist__6860){
var x = cljs.core.first(arglist__6860);
arglist__6860 = cljs.core.next(arglist__6860);
var y = cljs.core.first(arglist__6860);
var zs = cljs.core.rest(arglist__6860);
return G__6858__delegate(x,y,zs);
});
G__6858.cljs$core$IFn$_invoke$arity$variadic = G__6858__delegate;
return G__6858;
})()
;
concat = function(x,y,var_args){
var zs = var_args;
switch(arguments.length){
case 0:
return concat__0.call(this);
case 1:
return concat__1.call(this,x);
case 2:
return concat__2.call(this,x,y);
default:
var G__6861 = null;
if (arguments.length > 2) {
var G__6862__i = 0, G__6862__a = new Array(arguments.length -  2);
while (G__6862__i < G__6862__a.length) {G__6862__a[G__6862__i] = arguments[G__6862__i + 2]; ++G__6862__i;}
G__6861 = new cljs.core.IndexedSeq(G__6862__a,0);
}
return concat__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__6861);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
concat.cljs$lang$maxFixedArity = 2;
concat.cljs$lang$applyTo = concat__3.cljs$lang$applyTo;
concat.cljs$core$IFn$_invoke$arity$0 = concat__0;
concat.cljs$core$IFn$_invoke$arity$1 = concat__1;
concat.cljs$core$IFn$_invoke$arity$2 = concat__2;
concat.cljs$core$IFn$_invoke$arity$variadic = concat__3.cljs$core$IFn$_invoke$arity$variadic;
return concat;
})()
;
/**
* Creates a new list containing the items prepended to the rest, the
* last of which will be treated as a sequence.
* @param {...*} var_args
*/
cljs.core.list_STAR_ = (function() {
var list_STAR_ = null;
var list_STAR___1 = (function (args){
return cljs.core.seq(args);
});
var list_STAR___2 = (function (a,args){
return cljs.core.cons(a,args);
});
var list_STAR___3 = (function (a,b,args){
return cljs.core.cons(a,cljs.core.cons(b,args));
});
var list_STAR___4 = (function (a,b,c,args){
return cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,args)));
});
var list_STAR___5 = (function() { 
var G__6863__delegate = function (a,b,c,d,more){
return cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,cljs.core.cons(d,cljs.core.spread(more)))));
};
var G__6863 = function (a,b,c,d,var_args){
var more = null;
if (arguments.length > 4) {
var G__6864__i = 0, G__6864__a = new Array(arguments.length -  4);
while (G__6864__i < G__6864__a.length) {G__6864__a[G__6864__i] = arguments[G__6864__i + 4]; ++G__6864__i;}
  more = new cljs.core.IndexedSeq(G__6864__a,0);
} 
return G__6863__delegate.call(this,a,b,c,d,more);};
G__6863.cljs$lang$maxFixedArity = 4;
G__6863.cljs$lang$applyTo = (function (arglist__6865){
var a = cljs.core.first(arglist__6865);
arglist__6865 = cljs.core.next(arglist__6865);
var b = cljs.core.first(arglist__6865);
arglist__6865 = cljs.core.next(arglist__6865);
var c = cljs.core.first(arglist__6865);
arglist__6865 = cljs.core.next(arglist__6865);
var d = cljs.core.first(arglist__6865);
var more = cljs.core.rest(arglist__6865);
return G__6863__delegate(a,b,c,d,more);
});
G__6863.cljs$core$IFn$_invoke$arity$variadic = G__6863__delegate;
return G__6863;
})()
;
list_STAR_ = function(a,b,c,d,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return list_STAR___1.call(this,a);
case 2:
return list_STAR___2.call(this,a,b);
case 3:
return list_STAR___3.call(this,a,b,c);
case 4:
return list_STAR___4.call(this,a,b,c,d);
default:
var G__6866 = null;
if (arguments.length > 4) {
var G__6867__i = 0, G__6867__a = new Array(arguments.length -  4);
while (G__6867__i < G__6867__a.length) {G__6867__a[G__6867__i] = arguments[G__6867__i + 4]; ++G__6867__i;}
G__6866 = new cljs.core.IndexedSeq(G__6867__a,0);
}
return list_STAR___5.cljs$core$IFn$_invoke$arity$variadic(a,b,c,d, G__6866);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
list_STAR_.cljs$lang$maxFixedArity = 4;
list_STAR_.cljs$lang$applyTo = list_STAR___5.cljs$lang$applyTo;
list_STAR_.cljs$core$IFn$_invoke$arity$1 = list_STAR___1;
list_STAR_.cljs$core$IFn$_invoke$arity$2 = list_STAR___2;
list_STAR_.cljs$core$IFn$_invoke$arity$3 = list_STAR___3;
list_STAR_.cljs$core$IFn$_invoke$arity$4 = list_STAR___4;
list_STAR_.cljs$core$IFn$_invoke$arity$variadic = list_STAR___5.cljs$core$IFn$_invoke$arity$variadic;
return list_STAR_;
})()
;
/**
* Returns a new, transient version of the collection, in constant time.
*/
cljs.core.transient$ = (function transient$(coll){
return cljs.core._as_transient(coll);
});
/**
* Returns a new, persistent version of the transient collection, in
* constant time. The transient collection cannot be used after this
* call, any such use will throw an exception.
*/
cljs.core.persistent_BANG_ = (function persistent_BANG_(tcoll){
return cljs.core._persistent_BANG_(tcoll);
});
/**
* Adds x to the transient collection, and return coll. The 'addition'
* may happen at different 'places' depending on the concrete type.
* @param {...*} var_args
*/
cljs.core.conj_BANG_ = (function() {
var conj_BANG_ = null;
var conj_BANG___0 = (function (){
return cljs.core.transient$(cljs.core.PersistentVector.EMPTY);
});
var conj_BANG___1 = (function (coll){
return coll;
});
var conj_BANG___2 = (function (tcoll,val){
return cljs.core._conj_BANG_(tcoll,val);
});
var conj_BANG___3 = (function() { 
var G__6868__delegate = function (tcoll,val,vals){
while(true){
var ntcoll = cljs.core._conj_BANG_(tcoll,val);
if(cljs.core.truth_(vals)){
var G__6869 = ntcoll;
var G__6870 = cljs.core.first(vals);
var G__6871 = cljs.core.next(vals);
tcoll = G__6869;
val = G__6870;
vals = G__6871;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__6868 = function (tcoll,val,var_args){
var vals = null;
if (arguments.length > 2) {
var G__6872__i = 0, G__6872__a = new Array(arguments.length -  2);
while (G__6872__i < G__6872__a.length) {G__6872__a[G__6872__i] = arguments[G__6872__i + 2]; ++G__6872__i;}
  vals = new cljs.core.IndexedSeq(G__6872__a,0);
} 
return G__6868__delegate.call(this,tcoll,val,vals);};
G__6868.cljs$lang$maxFixedArity = 2;
G__6868.cljs$lang$applyTo = (function (arglist__6873){
var tcoll = cljs.core.first(arglist__6873);
arglist__6873 = cljs.core.next(arglist__6873);
var val = cljs.core.first(arglist__6873);
var vals = cljs.core.rest(arglist__6873);
return G__6868__delegate(tcoll,val,vals);
});
G__6868.cljs$core$IFn$_invoke$arity$variadic = G__6868__delegate;
return G__6868;
})()
;
conj_BANG_ = function(tcoll,val,var_args){
var vals = var_args;
switch(arguments.length){
case 0:
return conj_BANG___0.call(this);
case 1:
return conj_BANG___1.call(this,tcoll);
case 2:
return conj_BANG___2.call(this,tcoll,val);
default:
var G__6874 = null;
if (arguments.length > 2) {
var G__6875__i = 0, G__6875__a = new Array(arguments.length -  2);
while (G__6875__i < G__6875__a.length) {G__6875__a[G__6875__i] = arguments[G__6875__i + 2]; ++G__6875__i;}
G__6874 = new cljs.core.IndexedSeq(G__6875__a,0);
}
return conj_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,val, G__6874);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
conj_BANG_.cljs$lang$maxFixedArity = 2;
conj_BANG_.cljs$lang$applyTo = conj_BANG___3.cljs$lang$applyTo;
conj_BANG_.cljs$core$IFn$_invoke$arity$0 = conj_BANG___0;
conj_BANG_.cljs$core$IFn$_invoke$arity$1 = conj_BANG___1;
conj_BANG_.cljs$core$IFn$_invoke$arity$2 = conj_BANG___2;
conj_BANG_.cljs$core$IFn$_invoke$arity$variadic = conj_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return conj_BANG_;
})()
;
/**
* When applied to a transient map, adds mapping of key(s) to
* val(s). When applied to a transient vector, sets the val at index.
* Note - index must be <= (count vector). Returns coll.
* @param {...*} var_args
*/
cljs.core.assoc_BANG_ = (function() {
var assoc_BANG_ = null;
var assoc_BANG___3 = (function (tcoll,key,val){
return cljs.core._assoc_BANG_(tcoll,key,val);
});
var assoc_BANG___4 = (function() { 
var G__6876__delegate = function (tcoll,key,val,kvs){
while(true){
var ntcoll = cljs.core._assoc_BANG_(tcoll,key,val);
if(cljs.core.truth_(kvs)){
var G__6877 = ntcoll;
var G__6878 = cljs.core.first(kvs);
var G__6879 = cljs.core.second(kvs);
var G__6880 = cljs.core.nnext(kvs);
tcoll = G__6877;
key = G__6878;
val = G__6879;
kvs = G__6880;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__6876 = function (tcoll,key,val,var_args){
var kvs = null;
if (arguments.length > 3) {
var G__6881__i = 0, G__6881__a = new Array(arguments.length -  3);
while (G__6881__i < G__6881__a.length) {G__6881__a[G__6881__i] = arguments[G__6881__i + 3]; ++G__6881__i;}
  kvs = new cljs.core.IndexedSeq(G__6881__a,0);
} 
return G__6876__delegate.call(this,tcoll,key,val,kvs);};
G__6876.cljs$lang$maxFixedArity = 3;
G__6876.cljs$lang$applyTo = (function (arglist__6882){
var tcoll = cljs.core.first(arglist__6882);
arglist__6882 = cljs.core.next(arglist__6882);
var key = cljs.core.first(arglist__6882);
arglist__6882 = cljs.core.next(arglist__6882);
var val = cljs.core.first(arglist__6882);
var kvs = cljs.core.rest(arglist__6882);
return G__6876__delegate(tcoll,key,val,kvs);
});
G__6876.cljs$core$IFn$_invoke$arity$variadic = G__6876__delegate;
return G__6876;
})()
;
assoc_BANG_ = function(tcoll,key,val,var_args){
var kvs = var_args;
switch(arguments.length){
case 3:
return assoc_BANG___3.call(this,tcoll,key,val);
default:
var G__6883 = null;
if (arguments.length > 3) {
var G__6884__i = 0, G__6884__a = new Array(arguments.length -  3);
while (G__6884__i < G__6884__a.length) {G__6884__a[G__6884__i] = arguments[G__6884__i + 3]; ++G__6884__i;}
G__6883 = new cljs.core.IndexedSeq(G__6884__a,0);
}
return assoc_BANG___4.cljs$core$IFn$_invoke$arity$variadic(tcoll,key,val, G__6883);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
assoc_BANG_.cljs$lang$maxFixedArity = 3;
assoc_BANG_.cljs$lang$applyTo = assoc_BANG___4.cljs$lang$applyTo;
assoc_BANG_.cljs$core$IFn$_invoke$arity$3 = assoc_BANG___3;
assoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = assoc_BANG___4.cljs$core$IFn$_invoke$arity$variadic;
return assoc_BANG_;
})()
;
/**
* Returns a transient map that doesn't contain a mapping for key(s).
* @param {...*} var_args
*/
cljs.core.dissoc_BANG_ = (function() {
var dissoc_BANG_ = null;
var dissoc_BANG___2 = (function (tcoll,key){
return cljs.core._dissoc_BANG_(tcoll,key);
});
var dissoc_BANG___3 = (function() { 
var G__6885__delegate = function (tcoll,key,ks){
while(true){
var ntcoll = cljs.core._dissoc_BANG_(tcoll,key);
if(cljs.core.truth_(ks)){
var G__6886 = ntcoll;
var G__6887 = cljs.core.first(ks);
var G__6888 = cljs.core.next(ks);
tcoll = G__6886;
key = G__6887;
ks = G__6888;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__6885 = function (tcoll,key,var_args){
var ks = null;
if (arguments.length > 2) {
var G__6889__i = 0, G__6889__a = new Array(arguments.length -  2);
while (G__6889__i < G__6889__a.length) {G__6889__a[G__6889__i] = arguments[G__6889__i + 2]; ++G__6889__i;}
  ks = new cljs.core.IndexedSeq(G__6889__a,0);
} 
return G__6885__delegate.call(this,tcoll,key,ks);};
G__6885.cljs$lang$maxFixedArity = 2;
G__6885.cljs$lang$applyTo = (function (arglist__6890){
var tcoll = cljs.core.first(arglist__6890);
arglist__6890 = cljs.core.next(arglist__6890);
var key = cljs.core.first(arglist__6890);
var ks = cljs.core.rest(arglist__6890);
return G__6885__delegate(tcoll,key,ks);
});
G__6885.cljs$core$IFn$_invoke$arity$variadic = G__6885__delegate;
return G__6885;
})()
;
dissoc_BANG_ = function(tcoll,key,var_args){
var ks = var_args;
switch(arguments.length){
case 2:
return dissoc_BANG___2.call(this,tcoll,key);
default:
var G__6891 = null;
if (arguments.length > 2) {
var G__6892__i = 0, G__6892__a = new Array(arguments.length -  2);
while (G__6892__i < G__6892__a.length) {G__6892__a[G__6892__i] = arguments[G__6892__i + 2]; ++G__6892__i;}
G__6891 = new cljs.core.IndexedSeq(G__6892__a,0);
}
return dissoc_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,key, G__6891);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dissoc_BANG_.cljs$lang$maxFixedArity = 2;
dissoc_BANG_.cljs$lang$applyTo = dissoc_BANG___3.cljs$lang$applyTo;
dissoc_BANG_.cljs$core$IFn$_invoke$arity$2 = dissoc_BANG___2;
dissoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = dissoc_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return dissoc_BANG_;
})()
;
/**
* Removes the last item from a transient vector. If
* the collection is empty, throws an exception. Returns coll
*/
cljs.core.pop_BANG_ = (function pop_BANG_(tcoll){
return cljs.core._pop_BANG_(tcoll);
});
/**
* disj[oin]. Returns a transient set of the same (hashed/sorted) type, that
* does not contain key(s).
* @param {...*} var_args
*/
cljs.core.disj_BANG_ = (function() {
var disj_BANG_ = null;
var disj_BANG___2 = (function (tcoll,val){
return cljs.core._disjoin_BANG_(tcoll,val);
});
var disj_BANG___3 = (function() { 
var G__6893__delegate = function (tcoll,val,vals){
while(true){
var ntcoll = cljs.core._disjoin_BANG_(tcoll,val);
if(cljs.core.truth_(vals)){
var G__6894 = ntcoll;
var G__6895 = cljs.core.first(vals);
var G__6896 = cljs.core.next(vals);
tcoll = G__6894;
val = G__6895;
vals = G__6896;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__6893 = function (tcoll,val,var_args){
var vals = null;
if (arguments.length > 2) {
var G__6897__i = 0, G__6897__a = new Array(arguments.length -  2);
while (G__6897__i < G__6897__a.length) {G__6897__a[G__6897__i] = arguments[G__6897__i + 2]; ++G__6897__i;}
  vals = new cljs.core.IndexedSeq(G__6897__a,0);
} 
return G__6893__delegate.call(this,tcoll,val,vals);};
G__6893.cljs$lang$maxFixedArity = 2;
G__6893.cljs$lang$applyTo = (function (arglist__6898){
var tcoll = cljs.core.first(arglist__6898);
arglist__6898 = cljs.core.next(arglist__6898);
var val = cljs.core.first(arglist__6898);
var vals = cljs.core.rest(arglist__6898);
return G__6893__delegate(tcoll,val,vals);
});
G__6893.cljs$core$IFn$_invoke$arity$variadic = G__6893__delegate;
return G__6893;
})()
;
disj_BANG_ = function(tcoll,val,var_args){
var vals = var_args;
switch(arguments.length){
case 2:
return disj_BANG___2.call(this,tcoll,val);
default:
var G__6899 = null;
if (arguments.length > 2) {
var G__6900__i = 0, G__6900__a = new Array(arguments.length -  2);
while (G__6900__i < G__6900__a.length) {G__6900__a[G__6900__i] = arguments[G__6900__i + 2]; ++G__6900__i;}
G__6899 = new cljs.core.IndexedSeq(G__6900__a,0);
}
return disj_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,val, G__6899);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
disj_BANG_.cljs$lang$maxFixedArity = 2;
disj_BANG_.cljs$lang$applyTo = disj_BANG___3.cljs$lang$applyTo;
disj_BANG_.cljs$core$IFn$_invoke$arity$2 = disj_BANG___2;
disj_BANG_.cljs$core$IFn$_invoke$arity$variadic = disj_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return disj_BANG_;
})()
;

cljs.core.apply_to = (function apply_to(f,argc,args){
var args__$1 = cljs.core.seq(args);
if((argc === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var a4663 = cljs.core._first(args__$1);
var args__$2 = cljs.core._rest(args__$1);
if((argc === (1))){
if(f.cljs$core$IFn$_invoke$arity$1){
return f.cljs$core$IFn$_invoke$arity$1(a4663);
} else {
var G__7111 = a4663;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__7111) : f.call(null,G__7111));
}
} else {
var b4664 = cljs.core._first(args__$2);
var args__$3 = cljs.core._rest(args__$2);
if((argc === (2))){
if(f.cljs$core$IFn$_invoke$arity$2){
return f.cljs$core$IFn$_invoke$arity$2(a4663,b4664);
} else {
var G__7112 = a4663;
var G__7113 = b4664;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__7112,G__7113) : f.call(null,G__7112,G__7113));
}
} else {
var c4665 = cljs.core._first(args__$3);
var args__$4 = cljs.core._rest(args__$3);
if((argc === (3))){
if(f.cljs$core$IFn$_invoke$arity$3){
return f.cljs$core$IFn$_invoke$arity$3(a4663,b4664,c4665);
} else {
var G__7114 = a4663;
var G__7115 = b4664;
var G__7116 = c4665;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__7114,G__7115,G__7116) : f.call(null,G__7114,G__7115,G__7116));
}
} else {
var d4666 = cljs.core._first(args__$4);
var args__$5 = cljs.core._rest(args__$4);
if((argc === (4))){
if(f.cljs$core$IFn$_invoke$arity$4){
return f.cljs$core$IFn$_invoke$arity$4(a4663,b4664,c4665,d4666);
} else {
var G__7117 = a4663;
var G__7118 = b4664;
var G__7119 = c4665;
var G__7120 = d4666;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__7117,G__7118,G__7119,G__7120) : f.call(null,G__7117,G__7118,G__7119,G__7120));
}
} else {
var e4667 = cljs.core._first(args__$5);
var args__$6 = cljs.core._rest(args__$5);
if((argc === (5))){
if(f.cljs$core$IFn$_invoke$arity$5){
return f.cljs$core$IFn$_invoke$arity$5(a4663,b4664,c4665,d4666,e4667);
} else {
var G__7121 = a4663;
var G__7122 = b4664;
var G__7123 = c4665;
var G__7124 = d4666;
var G__7125 = e4667;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__7121,G__7122,G__7123,G__7124,G__7125) : f.call(null,G__7121,G__7122,G__7123,G__7124,G__7125));
}
} else {
var f4668 = cljs.core._first(args__$6);
var args__$7 = cljs.core._rest(args__$6);
if((argc === (6))){
if(f.cljs$core$IFn$_invoke$arity$6){
return f.cljs$core$IFn$_invoke$arity$6(a4663,b4664,c4665,d4666,e4667,f4668);
} else {
var G__7126 = a4663;
var G__7127 = b4664;
var G__7128 = c4665;
var G__7129 = d4666;
var G__7130 = e4667;
var G__7131 = f4668;
return (f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(G__7126,G__7127,G__7128,G__7129,G__7130,G__7131) : f.call(null,G__7126,G__7127,G__7128,G__7129,G__7130,G__7131));
}
} else {
var g4669 = cljs.core._first(args__$7);
var args__$8 = cljs.core._rest(args__$7);
if((argc === (7))){
if(f.cljs$core$IFn$_invoke$arity$7){
return f.cljs$core$IFn$_invoke$arity$7(a4663,b4664,c4665,d4666,e4667,f4668,g4669);
} else {
var G__7132 = a4663;
var G__7133 = b4664;
var G__7134 = c4665;
var G__7135 = d4666;
var G__7136 = e4667;
var G__7137 = f4668;
var G__7138 = g4669;
return (f.cljs$core$IFn$_invoke$arity$7 ? f.cljs$core$IFn$_invoke$arity$7(G__7132,G__7133,G__7134,G__7135,G__7136,G__7137,G__7138) : f.call(null,G__7132,G__7133,G__7134,G__7135,G__7136,G__7137,G__7138));
}
} else {
var h4670 = cljs.core._first(args__$8);
var args__$9 = cljs.core._rest(args__$8);
if((argc === (8))){
if(f.cljs$core$IFn$_invoke$arity$8){
return f.cljs$core$IFn$_invoke$arity$8(a4663,b4664,c4665,d4666,e4667,f4668,g4669,h4670);
} else {
var G__7139 = a4663;
var G__7140 = b4664;
var G__7141 = c4665;
var G__7142 = d4666;
var G__7143 = e4667;
var G__7144 = f4668;
var G__7145 = g4669;
var G__7146 = h4670;
return (f.cljs$core$IFn$_invoke$arity$8 ? f.cljs$core$IFn$_invoke$arity$8(G__7139,G__7140,G__7141,G__7142,G__7143,G__7144,G__7145,G__7146) : f.call(null,G__7139,G__7140,G__7141,G__7142,G__7143,G__7144,G__7145,G__7146));
}
} else {
var i4671 = cljs.core._first(args__$9);
var args__$10 = cljs.core._rest(args__$9);
if((argc === (9))){
if(f.cljs$core$IFn$_invoke$arity$9){
return f.cljs$core$IFn$_invoke$arity$9(a4663,b4664,c4665,d4666,e4667,f4668,g4669,h4670,i4671);
} else {
var G__7147 = a4663;
var G__7148 = b4664;
var G__7149 = c4665;
var G__7150 = d4666;
var G__7151 = e4667;
var G__7152 = f4668;
var G__7153 = g4669;
var G__7154 = h4670;
var G__7155 = i4671;
return (f.cljs$core$IFn$_invoke$arity$9 ? f.cljs$core$IFn$_invoke$arity$9(G__7147,G__7148,G__7149,G__7150,G__7151,G__7152,G__7153,G__7154,G__7155) : f.call(null,G__7147,G__7148,G__7149,G__7150,G__7151,G__7152,G__7153,G__7154,G__7155));
}
} else {
var j4672 = cljs.core._first(args__$10);
var args__$11 = cljs.core._rest(args__$10);
if((argc === (10))){
if(f.cljs$core$IFn$_invoke$arity$10){
return f.cljs$core$IFn$_invoke$arity$10(a4663,b4664,c4665,d4666,e4667,f4668,g4669,h4670,i4671,j4672);
} else {
var G__7156 = a4663;
var G__7157 = b4664;
var G__7158 = c4665;
var G__7159 = d4666;
var G__7160 = e4667;
var G__7161 = f4668;
var G__7162 = g4669;
var G__7163 = h4670;
var G__7164 = i4671;
var G__7165 = j4672;
return (f.cljs$core$IFn$_invoke$arity$10 ? f.cljs$core$IFn$_invoke$arity$10(G__7156,G__7157,G__7158,G__7159,G__7160,G__7161,G__7162,G__7163,G__7164,G__7165) : f.call(null,G__7156,G__7157,G__7158,G__7159,G__7160,G__7161,G__7162,G__7163,G__7164,G__7165));
}
} else {
var k4673 = cljs.core._first(args__$11);
var args__$12 = cljs.core._rest(args__$11);
if((argc === (11))){
if(f.cljs$core$IFn$_invoke$arity$11){
return f.cljs$core$IFn$_invoke$arity$11(a4663,b4664,c4665,d4666,e4667,f4668,g4669,h4670,i4671,j4672,k4673);
} else {
var G__7166 = a4663;
var G__7167 = b4664;
var G__7168 = c4665;
var G__7169 = d4666;
var G__7170 = e4667;
var G__7171 = f4668;
var G__7172 = g4669;
var G__7173 = h4670;
var G__7174 = i4671;
var G__7175 = j4672;
var G__7176 = k4673;
return (f.cljs$core$IFn$_invoke$arity$11 ? f.cljs$core$IFn$_invoke$arity$11(G__7166,G__7167,G__7168,G__7169,G__7170,G__7171,G__7172,G__7173,G__7174,G__7175,G__7176) : f.call(null,G__7166,G__7167,G__7168,G__7169,G__7170,G__7171,G__7172,G__7173,G__7174,G__7175,G__7176));
}
} else {
var l4674 = cljs.core._first(args__$12);
var args__$13 = cljs.core._rest(args__$12);
if((argc === (12))){
if(f.cljs$core$IFn$_invoke$arity$12){
return f.cljs$core$IFn$_invoke$arity$12(a4663,b4664,c4665,d4666,e4667,f4668,g4669,h4670,i4671,j4672,k4673,l4674);
} else {
var G__7177 = a4663;
var G__7178 = b4664;
var G__7179 = c4665;
var G__7180 = d4666;
var G__7181 = e4667;
var G__7182 = f4668;
var G__7183 = g4669;
var G__7184 = h4670;
var G__7185 = i4671;
var G__7186 = j4672;
var G__7187 = k4673;
var G__7188 = l4674;
return (f.cljs$core$IFn$_invoke$arity$12 ? f.cljs$core$IFn$_invoke$arity$12(G__7177,G__7178,G__7179,G__7180,G__7181,G__7182,G__7183,G__7184,G__7185,G__7186,G__7187,G__7188) : f.call(null,G__7177,G__7178,G__7179,G__7180,G__7181,G__7182,G__7183,G__7184,G__7185,G__7186,G__7187,G__7188));
}
} else {
var m4675 = cljs.core._first(args__$13);
var args__$14 = cljs.core._rest(args__$13);
if((argc === (13))){
if(f.cljs$core$IFn$_invoke$arity$13){
return f.cljs$core$IFn$_invoke$arity$13(a4663,b4664,c4665,d4666,e4667,f4668,g4669,h4670,i4671,j4672,k4673,l4674,m4675);
} else {
var G__7189 = a4663;
var G__7190 = b4664;
var G__7191 = c4665;
var G__7192 = d4666;
var G__7193 = e4667;
var G__7194 = f4668;
var G__7195 = g4669;
var G__7196 = h4670;
var G__7197 = i4671;
var G__7198 = j4672;
var G__7199 = k4673;
var G__7200 = l4674;
var G__7201 = m4675;
return (f.cljs$core$IFn$_invoke$arity$13 ? f.cljs$core$IFn$_invoke$arity$13(G__7189,G__7190,G__7191,G__7192,G__7193,G__7194,G__7195,G__7196,G__7197,G__7198,G__7199,G__7200,G__7201) : f.call(null,G__7189,G__7190,G__7191,G__7192,G__7193,G__7194,G__7195,G__7196,G__7197,G__7198,G__7199,G__7200,G__7201));
}
} else {
var n4676 = cljs.core._first(args__$14);
var args__$15 = cljs.core._rest(args__$14);
if((argc === (14))){
if(f.cljs$core$IFn$_invoke$arity$14){
return f.cljs$core$IFn$_invoke$arity$14(a4663,b4664,c4665,d4666,e4667,f4668,g4669,h4670,i4671,j4672,k4673,l4674,m4675,n4676);
} else {
var G__7202 = a4663;
var G__7203 = b4664;
var G__7204 = c4665;
var G__7205 = d4666;
var G__7206 = e4667;
var G__7207 = f4668;
var G__7208 = g4669;
var G__7209 = h4670;
var G__7210 = i4671;
var G__7211 = j4672;
var G__7212 = k4673;
var G__7213 = l4674;
var G__7214 = m4675;
var G__7215 = n4676;
return (f.cljs$core$IFn$_invoke$arity$14 ? f.cljs$core$IFn$_invoke$arity$14(G__7202,G__7203,G__7204,G__7205,G__7206,G__7207,G__7208,G__7209,G__7210,G__7211,G__7212,G__7213,G__7214,G__7215) : f.call(null,G__7202,G__7203,G__7204,G__7205,G__7206,G__7207,G__7208,G__7209,G__7210,G__7211,G__7212,G__7213,G__7214,G__7215));
}
} else {
var o4677 = cljs.core._first(args__$15);
var args__$16 = cljs.core._rest(args__$15);
if((argc === (15))){
if(f.cljs$core$IFn$_invoke$arity$15){
return f.cljs$core$IFn$_invoke$arity$15(a4663,b4664,c4665,d4666,e4667,f4668,g4669,h4670,i4671,j4672,k4673,l4674,m4675,n4676,o4677);
} else {
var G__7216 = a4663;
var G__7217 = b4664;
var G__7218 = c4665;
var G__7219 = d4666;
var G__7220 = e4667;
var G__7221 = f4668;
var G__7222 = g4669;
var G__7223 = h4670;
var G__7224 = i4671;
var G__7225 = j4672;
var G__7226 = k4673;
var G__7227 = l4674;
var G__7228 = m4675;
var G__7229 = n4676;
var G__7230 = o4677;
return (f.cljs$core$IFn$_invoke$arity$15 ? f.cljs$core$IFn$_invoke$arity$15(G__7216,G__7217,G__7218,G__7219,G__7220,G__7221,G__7222,G__7223,G__7224,G__7225,G__7226,G__7227,G__7228,G__7229,G__7230) : f.call(null,G__7216,G__7217,G__7218,G__7219,G__7220,G__7221,G__7222,G__7223,G__7224,G__7225,G__7226,G__7227,G__7228,G__7229,G__7230));
}
} else {
var p4678 = cljs.core._first(args__$16);
var args__$17 = cljs.core._rest(args__$16);
if((argc === (16))){
if(f.cljs$core$IFn$_invoke$arity$16){
return f.cljs$core$IFn$_invoke$arity$16(a4663,b4664,c4665,d4666,e4667,f4668,g4669,h4670,i4671,j4672,k4673,l4674,m4675,n4676,o4677,p4678);
} else {
var G__7231 = a4663;
var G__7232 = b4664;
var G__7233 = c4665;
var G__7234 = d4666;
var G__7235 = e4667;
var G__7236 = f4668;
var G__7237 = g4669;
var G__7238 = h4670;
var G__7239 = i4671;
var G__7240 = j4672;
var G__7241 = k4673;
var G__7242 = l4674;
var G__7243 = m4675;
var G__7244 = n4676;
var G__7245 = o4677;
var G__7246 = p4678;
return (f.cljs$core$IFn$_invoke$arity$16 ? f.cljs$core$IFn$_invoke$arity$16(G__7231,G__7232,G__7233,G__7234,G__7235,G__7236,G__7237,G__7238,G__7239,G__7240,G__7241,G__7242,G__7243,G__7244,G__7245,G__7246) : f.call(null,G__7231,G__7232,G__7233,G__7234,G__7235,G__7236,G__7237,G__7238,G__7239,G__7240,G__7241,G__7242,G__7243,G__7244,G__7245,G__7246));
}
} else {
var q4679 = cljs.core._first(args__$17);
var args__$18 = cljs.core._rest(args__$17);
if((argc === (17))){
if(f.cljs$core$IFn$_invoke$arity$17){
return f.cljs$core$IFn$_invoke$arity$17(a4663,b4664,c4665,d4666,e4667,f4668,g4669,h4670,i4671,j4672,k4673,l4674,m4675,n4676,o4677,p4678,q4679);
} else {
var G__7247 = a4663;
var G__7248 = b4664;
var G__7249 = c4665;
var G__7250 = d4666;
var G__7251 = e4667;
var G__7252 = f4668;
var G__7253 = g4669;
var G__7254 = h4670;
var G__7255 = i4671;
var G__7256 = j4672;
var G__7257 = k4673;
var G__7258 = l4674;
var G__7259 = m4675;
var G__7260 = n4676;
var G__7261 = o4677;
var G__7262 = p4678;
var G__7263 = q4679;
return (f.cljs$core$IFn$_invoke$arity$17 ? f.cljs$core$IFn$_invoke$arity$17(G__7247,G__7248,G__7249,G__7250,G__7251,G__7252,G__7253,G__7254,G__7255,G__7256,G__7257,G__7258,G__7259,G__7260,G__7261,G__7262,G__7263) : f.call(null,G__7247,G__7248,G__7249,G__7250,G__7251,G__7252,G__7253,G__7254,G__7255,G__7256,G__7257,G__7258,G__7259,G__7260,G__7261,G__7262,G__7263));
}
} else {
var r4680 = cljs.core._first(args__$18);
var args__$19 = cljs.core._rest(args__$18);
if((argc === (18))){
if(f.cljs$core$IFn$_invoke$arity$18){
return f.cljs$core$IFn$_invoke$arity$18(a4663,b4664,c4665,d4666,e4667,f4668,g4669,h4670,i4671,j4672,k4673,l4674,m4675,n4676,o4677,p4678,q4679,r4680);
} else {
var G__7264 = a4663;
var G__7265 = b4664;
var G__7266 = c4665;
var G__7267 = d4666;
var G__7268 = e4667;
var G__7269 = f4668;
var G__7270 = g4669;
var G__7271 = h4670;
var G__7272 = i4671;
var G__7273 = j4672;
var G__7274 = k4673;
var G__7275 = l4674;
var G__7276 = m4675;
var G__7277 = n4676;
var G__7278 = o4677;
var G__7279 = p4678;
var G__7280 = q4679;
var G__7281 = r4680;
return (f.cljs$core$IFn$_invoke$arity$18 ? f.cljs$core$IFn$_invoke$arity$18(G__7264,G__7265,G__7266,G__7267,G__7268,G__7269,G__7270,G__7271,G__7272,G__7273,G__7274,G__7275,G__7276,G__7277,G__7278,G__7279,G__7280,G__7281) : f.call(null,G__7264,G__7265,G__7266,G__7267,G__7268,G__7269,G__7270,G__7271,G__7272,G__7273,G__7274,G__7275,G__7276,G__7277,G__7278,G__7279,G__7280,G__7281));
}
} else {
var s4681 = cljs.core._first(args__$19);
var args__$20 = cljs.core._rest(args__$19);
if((argc === (19))){
if(f.cljs$core$IFn$_invoke$arity$19){
return f.cljs$core$IFn$_invoke$arity$19(a4663,b4664,c4665,d4666,e4667,f4668,g4669,h4670,i4671,j4672,k4673,l4674,m4675,n4676,o4677,p4678,q4679,r4680,s4681);
} else {
var G__7282 = a4663;
var G__7283 = b4664;
var G__7284 = c4665;
var G__7285 = d4666;
var G__7286 = e4667;
var G__7287 = f4668;
var G__7288 = g4669;
var G__7289 = h4670;
var G__7290 = i4671;
var G__7291 = j4672;
var G__7292 = k4673;
var G__7293 = l4674;
var G__7294 = m4675;
var G__7295 = n4676;
var G__7296 = o4677;
var G__7297 = p4678;
var G__7298 = q4679;
var G__7299 = r4680;
var G__7300 = s4681;
return (f.cljs$core$IFn$_invoke$arity$19 ? f.cljs$core$IFn$_invoke$arity$19(G__7282,G__7283,G__7284,G__7285,G__7286,G__7287,G__7288,G__7289,G__7290,G__7291,G__7292,G__7293,G__7294,G__7295,G__7296,G__7297,G__7298,G__7299,G__7300) : f.call(null,G__7282,G__7283,G__7284,G__7285,G__7286,G__7287,G__7288,G__7289,G__7290,G__7291,G__7292,G__7293,G__7294,G__7295,G__7296,G__7297,G__7298,G__7299,G__7300));
}
} else {
var t4682 = cljs.core._first(args__$20);
var args__$21 = cljs.core._rest(args__$20);
if((argc === (20))){
if(f.cljs$core$IFn$_invoke$arity$20){
return f.cljs$core$IFn$_invoke$arity$20(a4663,b4664,c4665,d4666,e4667,f4668,g4669,h4670,i4671,j4672,k4673,l4674,m4675,n4676,o4677,p4678,q4679,r4680,s4681,t4682);
} else {
var G__7301 = a4663;
var G__7302 = b4664;
var G__7303 = c4665;
var G__7304 = d4666;
var G__7305 = e4667;
var G__7306 = f4668;
var G__7307 = g4669;
var G__7308 = h4670;
var G__7309 = i4671;
var G__7310 = j4672;
var G__7311 = k4673;
var G__7312 = l4674;
var G__7313 = m4675;
var G__7314 = n4676;
var G__7315 = o4677;
var G__7316 = p4678;
var G__7317 = q4679;
var G__7318 = r4680;
var G__7319 = s4681;
var G__7320 = t4682;
return (f.cljs$core$IFn$_invoke$arity$20 ? f.cljs$core$IFn$_invoke$arity$20(G__7301,G__7302,G__7303,G__7304,G__7305,G__7306,G__7307,G__7308,G__7309,G__7310,G__7311,G__7312,G__7313,G__7314,G__7315,G__7316,G__7317,G__7318,G__7319,G__7320) : f.call(null,G__7301,G__7302,G__7303,G__7304,G__7305,G__7306,G__7307,G__7308,G__7309,G__7310,G__7311,G__7312,G__7313,G__7314,G__7315,G__7316,G__7317,G__7318,G__7319,G__7320));
}
} else {
throw (new Error("Only up to 20 arguments supported on functions"));
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
});

/**
* Applies fn f to the argument list formed by prepending intervening arguments to args.
* First cut.  Not lazy.  Needs to use emitted toApply.
* @param {...*} var_args
*/
cljs.core.apply = (function() {
var apply = null;
var apply__2 = (function (f,args){
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(args,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,args);
} else {
return f.cljs$lang$applyTo(args);
}
} else {
return f.apply(f,cljs.core.to_array(args));
}
});
var apply__3 = (function (f,x,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$2(x,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var apply__4 = (function (f,x,y,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$3(x,y,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var apply__5 = (function (f,x,y,z,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(x,y,z,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var apply__6 = (function() { 
var G__7321__delegate = function (f,a,b,c,d,args){
var arglist = cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,cljs.core.cons(d,cljs.core.spread(args)))));
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
};
var G__7321 = function (f,a,b,c,d,var_args){
var args = null;
if (arguments.length > 5) {
var G__7322__i = 0, G__7322__a = new Array(arguments.length -  5);
while (G__7322__i < G__7322__a.length) {G__7322__a[G__7322__i] = arguments[G__7322__i + 5]; ++G__7322__i;}
  args = new cljs.core.IndexedSeq(G__7322__a,0);
} 
return G__7321__delegate.call(this,f,a,b,c,d,args);};
G__7321.cljs$lang$maxFixedArity = 5;
G__7321.cljs$lang$applyTo = (function (arglist__7323){
var f = cljs.core.first(arglist__7323);
arglist__7323 = cljs.core.next(arglist__7323);
var a = cljs.core.first(arglist__7323);
arglist__7323 = cljs.core.next(arglist__7323);
var b = cljs.core.first(arglist__7323);
arglist__7323 = cljs.core.next(arglist__7323);
var c = cljs.core.first(arglist__7323);
arglist__7323 = cljs.core.next(arglist__7323);
var d = cljs.core.first(arglist__7323);
var args = cljs.core.rest(arglist__7323);
return G__7321__delegate(f,a,b,c,d,args);
});
G__7321.cljs$core$IFn$_invoke$arity$variadic = G__7321__delegate;
return G__7321;
})()
;
apply = function(f,a,b,c,d,var_args){
var args = var_args;
switch(arguments.length){
case 2:
return apply__2.call(this,f,a);
case 3:
return apply__3.call(this,f,a,b);
case 4:
return apply__4.call(this,f,a,b,c);
case 5:
return apply__5.call(this,f,a,b,c,d);
default:
var G__7324 = null;
if (arguments.length > 5) {
var G__7325__i = 0, G__7325__a = new Array(arguments.length -  5);
while (G__7325__i < G__7325__a.length) {G__7325__a[G__7325__i] = arguments[G__7325__i + 5]; ++G__7325__i;}
G__7324 = new cljs.core.IndexedSeq(G__7325__a,0);
}
return apply__6.cljs$core$IFn$_invoke$arity$variadic(f,a,b,c,d, G__7324);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
apply.cljs$lang$maxFixedArity = 5;
apply.cljs$lang$applyTo = apply__6.cljs$lang$applyTo;
apply.cljs$core$IFn$_invoke$arity$2 = apply__2;
apply.cljs$core$IFn$_invoke$arity$3 = apply__3;
apply.cljs$core$IFn$_invoke$arity$4 = apply__4;
apply.cljs$core$IFn$_invoke$arity$5 = apply__5;
apply.cljs$core$IFn$_invoke$arity$variadic = apply__6.cljs$core$IFn$_invoke$arity$variadic;
return apply;
})()
;
/**
* Returns an object of the same type and value as obj, with
* (apply f (meta obj) args) as its metadata.
* @param {...*} var_args
*/
cljs.core.vary_meta = (function() {
var vary_meta = null;
var vary_meta__2 = (function (obj,f){
return cljs.core.with_meta(obj,(function (){var G__7341 = cljs.core.meta(obj);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__7341) : f.call(null,G__7341));
})());
});
var vary_meta__3 = (function (obj,f,a){
return cljs.core.with_meta(obj,(function (){var G__7342 = cljs.core.meta(obj);
var G__7343 = a;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__7342,G__7343) : f.call(null,G__7342,G__7343));
})());
});
var vary_meta__4 = (function (obj,f,a,b){
return cljs.core.with_meta(obj,(function (){var G__7344 = cljs.core.meta(obj);
var G__7345 = a;
var G__7346 = b;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__7344,G__7345,G__7346) : f.call(null,G__7344,G__7345,G__7346));
})());
});
var vary_meta__5 = (function (obj,f,a,b,c){
return cljs.core.with_meta(obj,(function (){var G__7347 = cljs.core.meta(obj);
var G__7348 = a;
var G__7349 = b;
var G__7350 = c;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__7347,G__7348,G__7349,G__7350) : f.call(null,G__7347,G__7348,G__7349,G__7350));
})());
});
var vary_meta__6 = (function (obj,f,a,b,c,d){
return cljs.core.with_meta(obj,(function (){var G__7351 = cljs.core.meta(obj);
var G__7352 = a;
var G__7353 = b;
var G__7354 = c;
var G__7355 = d;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__7351,G__7352,G__7353,G__7354,G__7355) : f.call(null,G__7351,G__7352,G__7353,G__7354,G__7355));
})());
});
var vary_meta__7 = (function() { 
var G__7356__delegate = function (obj,f,a,b,c,d,args){
return cljs.core.with_meta(obj,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.meta(obj),a,b,c,cljs.core.array_seq([d,args], 0)));
};
var G__7356 = function (obj,f,a,b,c,d,var_args){
var args = null;
if (arguments.length > 6) {
var G__7357__i = 0, G__7357__a = new Array(arguments.length -  6);
while (G__7357__i < G__7357__a.length) {G__7357__a[G__7357__i] = arguments[G__7357__i + 6]; ++G__7357__i;}
  args = new cljs.core.IndexedSeq(G__7357__a,0);
} 
return G__7356__delegate.call(this,obj,f,a,b,c,d,args);};
G__7356.cljs$lang$maxFixedArity = 6;
G__7356.cljs$lang$applyTo = (function (arglist__7358){
var obj = cljs.core.first(arglist__7358);
arglist__7358 = cljs.core.next(arglist__7358);
var f = cljs.core.first(arglist__7358);
arglist__7358 = cljs.core.next(arglist__7358);
var a = cljs.core.first(arglist__7358);
arglist__7358 = cljs.core.next(arglist__7358);
var b = cljs.core.first(arglist__7358);
arglist__7358 = cljs.core.next(arglist__7358);
var c = cljs.core.first(arglist__7358);
arglist__7358 = cljs.core.next(arglist__7358);
var d = cljs.core.first(arglist__7358);
var args = cljs.core.rest(arglist__7358);
return G__7356__delegate(obj,f,a,b,c,d,args);
});
G__7356.cljs$core$IFn$_invoke$arity$variadic = G__7356__delegate;
return G__7356;
})()
;
vary_meta = function(obj,f,a,b,c,d,var_args){
var args = var_args;
switch(arguments.length){
case 2:
return vary_meta__2.call(this,obj,f);
case 3:
return vary_meta__3.call(this,obj,f,a);
case 4:
return vary_meta__4.call(this,obj,f,a,b);
case 5:
return vary_meta__5.call(this,obj,f,a,b,c);
case 6:
return vary_meta__6.call(this,obj,f,a,b,c,d);
default:
var G__7359 = null;
if (arguments.length > 6) {
var G__7360__i = 0, G__7360__a = new Array(arguments.length -  6);
while (G__7360__i < G__7360__a.length) {G__7360__a[G__7360__i] = arguments[G__7360__i + 6]; ++G__7360__i;}
G__7359 = new cljs.core.IndexedSeq(G__7360__a,0);
}
return vary_meta__7.cljs$core$IFn$_invoke$arity$variadic(obj,f,a,b,c,d, G__7359);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
vary_meta.cljs$lang$maxFixedArity = 6;
vary_meta.cljs$lang$applyTo = vary_meta__7.cljs$lang$applyTo;
vary_meta.cljs$core$IFn$_invoke$arity$2 = vary_meta__2;
vary_meta.cljs$core$IFn$_invoke$arity$3 = vary_meta__3;
vary_meta.cljs$core$IFn$_invoke$arity$4 = vary_meta__4;
vary_meta.cljs$core$IFn$_invoke$arity$5 = vary_meta__5;
vary_meta.cljs$core$IFn$_invoke$arity$6 = vary_meta__6;
vary_meta.cljs$core$IFn$_invoke$arity$variadic = vary_meta__7.cljs$core$IFn$_invoke$arity$variadic;
return vary_meta;
})()
;
/**
* Same as (not (= obj1 obj2))
* @param {...*} var_args
*/
cljs.core.not_EQ_ = (function() {
var not_EQ_ = null;
var not_EQ___1 = (function (x){
return false;
});
var not_EQ___2 = (function (x,y){
return !(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y));
});
var not_EQ___3 = (function() { 
var G__7361__delegate = function (x,y,more){
return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core._EQ_,x,y,more));
};
var G__7361 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__7362__i = 0, G__7362__a = new Array(arguments.length -  2);
while (G__7362__i < G__7362__a.length) {G__7362__a[G__7362__i] = arguments[G__7362__i + 2]; ++G__7362__i;}
  more = new cljs.core.IndexedSeq(G__7362__a,0);
} 
return G__7361__delegate.call(this,x,y,more);};
G__7361.cljs$lang$maxFixedArity = 2;
G__7361.cljs$lang$applyTo = (function (arglist__7363){
var x = cljs.core.first(arglist__7363);
arglist__7363 = cljs.core.next(arglist__7363);
var y = cljs.core.first(arglist__7363);
var more = cljs.core.rest(arglist__7363);
return G__7361__delegate(x,y,more);
});
G__7361.cljs$core$IFn$_invoke$arity$variadic = G__7361__delegate;
return G__7361;
})()
;
not_EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return not_EQ___1.call(this,x);
case 2:
return not_EQ___2.call(this,x,y);
default:
var G__7364 = null;
if (arguments.length > 2) {
var G__7365__i = 0, G__7365__a = new Array(arguments.length -  2);
while (G__7365__i < G__7365__a.length) {G__7365__a[G__7365__i] = arguments[G__7365__i + 2]; ++G__7365__i;}
G__7364 = new cljs.core.IndexedSeq(G__7365__a,0);
}
return not_EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__7364);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
not_EQ_.cljs$lang$maxFixedArity = 2;
not_EQ_.cljs$lang$applyTo = not_EQ___3.cljs$lang$applyTo;
not_EQ_.cljs$core$IFn$_invoke$arity$1 = not_EQ___1;
not_EQ_.cljs$core$IFn$_invoke$arity$2 = not_EQ___2;
not_EQ_.cljs$core$IFn$_invoke$arity$variadic = not_EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return not_EQ_;
})()
;
/**
* If coll is empty, returns nil, else coll
*/
cljs.core.not_empty = (function not_empty(coll){
if(cljs.core.seq(coll)){
return coll;
} else {
return null;
}
});
cljs.core.nil_iter = (function nil_iter(){
if(typeof cljs.core.t7369 !== 'undefined'){
} else {

/**
* @constructor
*/
cljs.core.t7369 = (function (nil_iter,meta7370){
this.nil_iter = nil_iter;
this.meta7370 = meta7370;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 393216;
})
cljs.core.t7369.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return false;
});

cljs.core.t7369.prototype.next = (function (){
var self__ = this;
var _ = this;
return (new Error("No such element"));
});

cljs.core.t7369.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.t7369.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_7371){
var self__ = this;
var _7371__$1 = this;
return self__.meta7370;
});

cljs.core.t7369.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_7371,meta7370__$1){
var self__ = this;
var _7371__$1 = this;
return (new cljs.core.t7369(self__.nil_iter,meta7370__$1));
});

cljs.core.t7369.cljs$lang$type = true;

cljs.core.t7369.cljs$lang$ctorStr = "cljs.core/t7369";

cljs.core.t7369.cljs$lang$ctorPrWriter = (function (this__4319__auto__,writer__4320__auto__,opt__4321__auto__){
return cljs.core._write(writer__4320__auto__,"cljs.core/t7369");
});

cljs.core.__GT_t7369 = (function __GT_t7369(nil_iter__$1,meta7370){
return (new cljs.core.t7369(nil_iter__$1,meta7370));
});

}

return (new cljs.core.t7369(nil_iter,new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,"end-column","end-column",1425389514),54,new cljs.core.Keyword(null,"end-line","end-line",1837326455),3012,new cljs.core.Keyword(null,"column","column",2078222095),3,new cljs.core.Keyword(null,"line","line",212345235),3008,new cljs.core.Keyword(null,"file","file",-1269645878),"/Users/monte/Developer/speicher/out/cljs/core.cljs"], null)));
});

/**
* @constructor
*/
cljs.core.StringIter = (function (s,i){
this.s = s;
this.i = i;
})
cljs.core.StringIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.s.length);
});

cljs.core.StringIter.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = self__.s.charAt(self__.i);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.StringIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.StringIter.cljs$lang$type = true;

cljs.core.StringIter.cljs$lang$ctorStr = "cljs.core/StringIter";

cljs.core.StringIter.cljs$lang$ctorPrWriter = (function (this__4319__auto__,writer__4320__auto__,opt__4321__auto__){
return cljs.core._write(writer__4320__auto__,"cljs.core/StringIter");
});

cljs.core.__GT_StringIter = (function __GT_StringIter(s,i){
return (new cljs.core.StringIter(s,i));
});

cljs.core.string_iter = (function string_iter(x){
return (new cljs.core.StringIter(x,(0)));
});

/**
* @constructor
*/
cljs.core.ArrayIter = (function (arr,i){
this.arr = arr;
this.i = i;
})
cljs.core.ArrayIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.arr.length);
});

cljs.core.ArrayIter.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = (self__.arr[self__.i]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.ArrayIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.ArrayIter.cljs$lang$type = true;

cljs.core.ArrayIter.cljs$lang$ctorStr = "cljs.core/ArrayIter";

cljs.core.ArrayIter.cljs$lang$ctorPrWriter = (function (this__4319__auto__,writer__4320__auto__,opt__4321__auto__){
return cljs.core._write(writer__4320__auto__,"cljs.core/ArrayIter");
});

cljs.core.__GT_ArrayIter = (function __GT_ArrayIter(arr,i){
return (new cljs.core.ArrayIter(arr,i));
});

cljs.core.array_iter = (function array_iter(x){
return (new cljs.core.ArrayIter(x,(0)));
});
cljs.core.INIT = {};
cljs.core.START = {};

/**
* @constructor
*/
cljs.core.SeqIter = (function (_seq,_next){
this._seq = _seq;
this._next = _next;
})
cljs.core.SeqIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
if((self__._seq === cljs.core.INIT)){
self__._seq = cljs.core.START;

self__._next = cljs.core.seq(self__._next);
} else {
if((self__._seq === self__._next)){
self__._next = cljs.core.next(self__._seq);
} else {
}
}

return !((self__._next == null));
});

cljs.core.SeqIter.prototype.next = (function (){
var self__ = this;
var this$ = this;
if(cljs.core.not(this$.hasNext())){
throw (new Error("No such element"));
} else {
self__._seq = self__._next;

return cljs.core.first(self__._next);
}
});

cljs.core.SeqIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.SeqIter.cljs$lang$type = true;

cljs.core.SeqIter.cljs$lang$ctorStr = "cljs.core/SeqIter";

cljs.core.SeqIter.cljs$lang$ctorPrWriter = (function (this__4319__auto__,writer__4320__auto__,opt__4321__auto__){
return cljs.core._write(writer__4320__auto__,"cljs.core/SeqIter");
});

cljs.core.__GT_SeqIter = (function __GT_SeqIter(_seq,_next){
return (new cljs.core.SeqIter(_seq,_next));
});

cljs.core.seq_iter = (function seq_iter(coll){
return (new cljs.core.SeqIter(cljs.core.INIT,coll));
});
cljs.core.iter = (function iter(coll){
if((coll == null)){
return cljs.core.nil_iter();
} else {
if(typeof coll === 'string'){
return cljs.core.string_iter(coll);
} else {
if(coll instanceof Array){
return cljs.core.array_iter(coll);
} else {
if(cljs.core.iterable_QMARK_(coll)){
return cljs.core._iterator(coll);
} else {
if(cljs.core.seqable_QMARK_(coll)){
return cljs.core.seq_iter(coll);
} else {
throw (new Error([cljs.core.str("Cannot create iterator from "),cljs.core.str(coll)].join('')));

}
}
}
}
}
});
cljs.core.lazy_transformer = (function lazy_transformer(stepper){
return (new cljs.core.LazyTransformer(stepper,null,null,null));
});

/**
* @constructor
*/
cljs.core.Stepper = (function (xform,iter){
this.xform = xform;
this.iter = iter;
})
cljs.core.Stepper.prototype.step = (function (lt){
var self__ = this;
var this$ = this;
while(true){
if(cljs.core.truth_((function (){var and__3720__auto__ = !((lt.stepper == null));
if(and__3720__auto__){
return self__.iter.hasNext();
} else {
return and__3720__auto__;
}
})())){
if(cljs.core.reduced_QMARK_((function (){var G__7372 = lt;
var G__7373 = self__.iter.next();
return (self__.xform.cljs$core$IFn$_invoke$arity$2 ? self__.xform.cljs$core$IFn$_invoke$arity$2(G__7372,G__7373) : self__.xform.call(null,G__7372,G__7373));
})())){
if((lt.rest == null)){
} else {
lt.rest.stepper = null;
}
} else {
continue;
}
} else {
}
break;
}

if((lt.stepper == null)){
return null;
} else {
var G__7374 = lt;
return (self__.xform.cljs$core$IFn$_invoke$arity$1 ? self__.xform.cljs$core$IFn$_invoke$arity$1(G__7374) : self__.xform.call(null,G__7374));
}
});

cljs.core.Stepper.cljs$lang$type = true;

cljs.core.Stepper.cljs$lang$ctorStr = "cljs.core/Stepper";

cljs.core.Stepper.cljs$lang$ctorPrWriter = (function (this__4319__auto__,writer__4320__auto__,opt__4321__auto__){
return cljs.core._write(writer__4320__auto__,"cljs.core/Stepper");
});

cljs.core.__GT_Stepper = (function __GT_Stepper(xform,iter){
return (new cljs.core.Stepper(xform,iter));
});

cljs.core.stepper = (function stepper(xform,iter){
var stepfn = (function() {
var stepfn = null;
var stepfn__1 = (function (result){
var lt = ((cljs.core.reduced_QMARK_(result))?cljs.core.deref(result):result);
lt.stepper = null;

return result;
});
var stepfn__2 = (function (result,input){
var lt = result;
lt.first = input;

lt.rest = cljs.core.lazy_transformer(lt.stepper);

lt.stepper = null;

return lt.rest;
});
stepfn = function(result,input){
switch(arguments.length){
case 1:
return stepfn__1.call(this,result);
case 2:
return stepfn__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
stepfn.cljs$core$IFn$_invoke$arity$1 = stepfn__1;
stepfn.cljs$core$IFn$_invoke$arity$2 = stepfn__2;
return stepfn;
})()
;
return (new cljs.core.Stepper((function (){var G__7376 = stepfn;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__7376) : xform.call(null,G__7376));
})(),iter));
});

/**
* @constructor
*/
cljs.core.MultiStepper = (function (xform,iters,nexts){
this.xform = xform;
this.iters = iters;
this.nexts = nexts;
})
cljs.core.MultiStepper.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
var iters__$1 = cljs.core.seq(self__.iters);
while(true){
if(!((iters__$1 == null))){
var iter = cljs.core.first(iters__$1);
if(cljs.core.not(iter.hasNext())){
return false;
} else {
var G__7378 = cljs.core.next(iters__$1);
iters__$1 = G__7378;
continue;
}
} else {
return true;
}
break;
}
});

cljs.core.MultiStepper.prototype.next = (function (){
var self__ = this;
var _ = this;
var n__4619__auto___7379 = self__.iters.length;
var i_7380 = (0);
while(true){
if((i_7380 < n__4619__auto___7379)){
(self__.nexts[i_7380] = (self__.iters[i_7380]).next());

var G__7381 = (i_7380 + (1));
i_7380 = G__7381;
continue;
} else {
}
break;
}

return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(self__.nexts,(0));
});

cljs.core.MultiStepper.prototype.step = (function (lt){
var self__ = this;
var this$ = this;
while(true){
if(cljs.core.truth_((function (){var and__3720__auto__ = !((lt.stepper == null));
if(and__3720__auto__){
return this$.hasNext();
} else {
return and__3720__auto__;
}
})())){
if(cljs.core.reduced_QMARK_(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(self__.xform,cljs.core.cons(lt,this$.next())))){
if((lt.rest == null)){
} else {
lt.rest.stepper = null;
}
} else {
continue;
}
} else {
}
break;
}

if((lt.stepper == null)){
return null;
} else {
var G__7377 = lt;
return (self__.xform.cljs$core$IFn$_invoke$arity$1 ? self__.xform.cljs$core$IFn$_invoke$arity$1(G__7377) : self__.xform.call(null,G__7377));
}
});

cljs.core.MultiStepper.cljs$lang$type = true;

cljs.core.MultiStepper.cljs$lang$ctorStr = "cljs.core/MultiStepper";

cljs.core.MultiStepper.cljs$lang$ctorPrWriter = (function (this__4319__auto__,writer__4320__auto__,opt__4321__auto__){
return cljs.core._write(writer__4320__auto__,"cljs.core/MultiStepper");
});

cljs.core.__GT_MultiStepper = (function __GT_MultiStepper(xform,iters,nexts){
return (new cljs.core.MultiStepper(xform,iters,nexts));
});

cljs.core.multi_stepper = (function() {
var multi_stepper = null;
var multi_stepper__2 = (function (xform,iters){
return multi_stepper.cljs$core$IFn$_invoke$arity$3(xform,iters,(new Array(iters.length)));
});
var multi_stepper__3 = (function (xform,iters,nexts){
var stepfn = (function() {
var stepfn = null;
var stepfn__1 = (function (result){
var lt = ((cljs.core.reduced_QMARK_(result))?cljs.core.deref(result):result);
lt.stepper = null;

return lt;
});
var stepfn__2 = (function (result,input){
var lt = result;
lt.first = input;

lt.rest = cljs.core.lazy_transformer(lt.stepper);

lt.stepper = null;

return lt.rest;
});
stepfn = function(result,input){
switch(arguments.length){
case 1:
return stepfn__1.call(this,result);
case 2:
return stepfn__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
stepfn.cljs$core$IFn$_invoke$arity$1 = stepfn__1;
stepfn.cljs$core$IFn$_invoke$arity$2 = stepfn__2;
return stepfn;
})()
;
return (new cljs.core.MultiStepper((function (){var G__7386 = stepfn;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__7386) : xform.call(null,G__7386));
})(),iters,nexts));
});
multi_stepper = function(xform,iters,nexts){
switch(arguments.length){
case 2:
return multi_stepper__2.call(this,xform,iters);
case 3:
return multi_stepper__3.call(this,xform,iters,nexts);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
multi_stepper.cljs$core$IFn$_invoke$arity$2 = multi_stepper__2;
multi_stepper.cljs$core$IFn$_invoke$arity$3 = multi_stepper__3;
return multi_stepper;
})()
;

/**
* @constructor
*/
cljs.core.LazyTransformer = (function (stepper,first,rest,meta){
this.stepper = stepper;
this.first = first;
this.rest = rest;
this.meta = meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 31719628;
})
cljs.core.LazyTransformer.prototype.cljs$core$INext$_next$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return cljs.core._seq(self__.rest);
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_first$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return self__.first;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_rest$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
self__.stepper.step(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return this$__$1;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.hash_ordered_coll(this$__$1);
});

cljs.core.LazyTransformer.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (this$,other){
var self__ = this;
var this$__$1 = this;
var s = cljs.core._seq(this$__$1);
if(!((s == null))){
return cljs.core.equiv_sequential(this$__$1,other);
} else {
return (cljs.core.sequential_QMARK_(other)) && ((cljs.core.seq(other) == null));
}
});

cljs.core.LazyTransformer.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.LazyTransformer.prototype.cljs$core$ICollection$_conj$arity$2 = (function (this$,o){
var self__ = this;
var this$__$1 = this;
return cljs.core.cons(o,cljs.core._seq(this$__$1));
});

cljs.core.LazyTransformer.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (this$,new_meta){
var self__ = this;
var this$__$1 = this;
return (new cljs.core.LazyTransformer(self__.stepper,self__.first,self__.rest,new_meta));
});

cljs.core.LazyTransformer.cljs$lang$type = true;

cljs.core.LazyTransformer.cljs$lang$ctorStr = "cljs.core/LazyTransformer";

cljs.core.LazyTransformer.cljs$lang$ctorPrWriter = (function (this__4319__auto__,writer__4320__auto__,opt__4321__auto__){
return cljs.core._write(writer__4320__auto__,"cljs.core/LazyTransformer");
});

cljs.core.__GT_LazyTransformer = (function __GT_LazyTransformer(stepper,first,rest,meta){
return (new cljs.core.LazyTransformer(stepper,first,rest,meta));
});

(cljs.core.LazyTransformer.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4710__auto__ = this;
return cljs.core.es6_iterator(this__4710__auto__);
}));
cljs.core.LazyTransformer.create = (function (xform,coll){
return (new cljs.core.LazyTransformer(cljs.core.stepper(xform,cljs.core.iter(coll)),null,null,null));
});
cljs.core.LazyTransformer.createMulti = (function (xform,colls){
var iters = [];
var seq__7387_7391 = cljs.core.seq(colls);
var chunk__7388_7392 = null;
var count__7389_7393 = (0);
var i__7390_7394 = (0);
while(true){
if((i__7390_7394 < count__7389_7393)){
var coll_7395 = chunk__7388_7392.cljs$core$IIndexed$_nth$arity$2(null,i__7390_7394);
iters.push(cljs.core.iter(coll_7395));

var G__7396 = seq__7387_7391;
var G__7397 = chunk__7388_7392;
var G__7398 = count__7389_7393;
var G__7399 = (i__7390_7394 + (1));
seq__7387_7391 = G__7396;
chunk__7388_7392 = G__7397;
count__7389_7393 = G__7398;
i__7390_7394 = G__7399;
continue;
} else {
var temp__4126__auto___7400 = cljs.core.seq(seq__7387_7391);
if(temp__4126__auto___7400){
var seq__7387_7401__$1 = temp__4126__auto___7400;
if(cljs.core.chunked_seq_QMARK_(seq__7387_7401__$1)){
var c__4519__auto___7402 = cljs.core.chunk_first(seq__7387_7401__$1);
var G__7403 = cljs.core.chunk_rest(seq__7387_7401__$1);
var G__7404 = c__4519__auto___7402;
var G__7405 = cljs.core.count(c__4519__auto___7402);
var G__7406 = (0);
seq__7387_7391 = G__7403;
chunk__7388_7392 = G__7404;
count__7389_7393 = G__7405;
i__7390_7394 = G__7406;
continue;
} else {
var coll_7407 = cljs.core.first(seq__7387_7401__$1);
iters.push(cljs.core.iter(coll_7407));

var G__7408 = cljs.core.next(seq__7387_7401__$1);
var G__7409 = null;
var G__7410 = (0);
var G__7411 = (0);
seq__7387_7391 = G__7408;
chunk__7388_7392 = G__7409;
count__7389_7393 = G__7410;
i__7390_7394 = G__7411;
continue;
}
} else {
}
}
break;
}

return (new cljs.core.LazyTransformer(cljs.core.multi_stepper.cljs$core$IFn$_invoke$arity$3(xform,iters,(new Array(iters.length))),null,null,null));
});
/**
* Coerces coll to a (possibly empty) sequence, if it is not already
* one. Will not force a lazy seq. (sequence nil) yields (), When a
* transducer is supplied, returns a lazy sequence of applications of
* the transform to the items in coll(s), i.e. to the set of first
* items of each coll, followed by the set of second
* items in each coll, until any one of the colls is exhausted.  Any
* remaining items in other colls are ignored. The transform should accept
* number-of-colls arguments
* @param {...*} var_args
*/
cljs.core.sequence = (function() {
var sequence = null;
var sequence__1 = (function (coll){
if(cljs.core.seq_QMARK_(coll)){
return coll;
} else {
var or__3732__auto__ = cljs.core.seq(coll);
if(or__3732__auto__){
return or__3732__auto__;
} else {
return cljs.core.List.EMPTY;
}
}
});
var sequence__2 = (function (xform,coll){
return cljs.core.LazyTransformer.create(xform,coll);
});
var sequence__3 = (function() { 
var G__7412__delegate = function (xform,coll,colls){
return cljs.core.LazyTransformer.createMulti(xform,cljs.core.to_array(cljs.core.cons(coll,colls)));
};
var G__7412 = function (xform,coll,var_args){
var colls = null;
if (arguments.length > 2) {
var G__7413__i = 0, G__7413__a = new Array(arguments.length -  2);
while (G__7413__i < G__7413__a.length) {G__7413__a[G__7413__i] = arguments[G__7413__i + 2]; ++G__7413__i;}
  colls = new cljs.core.IndexedSeq(G__7413__a,0);
} 
return G__7412__delegate.call(this,xform,coll,colls);};
G__7412.cljs$lang$maxFixedArity = 2;
G__7412.cljs$lang$applyTo = (function (arglist__7414){
var xform = cljs.core.first(arglist__7414);
arglist__7414 = cljs.core.next(arglist__7414);
var coll = cljs.core.first(arglist__7414);
var colls = cljs.core.rest(arglist__7414);
return G__7412__delegate(xform,coll,colls);
});
G__7412.cljs$core$IFn$_invoke$arity$variadic = G__7412__delegate;
return G__7412;
})()
;
sequence = function(xform,coll,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return sequence__1.call(this,xform);
case 2:
return sequence__2.call(this,xform,coll);
default:
var G__7415 = null;
if (arguments.length > 2) {
var G__7416__i = 0, G__7416__a = new Array(arguments.length -  2);
while (G__7416__i < G__7416__a.length) {G__7416__a[G__7416__i] = arguments[G__7416__i + 2]; ++G__7416__i;}
G__7415 = new cljs.core.IndexedSeq(G__7416__a,0);
}
return sequence__3.cljs$core$IFn$_invoke$arity$variadic(xform,coll, G__7415);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sequence.cljs$lang$maxFixedArity = 2;
sequence.cljs$lang$applyTo = sequence__3.cljs$lang$applyTo;
sequence.cljs$core$IFn$_invoke$arity$1 = sequence__1;
sequence.cljs$core$IFn$_invoke$arity$2 = sequence__2;
sequence.cljs$core$IFn$_invoke$arity$variadic = sequence__3.cljs$core$IFn$_invoke$arity$variadic;
return sequence;
})()
;
/**
* Returns true if (pred x) is logical true for every x in coll, else
* false.
*/
cljs.core.every_QMARK_ = (function every_QMARK_(pred,coll){
while(true){
if((cljs.core.seq(coll) == null)){
return true;
} else {
if(cljs.core.truth_((function (){var G__7418 = cljs.core.first(coll);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__7418) : pred.call(null,G__7418));
})())){
var G__7419 = pred;
var G__7420 = cljs.core.next(coll);
pred = G__7419;
coll = G__7420;
continue;
} else {
return false;

}
}
break;
}
});
/**
* Returns false if (pred x) is logical true for every x in
* coll, else true.
*/
cljs.core.not_every_QMARK_ = (function not_every_QMARK_(pred,coll){
return !(cljs.core.every_QMARK_(pred,coll));
});
/**
* Returns the first logical true value of (pred x) for any x in coll,
* else nil.  One common idiom is to use a set as pred, for example
* this will return :fred if :fred is in the sequence, otherwise nil:
* (some #{:fred} coll)
*/
cljs.core.some = (function some(pred,coll){
while(true){
if(cljs.core.seq(coll)){
var or__3732__auto__ = (function (){var G__7424 = cljs.core.first(coll);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__7424) : pred.call(null,G__7424));
})();
if(cljs.core.truth_(or__3732__auto__)){
return or__3732__auto__;
} else {
var G__7425 = pred;
var G__7426 = cljs.core.next(coll);
pred = G__7425;
coll = G__7426;
continue;
}
} else {
return null;
}
break;
}
});
/**
* Returns false if (pred x) is logical true for any x in coll,
* else true.
*/
cljs.core.not_any_QMARK_ = (function not_any_QMARK_(pred,coll){
return cljs.core.not(cljs.core.some(pred,coll));
});
/**
* Returns true if n is even, throws an exception if n is not an integer
*/
cljs.core.even_QMARK_ = (function even_QMARK_(n){
if(cljs.core.integer_QMARK_(n)){
return ((n & (1)) === (0));
} else {
throw (new Error([cljs.core.str("Argument must be an integer: "),cljs.core.str(n)].join('')));
}
});
/**
* Returns true if n is odd, throws an exception if n is not an integer
*/
cljs.core.odd_QMARK_ = (function odd_QMARK_(n){
return !(cljs.core.even_QMARK_(n));
});
/**
* Takes a fn f and returns a fn that takes the same arguments as f,
* has the same effects, if any, and returns the opposite truth value.
*/
cljs.core.complement = (function complement(f){
return (function() {
var G__7433 = null;
var G__7433__0 = (function (){
return cljs.core.not((function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})());
});
var G__7433__1 = (function (x){
return cljs.core.not((function (){var G__7430 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__7430) : f.call(null,G__7430));
})());
});
var G__7433__2 = (function (x,y){
return cljs.core.not((function (){var G__7431 = x;
var G__7432 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__7431,G__7432) : f.call(null,G__7431,G__7432));
})());
});
var G__7433__3 = (function() { 
var G__7434__delegate = function (x,y,zs){
return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(f,x,y,zs));
};
var G__7434 = function (x,y,var_args){
var zs = null;
if (arguments.length > 2) {
var G__7435__i = 0, G__7435__a = new Array(arguments.length -  2);
while (G__7435__i < G__7435__a.length) {G__7435__a[G__7435__i] = arguments[G__7435__i + 2]; ++G__7435__i;}
  zs = new cljs.core.IndexedSeq(G__7435__a,0);
} 
return G__7434__delegate.call(this,x,y,zs);};
G__7434.cljs$lang$maxFixedArity = 2;
G__7434.cljs$lang$applyTo = (function (arglist__7436){
var x = cljs.core.first(arglist__7436);
arglist__7436 = cljs.core.next(arglist__7436);
var y = cljs.core.first(arglist__7436);
var zs = cljs.core.rest(arglist__7436);
return G__7434__delegate(x,y,zs);
});
G__7434.cljs$core$IFn$_invoke$arity$variadic = G__7434__delegate;
return G__7434;
})()
;
G__7433 = function(x,y,var_args){
var zs = var_args;
switch(arguments.length){
case 0:
return G__7433__0.call(this);
case 1:
return G__7433__1.call(this,x);
case 2:
return G__7433__2.call(this,x,y);
default:
var G__7437 = null;
if (arguments.length > 2) {
var G__7438__i = 0, G__7438__a = new Array(arguments.length -  2);
while (G__7438__i < G__7438__a.length) {G__7438__a[G__7438__i] = arguments[G__7438__i + 2]; ++G__7438__i;}
G__7437 = new cljs.core.IndexedSeq(G__7438__a,0);
}
return G__7433__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__7437);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__7433.cljs$lang$maxFixedArity = 2;
G__7433.cljs$lang$applyTo = G__7433__3.cljs$lang$applyTo;
G__7433.cljs$core$IFn$_invoke$arity$0 = G__7433__0;
G__7433.cljs$core$IFn$_invoke$arity$1 = G__7433__1;
G__7433.cljs$core$IFn$_invoke$arity$2 = G__7433__2;
G__7433.cljs$core$IFn$_invoke$arity$variadic = G__7433__3.cljs$core$IFn$_invoke$arity$variadic;
return G__7433;
})()
});
/**
* Returns a function that takes any number of arguments and returns x.
*/
cljs.core.constantly = (function constantly(x){
return (function() { 
var G__7439__delegate = function (args){
return x;
};
var G__7439 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__7440__i = 0, G__7440__a = new Array(arguments.length -  0);
while (G__7440__i < G__7440__a.length) {G__7440__a[G__7440__i] = arguments[G__7440__i + 0]; ++G__7440__i;}
  args = new cljs.core.IndexedSeq(G__7440__a,0);
} 
return G__7439__delegate.call(this,args);};
G__7439.cljs$lang$maxFixedArity = 0;
G__7439.cljs$lang$applyTo = (function (arglist__7441){
var args = cljs.core.seq(arglist__7441);
return G__7439__delegate(args);
});
G__7439.cljs$core$IFn$_invoke$arity$variadic = G__7439__delegate;
return G__7439;
})()
;
});
/**
* Takes a set of functions and returns a fn that is the composition
* of those fns.  The returned fn takes a variable number of args,
* applies the rightmost of fns to the args, the next
* fn (right-to-left) to the result, etc.
* @param {...*} var_args
*/
cljs.core.comp = (function() {
var comp = null;
var comp__0 = (function (){
return cljs.core.identity;
});
var comp__1 = (function (f){
return f;
});
var comp__2 = (function (f,g){
return (function() {
var G__7496 = null;
var G__7496__0 = (function (){
var G__7469 = (function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__7469) : f.call(null,G__7469));
});
var G__7496__1 = (function (x){
var G__7470 = (function (){var G__7471 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__7471) : g.call(null,G__7471));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__7470) : f.call(null,G__7470));
});
var G__7496__2 = (function (x,y){
var G__7472 = (function (){var G__7473 = x;
var G__7474 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__7473,G__7474) : g.call(null,G__7473,G__7474));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__7472) : f.call(null,G__7472));
});
var G__7496__3 = (function (x,y,z){
var G__7475 = (function (){var G__7476 = x;
var G__7477 = y;
var G__7478 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__7476,G__7477,G__7478) : g.call(null,G__7476,G__7477,G__7478));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__7475) : f.call(null,G__7475));
});
var G__7496__4 = (function() { 
var G__7497__delegate = function (x,y,z,args){
var G__7479 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__7479) : f.call(null,G__7479));
};
var G__7497 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__7498__i = 0, G__7498__a = new Array(arguments.length -  3);
while (G__7498__i < G__7498__a.length) {G__7498__a[G__7498__i] = arguments[G__7498__i + 3]; ++G__7498__i;}
  args = new cljs.core.IndexedSeq(G__7498__a,0);
} 
return G__7497__delegate.call(this,x,y,z,args);};
G__7497.cljs$lang$maxFixedArity = 3;
G__7497.cljs$lang$applyTo = (function (arglist__7499){
var x = cljs.core.first(arglist__7499);
arglist__7499 = cljs.core.next(arglist__7499);
var y = cljs.core.first(arglist__7499);
arglist__7499 = cljs.core.next(arglist__7499);
var z = cljs.core.first(arglist__7499);
var args = cljs.core.rest(arglist__7499);
return G__7497__delegate(x,y,z,args);
});
G__7497.cljs$core$IFn$_invoke$arity$variadic = G__7497__delegate;
return G__7497;
})()
;
G__7496 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__7496__0.call(this);
case 1:
return G__7496__1.call(this,x);
case 2:
return G__7496__2.call(this,x,y);
case 3:
return G__7496__3.call(this,x,y,z);
default:
var G__7500 = null;
if (arguments.length > 3) {
var G__7501__i = 0, G__7501__a = new Array(arguments.length -  3);
while (G__7501__i < G__7501__a.length) {G__7501__a[G__7501__i] = arguments[G__7501__i + 3]; ++G__7501__i;}
G__7500 = new cljs.core.IndexedSeq(G__7501__a,0);
}
return G__7496__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__7500);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__7496.cljs$lang$maxFixedArity = 3;
G__7496.cljs$lang$applyTo = G__7496__4.cljs$lang$applyTo;
G__7496.cljs$core$IFn$_invoke$arity$0 = G__7496__0;
G__7496.cljs$core$IFn$_invoke$arity$1 = G__7496__1;
G__7496.cljs$core$IFn$_invoke$arity$2 = G__7496__2;
G__7496.cljs$core$IFn$_invoke$arity$3 = G__7496__3;
G__7496.cljs$core$IFn$_invoke$arity$variadic = G__7496__4.cljs$core$IFn$_invoke$arity$variadic;
return G__7496;
})()
});
var comp__3 = (function (f,g,h){
return (function() {
var G__7502 = null;
var G__7502__0 = (function (){
var G__7480 = (function (){var G__7481 = (function (){return (h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__7481) : g.call(null,G__7481));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__7480) : f.call(null,G__7480));
});
var G__7502__1 = (function (x){
var G__7482 = (function (){var G__7483 = (function (){var G__7484 = x;
return (h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(G__7484) : h.call(null,G__7484));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__7483) : g.call(null,G__7483));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__7482) : f.call(null,G__7482));
});
var G__7502__2 = (function (x,y){
var G__7485 = (function (){var G__7486 = (function (){var G__7487 = x;
var G__7488 = y;
return (h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(G__7487,G__7488) : h.call(null,G__7487,G__7488));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__7486) : g.call(null,G__7486));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__7485) : f.call(null,G__7485));
});
var G__7502__3 = (function (x,y,z){
var G__7489 = (function (){var G__7490 = (function (){var G__7491 = x;
var G__7492 = y;
var G__7493 = z;
return (h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(G__7491,G__7492,G__7493) : h.call(null,G__7491,G__7492,G__7493));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__7490) : g.call(null,G__7490));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__7489) : f.call(null,G__7489));
});
var G__7502__4 = (function() { 
var G__7503__delegate = function (x,y,z,args){
var G__7494 = (function (){var G__7495 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h,x,y,z,args);
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__7495) : g.call(null,G__7495));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__7494) : f.call(null,G__7494));
};
var G__7503 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__7504__i = 0, G__7504__a = new Array(arguments.length -  3);
while (G__7504__i < G__7504__a.length) {G__7504__a[G__7504__i] = arguments[G__7504__i + 3]; ++G__7504__i;}
  args = new cljs.core.IndexedSeq(G__7504__a,0);
} 
return G__7503__delegate.call(this,x,y,z,args);};
G__7503.cljs$lang$maxFixedArity = 3;
G__7503.cljs$lang$applyTo = (function (arglist__7505){
var x = cljs.core.first(arglist__7505);
arglist__7505 = cljs.core.next(arglist__7505);
var y = cljs.core.first(arglist__7505);
arglist__7505 = cljs.core.next(arglist__7505);
var z = cljs.core.first(arglist__7505);
var args = cljs.core.rest(arglist__7505);
return G__7503__delegate(x,y,z,args);
});
G__7503.cljs$core$IFn$_invoke$arity$variadic = G__7503__delegate;
return G__7503;
})()
;
G__7502 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__7502__0.call(this);
case 1:
return G__7502__1.call(this,x);
case 2:
return G__7502__2.call(this,x,y);
case 3:
return G__7502__3.call(this,x,y,z);
default:
var G__7506 = null;
if (arguments.length > 3) {
var G__7507__i = 0, G__7507__a = new Array(arguments.length -  3);
while (G__7507__i < G__7507__a.length) {G__7507__a[G__7507__i] = arguments[G__7507__i + 3]; ++G__7507__i;}
G__7506 = new cljs.core.IndexedSeq(G__7507__a,0);
}
return G__7502__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__7506);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__7502.cljs$lang$maxFixedArity = 3;
G__7502.cljs$lang$applyTo = G__7502__4.cljs$lang$applyTo;
G__7502.cljs$core$IFn$_invoke$arity$0 = G__7502__0;
G__7502.cljs$core$IFn$_invoke$arity$1 = G__7502__1;
G__7502.cljs$core$IFn$_invoke$arity$2 = G__7502__2;
G__7502.cljs$core$IFn$_invoke$arity$3 = G__7502__3;
G__7502.cljs$core$IFn$_invoke$arity$variadic = G__7502__4.cljs$core$IFn$_invoke$arity$variadic;
return G__7502;
})()
});
var comp__4 = (function() { 
var G__7508__delegate = function (f1,f2,f3,fs){
var fs__$1 = cljs.core.reverse(cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f1,f2,f3,fs));
return ((function (fs__$1){
return (function() { 
var G__7509__delegate = function (args){
var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.first(fs__$1),args);
var fs__$2 = cljs.core.next(fs__$1);
while(true){
if(fs__$2){
var G__7510 = cljs.core.first(fs__$2).call(null,ret);
var G__7511 = cljs.core.next(fs__$2);
ret = G__7510;
fs__$2 = G__7511;
continue;
} else {
return ret;
}
break;
}
};
var G__7509 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__7512__i = 0, G__7512__a = new Array(arguments.length -  0);
while (G__7512__i < G__7512__a.length) {G__7512__a[G__7512__i] = arguments[G__7512__i + 0]; ++G__7512__i;}
  args = new cljs.core.IndexedSeq(G__7512__a,0);
} 
return G__7509__delegate.call(this,args);};
G__7509.cljs$lang$maxFixedArity = 0;
G__7509.cljs$lang$applyTo = (function (arglist__7513){
var args = cljs.core.seq(arglist__7513);
return G__7509__delegate(args);
});
G__7509.cljs$core$IFn$_invoke$arity$variadic = G__7509__delegate;
return G__7509;
})()
;
;})(fs__$1))
};
var G__7508 = function (f1,f2,f3,var_args){
var fs = null;
if (arguments.length > 3) {
var G__7514__i = 0, G__7514__a = new Array(arguments.length -  3);
while (G__7514__i < G__7514__a.length) {G__7514__a[G__7514__i] = arguments[G__7514__i + 3]; ++G__7514__i;}
  fs = new cljs.core.IndexedSeq(G__7514__a,0);
} 
return G__7508__delegate.call(this,f1,f2,f3,fs);};
G__7508.cljs$lang$maxFixedArity = 3;
G__7508.cljs$lang$applyTo = (function (arglist__7515){
var f1 = cljs.core.first(arglist__7515);
arglist__7515 = cljs.core.next(arglist__7515);
var f2 = cljs.core.first(arglist__7515);
arglist__7515 = cljs.core.next(arglist__7515);
var f3 = cljs.core.first(arglist__7515);
var fs = cljs.core.rest(arglist__7515);
return G__7508__delegate(f1,f2,f3,fs);
});
G__7508.cljs$core$IFn$_invoke$arity$variadic = G__7508__delegate;
return G__7508;
})()
;
comp = function(f1,f2,f3,var_args){
var fs = var_args;
switch(arguments.length){
case 0:
return comp__0.call(this);
case 1:
return comp__1.call(this,f1);
case 2:
return comp__2.call(this,f1,f2);
case 3:
return comp__3.call(this,f1,f2,f3);
default:
var G__7516 = null;
if (arguments.length > 3) {
var G__7517__i = 0, G__7517__a = new Array(arguments.length -  3);
while (G__7517__i < G__7517__a.length) {G__7517__a[G__7517__i] = arguments[G__7517__i + 3]; ++G__7517__i;}
G__7516 = new cljs.core.IndexedSeq(G__7517__a,0);
}
return comp__4.cljs$core$IFn$_invoke$arity$variadic(f1,f2,f3, G__7516);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
comp.cljs$lang$maxFixedArity = 3;
comp.cljs$lang$applyTo = comp__4.cljs$lang$applyTo;
comp.cljs$core$IFn$_invoke$arity$0 = comp__0;
comp.cljs$core$IFn$_invoke$arity$1 = comp__1;
comp.cljs$core$IFn$_invoke$arity$2 = comp__2;
comp.cljs$core$IFn$_invoke$arity$3 = comp__3;
comp.cljs$core$IFn$_invoke$arity$variadic = comp__4.cljs$core$IFn$_invoke$arity$variadic;
return comp;
})()
;
/**
* Takes a function f and fewer than the normal arguments to f, and
* returns a fn that takes a variable number of additional args. When
* called, the returned function calls f with args + additional args.
* @param {...*} var_args
*/
cljs.core.partial = (function() {
var partial = null;
var partial__1 = (function (f){
return f;
});
var partial__2 = (function (f,arg1){
return (function() {
var G__7602 = null;
var G__7602__0 = (function (){
var G__7560 = arg1;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__7560) : f.call(null,G__7560));
});
var G__7602__1 = (function (x){
var G__7561 = arg1;
var G__7562 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__7561,G__7562) : f.call(null,G__7561,G__7562));
});
var G__7602__2 = (function (x,y){
var G__7563 = arg1;
var G__7564 = x;
var G__7565 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__7563,G__7564,G__7565) : f.call(null,G__7563,G__7564,G__7565));
});
var G__7602__3 = (function (x,y,z){
var G__7566 = arg1;
var G__7567 = x;
var G__7568 = y;
var G__7569 = z;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__7566,G__7567,G__7568,G__7569) : f.call(null,G__7566,G__7567,G__7568,G__7569));
});
var G__7602__4 = (function() { 
var G__7603__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,x,y,z,cljs.core.array_seq([args], 0));
};
var G__7603 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__7604__i = 0, G__7604__a = new Array(arguments.length -  3);
while (G__7604__i < G__7604__a.length) {G__7604__a[G__7604__i] = arguments[G__7604__i + 3]; ++G__7604__i;}
  args = new cljs.core.IndexedSeq(G__7604__a,0);
} 
return G__7603__delegate.call(this,x,y,z,args);};
G__7603.cljs$lang$maxFixedArity = 3;
G__7603.cljs$lang$applyTo = (function (arglist__7605){
var x = cljs.core.first(arglist__7605);
arglist__7605 = cljs.core.next(arglist__7605);
var y = cljs.core.first(arglist__7605);
arglist__7605 = cljs.core.next(arglist__7605);
var z = cljs.core.first(arglist__7605);
var args = cljs.core.rest(arglist__7605);
return G__7603__delegate(x,y,z,args);
});
G__7603.cljs$core$IFn$_invoke$arity$variadic = G__7603__delegate;
return G__7603;
})()
;
G__7602 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__7602__0.call(this);
case 1:
return G__7602__1.call(this,x);
case 2:
return G__7602__2.call(this,x,y);
case 3:
return G__7602__3.call(this,x,y,z);
default:
var G__7606 = null;
if (arguments.length > 3) {
var G__7607__i = 0, G__7607__a = new Array(arguments.length -  3);
while (G__7607__i < G__7607__a.length) {G__7607__a[G__7607__i] = arguments[G__7607__i + 3]; ++G__7607__i;}
G__7606 = new cljs.core.IndexedSeq(G__7607__a,0);
}
return G__7602__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__7606);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__7602.cljs$lang$maxFixedArity = 3;
G__7602.cljs$lang$applyTo = G__7602__4.cljs$lang$applyTo;
G__7602.cljs$core$IFn$_invoke$arity$0 = G__7602__0;
G__7602.cljs$core$IFn$_invoke$arity$1 = G__7602__1;
G__7602.cljs$core$IFn$_invoke$arity$2 = G__7602__2;
G__7602.cljs$core$IFn$_invoke$arity$3 = G__7602__3;
G__7602.cljs$core$IFn$_invoke$arity$variadic = G__7602__4.cljs$core$IFn$_invoke$arity$variadic;
return G__7602;
})()
});
var partial__3 = (function (f,arg1,arg2){
return (function() {
var G__7608 = null;
var G__7608__0 = (function (){
var G__7570 = arg1;
var G__7571 = arg2;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__7570,G__7571) : f.call(null,G__7570,G__7571));
});
var G__7608__1 = (function (x){
var G__7572 = arg1;
var G__7573 = arg2;
var G__7574 = x;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__7572,G__7573,G__7574) : f.call(null,G__7572,G__7573,G__7574));
});
var G__7608__2 = (function (x,y){
var G__7575 = arg1;
var G__7576 = arg2;
var G__7577 = x;
var G__7578 = y;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__7575,G__7576,G__7577,G__7578) : f.call(null,G__7575,G__7576,G__7577,G__7578));
});
var G__7608__3 = (function (x,y,z){
var G__7579 = arg1;
var G__7580 = arg2;
var G__7581 = x;
var G__7582 = y;
var G__7583 = z;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__7579,G__7580,G__7581,G__7582,G__7583) : f.call(null,G__7579,G__7580,G__7581,G__7582,G__7583));
});
var G__7608__4 = (function() { 
var G__7609__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,x,y,cljs.core.array_seq([z,args], 0));
};
var G__7609 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__7610__i = 0, G__7610__a = new Array(arguments.length -  3);
while (G__7610__i < G__7610__a.length) {G__7610__a[G__7610__i] = arguments[G__7610__i + 3]; ++G__7610__i;}
  args = new cljs.core.IndexedSeq(G__7610__a,0);
} 
return G__7609__delegate.call(this,x,y,z,args);};
G__7609.cljs$lang$maxFixedArity = 3;
G__7609.cljs$lang$applyTo = (function (arglist__7611){
var x = cljs.core.first(arglist__7611);
arglist__7611 = cljs.core.next(arglist__7611);
var y = cljs.core.first(arglist__7611);
arglist__7611 = cljs.core.next(arglist__7611);
var z = cljs.core.first(arglist__7611);
var args = cljs.core.rest(arglist__7611);
return G__7609__delegate(x,y,z,args);
});
G__7609.cljs$core$IFn$_invoke$arity$variadic = G__7609__delegate;
return G__7609;
})()
;
G__7608 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__7608__0.call(this);
case 1:
return G__7608__1.call(this,x);
case 2:
return G__7608__2.call(this,x,y);
case 3:
return G__7608__3.call(this,x,y,z);
default:
var G__7612 = null;
if (arguments.length > 3) {
var G__7613__i = 0, G__7613__a = new Array(arguments.length -  3);
while (G__7613__i < G__7613__a.length) {G__7613__a[G__7613__i] = arguments[G__7613__i + 3]; ++G__7613__i;}
G__7612 = new cljs.core.IndexedSeq(G__7613__a,0);
}
return G__7608__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__7612);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__7608.cljs$lang$maxFixedArity = 3;
G__7608.cljs$lang$applyTo = G__7608__4.cljs$lang$applyTo;
G__7608.cljs$core$IFn$_invoke$arity$0 = G__7608__0;
G__7608.cljs$core$IFn$_invoke$arity$1 = G__7608__1;
G__7608.cljs$core$IFn$_invoke$arity$2 = G__7608__2;
G__7608.cljs$core$IFn$_invoke$arity$3 = G__7608__3;
G__7608.cljs$core$IFn$_invoke$arity$variadic = G__7608__4.cljs$core$IFn$_invoke$arity$variadic;
return G__7608;
})()
});
var partial__4 = (function (f,arg1,arg2,arg3){
return (function() {
var G__7614 = null;
var G__7614__0 = (function (){
var G__7584 = arg1;
var G__7585 = arg2;
var G__7586 = arg3;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__7584,G__7585,G__7586) : f.call(null,G__7584,G__7585,G__7586));
});
var G__7614__1 = (function (x){
var G__7587 = arg1;
var G__7588 = arg2;
var G__7589 = arg3;
var G__7590 = x;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__7587,G__7588,G__7589,G__7590) : f.call(null,G__7587,G__7588,G__7589,G__7590));
});
var G__7614__2 = (function (x,y){
var G__7591 = arg1;
var G__7592 = arg2;
var G__7593 = arg3;
var G__7594 = x;
var G__7595 = y;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__7591,G__7592,G__7593,G__7594,G__7595) : f.call(null,G__7591,G__7592,G__7593,G__7594,G__7595));
});
var G__7614__3 = (function (x,y,z){
var G__7596 = arg1;
var G__7597 = arg2;
var G__7598 = arg3;
var G__7599 = x;
var G__7600 = y;
var G__7601 = z;
return (f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(G__7596,G__7597,G__7598,G__7599,G__7600,G__7601) : f.call(null,G__7596,G__7597,G__7598,G__7599,G__7600,G__7601));
});
var G__7614__4 = (function() { 
var G__7615__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,arg3,x,cljs.core.array_seq([y,z,args], 0));
};
var G__7615 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__7616__i = 0, G__7616__a = new Array(arguments.length -  3);
while (G__7616__i < G__7616__a.length) {G__7616__a[G__7616__i] = arguments[G__7616__i + 3]; ++G__7616__i;}
  args = new cljs.core.IndexedSeq(G__7616__a,0);
} 
return G__7615__delegate.call(this,x,y,z,args);};
G__7615.cljs$lang$maxFixedArity = 3;
G__7615.cljs$lang$applyTo = (function (arglist__7617){
var x = cljs.core.first(arglist__7617);
arglist__7617 = cljs.core.next(arglist__7617);
var y = cljs.core.first(arglist__7617);
arglist__7617 = cljs.core.next(arglist__7617);
var z = cljs.core.first(arglist__7617);
var args = cljs.core.rest(arglist__7617);
return G__7615__delegate(x,y,z,args);
});
G__7615.cljs$core$IFn$_invoke$arity$variadic = G__7615__delegate;
return G__7615;
})()
;
G__7614 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__7614__0.call(this);
case 1:
return G__7614__1.call(this,x);
case 2:
return G__7614__2.call(this,x,y);
case 3:
return G__7614__3.call(this,x,y,z);
default:
var G__7618 = null;
if (arguments.length > 3) {
var G__7619__i = 0, G__7619__a = new Array(arguments.length -  3);
while (G__7619__i < G__7619__a.length) {G__7619__a[G__7619__i] = arguments[G__7619__i + 3]; ++G__7619__i;}
G__7618 = new cljs.core.IndexedSeq(G__7619__a,0);
}
return G__7614__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__7618);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__7614.cljs$lang$maxFixedArity = 3;
G__7614.cljs$lang$applyTo = G__7614__4.cljs$lang$applyTo;
G__7614.cljs$core$IFn$_invoke$arity$0 = G__7614__0;
G__7614.cljs$core$IFn$_invoke$arity$1 = G__7614__1;
G__7614.cljs$core$IFn$_invoke$arity$2 = G__7614__2;
G__7614.cljs$core$IFn$_invoke$arity$3 = G__7614__3;
G__7614.cljs$core$IFn$_invoke$arity$variadic = G__7614__4.cljs$core$IFn$_invoke$arity$variadic;
return G__7614;
})()
});
var partial__5 = (function() { 
var G__7620__delegate = function (f,arg1,arg2,arg3,more){
return (function() { 
var G__7621__delegate = function (args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,arg1,arg2,arg3,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(more,args));
};
var G__7621 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__7622__i = 0, G__7622__a = new Array(arguments.length -  0);
while (G__7622__i < G__7622__a.length) {G__7622__a[G__7622__i] = arguments[G__7622__i + 0]; ++G__7622__i;}
  args = new cljs.core.IndexedSeq(G__7622__a,0);
} 
return G__7621__delegate.call(this,args);};
G__7621.cljs$lang$maxFixedArity = 0;
G__7621.cljs$lang$applyTo = (function (arglist__7623){
var args = cljs.core.seq(arglist__7623);
return G__7621__delegate(args);
});
G__7621.cljs$core$IFn$_invoke$arity$variadic = G__7621__delegate;
return G__7621;
})()
;
};
var G__7620 = function (f,arg1,arg2,arg3,var_args){
var more = null;
if (arguments.length > 4) {
var G__7624__i = 0, G__7624__a = new Array(arguments.length -  4);
while (G__7624__i < G__7624__a.length) {G__7624__a[G__7624__i] = arguments[G__7624__i + 4]; ++G__7624__i;}
  more = new cljs.core.IndexedSeq(G__7624__a,0);
} 
return G__7620__delegate.call(this,f,arg1,arg2,arg3,more);};
G__7620.cljs$lang$maxFixedArity = 4;
G__7620.cljs$lang$applyTo = (function (arglist__7625){
var f = cljs.core.first(arglist__7625);
arglist__7625 = cljs.core.next(arglist__7625);
var arg1 = cljs.core.first(arglist__7625);
arglist__7625 = cljs.core.next(arglist__7625);
var arg2 = cljs.core.first(arglist__7625);
arglist__7625 = cljs.core.next(arglist__7625);
var arg3 = cljs.core.first(arglist__7625);
var more = cljs.core.rest(arglist__7625);
return G__7620__delegate(f,arg1,arg2,arg3,more);
});
G__7620.cljs$core$IFn$_invoke$arity$variadic = G__7620__delegate;
return G__7620;
})()
;
partial = function(f,arg1,arg2,arg3,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return partial__1.call(this,f);
case 2:
return partial__2.call(this,f,arg1);
case 3:
return partial__3.call(this,f,arg1,arg2);
case 4:
return partial__4.call(this,f,arg1,arg2,arg3);
default:
var G__7626 = null;
if (arguments.length > 4) {
var G__7627__i = 0, G__7627__a = new Array(arguments.length -  4);
while (G__7627__i < G__7627__a.length) {G__7627__a[G__7627__i] = arguments[G__7627__i + 4]; ++G__7627__i;}
G__7626 = new cljs.core.IndexedSeq(G__7627__a,0);
}
return partial__5.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,arg3, G__7626);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partial.cljs$lang$maxFixedArity = 4;
partial.cljs$lang$applyTo = partial__5.cljs$lang$applyTo;
partial.cljs$core$IFn$_invoke$arity$1 = partial__1;
partial.cljs$core$IFn$_invoke$arity$2 = partial__2;
partial.cljs$core$IFn$_invoke$arity$3 = partial__3;
partial.cljs$core$IFn$_invoke$arity$4 = partial__4;
partial.cljs$core$IFn$_invoke$arity$variadic = partial__5.cljs$core$IFn$_invoke$arity$variadic;
return partial;
})()
;
/**
* Takes a function f, and returns a function that calls f, replacing
* a nil first argument to f with the supplied value x. Higher arity
* versions can replace arguments in the second and third
* positions (y, z). Note that the function f can take any number of
* arguments, not just the one(s) being nil-patched.
*/
cljs.core.fnil = (function() {
var fnil = null;
var fnil__2 = (function (f,x){
return (function() {
var G__7660 = null;
var G__7660__1 = (function (a){
var G__7644 = (((a == null))?x:a);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__7644) : f.call(null,G__7644));
});
var G__7660__2 = (function (a,b){
var G__7645 = (((a == null))?x:a);
var G__7646 = b;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__7645,G__7646) : f.call(null,G__7645,G__7646));
});
var G__7660__3 = (function (a,b,c){
var G__7647 = (((a == null))?x:a);
var G__7648 = b;
var G__7649 = c;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__7647,G__7648,G__7649) : f.call(null,G__7647,G__7648,G__7649));
});
var G__7660__4 = (function() { 
var G__7661__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),b,c,ds);
};
var G__7661 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__7662__i = 0, G__7662__a = new Array(arguments.length -  3);
while (G__7662__i < G__7662__a.length) {G__7662__a[G__7662__i] = arguments[G__7662__i + 3]; ++G__7662__i;}
  ds = new cljs.core.IndexedSeq(G__7662__a,0);
} 
return G__7661__delegate.call(this,a,b,c,ds);};
G__7661.cljs$lang$maxFixedArity = 3;
G__7661.cljs$lang$applyTo = (function (arglist__7663){
var a = cljs.core.first(arglist__7663);
arglist__7663 = cljs.core.next(arglist__7663);
var b = cljs.core.first(arglist__7663);
arglist__7663 = cljs.core.next(arglist__7663);
var c = cljs.core.first(arglist__7663);
var ds = cljs.core.rest(arglist__7663);
return G__7661__delegate(a,b,c,ds);
});
G__7661.cljs$core$IFn$_invoke$arity$variadic = G__7661__delegate;
return G__7661;
})()
;
G__7660 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 1:
return G__7660__1.call(this,a);
case 2:
return G__7660__2.call(this,a,b);
case 3:
return G__7660__3.call(this,a,b,c);
default:
var G__7664 = null;
if (arguments.length > 3) {
var G__7665__i = 0, G__7665__a = new Array(arguments.length -  3);
while (G__7665__i < G__7665__a.length) {G__7665__a[G__7665__i] = arguments[G__7665__i + 3]; ++G__7665__i;}
G__7664 = new cljs.core.IndexedSeq(G__7665__a,0);
}
return G__7660__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__7664);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__7660.cljs$lang$maxFixedArity = 3;
G__7660.cljs$lang$applyTo = G__7660__4.cljs$lang$applyTo;
G__7660.cljs$core$IFn$_invoke$arity$1 = G__7660__1;
G__7660.cljs$core$IFn$_invoke$arity$2 = G__7660__2;
G__7660.cljs$core$IFn$_invoke$arity$3 = G__7660__3;
G__7660.cljs$core$IFn$_invoke$arity$variadic = G__7660__4.cljs$core$IFn$_invoke$arity$variadic;
return G__7660;
})()
});
var fnil__3 = (function (f,x,y){
return (function() {
var G__7666 = null;
var G__7666__2 = (function (a,b){
var G__7650 = (((a == null))?x:a);
var G__7651 = (((b == null))?y:b);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__7650,G__7651) : f.call(null,G__7650,G__7651));
});
var G__7666__3 = (function (a,b,c){
var G__7652 = (((a == null))?x:a);
var G__7653 = (((b == null))?y:b);
var G__7654 = c;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__7652,G__7653,G__7654) : f.call(null,G__7652,G__7653,G__7654));
});
var G__7666__4 = (function() { 
var G__7667__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),(((b == null))?y:b),c,ds);
};
var G__7667 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__7668__i = 0, G__7668__a = new Array(arguments.length -  3);
while (G__7668__i < G__7668__a.length) {G__7668__a[G__7668__i] = arguments[G__7668__i + 3]; ++G__7668__i;}
  ds = new cljs.core.IndexedSeq(G__7668__a,0);
} 
return G__7667__delegate.call(this,a,b,c,ds);};
G__7667.cljs$lang$maxFixedArity = 3;
G__7667.cljs$lang$applyTo = (function (arglist__7669){
var a = cljs.core.first(arglist__7669);
arglist__7669 = cljs.core.next(arglist__7669);
var b = cljs.core.first(arglist__7669);
arglist__7669 = cljs.core.next(arglist__7669);
var c = cljs.core.first(arglist__7669);
var ds = cljs.core.rest(arglist__7669);
return G__7667__delegate(a,b,c,ds);
});
G__7667.cljs$core$IFn$_invoke$arity$variadic = G__7667__delegate;
return G__7667;
})()
;
G__7666 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 2:
return G__7666__2.call(this,a,b);
case 3:
return G__7666__3.call(this,a,b,c);
default:
var G__7670 = null;
if (arguments.length > 3) {
var G__7671__i = 0, G__7671__a = new Array(arguments.length -  3);
while (G__7671__i < G__7671__a.length) {G__7671__a[G__7671__i] = arguments[G__7671__i + 3]; ++G__7671__i;}
G__7670 = new cljs.core.IndexedSeq(G__7671__a,0);
}
return G__7666__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__7670);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__7666.cljs$lang$maxFixedArity = 3;
G__7666.cljs$lang$applyTo = G__7666__4.cljs$lang$applyTo;
G__7666.cljs$core$IFn$_invoke$arity$2 = G__7666__2;
G__7666.cljs$core$IFn$_invoke$arity$3 = G__7666__3;
G__7666.cljs$core$IFn$_invoke$arity$variadic = G__7666__4.cljs$core$IFn$_invoke$arity$variadic;
return G__7666;
})()
});
var fnil__4 = (function (f,x,y,z){
return (function() {
var G__7672 = null;
var G__7672__2 = (function (a,b){
var G__7655 = (((a == null))?x:a);
var G__7656 = (((b == null))?y:b);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__7655,G__7656) : f.call(null,G__7655,G__7656));
});
var G__7672__3 = (function (a,b,c){
var G__7657 = (((a == null))?x:a);
var G__7658 = (((b == null))?y:b);
var G__7659 = (((c == null))?z:c);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__7657,G__7658,G__7659) : f.call(null,G__7657,G__7658,G__7659));
});
var G__7672__4 = (function() { 
var G__7673__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),(((b == null))?y:b),(((c == null))?z:c),ds);
};
var G__7673 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__7674__i = 0, G__7674__a = new Array(arguments.length -  3);
while (G__7674__i < G__7674__a.length) {G__7674__a[G__7674__i] = arguments[G__7674__i + 3]; ++G__7674__i;}
  ds = new cljs.core.IndexedSeq(G__7674__a,0);
} 
return G__7673__delegate.call(this,a,b,c,ds);};
G__7673.cljs$lang$maxFixedArity = 3;
G__7673.cljs$lang$applyTo = (function (arglist__7675){
var a = cljs.core.first(arglist__7675);
arglist__7675 = cljs.core.next(arglist__7675);
var b = cljs.core.first(arglist__7675);
arglist__7675 = cljs.core.next(arglist__7675);
var c = cljs.core.first(arglist__7675);
var ds = cljs.core.rest(arglist__7675);
return G__7673__delegate(a,b,c,ds);
});
G__7673.cljs$core$IFn$_invoke$arity$variadic = G__7673__delegate;
return G__7673;
})()
;
G__7672 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 2:
return G__7672__2.call(this,a,b);
case 3:
return G__7672__3.call(this,a,b,c);
default:
var G__7676 = null;
if (arguments.length > 3) {
var G__7677__i = 0, G__7677__a = new Array(arguments.length -  3);
while (G__7677__i < G__7677__a.length) {G__7677__a[G__7677__i] = arguments[G__7677__i + 3]; ++G__7677__i;}
G__7676 = new cljs.core.IndexedSeq(G__7677__a,0);
}
return G__7672__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__7676);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__7672.cljs$lang$maxFixedArity = 3;
G__7672.cljs$lang$applyTo = G__7672__4.cljs$lang$applyTo;
G__7672.cljs$core$IFn$_invoke$arity$2 = G__7672__2;
G__7672.cljs$core$IFn$_invoke$arity$3 = G__7672__3;
G__7672.cljs$core$IFn$_invoke$arity$variadic = G__7672__4.cljs$core$IFn$_invoke$arity$variadic;
return G__7672;
})()
});
fnil = function(f,x,y,z){
switch(arguments.length){
case 2:
return fnil__2.call(this,f,x);
case 3:
return fnil__3.call(this,f,x,y);
case 4:
return fnil__4.call(this,f,x,y,z);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
fnil.cljs$core$IFn$_invoke$arity$2 = fnil__2;
fnil.cljs$core$IFn$_invoke$arity$3 = fnil__3;
fnil.cljs$core$IFn$_invoke$arity$4 = fnil__4;
return fnil;
})()
;
/**
* Returns a lazy sequence consisting of the result of applying f to 0
* and the first item of coll, followed by applying f to 1 and the second
* item in coll, etc, until coll is exhausted. Thus function f should
* accept 2 arguments, index and item.
*/
cljs.core.map_indexed = (function map_indexed(f,coll){
var mapi = (function mapi(idx,coll__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll__$1);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__4619__auto___7726 = size;
var i_7727 = (0);
while(true){
if((i_7727 < n__4619__auto___7726)){
cljs.core.chunk_append(b,(function (){var G__7722 = (idx + i_7727);
var G__7723 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_7727);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__7722,G__7723) : f.call(null,G__7722,G__7723));
})());

var G__7728 = (i_7727 + (1));
i_7727 = G__7728;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),mapi((idx + size),cljs.core.chunk_rest(s)));
} else {
return cljs.core.cons((function (){var G__7724 = idx;
var G__7725 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__7724,G__7725) : f.call(null,G__7724,G__7725));
})(),mapi((idx + (1)),cljs.core.rest(s)));
}
} else {
return null;
}
}),null,null));
});
return mapi((0),coll);
});
/**
* Returns a lazy sequence of the non-nil results of (f item). Note,
* this means false return values will be included.  f must be free of
* side-effects.  Returns a transducer when no collection is provided.
*/
cljs.core.keep = (function() {
var keep = null;
var keep__1 = (function (f){
return (function (rf){
return (function() {
var G__7747 = null;
var G__7747__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__7747__1 = (function (result){
var G__7741 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__7741) : rf.call(null,G__7741));
});
var G__7747__2 = (function (result,input){
var v = (function (){var G__7742 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__7742) : f.call(null,G__7742));
})();
if((v == null)){
return result;
} else {
var G__7743 = result;
var G__7744 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__7743,G__7744) : rf.call(null,G__7743,G__7744));
}
});
G__7747 = function(result,input){
switch(arguments.length){
case 0:
return G__7747__0.call(this);
case 1:
return G__7747__1.call(this,result);
case 2:
return G__7747__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__7747.cljs$core$IFn$_invoke$arity$0 = G__7747__0;
G__7747.cljs$core$IFn$_invoke$arity$1 = G__7747__1;
G__7747.cljs$core$IFn$_invoke$arity$2 = G__7747__2;
return G__7747;
})()
});
});
var keep__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__4619__auto___7748 = size;
var i_7749 = (0);
while(true){
if((i_7749 < n__4619__auto___7748)){
var x_7750 = (function (){var G__7745 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_7749);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__7745) : f.call(null,G__7745));
})();
if((x_7750 == null)){
} else {
cljs.core.chunk_append(b,x_7750);
}

var G__7751 = (i_7749 + (1));
i_7749 = G__7751;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.chunk_rest(s)));
} else {
var x = (function (){var G__7746 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__7746) : f.call(null,G__7746));
})();
if((x == null)){
return keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s));
} else {
return cljs.core.cons(x,keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s)));
}
}
} else {
return null;
}
}),null,null));
});
keep = function(f,coll){
switch(arguments.length){
case 1:
return keep__1.call(this,f);
case 2:
return keep__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
keep.cljs$core$IFn$_invoke$arity$1 = keep__1;
keep.cljs$core$IFn$_invoke$arity$2 = keep__2;
return keep;
})()
;

/**
* @constructor
*/
cljs.core.Atom = (function (state,meta,validator,watches){
this.state = state;
this.meta = meta;
this.validator = validator;
this.watches = watches;
this.cljs$lang$protocol_mask$partition0$ = 6455296;
this.cljs$lang$protocol_mask$partition1$ = 16386;
})
cljs.core.Atom.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__7752 = this$__$1;
return goog.getUid(G__7752);
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = (function (this$,oldval,newval){
var self__ = this;
var this$__$1 = this;
var seq__7753 = cljs.core.seq(self__.watches);
var chunk__7754 = null;
var count__7755 = (0);
var i__7756 = (0);
while(true){
if((i__7756 < count__7755)){
var vec__7757 = chunk__7754.cljs$core$IIndexed$_nth$arity$2(null,i__7756);
var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__7757,(0),null);
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__7757,(1),null);
var G__7758_7767 = key;
var G__7759_7768 = this$__$1;
var G__7760_7769 = oldval;
var G__7761_7770 = newval;
(f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__7758_7767,G__7759_7768,G__7760_7769,G__7761_7770) : f.call(null,G__7758_7767,G__7759_7768,G__7760_7769,G__7761_7770));

var G__7771 = seq__7753;
var G__7772 = chunk__7754;
var G__7773 = count__7755;
var G__7774 = (i__7756 + (1));
seq__7753 = G__7771;
chunk__7754 = G__7772;
count__7755 = G__7773;
i__7756 = G__7774;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__7753);
if(temp__4126__auto__){
var seq__7753__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__7753__$1)){
var c__4519__auto__ = cljs.core.chunk_first(seq__7753__$1);
var G__7775 = cljs.core.chunk_rest(seq__7753__$1);
var G__7776 = c__4519__auto__;
var G__7777 = cljs.core.count(c__4519__auto__);
var G__7778 = (0);
seq__7753 = G__7775;
chunk__7754 = G__7776;
count__7755 = G__7777;
i__7756 = G__7778;
continue;
} else {
var vec__7762 = cljs.core.first(seq__7753__$1);
var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__7762,(0),null);
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__7762,(1),null);
var G__7763_7779 = key;
var G__7764_7780 = this$__$1;
var G__7765_7781 = oldval;
var G__7766_7782 = newval;
(f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__7763_7779,G__7764_7780,G__7765_7781,G__7766_7782) : f.call(null,G__7763_7779,G__7764_7780,G__7765_7781,G__7766_7782));

var G__7783 = cljs.core.next(seq__7753__$1);
var G__7784 = null;
var G__7785 = (0);
var G__7786 = (0);
seq__7753 = G__7783;
chunk__7754 = G__7784;
count__7755 = G__7785;
i__7756 = G__7786;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_add_watch$arity$3 = (function (this$,key,f){
var self__ = this;
var this$__$1 = this;
this$__$1.watches = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.watches,key,f);

return this$__$1;
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = (function (this$,key){
var self__ = this;
var this$__$1 = this;
return this$__$1.watches = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.watches,key);
});

cljs.core.Atom.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.meta;
});

cljs.core.Atom.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.state;
});

cljs.core.Atom.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var self__ = this;
var o__$1 = this;
return (o__$1 === other);
});

cljs.core.Atom.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Atom.cljs$lang$type = true;

cljs.core.Atom.cljs$lang$ctorStr = "cljs.core/Atom";

cljs.core.Atom.cljs$lang$ctorPrWriter = (function (this__4319__auto__,writer__4320__auto__,opt__4321__auto__){
return cljs.core._write(writer__4320__auto__,"cljs.core/Atom");
});

cljs.core.__GT_Atom = (function __GT_Atom(state,meta,validator,watches){
return (new cljs.core.Atom(state,meta,validator,watches));
});

/**
* Creates and returns an Atom with an initial value of x and zero or
* more options (in any order):
* 
* :meta metadata-map
* 
* :validator validate-fn
* 
* If metadata-map is supplied, it will be come the metadata on the
* atom. validate-fn must be nil or a side-effect-free fn of one
* argument, which will be passed the intended new state on any state
* change. If the new state is unacceptable, the validate-fn should
* return false or throw an Error.  If either of these error conditions
* occur, then the value of the atom will not change.
* @param {...*} var_args
*/
cljs.core.atom = (function() {
var atom = null;
var atom__1 = (function (x){
return (new cljs.core.Atom(x,null,null,null));
});
var atom__2 = (function() { 
var G__7790__delegate = function (x,p__7787){
var map__7789 = p__7787;
var map__7789__$1 = ((cljs.core.seq_QMARK_(map__7789))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__7789):map__7789);
var validator = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__7789__$1,new cljs.core.Keyword(null,"validator","validator",-1966190681));
var meta = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__7789__$1,new cljs.core.Keyword(null,"meta","meta",1499536964));
return (new cljs.core.Atom(x,meta,validator,null));
};
var G__7790 = function (x,var_args){
var p__7787 = null;
if (arguments.length > 1) {
var G__7791__i = 0, G__7791__a = new Array(arguments.length -  1);
while (G__7791__i < G__7791__a.length) {G__7791__a[G__7791__i] = arguments[G__7791__i + 1]; ++G__7791__i;}
  p__7787 = new cljs.core.IndexedSeq(G__7791__a,0);
} 
return G__7790__delegate.call(this,x,p__7787);};
G__7790.cljs$lang$maxFixedArity = 1;
G__7790.cljs$lang$applyTo = (function (arglist__7792){
var x = cljs.core.first(arglist__7792);
var p__7787 = cljs.core.rest(arglist__7792);
return G__7790__delegate(x,p__7787);
});
G__7790.cljs$core$IFn$_invoke$arity$variadic = G__7790__delegate;
return G__7790;
})()
;
atom = function(x,var_args){
var p__7787 = var_args;
switch(arguments.length){
case 1:
return atom__1.call(this,x);
default:
var G__7793 = null;
if (arguments.length > 1) {
var G__7794__i = 0, G__7794__a = new Array(arguments.length -  1);
while (G__7794__i < G__7794__a.length) {G__7794__a[G__7794__i] = arguments[G__7794__i + 1]; ++G__7794__i;}
G__7793 = new cljs.core.IndexedSeq(G__7794__a,0);
}
return atom__2.cljs$core$IFn$_invoke$arity$variadic(x, G__7793);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
atom.cljs$lang$maxFixedArity = 1;
atom.cljs$lang$applyTo = atom__2.cljs$lang$applyTo;
atom.cljs$core$IFn$_invoke$arity$1 = atom__1;
atom.cljs$core$IFn$_invoke$arity$variadic = atom__2.cljs$core$IFn$_invoke$arity$variadic;
return atom;
})()
;
/**
* Sets the value of atom to newval without regard for the
* current value. Returns newval.
*/
cljs.core.reset_BANG_ = (function reset_BANG_(a,new_value){
if((a instanceof cljs.core.Atom)){
var validate = a.validator;
if((validate == null)){
} else {
if(cljs.core.truth_((function (){var G__7797 = new_value;
return (validate.cljs$core$IFn$_invoke$arity$1 ? validate.cljs$core$IFn$_invoke$arity$1(G__7797) : validate.call(null,G__7797));
})())){
} else {
throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str("Validator rejected reference state"),cljs.core.str("\n"),cljs.core.str((function (){var G__7798 = cljs.core.list(new cljs.core.Symbol(null,"validate","validate",1439230700,null),new cljs.core.Symbol(null,"new-value","new-value",-1567397401,null));
return (cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1 ? cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1(G__7798) : cljs.core.pr_str.call(null,G__7798));
})())].join('')));
}
}

var old_value = a.state;
a.state = new_value;

if((a.watches == null)){
} else {
cljs.core._notify_watches(a,old_value,new_value);
}

return new_value;
} else {
return cljs.core._reset_BANG_(a,new_value);
}
});
/**
* Atomically swaps the value of atom to be:
* (apply f current-value-of-atom args). Note that f may be called
* multiple times, and thus should be free of side effects.  Returns
* the value that was swapped in.
* @param {...*} var_args
*/
cljs.core.swap_BANG_ = (function() {
var swap_BANG_ = null;
var swap_BANG___2 = (function (a,f){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__7805 = a.state;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__7805) : f.call(null,G__7805));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$2(a,f);
}
});
var swap_BANG___3 = (function (a,f,x){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__7806 = a.state;
var G__7807 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__7806,G__7807) : f.call(null,G__7806,G__7807));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$3(a,f,x);
}
});
var swap_BANG___4 = (function (a,f,x,y){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__7808 = a.state;
var G__7809 = x;
var G__7810 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__7808,G__7809,G__7810) : f.call(null,G__7808,G__7809,G__7810));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$4(a,f,x,y);
}
});
var swap_BANG___5 = (function() { 
var G__7811__delegate = function (a,f,x,y,more){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,a.state,x,y,more));
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$5(a,f,x,y,more);
}
};
var G__7811 = function (a,f,x,y,var_args){
var more = null;
if (arguments.length > 4) {
var G__7812__i = 0, G__7812__a = new Array(arguments.length -  4);
while (G__7812__i < G__7812__a.length) {G__7812__a[G__7812__i] = arguments[G__7812__i + 4]; ++G__7812__i;}
  more = new cljs.core.IndexedSeq(G__7812__a,0);
} 
return G__7811__delegate.call(this,a,f,x,y,more);};
G__7811.cljs$lang$maxFixedArity = 4;
G__7811.cljs$lang$applyTo = (function (arglist__7813){
var a = cljs.core.first(arglist__7813);
arglist__7813 = cljs.core.next(arglist__7813);
var f = cljs.core.first(arglist__7813);
arglist__7813 = cljs.core.next(arglist__7813);
var x = cljs.core.first(arglist__7813);
arglist__7813 = cljs.core.next(arglist__7813);
var y = cljs.core.first(arglist__7813);
var more = cljs.core.rest(arglist__7813);
return G__7811__delegate(a,f,x,y,more);
});
G__7811.cljs$core$IFn$_invoke$arity$variadic = G__7811__delegate;
return G__7811;
})()
;
swap_BANG_ = function(a,f,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return swap_BANG___2.call(this,a,f);
case 3:
return swap_BANG___3.call(this,a,f,x);
case 4:
return swap_BANG___4.call(this,a,f,x,y);
default:
var G__7814 = null;
if (arguments.length > 4) {
var G__7815__i = 0, G__7815__a = new Array(arguments.length -  4);
while (G__7815__i < G__7815__a.length) {G__7815__a[G__7815__i] = arguments[G__7815__i + 4]; ++G__7815__i;}
G__7814 = new cljs.core.IndexedSeq(G__7815__a,0);
}
return swap_BANG___5.cljs$core$IFn$_invoke$arity$variadic(a,f,x,y, G__7814);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
swap_BANG_.cljs$lang$maxFixedArity = 4;
swap_BANG_.cljs$lang$applyTo = swap_BANG___5.cljs$lang$applyTo;
swap_BANG_.cljs$core$IFn$_invoke$arity$2 = swap_BANG___2;
swap_BANG_.cljs$core$IFn$_invoke$arity$3 = swap_BANG___3;
swap_BANG_.cljs$core$IFn$_invoke$arity$4 = swap_BANG___4;
swap_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_BANG___5.cljs$core$IFn$_invoke$arity$variadic;
return swap_BANG_;
})()
;
/**
* Atomically sets the value of atom to newval if and only if the
* current value of the atom is equal to oldval. Returns true if
* set happened, else false.
*/
cljs.core.compare_and_set_BANG_ = (function compare_and_set_BANG_(a,oldval,newval){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(a.cljs$core$IDeref$_deref$arity$1(null),oldval)){
cljs.core.reset_BANG_(a,newval);

return true;
} else {
return false;
}
});
/**
* Sets the validator-fn for an atom. validator-fn must be nil or a
* side-effect-free fn of one argument, which will be passed the intended
* new state on any state change. If the new state is unacceptable, the
* validator-fn should return false or throw an Error. If the current state
* is not acceptable to the new validator, an Error will be thrown and the
* validator will not be changed.
*/
cljs.core.set_validator_BANG_ = (function set_validator_BANG_(iref,val){
return iref.validator = val;
});
/**
* Gets the validator-fn for a var/ref/agent/atom.
*/
cljs.core.get_validator = (function get_validator(iref){
return iref.validator;
});

/**
* @constructor
*/
cljs.core.Volatile = (function (state){
this.state = state;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32768;
})
cljs.core.Volatile.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.state;
});

cljs.core.Volatile.prototype.cljs$core$IVolatile$ = true;

cljs.core.Volatile.prototype.cljs$core$IVolatile$_vreset_BANG_$arity$2 = (function (_,new_state){
var self__ = this;
var ___$1 = this;
return self__.state = new_state;
});

cljs.core.Volatile.cljs$lang$type = true;

cljs.core.Volatile.cljs$lang$ctorStr = "cljs.core/Volatile";

cljs.core.Volatile.cljs$lang$ctorPrWriter = (function (this__4319__auto__,writer__4320__auto__,opt__4321__auto__){
return cljs.core._write(writer__4320__auto__,"cljs.core/Volatile");
});

cljs.core.__GT_Volatile = (function __GT_Volatile(state){
return (new cljs.core.Volatile(state));
});

/**
* Creates and returns a Volatile with an initial value of val.
*/
cljs.core.volatile_BANG_ = (function volatile_BANG_(val){
return (new cljs.core.Volatile(val));
});
/**
* Returns true if x is a volatile.
*/
cljs.core.volatile_QMARK_ = (function volatile_QMARK_(x){
return (x instanceof cljs.core.Volatile);
});
/**
* Sets the value of volatile to newval without regard for the
* current value. Returns newval.
*/
cljs.core.vreset_BANG_ = (function vreset_BANG_(vol,newval){
return cljs.core._vreset_BANG_(vol,newval);
});
/**
* Returns a lazy sequence of the non-nil results of (f index item). Note,
* this means false return values will be included.  f must be free of
* side-effects.  Returns a stateful transducer when no collection is
* provided.
*/
cljs.core.keep_indexed = (function() {
var keep_indexed = null;
var keep_indexed__1 = (function (f){
return (function (rf){
var ia = cljs.core.volatile_BANG_((-1));
return ((function (ia){
return (function() {
var G__7882 = null;
var G__7882__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__7882__1 = (function (result){
var G__7849 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__7849) : rf.call(null,G__7849));
});
var G__7882__2 = (function (result,input){
var i = ia.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(ia.cljs$core$IDeref$_deref$arity$1(null) + (1)));
var v = (function (){var G__7850 = i;
var G__7851 = input;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__7850,G__7851) : f.call(null,G__7850,G__7851));
})();
if((v == null)){
return result;
} else {
var G__7852 = result;
var G__7853 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__7852,G__7853) : rf.call(null,G__7852,G__7853));
}
});
G__7882 = function(result,input){
switch(arguments.length){
case 0:
return G__7882__0.call(this);
case 1:
return G__7882__1.call(this,result);
case 2:
return G__7882__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__7882.cljs$core$IFn$_invoke$arity$0 = G__7882__0;
G__7882.cljs$core$IFn$_invoke$arity$1 = G__7882__1;
G__7882.cljs$core$IFn$_invoke$arity$2 = G__7882__2;
return G__7882;
})()
;})(ia))
});
});
var keep_indexed__2 = (function (f,coll){
var keepi = (function keepi(idx,coll__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll__$1);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__4619__auto___7883 = size;
var i_7884 = (0);
while(true){
if((i_7884 < n__4619__auto___7883)){
var x_7885 = (function (){var G__7878 = (idx + i_7884);
var G__7879 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_7884);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__7878,G__7879) : f.call(null,G__7878,G__7879));
})();
if((x_7885 == null)){
} else {
cljs.core.chunk_append(b,x_7885);
}

var G__7886 = (i_7884 + (1));
i_7884 = G__7886;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),keepi((idx + size),cljs.core.chunk_rest(s)));
} else {
var x = (function (){var G__7880 = idx;
var G__7881 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__7880,G__7881) : f.call(null,G__7880,G__7881));
})();
if((x == null)){
return keepi((idx + (1)),cljs.core.rest(s));
} else {
return cljs.core.cons(x,keepi((idx + (1)),cljs.core.rest(s)));
}
}
} else {
return null;
}
}),null,null));
});
return keepi((0),coll);
});
keep_indexed = function(f,coll){
switch(arguments.length){
case 1:
return keep_indexed__1.call(this,f);
case 2:
return keep_indexed__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
keep_indexed.cljs$core$IFn$_invoke$arity$1 = keep_indexed__1;
keep_indexed.cljs$core$IFn$_invoke$arity$2 = keep_indexed__2;
return keep_indexed;
})()
;
/**
* Takes a set of predicates and returns a function f that returns true if all of its
* composing predicates return a logical true value against all of its arguments, else it returns
* false. Note that f is short-circuiting in that it will stop execution on the first
* argument that triggers a logical false result against the original predicates.
* @param {...*} var_args
*/
cljs.core.every_pred = (function() {
var every_pred = null;
var every_pred__1 = (function (p){
return (function() {
var ep1 = null;
var ep1__0 = (function (){
return true;
});
var ep1__1 = (function (x){
return cljs.core.boolean$((function (){var G__8100 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__8100) : p.call(null,G__8100));
})());
});
var ep1__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__3720__auto__ = (function (){var G__8102 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__8102) : p.call(null,G__8102));
})();
if(cljs.core.truth_(and__3720__auto__)){
var G__8103 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__8103) : p.call(null,G__8103));
} else {
return and__3720__auto__;
}
})());
});
var ep1__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__3720__auto__ = (function (){var G__8105 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__8105) : p.call(null,G__8105));
})();
if(cljs.core.truth_(and__3720__auto__)){
var and__3720__auto____$1 = (function (){var G__8107 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__8107) : p.call(null,G__8107));
})();
if(cljs.core.truth_(and__3720__auto____$1)){
var G__8108 = z;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__8108) : p.call(null,G__8108));
} else {
return and__3720__auto____$1;
}
} else {
return and__3720__auto__;
}
})());
});
var ep1__4 = (function() { 
var G__8277__delegate = function (x,y,z,args){
return cljs.core.boolean$((ep1.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_(p,args)));
};
var G__8277 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__8278__i = 0, G__8278__a = new Array(arguments.length -  3);
while (G__8278__i < G__8278__a.length) {G__8278__a[G__8278__i] = arguments[G__8278__i + 3]; ++G__8278__i;}
  args = new cljs.core.IndexedSeq(G__8278__a,0);
} 
return G__8277__delegate.call(this,x,y,z,args);};
G__8277.cljs$lang$maxFixedArity = 3;
G__8277.cljs$lang$applyTo = (function (arglist__8279){
var x = cljs.core.first(arglist__8279);
arglist__8279 = cljs.core.next(arglist__8279);
var y = cljs.core.first(arglist__8279);
arglist__8279 = cljs.core.next(arglist__8279);
var z = cljs.core.first(arglist__8279);
var args = cljs.core.rest(arglist__8279);
return G__8277__delegate(x,y,z,args);
});
G__8277.cljs$core$IFn$_invoke$arity$variadic = G__8277__delegate;
return G__8277;
})()
;
ep1 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return ep1__0.call(this);
case 1:
return ep1__1.call(this,x);
case 2:
return ep1__2.call(this,x,y);
case 3:
return ep1__3.call(this,x,y,z);
default:
var G__8280 = null;
if (arguments.length > 3) {
var G__8281__i = 0, G__8281__a = new Array(arguments.length -  3);
while (G__8281__i < G__8281__a.length) {G__8281__a[G__8281__i] = arguments[G__8281__i + 3]; ++G__8281__i;}
G__8280 = new cljs.core.IndexedSeq(G__8281__a,0);
}
return ep1__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__8280);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ep1.cljs$lang$maxFixedArity = 3;
ep1.cljs$lang$applyTo = ep1__4.cljs$lang$applyTo;
ep1.cljs$core$IFn$_invoke$arity$0 = ep1__0;
ep1.cljs$core$IFn$_invoke$arity$1 = ep1__1;
ep1.cljs$core$IFn$_invoke$arity$2 = ep1__2;
ep1.cljs$core$IFn$_invoke$arity$3 = ep1__3;
ep1.cljs$core$IFn$_invoke$arity$variadic = ep1__4.cljs$core$IFn$_invoke$arity$variadic;
return ep1;
})()
});
var every_pred__2 = (function (p1,p2){
return (function() {
var ep2 = null;
var ep2__0 = (function (){
return true;
});
var ep2__1 = (function (x){
return cljs.core.boolean$((function (){var and__3720__auto__ = (function (){var G__8140 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8140) : p1.call(null,G__8140));
})();
if(cljs.core.truth_(and__3720__auto__)){
var G__8141 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8141) : p2.call(null,G__8141));
} else {
return and__3720__auto__;
}
})());
});
var ep2__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__3720__auto__ = (function (){var G__8143 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8143) : p1.call(null,G__8143));
})();
if(cljs.core.truth_(and__3720__auto__)){
var and__3720__auto____$1 = (function (){var G__8145 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8145) : p1.call(null,G__8145));
})();
if(cljs.core.truth_(and__3720__auto____$1)){
var and__3720__auto____$2 = (function (){var G__8147 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8147) : p2.call(null,G__8147));
})();
if(cljs.core.truth_(and__3720__auto____$2)){
var G__8148 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8148) : p2.call(null,G__8148));
} else {
return and__3720__auto____$2;
}
} else {
return and__3720__auto____$1;
}
} else {
return and__3720__auto__;
}
})());
});
var ep2__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__3720__auto__ = (function (){var G__8150 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8150) : p1.call(null,G__8150));
})();
if(cljs.core.truth_(and__3720__auto__)){
var and__3720__auto____$1 = (function (){var G__8152 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8152) : p1.call(null,G__8152));
})();
if(cljs.core.truth_(and__3720__auto____$1)){
var and__3720__auto____$2 = (function (){var G__8154 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8154) : p1.call(null,G__8154));
})();
if(cljs.core.truth_(and__3720__auto____$2)){
var and__3720__auto____$3 = (function (){var G__8156 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8156) : p2.call(null,G__8156));
})();
if(cljs.core.truth_(and__3720__auto____$3)){
var and__3720__auto____$4 = (function (){var G__8158 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8158) : p2.call(null,G__8158));
})();
if(cljs.core.truth_(and__3720__auto____$4)){
var G__8159 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8159) : p2.call(null,G__8159));
} else {
return and__3720__auto____$4;
}
} else {
return and__3720__auto____$3;
}
} else {
return and__3720__auto____$2;
}
} else {
return and__3720__auto____$1;
}
} else {
return and__3720__auto__;
}
})());
});
var ep2__4 = (function() { 
var G__8282__delegate = function (x,y,z,args){
return cljs.core.boolean$((ep2.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_((function (p1__7887_SHARP_){
var and__3720__auto__ = (function (){var G__8164 = p1__7887_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8164) : p1.call(null,G__8164));
})();
if(cljs.core.truth_(and__3720__auto__)){
var G__8165 = p1__7887_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8165) : p2.call(null,G__8165));
} else {
return and__3720__auto__;
}
}),args)));
};
var G__8282 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__8283__i = 0, G__8283__a = new Array(arguments.length -  3);
while (G__8283__i < G__8283__a.length) {G__8283__a[G__8283__i] = arguments[G__8283__i + 3]; ++G__8283__i;}
  args = new cljs.core.IndexedSeq(G__8283__a,0);
} 
return G__8282__delegate.call(this,x,y,z,args);};
G__8282.cljs$lang$maxFixedArity = 3;
G__8282.cljs$lang$applyTo = (function (arglist__8284){
var x = cljs.core.first(arglist__8284);
arglist__8284 = cljs.core.next(arglist__8284);
var y = cljs.core.first(arglist__8284);
arglist__8284 = cljs.core.next(arglist__8284);
var z = cljs.core.first(arglist__8284);
var args = cljs.core.rest(arglist__8284);
return G__8282__delegate(x,y,z,args);
});
G__8282.cljs$core$IFn$_invoke$arity$variadic = G__8282__delegate;
return G__8282;
})()
;
ep2 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return ep2__0.call(this);
case 1:
return ep2__1.call(this,x);
case 2:
return ep2__2.call(this,x,y);
case 3:
return ep2__3.call(this,x,y,z);
default:
var G__8285 = null;
if (arguments.length > 3) {
var G__8286__i = 0, G__8286__a = new Array(arguments.length -  3);
while (G__8286__i < G__8286__a.length) {G__8286__a[G__8286__i] = arguments[G__8286__i + 3]; ++G__8286__i;}
G__8285 = new cljs.core.IndexedSeq(G__8286__a,0);
}
return ep2__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__8285);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ep2.cljs$lang$maxFixedArity = 3;
ep2.cljs$lang$applyTo = ep2__4.cljs$lang$applyTo;
ep2.cljs$core$IFn$_invoke$arity$0 = ep2__0;
ep2.cljs$core$IFn$_invoke$arity$1 = ep2__1;
ep2.cljs$core$IFn$_invoke$arity$2 = ep2__2;
ep2.cljs$core$IFn$_invoke$arity$3 = ep2__3;
ep2.cljs$core$IFn$_invoke$arity$variadic = ep2__4.cljs$core$IFn$_invoke$arity$variadic;
return ep2;
})()
});
var every_pred__3 = (function (p1,p2,p3){
return (function() {
var ep3 = null;
var ep3__0 = (function (){
return true;
});
var ep3__1 = (function (x){
return cljs.core.boolean$((function (){var and__3720__auto__ = (function (){var G__8211 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8211) : p1.call(null,G__8211));
})();
if(cljs.core.truth_(and__3720__auto__)){
var and__3720__auto____$1 = (function (){var G__8213 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8213) : p2.call(null,G__8213));
})();
if(cljs.core.truth_(and__3720__auto____$1)){
var G__8214 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__8214) : p3.call(null,G__8214));
} else {
return and__3720__auto____$1;
}
} else {
return and__3720__auto__;
}
})());
});
var ep3__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__3720__auto__ = (function (){var G__8216 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8216) : p1.call(null,G__8216));
})();
if(cljs.core.truth_(and__3720__auto__)){
var and__3720__auto____$1 = (function (){var G__8218 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8218) : p2.call(null,G__8218));
})();
if(cljs.core.truth_(and__3720__auto____$1)){
var and__3720__auto____$2 = (function (){var G__8220 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__8220) : p3.call(null,G__8220));
})();
if(cljs.core.truth_(and__3720__auto____$2)){
var and__3720__auto____$3 = (function (){var G__8222 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8222) : p1.call(null,G__8222));
})();
if(cljs.core.truth_(and__3720__auto____$3)){
var and__3720__auto____$4 = (function (){var G__8224 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8224) : p2.call(null,G__8224));
})();
if(cljs.core.truth_(and__3720__auto____$4)){
var G__8225 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__8225) : p3.call(null,G__8225));
} else {
return and__3720__auto____$4;
}
} else {
return and__3720__auto____$3;
}
} else {
return and__3720__auto____$2;
}
} else {
return and__3720__auto____$1;
}
} else {
return and__3720__auto__;
}
})());
});
var ep3__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__3720__auto__ = (function (){var G__8227 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8227) : p1.call(null,G__8227));
})();
if(cljs.core.truth_(and__3720__auto__)){
var and__3720__auto____$1 = (function (){var G__8229 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8229) : p2.call(null,G__8229));
})();
if(cljs.core.truth_(and__3720__auto____$1)){
var and__3720__auto____$2 = (function (){var G__8231 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__8231) : p3.call(null,G__8231));
})();
if(cljs.core.truth_(and__3720__auto____$2)){
var and__3720__auto____$3 = (function (){var G__8233 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8233) : p1.call(null,G__8233));
})();
if(cljs.core.truth_(and__3720__auto____$3)){
var and__3720__auto____$4 = (function (){var G__8235 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8235) : p2.call(null,G__8235));
})();
if(cljs.core.truth_(and__3720__auto____$4)){
var and__3720__auto____$5 = (function (){var G__8237 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__8237) : p3.call(null,G__8237));
})();
if(cljs.core.truth_(and__3720__auto____$5)){
var and__3720__auto____$6 = (function (){var G__8239 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8239) : p1.call(null,G__8239));
})();
if(cljs.core.truth_(and__3720__auto____$6)){
var and__3720__auto____$7 = (function (){var G__8241 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8241) : p2.call(null,G__8241));
})();
if(cljs.core.truth_(and__3720__auto____$7)){
var G__8242 = z;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__8242) : p3.call(null,G__8242));
} else {
return and__3720__auto____$7;
}
} else {
return and__3720__auto____$6;
}
} else {
return and__3720__auto____$5;
}
} else {
return and__3720__auto____$4;
}
} else {
return and__3720__auto____$3;
}
} else {
return and__3720__auto____$2;
}
} else {
return and__3720__auto____$1;
}
} else {
return and__3720__auto__;
}
})());
});
var ep3__4 = (function() { 
var G__8287__delegate = function (x,y,z,args){
return cljs.core.boolean$((ep3.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_((function (p1__7888_SHARP_){
var and__3720__auto__ = (function (){var G__8249 = p1__7888_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8249) : p1.call(null,G__8249));
})();
if(cljs.core.truth_(and__3720__auto__)){
var and__3720__auto____$1 = (function (){var G__8251 = p1__7888_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8251) : p2.call(null,G__8251));
})();
if(cljs.core.truth_(and__3720__auto____$1)){
var G__8252 = p1__7888_SHARP_;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__8252) : p3.call(null,G__8252));
} else {
return and__3720__auto____$1;
}
} else {
return and__3720__auto__;
}
}),args)));
};
var G__8287 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__8288__i = 0, G__8288__a = new Array(arguments.length -  3);
while (G__8288__i < G__8288__a.length) {G__8288__a[G__8288__i] = arguments[G__8288__i + 3]; ++G__8288__i;}
  args = new cljs.core.IndexedSeq(G__8288__a,0);
} 
return G__8287__delegate.call(this,x,y,z,args);};
G__8287.cljs$lang$maxFixedArity = 3;
G__8287.cljs$lang$applyTo = (function (arglist__8289){
var x = cljs.core.first(arglist__8289);
arglist__8289 = cljs.core.next(arglist__8289);
var y = cljs.core.first(arglist__8289);
arglist__8289 = cljs.core.next(arglist__8289);
var z = cljs.core.first(arglist__8289);
var args = cljs.core.rest(arglist__8289);
return G__8287__delegate(x,y,z,args);
});
G__8287.cljs$core$IFn$_invoke$arity$variadic = G__8287__delegate;
return G__8287;
})()
;
ep3 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return ep3__0.call(this);
case 1:
return ep3__1.call(this,x);
case 2:
return ep3__2.call(this,x,y);
case 3:
return ep3__3.call(this,x,y,z);
default:
var G__8290 = null;
if (arguments.length > 3) {
var G__8291__i = 0, G__8291__a = new Array(arguments.length -  3);
while (G__8291__i < G__8291__a.length) {G__8291__a[G__8291__i] = arguments[G__8291__i + 3]; ++G__8291__i;}
G__8290 = new cljs.core.IndexedSeq(G__8291__a,0);
}
return ep3__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__8290);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ep3.cljs$lang$maxFixedArity = 3;
ep3.cljs$lang$applyTo = ep3__4.cljs$lang$applyTo;
ep3.cljs$core$IFn$_invoke$arity$0 = ep3__0;
ep3.cljs$core$IFn$_invoke$arity$1 = ep3__1;
ep3.cljs$core$IFn$_invoke$arity$2 = ep3__2;
ep3.cljs$core$IFn$_invoke$arity$3 = ep3__3;
ep3.cljs$core$IFn$_invoke$arity$variadic = ep3__4.cljs$core$IFn$_invoke$arity$variadic;
return ep3;
})()
});
var every_pred__4 = (function() { 
var G__8292__delegate = function (p1,p2,p3,ps){
var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1,p2,p3,ps);
return ((function (ps__$1){
return (function() {
var epn = null;
var epn__0 = (function (){
return true;
});
var epn__1 = (function (x){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__7889_SHARP_){
var G__8268 = x;
return (p1__7889_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__7889_SHARP_.cljs$core$IFn$_invoke$arity$1(G__8268) : p1__7889_SHARP_.call(null,G__8268));
});})(ps__$1))
,ps__$1);
});
var epn__2 = (function (x,y){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__7890_SHARP_){
var and__3720__auto__ = (function (){var G__8270 = x;
return (p1__7890_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__7890_SHARP_.cljs$core$IFn$_invoke$arity$1(G__8270) : p1__7890_SHARP_.call(null,G__8270));
})();
if(cljs.core.truth_(and__3720__auto__)){
var G__8271 = y;
return (p1__7890_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__7890_SHARP_.cljs$core$IFn$_invoke$arity$1(G__8271) : p1__7890_SHARP_.call(null,G__8271));
} else {
return and__3720__auto__;
}
});})(ps__$1))
,ps__$1);
});
var epn__3 = (function (x,y,z){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__7891_SHARP_){
var and__3720__auto__ = (function (){var G__8273 = x;
return (p1__7891_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__7891_SHARP_.cljs$core$IFn$_invoke$arity$1(G__8273) : p1__7891_SHARP_.call(null,G__8273));
})();
if(cljs.core.truth_(and__3720__auto__)){
var and__3720__auto____$1 = (function (){var G__8275 = y;
return (p1__7891_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__7891_SHARP_.cljs$core$IFn$_invoke$arity$1(G__8275) : p1__7891_SHARP_.call(null,G__8275));
})();
if(cljs.core.truth_(and__3720__auto____$1)){
var G__8276 = z;
return (p1__7891_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__7891_SHARP_.cljs$core$IFn$_invoke$arity$1(G__8276) : p1__7891_SHARP_.call(null,G__8276));
} else {
return and__3720__auto____$1;
}
} else {
return and__3720__auto__;
}
});})(ps__$1))
,ps__$1);
});
var epn__4 = (function() { 
var G__8293__delegate = function (x,y,z,args){
return cljs.core.boolean$((epn.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__7892_SHARP_){
return cljs.core.every_QMARK_(p1__7892_SHARP_,args);
});})(ps__$1))
,ps__$1)));
};
var G__8293 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__8294__i = 0, G__8294__a = new Array(arguments.length -  3);
while (G__8294__i < G__8294__a.length) {G__8294__a[G__8294__i] = arguments[G__8294__i + 3]; ++G__8294__i;}
  args = new cljs.core.IndexedSeq(G__8294__a,0);
} 
return G__8293__delegate.call(this,x,y,z,args);};
G__8293.cljs$lang$maxFixedArity = 3;
G__8293.cljs$lang$applyTo = (function (arglist__8295){
var x = cljs.core.first(arglist__8295);
arglist__8295 = cljs.core.next(arglist__8295);
var y = cljs.core.first(arglist__8295);
arglist__8295 = cljs.core.next(arglist__8295);
var z = cljs.core.first(arglist__8295);
var args = cljs.core.rest(arglist__8295);
return G__8293__delegate(x,y,z,args);
});
G__8293.cljs$core$IFn$_invoke$arity$variadic = G__8293__delegate;
return G__8293;
})()
;
epn = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return epn__0.call(this);
case 1:
return epn__1.call(this,x);
case 2:
return epn__2.call(this,x,y);
case 3:
return epn__3.call(this,x,y,z);
default:
var G__8296 = null;
if (arguments.length > 3) {
var G__8297__i = 0, G__8297__a = new Array(arguments.length -  3);
while (G__8297__i < G__8297__a.length) {G__8297__a[G__8297__i] = arguments[G__8297__i + 3]; ++G__8297__i;}
G__8296 = new cljs.core.IndexedSeq(G__8297__a,0);
}
return epn__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__8296);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
epn.cljs$lang$maxFixedArity = 3;
epn.cljs$lang$applyTo = epn__4.cljs$lang$applyTo;
epn.cljs$core$IFn$_invoke$arity$0 = epn__0;
epn.cljs$core$IFn$_invoke$arity$1 = epn__1;
epn.cljs$core$IFn$_invoke$arity$2 = epn__2;
epn.cljs$core$IFn$_invoke$arity$3 = epn__3;
epn.cljs$core$IFn$_invoke$arity$variadic = epn__4.cljs$core$IFn$_invoke$arity$variadic;
return epn;
})()
;})(ps__$1))
};
var G__8292 = function (p1,p2,p3,var_args){
var ps = null;
if (arguments.length > 3) {
var G__8298__i = 0, G__8298__a = new Array(arguments.length -  3);
while (G__8298__i < G__8298__a.length) {G__8298__a[G__8298__i] = arguments[G__8298__i + 3]; ++G__8298__i;}
  ps = new cljs.core.IndexedSeq(G__8298__a,0);
} 
return G__8292__delegate.call(this,p1,p2,p3,ps);};
G__8292.cljs$lang$maxFixedArity = 3;
G__8292.cljs$lang$applyTo = (function (arglist__8299){
var p1 = cljs.core.first(arglist__8299);
arglist__8299 = cljs.core.next(arglist__8299);
var p2 = cljs.core.first(arglist__8299);
arglist__8299 = cljs.core.next(arglist__8299);
var p3 = cljs.core.first(arglist__8299);
var ps = cljs.core.rest(arglist__8299);
return G__8292__delegate(p1,p2,p3,ps);
});
G__8292.cljs$core$IFn$_invoke$arity$variadic = G__8292__delegate;
return G__8292;
})()
;
every_pred = function(p1,p2,p3,var_args){
var ps = var_args;
switch(arguments.length){
case 1:
return every_pred__1.call(this,p1);
case 2:
return every_pred__2.call(this,p1,p2);
case 3:
return every_pred__3.call(this,p1,p2,p3);
default:
var G__8300 = null;
if (arguments.length > 3) {
var G__8301__i = 0, G__8301__a = new Array(arguments.length -  3);
while (G__8301__i < G__8301__a.length) {G__8301__a[G__8301__i] = arguments[G__8301__i + 3]; ++G__8301__i;}
G__8300 = new cljs.core.IndexedSeq(G__8301__a,0);
}
return every_pred__4.cljs$core$IFn$_invoke$arity$variadic(p1,p2,p3, G__8300);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
every_pred.cljs$lang$maxFixedArity = 3;
every_pred.cljs$lang$applyTo = every_pred__4.cljs$lang$applyTo;
every_pred.cljs$core$IFn$_invoke$arity$1 = every_pred__1;
every_pred.cljs$core$IFn$_invoke$arity$2 = every_pred__2;
every_pred.cljs$core$IFn$_invoke$arity$3 = every_pred__3;
every_pred.cljs$core$IFn$_invoke$arity$variadic = every_pred__4.cljs$core$IFn$_invoke$arity$variadic;
return every_pred;
})()
;
/**
* Takes a set of predicates and returns a function f that returns the first logical true value
* returned by one of its composing predicates against any of its arguments, else it returns
* logical false. Note that f is short-circuiting in that it will stop execution on the first
* argument that triggers a logical true result against the original predicates.
* @param {...*} var_args
*/
cljs.core.some_fn = (function() {
var some_fn = null;
var some_fn__1 = (function (p){
return (function() {
var sp1 = null;
var sp1__0 = (function (){
return null;
});
var sp1__1 = (function (x){
var G__8507 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__8507) : p.call(null,G__8507));
});
var sp1__2 = (function (x,y){
var or__3732__auto__ = (function (){var G__8509 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__8509) : p.call(null,G__8509));
})();
if(cljs.core.truth_(or__3732__auto__)){
return or__3732__auto__;
} else {
var G__8510 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__8510) : p.call(null,G__8510));
}
});
var sp1__3 = (function (x,y,z){
var or__3732__auto__ = (function (){var G__8512 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__8512) : p.call(null,G__8512));
})();
if(cljs.core.truth_(or__3732__auto__)){
return or__3732__auto__;
} else {
var or__3732__auto____$1 = (function (){var G__8514 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__8514) : p.call(null,G__8514));
})();
if(cljs.core.truth_(or__3732__auto____$1)){
return or__3732__auto____$1;
} else {
var G__8515 = z;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__8515) : p.call(null,G__8515));
}
}
});
var sp1__4 = (function() { 
var G__8676__delegate = function (x,y,z,args){
var or__3732__auto__ = sp1.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__3732__auto__)){
return or__3732__auto__;
} else {
return cljs.core.some(p,args);
}
};
var G__8676 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__8677__i = 0, G__8677__a = new Array(arguments.length -  3);
while (G__8677__i < G__8677__a.length) {G__8677__a[G__8677__i] = arguments[G__8677__i + 3]; ++G__8677__i;}
  args = new cljs.core.IndexedSeq(G__8677__a,0);
} 
return G__8676__delegate.call(this,x,y,z,args);};
G__8676.cljs$lang$maxFixedArity = 3;
G__8676.cljs$lang$applyTo = (function (arglist__8678){
var x = cljs.core.first(arglist__8678);
arglist__8678 = cljs.core.next(arglist__8678);
var y = cljs.core.first(arglist__8678);
arglist__8678 = cljs.core.next(arglist__8678);
var z = cljs.core.first(arglist__8678);
var args = cljs.core.rest(arglist__8678);
return G__8676__delegate(x,y,z,args);
});
G__8676.cljs$core$IFn$_invoke$arity$variadic = G__8676__delegate;
return G__8676;
})()
;
sp1 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return sp1__0.call(this);
case 1:
return sp1__1.call(this,x);
case 2:
return sp1__2.call(this,x,y);
case 3:
return sp1__3.call(this,x,y,z);
default:
var G__8679 = null;
if (arguments.length > 3) {
var G__8680__i = 0, G__8680__a = new Array(arguments.length -  3);
while (G__8680__i < G__8680__a.length) {G__8680__a[G__8680__i] = arguments[G__8680__i + 3]; ++G__8680__i;}
G__8679 = new cljs.core.IndexedSeq(G__8680__a,0);
}
return sp1__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__8679);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sp1.cljs$lang$maxFixedArity = 3;
sp1.cljs$lang$applyTo = sp1__4.cljs$lang$applyTo;
sp1.cljs$core$IFn$_invoke$arity$0 = sp1__0;
sp1.cljs$core$IFn$_invoke$arity$1 = sp1__1;
sp1.cljs$core$IFn$_invoke$arity$2 = sp1__2;
sp1.cljs$core$IFn$_invoke$arity$3 = sp1__3;
sp1.cljs$core$IFn$_invoke$arity$variadic = sp1__4.cljs$core$IFn$_invoke$arity$variadic;
return sp1;
})()
});
var some_fn__2 = (function (p1,p2){
return (function() {
var sp2 = null;
var sp2__0 = (function (){
return null;
});
var sp2__1 = (function (x){
var or__3732__auto__ = (function (){var G__8547 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8547) : p1.call(null,G__8547));
})();
if(cljs.core.truth_(or__3732__auto__)){
return or__3732__auto__;
} else {
var G__8548 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8548) : p2.call(null,G__8548));
}
});
var sp2__2 = (function (x,y){
var or__3732__auto__ = (function (){var G__8550 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8550) : p1.call(null,G__8550));
})();
if(cljs.core.truth_(or__3732__auto__)){
return or__3732__auto__;
} else {
var or__3732__auto____$1 = (function (){var G__8552 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8552) : p1.call(null,G__8552));
})();
if(cljs.core.truth_(or__3732__auto____$1)){
return or__3732__auto____$1;
} else {
var or__3732__auto____$2 = (function (){var G__8554 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8554) : p2.call(null,G__8554));
})();
if(cljs.core.truth_(or__3732__auto____$2)){
return or__3732__auto____$2;
} else {
var G__8555 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8555) : p2.call(null,G__8555));
}
}
}
});
var sp2__3 = (function (x,y,z){
var or__3732__auto__ = (function (){var G__8557 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8557) : p1.call(null,G__8557));
})();
if(cljs.core.truth_(or__3732__auto__)){
return or__3732__auto__;
} else {
var or__3732__auto____$1 = (function (){var G__8559 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8559) : p1.call(null,G__8559));
})();
if(cljs.core.truth_(or__3732__auto____$1)){
return or__3732__auto____$1;
} else {
var or__3732__auto____$2 = (function (){var G__8561 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8561) : p1.call(null,G__8561));
})();
if(cljs.core.truth_(or__3732__auto____$2)){
return or__3732__auto____$2;
} else {
var or__3732__auto____$3 = (function (){var G__8563 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8563) : p2.call(null,G__8563));
})();
if(cljs.core.truth_(or__3732__auto____$3)){
return or__3732__auto____$3;
} else {
var or__3732__auto____$4 = (function (){var G__8565 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8565) : p2.call(null,G__8565));
})();
if(cljs.core.truth_(or__3732__auto____$4)){
return or__3732__auto____$4;
} else {
var G__8566 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8566) : p2.call(null,G__8566));
}
}
}
}
}
});
var sp2__4 = (function() { 
var G__8681__delegate = function (x,y,z,args){
var or__3732__auto__ = sp2.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__3732__auto__)){
return or__3732__auto__;
} else {
return cljs.core.some(((function (or__3732__auto__){
return (function (p1__8302_SHARP_){
var or__3732__auto____$1 = (function (){var G__8568 = p1__8302_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8568) : p1.call(null,G__8568));
})();
if(cljs.core.truth_(or__3732__auto____$1)){
return or__3732__auto____$1;
} else {
var G__8569 = p1__8302_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8569) : p2.call(null,G__8569));
}
});})(or__3732__auto__))
,args);
}
};
var G__8681 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__8682__i = 0, G__8682__a = new Array(arguments.length -  3);
while (G__8682__i < G__8682__a.length) {G__8682__a[G__8682__i] = arguments[G__8682__i + 3]; ++G__8682__i;}
  args = new cljs.core.IndexedSeq(G__8682__a,0);
} 
return G__8681__delegate.call(this,x,y,z,args);};
G__8681.cljs$lang$maxFixedArity = 3;
G__8681.cljs$lang$applyTo = (function (arglist__8683){
var x = cljs.core.first(arglist__8683);
arglist__8683 = cljs.core.next(arglist__8683);
var y = cljs.core.first(arglist__8683);
arglist__8683 = cljs.core.next(arglist__8683);
var z = cljs.core.first(arglist__8683);
var args = cljs.core.rest(arglist__8683);
return G__8681__delegate(x,y,z,args);
});
G__8681.cljs$core$IFn$_invoke$arity$variadic = G__8681__delegate;
return G__8681;
})()
;
sp2 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return sp2__0.call(this);
case 1:
return sp2__1.call(this,x);
case 2:
return sp2__2.call(this,x,y);
case 3:
return sp2__3.call(this,x,y,z);
default:
var G__8684 = null;
if (arguments.length > 3) {
var G__8685__i = 0, G__8685__a = new Array(arguments.length -  3);
while (G__8685__i < G__8685__a.length) {G__8685__a[G__8685__i] = arguments[G__8685__i + 3]; ++G__8685__i;}
G__8684 = new cljs.core.IndexedSeq(G__8685__a,0);
}
return sp2__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__8684);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sp2.cljs$lang$maxFixedArity = 3;
sp2.cljs$lang$applyTo = sp2__4.cljs$lang$applyTo;
sp2.cljs$core$IFn$_invoke$arity$0 = sp2__0;
sp2.cljs$core$IFn$_invoke$arity$1 = sp2__1;
sp2.cljs$core$IFn$_invoke$arity$2 = sp2__2;
sp2.cljs$core$IFn$_invoke$arity$3 = sp2__3;
sp2.cljs$core$IFn$_invoke$arity$variadic = sp2__4.cljs$core$IFn$_invoke$arity$variadic;
return sp2;
})()
});
var some_fn__3 = (function (p1,p2,p3){
return (function() {
var sp3 = null;
var sp3__0 = (function (){
return null;
});
var sp3__1 = (function (x){
var or__3732__auto__ = (function (){var G__8615 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8615) : p1.call(null,G__8615));
})();
if(cljs.core.truth_(or__3732__auto__)){
return or__3732__auto__;
} else {
var or__3732__auto____$1 = (function (){var G__8617 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8617) : p2.call(null,G__8617));
})();
if(cljs.core.truth_(or__3732__auto____$1)){
return or__3732__auto____$1;
} else {
var G__8618 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__8618) : p3.call(null,G__8618));
}
}
});
var sp3__2 = (function (x,y){
var or__3732__auto__ = (function (){var G__8620 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8620) : p1.call(null,G__8620));
})();
if(cljs.core.truth_(or__3732__auto__)){
return or__3732__auto__;
} else {
var or__3732__auto____$1 = (function (){var G__8622 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8622) : p2.call(null,G__8622));
})();
if(cljs.core.truth_(or__3732__auto____$1)){
return or__3732__auto____$1;
} else {
var or__3732__auto____$2 = (function (){var G__8624 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__8624) : p3.call(null,G__8624));
})();
if(cljs.core.truth_(or__3732__auto____$2)){
return or__3732__auto____$2;
} else {
var or__3732__auto____$3 = (function (){var G__8626 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8626) : p1.call(null,G__8626));
})();
if(cljs.core.truth_(or__3732__auto____$3)){
return or__3732__auto____$3;
} else {
var or__3732__auto____$4 = (function (){var G__8628 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8628) : p2.call(null,G__8628));
})();
if(cljs.core.truth_(or__3732__auto____$4)){
return or__3732__auto____$4;
} else {
var G__8629 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__8629) : p3.call(null,G__8629));
}
}
}
}
}
});
var sp3__3 = (function (x,y,z){
var or__3732__auto__ = (function (){var G__8631 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8631) : p1.call(null,G__8631));
})();
if(cljs.core.truth_(or__3732__auto__)){
return or__3732__auto__;
} else {
var or__3732__auto____$1 = (function (){var G__8633 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8633) : p2.call(null,G__8633));
})();
if(cljs.core.truth_(or__3732__auto____$1)){
return or__3732__auto____$1;
} else {
var or__3732__auto____$2 = (function (){var G__8635 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__8635) : p3.call(null,G__8635));
})();
if(cljs.core.truth_(or__3732__auto____$2)){
return or__3732__auto____$2;
} else {
var or__3732__auto____$3 = (function (){var G__8637 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8637) : p1.call(null,G__8637));
})();
if(cljs.core.truth_(or__3732__auto____$3)){
return or__3732__auto____$3;
} else {
var or__3732__auto____$4 = (function (){var G__8639 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8639) : p2.call(null,G__8639));
})();
if(cljs.core.truth_(or__3732__auto____$4)){
return or__3732__auto____$4;
} else {
var or__3732__auto____$5 = (function (){var G__8641 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__8641) : p3.call(null,G__8641));
})();
if(cljs.core.truth_(or__3732__auto____$5)){
return or__3732__auto____$5;
} else {
var or__3732__auto____$6 = (function (){var G__8643 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8643) : p1.call(null,G__8643));
})();
if(cljs.core.truth_(or__3732__auto____$6)){
return or__3732__auto____$6;
} else {
var or__3732__auto____$7 = (function (){var G__8645 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8645) : p2.call(null,G__8645));
})();
if(cljs.core.truth_(or__3732__auto____$7)){
return or__3732__auto____$7;
} else {
var G__8646 = z;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__8646) : p3.call(null,G__8646));
}
}
}
}
}
}
}
}
});
var sp3__4 = (function() { 
var G__8686__delegate = function (x,y,z,args){
var or__3732__auto__ = sp3.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__3732__auto__)){
return or__3732__auto__;
} else {
return cljs.core.some(((function (or__3732__auto__){
return (function (p1__8303_SHARP_){
var or__3732__auto____$1 = (function (){var G__8648 = p1__8303_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8648) : p1.call(null,G__8648));
})();
if(cljs.core.truth_(or__3732__auto____$1)){
return or__3732__auto____$1;
} else {
var or__3732__auto____$2 = (function (){var G__8650 = p1__8303_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8650) : p2.call(null,G__8650));
})();
if(cljs.core.truth_(or__3732__auto____$2)){
return or__3732__auto____$2;
} else {
var G__8651 = p1__8303_SHARP_;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__8651) : p3.call(null,G__8651));
}
}
});})(or__3732__auto__))
,args);
}
};
var G__8686 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__8687__i = 0, G__8687__a = new Array(arguments.length -  3);
while (G__8687__i < G__8687__a.length) {G__8687__a[G__8687__i] = arguments[G__8687__i + 3]; ++G__8687__i;}
  args = new cljs.core.IndexedSeq(G__8687__a,0);
} 
return G__8686__delegate.call(this,x,y,z,args);};
G__8686.cljs$lang$maxFixedArity = 3;
G__8686.cljs$lang$applyTo = (function (arglist__8688){
var x = cljs.core.first(arglist__8688);
arglist__8688 = cljs.core.next(arglist__8688);
var y = cljs.core.first(arglist__8688);
arglist__8688 = cljs.core.next(arglist__8688);
var z = cljs.core.first(arglist__8688);
var args = cljs.core.rest(arglist__8688);
return G__8686__delegate(x,y,z,args);
});
G__8686.cljs$core$IFn$_invoke$arity$variadic = G__8686__delegate;
return G__8686;
})()
;
sp3 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return sp3__0.call(this);
case 1:
return sp3__1.call(this,x);
case 2:
return sp3__2.call(this,x,y);
case 3:
return sp3__3.call(this,x,y,z);
default:
var G__8689 = null;
if (arguments.length > 3) {
var G__8690__i = 0, G__8690__a = new Array(arguments.length -  3);
while (G__8690__i < G__8690__a.length) {G__8690__a[G__8690__i] = arguments[G__8690__i + 3]; ++G__8690__i;}
G__8689 = new cljs.core.IndexedSeq(G__8690__a,0);
}
return sp3__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__8689);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sp3.cljs$lang$maxFixedArity = 3;
sp3.cljs$lang$applyTo = sp3__4.cljs$lang$applyTo;
sp3.cljs$core$IFn$_invoke$arity$0 = sp3__0;
sp3.cljs$core$IFn$_invoke$arity$1 = sp3__1;
sp3.cljs$core$IFn$_invoke$arity$2 = sp3__2;
sp3.cljs$core$IFn$_invoke$arity$3 = sp3__3;
sp3.cljs$core$IFn$_invoke$arity$variadic = sp3__4.cljs$core$IFn$_invoke$arity$variadic;
return sp3;
})()
});
var some_fn__4 = (function() { 
var G__8691__delegate = function (p1,p2,p3,ps){
var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1,p2,p3,ps);
return ((function (ps__$1){
return (function() {
var spn = null;
var spn__0 = (function (){
return null;
});
var spn__1 = (function (x){
return cljs.core.some(((function (ps__$1){
return (function (p1__8304_SHARP_){
var G__8667 = x;
return (p1__8304_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__8304_SHARP_.cljs$core$IFn$_invoke$arity$1(G__8667) : p1__8304_SHARP_.call(null,G__8667));
});})(ps__$1))
,ps__$1);
});
var spn__2 = (function (x,y){
return cljs.core.some(((function (ps__$1){
return (function (p1__8305_SHARP_){
var or__3732__auto__ = (function (){var G__8669 = x;
return (p1__8305_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__8305_SHARP_.cljs$core$IFn$_invoke$arity$1(G__8669) : p1__8305_SHARP_.call(null,G__8669));
})();
if(cljs.core.truth_(or__3732__auto__)){
return or__3732__auto__;
} else {
var G__8670 = y;
return (p1__8305_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__8305_SHARP_.cljs$core$IFn$_invoke$arity$1(G__8670) : p1__8305_SHARP_.call(null,G__8670));
}
});})(ps__$1))
,ps__$1);
});
var spn__3 = (function (x,y,z){
return cljs.core.some(((function (ps__$1){
return (function (p1__8306_SHARP_){
var or__3732__auto__ = (function (){var G__8672 = x;
return (p1__8306_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__8306_SHARP_.cljs$core$IFn$_invoke$arity$1(G__8672) : p1__8306_SHARP_.call(null,G__8672));
})();
if(cljs.core.truth_(or__3732__auto__)){
return or__3732__auto__;
} else {
var or__3732__auto____$1 = (function (){var G__8674 = y;
return (p1__8306_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__8306_SHARP_.cljs$core$IFn$_invoke$arity$1(G__8674) : p1__8306_SHARP_.call(null,G__8674));
})();
if(cljs.core.truth_(or__3732__auto____$1)){
return or__3732__auto____$1;
} else {
var G__8675 = z;
return (p1__8306_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__8306_SHARP_.cljs$core$IFn$_invoke$arity$1(G__8675) : p1__8306_SHARP_.call(null,G__8675));
}
}
});})(ps__$1))
,ps__$1);
});
var spn__4 = (function() { 
var G__8692__delegate = function (x,y,z,args){
var or__3732__auto__ = spn.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__3732__auto__)){
return or__3732__auto__;
} else {
return cljs.core.some(((function (or__3732__auto__,ps__$1){
return (function (p1__8307_SHARP_){
return cljs.core.some(p1__8307_SHARP_,args);
});})(or__3732__auto__,ps__$1))
,ps__$1);
}
};
var G__8692 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__8693__i = 0, G__8693__a = new Array(arguments.length -  3);
while (G__8693__i < G__8693__a.length) {G__8693__a[G__8693__i] = arguments[G__8693__i + 3]; ++G__8693__i;}
  args = new cljs.core.IndexedSeq(G__8693__a,0);
} 
return G__8692__delegate.call(this,x,y,z,args);};
G__8692.cljs$lang$maxFixedArity = 3;
G__8692.cljs$lang$applyTo = (function (arglist__8694){
var x = cljs.core.first(arglist__8694);
arglist__8694 = cljs.core.next(arglist__8694);
var y = cljs.core.first(arglist__8694);
arglist__8694 = cljs.core.next(arglist__8694);
var z = cljs.core.first(arglist__8694);
var args = cljs.core.rest(arglist__8694);
return G__8692__delegate(x,y,z,args);
});
G__8692.cljs$core$IFn$_invoke$arity$variadic = G__8692__delegate;
return G__8692;
})()
;
spn = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return spn__0.call(this);
case 1:
return spn__1.call(this,x);
case 2:
return spn__2.call(this,x,y);
case 3:
return spn__3.call(this,x,y,z);
default:
var G__8695 = null;
if (arguments.length > 3) {
var G__8696__i = 0, G__8696__a = new Array(arguments.length -  3);
while (G__8696__i < G__8696__a.length) {G__8696__a[G__8696__i] = arguments[G__8696__i + 3]; ++G__8696__i;}
G__8695 = new cljs.core.IndexedSeq(G__8696__a,0);
}
return spn__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__8695);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
spn.cljs$lang$maxFixedArity = 3;
spn.cljs$lang$applyTo = spn__4.cljs$lang$applyTo;
spn.cljs$core$IFn$_invoke$arity$0 = spn__0;
spn.cljs$core$IFn$_invoke$arity$1 = spn__1;
spn.cljs$core$IFn$_invoke$arity$2 = spn__2;
spn.cljs$core$IFn$_invoke$arity$3 = spn__3;
spn.cljs$core$IFn$_invoke$arity$variadic = spn__4.cljs$core$IFn$_invoke$arity$variadic;
return spn;
})()
;})(ps__$1))
};
var G__8691 = function (p1,p2,p3,var_args){
var ps = null;
if (arguments.length > 3) {
var G__8697__i = 0, G__8697__a = new Array(arguments.length -  3);
while (G__8697__i < G__8697__a.length) {G__8697__a[G__8697__i] = arguments[G__8697__i + 3]; ++G__8697__i;}
  ps = new cljs.core.IndexedSeq(G__8697__a,0);
} 
return G__8691__delegate.call(this,p1,p2,p3,ps);};
G__8691.cljs$lang$maxFixedArity = 3;
G__8691.cljs$lang$applyTo = (function (arglist__8698){
var p1 = cljs.core.first(arglist__8698);
arglist__8698 = cljs.core.next(arglist__8698);
var p2 = cljs.core.first(arglist__8698);
arglist__8698 = cljs.core.next(arglist__8698);
var p3 = cljs.core.first(arglist__8698);
var ps = cljs.core.rest(arglist__8698);
return G__8691__delegate(p1,p2,p3,ps);
});
G__8691.cljs$core$IFn$_invoke$arity$variadic = G__8691__delegate;
return G__8691;
})()
;
some_fn = function(p1,p2,p3,var_args){
var ps = var_args;
switch(arguments.length){
case 1:
return some_fn__1.call(this,p1);
case 2:
return some_fn__2.call(this,p1,p2);
case 3:
return some_fn__3.call(this,p1,p2,p3);
default:
var G__8699 = null;
if (arguments.length > 3) {
var G__8700__i = 0, G__8700__a = new Array(arguments.length -  3);
while (G__8700__i < G__8700__a.length) {G__8700__a[G__8700__i] = arguments[G__8700__i + 3]; ++G__8700__i;}
G__8699 = new cljs.core.IndexedSeq(G__8700__a,0);
}
return some_fn__4.cljs$core$IFn$_invoke$arity$variadic(p1,p2,p3, G__8699);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
some_fn.cljs$lang$maxFixedArity = 3;
some_fn.cljs$lang$applyTo = some_fn__4.cljs$lang$applyTo;
some_fn.cljs$core$IFn$_invoke$arity$1 = some_fn__1;
some_fn.cljs$core$IFn$_invoke$arity$2 = some_fn__2;
some_fn.cljs$core$IFn$_invoke$arity$3 = some_fn__3;
some_fn.cljs$core$IFn$_invoke$arity$variadic = some_fn__4.cljs$core$IFn$_invoke$arity$variadic;
return some_fn;
})()
;
/**
* Returns a lazy sequence consisting of the result of applying f to
* the set of first items of each coll, followed by applying f to the
* set of second items in each coll, until any one of the colls is
* exhausted.  Any remaining items in other colls are ignored. Function
* f should accept number-of-colls arguments. Returns a transducer when
* no collection is provided.
* @param {...*} var_args
*/
cljs.core.map = (function() {
var map = null;
var map__1 = (function (f){
return (function (rf){
return (function() {
var G__8755 = null;
var G__8755__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__8755__1 = (function (result){
var G__8741 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__8741) : rf.call(null,G__8741));
});
var G__8755__2 = (function (result,input){
var G__8742 = result;
var G__8743 = (function (){var G__8744 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__8744) : f.call(null,G__8744));
})();
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__8742,G__8743) : rf.call(null,G__8742,G__8743));
});
var G__8755__3 = (function() { 
var G__8756__delegate = function (result,input,inputs){
var G__8745 = result;
var G__8746 = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f,input,inputs);
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__8745,G__8746) : rf.call(null,G__8745,G__8746));
};
var G__8756 = function (result,input,var_args){
var inputs = null;
if (arguments.length > 2) {
var G__8757__i = 0, G__8757__a = new Array(arguments.length -  2);
while (G__8757__i < G__8757__a.length) {G__8757__a[G__8757__i] = arguments[G__8757__i + 2]; ++G__8757__i;}
  inputs = new cljs.core.IndexedSeq(G__8757__a,0);
} 
return G__8756__delegate.call(this,result,input,inputs);};
G__8756.cljs$lang$maxFixedArity = 2;
G__8756.cljs$lang$applyTo = (function (arglist__8758){
var result = cljs.core.first(arglist__8758);
arglist__8758 = cljs.core.next(arglist__8758);
var input = cljs.core.first(arglist__8758);
var inputs = cljs.core.rest(arglist__8758);
return G__8756__delegate(result,input,inputs);
});
G__8756.cljs$core$IFn$_invoke$arity$variadic = G__8756__delegate;
return G__8756;
})()
;
G__8755 = function(result,input,var_args){
var inputs = var_args;
switch(arguments.length){
case 0:
return G__8755__0.call(this);
case 1:
return G__8755__1.call(this,result);
case 2:
return G__8755__2.call(this,result,input);
default:
var G__8759 = null;
if (arguments.length > 2) {
var G__8760__i = 0, G__8760__a = new Array(arguments.length -  2);
while (G__8760__i < G__8760__a.length) {G__8760__a[G__8760__i] = arguments[G__8760__i + 2]; ++G__8760__i;}
G__8759 = new cljs.core.IndexedSeq(G__8760__a,0);
}
return G__8755__3.cljs$core$IFn$_invoke$arity$variadic(result,input, G__8759);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__8755.cljs$lang$maxFixedArity = 2;
G__8755.cljs$lang$applyTo = G__8755__3.cljs$lang$applyTo;
G__8755.cljs$core$IFn$_invoke$arity$0 = G__8755__0;
G__8755.cljs$core$IFn$_invoke$arity$1 = G__8755__1;
G__8755.cljs$core$IFn$_invoke$arity$2 = G__8755__2;
G__8755.cljs$core$IFn$_invoke$arity$variadic = G__8755__3.cljs$core$IFn$_invoke$arity$variadic;
return G__8755;
})()
});
});
var map__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__4619__auto___8761 = size;
var i_8762 = (0);
while(true){
if((i_8762 < n__4619__auto___8761)){
cljs.core.chunk_append(b,(function (){var G__8747 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_8762);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__8747) : f.call(null,G__8747));
})());

var G__8763 = (i_8762 + (1));
i_8762 = G__8763;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),map.cljs$core$IFn$_invoke$arity$2(f,cljs.core.chunk_rest(s)));
} else {
return cljs.core.cons((function (){var G__8748 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__8748) : f.call(null,G__8748));
})(),map.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s)));
}
} else {
return null;
}
}),null,null));
});
var map__3 = (function (f,c1,c2){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
if((s1) && (s2)){
return cljs.core.cons((function (){var G__8749 = cljs.core.first(s1);
var G__8750 = cljs.core.first(s2);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__8749,G__8750) : f.call(null,G__8749,G__8750));
})(),map.cljs$core$IFn$_invoke$arity$3(f,cljs.core.rest(s1),cljs.core.rest(s2)));
} else {
return null;
}
}),null,null));
});
var map__4 = (function (f,c1,c2,c3){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
var s3 = cljs.core.seq(c3);
if((s1) && (s2) && (s3)){
return cljs.core.cons((function (){var G__8751 = cljs.core.first(s1);
var G__8752 = cljs.core.first(s2);
var G__8753 = cljs.core.first(s3);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__8751,G__8752,G__8753) : f.call(null,G__8751,G__8752,G__8753));
})(),map.cljs$core$IFn$_invoke$arity$4(f,cljs.core.rest(s1),cljs.core.rest(s2),cljs.core.rest(s3)));
} else {
return null;
}
}),null,null));
});
var map__5 = (function() { 
var G__8764__delegate = function (f,c1,c2,c3,colls){
var step = (function step(cs){
return (new cljs.core.LazySeq(null,(function (){
var ss = map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq,cs);
if(cljs.core.every_QMARK_(cljs.core.identity,ss)){
return cljs.core.cons(map.cljs$core$IFn$_invoke$arity$2(cljs.core.first,ss),step(map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest,ss)));
} else {
return null;
}
}),null,null));
});
return map.cljs$core$IFn$_invoke$arity$2(((function (step){
return (function (p1__8701_SHARP_){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,p1__8701_SHARP_);
});})(step))
,step(cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls,c3,cljs.core.array_seq([c2,c1], 0))));
};
var G__8764 = function (f,c1,c2,c3,var_args){
var colls = null;
if (arguments.length > 4) {
var G__8765__i = 0, G__8765__a = new Array(arguments.length -  4);
while (G__8765__i < G__8765__a.length) {G__8765__a[G__8765__i] = arguments[G__8765__i + 4]; ++G__8765__i;}
  colls = new cljs.core.IndexedSeq(G__8765__a,0);
} 
return G__8764__delegate.call(this,f,c1,c2,c3,colls);};
G__8764.cljs$lang$maxFixedArity = 4;
G__8764.cljs$lang$applyTo = (function (arglist__8766){
var f = cljs.core.first(arglist__8766);
arglist__8766 = cljs.core.next(arglist__8766);
var c1 = cljs.core.first(arglist__8766);
arglist__8766 = cljs.core.next(arglist__8766);
var c2 = cljs.core.first(arglist__8766);
arglist__8766 = cljs.core.next(arglist__8766);
var c3 = cljs.core.first(arglist__8766);
var colls = cljs.core.rest(arglist__8766);
return G__8764__delegate(f,c1,c2,c3,colls);
});
G__8764.cljs$core$IFn$_invoke$arity$variadic = G__8764__delegate;
return G__8764;
})()
;
map = function(f,c1,c2,c3,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return map__1.call(this,f);
case 2:
return map__2.call(this,f,c1);
case 3:
return map__3.call(this,f,c1,c2);
case 4:
return map__4.call(this,f,c1,c2,c3);
default:
var G__8767 = null;
if (arguments.length > 4) {
var G__8768__i = 0, G__8768__a = new Array(arguments.length -  4);
while (G__8768__i < G__8768__a.length) {G__8768__a[G__8768__i] = arguments[G__8768__i + 4]; ++G__8768__i;}
G__8767 = new cljs.core.IndexedSeq(G__8768__a,0);
}
return map__5.cljs$core$IFn$_invoke$arity$variadic(f,c1,c2,c3, G__8767);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
map.cljs$lang$maxFixedArity = 4;
map.cljs$lang$applyTo = map__5.cljs$lang$applyTo;
map.cljs$core$IFn$_invoke$arity$1 = map__1;
map.cljs$core$IFn$_invoke$arity$2 = map__2;
map.cljs$core$IFn$_invoke$arity$3 = map__3;
map.cljs$core$IFn$_invoke$arity$4 = map__4;
map.cljs$core$IFn$_invoke$arity$variadic = map__5.cljs$core$IFn$_invoke$arity$variadic;
return map;
})()
;
/**
* Returns a lazy sequence of the first n items in coll, or all items if
* there are fewer than n.  Returns a stateful transducer when
* no collection is provided.
*/
cljs.core.take = (function() {
var take = null;
var take__1 = (function (n){
return (function (rf){
var na = cljs.core.volatile_BANG_(n);
return ((function (na){
return (function() {
var G__8777 = null;
var G__8777__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__8777__1 = (function (result){
var G__8774 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__8774) : rf.call(null,G__8774));
});
var G__8777__2 = (function (result,input){
var n__$1 = cljs.core.deref(na);
var nn = na.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(na.cljs$core$IDeref$_deref$arity$1(null) - (1)));
var result__$1 = (((n__$1 > (0)))?(function (){var G__8775 = result;
var G__8776 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__8775,G__8776) : rf.call(null,G__8775,G__8776));
})():result);
if(!((nn > (0)))){
return cljs.core.ensure_reduced(result__$1);
} else {
return result__$1;
}
});
G__8777 = function(result,input){
switch(arguments.length){
case 0:
return G__8777__0.call(this);
case 1:
return G__8777__1.call(this,result);
case 2:
return G__8777__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__8777.cljs$core$IFn$_invoke$arity$0 = G__8777__0;
G__8777.cljs$core$IFn$_invoke$arity$1 = G__8777__1;
G__8777.cljs$core$IFn$_invoke$arity$2 = G__8777__2;
return G__8777;
})()
;})(na))
});
});
var take__2 = (function (n,coll){
return (new cljs.core.LazySeq(null,(function (){
if((n > (0))){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.cons(cljs.core.first(s),take.cljs$core$IFn$_invoke$arity$2((n - (1)),cljs.core.rest(s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
take = function(n,coll){
switch(arguments.length){
case 1:
return take__1.call(this,n);
case 2:
return take__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
take.cljs$core$IFn$_invoke$arity$1 = take__1;
take.cljs$core$IFn$_invoke$arity$2 = take__2;
return take;
})()
;
/**
* Returns a lazy sequence of all but the first n items in coll.
* Returns a stateful transducer when no collection is provided.
*/
cljs.core.drop = (function() {
var drop = null;
var drop__1 = (function (n){
return (function (rf){
var na = cljs.core.volatile_BANG_(n);
return ((function (na){
return (function() {
var G__8784 = null;
var G__8784__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__8784__1 = (function (result){
var G__8781 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__8781) : rf.call(null,G__8781));
});
var G__8784__2 = (function (result,input){
var n__$1 = cljs.core.deref(na);
na.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(na.cljs$core$IDeref$_deref$arity$1(null) - (1)));

if((n__$1 > (0))){
return result;
} else {
var G__8782 = result;
var G__8783 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__8782,G__8783) : rf.call(null,G__8782,G__8783));
}
});
G__8784 = function(result,input){
switch(arguments.length){
case 0:
return G__8784__0.call(this);
case 1:
return G__8784__1.call(this,result);
case 2:
return G__8784__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__8784.cljs$core$IFn$_invoke$arity$0 = G__8784__0;
G__8784.cljs$core$IFn$_invoke$arity$1 = G__8784__1;
G__8784.cljs$core$IFn$_invoke$arity$2 = G__8784__2;
return G__8784;
})()
;})(na))
});
});
var drop__2 = (function (n,coll){
var step = (function (n__$1,coll__$1){
while(true){
var s = cljs.core.seq(coll__$1);
if(((n__$1 > (0))) && (s)){
var G__8785 = (n__$1 - (1));
var G__8786 = cljs.core.rest(s);
n__$1 = G__8785;
coll__$1 = G__8786;
continue;
} else {
return s;
}
break;
}
});
return (new cljs.core.LazySeq(null,((function (step){
return (function (){
return step(n,coll);
});})(step))
,null,null));
});
drop = function(n,coll){
switch(arguments.length){
case 1:
return drop__1.call(this,n);
case 2:
return drop__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
drop.cljs$core$IFn$_invoke$arity$1 = drop__1;
drop.cljs$core$IFn$_invoke$arity$2 = drop__2;
return drop;
})()
;
/**
* Return a lazy sequence of all but the last n (default 1) items in coll
*/
cljs.core.drop_last = (function() {
var drop_last = null;
var drop_last__1 = (function (s){
return drop_last.cljs$core$IFn$_invoke$arity$2((1),s);
});
var drop_last__2 = (function (n,s){
return cljs.core.map.cljs$core$IFn$_invoke$arity$3((function (x,_){
return x;
}),s,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,s));
});
drop_last = function(n,s){
switch(arguments.length){
case 1:
return drop_last__1.call(this,n);
case 2:
return drop_last__2.call(this,n,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
drop_last.cljs$core$IFn$_invoke$arity$1 = drop_last__1;
drop_last.cljs$core$IFn$_invoke$arity$2 = drop_last__2;
return drop_last;
})()
;
/**
* Returns a seq of the last n items in coll.  Depending on the type
* of coll may be no better than linear time.  For vectors, see also subvec.
*/
cljs.core.take_last = (function take_last(n,coll){
var s = cljs.core.seq(coll);
var lead = cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,coll));
while(true){
if(lead){
var G__8789 = cljs.core.next(s);
var G__8790 = cljs.core.next(lead);
s = G__8789;
lead = G__8790;
continue;
} else {
return s;
}
break;
}
});
/**
* Returns a lazy sequence of the items in coll starting from the
* first item for which (pred item) returns logical false.  Returns a
* stateful transducer when no collection is provided.
*/
cljs.core.drop_while = (function() {
var drop_while = null;
var drop_while__1 = (function (pred){
return (function (rf){
var da = cljs.core.volatile_BANG_(true);
return ((function (da){
return (function() {
var G__8803 = null;
var G__8803__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__8803__1 = (function (result){
var G__8797 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__8797) : rf.call(null,G__8797));
});
var G__8803__2 = (function (result,input){
var drop_QMARK_ = cljs.core.deref(da);
if(cljs.core.truth_((function (){var and__3720__auto__ = drop_QMARK_;
if(cljs.core.truth_(and__3720__auto__)){
var G__8798 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__8798) : pred.call(null,G__8798));
} else {
return and__3720__auto__;
}
})())){
return result;
} else {
cljs.core.vreset_BANG_(da,null);

var G__8799 = result;
var G__8800 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__8799,G__8800) : rf.call(null,G__8799,G__8800));
}
});
G__8803 = function(result,input){
switch(arguments.length){
case 0:
return G__8803__0.call(this);
case 1:
return G__8803__1.call(this,result);
case 2:
return G__8803__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__8803.cljs$core$IFn$_invoke$arity$0 = G__8803__0;
G__8803.cljs$core$IFn$_invoke$arity$1 = G__8803__1;
G__8803.cljs$core$IFn$_invoke$arity$2 = G__8803__2;
return G__8803;
})()
;})(da))
});
});
var drop_while__2 = (function (pred,coll){
var step = (function (pred__$1,coll__$1){
while(true){
var s = cljs.core.seq(coll__$1);
if(cljs.core.truth_((function (){var and__3720__auto__ = s;
if(and__3720__auto__){
var G__8802 = cljs.core.first(s);
return (pred__$1.cljs$core$IFn$_invoke$arity$1 ? pred__$1.cljs$core$IFn$_invoke$arity$1(G__8802) : pred__$1.call(null,G__8802));
} else {
return and__3720__auto__;
}
})())){
var G__8804 = pred__$1;
var G__8805 = cljs.core.rest(s);
pred__$1 = G__8804;
coll__$1 = G__8805;
continue;
} else {
return s;
}
break;
}
});
return (new cljs.core.LazySeq(null,((function (step){
return (function (){
return step(pred,coll);
});})(step))
,null,null));
});
drop_while = function(pred,coll){
switch(arguments.length){
case 1:
return drop_while__1.call(this,pred);
case 2:
return drop_while__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
drop_while.cljs$core$IFn$_invoke$arity$1 = drop_while__1;
drop_while.cljs$core$IFn$_invoke$arity$2 = drop_while__2;
return drop_while;
})()
;
/**
* Returns a lazy (infinite!) sequence of repetitions of the items in coll.
*/
cljs.core.cycle = (function cycle(coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(s,cycle(s));
} else {
return null;
}
}),null,null));
});
/**
* Returns a vector of [(take n coll) (drop n coll)]
*/
cljs.core.split_at = (function split_at(n,coll){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,coll),cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,coll)], null);
});
/**
* Returns a lazy (infinite!, or length n if supplied) sequence of xs.
*/
cljs.core.repeat = (function() {
var repeat = null;
var repeat__1 = (function (x){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons(x,repeat.cljs$core$IFn$_invoke$arity$1(x));
}),null,null));
});
var repeat__2 = (function (n,x){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,repeat.cljs$core$IFn$_invoke$arity$1(x));
});
repeat = function(n,x){
switch(arguments.length){
case 1:
return repeat__1.call(this,n);
case 2:
return repeat__2.call(this,n,x);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
repeat.cljs$core$IFn$_invoke$arity$1 = repeat__1;
repeat.cljs$core$IFn$_invoke$arity$2 = repeat__2;
return repeat;
})()
;
/**
* Returns a lazy seq of n xs.
*/
cljs.core.replicate = (function replicate(n,x){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(x));
});
/**
* Takes a function of no args, presumably with side effects, and
* returns an infinite (or length n if supplied) lazy sequence of calls
* to it
*/
cljs.core.repeatedly = (function() {
var repeatedly = null;
var repeatedly__1 = (function (f){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons((function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),repeatedly.cljs$core$IFn$_invoke$arity$1(f));
}),null,null));
});
var repeatedly__2 = (function (n,f){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,repeatedly.cljs$core$IFn$_invoke$arity$1(f));
});
repeatedly = function(n,f){
switch(arguments.length){
case 1:
return repeatedly__1.call(this,n);
case 2:
return repeatedly__2.call(this,n,f);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
repeatedly.cljs$core$IFn$_invoke$arity$1 = repeatedly__1;
repeatedly.cljs$core$IFn$_invoke$arity$2 = repeatedly__2;
return repeatedly;
})()
;
/**
* Returns a lazy sequence of x, (f x), (f (f x)) etc. f must be free of side-effects
*/
cljs.core.iterate = (function iterate(f,x){
return cljs.core.cons(x,(new cljs.core.LazySeq(null,(function (){
return iterate(f,(function (){var G__8814 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__8814) : f.call(null,G__8814));
})());
}),null,null)));
});
/**
* Returns a lazy seq of the first item in each coll, then the second etc.
* @param {...*} var_args
*/
cljs.core.interleave = (function() {
var interleave = null;
var interleave__2 = (function (c1,c2){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
if((s1) && (s2)){
return cljs.core.cons(cljs.core.first(s1),cljs.core.cons(cljs.core.first(s2),interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s1),cljs.core.rest(s2))));
} else {
return null;
}
}),null,null));
});
var interleave__3 = (function() { 
var G__8817__delegate = function (c1,c2,colls){
return (new cljs.core.LazySeq(null,(function (){
var ss = cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq,cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls,c2,cljs.core.array_seq([c1], 0)));
if(cljs.core.every_QMARK_(cljs.core.identity,ss)){
return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.first,ss),cljs.core.apply.cljs$core$IFn$_invoke$arity$2(interleave,cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest,ss)));
} else {
return null;
}
}),null,null));
};
var G__8817 = function (c1,c2,var_args){
var colls = null;
if (arguments.length > 2) {
var G__8818__i = 0, G__8818__a = new Array(arguments.length -  2);
while (G__8818__i < G__8818__a.length) {G__8818__a[G__8818__i] = arguments[G__8818__i + 2]; ++G__8818__i;}
  colls = new cljs.core.IndexedSeq(G__8818__a,0);
} 
return G__8817__delegate.call(this,c1,c2,colls);};
G__8817.cljs$lang$maxFixedArity = 2;
G__8817.cljs$lang$applyTo = (function (arglist__8819){
var c1 = cljs.core.first(arglist__8819);
arglist__8819 = cljs.core.next(arglist__8819);
var c2 = cljs.core.first(arglist__8819);
var colls = cljs.core.rest(arglist__8819);
return G__8817__delegate(c1,c2,colls);
});
G__8817.cljs$core$IFn$_invoke$arity$variadic = G__8817__delegate;
return G__8817;
})()
;
interleave = function(c1,c2,var_args){
var colls = var_args;
switch(arguments.length){
case 2:
return interleave__2.call(this,c1,c2);
default:
var G__8820 = null;
if (arguments.length > 2) {
var G__8821__i = 0, G__8821__a = new Array(arguments.length -  2);
while (G__8821__i < G__8821__a.length) {G__8821__a[G__8821__i] = arguments[G__8821__i + 2]; ++G__8821__i;}
G__8820 = new cljs.core.IndexedSeq(G__8821__a,0);
}
return interleave__3.cljs$core$IFn$_invoke$arity$variadic(c1,c2, G__8820);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
interleave.cljs$lang$maxFixedArity = 2;
interleave.cljs$lang$applyTo = interleave__3.cljs$lang$applyTo;
interleave.cljs$core$IFn$_invoke$arity$2 = interleave__2;
interleave.cljs$core$IFn$_invoke$arity$variadic = interleave__3.cljs$core$IFn$_invoke$arity$variadic;
return interleave;
})()
;
/**
* Returns a lazy seq of the elements of coll separated by sep
*/
cljs.core.interpose = (function interpose(sep,coll){
return cljs.core.drop.cljs$core$IFn$_invoke$arity$2((1),cljs.core.interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(sep),coll));
});
/**
* Take a collection of collections, and return a lazy seq
* of items from the inner collection
*/
cljs.core.flatten1 = (function flatten1(colls){
var cat = (function cat(coll,colls__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4124__auto__ = cljs.core.seq(coll);
if(temp__4124__auto__){
var coll__$1 = temp__4124__auto__;
return cljs.core.cons(cljs.core.first(coll__$1),cat(cljs.core.rest(coll__$1),colls__$1));
} else {
if(cljs.core.seq(colls__$1)){
return cat(cljs.core.first(colls__$1),cljs.core.rest(colls__$1));
} else {
return null;
}
}
}),null,null));
});
return cat(null,colls);
});
/**
* Returns the result of applying concat to the result of applying map
* to f and colls.  Thus function f should return a collection. Returns
* a transducer when no collections are provided
* @param {...*} var_args
*/
cljs.core.mapcat = (function() {
var mapcat = null;
var mapcat__1 = (function (f){
return cljs.core.comp.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$1(f),cljs.core.cat);
});
var mapcat__2 = (function() { 
var G__8830__delegate = function (f,colls){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.concat,cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.map,f,colls));
};
var G__8830 = function (f,var_args){
var colls = null;
if (arguments.length > 1) {
var G__8831__i = 0, G__8831__a = new Array(arguments.length -  1);
while (G__8831__i < G__8831__a.length) {G__8831__a[G__8831__i] = arguments[G__8831__i + 1]; ++G__8831__i;}
  colls = new cljs.core.IndexedSeq(G__8831__a,0);
} 
return G__8830__delegate.call(this,f,colls);};
G__8830.cljs$lang$maxFixedArity = 1;
G__8830.cljs$lang$applyTo = (function (arglist__8832){
var f = cljs.core.first(arglist__8832);
var colls = cljs.core.rest(arglist__8832);
return G__8830__delegate(f,colls);
});
G__8830.cljs$core$IFn$_invoke$arity$variadic = G__8830__delegate;
return G__8830;
})()
;
mapcat = function(f,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return mapcat__1.call(this,f);
default:
var G__8833 = null;
if (arguments.length > 1) {
var G__8834__i = 0, G__8834__a = new Array(arguments.length -  1);
while (G__8834__i < G__8834__a.length) {G__8834__a[G__8834__i] = arguments[G__8834__i + 1]; ++G__8834__i;}
G__8833 = new cljs.core.IndexedSeq(G__8834__a,0);
}
return mapcat__2.cljs$core$IFn$_invoke$arity$variadic(f, G__8833);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
mapcat.cljs$lang$maxFixedArity = 1;
mapcat.cljs$lang$applyTo = mapcat__2.cljs$lang$applyTo;
mapcat.cljs$core$IFn$_invoke$arity$1 = mapcat__1;
mapcat.cljs$core$IFn$_invoke$arity$variadic = mapcat__2.cljs$core$IFn$_invoke$arity$variadic;
return mapcat;
})()
;
/**
* Returns a lazy sequence of the items in coll for which
* (pred item) returns true. pred must be free of side-effects.
* Returns a transducer when no collection is provided.
*/
cljs.core.filter = (function() {
var filter = null;
var filter__1 = (function (pred){
return (function (rf){
return (function() {
var G__8853 = null;
var G__8853__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__8853__1 = (function (result){
var G__8847 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__8847) : rf.call(null,G__8847));
});
var G__8853__2 = (function (result,input){
if(cljs.core.truth_((function (){var G__8848 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__8848) : pred.call(null,G__8848));
})())){
var G__8849 = result;
var G__8850 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__8849,G__8850) : rf.call(null,G__8849,G__8850));
} else {
return result;
}
});
G__8853 = function(result,input){
switch(arguments.length){
case 0:
return G__8853__0.call(this);
case 1:
return G__8853__1.call(this,result);
case 2:
return G__8853__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__8853.cljs$core$IFn$_invoke$arity$0 = G__8853__0;
G__8853.cljs$core$IFn$_invoke$arity$1 = G__8853__1;
G__8853.cljs$core$IFn$_invoke$arity$2 = G__8853__2;
return G__8853;
})()
});
});
var filter__2 = (function (pred,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__4619__auto___8854 = size;
var i_8855 = (0);
while(true){
if((i_8855 < n__4619__auto___8854)){
if(cljs.core.truth_((function (){var G__8851 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_8855);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__8851) : pred.call(null,G__8851));
})())){
cljs.core.chunk_append(b,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_8855));
} else {
}

var G__8856 = (i_8855 + (1));
i_8855 = G__8856;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),filter.cljs$core$IFn$_invoke$arity$2(pred,cljs.core.chunk_rest(s)));
} else {
var f = cljs.core.first(s);
var r = cljs.core.rest(s);
if(cljs.core.truth_((function (){var G__8852 = f;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__8852) : pred.call(null,G__8852));
})())){
return cljs.core.cons(f,filter.cljs$core$IFn$_invoke$arity$2(pred,r));
} else {
return filter.cljs$core$IFn$_invoke$arity$2(pred,r);
}
}
} else {
return null;
}
}),null,null));
});
filter = function(pred,coll){
switch(arguments.length){
case 1:
return filter__1.call(this,pred);
case 2:
return filter__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
filter.cljs$core$IFn$_invoke$arity$1 = filter__1;
filter.cljs$core$IFn$_invoke$arity$2 = filter__2;
return filter;
})()
;
/**
* Returns a lazy sequence of the items in coll for which
* (pred item) returns false. pred must be free of side-effects.
* Returns a transducer when no collection is provided.
*/
cljs.core.remove = (function() {
var remove = null;
var remove__1 = (function (pred){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$1(cljs.core.complement(pred));
});
var remove__2 = (function (pred,coll){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(cljs.core.complement(pred),coll);
});
remove = function(pred,coll){
switch(arguments.length){
case 1:
return remove__1.call(this,pred);
case 2:
return remove__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
remove.cljs$core$IFn$_invoke$arity$1 = remove__1;
remove.cljs$core$IFn$_invoke$arity$2 = remove__2;
return remove;
})()
;
/**
* Returns a lazy sequence of the nodes in a tree, via a depth-first walk.
* branch? must be a fn of one arg that returns true if passed a node
* that can have children (but may not).  children must be a fn of one
* arg that returns a sequence of the children. Will only be called on
* nodes for which branch? returns true. Root is the root node of the
* tree.
*/
cljs.core.tree_seq = (function tree_seq(branch_QMARK_,children,root){
var walk = (function walk(node){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons(node,(cljs.core.truth_((function (){var G__8863 = node;
return (branch_QMARK_.cljs$core$IFn$_invoke$arity$1 ? branch_QMARK_.cljs$core$IFn$_invoke$arity$1(G__8863) : branch_QMARK_.call(null,G__8863));
})())?cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(walk,cljs.core.array_seq([(function (){var G__8864 = node;
return (children.cljs$core$IFn$_invoke$arity$1 ? children.cljs$core$IFn$_invoke$arity$1(G__8864) : children.call(null,G__8864));
})()], 0)):null));
}),null,null));
});
return walk(root);
});
/**
* Takes any nested combination of sequential things (lists, vectors,
* etc.) and returns their contents as a single, flat sequence.
* (flatten nil) returns nil.
*/
cljs.core.flatten = (function flatten(x){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2((function (p1__8865_SHARP_){
return !(cljs.core.sequential_QMARK_(p1__8865_SHARP_));
}),cljs.core.rest(cljs.core.tree_seq(cljs.core.sequential_QMARK_,cljs.core.seq,x)));
});
/**
* Returns a new coll consisting of to-coll with all of the items of
* from-coll conjoined. A transducer may be supplied.
*/
cljs.core.into = (function() {
var into = null;
var into__2 = (function (to,from){
if(!((to == null))){
if((function (){var G__8868 = to;
if(G__8868){
var bit__4406__auto__ = (G__8868.cljs$lang$protocol_mask$partition1$ & (4));
if((bit__4406__auto__) || (G__8868.cljs$core$IEditableCollection$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_,cljs.core.transient$(to),from)),cljs.core.meta(to));
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,to,from);
}
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.List.EMPTY,from);
}
});
var into__3 = (function (to,xform,from){
if((function (){var G__8869 = to;
if(G__8869){
var bit__4406__auto__ = (G__8869.cljs$lang$protocol_mask$partition1$ & (4));
if((bit__4406__auto__) || (G__8869.cljs$core$IEditableCollection$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform,cljs.core.conj_BANG_,cljs.core.transient$(to),from)),cljs.core.meta(to));
} else {
return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform,cljs.core.conj,to,from);
}
});
into = function(to,xform,from){
switch(arguments.length){
case 2:
return into__2.call(this,to,xform);
case 3:
return into__3.call(this,to,xform,from);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
into.cljs$core$IFn$_invoke$arity$2 = into__2;
into.cljs$core$IFn$_invoke$arity$3 = into__3;
return into;
})()
;
/**
* Returns a vector consisting of the result of applying f to the
* set of first items of each coll, followed by applying f to the set
* of second items in each coll, until any one of the colls is
* exhausted.  Any remaining items in other colls are ignored. Function
* f should accept number-of-colls arguments.
* @param {...*} var_args
*/
cljs.core.mapv = (function() {
var mapv = null;
var mapv__2 = (function (f,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (v,o){
return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v,(function (){var G__8871 = o;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__8871) : f.call(null,G__8871));
})());
}),cljs.core.transient$(cljs.core.PersistentVector.EMPTY),coll));
});
var mapv__3 = (function (f,c1,c2){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$3(f,c1,c2));
});
var mapv__4 = (function (f,c1,c2,c3){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$4(f,c1,c2,c3));
});
var mapv__5 = (function() { 
var G__8872__delegate = function (f,c1,c2,c3,colls){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(cljs.core.map,f,c1,c2,c3,cljs.core.array_seq([colls], 0)));
};
var G__8872 = function (f,c1,c2,c3,var_args){
var colls = null;
if (arguments.length > 4) {
var G__8873__i = 0, G__8873__a = new Array(arguments.length -  4);
while (G__8873__i < G__8873__a.length) {G__8873__a[G__8873__i] = arguments[G__8873__i + 4]; ++G__8873__i;}
  colls = new cljs.core.IndexedSeq(G__8873__a,0);
} 
return G__8872__delegate.call(this,f,c1,c2,c3,colls);};
G__8872.cljs$lang$maxFixedArity = 4;
G__8872.cljs$lang$applyTo = (function (arglist__8874){
var f = cljs.core.first(arglist__8874);
arglist__8874 = cljs.core.next(arglist__8874);
var c1 = cljs.core.first(arglist__8874);
arglist__8874 = cljs.core.next(arglist__8874);
var c2 = cljs.core.first(arglist__8874);
arglist__8874 = cljs.core.next(arglist__8874);
var c3 = cljs.core.first(arglist__8874);
var colls = cljs.core.rest(arglist__8874);
return G__8872__delegate(f,c1,c2,c3,colls);
});
G__8872.cljs$core$IFn$_invoke$arity$variadic = G__8872__delegate;
return G__8872;
})()
;
mapv = function(f,c1,c2,c3,var_args){
var colls = var_args;
switch(arguments.length){
case 2:
return mapv__2.call(this,f,c1);
case 3:
return mapv__3.call(this,f,c1,c2);
case 4:
return mapv__4.call(this,f,c1,c2,c3);
default:
var G__8875 = null;
if (arguments.length > 4) {
var G__8876__i = 0, G__8876__a = new Array(arguments.length -  4);
while (G__8876__i < G__8876__a.length) {G__8876__a[G__8876__i] = arguments[G__8876__i + 4]; ++G__8876__i;}
G__8875 = new cljs.core.IndexedSeq(G__8876__a,0);
}
return mapv__5.cljs$core$IFn$_invoke$arity$variadic(f,c1,c2,c3, G__8875);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
mapv.cljs$lang$maxFixedArity = 4;
mapv.cljs$lang$applyTo = mapv__5.cljs$lang$applyTo;
mapv.cljs$core$IFn$_invoke$arity$2 = mapv__2;
mapv.cljs$core$IFn$_invoke$arity$3 = mapv__3;
mapv.cljs$core$IFn$_invoke$arity$4 = mapv__4;
mapv.cljs$core$IFn$_invoke$arity$variadic = mapv__5.cljs$core$IFn$_invoke$arity$variadic;
return mapv;
})()
;
/**
* Returns a vector of the items in coll for which
* (pred item) returns true. pred must be free of side-effects.
*/
cljs.core.filterv = (function filterv(pred,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (v,o){
if(cljs.core.truth_((function (){var G__8878 = o;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__8878) : pred.call(null,G__8878));
})())){
return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v,o);
} else {
return v;
}
}),cljs.core.transient$(cljs.core.PersistentVector.EMPTY),coll));
});
/**
* Returns a lazy sequence of lists of n items each, at offsets step
* apart. If step is not supplied, defaults to n, i.e. the partitions
* do not overlap. If a pad collection is supplied, use its elements as
* necessary to complete last partition up to n items. In case there are
* not enough padding elements, return a partition with less than n items.
*/
cljs.core.partition = (function() {
var partition = null;
var partition__2 = (function (n,coll){
return partition.cljs$core$IFn$_invoke$arity$3(n,n,coll);
});
var partition__3 = (function (n,step,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s);
if((n === cljs.core.count(p))){
return cljs.core.cons(p,partition.cljs$core$IFn$_invoke$arity$3(n,step,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
var partition__4 = (function (n,step,pad,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s);
if((n === cljs.core.count(p))){
return cljs.core.cons(p,partition.cljs$core$IFn$_invoke$arity$4(n,step,pad,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return cljs.core._conj(cljs.core.List.EMPTY,cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(p,pad)));
}
} else {
return null;
}
}),null,null));
});
partition = function(n,step,pad,coll){
switch(arguments.length){
case 2:
return partition__2.call(this,n,step);
case 3:
return partition__3.call(this,n,step,pad);
case 4:
return partition__4.call(this,n,step,pad,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partition.cljs$core$IFn$_invoke$arity$2 = partition__2;
partition.cljs$core$IFn$_invoke$arity$3 = partition__3;
partition.cljs$core$IFn$_invoke$arity$4 = partition__4;
return partition;
})()
;
/**
* Returns the value in a nested associative structure,
* where ks is a sequence of keys. Returns nil if the key is not present,
* or the not-found value if supplied.
*/
cljs.core.get_in = (function() {
var get_in = null;
var get_in__2 = (function (m,ks){
return get_in.cljs$core$IFn$_invoke$arity$3(m,ks,null);
});
var get_in__3 = (function (m,ks,not_found){
var sentinel = cljs.core.lookup_sentinel;
var m__$1 = m;
var ks__$1 = cljs.core.seq(ks);
while(true){
if(ks__$1){
if(!((function (){var G__8893 = m__$1;
if(G__8893){
var bit__4413__auto__ = (G__8893.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__4413__auto__) || (G__8893.cljs$core$ILookup$)){
return true;
} else {
if((!G__8893.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,G__8893);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,G__8893);
}
})())){
return not_found;
} else {
var m__$2 = cljs.core.get.cljs$core$IFn$_invoke$arity$3(m__$1,cljs.core.first(ks__$1),sentinel);
if((sentinel === m__$2)){
return not_found;
} else {
var G__8894 = sentinel;
var G__8895 = m__$2;
var G__8896 = cljs.core.next(ks__$1);
sentinel = G__8894;
m__$1 = G__8895;
ks__$1 = G__8896;
continue;
}
}
} else {
return m__$1;
}
break;
}
});
get_in = function(m,ks,not_found){
switch(arguments.length){
case 2:
return get_in__2.call(this,m,ks);
case 3:
return get_in__3.call(this,m,ks,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
get_in.cljs$core$IFn$_invoke$arity$2 = get_in__2;
get_in.cljs$core$IFn$_invoke$arity$3 = get_in__3;
return get_in;
})()
;
/**
* Associates a value in a nested associative structure, where ks is a
* sequence of keys and v is the new value and returns a new nested structure.
* If any levels do not exist, hash-maps will be created.
*/
cljs.core.assoc_in = (function assoc_in(m,p__8897,v){
var vec__8902 = p__8897;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8902,(0),null);
var ks = cljs.core.nthnext(vec__8902,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,assoc_in(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,v));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,v);
}
});
/**
* 'Updates' a value in a nested associative structure, where ks is a
* sequence of keys and f is a function that will take the old value
* and any supplied args and return the new value, and returns a new
* nested structure.  If any levels do not exist, hash-maps will be
* created.
* @param {...*} var_args
*/
cljs.core.update_in = (function() {
var update_in = null;
var update_in__3 = (function (m,p__8903,f){
var vec__8941 = p__8903;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8941,(0),null);
var ks = cljs.core.nthnext(vec__8941,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$3(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__8942 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__8942) : f.call(null,G__8942));
})());
}
});
var update_in__4 = (function (m,p__8904,f,a){
var vec__8943 = p__8904;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8943,(0),null);
var ks = cljs.core.nthnext(vec__8943,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$4(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__8944 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__8945 = a;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__8944,G__8945) : f.call(null,G__8944,G__8945));
})());
}
});
var update_in__5 = (function (m,p__8905,f,a,b){
var vec__8946 = p__8905;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8946,(0),null);
var ks = cljs.core.nthnext(vec__8946,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$5(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,b));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__8947 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__8948 = a;
var G__8949 = b;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__8947,G__8948,G__8949) : f.call(null,G__8947,G__8948,G__8949));
})());
}
});
var update_in__6 = (function (m,p__8906,f,a,b,c){
var vec__8950 = p__8906;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8950,(0),null);
var ks = cljs.core.nthnext(vec__8950,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$6(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,b,c));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__8951 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__8952 = a;
var G__8953 = b;
var G__8954 = c;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__8951,G__8952,G__8953,G__8954) : f.call(null,G__8951,G__8952,G__8953,G__8954));
})());
}
});
var update_in__7 = (function() { 
var G__8956__delegate = function (m,p__8907,f,a,b,c,args){
var vec__8955 = p__8907;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8955,(0),null);
var ks = cljs.core.nthnext(vec__8955,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(update_in,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,cljs.core.array_seq([b,c,args], 0)));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),a,b,c,cljs.core.array_seq([args], 0)));
}
};
var G__8956 = function (m,p__8907,f,a,b,c,var_args){
var args = null;
if (arguments.length > 6) {
var G__8957__i = 0, G__8957__a = new Array(arguments.length -  6);
while (G__8957__i < G__8957__a.length) {G__8957__a[G__8957__i] = arguments[G__8957__i + 6]; ++G__8957__i;}
  args = new cljs.core.IndexedSeq(G__8957__a,0);
} 
return G__8956__delegate.call(this,m,p__8907,f,a,b,c,args);};
G__8956.cljs$lang$maxFixedArity = 6;
G__8956.cljs$lang$applyTo = (function (arglist__8958){
var m = cljs.core.first(arglist__8958);
arglist__8958 = cljs.core.next(arglist__8958);
var p__8907 = cljs.core.first(arglist__8958);
arglist__8958 = cljs.core.next(arglist__8958);
var f = cljs.core.first(arglist__8958);
arglist__8958 = cljs.core.next(arglist__8958);
var a = cljs.core.first(arglist__8958);
arglist__8958 = cljs.core.next(arglist__8958);
var b = cljs.core.first(arglist__8958);
arglist__8958 = cljs.core.next(arglist__8958);
var c = cljs.core.first(arglist__8958);
var args = cljs.core.rest(arglist__8958);
return G__8956__delegate(m,p__8907,f,a,b,c,args);
});
G__8956.cljs$core$IFn$_invoke$arity$variadic = G__8956__delegate;
return G__8956;
})()
;
update_in = function(m,p__8907,f,a,b,c,var_args){
var args = var_args;
switch(arguments.length){
case 3:
return update_in__3.call(this,m,p__8907,f);
case 4:
return update_in__4.call(this,m,p__8907,f,a);
case 5:
return update_in__5.call(this,m,p__8907,f,a,b);
case 6:
return update_in__6.call(this,m,p__8907,f,a,b,c);
default:
var G__8959 = null;
if (arguments.length > 6) {
var G__8960__i = 0, G__8960__a = new Array(arguments.length -  6);
while (G__8960__i < G__8960__a.length) {G__8960__a[G__8960__i] = arguments[G__8960__i + 6]; ++G__8960__i;}
G__8959 = new cljs.core.IndexedSeq(G__8960__a,0);
}
return update_in__7.cljs$core$IFn$_invoke$arity$variadic(m,p__8907,f,a,b,c, G__8959);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
update_in.cljs$lang$maxFixedArity = 6;
update_in.cljs$lang$applyTo = update_in__7.cljs$lang$applyTo;
update_in.cljs$core$IFn$_invoke$arity$3 = update_in__3;
update_in.cljs$core$IFn$_invoke$arity$4 = update_in__4;
update_in.cljs$core$IFn$_invoke$arity$5 = update_in__5;
update_in.cljs$core$IFn$_invoke$arity$6 = update_in__6;
update_in.cljs$core$IFn$_invoke$arity$variadic = update_in__7.cljs$core$IFn$_invoke$arity$variadic;
return update_in;
})()
;
/**
* 'Updates' a value in an associative structure, where k is a
* key and f is a function that will take the old value
* and any supplied args and return the new value, and returns a new
* structure.  If the key does not exist, nil is passed as the old value.
* @param {...*} var_args
*/
cljs.core.update = (function() {
var update = null;
var update__3 = (function (m,k,f){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__8971 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__8971) : f.call(null,G__8971));
})());
});
var update__4 = (function (m,k,f,x){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__8972 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__8973 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__8972,G__8973) : f.call(null,G__8972,G__8973));
})());
});
var update__5 = (function (m,k,f,x,y){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__8974 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__8975 = x;
var G__8976 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__8974,G__8975,G__8976) : f.call(null,G__8974,G__8975,G__8976));
})());
});
var update__6 = (function (m,k,f,x,y,z){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__8977 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__8978 = x;
var G__8979 = y;
var G__8980 = z;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__8977,G__8978,G__8979,G__8980) : f.call(null,G__8977,G__8978,G__8979,G__8980));
})());
});
var update__7 = (function() { 
var G__8981__delegate = function (m,k,f,x,y,z,more){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),x,y,z,cljs.core.array_seq([more], 0)));
};
var G__8981 = function (m,k,f,x,y,z,var_args){
var more = null;
if (arguments.length > 6) {
var G__8982__i = 0, G__8982__a = new Array(arguments.length -  6);
while (G__8982__i < G__8982__a.length) {G__8982__a[G__8982__i] = arguments[G__8982__i + 6]; ++G__8982__i;}
  more = new cljs.core.IndexedSeq(G__8982__a,0);
} 
return G__8981__delegate.call(this,m,k,f,x,y,z,more);};
G__8981.cljs$lang$maxFixedArity = 6;
G__8981.cljs$lang$applyTo = (function (arglist__8983){
var m = cljs.core.first(arglist__8983);
arglist__8983 = cljs.core.next(arglist__8983);
var k = cljs.core.first(arglist__8983);
arglist__8983 = cljs.core.next(arglist__8983);
var f = cljs.core.first(arglist__8983);
arglist__8983 = cljs.core.next(arglist__8983);
var x = cljs.core.first(arglist__8983);
arglist__8983 = cljs.core.next(arglist__8983);
var y = cljs.core.first(arglist__8983);
arglist__8983 = cljs.core.next(arglist__8983);
var z = cljs.core.first(arglist__8983);
var more = cljs.core.rest(arglist__8983);
return G__8981__delegate(m,k,f,x,y,z,more);
});
G__8981.cljs$core$IFn$_invoke$arity$variadic = G__8981__delegate;
return G__8981;
})()
;
update = function(m,k,f,x,y,z,var_args){
var more = var_args;
switch(arguments.length){
case 3:
return update__3.call(this,m,k,f);
case 4:
return update__4.call(this,m,k,f,x);
case 5:
return update__5.call(this,m,k,f,x,y);
case 6:
return update__6.call(this,m,k,f,x,y,z);
default:
var G__8984 = null;
if (arguments.length > 6) {
var G__8985__i = 0, G__8985__a = new Array(arguments.length -  6);
while (G__8985__i < G__8985__a.length) {G__8985__a[G__8985__i] = arguments[G__8985__i + 6]; ++G__8985__i;}
G__8984 = new cljs.core.IndexedSeq(G__8985__a,0);
}
return update__7.cljs$core$IFn$_invoke$arity$variadic(m,k,f,x,y,z, G__8984);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
update.cljs$lang$maxFixedArity = 6;
update.cljs$lang$applyTo = update__7.cljs$lang$applyTo;
update.cljs$core$IFn$_invoke$arity$3 = update__3;
update.cljs$core$IFn$_invoke$arity$4 = update__4;
update.cljs$core$IFn$_invoke$arity$5 = update__5;
update.cljs$core$IFn$_invoke$arity$6 = update__6;
update.cljs$core$IFn$_invoke$arity$variadic = update__7.cljs$core$IFn$_invoke$arity$variadic;
return update;
})()
;

/**
* @constructor
*/
cljs.core.VectorNode = (function (edit,arr){
this.edit = edit;
this.arr = arr;
})

cljs.core.VectorNode.cljs$lang$type = true;

cljs.core.VectorNode.cljs$lang$ctorStr = "cljs.core/VectorNode";

cljs.core.VectorNode.cljs$lang$ctorPrWriter = (function (this__4319__auto__,writer__4320__auto__,opt__4321__auto__){
return cljs.core._write(writer__4320__auto__,"cljs.core/VectorNode");
});

cljs.core.__GT_VectorNode = (function __GT_VectorNode(edit,arr){
return (new cljs.core.VectorNode(edit,arr));
});

cljs.core.pv_fresh_node = (function pv_fresh_node(edit){
return (new cljs.core.VectorNode(edit,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
});
cljs.core.pv_aget = (function pv_aget(node,idx){
return (node.arr[idx]);
});
cljs.core.pv_aset = (function pv_aset(node,idx,val){
return (node.arr[idx] = val);
});
cljs.core.pv_clone_node = (function pv_clone_node(node){
return (new cljs.core.VectorNode(node.edit,cljs.core.aclone(node.arr)));
});
cljs.core.tail_off = (function tail_off(pv){
var cnt = pv.cnt;
if((cnt < (32))){
return (0);
} else {
return (((cnt - (1)) >>> (5)) << (5));
}
});
cljs.core.new_path = (function new_path(edit,level,node){
var ll = level;
var ret = node;
while(true){
if((ll === (0))){
return ret;
} else {
var embed = ret;
var r = cljs.core.pv_fresh_node(edit);
var _ = cljs.core.pv_aset(r,(0),embed);
var G__8986 = (ll - (5));
var G__8987 = r;
ll = G__8986;
ret = G__8987;
continue;
}
break;
}
});
cljs.core.push_tail = (function push_tail(pv,level,parent,tailnode){
var ret = cljs.core.pv_clone_node(parent);
var subidx = (((pv.cnt - (1)) >>> level) & (31));
if(((5) === level)){
cljs.core.pv_aset(ret,subidx,tailnode);

return ret;
} else {
var child = cljs.core.pv_aget(parent,subidx);
if(!((child == null))){
var node_to_insert = push_tail(pv,(level - (5)),child,tailnode);
cljs.core.pv_aset(ret,subidx,node_to_insert);

return ret;
} else {
var node_to_insert = cljs.core.new_path(null,(level - (5)),tailnode);
cljs.core.pv_aset(ret,subidx,node_to_insert);

return ret;
}
}
});
cljs.core.vector_index_out_of_bounds = (function vector_index_out_of_bounds(i,cnt){
throw (new Error([cljs.core.str("No item "),cljs.core.str(i),cljs.core.str(" in vector of length "),cljs.core.str(cnt)].join('')));
});
cljs.core.first_array_for_longvec = (function first_array_for_longvec(pv){
var node = pv.root;
var level = pv.shift;
while(true){
if((level > (0))){
var G__8992 = cljs.core.pv_aget(node,(0));
var G__8993 = (level - (5));
node = G__8992;
level = G__8993;
continue;
} else {
return node.arr;
}
break;
}
});
cljs.core.unchecked_array_for = (function unchecked_array_for(pv,i){
if((i >= cljs.core.tail_off(pv))){
return pv.tail;
} else {
var node = pv.root;
var level = pv.shift;
while(true){
if((level > (0))){
var G__8994 = cljs.core.pv_aget(node,((i >>> level) & (31)));
var G__8995 = (level - (5));
node = G__8994;
level = G__8995;
continue;
} else {
return node.arr;
}
break;
}
}
});
cljs.core.array_for = (function array_for(pv,i){
if((((0) <= i)) && ((i < pv.cnt))){
return cljs.core.unchecked_array_for(pv,i);
} else {
return cljs.core.vector_index_out_of_bounds(i,pv.cnt);
}
});
cljs.core.do_assoc = (function do_assoc(pv,level,node,i,val){
var ret = cljs.core.pv_clone_node(node);
if((level === (0))){
cljs.core.pv_aset(ret,(i & (31)),val);

return ret;
} else {
var subidx = ((i >>> level) & (31));
cljs.core.pv_aset(ret,subidx,do_assoc(pv,(level - (5)),cljs.core.pv_aget(node,subidx),i,val));

return ret;
}
});
cljs.core.pop_tail = (function pop_tail(pv,level,node){
var subidx = (((pv.cnt - (2)) >>> level) & (31));
if((level > (5))){
var new_child = pop_tail(pv,(level - (5)),cljs.core.pv_aget(node,subidx));
if(((new_child == null)) && ((subidx === (0)))){
return null;
} else {
var ret = cljs.core.pv_clone_node(node);
cljs.core.pv_aset(ret,subidx,new_child);

return ret;
}
} else {
if((subidx === (0))){
return null;
} else {
var ret = cljs.core.pv_clone_node(node);
cljs.core.pv_aset(ret,subidx,null);

return ret;

}
}
});

/**
* @constructor
*/
cljs.core.RangedIterator = (function (i,base,arr,v,start,end){
this.i = i;
this.base = base;
this.arr = arr;
this.v = v;
this.start = start;
this.end = end;
})
cljs.core.RangedIterator.prototype.hasNext = (function (){
var self__ = this;
var this$ = this;
return (self__.i < self__.end);
});

cljs.core.RangedIterator.prototype.next = (function (){
var self__ = this;
var this$ = this;
if(((self__.i - self__.base) === (32))){
self__.arr = cljs.core.unchecked_array_for(self__.v,self__.i);

self__.base = (self__.base + (32));
} else {
}

var ret = (self__.arr[(self__.i & (31))]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.RangedIterator.cljs$lang$type = true;

cljs.core.RangedIterator.cljs$lang$ctorStr = "cljs.core/RangedIterator";

cljs.core.RangedIterator.cljs$lang$ctorPrWriter = (function (this__4319__auto__,writer__4320__auto__,opt__4321__auto__){
return cljs.core._write(writer__4320__auto__,"cljs.core/RangedIterator");
});

cljs.core.__GT_RangedIterator = (function __GT_RangedIterator(i,base,arr,v,start,end){
return (new cljs.core.RangedIterator(i,base,arr,v,start,end));
});

cljs.core.ranged_iterator = (function ranged_iterator(v,start,end){
var i = start;
return (new cljs.core.RangedIterator(i,(i - (i % (32))),(((start < cljs.core.count(v)))?cljs.core.unchecked_array_for(v,i):null),v,start,end));
});







/**
* @constructor
*/
cljs.core.PersistentVector = (function (meta,cnt,shift,root,tail,__hash){
this.meta = meta;
this.cnt = cnt;
this.shift = shift;
this.root = root;
this.tail = tail;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 167668511;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentVector.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentVector.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (v,f,init){
var self__ = this;
var v__$1 = this;
var i = (0);
var init__$1 = init;
while(true){
if((i < self__.cnt)){
var arr = cljs.core.unchecked_array_for(v__$1,i);
var len = arr.length;
var init__$2 = (function (){var j = (0);
var init__$2 = init__$1;
while(true){
if((j < len)){
var init__$3 = (function (){var G__9005 = init__$2;
var G__9006 = (j + i);
var G__9007 = (arr[j]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__9005,G__9006,G__9007) : f.call(null,G__9005,G__9006,G__9007));
})();
if(cljs.core.reduced_QMARK_(init__$3)){
return init__$3;
} else {
var G__9018 = (j + (1));
var G__9019 = init__$3;
j = G__9018;
init__$2 = G__9019;
continue;
}
} else {
return init__$2;
}
break;
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__9008 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__9008) : cljs.core.deref.call(null,G__9008));
} else {
var G__9020 = (i + len);
var G__9021 = init__$2;
i = G__9020;
init__$1 = G__9021;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
return (cljs.core.array_for(coll__$1,n)[(n & (31))]);
});

cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
return (cljs.core.unchecked_array_for(coll__$1,n)[(n & (31))]);
} else {
return not_found;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (coll,n,val){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
if((cljs.core.tail_off(coll__$1) <= n)){
var new_tail = cljs.core.aclone(self__.tail);
(new_tail[(n & (31))] = val);

return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,self__.root,new_tail,null));
} else {
return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,cljs.core.do_assoc(coll__$1,self__.shift,self__.root,n,val),self__.tail,null));
}
} else {
if((n === self__.cnt)){
return cljs.core._conj(coll__$1,val);
} else {
throw (new Error([cljs.core.str("Index "),cljs.core.str(n),cljs.core.str(" out of bounds  [0,"),cljs.core.str(self__.cnt),cljs.core.str("]")].join('')));

}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IIterable$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.ranged_iterator(this$__$1,(0),self__.cnt);
});

cljs.core.PersistentVector.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentVector.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,self__.root,self__.tail,self__.__hash));
});

cljs.core.PersistentVector.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(0));
});

cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(1));
});

cljs.core.PersistentVector.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(self__.cnt - (1)));
} else {
return null;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt === (0))){
throw (new Error("Can't pop empty vector"));
} else {
if(((1) === self__.cnt)){
return cljs.core._with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
} else {
if(((1) < (self__.cnt - cljs.core.tail_off(coll__$1)))){
return (new cljs.core.PersistentVector(self__.meta,(self__.cnt - (1)),self__.shift,self__.root,self__.tail.slice((0),(-1)),null));
} else {
var new_tail = cljs.core.unchecked_array_for(coll__$1,(self__.cnt - (2)));
var nr = cljs.core.pop_tail(coll__$1,self__.shift,self__.root);
var new_root = (((nr == null))?cljs.core.PersistentVector.EMPTY_NODE:nr);
var cnt_1 = (self__.cnt - (1));
if((((5) < self__.shift)) && ((cljs.core.pv_aget(new_root,(1)) == null))){
return (new cljs.core.PersistentVector(self__.meta,cnt_1,(self__.shift - (5)),cljs.core.pv_aget(new_root,(0)),new_tail,null));
} else {
return (new cljs.core.PersistentVector(self__.meta,cnt_1,self__.shift,new_root,new_tail,null));
}

}
}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return (new cljs.core.RSeq(coll__$1,(self__.cnt - (1)),null));
} else {
return null;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4153__auto__ = self__.__hash;
if(!((h__4153__auto__ == null))){
return h__4153__auto__;
} else {
var h__4153__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4153__auto____$1;

return h__4153__auto____$1;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
if((other instanceof cljs.core.PersistentVector)){
if((self__.cnt === cljs.core.count(other))){
var me_iter = cljs.core._iterator(coll__$1);
var you_iter = cljs.core._iterator(other);
while(true){
if(cljs.core.truth_(me_iter.hasNext())){
var x = me_iter.next();
var y = you_iter.next();
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
continue;
} else {
return false;
}
} else {
return true;
}
break;
}
} else {
return false;
}
} else {
return cljs.core.equiv_sequential(coll__$1,other);
}
});

cljs.core.PersistentVector.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientVector(self__.cnt,self__.shift,(function (){var G__9009 = self__.root;
return (cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1(G__9009) : cljs.core.tv_editable_root.call(null,G__9009));
})(),(function (){var G__9010 = self__.tail;
return (cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1(G__9010) : cljs.core.tv_editable_tail.call(null,G__9010));
})()));
});

cljs.core.PersistentVector.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (v,f){
var self__ = this;
var v__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(v__$1,f);
});

cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (v,f,init){
var self__ = this;
var v__$1 = this;
var i = (0);
var init__$1 = init;
while(true){
if((i < self__.cnt)){
var arr = cljs.core.unchecked_array_for(v__$1,i);
var len = arr.length;
var init__$2 = (function (){var j = (0);
var init__$2 = init__$1;
while(true){
if((j < len)){
var init__$3 = (function (){var G__9011 = init__$2;
var G__9012 = (arr[j]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9011,G__9012) : f.call(null,G__9011,G__9012));
})();
if(cljs.core.reduced_QMARK_(init__$3)){
return init__$3;
} else {
var G__9022 = (j + (1));
var G__9023 = init__$3;
j = G__9022;
init__$2 = G__9023;
continue;
}
} else {
return init__$2;
}
break;
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__9013 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__9013) : cljs.core.deref.call(null,G__9013));
} else {
var G__9024 = (i + len);
var G__9025 = init__$2;
i = G__9024;
init__$1 = G__9025;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._assoc_n(coll__$1,k,v);
} else {
throw (new Error("Vector's key for assoc must be a number."));
}
});

cljs.core.PersistentVector.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt === (0))){
return null;
} else {
if((self__.cnt <= (32))){
return (new cljs.core.IndexedSeq(self__.tail,(0)));
} else {
var G__9014 = coll__$1;
var G__9015 = cljs.core.first_array_for_longvec(coll__$1);
var G__9016 = (0);
var G__9017 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__9014,G__9015,G__9016,G__9017) : cljs.core.chunked_seq.call(null,G__9014,G__9015,G__9016,G__9017));

}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentVector(meta__$1,self__.cnt,self__.shift,self__.root,self__.tail,self__.__hash));
});

cljs.core.PersistentVector.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
if(((self__.cnt - cljs.core.tail_off(coll__$1)) < (32))){
var len = self__.tail.length;
var new_tail = (new Array((len + (1))));
var n__4619__auto___9026 = len;
var i_9027 = (0);
while(true){
if((i_9027 < n__4619__auto___9026)){
(new_tail[i_9027] = (self__.tail[i_9027]));

var G__9028 = (i_9027 + (1));
i_9027 = G__9028;
continue;
} else {
}
break;
}

(new_tail[len] = o);

return (new cljs.core.PersistentVector(self__.meta,(self__.cnt + (1)),self__.shift,self__.root,new_tail,null));
} else {
var root_overflow_QMARK_ = ((self__.cnt >>> (5)) > ((1) << self__.shift));
var new_shift = ((root_overflow_QMARK_)?(self__.shift + (5)):self__.shift);
var new_root = ((root_overflow_QMARK_)?(function (){var n_r = cljs.core.pv_fresh_node(null);
cljs.core.pv_aset(n_r,(0),self__.root);

cljs.core.pv_aset(n_r,(1),cljs.core.new_path(null,self__.shift,(new cljs.core.VectorNode(null,self__.tail))));

return n_r;
})():cljs.core.push_tail(coll__$1,self__.shift,self__.root,(new cljs.core.VectorNode(null,self__.tail))));
return (new cljs.core.PersistentVector(self__.meta,(self__.cnt + (1)),new_shift,new_root,[o],null));
}
});

cljs.core.PersistentVector.prototype.call = (function() {
var G__9029 = null;
var G__9029__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});
var G__9029__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});
G__9029 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__9029__2.call(this,self__,k);
case 3:
return G__9029__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__9029.cljs$core$IFn$_invoke$arity$2 = G__9029__2;
G__9029.cljs$core$IFn$_invoke$arity$3 = G__9029__3;
return G__9029;
})()
;

cljs.core.PersistentVector.prototype.apply = (function (self__,args9004){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args9004)));
});

cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});

cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});

cljs.core.PersistentVector.cljs$lang$type = true;

cljs.core.PersistentVector.cljs$lang$ctorStr = "cljs.core/PersistentVector";

cljs.core.PersistentVector.cljs$lang$ctorPrWriter = (function (this__4319__auto__,writer__4320__auto__,opt__4321__auto__){
return cljs.core._write(writer__4320__auto__,"cljs.core/PersistentVector");
});

cljs.core.__GT_PersistentVector = (function __GT_PersistentVector(meta,cnt,shift,root,tail,__hash){
return (new cljs.core.PersistentVector(meta,cnt,shift,root,tail,__hash));
});

cljs.core.PersistentVector.EMPTY_NODE = (new cljs.core.VectorNode(null,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
cljs.core.PersistentVector.EMPTY = (new cljs.core.PersistentVector(null,(0),(5),cljs.core.PersistentVector.EMPTY_NODE,[],cljs.core.empty_ordered_hash));
cljs.core.PersistentVector.fromArray = (function (xs,no_clone){
var l = xs.length;
var xs__$1 = ((no_clone)?xs:cljs.core.aclone(xs));
if((l < (32))){
return (new cljs.core.PersistentVector(null,l,(5),cljs.core.PersistentVector.EMPTY_NODE,xs__$1,null));
} else {
var node = xs__$1.slice((0),(32));
var v = (new cljs.core.PersistentVector(null,(32),(5),cljs.core.PersistentVector.EMPTY_NODE,node,null));
var i = (32);
var out = v.cljs$core$IEditableCollection$_as_transient$arity$1(null);
while(true){
if((i < l)){
var G__9030 = (i + (1));
var G__9031 = cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(out,(xs__$1[i]));
i = G__9030;
out = G__9031;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
}
});
(cljs.core.PersistentVector.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4710__auto__ = this;
return cljs.core.es6_iterator(this__4710__auto__);
}));
cljs.core.vec = (function vec(coll){
return cljs.core._persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_,cljs.core._as_transient(cljs.core.PersistentVector.EMPTY),coll));
});
/**
* @param {...*} var_args
*/
cljs.core.vector = (function() { 
var vector__delegate = function (args){
if(((args instanceof cljs.core.IndexedSeq)) && ((args.i === (0)))){
return cljs.core.PersistentVector.fromArray(args.arr,true);
} else {
return cljs.core.vec(args);
}
};
var vector = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__9032__i = 0, G__9032__a = new Array(arguments.length -  0);
while (G__9032__i < G__9032__a.length) {G__9032__a[G__9032__i] = arguments[G__9032__i + 0]; ++G__9032__i;}
  args = new cljs.core.IndexedSeq(G__9032__a,0);
} 
return vector__delegate.call(this,args);};
vector.cljs$lang$maxFixedArity = 0;
vector.cljs$lang$applyTo = (function (arglist__9033){
var args = cljs.core.seq(arglist__9033);
return vector__delegate(args);
});
vector.cljs$core$IFn$_invoke$arity$variadic = vector__delegate;
return vector;
})()
;

/**
* @constructor
*/
cljs.core.ChunkedSeq = (function (vec,node,i,off,meta,__hash){
this.vec = vec;
this.node = node;
this.i = i;
this.off = off;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 32375020;
this.cljs$lang$protocol_mask$partition1$ = 1536;
})
cljs.core.ChunkedSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ChunkedSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ChunkedSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(((self__.off + (1)) < self__.node.length)){
var s = (function (){var G__9034 = self__.vec;
var G__9035 = self__.node;
var G__9036 = self__.i;
var G__9037 = (self__.off + (1));
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__9034,G__9035,G__9036,G__9037) : cljs.core.chunked_seq.call(null,G__9034,G__9035,G__9036,G__9037));
})();
if((s == null)){
return null;
} else {
return s;
}
} else {
return cljs.core._chunked_next(coll__$1);
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4153__auto__ = self__.__hash;
if(!((h__4153__auto__ == null))){
return h__4153__auto__;
} else {
var h__4153__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4153__auto____$1;

return h__4153__auto____$1;
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2((function (){var G__9038 = self__.vec;
var G__9039 = (self__.i + self__.off);
var G__9040 = cljs.core.count(self__.vec);
return (cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(G__9038,G__9039,G__9040) : cljs.core.subvec.call(null,G__9038,G__9039,G__9040));
})(),f);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3((function (){var G__9041 = self__.vec;
var G__9042 = (self__.i + self__.off);
var G__9043 = cljs.core.count(self__.vec);
return (cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(G__9041,G__9042,G__9043) : cljs.core.subvec.call(null,G__9041,G__9042,G__9043));
})(),f,start);
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.node[self__.off]);
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(((self__.off + (1)) < self__.node.length)){
var s = (function (){var G__9044 = self__.vec;
var G__9045 = self__.node;
var G__9046 = self__.i;
var G__9047 = (self__.off + (1));
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__9044,G__9045,G__9046,G__9047) : cljs.core.chunked_seq.call(null,G__9044,G__9045,G__9046,G__9047));
})();
if((s == null)){
return cljs.core.List.EMPTY;
} else {
return s;
}
} else {
return cljs.core._chunked_rest(coll__$1);
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$2(self__.node,self__.off);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var end = (self__.i + self__.node.length);
if((end < cljs.core._count(self__.vec))){
var G__9048 = self__.vec;
var G__9049 = cljs.core.unchecked_array_for(self__.vec,end);
var G__9050 = end;
var G__9051 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__9048,G__9049,G__9050,G__9051) : cljs.core.chunked_seq.call(null,G__9048,G__9049,G__9050,G__9051));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,m){
var self__ = this;
var coll__$1 = this;
var G__9052 = self__.vec;
var G__9053 = self__.node;
var G__9054 = self__.i;
var G__9055 = self__.off;
var G__9056 = m;
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5(G__9052,G__9053,G__9054,G__9055,G__9056) : cljs.core.chunked_seq.call(null,G__9052,G__9053,G__9054,G__9055,G__9056));
});

cljs.core.ChunkedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var end = (self__.i + self__.node.length);
if((end < cljs.core._count(self__.vec))){
var G__9057 = self__.vec;
var G__9058 = cljs.core.unchecked_array_for(self__.vec,end);
var G__9059 = end;
var G__9060 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__9057,G__9058,G__9059,G__9060) : cljs.core.chunked_seq.call(null,G__9057,G__9058,G__9059,G__9060));
} else {
return null;
}
});

cljs.core.ChunkedSeq.cljs$lang$type = true;

cljs.core.ChunkedSeq.cljs$lang$ctorStr = "cljs.core/ChunkedSeq";

cljs.core.ChunkedSeq.cljs$lang$ctorPrWriter = (function (this__4319__auto__,writer__4320__auto__,opt__4321__auto__){
return cljs.core._write(writer__4320__auto__,"cljs.core/ChunkedSeq");
});

cljs.core.__GT_ChunkedSeq = (function __GT_ChunkedSeq(vec,node,i,off,meta,__hash){
return (new cljs.core.ChunkedSeq(vec,node,i,off,meta,__hash));
});

(cljs.core.ChunkedSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4710__auto__ = this;
return cljs.core.es6_iterator(this__4710__auto__);
}));
cljs.core.chunked_seq = (function() {
var chunked_seq = null;
var chunked_seq__3 = (function (vec,i,off){
return (new cljs.core.ChunkedSeq(vec,cljs.core.array_for(vec,i),i,off,null,null));
});
var chunked_seq__4 = (function (vec,node,i,off){
return (new cljs.core.ChunkedSeq(vec,node,i,off,null,null));
});
var chunked_seq__5 = (function (vec,node,i,off,meta){
return (new cljs.core.ChunkedSeq(vec,node,i,off,meta,null));
});
chunked_seq = function(vec,node,i,off,meta){
switch(arguments.length){
case 3:
return chunked_seq__3.call(this,vec,node,i);
case 4:
return chunked_seq__4.call(this,vec,node,i,off);
case 5:
return chunked_seq__5.call(this,vec,node,i,off,meta);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
chunked_seq.cljs$core$IFn$_invoke$arity$3 = chunked_seq__3;
chunked_seq.cljs$core$IFn$_invoke$arity$4 = chunked_seq__4;
chunked_seq.cljs$core$IFn$_invoke$arity$5 = chunked_seq__5;
return chunked_seq;
})()
;

/**
* @constructor
*/
cljs.core.Subvec = (function (meta,v,start,end,__hash){
this.meta = meta;
this.v = v;
this.start = start;
this.end = end;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 166617887;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Subvec.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Subvec.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
if(((n < (0))) || ((self__.end <= (self__.start + n)))){
return cljs.core.vector_index_out_of_bounds(n,(self__.end - self__.start));
} else {
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,(self__.start + n));
}
});

cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if(((n < (0))) || ((self__.end <= (self__.start + n)))){
return not_found;
} else {
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(self__.v,(self__.start + n),not_found);
}
});

cljs.core.Subvec.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (coll,n,val){
var self__ = this;
var coll__$1 = this;
var v_pos = (self__.start + n);
var G__9062 = self__.meta;
var G__9063 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.v,v_pos,val);
var G__9064 = self__.start;
var G__9065 = (function (){var x__4049__auto__ = self__.end;
var y__4050__auto__ = (v_pos + (1));
return ((x__4049__auto__ > y__4050__auto__) ? x__4049__auto__ : y__4050__auto__);
})();
var G__9066 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__9062,G__9063,G__9064,G__9065,G__9066) : cljs.core.build_subvec.call(null,G__9062,G__9063,G__9064,G__9065,G__9066));
});

cljs.core.Subvec.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.Subvec.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Subvec(self__.meta,self__.v,self__.start,self__.end,self__.__hash));
});

cljs.core.Subvec.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.end - self__.start);
});

cljs.core.Subvec.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,(self__.end - (1)));
});

cljs.core.Subvec.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.start === self__.end)){
throw (new Error("Can't pop empty vector"));
} else {
var G__9067 = self__.meta;
var G__9068 = self__.v;
var G__9069 = self__.start;
var G__9070 = (self__.end - (1));
var G__9071 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__9067,G__9068,G__9069,G__9070,G__9071) : cljs.core.build_subvec.call(null,G__9067,G__9068,G__9069,G__9070,G__9071));
}
});

cljs.core.Subvec.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(!((self__.start === self__.end))){
return (new cljs.core.RSeq(coll__$1,((self__.end - self__.start) - (1)),null));
} else {
return null;
}
});

cljs.core.Subvec.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4153__auto__ = self__.__hash;
if(!((h__4153__auto__ == null))){
return h__4153__auto__;
} else {
var h__4153__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4153__auto____$1;

return h__4153__auto____$1;
}
});

cljs.core.Subvec.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.Subvec.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(coll__$1,f);
});

cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start__$1){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(coll__$1,f,start__$1);
});

cljs.core.Subvec.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,key,val){
var self__ = this;
var coll__$1 = this;
if(typeof key === 'number'){
return cljs.core._assoc_n(coll__$1,key,val);
} else {
throw (new Error("Subvec's key for assoc must be a number."));
}
});

cljs.core.Subvec.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var subvec_seq = ((function (coll__$1){
return (function subvec_seq(i){
if((i === self__.end)){
return null;
} else {
return cljs.core.cons(cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,i),(new cljs.core.LazySeq(null,((function (coll__$1){
return (function (){
return subvec_seq((i + (1)));
});})(coll__$1))
,null,null)));
}
});})(coll__$1))
;
return subvec_seq(self__.start);
});

cljs.core.Subvec.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
var G__9073 = meta__$1;
var G__9074 = self__.v;
var G__9075 = self__.start;
var G__9076 = self__.end;
var G__9077 = self__.__hash;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__9073,G__9074,G__9075,G__9076,G__9077) : cljs.core.build_subvec.call(null,G__9073,G__9074,G__9075,G__9076,G__9077));
});

cljs.core.Subvec.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__9078 = self__.meta;
var G__9079 = cljs.core._assoc_n(self__.v,self__.end,o);
var G__9080 = self__.start;
var G__9081 = (self__.end + (1));
var G__9082 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__9078,G__9079,G__9080,G__9081,G__9082) : cljs.core.build_subvec.call(null,G__9078,G__9079,G__9080,G__9081,G__9082));
});

cljs.core.Subvec.prototype.call = (function() {
var G__9083 = null;
var G__9083__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});
var G__9083__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});
G__9083 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__9083__2.call(this,self__,k);
case 3:
return G__9083__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__9083.cljs$core$IFn$_invoke$arity$2 = G__9083__2;
G__9083.cljs$core$IFn$_invoke$arity$3 = G__9083__3;
return G__9083;
})()
;

cljs.core.Subvec.prototype.apply = (function (self__,args9061){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args9061)));
});

cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});

cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});

cljs.core.Subvec.cljs$lang$type = true;

cljs.core.Subvec.cljs$lang$ctorStr = "cljs.core/Subvec";

cljs.core.Subvec.cljs$lang$ctorPrWriter = (function (this__4319__auto__,writer__4320__auto__,opt__4321__auto__){
return cljs.core._write(writer__4320__auto__,"cljs.core/Subvec");
});

cljs.core.__GT_Subvec = (function __GT_Subvec(meta,v,start,end,__hash){
return (new cljs.core.Subvec(meta,v,start,end,__hash));
});

(cljs.core.Subvec.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4710__auto__ = this;
return cljs.core.es6_iterator(this__4710__auto__);
}));
cljs.core.build_subvec = (function build_subvec(meta,v,start,end,__hash){
while(true){
if((v instanceof cljs.core.Subvec)){
var G__9084 = meta;
var G__9085 = v.v;
var G__9086 = (v.start + start);
var G__9087 = (v.start + end);
var G__9088 = __hash;
meta = G__9084;
v = G__9085;
start = G__9086;
end = G__9087;
__hash = G__9088;
continue;
} else {
var c = cljs.core.count(v);
if(((start < (0))) || ((end < (0))) || ((start > c)) || ((end > c))){
throw (new Error("Index out of bounds"));
} else {
}

return (new cljs.core.Subvec(meta,v,start,end,__hash));
}
break;
}
});
/**
* Returns a persistent vector of the items in vector from
* start (inclusive) to end (exclusive).  If end is not supplied,
* defaults to (count vector). This operation is O(1) and very fast, as
* the resulting vector shares structure with the original and no
* trimming is done.
*/
cljs.core.subvec = (function() {
var subvec = null;
var subvec__2 = (function (v,start){
return subvec.cljs$core$IFn$_invoke$arity$3(v,start,cljs.core.count(v));
});
var subvec__3 = (function (v,start,end){
return cljs.core.build_subvec(null,v,start,end,null);
});
subvec = function(v,start,end){
switch(arguments.length){
case 2:
return subvec__2.call(this,v,start);
case 3:
return subvec__3.call(this,v,start,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
subvec.cljs$core$IFn$_invoke$arity$2 = subvec__2;
subvec.cljs$core$IFn$_invoke$arity$3 = subvec__3;
return subvec;
})()
;
cljs.core.tv_ensure_editable = (function tv_ensure_editable(edit,node){
if((edit === node.edit)){
return node;
} else {
return (new cljs.core.VectorNode(edit,cljs.core.aclone(node.arr)));
}
});
cljs.core.tv_editable_root = (function tv_editable_root(node){
return (new cljs.core.VectorNode((function (){var obj9095 = {};
return obj9095;
})(),cljs.core.aclone(node.arr)));
});
cljs.core.tv_editable_tail = (function tv_editable_tail(tl){
var ret = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
cljs.core.array_copy(tl,(0),ret,(0),tl.length);

return ret;
});
cljs.core.tv_push_tail = (function tv_push_tail(tv,level,parent,tail_node){
var ret = cljs.core.tv_ensure_editable(tv.root.edit,parent);
var subidx = (((tv.cnt - (1)) >>> level) & (31));
cljs.core.pv_aset(ret,subidx,(((level === (5)))?tail_node:(function (){var child = cljs.core.pv_aget(ret,subidx);
if(!((child == null))){
return tv_push_tail(tv,(level - (5)),child,tail_node);
} else {
return cljs.core.new_path(tv.root.edit,(level - (5)),tail_node);
}
})()));

return ret;
});
cljs.core.tv_pop_tail = (function tv_pop_tail(tv,level,node){
var node__$1 = cljs.core.tv_ensure_editable(tv.root.edit,node);
var subidx = (((tv.cnt - (2)) >>> level) & (31));
if((level > (5))){
var new_child = tv_pop_tail(tv,(level - (5)),cljs.core.pv_aget(node__$1,subidx));
if(((new_child == null)) && ((subidx === (0)))){
return null;
} else {
cljs.core.pv_aset(node__$1,subidx,new_child);

return node__$1;
}
} else {
if((subidx === (0))){
return null;
} else {
cljs.core.pv_aset(node__$1,subidx,null);

return node__$1;

}
}
});
cljs.core.unchecked_editable_array_for = (function unchecked_editable_array_for(tv,i){
if((i >= cljs.core.tail_off(tv))){
return tv.tail;
} else {
var root = tv.root;
var node = root;
var level = tv.shift;
while(true){
if((level > (0))){
var G__9103 = cljs.core.tv_ensure_editable(root.edit,cljs.core.pv_aget(node,((i >>> level) & (31))));
var G__9104 = (level - (5));
node = G__9103;
level = G__9104;
continue;
} else {
return node.arr;
}
break;
}
}
});

/**
* @constructor
*/
cljs.core.TransientVector = (function (cnt,shift,root,tail){
this.cnt = cnt;
this.shift = shift;
this.root = root;
this.tail = tail;
this.cljs$lang$protocol_mask$partition0$ = 275;
this.cljs$lang$protocol_mask$partition1$ = 88;
})
cljs.core.TransientVector.prototype.call = (function() {
var G__9108 = null;
var G__9108__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__9108__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__9108 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__9108__2.call(this,self__,k);
case 3:
return G__9108__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__9108.cljs$core$IFn$_invoke$arity$2 = G__9108__2;
G__9108.cljs$core$IFn$_invoke$arity$3 = G__9108__3;
return G__9108;
})()
;

cljs.core.TransientVector.prototype.apply = (function (self__,args9105){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args9105)));
});

cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
if(self__.root.edit){
return (cljs.core.array_for(coll__$1,n)[(n & (31))]);
} else {
throw (new Error("nth after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,n);
} else {
return not_found;
}
});

cljs.core.TransientVector.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(self__.root.edit){
return self__.cnt;
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3 = (function (tcoll,n,val){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if((((0) <= n)) && ((n < self__.cnt))){
if((cljs.core.tail_off(tcoll__$1) <= n)){
(self__.tail[(n & (31))] = val);

return tcoll__$1;
} else {
var new_root = ((function (tcoll__$1){
return (function go(level,node){
var node__$1 = cljs.core.tv_ensure_editable(self__.root.edit,node);
if((level === (0))){
cljs.core.pv_aset(node__$1,(n & (31)),val);

return node__$1;
} else {
var subidx = ((n >>> level) & (31));
cljs.core.pv_aset(node__$1,subidx,go((level - (5)),cljs.core.pv_aget(node__$1,subidx)));

return node__$1;
}
});})(tcoll__$1))
.call(null,self__.shift,self__.root);
self__.root = new_root;

return tcoll__$1;
}
} else {
if((n === self__.cnt)){
return cljs.core._conj_BANG_(tcoll__$1,val);
} else {
throw (new Error([cljs.core.str("Index "),cljs.core.str(n),cljs.core.str(" out of bounds for TransientVector of length"),cljs.core.str(self__.cnt)].join('')));

}
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_pop_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if((self__.cnt === (0))){
throw (new Error("Can't pop empty vector"));
} else {
if(((1) === self__.cnt)){
self__.cnt = (0);

return tcoll__$1;
} else {
if((((self__.cnt - (1)) & (31)) > (0))){
self__.cnt = (self__.cnt - (1));

return tcoll__$1;
} else {
var new_tail = cljs.core.unchecked_editable_array_for(tcoll__$1,(self__.cnt - (2)));
var new_root = (function (){var nr = cljs.core.tv_pop_tail(tcoll__$1,self__.shift,self__.root);
if(!((nr == null))){
return nr;
} else {
return (new cljs.core.VectorNode(self__.root.edit,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
}
})();
if((((5) < self__.shift)) && ((cljs.core.pv_aget(new_root,(1)) == null))){
var new_root__$1 = cljs.core.tv_ensure_editable(self__.root.edit,cljs.core.pv_aget(new_root,(0)));
self__.root = new_root__$1;

self__.shift = (self__.shift - (5));

self__.cnt = (self__.cnt - (1));

self__.tail = new_tail;

return tcoll__$1;
} else {
self__.root = new_root;

self__.cnt = (self__.cnt - (1));

self__.tail = new_tail;

return tcoll__$1;
}

}
}
}
} else {
throw (new Error("pop! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
if(typeof key === 'number'){
return cljs.core._assoc_n_BANG_(tcoll__$1,key,val);
} else {
throw (new Error("TransientVector's key for assoc! must be a number."));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if(((self__.cnt - cljs.core.tail_off(tcoll__$1)) < (32))){
(self__.tail[(self__.cnt & (31))] = o);

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
} else {
var tail_node = (new cljs.core.VectorNode(self__.root.edit,self__.tail));
var new_tail = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
(new_tail[(0)] = o);

self__.tail = new_tail;

if(((self__.cnt >>> (5)) > ((1) << self__.shift))){
var new_root_array = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var new_shift = (self__.shift + (5));
(new_root_array[(0)] = self__.root);

(new_root_array[(1)] = cljs.core.new_path(self__.root.edit,self__.shift,tail_node));

self__.root = (new cljs.core.VectorNode(self__.root.edit,new_root_array));

self__.shift = new_shift;

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
} else {
var new_root = cljs.core.tv_push_tail(tcoll__$1,self__.shift,self__.root,tail_node);
self__.root = new_root;

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
}
}
} else {
throw (new Error("conj! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
self__.root.edit = null;

var len = (self__.cnt - cljs.core.tail_off(tcoll__$1));
var trimmed_tail = (new Array(len));
cljs.core.array_copy(self__.tail,(0),trimmed_tail,(0),len);

return (new cljs.core.PersistentVector(null,self__.cnt,self__.shift,self__.root,trimmed_tail,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientVector.cljs$lang$type = true;

cljs.core.TransientVector.cljs$lang$ctorStr = "cljs.core/TransientVector";

cljs.core.TransientVector.cljs$lang$ctorPrWriter = (function (this__4319__auto__,writer__4320__auto__,opt__4321__auto__){
return cljs.core._write(writer__4320__auto__,"cljs.core/TransientVector");
});

cljs.core.__GT_TransientVector = (function __GT_TransientVector(cnt,shift,root,tail){
return (new cljs.core.TransientVector(cnt,shift,root,tail));
});


/**
* @constructor
*/
cljs.core.PersistentQueueSeq = (function (meta,front,rear,__hash){
this.meta = meta;
this.front = front;
this.rear = rear;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 31850572;
})
cljs.core.PersistentQueueSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentQueueSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4153__auto__ = self__.__hash;
if(!((h__4153__auto__ == null))){
return h__4153__auto__;
} else {
var h__4153__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4153__auto____$1;

return h__4153__auto____$1;
}
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var temp__4124__auto__ = cljs.core.next(self__.front);
if(temp__4124__auto__){
var f1 = temp__4124__auto__;
return (new cljs.core.PersistentQueueSeq(self__.meta,f1,self__.rear,null));
} else {
if((self__.rear == null)){
return cljs.core._empty(coll__$1);
} else {
return (new cljs.core.PersistentQueueSeq(self__.meta,self__.rear,null,null));
}
}
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueueSeq(meta__$1,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentQueueSeq.cljs$lang$type = true;

cljs.core.PersistentQueueSeq.cljs$lang$ctorStr = "cljs.core/PersistentQueueSeq";

cljs.core.PersistentQueueSeq.cljs$lang$ctorPrWriter = (function (this__4319__auto__,writer__4320__auto__,opt__4321__auto__){
return cljs.core._write(writer__4320__auto__,"cljs.core/PersistentQueueSeq");
});

cljs.core.__GT_PersistentQueueSeq = (function __GT_PersistentQueueSeq(meta,front,rear,__hash){
return (new cljs.core.PersistentQueueSeq(meta,front,rear,__hash));
});

(cljs.core.PersistentQueueSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4710__auto__ = this;
return cljs.core.es6_iterator(this__4710__auto__);
}));

/**
* @constructor
*/
cljs.core.PersistentQueue = (function (meta,count,front,rear,__hash){
this.meta = meta;
this.count = count;
this.front = front;
this.rear = rear;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 31858766;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentQueue.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentQueue.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentQueue.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentQueue.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueue(self__.meta,self__.count,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueue.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.count;
});

cljs.core.PersistentQueue.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueue.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_(self__.front)){
var temp__4124__auto__ = cljs.core.next(self__.front);
if(temp__4124__auto__){
var f1 = temp__4124__auto__;
return (new cljs.core.PersistentQueue(self__.meta,(self__.count - (1)),f1,self__.rear,null));
} else {
return (new cljs.core.PersistentQueue(self__.meta,(self__.count - (1)),cljs.core.seq(self__.rear),cljs.core.PersistentVector.EMPTY,null));
}
} else {
return coll__$1;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4153__auto__ = self__.__hash;
if(!((h__4153__auto__ == null))){
return h__4153__auto__;
} else {
var h__4153__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4153__auto____$1;

return h__4153__auto____$1;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentQueue.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentQueue.EMPTY,self__.meta);
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.rest(cljs.core.seq(coll__$1));
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var rear__$1 = cljs.core.seq(self__.rear);
if(cljs.core.truth_((function (){var or__3732__auto__ = self__.front;
if(cljs.core.truth_(or__3732__auto__)){
return or__3732__auto__;
} else {
return rear__$1;
}
})())){
return (new cljs.core.PersistentQueueSeq(null,self__.front,cljs.core.seq(rear__$1),null));
} else {
return null;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueue(meta__$1,self__.count,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueue.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_(self__.front)){
return (new cljs.core.PersistentQueue(self__.meta,(self__.count + (1)),self__.front,cljs.core.conj.cljs$core$IFn$_invoke$arity$2((function (){var or__3732__auto__ = self__.rear;
if(cljs.core.truth_(or__3732__auto__)){
return or__3732__auto__;
} else {
return cljs.core.PersistentVector.EMPTY;
}
})(),o),null));
} else {
return (new cljs.core.PersistentQueue(self__.meta,(self__.count + (1)),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(self__.front,o),cljs.core.PersistentVector.EMPTY,null));
}
});

cljs.core.PersistentQueue.cljs$lang$type = true;

cljs.core.PersistentQueue.cljs$lang$ctorStr = "cljs.core/PersistentQueue";

cljs.core.PersistentQueue.cljs$lang$ctorPrWriter = (function (this__4319__auto__,writer__4320__auto__,opt__4321__auto__){
return cljs.core._write(writer__4320__auto__,"cljs.core/PersistentQueue");
});

cljs.core.__GT_PersistentQueue = (function __GT_PersistentQueue(meta,count,front,rear,__hash){
return (new cljs.core.PersistentQueue(meta,count,front,rear,__hash));
});

cljs.core.PersistentQueue.EMPTY = (new cljs.core.PersistentQueue(null,(0),null,cljs.core.PersistentVector.EMPTY,cljs.core.empty_ordered_hash));
(cljs.core.PersistentQueue.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4710__auto__ = this;
return cljs.core.es6_iterator(this__4710__auto__);
}));

/**
* @constructor
*/
cljs.core.NeverEquiv = (function (){
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2097152;
})
cljs.core.NeverEquiv.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var self__ = this;
var o__$1 = this;
return false;
});

cljs.core.NeverEquiv.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.NeverEquiv.cljs$lang$type = true;

cljs.core.NeverEquiv.cljs$lang$ctorStr = "cljs.core/NeverEquiv";

cljs.core.NeverEquiv.cljs$lang$ctorPrWriter = (function (this__4319__auto__,writer__4320__auto__,opt__4321__auto__){
return cljs.core._write(writer__4320__auto__,"cljs.core/NeverEquiv");
});

cljs.core.__GT_NeverEquiv = (function __GT_NeverEquiv(){
return (new cljs.core.NeverEquiv());
});

cljs.core.never_equiv = (new cljs.core.NeverEquiv());
/**
* Assumes y is a map. Returns true if x equals y, otherwise returns
* false.
*/
cljs.core.equiv_map = (function equiv_map(x,y){
return cljs.core.boolean$(((cljs.core.map_QMARK_(y))?(((cljs.core.count(x) === cljs.core.count(y)))?cljs.core.every_QMARK_(cljs.core.identity,cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (xkv){
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(y,cljs.core.first(xkv),cljs.core.never_equiv),cljs.core.second(xkv));
}),x)):null):null));
});
cljs.core.scan_array = (function scan_array(incr,k,array){
var len = array.length;
var i = (0);
while(true){
if((i < len)){
if((k === (array[i]))){
return i;
} else {
var G__9109 = (i + incr);
i = G__9109;
continue;
}
} else {
return null;
}
break;
}
});
cljs.core.obj_map_compare_keys = (function obj_map_compare_keys(a,b){
var a__$1 = cljs.core.hash(a);
var b__$1 = cljs.core.hash(b);
if((a__$1 < b__$1)){
return (-1);
} else {
if((a__$1 > b__$1)){
return (1);
} else {
return (0);

}
}
});
cljs.core.obj_map__GT_hash_map = (function obj_map__GT_hash_map(m,k,v){
var ks = m.keys;
var len = ks.length;
var so = m.strobj;
var mm = cljs.core.meta(m);
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if((i < len)){
var k__$1 = (ks[i]);
var G__9110 = (i + (1));
var G__9111 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,k__$1,(so[k__$1]));
i = G__9110;
out = G__9111;
continue;
} else {
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,k,v)),mm);
}
break;
}
});
cljs.core.obj_clone = (function obj_clone(obj,ks){
var new_obj = (function (){var obj9115 = {};
return obj9115;
})();
var l = ks.length;
var i_9116 = (0);
while(true){
if((i_9116 < l)){
var k_9117 = (ks[i_9116]);
(new_obj[k_9117] = (obj[k_9117]));

var G__9118 = (i_9116 + (1));
i_9116 = G__9118;
continue;
} else {
}
break;
}

return new_obj;
});

/**
* @constructor
*/
cljs.core.ObjMap = (function (meta,keys,strobj,update_count,__hash){
this.meta = meta;
this.keys = keys;
this.strobj = strobj;
this.update_count = update_count;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16123663;
this.cljs$lang$protocol_mask$partition1$ = 4;
})
cljs.core.ObjMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ObjMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__3720__auto__ = (function (){var G__9122 = k;
return goog.isString(G__9122);
})();
if(cljs.core.truth_(and__3720__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__3720__auto__;
}
})())){
return (self__.strobj[k]);
} else {
return not_found;
}
});

cljs.core.ObjMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var len = self__.keys.length;
var keys__$1 = self__.keys.sort(cljs.core.obj_map_compare_keys);
var init__$1 = init;
while(true){
if(cljs.core.seq(keys__$1)){
var k = cljs.core.first(keys__$1);
var init__$2 = (function (){var G__9123 = init__$1;
var G__9124 = k;
var G__9125 = (self__.strobj[k]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__9123,G__9124,G__9125) : f.call(null,G__9123,G__9124,G__9125));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__9126 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__9126) : cljs.core.deref.call(null,G__9126));
} else {
var G__9132 = cljs.core.rest(keys__$1);
var G__9133 = init__$2;
keys__$1 = G__9132;
init__$1 = G__9133;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.ObjMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ObjMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.keys.length;
});

cljs.core.ObjMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4153__auto__ = self__.__hash;
if(!((h__4153__auto__ == null))){
return h__4153__auto__;
} else {
var h__4153__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__4153__auto____$1;

return h__4153__auto____$1;
}
});

cljs.core.ObjMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.ObjMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.transient$(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY,coll__$1));
});

cljs.core.ObjMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.ObjMap.EMPTY,self__.meta);
});

cljs.core.ObjMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__3720__auto__ = (function (){var G__9128 = k;
return goog.isString(G__9128);
})();
if(cljs.core.truth_(and__3720__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__3720__auto__;
}
})())){
var new_keys = cljs.core.aclone(self__.keys);
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
new_keys.splice(cljs.core.scan_array((1),k,new_keys),(1));

delete new_strobj[k];

return (new cljs.core.ObjMap(self__.meta,new_keys,new_strobj,(self__.update_count + (1)),null));
} else {
return coll__$1;
}
});

cljs.core.ObjMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var G__9129 = k;
return goog.isString(G__9129);
})())){
if(((self__.update_count > cljs.core.ObjMap.HASHMAP_THRESHOLD)) || ((self__.keys.length >= cljs.core.ObjMap.HASHMAP_THRESHOLD))){
return cljs.core.obj_map__GT_hash_map(coll__$1,k,v);
} else {
if(!((cljs.core.scan_array((1),k,self__.keys) == null))){
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
(new_strobj[k] = v);

return (new cljs.core.ObjMap(self__.meta,self__.keys,new_strobj,(self__.update_count + (1)),null));
} else {
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
var new_keys = cljs.core.aclone(self__.keys);
(new_strobj[k] = v);

new_keys.push(k);

return (new cljs.core.ObjMap(self__.meta,new_keys,new_strobj,(self__.update_count + (1)),null));
}
}
} else {
return cljs.core.obj_map__GT_hash_map(coll__$1,k,v);
}
});

cljs.core.ObjMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__3720__auto__ = (function (){var G__9131 = k;
return goog.isString(G__9131);
})();
if(cljs.core.truth_(and__3720__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__3720__auto__;
}
})())){
return true;
} else {
return false;
}
});

cljs.core.ObjMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.keys.length > (0))){
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(((function (coll__$1){
return (function (p1__9119_SHARP_){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[p1__9119_SHARP_,(self__.strobj[p1__9119_SHARP_])],null));
});})(coll__$1))
,self__.keys.sort(cljs.core.obj_map_compare_keys));
} else {
return null;
}
});

cljs.core.ObjMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ObjMap(meta__$1,self__.keys,self__.strobj,self__.update_count,self__.__hash));
});

cljs.core.ObjMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,coll__$1,entry);
}
});

cljs.core.ObjMap.prototype.call = (function() {
var G__9134 = null;
var G__9134__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__9134__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__9134 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__9134__2.call(this,self__,k);
case 3:
return G__9134__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__9134.cljs$core$IFn$_invoke$arity$2 = G__9134__2;
G__9134.cljs$core$IFn$_invoke$arity$3 = G__9134__3;
return G__9134;
})()
;

cljs.core.ObjMap.prototype.apply = (function (self__,args9120){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args9120)));
});

cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.ObjMap.cljs$lang$type = true;

cljs.core.ObjMap.cljs$lang$ctorStr = "cljs.core/ObjMap";

cljs.core.ObjMap.cljs$lang$ctorPrWriter = (function (this__4319__auto__,writer__4320__auto__,opt__4321__auto__){
return cljs.core._write(writer__4320__auto__,"cljs.core/ObjMap");
});

cljs.core.__GT_ObjMap = (function __GT_ObjMap(meta,keys,strobj,update_count,__hash){
return (new cljs.core.ObjMap(meta,keys,strobj,update_count,__hash));
});

cljs.core.ObjMap.EMPTY = (new cljs.core.ObjMap(null,[],(function (){var obj9136 = {};
return obj9136;
})(),(0),cljs.core.empty_unordered_hash));
cljs.core.ObjMap.HASHMAP_THRESHOLD = (8);
cljs.core.ObjMap.fromObject = (function (ks,obj){
return (new cljs.core.ObjMap(null,ks,obj,(0),null));
});

/**
* @constructor
*/
cljs.core.ES6EntriesIterator = (function (s){
this.s = s;
})
cljs.core.ES6EntriesIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var vec__9137 = cljs.core.first(self__.s);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9137,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9137,(1),null);
self__.s = cljs.core.next(self__.s);

return {"done": false, "value": [k,v]};
} else {
return {"done": true, "value": null};
}
});

cljs.core.ES6EntriesIterator.cljs$lang$type = true;

cljs.core.ES6EntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6EntriesIterator";

cljs.core.ES6EntriesIterator.cljs$lang$ctorPrWriter = (function (this__4319__auto__,writer__4320__auto__,opt__4321__auto__){
return cljs.core._write(writer__4320__auto__,"cljs.core/ES6EntriesIterator");
});

cljs.core.__GT_ES6EntriesIterator = (function __GT_ES6EntriesIterator(s){
return (new cljs.core.ES6EntriesIterator(s));
});

cljs.core.es6_entries_iterator = (function es6_entries_iterator(coll){
return (new cljs.core.ES6EntriesIterator(cljs.core.seq(coll)));
});

/**
* @constructor
*/
cljs.core.ES6SetEntriesIterator = (function (s){
this.s = s;
})
cljs.core.ES6SetEntriesIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var x = cljs.core.first(self__.s);
self__.s = cljs.core.next(self__.s);

return {"done": false, "value": [x,x]};
} else {
return {"done": true, "value": null};
}
});

cljs.core.ES6SetEntriesIterator.cljs$lang$type = true;

cljs.core.ES6SetEntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6SetEntriesIterator";

cljs.core.ES6SetEntriesIterator.cljs$lang$ctorPrWriter = (function (this__4319__auto__,writer__4320__auto__,opt__4321__auto__){
return cljs.core._write(writer__4320__auto__,"cljs.core/ES6SetEntriesIterator");
});

cljs.core.__GT_ES6SetEntriesIterator = (function __GT_ES6SetEntriesIterator(s){
return (new cljs.core.ES6SetEntriesIterator(s));
});

cljs.core.es6_set_entries_iterator = (function es6_set_entries_iterator(coll){
return (new cljs.core.ES6SetEntriesIterator(cljs.core.seq(coll)));
});
cljs.core.array_map_index_of_nil_QMARK_ = (function array_map_index_of_nil_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if(((arr[i]) == null)){
return i;
} else {
var G__9138 = (i + (2));
i = G__9138;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_keyword_QMARK_ = (function array_map_index_of_keyword_QMARK_(arr,m,k){
var len = arr.length;
var kstr = k.fqn;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((function (){var k_SINGLEQUOTE_ = (arr[i]);
return ((k_SINGLEQUOTE_ instanceof cljs.core.Keyword)) && ((kstr === k_SINGLEQUOTE_.fqn));
})()){
return i;
} else {
var G__9139 = (i + (2));
i = G__9139;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_symbol_QMARK_ = (function array_map_index_of_symbol_QMARK_(arr,m,k){
var len = arr.length;
var kstr = k.str;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((function (){var k_SINGLEQUOTE_ = (arr[i]);
return ((k_SINGLEQUOTE_ instanceof cljs.core.Symbol)) && ((kstr === k_SINGLEQUOTE_.str));
})()){
return i;
} else {
var G__9140 = (i + (2));
i = G__9140;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_identical_QMARK_ = (function array_map_index_of_identical_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((k === (arr[i]))){
return i;
} else {
var G__9141 = (i + (2));
i = G__9141;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_equiv_QMARK_ = (function array_map_index_of_equiv_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k,(arr[i]))){
return i;
} else {
var G__9142 = (i + (2));
i = G__9142;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of = (function array_map_index_of(m,k){
var arr = m.arr;
if((k instanceof cljs.core.Keyword)){
return cljs.core.array_map_index_of_keyword_QMARK_(arr,m,k);
} else {
if(cljs.core.truth_((function (){var or__3732__auto__ = (function (){var G__9146 = k;
return goog.isString(G__9146);
})();
if(cljs.core.truth_(or__3732__auto__)){
return or__3732__auto__;
} else {
return typeof k === 'number';
}
})())){
return cljs.core.array_map_index_of_identical_QMARK_(arr,m,k);
} else {
if((k instanceof cljs.core.Symbol)){
return cljs.core.array_map_index_of_symbol_QMARK_(arr,m,k);
} else {
if((k == null)){
return cljs.core.array_map_index_of_nil_QMARK_(arr,m,k);
} else {
return cljs.core.array_map_index_of_equiv_QMARK_(arr,m,k);

}
}
}
}
});
cljs.core.array_map_extend_kv = (function array_map_extend_kv(m,k,v){
var arr = m.arr;
var l = arr.length;
var narr = (new Array((l + (2))));
var i_9147 = (0);
while(true){
if((i_9147 < l)){
(narr[i_9147] = (arr[i_9147]));

var G__9148 = (i_9147 + (1));
i_9147 = G__9148;
continue;
} else {
}
break;
}

(narr[l] = k);

(narr[(l + (1))] = v);

return narr;
});

/**
* @constructor
*/
cljs.core.PersistentArrayMapSeq = (function (arr,i,_meta){
this.arr = arr;
this.i = i;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374990;
})
cljs.core.PersistentArrayMapSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentArrayMapSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i < (self__.arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(self__.arr,(self__.i + (2)),self__._meta));
} else {
return null;
}
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return ((self__.arr.length - self__.i) / (2));
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[self__.i]),(self__.arr[(self__.i + (1))])], null);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i < (self__.arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(self__.arr,(self__.i + (2)),self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentArrayMapSeq(self__.arr,self__.i,new_meta));
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentArrayMapSeq.cljs$lang$type = true;

cljs.core.PersistentArrayMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapSeq";

cljs.core.PersistentArrayMapSeq.cljs$lang$ctorPrWriter = (function (this__4319__auto__,writer__4320__auto__,opt__4321__auto__){
return cljs.core._write(writer__4320__auto__,"cljs.core/PersistentArrayMapSeq");
});

cljs.core.__GT_PersistentArrayMapSeq = (function __GT_PersistentArrayMapSeq(arr,i,_meta){
return (new cljs.core.PersistentArrayMapSeq(arr,i,_meta));
});

(cljs.core.PersistentArrayMapSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4710__auto__ = this;
return cljs.core.es6_iterator(this__4710__auto__);
}));
cljs.core.persistent_array_map_seq = (function persistent_array_map_seq(arr,i,_meta){
if((i <= (arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(arr,i,_meta));
} else {
return null;
}
});


/**
* @constructor
*/
cljs.core.PersistentArrayMapIterator = (function (arr,i,cnt){
this.arr = arr;
this.i = i;
this.cnt = cnt;
})
cljs.core.PersistentArrayMapIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.cnt);
});

cljs.core.PersistentArrayMapIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[self__.i]),(self__.arr[(self__.i + (1))])], null);
self__.i = (self__.i + (2));

return ret;
});

cljs.core.PersistentArrayMapIterator.cljs$lang$type = true;

cljs.core.PersistentArrayMapIterator.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapIterator";

cljs.core.PersistentArrayMapIterator.cljs$lang$ctorPrWriter = (function (this__4319__auto__,writer__4320__auto__,opt__4321__auto__){
return cljs.core._write(writer__4320__auto__,"cljs.core/PersistentArrayMapIterator");
});

cljs.core.__GT_PersistentArrayMapIterator = (function __GT_PersistentArrayMapIterator(arr,i,cnt){
return (new cljs.core.PersistentArrayMapIterator(arr,i,cnt));
});


/**
* @constructor
*/
cljs.core.PersistentArrayMap = (function (meta,cnt,arr,__hash){
this.meta = meta;
this.cnt = cnt;
this.arr = arr;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16647951;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentArrayMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentArrayMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentArrayMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__9150 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__9150) : cljs.core.keys.call(null,G__9150));
})());
});

cljs.core.PersistentArrayMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentArrayMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__9151 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__9151) : cljs.core.vals.call(null,G__9151));
})());
});

cljs.core.PersistentArrayMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentArrayMap.prototype.get = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentArrayMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__9152 = cljs.core.seq(coll);
var chunk__9153 = null;
var count__9154 = (0);
var i__9155 = (0);
while(true){
if((i__9155 < count__9154)){
var vec__9156 = chunk__9153.cljs$core$IIndexed$_nth$arity$2(null,i__9155);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9156,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9156,(1),null);
var G__9157_9170 = v;
var G__9158_9171 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9157_9170,G__9158_9171) : f.call(null,G__9157_9170,G__9158_9171));

var G__9172 = seq__9152;
var G__9173 = chunk__9153;
var G__9174 = count__9154;
var G__9175 = (i__9155 + (1));
seq__9152 = G__9172;
chunk__9153 = G__9173;
count__9154 = G__9174;
i__9155 = G__9175;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__9152);
if(temp__4126__auto__){
var seq__9152__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__9152__$1)){
var c__4519__auto__ = cljs.core.chunk_first(seq__9152__$1);
var G__9176 = cljs.core.chunk_rest(seq__9152__$1);
var G__9177 = c__4519__auto__;
var G__9178 = cljs.core.count(c__4519__auto__);
var G__9179 = (0);
seq__9152 = G__9176;
chunk__9153 = G__9177;
count__9154 = G__9178;
i__9155 = G__9179;
continue;
} else {
var vec__9159 = cljs.core.first(seq__9152__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9159,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9159,(1),null);
var G__9160_9180 = v;
var G__9161_9181 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9160_9180,G__9161_9181) : f.call(null,G__9160_9180,G__9161_9181));

var G__9182 = cljs.core.next(seq__9152__$1);
var G__9183 = null;
var G__9184 = (0);
var G__9185 = (0);
seq__9152 = G__9182;
chunk__9153 = G__9183;
count__9154 = G__9184;
i__9155 = G__9185;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx === (-1))){
return not_found;
} else {
return (self__.arr[(idx + (1))]);
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var len = self__.arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var init__$2 = (function (){var G__9162 = init__$1;
var G__9163 = (self__.arr[i]);
var G__9164 = (self__.arr[(i + (1))]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__9162,G__9163,G__9164) : f.call(null,G__9162,G__9163,G__9164));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__9165 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__9165) : cljs.core.deref.call(null,G__9165));
} else {
var G__9186 = (i + (2));
var G__9187 = init__$2;
i = G__9186;
init__$1 = G__9187;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$ = true;

cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return (new cljs.core.PersistentArrayMapIterator(self__.arr,(0),(self__.cnt * (2))));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentArrayMap(self__.meta,self__.cnt,self__.arr,self__.__hash));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4153__auto__ = self__.__hash;
if(!((h__4153__auto__ == null))){
return h__4153__auto__;
} else {
var h__4153__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__4153__auto____$1;

return h__4153__auto____$1;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
if((function (){var G__9166 = other;
if(G__9166){
var bit__4406__auto__ = (G__9166.cljs$lang$protocol_mask$partition0$ & (1024));
if((bit__4406__auto__) || (G__9166.cljs$core$IMap$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
var alen = self__.arr.length;
var other__$1 = other;
if((self__.cnt === other__$1.cljs$core$ICounted$_count$arity$1(null))){
var i = (0);
while(true){
if((i < alen)){
var v = other__$1.cljs$core$ILookup$_lookup$arity$3(null,(self__.arr[i]),cljs.core.lookup_sentinel);
if(!((v === cljs.core.lookup_sentinel))){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((self__.arr[(i + (1))]),v)){
var G__9188 = (i + (2));
i = G__9188;
continue;
} else {
return false;
}
} else {
return false;
}
} else {
return true;
}
break;
}
} else {
return false;
}
} else {
return cljs.core.equiv_map(coll__$1,other);
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientArrayMap((function (){var obj9168 = {};
return obj9168;
})(),self__.arr.length,cljs.core.aclone(self__.arr)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.PersistentArrayMap.EMPTY,self__.meta);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx >= (0))){
var len = self__.arr.length;
var new_len = (len - (2));
if((new_len === (0))){
return cljs.core._empty(coll__$1);
} else {
var new_arr = (new Array(new_len));
var s = (0);
var d = (0);
while(true){
if((s >= len)){
return (new cljs.core.PersistentArrayMap(self__.meta,(self__.cnt - (1)),new_arr,null));
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k,(self__.arr[s]))){
var G__9189 = (s + (2));
var G__9190 = d;
s = G__9189;
d = G__9190;
continue;
} else {
(new_arr[d] = (self__.arr[s]));

(new_arr[(d + (1))] = (self__.arr[(s + (1))]));

var G__9191 = (s + (2));
var G__9192 = (d + (2));
s = G__9191;
d = G__9192;
continue;

}
}
break;
}
}
} else {
return coll__$1;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx === (-1))){
if((self__.cnt < cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD)){
var arr__$1 = cljs.core.array_map_extend_kv(coll__$1,k,v);
return (new cljs.core.PersistentArrayMap(self__.meta,(self__.cnt + (1)),arr__$1,null));
} else {
return cljs.core._with_meta(cljs.core._assoc(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY,coll__$1),k,v),self__.meta);
}
} else {
if((v === (self__.arr[(idx + (1))]))){
return coll__$1;
} else {
var arr__$1 = (function (){var G__9169 = cljs.core.aclone(self__.arr);
(G__9169[(idx + (1))] = v);

return G__9169;
})();
return (new cljs.core.PersistentArrayMap(self__.meta,self__.cnt,arr__$1,null));

}
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return !((cljs.core.array_map_index_of(coll__$1,k) === (-1)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.persistent_array_map_seq(self__.arr,(0),null);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentArrayMap(meta__$1,self__.cnt,self__.arr,self__.__hash));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__9193 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__9194 = cljs.core.next(es);
ret = G__9193;
es = G__9194;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentArrayMap.prototype.call = (function() {
var G__9195 = null;
var G__9195__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__9195__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__9195 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__9195__2.call(this,self__,k);
case 3:
return G__9195__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__9195.cljs$core$IFn$_invoke$arity$2 = G__9195__2;
G__9195.cljs$core$IFn$_invoke$arity$3 = G__9195__3;
return G__9195;
})()
;

cljs.core.PersistentArrayMap.prototype.apply = (function (self__,args9149){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args9149)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentArrayMap.cljs$lang$type = true;

cljs.core.PersistentArrayMap.cljs$lang$ctorStr = "cljs.core/PersistentArrayMap";

cljs.core.PersistentArrayMap.cljs$lang$ctorPrWriter = (function (this__4319__auto__,writer__4320__auto__,opt__4321__auto__){
return cljs.core._write(writer__4320__auto__,"cljs.core/PersistentArrayMap");
});

cljs.core.__GT_PersistentArrayMap = (function __GT_PersistentArrayMap(meta,cnt,arr,__hash){
return (new cljs.core.PersistentArrayMap(meta,cnt,arr,__hash));
});

cljs.core.PersistentArrayMap.EMPTY = (new cljs.core.PersistentArrayMap(null,(0),[],cljs.core.empty_unordered_hash));
cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD = (8);
cljs.core.PersistentArrayMap.fromArray = (function (arr,no_clone,no_check){
var arr__$1 = ((no_clone)?arr:cljs.core.aclone(arr));
if(no_check){
var cnt = (arr__$1.length / (2));
return (new cljs.core.PersistentArrayMap(null,cnt,arr__$1,null));
} else {
var len = arr__$1.length;
var i = (0);
var ret = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
while(true){
if((i < len)){
var G__9196 = (i + (2));
var G__9197 = cljs.core._assoc_BANG_(ret,(arr__$1[i]),(arr__$1[(i + (1))]));
i = G__9196;
ret = G__9197;
continue;
} else {
return cljs.core._persistent_BANG_(ret);
}
break;
}
}
});
(cljs.core.PersistentArrayMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4710__auto__ = this;
return cljs.core.es6_iterator(this__4710__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientArrayMap = (function (editable_QMARK_,len,arr){
this.editable_QMARK_ = editable_QMARK_;
this.len = len;
this.arr = arr;
this.cljs$lang$protocol_mask$partition1$ = 56;
this.cljs$lang$protocol_mask$partition0$ = 258;
})
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = (function (tcoll,key){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,key);
if((idx >= (0))){
(self__.arr[idx] = (self__.arr[(self__.len - (2))]));

(self__.arr[(idx + (1))] = (self__.arr[(self__.len - (1))]));

var G__9198_9206 = self__.arr;
G__9198_9206.pop();

G__9198_9206.pop();


self__.len = (self__.len - (2));
} else {
}

return tcoll__$1;
} else {
throw (new Error("dissoc! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,key);
if((idx === (-1))){
if(((self__.len + (2)) <= ((2) * cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD))){
self__.len = (self__.len + (2));

self__.arr.push(key);

self__.arr.push(val);

return tcoll__$1;
} else {
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3((function (){var G__9199 = self__.len;
var G__9200 = self__.arr;
return (cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2 ? cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2(G__9199,G__9200) : cljs.core.array__GT_transient_hash_map.call(null,G__9199,G__9200));
})(),key,val);
}
} else {
if((val === (self__.arr[(idx + (1))]))){
return tcoll__$1;
} else {
(self__.arr[(idx + (1))] = val);

return tcoll__$1;
}
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
if((function (){var G__9201 = o;
if(G__9201){
var bit__4413__auto__ = (G__9201.cljs$lang$protocol_mask$partition0$ & (2048));
if((bit__4413__auto__) || (G__9201.cljs$core$IMapEntry$)){
return true;
} else {
if((!G__9201.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__9201);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__9201);
}
})()){
return cljs.core._assoc_BANG_(tcoll__$1,(function (){var G__9202 = o;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__9202) : cljs.core.key.call(null,G__9202));
})(),(function (){var G__9203 = o;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__9203) : cljs.core.val.call(null,G__9203));
})());
} else {
var es = cljs.core.seq(o);
var tcoll__$2 = tcoll__$1;
while(true){
var temp__4124__auto__ = cljs.core.first(es);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
var G__9207 = cljs.core.next(es);
var G__9208 = cljs.core._assoc_BANG_(tcoll__$2,(function (){var G__9204 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__9204) : cljs.core.key.call(null,G__9204));
})(),(function (){var G__9205 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__9205) : cljs.core.val.call(null,G__9205));
})());
es = G__9207;
tcoll__$2 = G__9208;
continue;
} else {
return tcoll__$2;
}
break;
}
}
} else {
throw (new Error("conj! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
self__.editable_QMARK_ = false;

return (new cljs.core.PersistentArrayMap(null,cljs.core.quot(self__.len,(2)),self__.arr,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,k){
var self__ = this;
var tcoll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(tcoll__$1,k,null);
});

cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,k,not_found){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,k);
if((idx === (-1))){
return not_found;
} else {
return (self__.arr[(idx + (1))]);
}
} else {
throw (new Error("lookup after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
return cljs.core.quot(self__.len,(2));
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientArrayMap.cljs$lang$type = true;

cljs.core.TransientArrayMap.cljs$lang$ctorStr = "cljs.core/TransientArrayMap";

cljs.core.TransientArrayMap.cljs$lang$ctorPrWriter = (function (this__4319__auto__,writer__4320__auto__,opt__4321__auto__){
return cljs.core._write(writer__4320__auto__,"cljs.core/TransientArrayMap");
});

cljs.core.__GT_TransientArrayMap = (function __GT_TransientArrayMap(editable_QMARK_,len,arr){
return (new cljs.core.TransientArrayMap(editable_QMARK_,len,arr));
});


cljs.core.array__GT_transient_hash_map = (function array__GT_transient_hash_map(len,arr){
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
var i = (0);
while(true){
if((i < len)){
var G__9209 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,(arr[i]),(arr[(i + (1))]));
var G__9210 = (i + (2));
out = G__9209;
i = G__9210;
continue;
} else {
return out;
}
break;
}
});

/**
* @constructor
*/
cljs.core.Box = (function (val){
this.val = val;
})

cljs.core.Box.cljs$lang$type = true;

cljs.core.Box.cljs$lang$ctorStr = "cljs.core/Box";

cljs.core.Box.cljs$lang$ctorPrWriter = (function (this__4319__auto__,writer__4320__auto__,opt__4321__auto__){
return cljs.core._write(writer__4320__auto__,"cljs.core/Box");
});

cljs.core.__GT_Box = (function __GT_Box(val){
return (new cljs.core.Box(val));
});






cljs.core.key_test = (function key_test(key,other){
if((key === other)){
return true;
} else {
if(cljs.core.keyword_identical_QMARK_(key,other)){
return true;
} else {
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(key,other);

}
}
});
cljs.core.mask = (function mask(hash,shift){
return ((hash >>> shift) & (31));
});
cljs.core.clone_and_set = (function() {
var clone_and_set = null;
var clone_and_set__3 = (function (arr,i,a){
var G__9213 = cljs.core.aclone(arr);
(G__9213[i] = a);

return G__9213;
});
var clone_and_set__5 = (function (arr,i,a,j,b){
var G__9214 = cljs.core.aclone(arr);
(G__9214[i] = a);

(G__9214[j] = b);

return G__9214;
});
clone_and_set = function(arr,i,a,j,b){
switch(arguments.length){
case 3:
return clone_and_set__3.call(this,arr,i,a);
case 5:
return clone_and_set__5.call(this,arr,i,a,j,b);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
clone_and_set.cljs$core$IFn$_invoke$arity$3 = clone_and_set__3;
clone_and_set.cljs$core$IFn$_invoke$arity$5 = clone_and_set__5;
return clone_and_set;
})()
;
cljs.core.remove_pair = (function remove_pair(arr,i){
var new_arr = (new Array((arr.length - (2))));
cljs.core.array_copy(arr,(0),new_arr,(0),((2) * i));

cljs.core.array_copy(arr,((2) * (i + (1))),new_arr,((2) * i),(new_arr.length - ((2) * i)));

return new_arr;
});
cljs.core.bitmap_indexed_node_index = (function bitmap_indexed_node_index(bitmap,bit){
return cljs.core.bit_count((bitmap & (bit - (1))));
});
cljs.core.bitpos = (function bitpos(hash,shift){
return ((1) << ((hash >>> shift) & 0x01f));
});
cljs.core.edit_and_set = (function() {
var edit_and_set = null;
var edit_and_set__4 = (function (inode,edit,i,a){
var editable = inode.ensure_editable(edit);
(editable.arr[i] = a);

return editable;
});
var edit_and_set__6 = (function (inode,edit,i,a,j,b){
var editable = inode.ensure_editable(edit);
(editable.arr[i] = a);

(editable.arr[j] = b);

return editable;
});
edit_and_set = function(inode,edit,i,a,j,b){
switch(arguments.length){
case 4:
return edit_and_set__4.call(this,inode,edit,i,a);
case 6:
return edit_and_set__6.call(this,inode,edit,i,a,j,b);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
edit_and_set.cljs$core$IFn$_invoke$arity$4 = edit_and_set__4;
edit_and_set.cljs$core$IFn$_invoke$arity$6 = edit_and_set__6;
return edit_and_set;
})()
;
cljs.core.inode_kv_reduce = (function inode_kv_reduce(arr,f,init){
var len = arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var init__$2 = (function (){var k = (arr[i]);
if(!((k == null))){
var G__9219 = init__$1;
var G__9220 = k;
var G__9221 = (arr[(i + (1))]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__9219,G__9220,G__9221) : f.call(null,G__9219,G__9220,G__9221));
} else {
var node = (arr[(i + (1))]);
if(!((node == null))){
return node.kv_reduce(f,init__$1);
} else {
return init__$1;
}
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__9222 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__9222) : cljs.core.deref.call(null,G__9222));
} else {
var G__9223 = (i + (2));
var G__9224 = init__$2;
i = G__9223;
init__$1 = G__9224;
continue;
}
} else {
return init__$1;
}
break;
}
});

/**
* @constructor
*/
cljs.core.BitmapIndexedNode = (function (edit,bitmap,arr){
this.edit = edit;
this.bitmap = bitmap;
this.arr = arr;
})
cljs.core.BitmapIndexedNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
var n = cljs.core.bit_count(self__.bitmap);
var new_arr = (new Array((((n < (0)))?(4):((2) * (n + (1))))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * n));

return (new cljs.core.BitmapIndexedNode(e,self__.bitmap,new_arr));
}
});

cljs.core.BitmapIndexedNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return inode;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_without_BANG_(edit__$1,(shift + (5)),hash,key,removed_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
if(!((n == null))){
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),n);
} else {
if((self__.bitmap === bit)){
return null;
} else {
return inode.edit_and_remove_pair(edit__$1,bit,idx);

}
}
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
(removed_leaf_QMARK_[(0)] = true);

return inode.edit_and_remove_pair(edit__$1,bit,idx);
} else {
return inode;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.edit_and_remove_pair = (function (e,bit,i){
var self__ = this;
var inode = this;
if((self__.bitmap === bit)){
return null;
} else {
var editable = inode.ensure_editable(e);
var earr = editable.arr;
var len = earr.length;
editable.bitmap = (bit ^ editable.bitmap);

cljs.core.array_copy(earr,((2) * (i + (1))),earr,((2) * i),(len - ((2) * (i + (1)))));

(earr[(len - (2))] = null);

(earr[(len - (1))] = null);

return editable;
}
});

cljs.core.BitmapIndexedNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__9225 = self__.arr;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(G__9225) : cljs.core.create_inode_seq.call(null,G__9225));
});

cljs.core.BitmapIndexedNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
return cljs.core.inode_kv_reduce(self__.arr,f,init);
});

cljs.core.BitmapIndexedNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return not_found;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
return val_or_node.inode_lookup((shift + (5)),hash,key,not_found);
} else {
if(cljs.core.key_test(key,key_or_nil)){
return val_or_node;
} else {
return not_found;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
if(((self__.bitmap & bit) === (0))){
var n = cljs.core.bit_count(self__.bitmap);
if((((2) * n) < self__.arr.length)){
var editable = inode.ensure_editable(edit__$1);
var earr = editable.arr;
added_leaf_QMARK_.val = true;

cljs.core.array_copy_downward(earr,((2) * idx),earr,((2) * (idx + (1))),((2) * (n - idx)));

(earr[((2) * idx)] = key);

(earr[(((2) * idx) + (1))] = val);

editable.bitmap = (editable.bitmap | bit);

return editable;
} else {
if((n >= (16))){
var nodes = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var jdx = ((hash >>> shift) & 0x01f);
(nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_));

var i_9239 = (0);
var j_9240 = (0);
while(true){
if((i_9239 < (32))){
if((((self__.bitmap >>> i_9239) & (1)) === (0))){
var G__9241 = (i_9239 + (1));
var G__9242 = j_9240;
i_9239 = G__9241;
j_9240 = G__9242;
continue;
} else {
(nodes[i_9239] = ((!(((self__.arr[j_9240]) == null)))?cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),cljs.core.hash((self__.arr[j_9240])),(self__.arr[j_9240]),(self__.arr[(j_9240 + (1))]),added_leaf_QMARK_):(self__.arr[(j_9240 + (1))])));

var G__9243 = (i_9239 + (1));
var G__9244 = (j_9240 + (2));
i_9239 = G__9243;
j_9240 = G__9244;
continue;
}
} else {
}
break;
}

return (new cljs.core.ArrayNode(edit__$1,(n + (1)),nodes));
} else {
var new_arr = (new Array(((2) * (n + (4)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * idx));

(new_arr[((2) * idx)] = key);

(new_arr[(((2) * idx) + (1))] = val);

cljs.core.array_copy(self__.arr,((2) * idx),new_arr,((2) * (idx + (1))),((2) * (n - idx)));

added_leaf_QMARK_.val = true;

var editable = inode.ensure_editable(edit__$1);
editable.arr = new_arr;

editable.bitmap = (editable.bitmap | bit);

return editable;

}
}
} else {
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),n);
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
if((val === val_or_node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),val);
}
} else {
added_leaf_QMARK_.val = true;

return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode,edit__$1,((2) * idx),null,(((2) * idx) + (1)),(function (){var G__9226 = edit__$1;
var G__9227 = (shift + (5));
var G__9228 = key_or_nil;
var G__9229 = val_or_node;
var G__9230 = hash;
var G__9231 = key;
var G__9232 = val;
return (cljs.core.create_node.cljs$core$IFn$_invoke$arity$7 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$7(G__9226,G__9227,G__9228,G__9229,G__9230,G__9231,G__9232) : cljs.core.create_node.call(null,G__9226,G__9227,G__9228,G__9229,G__9230,G__9231,G__9232));
})());

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
if(((self__.bitmap & bit) === (0))){
var n = cljs.core.bit_count(self__.bitmap);
if((n >= (16))){
var nodes = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var jdx = ((hash >>> shift) & 0x01f);
(nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_));

var i_9245 = (0);
var j_9246 = (0);
while(true){
if((i_9245 < (32))){
if((((self__.bitmap >>> i_9245) & (1)) === (0))){
var G__9247 = (i_9245 + (1));
var G__9248 = j_9246;
i_9245 = G__9247;
j_9246 = G__9248;
continue;
} else {
(nodes[i_9245] = ((!(((self__.arr[j_9246]) == null)))?cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),cljs.core.hash((self__.arr[j_9246])),(self__.arr[j_9246]),(self__.arr[(j_9246 + (1))]),added_leaf_QMARK_):(self__.arr[(j_9246 + (1))])));

var G__9249 = (i_9245 + (1));
var G__9250 = (j_9246 + (2));
i_9245 = G__9249;
j_9246 = G__9250;
continue;
}
} else {
}
break;
}

return (new cljs.core.ArrayNode(null,(n + (1)),nodes));
} else {
var new_arr = (new Array(((2) * (n + (1)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * idx));

(new_arr[((2) * idx)] = key);

(new_arr[(((2) * idx) + (1))] = val);

cljs.core.array_copy(self__.arr,((2) * idx),new_arr,((2) * (idx + (1))),((2) * (n - idx)));

added_leaf_QMARK_.val = true;

return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap | bit),new_arr));
}
} else {
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),n)));
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
if((val === val_or_node)){
return inode;
} else {
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),val)));
}
} else {
added_leaf_QMARK_.val = true;

return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$5(self__.arr,((2) * idx),null,(((2) * idx) + (1)),(function (){var G__9233 = (shift + (5));
var G__9234 = key_or_nil;
var G__9235 = val_or_node;
var G__9236 = hash;
var G__9237 = key;
var G__9238 = val;
return (cljs.core.create_node.cljs$core$IFn$_invoke$arity$6 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$6(G__9233,G__9234,G__9235,G__9236,G__9237,G__9238) : cljs.core.create_node.call(null,G__9233,G__9234,G__9235,G__9236,G__9237,G__9238));
})())));

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return not_found;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
return val_or_node.inode_find((shift + (5)),hash,key,not_found);
} else {
if(cljs.core.key_test(key,key_or_nil)){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [key_or_nil,val_or_node], null);
} else {
return not_found;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return inode;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_without((shift + (5)),hash,key);
if((n === val_or_node)){
return inode;
} else {
if(!((n == null))){
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),n)));
} else {
if((self__.bitmap === bit)){
return null;
} else {
return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap ^ bit),cljs.core.remove_pair(self__.arr,idx)));

}
}
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap ^ bit),cljs.core.remove_pair(self__.arr,idx)));
} else {
return inode;

}
}
}
});

cljs.core.BitmapIndexedNode.cljs$lang$type = true;

cljs.core.BitmapIndexedNode.cljs$lang$ctorStr = "cljs.core/BitmapIndexedNode";

cljs.core.BitmapIndexedNode.cljs$lang$ctorPrWriter = (function (this__4319__auto__,writer__4320__auto__,opt__4321__auto__){
return cljs.core._write(writer__4320__auto__,"cljs.core/BitmapIndexedNode");
});

cljs.core.__GT_BitmapIndexedNode = (function __GT_BitmapIndexedNode(edit,bitmap,arr){
return (new cljs.core.BitmapIndexedNode(edit,bitmap,arr));
});

cljs.core.BitmapIndexedNode.EMPTY = (new cljs.core.BitmapIndexedNode(null,(0),[]));
cljs.core.pack_array_node = (function pack_array_node(array_node,edit,idx){
var arr = array_node.arr;
var len = arr.length;
var new_arr = (new Array(((2) * (array_node.cnt - (1)))));
var i = (0);
var j = (1);
var bitmap = (0);
while(true){
if((i < len)){
if((!((i === idx))) && (!(((arr[i]) == null)))){
(new_arr[j] = (arr[i]));

var G__9251 = (i + (1));
var G__9252 = (j + (2));
var G__9253 = (bitmap | ((1) << i));
i = G__9251;
j = G__9252;
bitmap = G__9253;
continue;
} else {
var G__9254 = (i + (1));
var G__9255 = j;
var G__9256 = bitmap;
i = G__9254;
j = G__9255;
bitmap = G__9256;
continue;
}
} else {
return (new cljs.core.BitmapIndexedNode(edit,bitmap,new_arr));
}
break;
}
});

/**
* @constructor
*/
cljs.core.ArrayNode = (function (edit,cnt,arr){
this.edit = edit;
this.cnt = cnt;
this.arr = arr;
})
cljs.core.ArrayNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
return (new cljs.core.ArrayNode(e,self__.cnt,cljs.core.aclone(self__.arr)));
}
});

cljs.core.ArrayNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
return inode;
} else {
var n = node.inode_without_BANG_(edit__$1,(shift + (5)),hash,key,removed_leaf_QMARK_);
if((n === node)){
return inode;
} else {
if((n == null)){
if((self__.cnt <= (8))){
return cljs.core.pack_array_node(inode,edit__$1,idx);
} else {
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);
editable.cnt = (editable.cnt - (1));

return editable;
}
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);

}
}
}
});

cljs.core.ArrayNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__9257 = self__.arr;
return (cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1(G__9257) : cljs.core.create_array_node_seq.call(null,G__9257));
});

cljs.core.ArrayNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
var len = self__.arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var node = (self__.arr[i]);
if(!((node == null))){
var init__$2 = node.kv_reduce(f,init__$1);
if(cljs.core.reduced_QMARK_(init__$2)){
var G__9258 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__9258) : cljs.core.deref.call(null,G__9258));
} else {
var G__9259 = (i + (1));
var G__9260 = init__$2;
i = G__9259;
init__$1 = G__9260;
continue;
}
} else {
var G__9261 = (i + (1));
var G__9262 = init__$1;
i = G__9261;
init__$1 = G__9262;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.ArrayNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
return node.inode_lookup((shift + (5)),hash,key,not_found);
} else {
return not_found;
}
});

cljs.core.ArrayNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_));
editable.cnt = (editable.cnt + (1));

return editable;
} else {
var n = node.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);
}
}
});

cljs.core.ArrayNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
return (new cljs.core.ArrayNode(null,(self__.cnt + (1)),cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_))));
} else {
var n = node.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === node)){
return inode;
} else {
return (new cljs.core.ArrayNode(null,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));
}
}
});

cljs.core.ArrayNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
return node.inode_find((shift + (5)),hash,key,not_found);
} else {
return not_found;
}
});

cljs.core.ArrayNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
var n = node.inode_without((shift + (5)),hash,key);
if((n === node)){
return inode;
} else {
if((n == null)){
if((self__.cnt <= (8))){
return cljs.core.pack_array_node(inode,null,idx);
} else {
return (new cljs.core.ArrayNode(null,(self__.cnt - (1)),cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));
}
} else {
return (new cljs.core.ArrayNode(null,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));

}
}
} else {
return inode;
}
});

cljs.core.ArrayNode.cljs$lang$type = true;

cljs.core.ArrayNode.cljs$lang$ctorStr = "cljs.core/ArrayNode";

cljs.core.ArrayNode.cljs$lang$ctorPrWriter = (function (this__4319__auto__,writer__4320__auto__,opt__4321__auto__){
return cljs.core._write(writer__4320__auto__,"cljs.core/ArrayNode");
});

cljs.core.__GT_ArrayNode = (function __GT_ArrayNode(edit,cnt,arr){
return (new cljs.core.ArrayNode(edit,cnt,arr));
});

cljs.core.hash_collision_node_find_index = (function hash_collision_node_find_index(arr,cnt,key){
var lim = ((2) * cnt);
var i = (0);
while(true){
if((i < lim)){
if(cljs.core.key_test(key,(arr[i]))){
return i;
} else {
var G__9263 = (i + (2));
i = G__9263;
continue;
}
} else {
return (-1);
}
break;
}
});

/**
* @constructor
*/
cljs.core.HashCollisionNode = (function (edit,collision_hash,cnt,arr){
this.edit = edit;
this.collision_hash = collision_hash;
this.cnt = cnt;
this.arr = arr;
})
cljs.core.HashCollisionNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
var new_arr = (new Array(((2) * (self__.cnt + (1)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * self__.cnt));

return (new cljs.core.HashCollisionNode(e,self__.collision_hash,self__.cnt,new_arr));
}
});

cljs.core.HashCollisionNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
return inode;
} else {
(removed_leaf_QMARK_[(0)] = true);

if((self__.cnt === (1))){
return null;
} else {
var editable = inode.ensure_editable(edit__$1);
var earr = editable.arr;
(earr[idx] = (earr[(((2) * self__.cnt) - (2))]));

(earr[(idx + (1))] = (earr[(((2) * self__.cnt) - (1))]));

(earr[(((2) * self__.cnt) - (1))] = null);

(earr[(((2) * self__.cnt) - (2))] = null);

editable.cnt = (editable.cnt - (1));

return editable;
}
}
});

cljs.core.HashCollisionNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__9264 = self__.arr;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(G__9264) : cljs.core.create_inode_seq.call(null,G__9264));
});

cljs.core.HashCollisionNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
return cljs.core.inode_kv_reduce(self__.arr,f,init);
});

cljs.core.HashCollisionNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx < (0))){
return not_found;
} else {
if(cljs.core.key_test(key,(self__.arr[idx]))){
return (self__.arr[(idx + (1))]);
} else {
return not_found;

}
}
});

cljs.core.HashCollisionNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
if((hash === self__.collision_hash)){
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
if((self__.arr.length > ((2) * self__.cnt))){
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode,edit__$1,((2) * self__.cnt),key,(((2) * self__.cnt) + (1)),val);
added_leaf_QMARK_.val = true;

editable.cnt = (editable.cnt + (1));

return editable;
} else {
var len = self__.arr.length;
var new_arr = (new Array((len + (2))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),len);

(new_arr[len] = key);

(new_arr[(len + (1))] = val);

added_leaf_QMARK_.val = true;

return inode.ensure_editable_array(edit__$1,(self__.cnt + (1)),new_arr);
}
} else {
if(((self__.arr[(idx + (1))]) === val)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(idx + (1)),val);
}
}
} else {
return (new cljs.core.BitmapIndexedNode(edit__$1,(1 << ((self__.collision_hash >>> shift) & 0x01f)),[null,inode,null,null])).inode_assoc_BANG_(edit__$1,shift,hash,key,val,added_leaf_QMARK_);
}
});

cljs.core.HashCollisionNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
if((hash === self__.collision_hash)){
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
var len = ((2) * self__.cnt);
var new_arr = (new Array((len + (2))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),len);

(new_arr[len] = key);

(new_arr[(len + (1))] = val);

added_leaf_QMARK_.val = true;

return (new cljs.core.HashCollisionNode(null,self__.collision_hash,(self__.cnt + (1)),new_arr));
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((self__.arr[idx]),val)){
return inode;
} else {
return (new cljs.core.HashCollisionNode(null,self__.collision_hash,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(idx + (1)),val)));
}
}
} else {
return (new cljs.core.BitmapIndexedNode(null,(1 << ((self__.collision_hash >>> shift) & 0x01f)),[null,inode])).inode_assoc(shift,hash,key,val,added_leaf_QMARK_);
}
});

cljs.core.HashCollisionNode.prototype.ensure_editable_array = (function (e,count,array){
var self__ = this;
var inode = this;
if((e === self__.edit)){
self__.arr = array;

self__.cnt = count;

return inode;
} else {
return (new cljs.core.HashCollisionNode(self__.edit,self__.collision_hash,count,array));
}
});

cljs.core.HashCollisionNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx < (0))){
return not_found;
} else {
if(cljs.core.key_test(key,(self__.arr[idx]))){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[idx]),(self__.arr[(idx + (1))])], null);
} else {
return not_found;

}
}
});

cljs.core.HashCollisionNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
return inode;
} else {
if((self__.cnt === (1))){
return null;
} else {
return (new cljs.core.HashCollisionNode(null,self__.collision_hash,(self__.cnt - (1)),cljs.core.remove_pair(self__.arr,cljs.core.quot(idx,(2)))));

}
}
});

cljs.core.HashCollisionNode.cljs$lang$type = true;

cljs.core.HashCollisionNode.cljs$lang$ctorStr = "cljs.core/HashCollisionNode";

cljs.core.HashCollisionNode.cljs$lang$ctorPrWriter = (function (this__4319__auto__,writer__4320__auto__,opt__4321__auto__){
return cljs.core._write(writer__4320__auto__,"cljs.core/HashCollisionNode");
});

cljs.core.__GT_HashCollisionNode = (function __GT_HashCollisionNode(edit,collision_hash,cnt,arr){
return (new cljs.core.HashCollisionNode(edit,collision_hash,cnt,arr));
});

cljs.core.create_node = (function() {
var create_node = null;
var create_node__6 = (function (shift,key1,val1,key2hash,key2,val2){
var key1hash = cljs.core.hash(key1);
if((key1hash === key2hash)){
return (new cljs.core.HashCollisionNode(null,key1hash,(2),[key1,val1,key2,val2]));
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift,key1hash,key1,val1,added_leaf_QMARK_).inode_assoc(shift,key2hash,key2,val2,added_leaf_QMARK_);
}
});
var create_node__7 = (function (edit,shift,key1,val1,key2hash,key2,val2){
var key1hash = cljs.core.hash(key1);
if((key1hash === key2hash)){
return (new cljs.core.HashCollisionNode(null,key1hash,(2),[key1,val1,key2,val2]));
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit,shift,key1hash,key1,val1,added_leaf_QMARK_).inode_assoc_BANG_(edit,shift,key2hash,key2,val2,added_leaf_QMARK_);
}
});
create_node = function(edit,shift,key1,val1,key2hash,key2,val2){
switch(arguments.length){
case 6:
return create_node__6.call(this,edit,shift,key1,val1,key2hash,key2);
case 7:
return create_node__7.call(this,edit,shift,key1,val1,key2hash,key2,val2);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
create_node.cljs$core$IFn$_invoke$arity$6 = create_node__6;
create_node.cljs$core$IFn$_invoke$arity$7 = create_node__7;
return create_node;
})()
;

/**
* @constructor
*/
cljs.core.NodeSeq = (function (meta,nodes,i,s,__hash){
this.meta = meta;
this.nodes = nodes;
this.i = i;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374860;
})
cljs.core.NodeSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.NodeSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.NodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.NodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4153__auto__ = self__.__hash;
if(!((h__4153__auto__ == null))){
return h__4153__auto__;
} else {
var h__4153__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4153__auto____$1;

return h__4153__auto____$1;
}
});

cljs.core.NodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.NodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.s == null)){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.nodes[self__.i]),(self__.nodes[(self__.i + (1))])], null);
} else {
return cljs.core.first(self__.s);
}
});

cljs.core.NodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.s == null)){
var G__9265 = self__.nodes;
var G__9266 = (self__.i + (2));
var G__9267 = null;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__9265,G__9266,G__9267) : cljs.core.create_inode_seq.call(null,G__9265,G__9266,G__9267));
} else {
var G__9268 = self__.nodes;
var G__9269 = self__.i;
var G__9270 = cljs.core.next(self__.s);
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__9268,G__9269,G__9270) : cljs.core.create_inode_seq.call(null,G__9268,G__9269,G__9270));
}
});

cljs.core.NodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.NodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.NodeSeq(meta__$1,self__.nodes,self__.i,self__.s,self__.__hash));
});

cljs.core.NodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.NodeSeq.cljs$lang$type = true;

cljs.core.NodeSeq.cljs$lang$ctorStr = "cljs.core/NodeSeq";

cljs.core.NodeSeq.cljs$lang$ctorPrWriter = (function (this__4319__auto__,writer__4320__auto__,opt__4321__auto__){
return cljs.core._write(writer__4320__auto__,"cljs.core/NodeSeq");
});

cljs.core.__GT_NodeSeq = (function __GT_NodeSeq(meta,nodes,i,s,__hash){
return (new cljs.core.NodeSeq(meta,nodes,i,s,__hash));
});

(cljs.core.NodeSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4710__auto__ = this;
return cljs.core.es6_iterator(this__4710__auto__);
}));
cljs.core.create_inode_seq = (function() {
var create_inode_seq = null;
var create_inode_seq__1 = (function (nodes){
return create_inode_seq.cljs$core$IFn$_invoke$arity$3(nodes,(0),null);
});
var create_inode_seq__3 = (function (nodes,i,s){
if((s == null)){
var len = nodes.length;
var j = i;
while(true){
if((j < len)){
if(!(((nodes[j]) == null))){
return (new cljs.core.NodeSeq(null,nodes,j,null,null));
} else {
var temp__4124__auto__ = (nodes[(j + (1))]);
if(cljs.core.truth_(temp__4124__auto__)){
var node = temp__4124__auto__;
var temp__4124__auto____$1 = node.inode_seq();
if(cljs.core.truth_(temp__4124__auto____$1)){
var node_seq = temp__4124__auto____$1;
return (new cljs.core.NodeSeq(null,nodes,(j + (2)),node_seq,null));
} else {
var G__9274 = (j + (2));
j = G__9274;
continue;
}
} else {
var G__9275 = (j + (2));
j = G__9275;
continue;
}
}
} else {
return null;
}
break;
}
} else {
return (new cljs.core.NodeSeq(null,nodes,i,s,null));
}
});
create_inode_seq = function(nodes,i,s){
switch(arguments.length){
case 1:
return create_inode_seq__1.call(this,nodes);
case 3:
return create_inode_seq__3.call(this,nodes,i,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
create_inode_seq.cljs$core$IFn$_invoke$arity$1 = create_inode_seq__1;
create_inode_seq.cljs$core$IFn$_invoke$arity$3 = create_inode_seq__3;
return create_inode_seq;
})()
;

/**
* @constructor
*/
cljs.core.ArrayNodeSeq = (function (meta,nodes,i,s,__hash){
this.meta = meta;
this.nodes = nodes;
this.i = i;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374860;
})
cljs.core.ArrayNodeSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ArrayNodeSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4153__auto__ = self__.__hash;
if(!((h__4153__auto__ == null))){
return h__4153__auto__;
} else {
var h__4153__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4153__auto____$1;

return h__4153__auto____$1;
}
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.s);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var G__9276 = null;
var G__9277 = self__.nodes;
var G__9278 = self__.i;
var G__9279 = cljs.core.next(self__.s);
return (cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4(G__9276,G__9277,G__9278,G__9279) : cljs.core.create_array_node_seq.call(null,G__9276,G__9277,G__9278,G__9279));
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ArrayNodeSeq(meta__$1,self__.nodes,self__.i,self__.s,self__.__hash));
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ArrayNodeSeq.cljs$lang$type = true;

cljs.core.ArrayNodeSeq.cljs$lang$ctorStr = "cljs.core/ArrayNodeSeq";

cljs.core.ArrayNodeSeq.cljs$lang$ctorPrWriter = (function (this__4319__auto__,writer__4320__auto__,opt__4321__auto__){
return cljs.core._write(writer__4320__auto__,"cljs.core/ArrayNodeSeq");
});

cljs.core.__GT_ArrayNodeSeq = (function __GT_ArrayNodeSeq(meta,nodes,i,s,__hash){
return (new cljs.core.ArrayNodeSeq(meta,nodes,i,s,__hash));
});

(cljs.core.ArrayNodeSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4710__auto__ = this;
return cljs.core.es6_iterator(this__4710__auto__);
}));
cljs.core.create_array_node_seq = (function() {
var create_array_node_seq = null;
var create_array_node_seq__1 = (function (nodes){
return create_array_node_seq.cljs$core$IFn$_invoke$arity$4(null,nodes,(0),null);
});
var create_array_node_seq__4 = (function (meta,nodes,i,s){
if((s == null)){
var len = nodes.length;
var j = i;
while(true){
if((j < len)){
var temp__4124__auto__ = (nodes[j]);
if(cljs.core.truth_(temp__4124__auto__)){
var nj = temp__4124__auto__;
var temp__4124__auto____$1 = nj.inode_seq();
if(cljs.core.truth_(temp__4124__auto____$1)){
var ns = temp__4124__auto____$1;
return (new cljs.core.ArrayNodeSeq(meta,nodes,(j + (1)),ns,null));
} else {
var G__9284 = (j + (1));
j = G__9284;
continue;
}
} else {
var G__9285 = (j + (1));
j = G__9285;
continue;
}
} else {
return null;
}
break;
}
} else {
return (new cljs.core.ArrayNodeSeq(meta,nodes,i,s,null));
}
});
create_array_node_seq = function(meta,nodes,i,s){
switch(arguments.length){
case 1:
return create_array_node_seq__1.call(this,meta);
case 4:
return create_array_node_seq__4.call(this,meta,nodes,i,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
create_array_node_seq.cljs$core$IFn$_invoke$arity$1 = create_array_node_seq__1;
create_array_node_seq.cljs$core$IFn$_invoke$arity$4 = create_array_node_seq__4;
return create_array_node_seq;
})()
;

/**
* @constructor
*/
cljs.core.PersistentHashMap = (function (meta,cnt,root,has_nil_QMARK_,nil_val,__hash){
this.meta = meta;
this.cnt = cnt;
this.root = root;
this.has_nil_QMARK_ = has_nil_QMARK_;
this.nil_val = nil_val;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16123663;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentHashMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentHashMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentHashMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__9287 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__9287) : cljs.core.keys.call(null,G__9287));
})());
});

cljs.core.PersistentHashMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__9288 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__9288) : cljs.core.vals.call(null,G__9288));
})());
});

cljs.core.PersistentHashMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentHashMap.prototype.get = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentHashMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__9289 = cljs.core.seq(coll);
var chunk__9290 = null;
var count__9291 = (0);
var i__9292 = (0);
while(true){
if((i__9292 < count__9291)){
var vec__9293 = chunk__9290.cljs$core$IIndexed$_nth$arity$2(null,i__9292);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9293,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9293,(1),null);
var G__9294_9305 = v;
var G__9295_9306 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9294_9305,G__9295_9306) : f.call(null,G__9294_9305,G__9295_9306));

var G__9307 = seq__9289;
var G__9308 = chunk__9290;
var G__9309 = count__9291;
var G__9310 = (i__9292 + (1));
seq__9289 = G__9307;
chunk__9290 = G__9308;
count__9291 = G__9309;
i__9292 = G__9310;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__9289);
if(temp__4126__auto__){
var seq__9289__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__9289__$1)){
var c__4519__auto__ = cljs.core.chunk_first(seq__9289__$1);
var G__9311 = cljs.core.chunk_rest(seq__9289__$1);
var G__9312 = c__4519__auto__;
var G__9313 = cljs.core.count(c__4519__auto__);
var G__9314 = (0);
seq__9289 = G__9311;
chunk__9290 = G__9312;
count__9291 = G__9313;
i__9292 = G__9314;
continue;
} else {
var vec__9296 = cljs.core.first(seq__9289__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9296,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9296,(1),null);
var G__9297_9315 = v;
var G__9298_9316 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9297_9315,G__9298_9316) : f.call(null,G__9297_9315,G__9298_9316));

var G__9317 = cljs.core.next(seq__9289__$1);
var G__9318 = null;
var G__9319 = (0);
var G__9320 = (0);
seq__9289 = G__9317;
chunk__9290 = G__9318;
count__9291 = G__9319;
i__9292 = G__9320;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return not_found;
}
} else {
if((self__.root == null)){
return not_found;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k,not_found);

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var init__$1 = ((self__.has_nil_QMARK_)?(function (){var G__9299 = init;
var G__9300 = null;
var G__9301 = self__.nil_val;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__9299,G__9300,G__9301) : f.call(null,G__9299,G__9300,G__9301));
})():init);
if(cljs.core.reduced_QMARK_(init__$1)){
var G__9302 = init__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__9302) : cljs.core.deref.call(null,G__9302));
} else {
if(!((self__.root == null))){
return self__.root.kv_reduce(f,init__$1);
} else {
return init__$1;

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentHashMap(self__.meta,self__.cnt,self__.root,self__.has_nil_QMARK_,self__.nil_val,self__.__hash));
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentHashMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4153__auto__ = self__.__hash;
if(!((h__4153__auto__ == null))){
return h__4153__auto__;
} else {
var h__4153__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__4153__auto____$1;

return h__4153__auto____$1;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientHashMap((function (){var obj9304 = {};
return obj9304;
})(),self__.root,self__.cnt,self__.has_nil_QMARK_,self__.nil_val));
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.PersistentHashMap.EMPTY,self__.meta);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return (new cljs.core.PersistentHashMap(self__.meta,(self__.cnt - (1)),self__.root,false,null,null));
} else {
return coll__$1;
}
} else {
if((self__.root == null)){
return coll__$1;
} else {
var new_root = self__.root.inode_without((0),cljs.core.hash(k),k);
if((new_root === self__.root)){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,(self__.cnt - (1)),new_root,self__.has_nil_QMARK_,self__.nil_val,null));
}

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if((self__.has_nil_QMARK_) && ((v === self__.nil_val))){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,((self__.has_nil_QMARK_)?self__.cnt:(self__.cnt + (1))),self__.root,true,v,null));
}
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
var new_root = (((self__.root == null))?cljs.core.BitmapIndexedNode.EMPTY:self__.root).inode_assoc((0),cljs.core.hash(k),k,v,added_leaf_QMARK_);
if((new_root === self__.root)){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,((added_leaf_QMARK_.val)?(self__.cnt + (1)):self__.cnt),new_root,self__.has_nil_QMARK_,self__.nil_val,null));
}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if((k == null)){
return self__.has_nil_QMARK_;
} else {
if((self__.root == null)){
return false;
} else {
return !((self__.root.inode_lookup((0),cljs.core.hash(k),k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel));

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
var s = ((!((self__.root == null)))?self__.root.inode_seq():null);
if(self__.has_nil_QMARK_){
return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null,self__.nil_val], null),s);
} else {
return s;
}
} else {
return null;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashMap(meta__$1,self__.cnt,self__.root,self__.has_nil_QMARK_,self__.nil_val,self__.__hash));
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__9321 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__9322 = cljs.core.next(es);
ret = G__9321;
es = G__9322;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentHashMap.prototype.call = (function() {
var G__9323 = null;
var G__9323__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__9323__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__9323 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__9323__2.call(this,self__,k);
case 3:
return G__9323__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__9323.cljs$core$IFn$_invoke$arity$2 = G__9323__2;
G__9323.cljs$core$IFn$_invoke$arity$3 = G__9323__3;
return G__9323;
})()
;

cljs.core.PersistentHashMap.prototype.apply = (function (self__,args9286){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args9286)));
});

cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentHashMap.cljs$lang$type = true;

cljs.core.PersistentHashMap.cljs$lang$ctorStr = "cljs.core/PersistentHashMap";

cljs.core.PersistentHashMap.cljs$lang$ctorPrWriter = (function (this__4319__auto__,writer__4320__auto__,opt__4321__auto__){
return cljs.core._write(writer__4320__auto__,"cljs.core/PersistentHashMap");
});

cljs.core.__GT_PersistentHashMap = (function __GT_PersistentHashMap(meta,cnt,root,has_nil_QMARK_,nil_val,__hash){
return (new cljs.core.PersistentHashMap(meta,cnt,root,has_nil_QMARK_,nil_val,__hash));
});

cljs.core.PersistentHashMap.EMPTY = (new cljs.core.PersistentHashMap(null,(0),null,false,null,cljs.core.empty_unordered_hash));
cljs.core.PersistentHashMap.fromArrays = (function (ks,vs){
var len = ks.length;
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if((i < len)){
var G__9324 = (i + (1));
var G__9325 = out.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(null,(ks[i]),(vs[i]));
i = G__9324;
out = G__9325;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
});
(cljs.core.PersistentHashMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4710__auto__ = this;
return cljs.core.es6_iterator(this__4710__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientHashMap = (function (edit,root,count,has_nil_QMARK_,nil_val){
this.edit = edit;
this.root = root;
this.count = count;
this.has_nil_QMARK_ = has_nil_QMARK_;
this.nil_val = nil_val;
this.cljs$lang$protocol_mask$partition1$ = 56;
this.cljs$lang$protocol_mask$partition0$ = 258;
})
cljs.core.TransientHashMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = (function (tcoll,key){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.without_BANG_(key);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.assoc_BANG_(key,val);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,val){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.conj_BANG_(val);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.persistent_BANG_();
});

cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,k){
var self__ = this;
var tcoll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return null;
}
} else {
if((self__.root == null)){
return null;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k);
}
}
});

cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,k,not_found){
var self__ = this;
var tcoll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return not_found;
}
} else {
if((self__.root == null)){
return not_found;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k,not_found);
}
}
});

cljs.core.TransientHashMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(self__.edit){
return self__.count;
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.conj_BANG_ = (function (o){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((function (){var G__9326 = o;
if(G__9326){
var bit__4413__auto__ = (G__9326.cljs$lang$protocol_mask$partition0$ & (2048));
if((bit__4413__auto__) || (G__9326.cljs$core$IMapEntry$)){
return true;
} else {
if((!G__9326.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__9326);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__9326);
}
})()){
return tcoll.assoc_BANG_((function (){var G__9327 = o;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__9327) : cljs.core.key.call(null,G__9327));
})(),(function (){var G__9328 = o;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__9328) : cljs.core.val.call(null,G__9328));
})());
} else {
var es = cljs.core.seq(o);
var tcoll__$1 = tcoll;
while(true){
var temp__4124__auto__ = cljs.core.first(es);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
var G__9331 = cljs.core.next(es);
var G__9332 = tcoll__$1.assoc_BANG_((function (){var G__9329 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__9329) : cljs.core.key.call(null,G__9329));
})(),(function (){var G__9330 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__9330) : cljs.core.val.call(null,G__9330));
})());
es = G__9331;
tcoll__$1 = G__9332;
continue;
} else {
return tcoll__$1;
}
break;
}
}
} else {
throw (new Error("conj! after persistent"));
}
});

cljs.core.TransientHashMap.prototype.assoc_BANG_ = (function (k,v){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((k == null)){
if((self__.nil_val === v)){
} else {
self__.nil_val = v;
}

if(self__.has_nil_QMARK_){
} else {
self__.count = (self__.count + (1));

self__.has_nil_QMARK_ = true;
}

return tcoll;
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
var node = (((self__.root == null))?cljs.core.BitmapIndexedNode.EMPTY:self__.root).inode_assoc_BANG_(self__.edit,(0),cljs.core.hash(k),k,v,added_leaf_QMARK_);
if((node === self__.root)){
} else {
self__.root = node;
}

if(added_leaf_QMARK_.val){
self__.count = (self__.count + (1));
} else {
}

return tcoll;
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.without_BANG_ = (function (k){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((k == null)){
if(self__.has_nil_QMARK_){
self__.has_nil_QMARK_ = false;

self__.nil_val = null;

self__.count = (self__.count - (1));

return tcoll;
} else {
return tcoll;
}
} else {
if((self__.root == null)){
return tcoll;
} else {
var removed_leaf_QMARK_ = (new cljs.core.Box(false));
var node = self__.root.inode_without_BANG_(self__.edit,(0),cljs.core.hash(k),k,removed_leaf_QMARK_);
if((node === self__.root)){
} else {
self__.root = node;
}

if(cljs.core.truth_((removed_leaf_QMARK_[(0)]))){
self__.count = (self__.count - (1));
} else {
}

return tcoll;
}
}
} else {
throw (new Error("dissoc! after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.persistent_BANG_ = (function (){
var self__ = this;
var tcoll = this;
if(self__.edit){
self__.edit = null;

return (new cljs.core.PersistentHashMap(null,self__.count,self__.root,self__.has_nil_QMARK_,self__.nil_val,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientHashMap.cljs$lang$type = true;

cljs.core.TransientHashMap.cljs$lang$ctorStr = "cljs.core/TransientHashMap";

cljs.core.TransientHashMap.cljs$lang$ctorPrWriter = (function (this__4319__auto__,writer__4320__auto__,opt__4321__auto__){
return cljs.core._write(writer__4320__auto__,"cljs.core/TransientHashMap");
});

cljs.core.__GT_TransientHashMap = (function __GT_TransientHashMap(edit,root,count,has_nil_QMARK_,nil_val){
return (new cljs.core.TransientHashMap(edit,root,count,has_nil_QMARK_,nil_val));
});

cljs.core.tree_map_seq_push = (function tree_map_seq_push(node,stack,ascending_QMARK_){
var t = node;
var stack__$1 = stack;
while(true){
if(!((t == null))){
var G__9333 = ((ascending_QMARK_)?t.left:t.right);
var G__9334 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack__$1,t);
t = G__9333;
stack__$1 = G__9334;
continue;
} else {
return stack__$1;
}
break;
}
});

/**
* @constructor
*/
cljs.core.PersistentTreeMapSeq = (function (meta,stack,ascending_QMARK_,cnt,__hash){
this.meta = meta;
this.stack = stack;
this.ascending_QMARK_ = ascending_QMARK_;
this.cnt = cnt;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374862;
})
cljs.core.PersistentTreeMapSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeMapSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt < (0))){
return (cljs.core.count(cljs.core.next(coll__$1)) + (1));
} else {
return self__.cnt;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4153__auto__ = self__.__hash;
if(!((h__4153__auto__ == null))){
return h__4153__auto__;
} else {
var h__4153__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4153__auto____$1;

return h__4153__auto____$1;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.peek(self__.stack);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var t = cljs.core.first(self__.stack);
var next_stack = cljs.core.tree_map_seq_push(((self__.ascending_QMARK_)?t.right:t.left),cljs.core.next(self__.stack),self__.ascending_QMARK_);
if(!((next_stack == null))){
return (new cljs.core.PersistentTreeMapSeq(null,next_stack,self__.ascending_QMARK_,(self__.cnt - (1)),null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMapSeq(meta__$1,self__.stack,self__.ascending_QMARK_,self__.cnt,self__.__hash));
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentTreeMapSeq.cljs$lang$type = true;

cljs.core.PersistentTreeMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentTreeMapSeq";

cljs.core.PersistentTreeMapSeq.cljs$lang$ctorPrWriter = (function (this__4319__auto__,writer__4320__auto__,opt__4321__auto__){
return cljs.core._write(writer__4320__auto__,"cljs.core/PersistentTreeMapSeq");
});

cljs.core.__GT_PersistentTreeMapSeq = (function __GT_PersistentTreeMapSeq(meta,stack,ascending_QMARK_,cnt,__hash){
return (new cljs.core.PersistentTreeMapSeq(meta,stack,ascending_QMARK_,cnt,__hash));
});

(cljs.core.PersistentTreeMapSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4710__auto__ = this;
return cljs.core.es6_iterator(this__4710__auto__);
}));
cljs.core.create_tree_map_seq = (function create_tree_map_seq(tree,ascending_QMARK_,cnt){
return (new cljs.core.PersistentTreeMapSeq(null,cljs.core.tree_map_seq_push(tree,null,ascending_QMARK_),ascending_QMARK_,cnt,null));
});

cljs.core.balance_left = (function balance_left(key,val,ins,right){
if((ins instanceof cljs.core.RedNode)){
if((ins.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.key,ins.val,ins.left.blacken(),(new cljs.core.BlackNode(key,val,ins.right,right,null)),null));
} else {
if((ins.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.right.key,ins.right.val,(new cljs.core.BlackNode(ins.key,ins.val,ins.left,ins.right.left,null)),(new cljs.core.BlackNode(key,val,ins.right.right,right,null)),null));
} else {
return (new cljs.core.BlackNode(key,val,ins,right,null));

}
}
} else {
return (new cljs.core.BlackNode(key,val,ins,right,null));
}
});
cljs.core.balance_right = (function balance_right(key,val,left,ins){
if((ins instanceof cljs.core.RedNode)){
if((ins.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.key,ins.val,(new cljs.core.BlackNode(key,val,left,ins.left,null)),ins.right.blacken(),null));
} else {
if((ins.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.left.key,ins.left.val,(new cljs.core.BlackNode(key,val,left,ins.left.left,null)),(new cljs.core.BlackNode(ins.key,ins.val,ins.left.right,ins.right,null)),null));
} else {
return (new cljs.core.BlackNode(key,val,left,ins,null));

}
}
} else {
return (new cljs.core.BlackNode(key,val,left,ins,null));
}
});
cljs.core.balance_left_del = (function balance_left_del(key,val,del,right){
if((del instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(key,val,del.blacken(),right,null));
} else {
if((right instanceof cljs.core.BlackNode)){
return cljs.core.balance_right(key,val,del,right.redden());
} else {
if(((right instanceof cljs.core.RedNode)) && ((right.left instanceof cljs.core.BlackNode))){
return (new cljs.core.RedNode(right.left.key,right.left.val,(new cljs.core.BlackNode(key,val,del,right.left.left,null)),cljs.core.balance_right(right.key,right.val,right.left.right,right.right.redden()),null));
} else {
throw (new Error("red-black tree invariant violation"));

}
}
}
});
cljs.core.balance_right_del = (function balance_right_del(key,val,left,del){
if((del instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(key,val,left,del.blacken(),null));
} else {
if((left instanceof cljs.core.BlackNode)){
return cljs.core.balance_left(key,val,left.redden(),del);
} else {
if(((left instanceof cljs.core.RedNode)) && ((left.right instanceof cljs.core.BlackNode))){
return (new cljs.core.RedNode(left.right.key,left.right.val,cljs.core.balance_left(left.key,left.val,left.left.redden(),left.right.left),(new cljs.core.BlackNode(key,val,left.right.right,del,null)),null));
} else {
throw (new Error("red-black tree invariant violation"));

}
}
}
});
cljs.core.tree_map_kv_reduce = (function tree_map_kv_reduce(node,f,init){
var init__$1 = ((!((node.left == null)))?tree_map_kv_reduce(node.left,f,init):init);
if(cljs.core.reduced_QMARK_(init__$1)){
var G__9347 = init__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__9347) : cljs.core.deref.call(null,G__9347));
} else {
var init__$2 = (function (){var G__9348 = init__$1;
var G__9349 = node.key;
var G__9350 = node.val;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__9348,G__9349,G__9350) : f.call(null,G__9348,G__9349,G__9350));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__9351 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__9351) : cljs.core.deref.call(null,G__9351));
} else {
var init__$3 = ((!((node.right == null)))?tree_map_kv_reduce(node.right,f,init__$2):init__$2);
if(cljs.core.reduced_QMARK_(init__$3)){
var G__9352 = init__$3;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__9352) : cljs.core.deref.call(null,G__9352));
} else {
return init__$3;
}
}
}
});

/**
* @constructor
*/
cljs.core.BlackNode = (function (key,val,left,right,__hash){
this.key = key;
this.val = val;
this.left = left;
this.right = right;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32402207;
})
cljs.core.BlackNode.prototype.add_right = (function (ins){
var self__ = this;
var node = this;
return ins.balance_right(node);
});

cljs.core.BlackNode.prototype.redden = (function (){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,self__.right,null));
});

cljs.core.BlackNode.prototype.blacken = (function (){
var self__ = this;
var node = this;
return node;
});

cljs.core.BlackNode.prototype.add_left = (function (ins){
var self__ = this;
var node = this;
return ins.balance_left(node);
});

cljs.core.BlackNode.prototype.replace = (function (key__$1,val__$1,left__$1,right__$1){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(key__$1,val__$1,left__$1,right__$1,null));
});

cljs.core.BlackNode.prototype.balance_left = (function (parent){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(parent.key,parent.val,node,parent.right,null));
});

cljs.core.BlackNode.prototype.balance_right = (function (parent){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(parent.key,parent.val,parent.left,node,null));
});

cljs.core.BlackNode.prototype.remove_left = (function (del){
var self__ = this;
var node = this;
return cljs.core.balance_left_del(self__.key,self__.val,del,self__.right);
});

cljs.core.BlackNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var node = this;
return cljs.core.tree_map_kv_reduce(node,f,init);
});

cljs.core.BlackNode.prototype.remove_right = (function (del){
var self__ = this;
var node = this;
return cljs.core.balance_right_del(self__.key,self__.val,self__.left,del);
});

cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (node,k){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,null);
});

cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (node,k,not_found){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,not_found);
});

cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (node,n){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return null;

}
}
});

cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (node,n,not_found){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return not_found;

}
}
});

cljs.core.BlackNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (node,n,v){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null).cljs$core$IVector$_assoc_n$arity$3(null,n,v);
});

cljs.core.BlackNode.prototype.cljs$core$IMeta$_meta$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return null;
});

cljs.core.BlackNode.prototype.cljs$core$ICounted$_count$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return (2);
});

cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.key;
});

cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.BlackNode.prototype.cljs$core$IStack$_peek$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.BlackNode.prototype.cljs$core$IStack$_pop$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
});

cljs.core.BlackNode.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4153__auto__ = self__.__hash;
if(!((h__4153__auto__ == null))){
return h__4153__auto__;
} else {
var h__4153__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4153__auto____$1;

return h__4153__auto____$1;
}
});

cljs.core.BlackNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.BlackNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core.PersistentVector.EMPTY;
});

cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (node,f){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1,f);
});

cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (node,f,start){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1,f,start);
});

cljs.core.BlackNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (node,k,v){
var self__ = this;
var node__$1 = this;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),k,v);
});

cljs.core.BlackNode.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY,self__.val),self__.key);
});

cljs.core.BlackNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (node,meta){
var self__ = this;
var node__$1 = this;
return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),meta);
});

cljs.core.BlackNode.prototype.cljs$core$ICollection$_conj$arity$2 = (function (node,o){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val,o], null);
});

cljs.core.BlackNode.prototype.call = (function() {
var G__9354 = null;
var G__9354__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__9354__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__9354 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__9354__2.call(this,self__,k);
case 3:
return G__9354__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__9354.cljs$core$IFn$_invoke$arity$2 = G__9354__2;
G__9354.cljs$core$IFn$_invoke$arity$3 = G__9354__3;
return G__9354;
})()
;

cljs.core.BlackNode.prototype.apply = (function (self__,args9353){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args9353)));
});

cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.BlackNode.cljs$lang$type = true;

cljs.core.BlackNode.cljs$lang$ctorStr = "cljs.core/BlackNode";

cljs.core.BlackNode.cljs$lang$ctorPrWriter = (function (this__4319__auto__,writer__4320__auto__,opt__4321__auto__){
return cljs.core._write(writer__4320__auto__,"cljs.core/BlackNode");
});

cljs.core.__GT_BlackNode = (function __GT_BlackNode(key,val,left,right,__hash){
return (new cljs.core.BlackNode(key,val,left,right,__hash));
});

(cljs.core.BlackNode.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4710__auto__ = this;
return cljs.core.es6_iterator(this__4710__auto__);
}));

/**
* @constructor
*/
cljs.core.RedNode = (function (key,val,left,right,__hash){
this.key = key;
this.val = val;
this.left = left;
this.right = right;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32402207;
})
cljs.core.RedNode.prototype.add_right = (function (ins){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,ins,null));
});

cljs.core.RedNode.prototype.redden = (function (){
var self__ = this;
var node = this;
throw (new Error("red-black tree invariant violation"));
});

cljs.core.RedNode.prototype.blacken = (function (){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(self__.key,self__.val,self__.left,self__.right,null));
});

cljs.core.RedNode.prototype.add_left = (function (ins){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,ins,self__.right,null));
});

cljs.core.RedNode.prototype.replace = (function (key__$1,val__$1,left__$1,right__$1){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(key__$1,val__$1,left__$1,right__$1,null));
});

cljs.core.RedNode.prototype.balance_left = (function (parent){
var self__ = this;
var node = this;
if((self__.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.key,self__.val,self__.left.blacken(),(new cljs.core.BlackNode(parent.key,parent.val,self__.right,parent.right,null)),null));
} else {
if((self__.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.right.key,self__.right.val,(new cljs.core.BlackNode(self__.key,self__.val,self__.left,self__.right.left,null)),(new cljs.core.BlackNode(parent.key,parent.val,self__.right.right,parent.right,null)),null));
} else {
return (new cljs.core.BlackNode(parent.key,parent.val,node,parent.right,null));

}
}
});

cljs.core.RedNode.prototype.balance_right = (function (parent){
var self__ = this;
var node = this;
if((self__.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.key,self__.val,(new cljs.core.BlackNode(parent.key,parent.val,parent.left,self__.left,null)),self__.right.blacken(),null));
} else {
if((self__.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.left.key,self__.left.val,(new cljs.core.BlackNode(parent.key,parent.val,parent.left,self__.left.left,null)),(new cljs.core.BlackNode(self__.key,self__.val,self__.left.right,self__.right,null)),null));
} else {
return (new cljs.core.BlackNode(parent.key,parent.val,parent.left,node,null));

}
}
});

cljs.core.RedNode.prototype.remove_left = (function (del){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,del,self__.right,null));
});

cljs.core.RedNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var node = this;
return cljs.core.tree_map_kv_reduce(node,f,init);
});

cljs.core.RedNode.prototype.remove_right = (function (del){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,del,null));
});

cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (node,k){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,null);
});

cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (node,k,not_found){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,not_found);
});

cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (node,n){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return null;

}
}
});

cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (node,n,not_found){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return not_found;

}
}
});

cljs.core.RedNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (node,n,v){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null).cljs$core$IVector$_assoc_n$arity$3(null,n,v);
});

cljs.core.RedNode.prototype.cljs$core$IMeta$_meta$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return null;
});

cljs.core.RedNode.prototype.cljs$core$ICounted$_count$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return (2);
});

cljs.core.RedNode.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.key;
});

cljs.core.RedNode.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.RedNode.prototype.cljs$core$IStack$_peek$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.RedNode.prototype.cljs$core$IStack$_pop$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
});

cljs.core.RedNode.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4153__auto__ = self__.__hash;
if(!((h__4153__auto__ == null))){
return h__4153__auto__;
} else {
var h__4153__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4153__auto____$1;

return h__4153__auto____$1;
}
});

cljs.core.RedNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.RedNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core.PersistentVector.EMPTY;
});

cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (node,f){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1,f);
});

cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (node,f,start){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1,f,start);
});

cljs.core.RedNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (node,k,v){
var self__ = this;
var node__$1 = this;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),k,v);
});

cljs.core.RedNode.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY,self__.val),self__.key);
});

cljs.core.RedNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (node,meta){
var self__ = this;
var node__$1 = this;
return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),meta);
});

cljs.core.RedNode.prototype.cljs$core$ICollection$_conj$arity$2 = (function (node,o){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val,o], null);
});

cljs.core.RedNode.prototype.call = (function() {
var G__9356 = null;
var G__9356__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__9356__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__9356 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__9356__2.call(this,self__,k);
case 3:
return G__9356__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__9356.cljs$core$IFn$_invoke$arity$2 = G__9356__2;
G__9356.cljs$core$IFn$_invoke$arity$3 = G__9356__3;
return G__9356;
})()
;

cljs.core.RedNode.prototype.apply = (function (self__,args9355){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args9355)));
});

cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.RedNode.cljs$lang$type = true;

cljs.core.RedNode.cljs$lang$ctorStr = "cljs.core/RedNode";

cljs.core.RedNode.cljs$lang$ctorPrWriter = (function (this__4319__auto__,writer__4320__auto__,opt__4321__auto__){
return cljs.core._write(writer__4320__auto__,"cljs.core/RedNode");
});

cljs.core.__GT_RedNode = (function __GT_RedNode(key,val,left,right,__hash){
return (new cljs.core.RedNode(key,val,left,right,__hash));
});

(cljs.core.RedNode.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4710__auto__ = this;
return cljs.core.es6_iterator(this__4710__auto__);
}));
cljs.core.tree_map_add = (function tree_map_add(comp,tree,k,v,found){
if((tree == null)){
return (new cljs.core.RedNode(k,v,null,null,null));
} else {
var c = (function (){var G__9369 = k;
var G__9370 = tree.key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__9369,G__9370) : comp.call(null,G__9369,G__9370));
})();
if((c === (0))){
(found[(0)] = tree);

return null;
} else {
if((c < (0))){
var ins = tree_map_add(comp,tree.left,k,v,found);
if(!((ins == null))){
return tree.add_left(ins);
} else {
return null;
}
} else {
var ins = tree_map_add(comp,tree.right,k,v,found);
if(!((ins == null))){
return tree.add_right(ins);
} else {
return null;
}

}
}
}
});
cljs.core.tree_map_append = (function tree_map_append(left,right){
if((left == null)){
return right;
} else {
if((right == null)){
return left;
} else {
if((left instanceof cljs.core.RedNode)){
if((right instanceof cljs.core.RedNode)){
var app = tree_map_append(left.right,right.left);
if((app instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(app.key,app.val,(new cljs.core.RedNode(left.key,left.val,left.left,app.left,null)),(new cljs.core.RedNode(right.key,right.val,app.right,right.right,null)),null));
} else {
return (new cljs.core.RedNode(left.key,left.val,left.left,(new cljs.core.RedNode(right.key,right.val,app,right.right,null)),null));
}
} else {
return (new cljs.core.RedNode(left.key,left.val,left.left,tree_map_append(left.right,right),null));
}
} else {
if((right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(right.key,right.val,tree_map_append(left,right.left),right.right,null));
} else {
var app = tree_map_append(left.right,right.left);
if((app instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(app.key,app.val,(new cljs.core.BlackNode(left.key,left.val,left.left,app.left,null)),(new cljs.core.BlackNode(right.key,right.val,app.right,right.right,null)),null));
} else {
return cljs.core.balance_left_del(left.key,left.val,left.left,(new cljs.core.BlackNode(right.key,right.val,app,right.right,null)));
}

}
}
}
}
});
cljs.core.tree_map_remove = (function tree_map_remove(comp,tree,k,found){
if(!((tree == null))){
var c = (function (){var G__9389 = k;
var G__9390 = tree.key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__9389,G__9390) : comp.call(null,G__9389,G__9390));
})();
if((c === (0))){
(found[(0)] = tree);

return cljs.core.tree_map_append(tree.left,tree.right);
} else {
if((c < (0))){
var del = tree_map_remove(comp,tree.left,k,found);
if((!((del == null))) || (!(((found[(0)]) == null)))){
if((tree.left instanceof cljs.core.BlackNode)){
return cljs.core.balance_left_del(tree.key,tree.val,del,tree.right);
} else {
return (new cljs.core.RedNode(tree.key,tree.val,del,tree.right,null));
}
} else {
return null;
}
} else {
var del = tree_map_remove(comp,tree.right,k,found);
if((!((del == null))) || (!(((found[(0)]) == null)))){
if((tree.right instanceof cljs.core.BlackNode)){
return cljs.core.balance_right_del(tree.key,tree.val,tree.left,del);
} else {
return (new cljs.core.RedNode(tree.key,tree.val,tree.left,del,null));
}
} else {
return null;
}

}
}
} else {
return null;
}
});
cljs.core.tree_map_replace = (function tree_map_replace(comp,tree,k,v){
var tk = tree.key;
var c = (function (){var G__9401 = k;
var G__9402 = tk;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__9401,G__9402) : comp.call(null,G__9401,G__9402));
})();
if((c === (0))){
return tree.replace(tk,v,tree.left,tree.right);
} else {
if((c < (0))){
return tree.replace(tk,tree.val,tree_map_replace(comp,tree.left,k,v),tree.right);
} else {
return tree.replace(tk,tree.val,tree.left,tree_map_replace(comp,tree.right,k,v));

}
}
});

/**
* @constructor
*/
cljs.core.PersistentTreeMap = (function (comp,tree,cnt,meta,__hash){
this.comp = comp;
this.tree = tree;
this.cnt = cnt;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 418776847;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentTreeMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__9404 = cljs.core.seq(coll);
var chunk__9405 = null;
var count__9406 = (0);
var i__9407 = (0);
while(true){
if((i__9407 < count__9406)){
var vec__9408 = chunk__9405.cljs$core$IIndexed$_nth$arity$2(null,i__9407);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9408,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9408,(1),null);
var G__9409_9421 = v;
var G__9410_9422 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9409_9421,G__9410_9422) : f.call(null,G__9409_9421,G__9410_9422));

var G__9423 = seq__9404;
var G__9424 = chunk__9405;
var G__9425 = count__9406;
var G__9426 = (i__9407 + (1));
seq__9404 = G__9423;
chunk__9405 = G__9424;
count__9406 = G__9425;
i__9407 = G__9426;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__9404);
if(temp__4126__auto__){
var seq__9404__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__9404__$1)){
var c__4519__auto__ = cljs.core.chunk_first(seq__9404__$1);
var G__9427 = cljs.core.chunk_rest(seq__9404__$1);
var G__9428 = c__4519__auto__;
var G__9429 = cljs.core.count(c__4519__auto__);
var G__9430 = (0);
seq__9404 = G__9427;
chunk__9405 = G__9428;
count__9406 = G__9429;
i__9407 = G__9430;
continue;
} else {
var vec__9411 = cljs.core.first(seq__9404__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9411,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9411,(1),null);
var G__9412_9431 = v;
var G__9413_9432 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9412_9431,G__9413_9432) : f.call(null,G__9412_9431,G__9413_9432));

var G__9433 = cljs.core.next(seq__9404__$1);
var G__9434 = null;
var G__9435 = (0);
var G__9436 = (0);
seq__9404 = G__9433;
chunk__9405 = G__9434;
count__9406 = G__9435;
i__9407 = G__9436;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentTreeMap.prototype.get = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentTreeMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__9414 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__9414) : cljs.core.keys.call(null,G__9414));
})());
});

cljs.core.PersistentTreeMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__9415 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__9415) : cljs.core.vals.call(null,G__9415));
})());
});

cljs.core.PersistentTreeMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeMap.prototype.entry_at = (function (k){
var self__ = this;
var coll = this;
var t = self__.tree;
while(true){
if(!((t == null))){
var c = (function (){var G__9416 = k;
var G__9417 = t.key;
return (self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__9416,G__9417) : self__.comp.call(null,G__9416,G__9417));
})();
if((c === (0))){
return t;
} else {
if((c < (0))){
var G__9437 = t.left;
t = G__9437;
continue;
} else {
var G__9438 = t.right;
t = G__9438;
continue;

}
}
} else {
return null;
}
break;
}
});

cljs.core.PersistentTreeMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
var n = coll__$1.entry_at(k);
if(!((n == null))){
return n.val;
} else {
return not_found;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
if(!((self__.tree == null))){
return cljs.core.tree_map_kv_reduce(self__.tree,f,init);
} else {
return init;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,self__.tree,self__.cnt,self__.meta,self__.__hash));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,false,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4153__auto__ = self__.__hash;
if(!((h__4153__auto__ == null))){
return h__4153__auto__;
} else {
var h__4153__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__4153__auto____$1;

return h__4153__auto____$1;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,null,(0),self__.meta,(0)));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
var found = [null];
var t = cljs.core.tree_map_remove(self__.comp,self__.tree,k,found);
if((t == null)){
if((cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found,(0)) == null)){
return coll__$1;
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,null,(0),self__.meta,null));
}
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,t.blacken(),(self__.cnt - (1)),self__.meta,null));
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
var found = [null];
var t = cljs.core.tree_map_add(self__.comp,self__.tree,k,v,found);
if((t == null)){
var found_node = cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found,(0));
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(v,found_node.val)){
return coll__$1;
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,cljs.core.tree_map_replace(self__.comp,self__.tree,k,v),self__.cnt,self__.meta,null));
}
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,t.blacken(),(self__.cnt + (1)),self__.meta,null));
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return !((coll__$1.entry_at(k) == null));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,true,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,self__.tree,self__.cnt,meta__$1,self__.__hash));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__9439 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__9440 = cljs.core.next(es);
ret = G__9439;
es = G__9440;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentTreeMap.prototype.call = (function() {
var G__9441 = null;
var G__9441__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__9441__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__9441 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__9441__2.call(this,self__,k);
case 3:
return G__9441__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__9441.cljs$core$IFn$_invoke$arity$2 = G__9441__2;
G__9441.cljs$core$IFn$_invoke$arity$3 = G__9441__3;
return G__9441;
})()
;

cljs.core.PersistentTreeMap.prototype.apply = (function (self__,args9403){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args9403)));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = (function (coll,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,ascending_QMARK_,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = (function (coll,k,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
var stack = null;
var t = self__.tree;
while(true){
if(!((t == null))){
var c = (function (){var G__9418 = k;
var G__9419 = t.key;
return (self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__9418,G__9419) : self__.comp.call(null,G__9418,G__9419));
})();
if((c === (0))){
return (new cljs.core.PersistentTreeMapSeq(null,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t),ascending_QMARK_,(-1),null));
} else {
if(cljs.core.truth_(ascending_QMARK_)){
if((c < (0))){
var G__9442 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t);
var G__9443 = t.left;
stack = G__9442;
t = G__9443;
continue;
} else {
var G__9444 = stack;
var G__9445 = t.right;
stack = G__9444;
t = G__9445;
continue;
}
} else {
if((c > (0))){
var G__9446 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t);
var G__9447 = t.right;
stack = G__9446;
t = G__9447;
continue;
} else {
var G__9448 = stack;
var G__9449 = t.left;
stack = G__9448;
t = G__9449;
continue;
}

}
}
} else {
if((stack == null)){
return null;
} else {
return (new cljs.core.PersistentTreeMapSeq(null,stack,ascending_QMARK_,(-1),null));
}
}
break;
}
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_entry_key$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
var G__9420 = entry;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__9420) : cljs.core.key.call(null,G__9420));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_comparator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.comp;
});

cljs.core.PersistentTreeMap.cljs$lang$type = true;

cljs.core.PersistentTreeMap.cljs$lang$ctorStr = "cljs.core/PersistentTreeMap";

cljs.core.PersistentTreeMap.cljs$lang$ctorPrWriter = (function (this__4319__auto__,writer__4320__auto__,opt__4321__auto__){
return cljs.core._write(writer__4320__auto__,"cljs.core/PersistentTreeMap");
});

cljs.core.__GT_PersistentTreeMap = (function __GT_PersistentTreeMap(comp,tree,cnt,meta,__hash){
return (new cljs.core.PersistentTreeMap(comp,tree,cnt,meta,__hash));
});

cljs.core.PersistentTreeMap.EMPTY = (new cljs.core.PersistentTreeMap(cljs.core.compare,null,(0),null,cljs.core.empty_unordered_hash));
(cljs.core.PersistentTreeMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4710__auto__ = this;
return cljs.core.es6_iterator(this__4710__auto__);
}));
/**
* keyval => key val
* Returns a new hash map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.hash_map = (function() { 
var hash_map__delegate = function (keyvals){
var in$ = cljs.core.seq(keyvals);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if(in$){
var G__9450 = cljs.core.nnext(in$);
var G__9451 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__9450;
out = G__9451;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
};
var hash_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__9452__i = 0, G__9452__a = new Array(arguments.length -  0);
while (G__9452__i < G__9452__a.length) {G__9452__a[G__9452__i] = arguments[G__9452__i + 0]; ++G__9452__i;}
  keyvals = new cljs.core.IndexedSeq(G__9452__a,0);
} 
return hash_map__delegate.call(this,keyvals);};
hash_map.cljs$lang$maxFixedArity = 0;
hash_map.cljs$lang$applyTo = (function (arglist__9453){
var keyvals = cljs.core.seq(arglist__9453);
return hash_map__delegate(keyvals);
});
hash_map.cljs$core$IFn$_invoke$arity$variadic = hash_map__delegate;
return hash_map;
})()
;
/**
* keyval => key val
* Returns a new array map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.array_map = (function() { 
var array_map__delegate = function (keyvals){
return cljs.core.PersistentArrayMap.fromArray(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array,keyvals),true,false);
};
var array_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__9454__i = 0, G__9454__a = new Array(arguments.length -  0);
while (G__9454__i < G__9454__a.length) {G__9454__a[G__9454__i] = arguments[G__9454__i + 0]; ++G__9454__i;}
  keyvals = new cljs.core.IndexedSeq(G__9454__a,0);
} 
return array_map__delegate.call(this,keyvals);};
array_map.cljs$lang$maxFixedArity = 0;
array_map.cljs$lang$applyTo = (function (arglist__9455){
var keyvals = cljs.core.seq(arglist__9455);
return array_map__delegate(keyvals);
});
array_map.cljs$core$IFn$_invoke$arity$variadic = array_map__delegate;
return array_map;
})()
;
/**
* keyval => key val
* Returns a new object map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.obj_map = (function() { 
var obj_map__delegate = function (keyvals){
var ks = [];
var obj = (function (){var obj9459 = {};
return obj9459;
})();
var kvs = cljs.core.seq(keyvals);
while(true){
if(kvs){
ks.push(cljs.core.first(kvs));

(obj[cljs.core.first(kvs)] = cljs.core.second(kvs));

var G__9460 = cljs.core.nnext(kvs);
kvs = G__9460;
continue;
} else {
return cljs.core.ObjMap.fromObject(ks,obj);
}
break;
}
};
var obj_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__9461__i = 0, G__9461__a = new Array(arguments.length -  0);
while (G__9461__i < G__9461__a.length) {G__9461__a[G__9461__i] = arguments[G__9461__i + 0]; ++G__9461__i;}
  keyvals = new cljs.core.IndexedSeq(G__9461__a,0);
} 
return obj_map__delegate.call(this,keyvals);};
obj_map.cljs$lang$maxFixedArity = 0;
obj_map.cljs$lang$applyTo = (function (arglist__9462){
var keyvals = cljs.core.seq(arglist__9462);
return obj_map__delegate(keyvals);
});
obj_map.cljs$core$IFn$_invoke$arity$variadic = obj_map__delegate;
return obj_map;
})()
;
/**
* keyval => key val
* Returns a new sorted map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.sorted_map = (function() { 
var sorted_map__delegate = function (keyvals){
var in$ = cljs.core.seq(keyvals);
var out = cljs.core.PersistentTreeMap.EMPTY;
while(true){
if(in$){
var G__9463 = cljs.core.nnext(in$);
var G__9464 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__9463;
out = G__9464;
continue;
} else {
return out;
}
break;
}
};
var sorted_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__9465__i = 0, G__9465__a = new Array(arguments.length -  0);
while (G__9465__i < G__9465__a.length) {G__9465__a[G__9465__i] = arguments[G__9465__i + 0]; ++G__9465__i;}
  keyvals = new cljs.core.IndexedSeq(G__9465__a,0);
} 
return sorted_map__delegate.call(this,keyvals);};
sorted_map.cljs$lang$maxFixedArity = 0;
sorted_map.cljs$lang$applyTo = (function (arglist__9466){
var keyvals = cljs.core.seq(arglist__9466);
return sorted_map__delegate(keyvals);
});
sorted_map.cljs$core$IFn$_invoke$arity$variadic = sorted_map__delegate;
return sorted_map;
})()
;
/**
* keyval => key val
* Returns a new sorted map with supplied mappings, using the supplied comparator.
* @param {...*} var_args
*/
cljs.core.sorted_map_by = (function() { 
var sorted_map_by__delegate = function (comparator,keyvals){
var in$ = cljs.core.seq(keyvals);
var out = (new cljs.core.PersistentTreeMap(cljs.core.fn__GT_comparator(comparator),null,(0),null,(0)));
while(true){
if(in$){
var G__9467 = cljs.core.nnext(in$);
var G__9468 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__9467;
out = G__9468;
continue;
} else {
return out;
}
break;
}
};
var sorted_map_by = function (comparator,var_args){
var keyvals = null;
if (arguments.length > 1) {
var G__9469__i = 0, G__9469__a = new Array(arguments.length -  1);
while (G__9469__i < G__9469__a.length) {G__9469__a[G__9469__i] = arguments[G__9469__i + 1]; ++G__9469__i;}
  keyvals = new cljs.core.IndexedSeq(G__9469__a,0);
} 
return sorted_map_by__delegate.call(this,comparator,keyvals);};
sorted_map_by.cljs$lang$maxFixedArity = 1;
sorted_map_by.cljs$lang$applyTo = (function (arglist__9470){
var comparator = cljs.core.first(arglist__9470);
var keyvals = cljs.core.rest(arglist__9470);
return sorted_map_by__delegate(comparator,keyvals);
});
sorted_map_by.cljs$core$IFn$_invoke$arity$variadic = sorted_map_by__delegate;
return sorted_map_by;
})()
;

/**
* @constructor
*/
cljs.core.KeySeq = (function (mseq,_meta){
this.mseq = mseq;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
})
cljs.core.KeySeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.KeySeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.KeySeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.KeySeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__9471 = self__.mseq;
if(G__9471){
var bit__4413__auto__ = (G__9471.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__4413__auto__) || (G__9471.cljs$core$INext$)){
return true;
} else {
if((!G__9471.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__9471);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__9471);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if((nseq == null)){
return null;
} else {
return (new cljs.core.KeySeq(nseq,self__._meta));
}
});

cljs.core.KeySeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.KeySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
return me.cljs$core$IMapEntry$_key$arity$1(null);
});

cljs.core.KeySeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__9472 = self__.mseq;
if(G__9472){
var bit__4413__auto__ = (G__9472.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__4413__auto__) || (G__9472.cljs$core$INext$)){
return true;
} else {
if((!G__9472.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__9472);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__9472);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if(!((nseq == null))){
return (new cljs.core.KeySeq(nseq,self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.KeySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.KeySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.KeySeq(self__.mseq,new_meta));
});

cljs.core.KeySeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.KeySeq.cljs$lang$type = true;

cljs.core.KeySeq.cljs$lang$ctorStr = "cljs.core/KeySeq";

cljs.core.KeySeq.cljs$lang$ctorPrWriter = (function (this__4319__auto__,writer__4320__auto__,opt__4321__auto__){
return cljs.core._write(writer__4320__auto__,"cljs.core/KeySeq");
});

cljs.core.__GT_KeySeq = (function __GT_KeySeq(mseq,_meta){
return (new cljs.core.KeySeq(mseq,_meta));
});

(cljs.core.KeySeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4710__auto__ = this;
return cljs.core.es6_iterator(this__4710__auto__);
}));
/**
* Returns a sequence of the map's keys.
*/
cljs.core.keys = (function keys(hash_map){
var temp__4126__auto__ = cljs.core.seq(hash_map);
if(temp__4126__auto__){
var mseq = temp__4126__auto__;
return (new cljs.core.KeySeq(mseq,null));
} else {
return null;
}
});
/**
* Returns the key of the map entry.
*/
cljs.core.key = (function key(map_entry){
return cljs.core._key(map_entry);
});

/**
* @constructor
*/
cljs.core.ValSeq = (function (mseq,_meta){
this.mseq = mseq;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
})
cljs.core.ValSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ValSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ValSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.ValSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__9473 = self__.mseq;
if(G__9473){
var bit__4413__auto__ = (G__9473.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__4413__auto__) || (G__9473.cljs$core$INext$)){
return true;
} else {
if((!G__9473.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__9473);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__9473);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if((nseq == null)){
return null;
} else {
return (new cljs.core.ValSeq(nseq,self__._meta));
}
});

cljs.core.ValSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ValSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
return me.cljs$core$IMapEntry$_val$arity$1(null);
});

cljs.core.ValSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__9474 = self__.mseq;
if(G__9474){
var bit__4413__auto__ = (G__9474.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__4413__auto__) || (G__9474.cljs$core$INext$)){
return true;
} else {
if((!G__9474.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__9474);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__9474);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if(!((nseq == null))){
return (new cljs.core.ValSeq(nseq,self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.ValSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ValSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ValSeq(self__.mseq,new_meta));
});

cljs.core.ValSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ValSeq.cljs$lang$type = true;

cljs.core.ValSeq.cljs$lang$ctorStr = "cljs.core/ValSeq";

cljs.core.ValSeq.cljs$lang$ctorPrWriter = (function (this__4319__auto__,writer__4320__auto__,opt__4321__auto__){
return cljs.core._write(writer__4320__auto__,"cljs.core/ValSeq");
});

cljs.core.__GT_ValSeq = (function __GT_ValSeq(mseq,_meta){
return (new cljs.core.ValSeq(mseq,_meta));
});

(cljs.core.ValSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4710__auto__ = this;
return cljs.core.es6_iterator(this__4710__auto__);
}));
/**
* Returns a sequence of the map's values.
*/
cljs.core.vals = (function vals(hash_map){
var temp__4126__auto__ = cljs.core.seq(hash_map);
if(temp__4126__auto__){
var mseq = temp__4126__auto__;
return (new cljs.core.ValSeq(mseq,null));
} else {
return null;
}
});
/**
* Returns the value in the map entry.
*/
cljs.core.val = (function val(map_entry){
return cljs.core._val(map_entry);
});
/**
* Returns a map that consists of the rest of the maps conj-ed onto
* the first.  If a key occurs in more than one map, the mapping from
* the latter (left-to-right) will be the mapping in the result.
* @param {...*} var_args
*/
cljs.core.merge = (function() { 
var merge__delegate = function (maps){
if(cljs.core.truth_(cljs.core.some(cljs.core.identity,maps))){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2((function (p1__9475_SHARP_,p2__9476_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2((function (){var or__3732__auto__ = p1__9475_SHARP_;
if(cljs.core.truth_(or__3732__auto__)){
return or__3732__auto__;
} else {
return cljs.core.PersistentArrayMap.EMPTY;
}
})(),p2__9476_SHARP_);
}),maps);
} else {
return null;
}
};
var merge = function (var_args){
var maps = null;
if (arguments.length > 0) {
var G__9477__i = 0, G__9477__a = new Array(arguments.length -  0);
while (G__9477__i < G__9477__a.length) {G__9477__a[G__9477__i] = arguments[G__9477__i + 0]; ++G__9477__i;}
  maps = new cljs.core.IndexedSeq(G__9477__a,0);
} 
return merge__delegate.call(this,maps);};
merge.cljs$lang$maxFixedArity = 0;
merge.cljs$lang$applyTo = (function (arglist__9478){
var maps = cljs.core.seq(arglist__9478);
return merge__delegate(maps);
});
merge.cljs$core$IFn$_invoke$arity$variadic = merge__delegate;
return merge;
})()
;
/**
* Returns a map that consists of the rest of the maps conj-ed onto
* the first.  If a key occurs in more than one map, the mapping(s)
* from the latter (left-to-right) will be combined with the mapping in
* the result by calling (f val-in-result val-in-latter).
* @param {...*} var_args
*/
cljs.core.merge_with = (function() { 
var merge_with__delegate = function (f,maps){
if(cljs.core.truth_(cljs.core.some(cljs.core.identity,maps))){
var merge_entry = (function (m,e){
var k = cljs.core.first(e);
var v = cljs.core.second(e);
if(cljs.core.contains_QMARK_(m,k)){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__9481 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__9482 = v;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9481,G__9482) : f.call(null,G__9481,G__9482));
})());
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,v);
}
});
var merge2 = ((function (merge_entry){
return (function (m1,m2){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(merge_entry,(function (){var or__3732__auto__ = m1;
if(cljs.core.truth_(or__3732__auto__)){
return or__3732__auto__;
} else {
return cljs.core.PersistentArrayMap.EMPTY;
}
})(),cljs.core.seq(m2));
});})(merge_entry))
;
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(merge2,maps);
} else {
return null;
}
};
var merge_with = function (f,var_args){
var maps = null;
if (arguments.length > 1) {
var G__9483__i = 0, G__9483__a = new Array(arguments.length -  1);
while (G__9483__i < G__9483__a.length) {G__9483__a[G__9483__i] = arguments[G__9483__i + 1]; ++G__9483__i;}
  maps = new cljs.core.IndexedSeq(G__9483__a,0);
} 
return merge_with__delegate.call(this,f,maps);};
merge_with.cljs$lang$maxFixedArity = 1;
merge_with.cljs$lang$applyTo = (function (arglist__9484){
var f = cljs.core.first(arglist__9484);
var maps = cljs.core.rest(arglist__9484);
return merge_with__delegate(f,maps);
});
merge_with.cljs$core$IFn$_invoke$arity$variadic = merge_with__delegate;
return merge_with;
})()
;
/**
* Returns a map containing only those entries in map whose key is in keys
*/
cljs.core.select_keys = (function select_keys(map,keyseq){
var ret = cljs.core.PersistentArrayMap.EMPTY;
var keys = cljs.core.seq(keyseq);
while(true){
if(keys){
var key = cljs.core.first(keys);
var entry = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map,key,new cljs.core.Keyword("cljs.core","not-found","cljs.core/not-found",-1572889185));
var G__9485 = ((cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(entry,new cljs.core.Keyword("cljs.core","not-found","cljs.core/not-found",-1572889185)))?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret,key,entry):ret);
var G__9486 = cljs.core.next(keys);
ret = G__9485;
keys = G__9486;
continue;
} else {
return cljs.core.with_meta(ret,cljs.core.meta(map));
}
break;
}
});

/**
* @constructor
*/
cljs.core.PersistentHashSet = (function (meta,hash_map,__hash){
this.meta = meta;
this.hash_map = hash_map;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 15077647;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentHashSet.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentHashSet.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentHashSet.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentHashSet.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__9489 = cljs.core.seq(coll);
var chunk__9490 = null;
var count__9491 = (0);
var i__9492 = (0);
while(true){
if((i__9492 < count__9491)){
var vec__9493 = chunk__9490.cljs$core$IIndexed$_nth$arity$2(null,i__9492);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9493,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9493,(1),null);
var G__9494_9499 = v;
var G__9495_9500 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9494_9499,G__9495_9500) : f.call(null,G__9494_9499,G__9495_9500));

var G__9501 = seq__9489;
var G__9502 = chunk__9490;
var G__9503 = count__9491;
var G__9504 = (i__9492 + (1));
seq__9489 = G__9501;
chunk__9490 = G__9502;
count__9491 = G__9503;
i__9492 = G__9504;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__9489);
if(temp__4126__auto__){
var seq__9489__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__9489__$1)){
var c__4519__auto__ = cljs.core.chunk_first(seq__9489__$1);
var G__9505 = cljs.core.chunk_rest(seq__9489__$1);
var G__9506 = c__4519__auto__;
var G__9507 = cljs.core.count(c__4519__auto__);
var G__9508 = (0);
seq__9489 = G__9505;
chunk__9490 = G__9506;
count__9491 = G__9507;
i__9492 = G__9508;
continue;
} else {
var vec__9496 = cljs.core.first(seq__9489__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9496,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9496,(1),null);
var G__9497_9509 = v;
var G__9498_9510 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9497_9509,G__9498_9510) : f.call(null,G__9497_9509,G__9498_9510));

var G__9511 = cljs.core.next(seq__9489__$1);
var G__9512 = null;
var G__9513 = (0);
var G__9514 = (0);
seq__9489 = G__9511;
chunk__9490 = G__9512;
count__9491 = G__9513;
i__9492 = G__9514;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,v,null);
});

cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,v,not_found){
var self__ = this;
var coll__$1 = this;
if(cljs.core._contains_key_QMARK_(self__.hash_map,v)){
return v;
} else {
return not_found;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,self__.hash_map,self__.__hash));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._count(self__.hash_map);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4153__auto__ = self__.__hash;
if(!((h__4153__auto__ == null))){
return h__4153__auto__;
} else {
var h__4153__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__4153__auto____$1;

return h__4153__auto____$1;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return (cljs.core.set_QMARK_(other)) && ((cljs.core.count(coll__$1) === cljs.core.count(other))) && (cljs.core.every_QMARK_(((function (coll__$1){
return (function (p1__9487_SHARP_){
return cljs.core.contains_QMARK_(coll__$1,p1__9487_SHARP_);
});})(coll__$1))
,other));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientHashSet(cljs.core._as_transient(self__.hash_map)));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentHashSet.EMPTY,self__.meta);
});

cljs.core.PersistentHashSet.prototype.cljs$core$ISet$_disjoin$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,cljs.core._dissoc(self__.hash_map,v),null));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.keys(self__.hash_map);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(meta__$1,self__.hash_map,self__.__hash));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.hash_map,o,null),null));
});

cljs.core.PersistentHashSet.prototype.call = (function() {
var G__9515 = null;
var G__9515__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__9515__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__9515 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__9515__2.call(this,self__,k);
case 3:
return G__9515__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__9515.cljs$core$IFn$_invoke$arity$2 = G__9515__2;
G__9515.cljs$core$IFn$_invoke$arity$3 = G__9515__3;
return G__9515;
})()
;

cljs.core.PersistentHashSet.prototype.apply = (function (self__,args9488){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args9488)));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentHashSet.cljs$lang$type = true;

cljs.core.PersistentHashSet.cljs$lang$ctorStr = "cljs.core/PersistentHashSet";

cljs.core.PersistentHashSet.cljs$lang$ctorPrWriter = (function (this__4319__auto__,writer__4320__auto__,opt__4321__auto__){
return cljs.core._write(writer__4320__auto__,"cljs.core/PersistentHashSet");
});

cljs.core.__GT_PersistentHashSet = (function __GT_PersistentHashSet(meta,hash_map,__hash){
return (new cljs.core.PersistentHashSet(meta,hash_map,__hash));
});

cljs.core.PersistentHashSet.EMPTY = (new cljs.core.PersistentHashSet(null,cljs.core.PersistentArrayMap.EMPTY,cljs.core.empty_unordered_hash));
cljs.core.PersistentHashSet.fromArray = (function (items,no_clone){
var len = items.length;
if((len <= cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD)){
var arr = ((no_clone)?items:cljs.core.aclone(items));
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
while(true){
if((i < len)){
var G__9516 = (i + (1));
var G__9517 = cljs.core._assoc_BANG_(out,(items[i]),null);
i = G__9516;
out = G__9517;
continue;
} else {
return (new cljs.core.PersistentHashSet(null,cljs.core._persistent_BANG_(out),null));
}
break;
}
} else {
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashSet.EMPTY);
while(true){
if((i < len)){
var G__9518 = (i + (1));
var G__9519 = cljs.core._conj_BANG_(out,(items[i]));
i = G__9518;
out = G__9519;
continue;
} else {
return cljs.core._persistent_BANG_(out);
}
break;
}
}
});
(cljs.core.PersistentHashSet.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4710__auto__ = this;
return cljs.core.es6_iterator(this__4710__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientHashSet = (function (transient_map){
this.transient_map = transient_map;
this.cljs$lang$protocol_mask$partition0$ = 259;
this.cljs$lang$protocol_mask$partition1$ = 136;
})
cljs.core.TransientHashSet.prototype.call = (function() {
var G__9521 = null;
var G__9521__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var tcoll = self____$1;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return null;
} else {
return k;
}
});
var G__9521__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var tcoll = self____$1;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return k;
}
});
G__9521 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__9521__2.call(this,self__,k);
case 3:
return G__9521__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__9521.cljs$core$IFn$_invoke$arity$2 = G__9521__2;
G__9521.cljs$core$IFn$_invoke$arity$3 = G__9521__3;
return G__9521;
})()
;

cljs.core.TransientHashSet.prototype.apply = (function (self__,args9520){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args9520)));
});

cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var tcoll = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return null;
} else {
return k;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var tcoll = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return k;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,v){
var self__ = this;
var tcoll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(tcoll__$1,v,null);
});

cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,v,not_found){
var self__ = this;
var tcoll__$1 = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,v,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return v;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return cljs.core.count(self__.transient_map);
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientSet$_disjoin_BANG_$arity$2 = (function (tcoll,v){
var self__ = this;
var tcoll__$1 = this;
self__.transient_map = cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$2(self__.transient_map,v);

return tcoll__$1;
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
self__.transient_map = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(self__.transient_map,o,null);

return tcoll__$1;
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return (new cljs.core.PersistentHashSet(null,cljs.core.persistent_BANG_(self__.transient_map),null));
});

cljs.core.TransientHashSet.cljs$lang$type = true;

cljs.core.TransientHashSet.cljs$lang$ctorStr = "cljs.core/TransientHashSet";

cljs.core.TransientHashSet.cljs$lang$ctorPrWriter = (function (this__4319__auto__,writer__4320__auto__,opt__4321__auto__){
return cljs.core._write(writer__4320__auto__,"cljs.core/TransientHashSet");
});

cljs.core.__GT_TransientHashSet = (function __GT_TransientHashSet(transient_map){
return (new cljs.core.TransientHashSet(transient_map));
});


/**
* @constructor
*/
cljs.core.PersistentTreeSet = (function (meta,tree_map,__hash){
this.meta = meta;
this.tree_map = tree_map;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 417730831;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentTreeSet.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeSet.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeSet.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentTreeSet.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__9524 = cljs.core.seq(coll);
var chunk__9525 = null;
var count__9526 = (0);
var i__9527 = (0);
while(true){
if((i__9527 < count__9526)){
var vec__9528 = chunk__9525.cljs$core$IIndexed$_nth$arity$2(null,i__9527);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9528,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9528,(1),null);
var G__9529_9534 = v;
var G__9530_9535 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9529_9534,G__9530_9535) : f.call(null,G__9529_9534,G__9530_9535));

var G__9536 = seq__9524;
var G__9537 = chunk__9525;
var G__9538 = count__9526;
var G__9539 = (i__9527 + (1));
seq__9524 = G__9536;
chunk__9525 = G__9537;
count__9526 = G__9538;
i__9527 = G__9539;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__9524);
if(temp__4126__auto__){
var seq__9524__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__9524__$1)){
var c__4519__auto__ = cljs.core.chunk_first(seq__9524__$1);
var G__9540 = cljs.core.chunk_rest(seq__9524__$1);
var G__9541 = c__4519__auto__;
var G__9542 = cljs.core.count(c__4519__auto__);
var G__9543 = (0);
seq__9524 = G__9540;
chunk__9525 = G__9541;
count__9526 = G__9542;
i__9527 = G__9543;
continue;
} else {
var vec__9531 = cljs.core.first(seq__9524__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9531,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9531,(1),null);
var G__9532_9544 = v;
var G__9533_9545 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9532_9544,G__9533_9545) : f.call(null,G__9532_9544,G__9533_9545));

var G__9546 = cljs.core.next(seq__9524__$1);
var G__9547 = null;
var G__9548 = (0);
var G__9549 = (0);
seq__9524 = G__9546;
chunk__9525 = G__9547;
count__9526 = G__9548;
i__9527 = G__9549;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,v,null);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,v,not_found){
var self__ = this;
var coll__$1 = this;
var n = self__.tree_map.entry_at(v);
if(!((n == null))){
return n.key;
} else {
return not_found;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,self__.tree_map,self__.__hash));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.count(self__.tree_map);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core.count(self__.tree_map) > (0))){
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core.rseq(self__.tree_map));
} else {
return null;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4153__auto__ = self__.__hash;
if(!((h__4153__auto__ == null))){
return h__4153__auto__;
} else {
var h__4153__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__4153__auto____$1;

return h__4153__auto____$1;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return (cljs.core.set_QMARK_(other)) && ((cljs.core.count(coll__$1) === cljs.core.count(other))) && (cljs.core.every_QMARK_(((function (coll__$1){
return (function (p1__9522_SHARP_){
return cljs.core.contains_QMARK_(coll__$1,p1__9522_SHARP_);
});})(coll__$1))
,other));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core._empty(self__.tree_map),(0)));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISet$_disjoin$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.tree_map,v),null));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.keys(self__.tree_map);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(meta__$1,self__.tree_map,self__.__hash));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.tree_map,o,null),null));
});

cljs.core.PersistentTreeSet.prototype.call = (function() {
var G__9550 = null;
var G__9550__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__9550__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__9550 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__9550__2.call(this,self__,k);
case 3:
return G__9550__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__9550.cljs$core$IFn$_invoke$arity$2 = G__9550__2;
G__9550.cljs$core$IFn$_invoke$arity$3 = G__9550__3;
return G__9550;
})()
;

cljs.core.PersistentTreeSet.prototype.apply = (function (self__,args9523){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args9523)));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = (function (coll,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core._sorted_seq(self__.tree_map,ascending_QMARK_));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = (function (coll,k,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core._sorted_seq_from(self__.tree_map,k,ascending_QMARK_));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_entry_key$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
return entry;
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_comparator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._comparator(self__.tree_map);
});

cljs.core.PersistentTreeSet.cljs$lang$type = true;

cljs.core.PersistentTreeSet.cljs$lang$ctorStr = "cljs.core/PersistentTreeSet";

cljs.core.PersistentTreeSet.cljs$lang$ctorPrWriter = (function (this__4319__auto__,writer__4320__auto__,opt__4321__auto__){
return cljs.core._write(writer__4320__auto__,"cljs.core/PersistentTreeSet");
});

cljs.core.__GT_PersistentTreeSet = (function __GT_PersistentTreeSet(meta,tree_map,__hash){
return (new cljs.core.PersistentTreeSet(meta,tree_map,__hash));
});

cljs.core.PersistentTreeSet.EMPTY = (new cljs.core.PersistentTreeSet(null,cljs.core.PersistentTreeMap.EMPTY,cljs.core.empty_unordered_hash));
(cljs.core.PersistentTreeSet.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4710__auto__ = this;
return cljs.core.es6_iterator(this__4710__auto__);
}));
cljs.core.set_from_indexed_seq = (function set_from_indexed_seq(iseq){
var arr = iseq.arr;
var ret = (function (){var a__4613__auto__ = arr;
var i = (0);
var res = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
while(true){
if((i < a__4613__auto__.length)){
var G__9551 = (i + (1));
var G__9552 = res.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null,(arr[i]));
i = G__9551;
res = G__9552;
continue;
} else {
return res;
}
break;
}
})();
return ret.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(null);
});
/**
* Returns a set of the distinct elements of coll.
*/
cljs.core.set = (function set(coll){
var in$ = cljs.core.seq(coll);
if((in$ == null)){
return cljs.core.PersistentHashSet.EMPTY;
} else {
if(((in$ instanceof cljs.core.IndexedSeq)) && ((in$.i === (0)))){
return cljs.core.set_from_indexed_seq(in$);
} else {
var in$__$1 = in$;
var out = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
while(true){
if(!((in$__$1 == null))){
var G__9553 = in$__$1.cljs$core$INext$_next$arity$1(null);
var G__9554 = out.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null,in$__$1.cljs$core$ISeq$_first$arity$1(null));
in$__$1 = G__9553;
out = G__9554;
continue;
} else {
return out.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(null);
}
break;
}

}
}
});
/**
* @param {...*} var_args
*/
cljs.core.hash_set = (function() {
var hash_set = null;
var hash_set__0 = (function (){
return cljs.core.PersistentHashSet.EMPTY;
});
var hash_set__1 = (function() { 
var G__9555__delegate = function (keys){
return cljs.core.set(keys);
};
var G__9555 = function (var_args){
var keys = null;
if (arguments.length > 0) {
var G__9556__i = 0, G__9556__a = new Array(arguments.length -  0);
while (G__9556__i < G__9556__a.length) {G__9556__a[G__9556__i] = arguments[G__9556__i + 0]; ++G__9556__i;}
  keys = new cljs.core.IndexedSeq(G__9556__a,0);
} 
return G__9555__delegate.call(this,keys);};
G__9555.cljs$lang$maxFixedArity = 0;
G__9555.cljs$lang$applyTo = (function (arglist__9557){
var keys = cljs.core.seq(arglist__9557);
return G__9555__delegate(keys);
});
G__9555.cljs$core$IFn$_invoke$arity$variadic = G__9555__delegate;
return G__9555;
})()
;
hash_set = function(var_args){
var keys = var_args;
switch(arguments.length){
case 0:
return hash_set__0.call(this);
default:
var G__9558 = null;
if (arguments.length > 0) {
var G__9559__i = 0, G__9559__a = new Array(arguments.length -  0);
while (G__9559__i < G__9559__a.length) {G__9559__a[G__9559__i] = arguments[G__9559__i + 0]; ++G__9559__i;}
G__9558 = new cljs.core.IndexedSeq(G__9559__a,0);
}
return hash_set__1.cljs$core$IFn$_invoke$arity$variadic(G__9558);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
hash_set.cljs$lang$maxFixedArity = 0;
hash_set.cljs$lang$applyTo = hash_set__1.cljs$lang$applyTo;
hash_set.cljs$core$IFn$_invoke$arity$0 = hash_set__0;
hash_set.cljs$core$IFn$_invoke$arity$variadic = hash_set__1.cljs$core$IFn$_invoke$arity$variadic;
return hash_set;
})()
;
/**
* Returns a new sorted set with supplied keys.
* @param {...*} var_args
*/
cljs.core.sorted_set = (function() { 
var sorted_set__delegate = function (keys){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,cljs.core.PersistentTreeSet.EMPTY,keys);
};
var sorted_set = function (var_args){
var keys = null;
if (arguments.length > 0) {
var G__9560__i = 0, G__9560__a = new Array(arguments.length -  0);
while (G__9560__i < G__9560__a.length) {G__9560__a[G__9560__i] = arguments[G__9560__i + 0]; ++G__9560__i;}
  keys = new cljs.core.IndexedSeq(G__9560__a,0);
} 
return sorted_set__delegate.call(this,keys);};
sorted_set.cljs$lang$maxFixedArity = 0;
sorted_set.cljs$lang$applyTo = (function (arglist__9561){
var keys = cljs.core.seq(arglist__9561);
return sorted_set__delegate(keys);
});
sorted_set.cljs$core$IFn$_invoke$arity$variadic = sorted_set__delegate;
return sorted_set;
})()
;
/**
* Returns a new sorted set with supplied keys, using the supplied comparator.
* @param {...*} var_args
*/
cljs.core.sorted_set_by = (function() { 
var sorted_set_by__delegate = function (comparator,keys){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,(new cljs.core.PersistentTreeSet(null,cljs.core.sorted_map_by(comparator),(0))),keys);
};
var sorted_set_by = function (comparator,var_args){
var keys = null;
if (arguments.length > 1) {
var G__9562__i = 0, G__9562__a = new Array(arguments.length -  1);
while (G__9562__i < G__9562__a.length) {G__9562__a[G__9562__i] = arguments[G__9562__i + 1]; ++G__9562__i;}
  keys = new cljs.core.IndexedSeq(G__9562__a,0);
} 
return sorted_set_by__delegate.call(this,comparator,keys);};
sorted_set_by.cljs$lang$maxFixedArity = 1;
sorted_set_by.cljs$lang$applyTo = (function (arglist__9563){
var comparator = cljs.core.first(arglist__9563);
var keys = cljs.core.rest(arglist__9563);
return sorted_set_by__delegate(comparator,keys);
});
sorted_set_by.cljs$core$IFn$_invoke$arity$variadic = sorted_set_by__delegate;
return sorted_set_by;
})()
;
/**
* Given a map of replacement pairs and a vector/collection, returns a
* vector/seq with any elements = a key in smap replaced with the
* corresponding val in smap.  Returns a transducer when no collection
* is provided.
*/
cljs.core.replace = (function() {
var replace = null;
var replace__1 = (function (smap){
return cljs.core.map.cljs$core$IFn$_invoke$arity$1((function (p1__9564_SHARP_){
var temp__4124__auto__ = cljs.core.find(smap,p1__9564_SHARP_);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
return cljs.core.val(e);
} else {
return p1__9564_SHARP_;
}
}));
});
var replace__2 = (function (smap,coll){
if(cljs.core.vector_QMARK_(coll)){
var n = cljs.core.count(coll);
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (n){
return (function (v,i){
var temp__4124__auto__ = cljs.core.find(smap,cljs.core.nth.cljs$core$IFn$_invoke$arity$2(v,i));
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(v,i,cljs.core.second(e));
} else {
return v;
}
});})(n))
,coll,cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.iterate(cljs.core.inc,(0))));
} else {
return cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (p1__9565_SHARP_){
var temp__4124__auto__ = cljs.core.find(smap,p1__9565_SHARP_);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
return cljs.core.second(e);
} else {
return p1__9565_SHARP_;
}
}),coll);
}
});
replace = function(smap,coll){
switch(arguments.length){
case 1:
return replace__1.call(this,smap);
case 2:
return replace__2.call(this,smap,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
replace.cljs$core$IFn$_invoke$arity$1 = replace__1;
replace.cljs$core$IFn$_invoke$arity$2 = replace__2;
return replace;
})()
;
/**
* Returns a lazy sequence of the elements of coll with duplicates removed
*/
cljs.core.distinct = (function distinct(coll){
var step = (function step(xs,seen){
return (new cljs.core.LazySeq(null,(function (){
return (function (p__9576,seen__$1){
while(true){
var vec__9577 = p__9576;
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9577,(0),null);
var xs__$1 = vec__9577;
var temp__4126__auto__ = cljs.core.seq(xs__$1);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.contains_QMARK_(seen__$1,f)){
var G__9578 = cljs.core.rest(s);
var G__9579 = seen__$1;
p__9576 = G__9578;
seen__$1 = G__9579;
continue;
} else {
return cljs.core.cons(f,step(cljs.core.rest(s),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(seen__$1,f)));
}
} else {
return null;
}
break;
}
}).call(null,xs,seen);
}),null,null));
});
return step(coll,cljs.core.PersistentHashSet.EMPTY);
});
cljs.core.butlast = (function butlast(s){
var ret = cljs.core.PersistentVector.EMPTY;
var s__$1 = s;
while(true){
if(cljs.core.next(s__$1)){
var G__9580 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(ret,cljs.core.first(s__$1));
var G__9581 = cljs.core.next(s__$1);
ret = G__9580;
s__$1 = G__9581;
continue;
} else {
return cljs.core.seq(ret);
}
break;
}
});
/**
* Returns the name String of a string, symbol or keyword.
*/
cljs.core.name = (function name(x){
if((function (){var G__9583 = x;
if(G__9583){
var bit__4406__auto__ = (G__9583.cljs$lang$protocol_mask$partition1$ & (4096));
if((bit__4406__auto__) || (G__9583.cljs$core$INamed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$INamed$_name$arity$1(null);
} else {
if(typeof x === 'string'){
return x;
} else {
throw (new Error([cljs.core.str("Doesn't support name: "),cljs.core.str(x)].join('')));
}
}
});
/**
* Returns a map with the keys mapped to the corresponding vals.
*/
cljs.core.zipmap = (function zipmap(keys,vals){
var map = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
var ks = cljs.core.seq(keys);
var vs = cljs.core.seq(vals);
while(true){
if((ks) && (vs)){
var G__9584 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(map,cljs.core.first(ks),cljs.core.first(vs));
var G__9585 = cljs.core.next(ks);
var G__9586 = cljs.core.next(vs);
map = G__9584;
ks = G__9585;
vs = G__9586;
continue;
} else {
return cljs.core.persistent_BANG_(map);
}
break;
}
});
/**
* Returns the x for which (k x), a number, is greatest.
* @param {...*} var_args
*/
cljs.core.max_key = (function() {
var max_key = null;
var max_key__2 = (function (k,x){
return x;
});
var max_key__3 = (function (k,x,y){
if(((function (){var G__9597 = x;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__9597) : k.call(null,G__9597));
})() > (function (){var G__9598 = y;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__9598) : k.call(null,G__9598));
})())){
return x;
} else {
return y;
}
});
var max_key__4 = (function() { 
var G__9599__delegate = function (k,x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__9587_SHARP_,p2__9588_SHARP_){
return max_key.cljs$core$IFn$_invoke$arity$3(k,p1__9587_SHARP_,p2__9588_SHARP_);
}),max_key.cljs$core$IFn$_invoke$arity$3(k,x,y),more);
};
var G__9599 = function (k,x,y,var_args){
var more = null;
if (arguments.length > 3) {
var G__9600__i = 0, G__9600__a = new Array(arguments.length -  3);
while (G__9600__i < G__9600__a.length) {G__9600__a[G__9600__i] = arguments[G__9600__i + 3]; ++G__9600__i;}
  more = new cljs.core.IndexedSeq(G__9600__a,0);
} 
return G__9599__delegate.call(this,k,x,y,more);};
G__9599.cljs$lang$maxFixedArity = 3;
G__9599.cljs$lang$applyTo = (function (arglist__9601){
var k = cljs.core.first(arglist__9601);
arglist__9601 = cljs.core.next(arglist__9601);
var x = cljs.core.first(arglist__9601);
arglist__9601 = cljs.core.next(arglist__9601);
var y = cljs.core.first(arglist__9601);
var more = cljs.core.rest(arglist__9601);
return G__9599__delegate(k,x,y,more);
});
G__9599.cljs$core$IFn$_invoke$arity$variadic = G__9599__delegate;
return G__9599;
})()
;
max_key = function(k,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return max_key__2.call(this,k,x);
case 3:
return max_key__3.call(this,k,x,y);
default:
var G__9602 = null;
if (arguments.length > 3) {
var G__9603__i = 0, G__9603__a = new Array(arguments.length -  3);
while (G__9603__i < G__9603__a.length) {G__9603__a[G__9603__i] = arguments[G__9603__i + 3]; ++G__9603__i;}
G__9602 = new cljs.core.IndexedSeq(G__9603__a,0);
}
return max_key__4.cljs$core$IFn$_invoke$arity$variadic(k,x,y, G__9602);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
max_key.cljs$lang$maxFixedArity = 3;
max_key.cljs$lang$applyTo = max_key__4.cljs$lang$applyTo;
max_key.cljs$core$IFn$_invoke$arity$2 = max_key__2;
max_key.cljs$core$IFn$_invoke$arity$3 = max_key__3;
max_key.cljs$core$IFn$_invoke$arity$variadic = max_key__4.cljs$core$IFn$_invoke$arity$variadic;
return max_key;
})()
;
/**
* Returns the x for which (k x), a number, is least.
* @param {...*} var_args
*/
cljs.core.min_key = (function() {
var min_key = null;
var min_key__2 = (function (k,x){
return x;
});
var min_key__3 = (function (k,x,y){
if(((function (){var G__9614 = x;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__9614) : k.call(null,G__9614));
})() < (function (){var G__9615 = y;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__9615) : k.call(null,G__9615));
})())){
return x;
} else {
return y;
}
});
var min_key__4 = (function() { 
var G__9616__delegate = function (k,x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__9604_SHARP_,p2__9605_SHARP_){
return min_key.cljs$core$IFn$_invoke$arity$3(k,p1__9604_SHARP_,p2__9605_SHARP_);
}),min_key.cljs$core$IFn$_invoke$arity$3(k,x,y),more);
};
var G__9616 = function (k,x,y,var_args){
var more = null;
if (arguments.length > 3) {
var G__9617__i = 0, G__9617__a = new Array(arguments.length -  3);
while (G__9617__i < G__9617__a.length) {G__9617__a[G__9617__i] = arguments[G__9617__i + 3]; ++G__9617__i;}
  more = new cljs.core.IndexedSeq(G__9617__a,0);
} 
return G__9616__delegate.call(this,k,x,y,more);};
G__9616.cljs$lang$maxFixedArity = 3;
G__9616.cljs$lang$applyTo = (function (arglist__9618){
var k = cljs.core.first(arglist__9618);
arglist__9618 = cljs.core.next(arglist__9618);
var x = cljs.core.first(arglist__9618);
arglist__9618 = cljs.core.next(arglist__9618);
var y = cljs.core.first(arglist__9618);
var more = cljs.core.rest(arglist__9618);
return G__9616__delegate(k,x,y,more);
});
G__9616.cljs$core$IFn$_invoke$arity$variadic = G__9616__delegate;
return G__9616;
})()
;
min_key = function(k,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return min_key__2.call(this,k,x);
case 3:
return min_key__3.call(this,k,x,y);
default:
var G__9619 = null;
if (arguments.length > 3) {
var G__9620__i = 0, G__9620__a = new Array(arguments.length -  3);
while (G__9620__i < G__9620__a.length) {G__9620__a[G__9620__i] = arguments[G__9620__i + 3]; ++G__9620__i;}
G__9619 = new cljs.core.IndexedSeq(G__9620__a,0);
}
return min_key__4.cljs$core$IFn$_invoke$arity$variadic(k,x,y, G__9619);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
min_key.cljs$lang$maxFixedArity = 3;
min_key.cljs$lang$applyTo = min_key__4.cljs$lang$applyTo;
min_key.cljs$core$IFn$_invoke$arity$2 = min_key__2;
min_key.cljs$core$IFn$_invoke$arity$3 = min_key__3;
min_key.cljs$core$IFn$_invoke$arity$variadic = min_key__4.cljs$core$IFn$_invoke$arity$variadic;
return min_key;
})()
;

/**
* @constructor
*/
cljs.core.ArrayList = (function (arr){
this.arr = arr;
})
cljs.core.ArrayList.prototype.add = (function (x){
var self__ = this;
var _ = this;
return self__.arr.push(x);
});

cljs.core.ArrayList.prototype.size = (function (){
var self__ = this;
var _ = this;
return self__.arr.length;
});

cljs.core.ArrayList.prototype.clear = (function (){
var self__ = this;
var _ = this;
return self__.arr = [];
});

cljs.core.ArrayList.prototype.isEmpty = (function (){
var self__ = this;
var _ = this;
return (self__.arr.length === (0));
});

cljs.core.ArrayList.prototype.toArray = (function (){
var self__ = this;
var _ = this;
return self__.arr;
});

cljs.core.ArrayList.cljs$lang$type = true;

cljs.core.ArrayList.cljs$lang$ctorStr = "cljs.core/ArrayList";

cljs.core.ArrayList.cljs$lang$ctorPrWriter = (function (this__4319__auto__,writer__4320__auto__,opt__4321__auto__){
return cljs.core._write(writer__4320__auto__,"cljs.core/ArrayList");
});

cljs.core.__GT_ArrayList = (function __GT_ArrayList(arr){
return (new cljs.core.ArrayList(arr));
});

cljs.core.array_list = (function array_list(){
return (new cljs.core.ArrayList([]));
});
/**
* Returns a lazy sequence of lists like partition, but may include
* partitions with fewer than n items at the end.  Returns a stateful
* transducer when no collection is provided.
*/
cljs.core.partition_all = (function() {
var partition_all = null;
var partition_all__1 = (function (n){
return (function (rf){
var a = cljs.core.array_list();
return ((function (a){
return (function() {
var G__9637 = null;
var G__9637__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__9637__1 = (function (result){
var result__$1 = (cljs.core.truth_(a.isEmpty())?result:(function (){var v = cljs.core.vec(a.toArray());
a.clear();

return cljs.core.unreduced((function (){var G__9632 = result;
var G__9633 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__9632,G__9633) : rf.call(null,G__9632,G__9633));
})());
})());
var G__9634 = result__$1;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__9634) : rf.call(null,G__9634));
});
var G__9637__2 = (function (result,input){
a.add(input);

if((n === a.size())){
var v = cljs.core.vec(a.toArray());
a.clear();

var G__9635 = result;
var G__9636 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__9635,G__9636) : rf.call(null,G__9635,G__9636));
} else {
return result;
}
});
G__9637 = function(result,input){
switch(arguments.length){
case 0:
return G__9637__0.call(this);
case 1:
return G__9637__1.call(this,result);
case 2:
return G__9637__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__9637.cljs$core$IFn$_invoke$arity$0 = G__9637__0;
G__9637.cljs$core$IFn$_invoke$arity$1 = G__9637__1;
G__9637.cljs$core$IFn$_invoke$arity$2 = G__9637__2;
return G__9637;
})()
;})(a))
});
});
var partition_all__2 = (function (n,coll){
return partition_all.cljs$core$IFn$_invoke$arity$3(n,n,coll);
});
var partition_all__3 = (function (n,step,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.cons(cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s),partition_all.cljs$core$IFn$_invoke$arity$3(n,step,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return null;
}
}),null,null));
});
partition_all = function(n,step,coll){
switch(arguments.length){
case 1:
return partition_all__1.call(this,n);
case 2:
return partition_all__2.call(this,n,step);
case 3:
return partition_all__3.call(this,n,step,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partition_all.cljs$core$IFn$_invoke$arity$1 = partition_all__1;
partition_all.cljs$core$IFn$_invoke$arity$2 = partition_all__2;
partition_all.cljs$core$IFn$_invoke$arity$3 = partition_all__3;
return partition_all;
})()
;
/**
* Returns a lazy sequence of successive items from coll while
* (pred item) returns true. pred must be free of side-effects.
* Returns a transducer when no collection is provided.
*/
cljs.core.take_while = (function() {
var take_while = null;
var take_while__1 = (function (pred){
return (function (rf){
return (function() {
var G__9650 = null;
var G__9650__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__9650__1 = (function (result){
var G__9645 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__9645) : rf.call(null,G__9645));
});
var G__9650__2 = (function (result,input){
if(cljs.core.truth_((function (){var G__9646 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__9646) : pred.call(null,G__9646));
})())){
var G__9647 = result;
var G__9648 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__9647,G__9648) : rf.call(null,G__9647,G__9648));
} else {
return cljs.core.reduced(result);
}
});
G__9650 = function(result,input){
switch(arguments.length){
case 0:
return G__9650__0.call(this);
case 1:
return G__9650__1.call(this,result);
case 2:
return G__9650__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__9650.cljs$core$IFn$_invoke$arity$0 = G__9650__0;
G__9650.cljs$core$IFn$_invoke$arity$1 = G__9650__1;
G__9650.cljs$core$IFn$_invoke$arity$2 = G__9650__2;
return G__9650;
})()
});
});
var take_while__2 = (function (pred,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.truth_((function (){var G__9649 = cljs.core.first(s);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__9649) : pred.call(null,G__9649));
})())){
return cljs.core.cons(cljs.core.first(s),take_while.cljs$core$IFn$_invoke$arity$2(pred,cljs.core.rest(s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
take_while = function(pred,coll){
switch(arguments.length){
case 1:
return take_while__1.call(this,pred);
case 2:
return take_while__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
take_while.cljs$core$IFn$_invoke$arity$1 = take_while__1;
take_while.cljs$core$IFn$_invoke$arity$2 = take_while__2;
return take_while;
})()
;
cljs.core.mk_bound_fn = (function mk_bound_fn(sc,test,key){
return (function (e){
var comp = cljs.core._comparator(sc);
var G__9655 = (function (){var G__9657 = cljs.core._entry_key(sc,e);
var G__9658 = key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__9657,G__9658) : comp.call(null,G__9657,G__9658));
})();
var G__9656 = (0);
return (test.cljs$core$IFn$_invoke$arity$2 ? test.cljs$core$IFn$_invoke$arity$2(G__9655,G__9656) : test.call(null,G__9655,G__9656));
});
});
/**
* sc must be a sorted collection, test(s) one of <, <=, > or
* >=. Returns a seq of those entries with keys ek for
* which (test (.. sc comparator (compare ek key)) 0) is true
*/
cljs.core.subseq = (function() {
var subseq = null;
var subseq__3 = (function (sc,test,key){
var include = cljs.core.mk_bound_fn(sc,test,key);
if(cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._GT_,cljs.core._GT__EQ_], true).call(null,test))){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,key,true);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__9662 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9662,(0),null);
var s = vec__9662;
if(cljs.core.truth_((function (){var G__9663 = e;
return (include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(G__9663) : include.call(null,G__9663));
})())){
return s;
} else {
return cljs.core.next(s);
}
} else {
return null;
}
} else {
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include,cljs.core._sorted_seq(sc,true));
}
});
var subseq__5 = (function (sc,start_test,start_key,end_test,end_key){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,start_key,true);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__9664 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9664,(0),null);
var s = vec__9664;
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc,end_test,end_key),(cljs.core.truth_(cljs.core.mk_bound_fn(sc,start_test,start_key).call(null,e))?s:cljs.core.next(s)));
} else {
return null;
}
});
subseq = function(sc,start_test,start_key,end_test,end_key){
switch(arguments.length){
case 3:
return subseq__3.call(this,sc,start_test,start_key);
case 5:
return subseq__5.call(this,sc,start_test,start_key,end_test,end_key);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
subseq.cljs$core$IFn$_invoke$arity$3 = subseq__3;
subseq.cljs$core$IFn$_invoke$arity$5 = subseq__5;
return subseq;
})()
;
/**
* sc must be a sorted collection, test(s) one of <, <=, > or
* >=. Returns a reverse seq of those entries with keys ek for
* which (test (.. sc comparator (compare ek key)) 0) is true
*/
cljs.core.rsubseq = (function() {
var rsubseq = null;
var rsubseq__3 = (function (sc,test,key){
var include = cljs.core.mk_bound_fn(sc,test,key);
if(cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._LT_,cljs.core._LT__EQ_], true).call(null,test))){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,key,false);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__9668 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9668,(0),null);
var s = vec__9668;
if(cljs.core.truth_((function (){var G__9669 = e;
return (include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(G__9669) : include.call(null,G__9669));
})())){
return s;
} else {
return cljs.core.next(s);
}
} else {
return null;
}
} else {
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include,cljs.core._sorted_seq(sc,false));
}
});
var rsubseq__5 = (function (sc,start_test,start_key,end_test,end_key){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,end_key,false);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__9670 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9670,(0),null);
var s = vec__9670;
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc,start_test,start_key),(cljs.core.truth_(cljs.core.mk_bound_fn(sc,end_test,end_key).call(null,e))?s:cljs.core.next(s)));
} else {
return null;
}
});
rsubseq = function(sc,start_test,start_key,end_test,end_key){
switch(arguments.length){
case 3:
return rsubseq__3.call(this,sc,start_test,start_key);
case 5:
return rsubseq__5.call(this,sc,start_test,start_key,end_test,end_key);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
rsubseq.cljs$core$IFn$_invoke$arity$3 = rsubseq__3;
rsubseq.cljs$core$IFn$_invoke$arity$5 = rsubseq__5;
return rsubseq;
})()
;

/**
* @constructor
*/
cljs.core.RangeIterator = (function (i,end,step){
this.i = i;
this.end = end;
this.step = step;
})
cljs.core.RangeIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
if((self__.step > (0))){
return (self__.i < self__.end);
} else {
return (self__.i > self__.end);
}
});

cljs.core.RangeIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = self__.i;
self__.i = (self__.i + self__.step);

return ret;
});

cljs.core.RangeIterator.cljs$lang$type = true;

cljs.core.RangeIterator.cljs$lang$ctorStr = "cljs.core/RangeIterator";

cljs.core.RangeIterator.cljs$lang$ctorPrWriter = (function (this__4319__auto__,writer__4320__auto__,opt__4321__auto__){
return cljs.core._write(writer__4320__auto__,"cljs.core/RangeIterator");
});

cljs.core.__GT_RangeIterator = (function __GT_RangeIterator(i,end,step){
return (new cljs.core.RangeIterator(i,end,step));
});


/**
* @constructor
*/
cljs.core.Range = (function (meta,start,end,step,__hash){
this.meta = meta;
this.start = start;
this.end = end;
this.step = step;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 32375006;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Range.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Range.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (rng,n){
var self__ = this;
var rng__$1 = this;
if((n < cljs.core._count(rng__$1))){
return (self__.start + (n * self__.step));
} else {
if(((self__.start > self__.end)) && ((self__.step === (0)))){
return self__.start;
} else {
throw (new Error("Index out of bounds"));
}
}
});

cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (rng,n,not_found){
var self__ = this;
var rng__$1 = this;
if((n < cljs.core._count(rng__$1))){
return (self__.start + (n * self__.step));
} else {
if(((self__.start > self__.end)) && ((self__.step === (0)))){
return self__.start;
} else {
return not_found;
}
}
});

cljs.core.Range.prototype.cljs$core$IIterable$ = true;

cljs.core.Range.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.RangeIterator(self__.start,self__.end,self__.step));
});

cljs.core.Range.prototype.cljs$core$IMeta$_meta$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
return self__.meta;
});

cljs.core.Range.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Range(self__.meta,self__.start,self__.end,self__.step,self__.__hash));
});

cljs.core.Range.prototype.cljs$core$INext$_next$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((self__.step > (0))){
if(((self__.start + self__.step) < self__.end)){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return null;
}
} else {
if(((self__.start + self__.step) > self__.end)){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return null;
}
}
});

cljs.core.Range.prototype.cljs$core$ICounted$_count$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if(cljs.core.not(cljs.core._seq(rng__$1))){
return (0);
} else {
var G__9671 = ((self__.end - self__.start) / self__.step);
return (Math.ceil.cljs$core$IFn$_invoke$arity$1 ? Math.ceil.cljs$core$IFn$_invoke$arity$1(G__9671) : Math.ceil.call(null,G__9671));
}
});

cljs.core.Range.prototype.cljs$core$IHash$_hash$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
var h__4153__auto__ = self__.__hash;
if(!((h__4153__auto__ == null))){
return h__4153__auto__;
} else {
var h__4153__auto____$1 = cljs.core.hash_ordered_coll(rng__$1);
self__.__hash = h__4153__auto____$1;

return h__4153__auto____$1;
}
});

cljs.core.Range.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (rng,other){
var self__ = this;
var rng__$1 = this;
return cljs.core.equiv_sequential(rng__$1,other);
});

cljs.core.Range.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (rng,f){
var self__ = this;
var rng__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(rng__$1,f);
});

cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (rng,f,init){
var self__ = this;
var rng__$1 = this;
var i = self__.start;
var ret = init;
while(true){
if((((self__.step > (0)))?(i < self__.end):(i > self__.end))){
var ret__$1 = (function (){var G__9672 = ret;
var G__9673 = i;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9672,G__9673) : f.call(null,G__9672,G__9673));
})();
if(cljs.core.reduced_QMARK_(ret__$1)){
var G__9674 = ret__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__9674) : cljs.core.deref.call(null,G__9674));
} else {
var G__9675 = (i + self__.step);
var G__9676 = ret__$1;
i = G__9675;
ret = G__9676;
continue;
}
} else {
return ret;
}
break;
}
});

cljs.core.Range.prototype.cljs$core$ISeq$_first$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((cljs.core._seq(rng__$1) == null)){
return null;
} else {
return self__.start;
}
});

cljs.core.Range.prototype.cljs$core$ISeq$_rest$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if(!((cljs.core._seq(rng__$1) == null))){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.Range.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((self__.step > (0))){
if((self__.start < self__.end)){
return rng__$1;
} else {
return null;
}
} else {
if((self__.start > self__.end)){
return rng__$1;
} else {
return null;
}
}
});

cljs.core.Range.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (rng,meta__$1){
var self__ = this;
var rng__$1 = this;
return (new cljs.core.Range(meta__$1,self__.start,self__.end,self__.step,self__.__hash));
});

cljs.core.Range.prototype.cljs$core$ICollection$_conj$arity$2 = (function (rng,o){
var self__ = this;
var rng__$1 = this;
return cljs.core.cons(o,rng__$1);
});

cljs.core.Range.cljs$lang$type = true;

cljs.core.Range.cljs$lang$ctorStr = "cljs.core/Range";

cljs.core.Range.cljs$lang$ctorPrWriter = (function (this__4319__auto__,writer__4320__auto__,opt__4321__auto__){
return cljs.core._write(writer__4320__auto__,"cljs.core/Range");
});

cljs.core.__GT_Range = (function __GT_Range(meta,start,end,step,__hash){
return (new cljs.core.Range(meta,start,end,step,__hash));
});

(cljs.core.Range.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4710__auto__ = this;
return cljs.core.es6_iterator(this__4710__auto__);
}));
/**
* Returns a lazy seq of nums from start (inclusive) to end
* (exclusive), by step, where start defaults to 0, step to 1,
* and end to infinity.
*/
cljs.core.range = (function() {
var range = null;
var range__0 = (function (){
return range.cljs$core$IFn$_invoke$arity$3((0),Number.MAX_VALUE,(1));
});
var range__1 = (function (end){
return range.cljs$core$IFn$_invoke$arity$3((0),end,(1));
});
var range__2 = (function (start,end){
return range.cljs$core$IFn$_invoke$arity$3(start,end,(1));
});
var range__3 = (function (start,end,step){
return (new cljs.core.Range(null,start,end,step,null));
});
range = function(start,end,step){
switch(arguments.length){
case 0:
return range__0.call(this);
case 1:
return range__1.call(this,start);
case 2:
return range__2.call(this,start,end);
case 3:
return range__3.call(this,start,end,step);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
range.cljs$core$IFn$_invoke$arity$0 = range__0;
range.cljs$core$IFn$_invoke$arity$1 = range__1;
range.cljs$core$IFn$_invoke$arity$2 = range__2;
range.cljs$core$IFn$_invoke$arity$3 = range__3;
return range;
})()
;
/**
* Returns a lazy seq of every nth item in coll.  Returns a stateful
* transducer when no collection is provided.
*/
cljs.core.take_nth = (function() {
var take_nth = null;
var take_nth__1 = (function (n){
return (function (rf){
var ia = cljs.core.volatile_BANG_((-1));
return ((function (ia){
return (function() {
var G__9694 = null;
var G__9694__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__9694__1 = (function (result){
var G__9691 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__9691) : rf.call(null,G__9691));
});
var G__9694__2 = (function (result,input){
var i = ia.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(ia.cljs$core$IDeref$_deref$arity$1(null) + (1)));
if((cljs.core.rem(i,n) === (0))){
var G__9692 = result;
var G__9693 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__9692,G__9693) : rf.call(null,G__9692,G__9693));
} else {
return result;
}
});
G__9694 = function(result,input){
switch(arguments.length){
case 0:
return G__9694__0.call(this);
case 1:
return G__9694__1.call(this,result);
case 2:
return G__9694__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__9694.cljs$core$IFn$_invoke$arity$0 = G__9694__0;
G__9694.cljs$core$IFn$_invoke$arity$1 = G__9694__1;
G__9694.cljs$core$IFn$_invoke$arity$2 = G__9694__2;
return G__9694;
})()
;})(ia))
});
});
var take_nth__2 = (function (n,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.cons(cljs.core.first(s),take_nth.cljs$core$IFn$_invoke$arity$2(n,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,s)));
} else {
return null;
}
}),null,null));
});
take_nth = function(n,coll){
switch(arguments.length){
case 1:
return take_nth__1.call(this,n);
case 2:
return take_nth__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
take_nth.cljs$core$IFn$_invoke$arity$1 = take_nth__1;
take_nth.cljs$core$IFn$_invoke$arity$2 = take_nth__2;
return take_nth;
})()
;
/**
* Returns a vector of [(take-while pred coll) (drop-while pred coll)]
*/
cljs.core.split_with = (function split_with(pred,coll){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(pred,coll),cljs.core.drop_while.cljs$core$IFn$_invoke$arity$2(pred,coll)], null);
});
/**
* Applies f to each value in coll, splitting it each time f returns a
* new value.  Returns a lazy seq of partitions.  Returns a stateful
* transducer when no collection is provided.
*/
cljs.core.partition_by = (function() {
var partition_by = null;
var partition_by__1 = (function (f){
return (function (rf){
var a = cljs.core.array_list();
var pa = cljs.core.volatile_BANG_(new cljs.core.Keyword("cljs.core","none","cljs.core/none",926646439));
return ((function (a,pa){
return (function() {
var G__9716 = null;
var G__9716__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__9716__1 = (function (result){
var result__$1 = (cljs.core.truth_(a.isEmpty())?result:(function (){var v = cljs.core.vec(a.toArray());
a.clear();

return cljs.core.unreduced((function (){var G__9707 = result;
var G__9708 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__9707,G__9708) : rf.call(null,G__9707,G__9708));
})());
})());
var G__9709 = result__$1;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__9709) : rf.call(null,G__9709));
});
var G__9716__2 = (function (result,input){
var pval = (function (){var G__9710 = pa;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__9710) : cljs.core.deref.call(null,G__9710));
})();
var val = (function (){var G__9711 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__9711) : f.call(null,G__9711));
})();
cljs.core.vreset_BANG_(pa,val);

if((cljs.core.keyword_identical_QMARK_(pval,new cljs.core.Keyword("cljs.core","none","cljs.core/none",926646439))) || (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(val,pval))){
a.add(input);

return result;
} else {
var v = cljs.core.vec(a.toArray());
a.clear();

var ret = (function (){var G__9712 = result;
var G__9713 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__9712,G__9713) : rf.call(null,G__9712,G__9713));
})();
if(cljs.core.reduced_QMARK_(ret)){
} else {
a.add(input);
}

return ret;
}
});
G__9716 = function(result,input){
switch(arguments.length){
case 0:
return G__9716__0.call(this);
case 1:
return G__9716__1.call(this,result);
case 2:
return G__9716__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__9716.cljs$core$IFn$_invoke$arity$0 = G__9716__0;
G__9716.cljs$core$IFn$_invoke$arity$1 = G__9716__1;
G__9716.cljs$core$IFn$_invoke$arity$2 = G__9716__2;
return G__9716;
})()
;})(a,pa))
});
});
var partition_by__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
var fst = cljs.core.first(s);
var fv = (function (){var G__9714 = fst;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__9714) : f.call(null,G__9714));
})();
var run = cljs.core.cons(fst,cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(((function (fst,fv,s,temp__4126__auto__){
return (function (p1__9695_SHARP_){
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(fv,(function (){var G__9715 = p1__9695_SHARP_;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__9715) : f.call(null,G__9715));
})());
});})(fst,fv,s,temp__4126__auto__))
,cljs.core.next(s)));
return cljs.core.cons(run,partition_by.cljs$core$IFn$_invoke$arity$2(f,cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(cljs.core.count(run),s))));
} else {
return null;
}
}),null,null));
});
partition_by = function(f,coll){
switch(arguments.length){
case 1:
return partition_by__1.call(this,f);
case 2:
return partition_by__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partition_by.cljs$core$IFn$_invoke$arity$1 = partition_by__1;
partition_by.cljs$core$IFn$_invoke$arity$2 = partition_by__2;
return partition_by;
})()
;
/**
* Returns a map from distinct items in coll to the number of times
* they appear.
*/
cljs.core.frequencies = (function frequencies(coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (counts,x){
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(counts,x,(cljs.core.get.cljs$core$IFn$_invoke$arity$3(counts,x,(0)) + (1)));
}),cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY),coll));
});
/**
* Returns a lazy seq of the intermediate values of the reduction (as
* per reduce) of coll by f, starting with init.
*/
cljs.core.reductions = (function() {
var reductions = null;
var reductions__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4124__auto__ = cljs.core.seq(coll);
if(temp__4124__auto__){
var s = temp__4124__auto__;
return reductions.cljs$core$IFn$_invoke$arity$3(f,cljs.core.first(s),cljs.core.rest(s));
} else {
return cljs.core._conj(cljs.core.List.EMPTY,(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})());
}
}),null,null));
});
var reductions__3 = (function (f,init,coll){
return cljs.core.cons(init,(new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return reductions.cljs$core$IFn$_invoke$arity$3(f,(function (){var G__9725 = init;
var G__9726 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9725,G__9726) : f.call(null,G__9725,G__9726));
})(),cljs.core.rest(s));
} else {
return null;
}
}),null,null)));
});
reductions = function(f,init,coll){
switch(arguments.length){
case 2:
return reductions__2.call(this,f,init);
case 3:
return reductions__3.call(this,f,init,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
reductions.cljs$core$IFn$_invoke$arity$2 = reductions__2;
reductions.cljs$core$IFn$_invoke$arity$3 = reductions__3;
return reductions;
})()
;
/**
* Takes a set of functions and returns a fn that is the juxtaposition
* of those fns.  The returned fn takes a variable number of args, and
* returns a vector containing the result of applying each fn to the
* args (left-to-right).
* ((juxt a b c) x) => [(a x) (b x) (c x)]
* @param {...*} var_args
*/
cljs.core.juxt = (function() {
var juxt = null;
var juxt__1 = (function (f){
return (function() {
var G__9821 = null;
var G__9821__0 = (function (){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})()],null));
});
var G__9821__1 = (function (x){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__9779 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__9779) : f.call(null,G__9779));
})()],null));
});
var G__9821__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__9780 = x;
var G__9781 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9780,G__9781) : f.call(null,G__9780,G__9781));
})()],null));
});
var G__9821__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__9782 = x;
var G__9783 = y;
var G__9784 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__9782,G__9783,G__9784) : f.call(null,G__9782,G__9783,G__9784));
})()],null));
});
var G__9821__4 = (function() { 
var G__9822__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args)],null));
};
var G__9822 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__9823__i = 0, G__9823__a = new Array(arguments.length -  3);
while (G__9823__i < G__9823__a.length) {G__9823__a[G__9823__i] = arguments[G__9823__i + 3]; ++G__9823__i;}
  args = new cljs.core.IndexedSeq(G__9823__a,0);
} 
return G__9822__delegate.call(this,x,y,z,args);};
G__9822.cljs$lang$maxFixedArity = 3;
G__9822.cljs$lang$applyTo = (function (arglist__9824){
var x = cljs.core.first(arglist__9824);
arglist__9824 = cljs.core.next(arglist__9824);
var y = cljs.core.first(arglist__9824);
arglist__9824 = cljs.core.next(arglist__9824);
var z = cljs.core.first(arglist__9824);
var args = cljs.core.rest(arglist__9824);
return G__9822__delegate(x,y,z,args);
});
G__9822.cljs$core$IFn$_invoke$arity$variadic = G__9822__delegate;
return G__9822;
})()
;
G__9821 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__9821__0.call(this);
case 1:
return G__9821__1.call(this,x);
case 2:
return G__9821__2.call(this,x,y);
case 3:
return G__9821__3.call(this,x,y,z);
default:
var G__9825 = null;
if (arguments.length > 3) {
var G__9826__i = 0, G__9826__a = new Array(arguments.length -  3);
while (G__9826__i < G__9826__a.length) {G__9826__a[G__9826__i] = arguments[G__9826__i + 3]; ++G__9826__i;}
G__9825 = new cljs.core.IndexedSeq(G__9826__a,0);
}
return G__9821__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__9825);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__9821.cljs$lang$maxFixedArity = 3;
G__9821.cljs$lang$applyTo = G__9821__4.cljs$lang$applyTo;
G__9821.cljs$core$IFn$_invoke$arity$0 = G__9821__0;
G__9821.cljs$core$IFn$_invoke$arity$1 = G__9821__1;
G__9821.cljs$core$IFn$_invoke$arity$2 = G__9821__2;
G__9821.cljs$core$IFn$_invoke$arity$3 = G__9821__3;
G__9821.cljs$core$IFn$_invoke$arity$variadic = G__9821__4.cljs$core$IFn$_invoke$arity$variadic;
return G__9821;
})()
});
var juxt__2 = (function (f,g){
return (function() {
var G__9827 = null;
var G__9827__0 = (function (){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),(function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})()],null));
});
var G__9827__1 = (function (x){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__9785 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__9785) : f.call(null,G__9785));
})(),(function (){var G__9786 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__9786) : g.call(null,G__9786));
})()],null));
});
var G__9827__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__9787 = x;
var G__9788 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9787,G__9788) : f.call(null,G__9787,G__9788));
})(),(function (){var G__9789 = x;
var G__9790 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__9789,G__9790) : g.call(null,G__9789,G__9790));
})()],null));
});
var G__9827__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__9791 = x;
var G__9792 = y;
var G__9793 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__9791,G__9792,G__9793) : f.call(null,G__9791,G__9792,G__9793));
})(),(function (){var G__9794 = x;
var G__9795 = y;
var G__9796 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__9794,G__9795,G__9796) : g.call(null,G__9794,G__9795,G__9796));
})()],null));
});
var G__9827__4 = (function() { 
var G__9828__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args)],null));
};
var G__9828 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__9829__i = 0, G__9829__a = new Array(arguments.length -  3);
while (G__9829__i < G__9829__a.length) {G__9829__a[G__9829__i] = arguments[G__9829__i + 3]; ++G__9829__i;}
  args = new cljs.core.IndexedSeq(G__9829__a,0);
} 
return G__9828__delegate.call(this,x,y,z,args);};
G__9828.cljs$lang$maxFixedArity = 3;
G__9828.cljs$lang$applyTo = (function (arglist__9830){
var x = cljs.core.first(arglist__9830);
arglist__9830 = cljs.core.next(arglist__9830);
var y = cljs.core.first(arglist__9830);
arglist__9830 = cljs.core.next(arglist__9830);
var z = cljs.core.first(arglist__9830);
var args = cljs.core.rest(arglist__9830);
return G__9828__delegate(x,y,z,args);
});
G__9828.cljs$core$IFn$_invoke$arity$variadic = G__9828__delegate;
return G__9828;
})()
;
G__9827 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__9827__0.call(this);
case 1:
return G__9827__1.call(this,x);
case 2:
return G__9827__2.call(this,x,y);
case 3:
return G__9827__3.call(this,x,y,z);
default:
var G__9831 = null;
if (arguments.length > 3) {
var G__9832__i = 0, G__9832__a = new Array(arguments.length -  3);
while (G__9832__i < G__9832__a.length) {G__9832__a[G__9832__i] = arguments[G__9832__i + 3]; ++G__9832__i;}
G__9831 = new cljs.core.IndexedSeq(G__9832__a,0);
}
return G__9827__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__9831);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__9827.cljs$lang$maxFixedArity = 3;
G__9827.cljs$lang$applyTo = G__9827__4.cljs$lang$applyTo;
G__9827.cljs$core$IFn$_invoke$arity$0 = G__9827__0;
G__9827.cljs$core$IFn$_invoke$arity$1 = G__9827__1;
G__9827.cljs$core$IFn$_invoke$arity$2 = G__9827__2;
G__9827.cljs$core$IFn$_invoke$arity$3 = G__9827__3;
G__9827.cljs$core$IFn$_invoke$arity$variadic = G__9827__4.cljs$core$IFn$_invoke$arity$variadic;
return G__9827;
})()
});
var juxt__3 = (function (f,g,h){
return (function() {
var G__9833 = null;
var G__9833__0 = (function (){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),(function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})(),(function (){return (h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null));
})()],null));
});
var G__9833__1 = (function (x){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__9797 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__9797) : f.call(null,G__9797));
})(),(function (){var G__9798 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__9798) : g.call(null,G__9798));
})(),(function (){var G__9799 = x;
return (h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(G__9799) : h.call(null,G__9799));
})()],null));
});
var G__9833__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__9800 = x;
var G__9801 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9800,G__9801) : f.call(null,G__9800,G__9801));
})(),(function (){var G__9802 = x;
var G__9803 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__9802,G__9803) : g.call(null,G__9802,G__9803));
})(),(function (){var G__9804 = x;
var G__9805 = y;
return (h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(G__9804,G__9805) : h.call(null,G__9804,G__9805));
})()],null));
});
var G__9833__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__9806 = x;
var G__9807 = y;
var G__9808 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__9806,G__9807,G__9808) : f.call(null,G__9806,G__9807,G__9808));
})(),(function (){var G__9809 = x;
var G__9810 = y;
var G__9811 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__9809,G__9810,G__9811) : g.call(null,G__9809,G__9810,G__9811));
})(),(function (){var G__9812 = x;
var G__9813 = y;
var G__9814 = z;
return (h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(G__9812,G__9813,G__9814) : h.call(null,G__9812,G__9813,G__9814));
})()],null));
});
var G__9833__4 = (function() { 
var G__9834__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h,x,y,z,args)],null));
};
var G__9834 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__9835__i = 0, G__9835__a = new Array(arguments.length -  3);
while (G__9835__i < G__9835__a.length) {G__9835__a[G__9835__i] = arguments[G__9835__i + 3]; ++G__9835__i;}
  args = new cljs.core.IndexedSeq(G__9835__a,0);
} 
return G__9834__delegate.call(this,x,y,z,args);};
G__9834.cljs$lang$maxFixedArity = 3;
G__9834.cljs$lang$applyTo = (function (arglist__9836){
var x = cljs.core.first(arglist__9836);
arglist__9836 = cljs.core.next(arglist__9836);
var y = cljs.core.first(arglist__9836);
arglist__9836 = cljs.core.next(arglist__9836);
var z = cljs.core.first(arglist__9836);
var args = cljs.core.rest(arglist__9836);
return G__9834__delegate(x,y,z,args);
});
G__9834.cljs$core$IFn$_invoke$arity$variadic = G__9834__delegate;
return G__9834;
})()
;
G__9833 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__9833__0.call(this);
case 1:
return G__9833__1.call(this,x);
case 2:
return G__9833__2.call(this,x,y);
case 3:
return G__9833__3.call(this,x,y,z);
default:
var G__9837 = null;
if (arguments.length > 3) {
var G__9838__i = 0, G__9838__a = new Array(arguments.length -  3);
while (G__9838__i < G__9838__a.length) {G__9838__a[G__9838__i] = arguments[G__9838__i + 3]; ++G__9838__i;}
G__9837 = new cljs.core.IndexedSeq(G__9838__a,0);
}
return G__9833__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__9837);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__9833.cljs$lang$maxFixedArity = 3;
G__9833.cljs$lang$applyTo = G__9833__4.cljs$lang$applyTo;
G__9833.cljs$core$IFn$_invoke$arity$0 = G__9833__0;
G__9833.cljs$core$IFn$_invoke$arity$1 = G__9833__1;
G__9833.cljs$core$IFn$_invoke$arity$2 = G__9833__2;
G__9833.cljs$core$IFn$_invoke$arity$3 = G__9833__3;
G__9833.cljs$core$IFn$_invoke$arity$variadic = G__9833__4.cljs$core$IFn$_invoke$arity$variadic;
return G__9833;
})()
});
var juxt__4 = (function() { 
var G__9839__delegate = function (f,g,h,fs){
var fs__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f,g,h,fs);
return ((function (fs__$1){
return (function() {
var G__9840 = null;
var G__9840__0 = (function (){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__9727_SHARP_,p2__9728_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__9727_SHARP_,(function (){return (p2__9728_SHARP_.cljs$core$IFn$_invoke$arity$0 ? p2__9728_SHARP_.cljs$core$IFn$_invoke$arity$0() : p2__9728_SHARP_.call(null));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__9840__1 = (function (x){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__9729_SHARP_,p2__9730_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__9729_SHARP_,(function (){var G__9815 = x;
return (p2__9730_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p2__9730_SHARP_.cljs$core$IFn$_invoke$arity$1(G__9815) : p2__9730_SHARP_.call(null,G__9815));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__9840__2 = (function (x,y){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__9731_SHARP_,p2__9732_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__9731_SHARP_,(function (){var G__9816 = x;
var G__9817 = y;
return (p2__9732_SHARP_.cljs$core$IFn$_invoke$arity$2 ? p2__9732_SHARP_.cljs$core$IFn$_invoke$arity$2(G__9816,G__9817) : p2__9732_SHARP_.call(null,G__9816,G__9817));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__9840__3 = (function (x,y,z){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__9733_SHARP_,p2__9734_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__9733_SHARP_,(function (){var G__9818 = x;
var G__9819 = y;
var G__9820 = z;
return (p2__9734_SHARP_.cljs$core$IFn$_invoke$arity$3 ? p2__9734_SHARP_.cljs$core$IFn$_invoke$arity$3(G__9818,G__9819,G__9820) : p2__9734_SHARP_.call(null,G__9818,G__9819,G__9820));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__9840__4 = (function() { 
var G__9841__delegate = function (x,y,z,args){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__9735_SHARP_,p2__9736_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__9735_SHARP_,cljs.core.apply.cljs$core$IFn$_invoke$arity$5(p2__9736_SHARP_,x,y,z,args));
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
};
var G__9841 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__9842__i = 0, G__9842__a = new Array(arguments.length -  3);
while (G__9842__i < G__9842__a.length) {G__9842__a[G__9842__i] = arguments[G__9842__i + 3]; ++G__9842__i;}
  args = new cljs.core.IndexedSeq(G__9842__a,0);
} 
return G__9841__delegate.call(this,x,y,z,args);};
G__9841.cljs$lang$maxFixedArity = 3;
G__9841.cljs$lang$applyTo = (function (arglist__9843){
var x = cljs.core.first(arglist__9843);
arglist__9843 = cljs.core.next(arglist__9843);
var y = cljs.core.first(arglist__9843);
arglist__9843 = cljs.core.next(arglist__9843);
var z = cljs.core.first(arglist__9843);
var args = cljs.core.rest(arglist__9843);
return G__9841__delegate(x,y,z,args);
});
G__9841.cljs$core$IFn$_invoke$arity$variadic = G__9841__delegate;
return G__9841;
})()
;
G__9840 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__9840__0.call(this);
case 1:
return G__9840__1.call(this,x);
case 2:
return G__9840__2.call(this,x,y);
case 3:
return G__9840__3.call(this,x,y,z);
default:
var G__9844 = null;
if (arguments.length > 3) {
var G__9845__i = 0, G__9845__a = new Array(arguments.length -  3);
while (G__9845__i < G__9845__a.length) {G__9845__a[G__9845__i] = arguments[G__9845__i + 3]; ++G__9845__i;}
G__9844 = new cljs.core.IndexedSeq(G__9845__a,0);
}
return G__9840__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__9844);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__9840.cljs$lang$maxFixedArity = 3;
G__9840.cljs$lang$applyTo = G__9840__4.cljs$lang$applyTo;
G__9840.cljs$core$IFn$_invoke$arity$0 = G__9840__0;
G__9840.cljs$core$IFn$_invoke$arity$1 = G__9840__1;
G__9840.cljs$core$IFn$_invoke$arity$2 = G__9840__2;
G__9840.cljs$core$IFn$_invoke$arity$3 = G__9840__3;
G__9840.cljs$core$IFn$_invoke$arity$variadic = G__9840__4.cljs$core$IFn$_invoke$arity$variadic;
return G__9840;
})()
;})(fs__$1))
};
var G__9839 = function (f,g,h,var_args){
var fs = null;
if (arguments.length > 3) {
var G__9846__i = 0, G__9846__a = new Array(arguments.length -  3);
while (G__9846__i < G__9846__a.length) {G__9846__a[G__9846__i] = arguments[G__9846__i + 3]; ++G__9846__i;}
  fs = new cljs.core.IndexedSeq(G__9846__a,0);
} 
return G__9839__delegate.call(this,f,g,h,fs);};
G__9839.cljs$lang$maxFixedArity = 3;
G__9839.cljs$lang$applyTo = (function (arglist__9847){
var f = cljs.core.first(arglist__9847);
arglist__9847 = cljs.core.next(arglist__9847);
var g = cljs.core.first(arglist__9847);
arglist__9847 = cljs.core.next(arglist__9847);
var h = cljs.core.first(arglist__9847);
var fs = cljs.core.rest(arglist__9847);
return G__9839__delegate(f,g,h,fs);
});
G__9839.cljs$core$IFn$_invoke$arity$variadic = G__9839__delegate;
return G__9839;
})()
;
juxt = function(f,g,h,var_args){
var fs = var_args;
switch(arguments.length){
case 1:
return juxt__1.call(this,f);
case 2:
return juxt__2.call(this,f,g);
case 3:
return juxt__3.call(this,f,g,h);
default:
var G__9848 = null;
if (arguments.length > 3) {
var G__9849__i = 0, G__9849__a = new Array(arguments.length -  3);
while (G__9849__i < G__9849__a.length) {G__9849__a[G__9849__i] = arguments[G__9849__i + 3]; ++G__9849__i;}
G__9848 = new cljs.core.IndexedSeq(G__9849__a,0);
}
return juxt__4.cljs$core$IFn$_invoke$arity$variadic(f,g,h, G__9848);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
juxt.cljs$lang$maxFixedArity = 3;
juxt.cljs$lang$applyTo = juxt__4.cljs$lang$applyTo;
juxt.cljs$core$IFn$_invoke$arity$1 = juxt__1;
juxt.cljs$core$IFn$_invoke$arity$2 = juxt__2;
juxt.cljs$core$IFn$_invoke$arity$3 = juxt__3;
juxt.cljs$core$IFn$_invoke$arity$variadic = juxt__4.cljs$core$IFn$_invoke$arity$variadic;
return juxt;
})()
;
/**
* When lazy sequences are produced via functions that have side
* effects, any effects other than those needed to produce the first
* element in the seq do not occur until the seq is consumed. dorun can
* be used to force any effects. Walks through the successive nexts of
* the seq, does not retain the head and returns nil.
*/
cljs.core.dorun = (function() {
var dorun = null;
var dorun__1 = (function (coll){
while(true){
if(cljs.core.seq(coll)){
var G__9850 = cljs.core.next(coll);
coll = G__9850;
continue;
} else {
return null;
}
break;
}
});
var dorun__2 = (function (n,coll){
while(true){
if((cljs.core.seq(coll)) && ((n > (0)))){
var G__9851 = (n - (1));
var G__9852 = cljs.core.next(coll);
n = G__9851;
coll = G__9852;
continue;
} else {
return null;
}
break;
}
});
dorun = function(n,coll){
switch(arguments.length){
case 1:
return dorun__1.call(this,n);
case 2:
return dorun__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dorun.cljs$core$IFn$_invoke$arity$1 = dorun__1;
dorun.cljs$core$IFn$_invoke$arity$2 = dorun__2;
return dorun;
})()
;
/**
* When lazy sequences are produced via functions that have side
* effects, any effects other than those needed to produce the first
* element in the seq do not occur until the seq is consumed. doall can
* be used to force any effects. Walks through the successive nexts of
* the seq, retains the head and returns it, thus causing the entire
* seq to reside in memory at one time.
*/
cljs.core.doall = (function() {
var doall = null;
var doall__1 = (function (coll){
cljs.core.dorun.cljs$core$IFn$_invoke$arity$1(coll);

return coll;
});
var doall__2 = (function (n,coll){
cljs.core.dorun.cljs$core$IFn$_invoke$arity$2(n,coll);

return coll;
});
doall = function(n,coll){
switch(arguments.length){
case 1:
return doall__1.call(this,n);
case 2:
return doall__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
doall.cljs$core$IFn$_invoke$arity$1 = doall__1;
doall.cljs$core$IFn$_invoke$arity$2 = doall__2;
return doall;
})()
;
cljs.core.regexp_QMARK_ = (function regexp_QMARK_(o){
return (o instanceof RegExp);
});
/**
* Returns the result of (re-find re s) if re fully matches s.
*/
cljs.core.re_matches = (function re_matches(re,s){
if(typeof s === 'string'){
var matches = re.exec(s);
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(matches),s)){
if((cljs.core.count(matches) === (1))){
return cljs.core.first(matches);
} else {
return cljs.core.vec(matches);
}
} else {
return null;
}
} else {
throw (new TypeError("re-matches must match against a string."));
}
});
/**
* Returns the first regex match, if any, of s to re, using
* re.exec(s). Returns a vector, containing first the matching
* substring, then any capturing groups if the regular expression contains
* capturing groups.
*/
cljs.core.re_find = (function re_find(re,s){
if(typeof s === 'string'){
var matches = re.exec(s);
if((matches == null)){
return null;
} else {
if((cljs.core.count(matches) === (1))){
return cljs.core.first(matches);
} else {
return cljs.core.vec(matches);
}
}
} else {
throw (new TypeError("re-find must match against a string."));
}
});
/**
* Returns a lazy sequence of successive matches of re in s.
*/
cljs.core.re_seq = (function re_seq(re,s){
var match_data = cljs.core.re_find(re,s);
var match_idx = s.search(re);
var match_str = ((cljs.core.coll_QMARK_(match_data))?cljs.core.first(match_data):match_data);
var post_match = cljs.core.subs.cljs$core$IFn$_invoke$arity$2(s,(match_idx + cljs.core.count(match_str)));
if(cljs.core.truth_(match_data)){
return (new cljs.core.LazySeq(null,((function (match_data,match_idx,match_str,post_match){
return (function (){
return cljs.core.cons(match_data,((cljs.core.seq(post_match))?re_seq(re,post_match):null));
});})(match_data,match_idx,match_str,post_match))
,null,null));
} else {
return null;
}
});
/**
* Returns an instance of RegExp which has compiled the provided string.
*/
cljs.core.re_pattern = (function re_pattern(s){
if((s instanceof RegExp)){
return s;
} else {
var vec__9856 = cljs.core.re_find(/^(?:\(\?([idmsux]*)\))?(.*)/,s);
var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9856,(0),null);
var flags = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9856,(1),null);
var pattern = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9856,(2),null);
return (new RegExp(pattern,flags));
}
});
cljs.core.pr_sequential_writer = (function pr_sequential_writer(writer,print_one,begin,sep,end,opts,coll){
var _STAR_print_level_STAR_9864 = cljs.core._STAR_print_level_STAR_;
try{cljs.core._STAR_print_level_STAR_ = (((cljs.core._STAR_print_level_STAR_ == null))?null:(cljs.core._STAR_print_level_STAR_ - (1)));

if((!((cljs.core._STAR_print_level_STAR_ == null))) && ((cljs.core._STAR_print_level_STAR_ < (0)))){
return cljs.core._write(writer,"#");
} else {
cljs.core._write(writer,begin);

if(cljs.core.seq(coll)){
var G__9865_9871 = cljs.core.first(coll);
var G__9866_9872 = writer;
var G__9867_9873 = opts;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__9865_9871,G__9866_9872,G__9867_9873) : print_one.call(null,G__9865_9871,G__9866_9872,G__9867_9873));
} else {
}

var coll_9874__$1 = cljs.core.next(coll);
var n_9875 = (new cljs.core.Keyword(null,"print-length","print-length",1931866356).cljs$core$IFn$_invoke$arity$1(opts) - (1));
while(true){
if((coll_9874__$1) && (((n_9875 == null)) || (!((n_9875 === (0)))))){
cljs.core._write(writer,sep);

var G__9868_9876 = cljs.core.first(coll_9874__$1);
var G__9869_9877 = writer;
var G__9870_9878 = opts;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__9868_9876,G__9869_9877,G__9870_9878) : print_one.call(null,G__9868_9876,G__9869_9877,G__9870_9878));

var G__9879 = cljs.core.next(coll_9874__$1);
var G__9880 = (n_9875 - (1));
coll_9874__$1 = G__9879;
n_9875 = G__9880;
continue;
} else {
if((cljs.core.seq(coll_9874__$1)) && ((n_9875 === (0)))){
cljs.core._write(writer,sep);

cljs.core._write(writer,"...");
} else {
}
}
break;
}

return cljs.core._write(writer,end);
}
}finally {cljs.core._STAR_print_level_STAR_ = _STAR_print_level_STAR_9864;
}});
/**
* @param {...*} var_args
*/
cljs.core.write_all = (function() { 
var write_all__delegate = function (writer,ss){
var seq__9885 = cljs.core.seq(ss);
var chunk__9886 = null;
var count__9887 = (0);
var i__9888 = (0);
while(true){
if((i__9888 < count__9887)){
var s = chunk__9886.cljs$core$IIndexed$_nth$arity$2(null,i__9888);
cljs.core._write(writer,s);

var G__9889 = seq__9885;
var G__9890 = chunk__9886;
var G__9891 = count__9887;
var G__9892 = (i__9888 + (1));
seq__9885 = G__9889;
chunk__9886 = G__9890;
count__9887 = G__9891;
i__9888 = G__9892;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__9885);
if(temp__4126__auto__){
var seq__9885__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__9885__$1)){
var c__4519__auto__ = cljs.core.chunk_first(seq__9885__$1);
var G__9893 = cljs.core.chunk_rest(seq__9885__$1);
var G__9894 = c__4519__auto__;
var G__9895 = cljs.core.count(c__4519__auto__);
var G__9896 = (0);
seq__9885 = G__9893;
chunk__9886 = G__9894;
count__9887 = G__9895;
i__9888 = G__9896;
continue;
} else {
var s = cljs.core.first(seq__9885__$1);
cljs.core._write(writer,s);

var G__9897 = cljs.core.next(seq__9885__$1);
var G__9898 = null;
var G__9899 = (0);
var G__9900 = (0);
seq__9885 = G__9897;
chunk__9886 = G__9898;
count__9887 = G__9899;
i__9888 = G__9900;
continue;
}
} else {
return null;
}
}
break;
}
};
var write_all = function (writer,var_args){
var ss = null;
if (arguments.length > 1) {
var G__9901__i = 0, G__9901__a = new Array(arguments.length -  1);
while (G__9901__i < G__9901__a.length) {G__9901__a[G__9901__i] = arguments[G__9901__i + 1]; ++G__9901__i;}
  ss = new cljs.core.IndexedSeq(G__9901__a,0);
} 
return write_all__delegate.call(this,writer,ss);};
write_all.cljs$lang$maxFixedArity = 1;
write_all.cljs$lang$applyTo = (function (arglist__9902){
var writer = cljs.core.first(arglist__9902);
var ss = cljs.core.rest(arglist__9902);
return write_all__delegate(writer,ss);
});
write_all.cljs$core$IFn$_invoke$arity$variadic = write_all__delegate;
return write_all;
})()
;
cljs.core.string_print = (function string_print(x){
(cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1 ? cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1(x) : cljs.core._STAR_print_fn_STAR_.call(null,x));

return null;
});
cljs.core.flush = (function flush(){
return null;
});
cljs.core.char_escapes = (function (){var obj9904 = {"\"":"\\\"","\\":"\\\\","\b":"\\b","\f":"\\f","\n":"\\n","\r":"\\r","\t":"\\t"};
return obj9904;
})();
cljs.core.quote_string = (function quote_string(s){
return [cljs.core.str("\""),cljs.core.str(s.replace((function (){var G__9907 = "[\\\\\"\b\f\n\r\t]";
var G__9908 = "g";
return RegExp(G__9907,G__9908);
})(),(function (match){
return (cljs.core.char_escapes[match]);
}))),cljs.core.str("\"")].join('');
});
/**
* Prefer this to pr-seq, because it makes the printing function
* configurable, allowing efficient implementations such as appending
* to a StringBuffer.
*/
cljs.core.pr_writer = (function pr_writer(obj,writer,opts){
if((obj == null)){
return cljs.core._write(writer,"nil");
} else {
if((void 0 === obj)){
return cljs.core._write(writer,"#<undefined>");
} else {
if(cljs.core.truth_((function (){var and__3720__auto__ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts,new cljs.core.Keyword(null,"meta","meta",1499536964));
if(cljs.core.truth_(and__3720__auto__)){
var and__3720__auto____$1 = (function (){var G__9922 = obj;
if(G__9922){
var bit__4413__auto__ = (G__9922.cljs$lang$protocol_mask$partition0$ & (131072));
if((bit__4413__auto__) || (G__9922.cljs$core$IMeta$)){
return true;
} else {
if((!G__9922.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__9922);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__9922);
}
})();
if(and__3720__auto____$1){
return cljs.core.meta(obj);
} else {
return and__3720__auto____$1;
}
} else {
return and__3720__auto__;
}
})())){
cljs.core._write(writer,"^");

pr_writer(cljs.core.meta(obj),writer,opts);

cljs.core._write(writer," ");
} else {
}

if((obj == null)){
return cljs.core._write(writer,"nil");
} else {
if(obj.cljs$lang$type){
return obj.cljs$lang$ctorPrWriter(obj,writer,opts);
} else {
if((function (){var G__9923 = obj;
if(G__9923){
var bit__4406__auto__ = (G__9923.cljs$lang$protocol_mask$partition0$ & (2147483648));
if((bit__4406__auto__) || (G__9923.cljs$core$IPrintWithWriter$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null,writer,opts);
} else {
if(((cljs.core.type(obj) === Boolean)) || (typeof obj === 'number')){
return cljs.core._write(writer,[cljs.core.str(obj)].join(''));
} else {
if(cljs.core.object_QMARK_(obj)){
cljs.core._write(writer,"#js ");

var G__9924 = cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (k){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.cljs$core$IFn$_invoke$arity$1(k),(obj[k])], null);
}),cljs.core.js_keys(obj));
var G__9925 = pr_writer;
var G__9926 = writer;
var G__9927 = opts;
return (cljs.core.print_map.cljs$core$IFn$_invoke$arity$4 ? cljs.core.print_map.cljs$core$IFn$_invoke$arity$4(G__9924,G__9925,G__9926,G__9927) : cljs.core.print_map.call(null,G__9924,G__9925,G__9926,G__9927));
} else {
if(obj instanceof Array){
return cljs.core.pr_sequential_writer(writer,pr_writer,"#js ["," ","]",opts,obj);
} else {
if(cljs.core.truth_((function (){var G__9928 = obj;
return goog.isString(G__9928);
})())){
if(cljs.core.truth_(new cljs.core.Keyword(null,"readably","readably",1129599760).cljs$core$IFn$_invoke$arity$1(opts))){
return cljs.core._write(writer,cljs.core.quote_string(obj));
} else {
return cljs.core._write(writer,obj);
}
} else {
if(cljs.core.fn_QMARK_(obj)){
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#<",[cljs.core.str(obj)].join(''),">"], 0));
} else {
if((obj instanceof Date)){
var normalize = (function (n,len){
var ns = [cljs.core.str(n)].join('');
while(true){
if((cljs.core.count(ns) < len)){
var G__9930 = [cljs.core.str("0"),cljs.core.str(ns)].join('');
ns = G__9930;
continue;
} else {
return ns;
}
break;
}
});
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#inst \"",[cljs.core.str(obj.getUTCFullYear())].join(''),"-",normalize((obj.getUTCMonth() + (1)),(2)),"-",normalize(obj.getUTCDate(),(2)),"T",normalize(obj.getUTCHours(),(2)),":",normalize(obj.getUTCMinutes(),(2)),":",normalize(obj.getUTCSeconds(),(2)),".",normalize(obj.getUTCMilliseconds(),(3)),"-","00:00\""], 0));
} else {
if(cljs.core.regexp_QMARK_(obj)){
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#\"",obj.source,"\""], 0));
} else {
if((function (){var G__9929 = obj;
if(G__9929){
var bit__4413__auto__ = (G__9929.cljs$lang$protocol_mask$partition0$ & (2147483648));
if((bit__4413__auto__) || (G__9929.cljs$core$IPrintWithWriter$)){
return true;
} else {
if((!G__9929.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IPrintWithWriter,G__9929);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IPrintWithWriter,G__9929);
}
})()){
return cljs.core._pr_writer(obj,writer,opts);
} else {
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#<",[cljs.core.str(obj)].join(''),">"], 0));

}
}
}
}
}
}
}
}
}
}
}

}
}
});
cljs.core.pr_seq_writer = (function pr_seq_writer(objs,writer,opts){
cljs.core.pr_writer(cljs.core.first(objs),writer,opts);

var seq__9935 = cljs.core.seq(cljs.core.next(objs));
var chunk__9936 = null;
var count__9937 = (0);
var i__9938 = (0);
while(true){
if((i__9938 < count__9937)){
var obj = chunk__9936.cljs$core$IIndexed$_nth$arity$2(null,i__9938);
cljs.core._write(writer," ");

cljs.core.pr_writer(obj,writer,opts);

var G__9939 = seq__9935;
var G__9940 = chunk__9936;
var G__9941 = count__9937;
var G__9942 = (i__9938 + (1));
seq__9935 = G__9939;
chunk__9936 = G__9940;
count__9937 = G__9941;
i__9938 = G__9942;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__9935);
if(temp__4126__auto__){
var seq__9935__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__9935__$1)){
var c__4519__auto__ = cljs.core.chunk_first(seq__9935__$1);
var G__9943 = cljs.core.chunk_rest(seq__9935__$1);
var G__9944 = c__4519__auto__;
var G__9945 = cljs.core.count(c__4519__auto__);
var G__9946 = (0);
seq__9935 = G__9943;
chunk__9936 = G__9944;
count__9937 = G__9945;
i__9938 = G__9946;
continue;
} else {
var obj = cljs.core.first(seq__9935__$1);
cljs.core._write(writer," ");

cljs.core.pr_writer(obj,writer,opts);

var G__9947 = cljs.core.next(seq__9935__$1);
var G__9948 = null;
var G__9949 = (0);
var G__9950 = (0);
seq__9935 = G__9947;
chunk__9936 = G__9948;
count__9937 = G__9949;
i__9938 = G__9950;
continue;
}
} else {
return null;
}
}
break;
}
});
cljs.core.pr_sb_with_opts = (function pr_sb_with_opts(objs,opts){
var sb = (new goog.string.StringBuffer());
var writer = (new cljs.core.StringBufferWriter(sb));
cljs.core.pr_seq_writer(objs,writer,opts);

writer.cljs$core$IWriter$_flush$arity$1(null);

return sb;
});
/**
* Prints a sequence of objects to a string, observing all the
* options given in opts
*/
cljs.core.pr_str_with_opts = (function pr_str_with_opts(objs,opts){
if(cljs.core.empty_QMARK_(objs)){
return "";
} else {
return [cljs.core.str(cljs.core.pr_sb_with_opts(objs,opts))].join('');
}
});
/**
* Same as pr-str-with-opts followed by (newline)
*/
cljs.core.prn_str_with_opts = (function prn_str_with_opts(objs,opts){
if(cljs.core.empty_QMARK_(objs)){
return "\n";
} else {
var sb = cljs.core.pr_sb_with_opts(objs,opts);
sb.append("\n");

return [cljs.core.str(sb)].join('');
}
});
/**
* Prints a sequence of objects using string-print, observing all
* the options given in opts
*/
cljs.core.pr_with_opts = (function pr_with_opts(objs,opts){
return cljs.core.string_print(cljs.core.pr_str_with_opts(objs,opts));
});
cljs.core.newline = (function newline(opts){
cljs.core.string_print("\n");

if(cljs.core.truth_(cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts,new cljs.core.Keyword(null,"flush-on-newline","flush-on-newline",-151457939)))){
return cljs.core.flush();
} else {
return null;
}
});
/**
* pr to a string, returning it. Fundamental entrypoint to IPrintWithWriter.
* @param {...*} var_args
*/
cljs.core.pr_str = (function() { 
var pr_str__delegate = function (objs){
return cljs.core.pr_str_with_opts(objs,cljs.core.pr_opts());
};
var pr_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__9951__i = 0, G__9951__a = new Array(arguments.length -  0);
while (G__9951__i < G__9951__a.length) {G__9951__a[G__9951__i] = arguments[G__9951__i + 0]; ++G__9951__i;}
  objs = new cljs.core.IndexedSeq(G__9951__a,0);
} 
return pr_str__delegate.call(this,objs);};
pr_str.cljs$lang$maxFixedArity = 0;
pr_str.cljs$lang$applyTo = (function (arglist__9952){
var objs = cljs.core.seq(arglist__9952);
return pr_str__delegate(objs);
});
pr_str.cljs$core$IFn$_invoke$arity$variadic = pr_str__delegate;
return pr_str;
})()
;
/**
* Same as pr-str followed by (newline)
* @param {...*} var_args
*/
cljs.core.prn_str = (function() { 
var prn_str__delegate = function (objs){
return cljs.core.prn_str_with_opts(objs,cljs.core.pr_opts());
};
var prn_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__9953__i = 0, G__9953__a = new Array(arguments.length -  0);
while (G__9953__i < G__9953__a.length) {G__9953__a[G__9953__i] = arguments[G__9953__i + 0]; ++G__9953__i;}
  objs = new cljs.core.IndexedSeq(G__9953__a,0);
} 
return prn_str__delegate.call(this,objs);};
prn_str.cljs$lang$maxFixedArity = 0;
prn_str.cljs$lang$applyTo = (function (arglist__9954){
var objs = cljs.core.seq(arglist__9954);
return prn_str__delegate(objs);
});
prn_str.cljs$core$IFn$_invoke$arity$variadic = prn_str__delegate;
return prn_str;
})()
;
/**
* Prints the object(s) using string-print.  Prints the
* object(s), separated by spaces if there is more than one.
* By default, pr and prn print in a way that objects can be
* read by the reader
* @param {...*} var_args
*/
cljs.core.pr = (function() { 
var pr__delegate = function (objs){
return cljs.core.pr_with_opts(objs,cljs.core.pr_opts());
};
var pr = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__9955__i = 0, G__9955__a = new Array(arguments.length -  0);
while (G__9955__i < G__9955__a.length) {G__9955__a[G__9955__i] = arguments[G__9955__i + 0]; ++G__9955__i;}
  objs = new cljs.core.IndexedSeq(G__9955__a,0);
} 
return pr__delegate.call(this,objs);};
pr.cljs$lang$maxFixedArity = 0;
pr.cljs$lang$applyTo = (function (arglist__9956){
var objs = cljs.core.seq(arglist__9956);
return pr__delegate(objs);
});
pr.cljs$core$IFn$_invoke$arity$variadic = pr__delegate;
return pr;
})()
;
/**
* Prints the object(s) using string-print.
* print and println produce output for human consumption.
* @param {...*} var_args
*/
cljs.core.print = (function() { 
var cljs_core_print__delegate = function (objs){
return cljs.core.pr_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));
};
var cljs_core_print = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__9957__i = 0, G__9957__a = new Array(arguments.length -  0);
while (G__9957__i < G__9957__a.length) {G__9957__a[G__9957__i] = arguments[G__9957__i + 0]; ++G__9957__i;}
  objs = new cljs.core.IndexedSeq(G__9957__a,0);
} 
return cljs_core_print__delegate.call(this,objs);};
cljs_core_print.cljs$lang$maxFixedArity = 0;
cljs_core_print.cljs$lang$applyTo = (function (arglist__9958){
var objs = cljs.core.seq(arglist__9958);
return cljs_core_print__delegate(objs);
});
cljs_core_print.cljs$core$IFn$_invoke$arity$variadic = cljs_core_print__delegate;
return cljs_core_print;
})()
;
/**
* print to a string, returning it
* @param {...*} var_args
*/
cljs.core.print_str = (function() { 
var print_str__delegate = function (objs){
return cljs.core.pr_str_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));
};
var print_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__9959__i = 0, G__9959__a = new Array(arguments.length -  0);
while (G__9959__i < G__9959__a.length) {G__9959__a[G__9959__i] = arguments[G__9959__i + 0]; ++G__9959__i;}
  objs = new cljs.core.IndexedSeq(G__9959__a,0);
} 
return print_str__delegate.call(this,objs);};
print_str.cljs$lang$maxFixedArity = 0;
print_str.cljs$lang$applyTo = (function (arglist__9960){
var objs = cljs.core.seq(arglist__9960);
return print_str__delegate(objs);
});
print_str.cljs$core$IFn$_invoke$arity$variadic = print_str__delegate;
return print_str;
})()
;
/**
* Same as print followed by (newline)
* @param {...*} var_args
*/
cljs.core.println = (function() { 
var println__delegate = function (objs){
cljs.core.pr_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));

if(cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)){
return cljs.core.newline(cljs.core.pr_opts());
} else {
return null;
}
};
var println = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__9961__i = 0, G__9961__a = new Array(arguments.length -  0);
while (G__9961__i < G__9961__a.length) {G__9961__a[G__9961__i] = arguments[G__9961__i + 0]; ++G__9961__i;}
  objs = new cljs.core.IndexedSeq(G__9961__a,0);
} 
return println__delegate.call(this,objs);};
println.cljs$lang$maxFixedArity = 0;
println.cljs$lang$applyTo = (function (arglist__9962){
var objs = cljs.core.seq(arglist__9962);
return println__delegate(objs);
});
println.cljs$core$IFn$_invoke$arity$variadic = println__delegate;
return println;
})()
;
/**
* println to a string, returning it
* @param {...*} var_args
*/
cljs.core.println_str = (function() { 
var println_str__delegate = function (objs){
return cljs.core.prn_str_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));
};
var println_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__9963__i = 0, G__9963__a = new Array(arguments.length -  0);
while (G__9963__i < G__9963__a.length) {G__9963__a[G__9963__i] = arguments[G__9963__i + 0]; ++G__9963__i;}
  objs = new cljs.core.IndexedSeq(G__9963__a,0);
} 
return println_str__delegate.call(this,objs);};
println_str.cljs$lang$maxFixedArity = 0;
println_str.cljs$lang$applyTo = (function (arglist__9964){
var objs = cljs.core.seq(arglist__9964);
return println_str__delegate(objs);
});
println_str.cljs$core$IFn$_invoke$arity$variadic = println_str__delegate;
return println_str;
})()
;
/**
* Same as pr followed by (newline).
* @param {...*} var_args
*/
cljs.core.prn = (function() { 
var prn__delegate = function (objs){
cljs.core.pr_with_opts(objs,cljs.core.pr_opts());

if(cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)){
return cljs.core.newline(cljs.core.pr_opts());
} else {
return null;
}
};
var prn = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__9965__i = 0, G__9965__a = new Array(arguments.length -  0);
while (G__9965__i < G__9965__a.length) {G__9965__a[G__9965__i] = arguments[G__9965__i + 0]; ++G__9965__i;}
  objs = new cljs.core.IndexedSeq(G__9965__a,0);
} 
return prn__delegate.call(this,objs);};
prn.cljs$lang$maxFixedArity = 0;
prn.cljs$lang$applyTo = (function (arglist__9966){
var objs = cljs.core.seq(arglist__9966);
return prn__delegate(objs);
});
prn.cljs$core$IFn$_invoke$arity$variadic = prn__delegate;
return prn;
})()
;
cljs.core.print_map = (function print_map(m,print_one,writer,opts){
return cljs.core.pr_sequential_writer(writer,(function (e,w,opts__$1){
var G__9973_9979 = cljs.core.key(e);
var G__9974_9980 = w;
var G__9975_9981 = opts__$1;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__9973_9979,G__9974_9980,G__9975_9981) : print_one.call(null,G__9973_9979,G__9974_9980,G__9975_9981));

cljs.core._write(w," ");

var G__9976 = cljs.core.val(e);
var G__9977 = w;
var G__9978 = opts__$1;
return (print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__9976,G__9977,G__9978) : print_one.call(null,G__9976,G__9977,G__9978));
}),"{",", ","}",opts,cljs.core.seq(m));
});
cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#<Volatile: ");

cljs.core.pr_writer(a__$1.state,writer,opts);

return cljs.core._write(writer,">");
});

cljs.core.Var.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Var.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#'");

return cljs.core.pr_writer(a__$1.sym,writer,opts);
});

cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#{"," ","}",opts,coll__$1);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#{"," ","}",opts,coll__$1);
});

cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#<Atom: ");

cljs.core.pr_writer(a__$1.state,writer,opts);

return cljs.core._write(writer,">");
});

cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core._write(writer,"()");
});

cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#queue ["," ","]",opts,cljs.core.seq(coll__$1));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.Range.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Range.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.List.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.List.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});
cljs.core.PersistentVector.prototype.cljs$core$IComparable$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1,y);
});

cljs.core.Subvec.prototype.cljs$core$IComparable$ = true;

cljs.core.Subvec.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1,y);
});

cljs.core.Keyword.prototype.cljs$core$IComparable$ = true;

cljs.core.Keyword.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_keywords(x__$1,y);
});

cljs.core.Symbol.prototype.cljs$core$IComparable$ = true;

cljs.core.Symbol.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_symbols(x__$1,y);
});
/**
* Atomically sets the metadata for a namespace/var/ref/agent/atom to be:
* 
* (apply f its-current-meta args)
* 
* f must be free of side-effects
* @param {...*} var_args
*/
cljs.core.alter_meta_BANG_ = (function() { 
var alter_meta_BANG___delegate = function (iref,f,args){
return iref.meta = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f,iref.meta,args);
};
var alter_meta_BANG_ = function (iref,f,var_args){
var args = null;
if (arguments.length > 2) {
var G__9982__i = 0, G__9982__a = new Array(arguments.length -  2);
while (G__9982__i < G__9982__a.length) {G__9982__a[G__9982__i] = arguments[G__9982__i + 2]; ++G__9982__i;}
  args = new cljs.core.IndexedSeq(G__9982__a,0);
} 
return alter_meta_BANG___delegate.call(this,iref,f,args);};
alter_meta_BANG_.cljs$lang$maxFixedArity = 2;
alter_meta_BANG_.cljs$lang$applyTo = (function (arglist__9983){
var iref = cljs.core.first(arglist__9983);
arglist__9983 = cljs.core.next(arglist__9983);
var f = cljs.core.first(arglist__9983);
var args = cljs.core.rest(arglist__9983);
return alter_meta_BANG___delegate(iref,f,args);
});
alter_meta_BANG_.cljs$core$IFn$_invoke$arity$variadic = alter_meta_BANG___delegate;
return alter_meta_BANG_;
})()
;
/**
* Atomically resets the metadata for an atom
*/
cljs.core.reset_meta_BANG_ = (function reset_meta_BANG_(iref,m){
return iref.meta = m;
});
/**
* Alpha - subject to change.
* 
* Adds a watch function to an atom reference. The watch fn must be a
* fn of 4 args: a key, the reference, its old-state, its
* new-state. Whenever the reference's state might have been changed,
* any registered watches will have their functions called. The watch
* fn will be called synchronously. Note that an atom's state
* may have changed again prior to the fn call, so use old/new-state
* rather than derefing the reference. Keys must be unique per
* reference, and can be used to remove the watch with remove-watch,
* but are otherwise considered opaque by the watch mechanism.  Bear in
* mind that regardless of the result or action of the watch fns the
* atom's value will change.  Example:
* 
* (def a (atom 0))
* (add-watch a :inc (fn [k r o n] (assert (== 0 n))))
* (swap! a inc)
* ;; Assertion Error
* (deref a)
* ;=> 1
*/
cljs.core.add_watch = (function add_watch(iref,key,f){
cljs.core._add_watch(iref,key,f);

return iref;
});
/**
* Alpha - subject to change.
* 
* Removes a watch (set by add-watch) from a reference
*/
cljs.core.remove_watch = (function remove_watch(iref,key){
cljs.core._remove_watch(iref,key);

return iref;
});
cljs.core.gensym_counter = null;
/**
* Returns a new symbol with a unique name. If a prefix string is
* supplied, the name is prefix# where # is some unique number. If
* prefix is not supplied, the prefix is 'G__'.
*/
cljs.core.gensym = (function() {
var gensym = null;
var gensym__0 = (function (){
return gensym.cljs$core$IFn$_invoke$arity$1("G__");
});
var gensym__1 = (function (prefix_string){
if((cljs.core.gensym_counter == null)){
cljs.core.gensym_counter = (function (){var G__9986 = (0);
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__9986) : cljs.core.atom.call(null,G__9986));
})();
} else {
}

return cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([cljs.core.str(prefix_string),cljs.core.str(cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cljs.core.gensym_counter,cljs.core.inc))].join(''));
});
gensym = function(prefix_string){
switch(arguments.length){
case 0:
return gensym__0.call(this);
case 1:
return gensym__1.call(this,prefix_string);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
gensym.cljs$core$IFn$_invoke$arity$0 = gensym__0;
gensym.cljs$core$IFn$_invoke$arity$1 = gensym__1;
return gensym;
})()
;
cljs.core.fixture1 = (1);
cljs.core.fixture2 = (2);

/**
* @constructor
*/
cljs.core.Delay = (function (f,value){
this.f = f;
this.value = value;
this.cljs$lang$protocol_mask$partition1$ = 1;
this.cljs$lang$protocol_mask$partition0$ = 32768;
})
cljs.core.Delay.prototype.cljs$core$IPending$_realized_QMARK_$arity$1 = (function (d){
var self__ = this;
var d__$1 = this;
return cljs.core.not(self__.f);
});

cljs.core.Delay.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(cljs.core.truth_(self__.f)){
self__.value = (function (){return (self__.f.cljs$core$IFn$_invoke$arity$0 ? self__.f.cljs$core$IFn$_invoke$arity$0() : self__.f.call(null));
})();

self__.f = null;
} else {
}

return self__.value;
});

cljs.core.Delay.cljs$lang$type = true;

cljs.core.Delay.cljs$lang$ctorStr = "cljs.core/Delay";

cljs.core.Delay.cljs$lang$ctorPrWriter = (function (this__4319__auto__,writer__4320__auto__,opt__4321__auto__){
return cljs.core._write(writer__4320__auto__,"cljs.core/Delay");
});

cljs.core.__GT_Delay = (function __GT_Delay(f,value){
return (new cljs.core.Delay(f,value));
});

/**
* returns true if x is a Delay created with delay
*/
cljs.core.delay_QMARK_ = (function delay_QMARK_(x){
return (x instanceof cljs.core.Delay);
});
/**
* If x is a Delay, returns the (possibly cached) value of its expression, else returns x
*/
cljs.core.force = (function force(x){
if(cljs.core.delay_QMARK_(x)){
var G__9988 = x;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__9988) : cljs.core.deref.call(null,G__9988));
} else {
return x;
}
});
/**
* Returns true if a value has been produced for a promise, delay, future or lazy sequence.
*/
cljs.core.realized_QMARK_ = (function realized_QMARK_(d){
return cljs.core._realized_QMARK_(d);
});
cljs.core.preserving_reduced = (function preserving_reduced(rf){
return (function (p1__9989_SHARP_,p2__9990_SHARP_){
var ret = (function (){var G__9993 = p1__9989_SHARP_;
var G__9994 = p2__9990_SHARP_;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__9993,G__9994) : rf.call(null,G__9993,G__9994));
})();
if(cljs.core.reduced_QMARK_(ret)){
return cljs.core.reduced(ret);
} else {
return ret;
}
});
});
/**
* A transducer which concatenates the contents of each input, which must be a
* collection, into the reduction.
*/
cljs.core.cat = (function cat(rf){
var rf1 = cljs.core.preserving_reduced(rf);
return ((function (rf1){
return (function() {
var G__9997 = null;
var G__9997__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__9997__1 = (function (result){
var G__9996 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__9996) : rf.call(null,G__9996));
});
var G__9997__2 = (function (result,input){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(rf1,result,input);
});
G__9997 = function(result,input){
switch(arguments.length){
case 0:
return G__9997__0.call(this);
case 1:
return G__9997__1.call(this,result);
case 2:
return G__9997__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__9997.cljs$core$IFn$_invoke$arity$0 = G__9997__0;
G__9997.cljs$core$IFn$_invoke$arity$1 = G__9997__1;
G__9997.cljs$core$IFn$_invoke$arity$2 = G__9997__2;
return G__9997;
})()
;})(rf1))
});
/**
* Returns a lazy sequence removing consecutive duplicates in coll.
* Returns a transducer when no collection is provided.
*/
cljs.core.dedupe = (function() {
var dedupe = null;
var dedupe__0 = (function (){
return (function (rf){
var pa = cljs.core.volatile_BANG_(new cljs.core.Keyword("cljs.core","none","cljs.core/none",926646439));
return ((function (pa){
return (function() {
var G__10006 = null;
var G__10006__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__10006__1 = (function (result){
var G__10002 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__10002) : rf.call(null,G__10002));
});
var G__10006__2 = (function (result,input){
var prior = (function (){var G__10003 = pa;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10003) : cljs.core.deref.call(null,G__10003));
})();
cljs.core.vreset_BANG_(pa,input);

if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(prior,input)){
return result;
} else {
var G__10004 = result;
var G__10005 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__10004,G__10005) : rf.call(null,G__10004,G__10005));
}
});
G__10006 = function(result,input){
switch(arguments.length){
case 0:
return G__10006__0.call(this);
case 1:
return G__10006__1.call(this,result);
case 2:
return G__10006__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__10006.cljs$core$IFn$_invoke$arity$0 = G__10006__0;
G__10006.cljs$core$IFn$_invoke$arity$1 = G__10006__1;
G__10006.cljs$core$IFn$_invoke$arity$2 = G__10006__2;
return G__10006;
})()
;})(pa))
});
});
var dedupe__1 = (function (coll){
return cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(dedupe.cljs$core$IFn$_invoke$arity$0(),coll);
});
dedupe = function(coll){
switch(arguments.length){
case 0:
return dedupe__0.call(this);
case 1:
return dedupe__1.call(this,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dedupe.cljs$core$IFn$_invoke$arity$0 = dedupe__0;
dedupe.cljs$core$IFn$_invoke$arity$1 = dedupe__1;
return dedupe;
})()
;
/**
* Returns items from coll with random probability of prob (0.0 -
* 1.0).  Returns a transducer when no collection is provided.
*/
cljs.core.random_sample = (function() {
var random_sample = null;
var random_sample__1 = (function (prob){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$1((function (_){
return ((function (){return (cljs.core.rand.cljs$core$IFn$_invoke$arity$0 ? cljs.core.rand.cljs$core$IFn$_invoke$arity$0() : cljs.core.rand.call(null));
})() < prob);
}));
});
var random_sample__2 = (function (prob,coll){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2((function (_){
return ((function (){return (cljs.core.rand.cljs$core$IFn$_invoke$arity$0 ? cljs.core.rand.cljs$core$IFn$_invoke$arity$0() : cljs.core.rand.call(null));
})() < prob);
}),coll);
});
random_sample = function(prob,coll){
switch(arguments.length){
case 1:
return random_sample__1.call(this,prob);
case 2:
return random_sample__2.call(this,prob,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
random_sample.cljs$core$IFn$_invoke$arity$1 = random_sample__1;
random_sample.cljs$core$IFn$_invoke$arity$2 = random_sample__2;
return random_sample;
})()
;

/**
* @constructor
*/
cljs.core.Eduction = (function (xform,coll){
this.xform = xform;
this.coll = coll;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2173173760;
})
cljs.core.Eduction.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll__$1,writer,opts){
var self__ = this;
var coll__$2 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$2);
});

cljs.core.Eduction.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (_,f,init){
var self__ = this;
var ___$1 = this;
return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(self__.xform,f,init,self__.coll);
});

cljs.core.Eduction.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return cljs.core.seq(cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(self__.xform,self__.coll));
});

cljs.core.Eduction.cljs$lang$type = true;

cljs.core.Eduction.cljs$lang$ctorStr = "cljs.core/Eduction";

cljs.core.Eduction.cljs$lang$ctorPrWriter = (function (this__4319__auto__,writer__4320__auto__,opt__4321__auto__){
return cljs.core._write(writer__4320__auto__,"cljs.core/Eduction");
});

cljs.core.__GT_Eduction = (function __GT_Eduction(xform,coll){
return (new cljs.core.Eduction(xform,coll));
});

(cljs.core.Eduction.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4710__auto__ = this;
return cljs.core.es6_iterator(this__4710__auto__);
}));
/**
* Returns a reducible/iterable/seqable application of
* the transducer to the items in coll. Note that these applications
* will be performed every time iterator/seq/reduce is called.
*/
cljs.core.eduction = (function eduction(xform,coll){
return (new cljs.core.Eduction(xform,coll));
});
/**
* Runs the supplied procedure (via reduce), for purposes of side
* effects, on successive items in the collection. Returns nil
*/
cljs.core.run_BANG_ = (function run_BANG_(proc,coll){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__10008_SHARP_,p2__10007_SHARP_){
var G__10010 = p2__10007_SHARP_;
return (proc.cljs$core$IFn$_invoke$arity$1 ? proc.cljs$core$IFn$_invoke$arity$1(G__10010) : proc.call(null,G__10010));
}),null,coll);
});

cljs.core.IEncodeJS = (function (){var obj10012 = {};
return obj10012;
})();

cljs.core._clj__GT_js = (function _clj__GT_js(x){
if((function (){var and__3720__auto__ = x;
if(and__3720__auto__){
return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1;
} else {
return and__3720__auto__;
}
})()){
return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1(x);
} else {
var x__4376__auto__ = (((x == null))?null:x);
return (function (){var or__3732__auto__ = (cljs.core._clj__GT_js[(function (){var G__10016 = x__4376__auto__;
return goog.typeOf(G__10016);
})()]);
if(or__3732__auto__){
return or__3732__auto__;
} else {
var or__3732__auto____$1 = (cljs.core._clj__GT_js["_"]);
if(or__3732__auto____$1){
return or__3732__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeJS.-clj->js",x);
}
}
})().call(null,x);
}
});

cljs.core._key__GT_js = (function _key__GT_js(x){
if((function (){var and__3720__auto__ = x;
if(and__3720__auto__){
return x.cljs$core$IEncodeJS$_key__GT_js$arity$1;
} else {
return and__3720__auto__;
}
})()){
return x.cljs$core$IEncodeJS$_key__GT_js$arity$1(x);
} else {
var x__4376__auto__ = (((x == null))?null:x);
return (function (){var or__3732__auto__ = (cljs.core._key__GT_js[(function (){var G__10020 = x__4376__auto__;
return goog.typeOf(G__10020);
})()]);
if(or__3732__auto__){
return or__3732__auto__;
} else {
var or__3732__auto____$1 = (cljs.core._key__GT_js["_"]);
if(or__3732__auto____$1){
return or__3732__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeJS.-key->js",x);
}
}
})().call(null,x);
}
});

cljs.core.key__GT_js = (function key__GT_js(k){
if((function (){var G__10023 = k;
if(G__10023){
var bit__4413__auto__ = null;
if(cljs.core.truth_((function (){var or__3732__auto__ = bit__4413__auto__;
if(cljs.core.truth_(or__3732__auto__)){
return or__3732__auto__;
} else {
return G__10023.cljs$core$IEncodeJS$;
}
})())){
return true;
} else {
if((!G__10023.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__10023);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__10023);
}
})()){
return cljs.core._clj__GT_js(k);
} else {
if((typeof k === 'string') || (typeof k === 'number') || ((k instanceof cljs.core.Keyword)) || ((k instanceof cljs.core.Symbol))){
var G__10024 = k;
return (cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1 ? cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1(G__10024) : cljs.core.clj__GT_js.call(null,G__10024));
} else {
return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([k], 0));
}
}
});
/**
* Recursively transforms ClojureScript values to JavaScript.
* sets/vectors/lists become Arrays, Keywords and Symbol become Strings,
* Maps become Objects. Arbitrary keys are encoded to by key->js.
*/
cljs.core.clj__GT_js = (function clj__GT_js(x){
if((x == null)){
return null;
} else {
if((function (){var G__10040 = x;
if(G__10040){
var bit__4413__auto__ = null;
if(cljs.core.truth_((function (){var or__3732__auto__ = bit__4413__auto__;
if(cljs.core.truth_(or__3732__auto__)){
return or__3732__auto__;
} else {
return G__10040.cljs$core$IEncodeJS$;
}
})())){
return true;
} else {
if((!G__10040.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__10040);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__10040);
}
})()){
return cljs.core._clj__GT_js(x);
} else {
if((x instanceof cljs.core.Keyword)){
return cljs.core.name(x);
} else {
if((x instanceof cljs.core.Symbol)){
return [cljs.core.str(x)].join('');
} else {
if(cljs.core.map_QMARK_(x)){
var m = (function (){var obj10042 = {};
return obj10042;
})();
var seq__10043_10053 = cljs.core.seq(x);
var chunk__10044_10054 = null;
var count__10045_10055 = (0);
var i__10046_10056 = (0);
while(true){
if((i__10046_10056 < count__10045_10055)){
var vec__10047_10057 = chunk__10044_10054.cljs$core$IIndexed$_nth$arity$2(null,i__10046_10056);
var k_10058 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10047_10057,(0),null);
var v_10059 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10047_10057,(1),null);
(m[cljs.core.key__GT_js(k_10058)] = clj__GT_js(v_10059));

var G__10060 = seq__10043_10053;
var G__10061 = chunk__10044_10054;
var G__10062 = count__10045_10055;
var G__10063 = (i__10046_10056 + (1));
seq__10043_10053 = G__10060;
chunk__10044_10054 = G__10061;
count__10045_10055 = G__10062;
i__10046_10056 = G__10063;
continue;
} else {
var temp__4126__auto___10064 = cljs.core.seq(seq__10043_10053);
if(temp__4126__auto___10064){
var seq__10043_10065__$1 = temp__4126__auto___10064;
if(cljs.core.chunked_seq_QMARK_(seq__10043_10065__$1)){
var c__4519__auto___10066 = cljs.core.chunk_first(seq__10043_10065__$1);
var G__10067 = cljs.core.chunk_rest(seq__10043_10065__$1);
var G__10068 = c__4519__auto___10066;
var G__10069 = cljs.core.count(c__4519__auto___10066);
var G__10070 = (0);
seq__10043_10053 = G__10067;
chunk__10044_10054 = G__10068;
count__10045_10055 = G__10069;
i__10046_10056 = G__10070;
continue;
} else {
var vec__10048_10071 = cljs.core.first(seq__10043_10065__$1);
var k_10072 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10048_10071,(0),null);
var v_10073 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10048_10071,(1),null);
(m[cljs.core.key__GT_js(k_10072)] = clj__GT_js(v_10073));

var G__10074 = cljs.core.next(seq__10043_10065__$1);
var G__10075 = null;
var G__10076 = (0);
var G__10077 = (0);
seq__10043_10053 = G__10074;
chunk__10044_10054 = G__10075;
count__10045_10055 = G__10076;
i__10046_10056 = G__10077;
continue;
}
} else {
}
}
break;
}

return m;
} else {
if(cljs.core.coll_QMARK_(x)){
var arr = [];
var seq__10049_10078 = cljs.core.seq(cljs.core.map.cljs$core$IFn$_invoke$arity$2(clj__GT_js,x));
var chunk__10050_10079 = null;
var count__10051_10080 = (0);
var i__10052_10081 = (0);
while(true){
if((i__10052_10081 < count__10051_10080)){
var x_10082__$1 = chunk__10050_10079.cljs$core$IIndexed$_nth$arity$2(null,i__10052_10081);
arr.push(x_10082__$1);

var G__10083 = seq__10049_10078;
var G__10084 = chunk__10050_10079;
var G__10085 = count__10051_10080;
var G__10086 = (i__10052_10081 + (1));
seq__10049_10078 = G__10083;
chunk__10050_10079 = G__10084;
count__10051_10080 = G__10085;
i__10052_10081 = G__10086;
continue;
} else {
var temp__4126__auto___10087 = cljs.core.seq(seq__10049_10078);
if(temp__4126__auto___10087){
var seq__10049_10088__$1 = temp__4126__auto___10087;
if(cljs.core.chunked_seq_QMARK_(seq__10049_10088__$1)){
var c__4519__auto___10089 = cljs.core.chunk_first(seq__10049_10088__$1);
var G__10090 = cljs.core.chunk_rest(seq__10049_10088__$1);
var G__10091 = c__4519__auto___10089;
var G__10092 = cljs.core.count(c__4519__auto___10089);
var G__10093 = (0);
seq__10049_10078 = G__10090;
chunk__10050_10079 = G__10091;
count__10051_10080 = G__10092;
i__10052_10081 = G__10093;
continue;
} else {
var x_10094__$1 = cljs.core.first(seq__10049_10088__$1);
arr.push(x_10094__$1);

var G__10095 = cljs.core.next(seq__10049_10088__$1);
var G__10096 = null;
var G__10097 = (0);
var G__10098 = (0);
seq__10049_10078 = G__10095;
chunk__10050_10079 = G__10096;
count__10051_10080 = G__10097;
i__10052_10081 = G__10098;
continue;
}
} else {
}
}
break;
}

return arr;
} else {
return x;

}
}
}
}
}
}
});

cljs.core.IEncodeClojure = (function (){var obj10100 = {};
return obj10100;
})();

cljs.core._js__GT_clj = (function _js__GT_clj(x,options){
if((function (){var and__3720__auto__ = x;
if(and__3720__auto__){
return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2;
} else {
return and__3720__auto__;
}
})()){
return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2(x,options);
} else {
var x__4376__auto__ = (((x == null))?null:x);
return (function (){var or__3732__auto__ = (cljs.core._js__GT_clj[(function (){var G__10104 = x__4376__auto__;
return goog.typeOf(G__10104);
})()]);
if(or__3732__auto__){
return or__3732__auto__;
} else {
var or__3732__auto____$1 = (cljs.core._js__GT_clj["_"]);
if(or__3732__auto____$1){
return or__3732__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeClojure.-js->clj",x);
}
}
})().call(null,x,options);
}
});

/**
* Recursively transforms JavaScript arrays into ClojureScript
* vectors, and JavaScript objects into ClojureScript maps.  With
* option ':keywordize-keys true' will convert object fields from
* strings to keywords.
* @param {...*} var_args
*/
cljs.core.js__GT_clj = (function() {
var js__GT_clj = null;
var js__GT_clj__1 = (function (x){
return js__GT_clj.cljs$core$IFn$_invoke$arity$variadic(x,cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"keywordize-keys","keywordize-keys",1310784252),false], null)], 0));
});
var js__GT_clj__2 = (function() { 
var G__10161__delegate = function (x,opts){
var map__10134 = opts;
var map__10134__$1 = ((cljs.core.seq_QMARK_(map__10134))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__10134):map__10134);
var keywordize_keys = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__10134__$1,new cljs.core.Keyword(null,"keywordize-keys","keywordize-keys",1310784252));
var keyfn = (cljs.core.truth_(keywordize_keys)?cljs.core.keyword:cljs.core.str);
var f = ((function (map__10134,map__10134__$1,keywordize_keys,keyfn){
return (function thisfn(x__$1){
if((function (){var G__10150 = x__$1;
if(G__10150){
var bit__4413__auto__ = null;
if(cljs.core.truth_((function (){var or__3732__auto__ = bit__4413__auto__;
if(cljs.core.truth_(or__3732__auto__)){
return or__3732__auto__;
} else {
return G__10150.cljs$core$IEncodeClojure$;
}
})())){
return true;
} else {
if((!G__10150.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure,G__10150);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure,G__10150);
}
})()){
return cljs.core._js__GT_clj(x__$1,cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array_map,opts));
} else {
if(cljs.core.seq_QMARK_(x__$1)){
return cljs.core.doall.cljs$core$IFn$_invoke$arity$1(cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn,x__$1));
} else {
if(cljs.core.coll_QMARK_(x__$1)){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.empty(x__$1),cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn,x__$1));
} else {
if(x__$1 instanceof Array){
return cljs.core.vec(cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn,x__$1));
} else {
if((cljs.core.type(x__$1) === Object)){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,(function (){var iter__4488__auto__ = ((function (map__10134,map__10134__$1,keywordize_keys,keyfn){
return (function iter__10151(s__10152){
return (new cljs.core.LazySeq(null,((function (map__10134,map__10134__$1,keywordize_keys,keyfn){
return (function (){
var s__10152__$1 = s__10152;
while(true){
var temp__4126__auto__ = cljs.core.seq(s__10152__$1);
if(temp__4126__auto__){
var s__10152__$2 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s__10152__$2)){
var c__4486__auto__ = cljs.core.chunk_first(s__10152__$2);
var size__4487__auto__ = cljs.core.count(c__4486__auto__);
var b__10154 = cljs.core.chunk_buffer(size__4487__auto__);
if((function (){var i__10153 = (0);
while(true){
if((i__10153 < size__4487__auto__)){
var k = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c__4486__auto__,i__10153);
cljs.core.chunk_append(b__10154,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__10159 = k;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__10159) : keyfn.call(null,G__10159));
})(),thisfn((x__$1[k]))], null));

var G__10162 = (i__10153 + (1));
i__10153 = G__10162;
continue;
} else {
return true;
}
break;
}
})()){
return cljs.core.chunk_cons(cljs.core.chunk(b__10154),iter__10151(cljs.core.chunk_rest(s__10152__$2)));
} else {
return cljs.core.chunk_cons(cljs.core.chunk(b__10154),null);
}
} else {
var k = cljs.core.first(s__10152__$2);
return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__10160 = k;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__10160) : keyfn.call(null,G__10160));
})(),thisfn((x__$1[k]))], null),iter__10151(cljs.core.rest(s__10152__$2)));
}
} else {
return null;
}
break;
}
});})(map__10134,map__10134__$1,keywordize_keys,keyfn))
,null,null));
});})(map__10134,map__10134__$1,keywordize_keys,keyfn))
;
return iter__4488__auto__(cljs.core.js_keys(x__$1));
})());
} else {
return x__$1;

}
}
}
}
}
});})(map__10134,map__10134__$1,keywordize_keys,keyfn))
;
return f(x);
};
var G__10161 = function (x,var_args){
var opts = null;
if (arguments.length > 1) {
var G__10163__i = 0, G__10163__a = new Array(arguments.length -  1);
while (G__10163__i < G__10163__a.length) {G__10163__a[G__10163__i] = arguments[G__10163__i + 1]; ++G__10163__i;}
  opts = new cljs.core.IndexedSeq(G__10163__a,0);
} 
return G__10161__delegate.call(this,x,opts);};
G__10161.cljs$lang$maxFixedArity = 1;
G__10161.cljs$lang$applyTo = (function (arglist__10164){
var x = cljs.core.first(arglist__10164);
var opts = cljs.core.rest(arglist__10164);
return G__10161__delegate(x,opts);
});
G__10161.cljs$core$IFn$_invoke$arity$variadic = G__10161__delegate;
return G__10161;
})()
;
js__GT_clj = function(x,var_args){
var opts = var_args;
switch(arguments.length){
case 1:
return js__GT_clj__1.call(this,x);
default:
var G__10165 = null;
if (arguments.length > 1) {
var G__10166__i = 0, G__10166__a = new Array(arguments.length -  1);
while (G__10166__i < G__10166__a.length) {G__10166__a[G__10166__i] = arguments[G__10166__i + 1]; ++G__10166__i;}
G__10165 = new cljs.core.IndexedSeq(G__10166__a,0);
}
return js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic(x, G__10165);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
js__GT_clj.cljs$lang$maxFixedArity = 1;
js__GT_clj.cljs$lang$applyTo = js__GT_clj__2.cljs$lang$applyTo;
js__GT_clj.cljs$core$IFn$_invoke$arity$1 = js__GT_clj__1;
js__GT_clj.cljs$core$IFn$_invoke$arity$variadic = js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic;
return js__GT_clj;
})()
;
/**
* Returns a memoized version of a referentially transparent function. The
* memoized version of the function keeps a cache of the mapping from arguments
* to results and, when calls with the same arguments are repeated often, has
* higher performance at the expense of higher memory use.
*/
cljs.core.memoize = (function memoize(f){
var mem = (function (){var G__10169 = cljs.core.PersistentArrayMap.EMPTY;
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__10169) : cljs.core.atom.call(null,G__10169));
})();
return ((function (mem){
return (function() { 
var G__10171__delegate = function (args){
var v = cljs.core.get.cljs$core$IFn$_invoke$arity$3((function (){var G__10170 = mem;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10170) : cljs.core.deref.call(null,G__10170));
})(),args,cljs.core.lookup_sentinel);
if((v === cljs.core.lookup_sentinel)){
var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,args);
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(mem,cljs.core.assoc,args,ret);

return ret;
} else {
return v;
}
};
var G__10171 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__10172__i = 0, G__10172__a = new Array(arguments.length -  0);
while (G__10172__i < G__10172__a.length) {G__10172__a[G__10172__i] = arguments[G__10172__i + 0]; ++G__10172__i;}
  args = new cljs.core.IndexedSeq(G__10172__a,0);
} 
return G__10171__delegate.call(this,args);};
G__10171.cljs$lang$maxFixedArity = 0;
G__10171.cljs$lang$applyTo = (function (arglist__10173){
var args = cljs.core.seq(arglist__10173);
return G__10171__delegate(args);
});
G__10171.cljs$core$IFn$_invoke$arity$variadic = G__10171__delegate;
return G__10171;
})()
;
;})(mem))
});
/**
* trampoline can be used to convert algorithms requiring mutual
* recursion without stack consumption. Calls f with supplied args, if
* any. If f returns a fn, calls that fn with no arguments, and
* continues to repeat, until the return value is not a fn, then
* returns that non-fn value. Note that if you want to return a fn as a
* final value, you must wrap it in some data structure and unpack it
* after trampoline returns.
* @param {...*} var_args
*/
cljs.core.trampoline = (function() {
var trampoline = null;
var trampoline__1 = (function (f){
while(true){
var ret = (function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})();
if(cljs.core.fn_QMARK_(ret)){
var G__10175 = ret;
f = G__10175;
continue;
} else {
return ret;
}
break;
}
});
var trampoline__2 = (function() { 
var G__10176__delegate = function (f,args){
return trampoline.cljs$core$IFn$_invoke$arity$1((function (){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,args);
}));
};
var G__10176 = function (f,var_args){
var args = null;
if (arguments.length > 1) {
var G__10177__i = 0, G__10177__a = new Array(arguments.length -  1);
while (G__10177__i < G__10177__a.length) {G__10177__a[G__10177__i] = arguments[G__10177__i + 1]; ++G__10177__i;}
  args = new cljs.core.IndexedSeq(G__10177__a,0);
} 
return G__10176__delegate.call(this,f,args);};
G__10176.cljs$lang$maxFixedArity = 1;
G__10176.cljs$lang$applyTo = (function (arglist__10178){
var f = cljs.core.first(arglist__10178);
var args = cljs.core.rest(arglist__10178);
return G__10176__delegate(f,args);
});
G__10176.cljs$core$IFn$_invoke$arity$variadic = G__10176__delegate;
return G__10176;
})()
;
trampoline = function(f,var_args){
var args = var_args;
switch(arguments.length){
case 1:
return trampoline__1.call(this,f);
default:
var G__10179 = null;
if (arguments.length > 1) {
var G__10180__i = 0, G__10180__a = new Array(arguments.length -  1);
while (G__10180__i < G__10180__a.length) {G__10180__a[G__10180__i] = arguments[G__10180__i + 1]; ++G__10180__i;}
G__10179 = new cljs.core.IndexedSeq(G__10180__a,0);
}
return trampoline__2.cljs$core$IFn$_invoke$arity$variadic(f, G__10179);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
trampoline.cljs$lang$maxFixedArity = 1;
trampoline.cljs$lang$applyTo = trampoline__2.cljs$lang$applyTo;
trampoline.cljs$core$IFn$_invoke$arity$1 = trampoline__1;
trampoline.cljs$core$IFn$_invoke$arity$variadic = trampoline__2.cljs$core$IFn$_invoke$arity$variadic;
return trampoline;
})()
;
/**
* Returns a random floating point number between 0 (inclusive) and
* n (default 1) (exclusive).
*/
cljs.core.rand = (function() {
var rand = null;
var rand__0 = (function (){
return rand.cljs$core$IFn$_invoke$arity$1((1));
});
var rand__1 = (function (n){
return ((function (){return (Math.random.cljs$core$IFn$_invoke$arity$0 ? Math.random.cljs$core$IFn$_invoke$arity$0() : Math.random.call(null));
})() * n);
});
rand = function(n){
switch(arguments.length){
case 0:
return rand__0.call(this);
case 1:
return rand__1.call(this,n);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
rand.cljs$core$IFn$_invoke$arity$0 = rand__0;
rand.cljs$core$IFn$_invoke$arity$1 = rand__1;
return rand;
})()
;
/**
* Returns a random integer between 0 (inclusive) and n (exclusive).
*/
cljs.core.rand_int = (function rand_int(n){
var G__10183 = ((function (){return (Math.random.cljs$core$IFn$_invoke$arity$0 ? Math.random.cljs$core$IFn$_invoke$arity$0() : Math.random.call(null));
})() * n);
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__10183) : Math.floor.call(null,G__10183));
});
/**
* Return a random element of the (sequential) collection. Will have
* the same performance characteristics as nth for the given
* collection.
*/
cljs.core.rand_nth = (function rand_nth(coll){
return cljs.core.nth.cljs$core$IFn$_invoke$arity$2(coll,cljs.core.rand_int(cljs.core.count(coll)));
});
/**
* Returns a map of the elements of coll keyed by the result of
* f on each element. The value at each key will be a vector of the
* corresponding elements, in the order they appeared in coll.
*/
cljs.core.group_by = (function group_by(f,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (ret,x){
var k = (function (){var G__10185 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__10185) : f.call(null,G__10185));
})();
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.PersistentVector.EMPTY),x));
}),cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY),coll));
});
/**
* Creates a hierarchy object for use with derive, isa? etc.
*/
cljs.core.make_hierarchy = (function make_hierarchy(){
return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"parents","parents",-2027538891),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,"descendants","descendants",1824886031),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,"ancestors","ancestors",-776045424),cljs.core.PersistentArrayMap.EMPTY], null);
});
cljs.core._global_hierarchy = null;
cljs.core.get_global_hierarchy = (function get_global_hierarchy(){
if((cljs.core._global_hierarchy == null)){
cljs.core._global_hierarchy = (function (){var G__10187 = cljs.core.make_hierarchy();
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__10187) : cljs.core.atom.call(null,G__10187));
})();
} else {
}

return cljs.core._global_hierarchy;
});
/**
* @param {...*} var_args
*/
cljs.core.swap_global_hierarchy_BANG_ = (function() { 
var swap_global_hierarchy_BANG___delegate = function (f,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core.swap_BANG_,cljs.core.get_global_hierarchy(),f,args);
};
var swap_global_hierarchy_BANG_ = function (f,var_args){
var args = null;
if (arguments.length > 1) {
var G__10188__i = 0, G__10188__a = new Array(arguments.length -  1);
while (G__10188__i < G__10188__a.length) {G__10188__a[G__10188__i] = arguments[G__10188__i + 1]; ++G__10188__i;}
  args = new cljs.core.IndexedSeq(G__10188__a,0);
} 
return swap_global_hierarchy_BANG___delegate.call(this,f,args);};
swap_global_hierarchy_BANG_.cljs$lang$maxFixedArity = 1;
swap_global_hierarchy_BANG_.cljs$lang$applyTo = (function (arglist__10189){
var f = cljs.core.first(arglist__10189);
var args = cljs.core.rest(arglist__10189);
return swap_global_hierarchy_BANG___delegate(f,args);
});
swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_global_hierarchy_BANG___delegate;
return swap_global_hierarchy_BANG_;
})()
;
/**
* Returns true if (= child parent), or child is directly or indirectly derived from
* parent, either via a JavaScript type inheritance relationship or a
* relationship established via derive. h must be a hierarchy obtained
* from make-hierarchy, if not supplied defaults to the global
* hierarchy
*/
cljs.core.isa_QMARK_ = (function() {
var isa_QMARK_ = null;
var isa_QMARK___2 = (function (child,parent){
return isa_QMARK_.cljs$core$IFn$_invoke$arity$3((function (){var G__10254 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10254) : cljs.core.deref.call(null,G__10254));
})(),child,parent);
});
var isa_QMARK___3 = (function (h,child,parent){
var or__3732__auto__ = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(child,parent);
if(or__3732__auto__){
return or__3732__auto__;
} else {
var or__3732__auto____$1 = cljs.core.contains_QMARK_(new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h).call(null,child),parent);
if(or__3732__auto____$1){
return or__3732__auto____$1;
} else {
var and__3720__auto__ = cljs.core.vector_QMARK_(parent);
if(and__3720__auto__){
var and__3720__auto____$1 = cljs.core.vector_QMARK_(child);
if(and__3720__auto____$1){
var and__3720__auto____$2 = (cljs.core.count(parent) === cljs.core.count(child));
if(and__3720__auto____$2){
var ret = true;
var i = (0);
while(true){
if((!(ret)) || ((i === cljs.core.count(parent)))){
return ret;
} else {
var G__10279 = isa_QMARK_.cljs$core$IFn$_invoke$arity$3(h,(function (){var G__10277 = i;
return (child.cljs$core$IFn$_invoke$arity$1 ? child.cljs$core$IFn$_invoke$arity$1(G__10277) : child.call(null,G__10277));
})(),(function (){var G__10278 = i;
return (parent.cljs$core$IFn$_invoke$arity$1 ? parent.cljs$core$IFn$_invoke$arity$1(G__10278) : parent.call(null,G__10278));
})());
var G__10280 = (i + (1));
ret = G__10279;
i = G__10280;
continue;
}
break;
}
} else {
return and__3720__auto____$2;
}
} else {
return and__3720__auto____$1;
}
} else {
return and__3720__auto__;
}
}
}
});
isa_QMARK_ = function(h,child,parent){
switch(arguments.length){
case 2:
return isa_QMARK___2.call(this,h,child);
case 3:
return isa_QMARK___3.call(this,h,child,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
isa_QMARK_.cljs$core$IFn$_invoke$arity$2 = isa_QMARK___2;
isa_QMARK_.cljs$core$IFn$_invoke$arity$3 = isa_QMARK___3;
return isa_QMARK_;
})()
;
/**
* Returns the immediate parents of tag, either via a JavaScript type
* inheritance relationship or a relationship established via derive. h
* must be a hierarchy obtained from make-hierarchy, if not supplied
* defaults to the global hierarchy
*/
cljs.core.parents = (function() {
var parents = null;
var parents__1 = (function (tag){
return parents.cljs$core$IFn$_invoke$arity$2((function (){var G__10284 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10284) : cljs.core.deref.call(null,G__10284));
})(),tag);
});
var parents__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h),tag));
});
parents = function(h,tag){
switch(arguments.length){
case 1:
return parents__1.call(this,h);
case 2:
return parents__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
parents.cljs$core$IFn$_invoke$arity$1 = parents__1;
parents.cljs$core$IFn$_invoke$arity$2 = parents__2;
return parents;
})()
;
/**
* Returns the immediate and indirect parents of tag, either via a JavaScript type
* inheritance relationship or a relationship established via derive. h
* must be a hierarchy obtained from make-hierarchy, if not supplied
* defaults to the global hierarchy
*/
cljs.core.ancestors = (function() {
var ancestors = null;
var ancestors__1 = (function (tag){
return ancestors.cljs$core$IFn$_invoke$arity$2((function (){var G__10288 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10288) : cljs.core.deref.call(null,G__10288));
})(),tag);
});
var ancestors__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h),tag));
});
ancestors = function(h,tag){
switch(arguments.length){
case 1:
return ancestors__1.call(this,h);
case 2:
return ancestors__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ancestors.cljs$core$IFn$_invoke$arity$1 = ancestors__1;
ancestors.cljs$core$IFn$_invoke$arity$2 = ancestors__2;
return ancestors;
})()
;
/**
* Returns the immediate and indirect children of tag, through a
* relationship established via derive. h must be a hierarchy obtained
* from make-hierarchy, if not supplied defaults to the global
* hierarchy. Note: does not work on JavaScript type inheritance
* relationships.
*/
cljs.core.descendants = (function() {
var descendants = null;
var descendants__1 = (function (tag){
return descendants.cljs$core$IFn$_invoke$arity$2((function (){var G__10292 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10292) : cljs.core.deref.call(null,G__10292));
})(),tag);
});
var descendants__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,"descendants","descendants",1824886031).cljs$core$IFn$_invoke$arity$1(h),tag));
});
descendants = function(h,tag){
switch(arguments.length){
case 1:
return descendants__1.call(this,h);
case 2:
return descendants__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
descendants.cljs$core$IFn$_invoke$arity$1 = descendants__1;
descendants.cljs$core$IFn$_invoke$arity$2 = descendants__2;
return descendants;
})()
;
/**
* Establishes a parent/child relationship between parent and
* tag. Parent must be a namespace-qualified symbol or keyword and
* child can be either a namespace-qualified symbol or keyword or a
* class. h must be a hierarchy obtained from make-hierarchy, if not
* supplied defaults to, and modifies, the global hierarchy.
*/
cljs.core.derive = (function() {
var derive = null;
var derive__2 = (function (tag,parent){
if(cljs.core.truth_(cljs.core.namespace(parent))){
} else {
throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(new cljs.core.Symbol(null,"namespace","namespace",1263021155,null),new cljs.core.Symbol(null,"parent","parent",761652748,null))], 0)))].join('')));
}

cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(derive,cljs.core.array_seq([tag,parent], 0));

return null;
});
var derive__3 = (function (h,tag,parent){
if(cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(tag,parent)){
} else {
throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(new cljs.core.Symbol(null,"not=","not=",1466536204,null),new cljs.core.Symbol(null,"tag","tag",350170304,null),new cljs.core.Symbol(null,"parent","parent",761652748,null))], 0)))].join('')));
}

var tp = new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h);
var td = new cljs.core.Keyword(null,"descendants","descendants",1824886031).cljs$core$IFn$_invoke$arity$1(h);
var ta = new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h);
var tf = ((function (tp,td,ta){
return (function (m,source,sources,target,targets){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (tp,td,ta){
return (function (ret,k){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.get.cljs$core$IFn$_invoke$arity$3(targets,k,cljs.core.PersistentHashSet.EMPTY),cljs.core.cons(target,(function (){var G__10301 = target;
return (targets.cljs$core$IFn$_invoke$arity$1 ? targets.cljs$core$IFn$_invoke$arity$1(G__10301) : targets.call(null,G__10301));
})())));
});})(tp,td,ta))
,m,cljs.core.cons(source,(function (){var G__10302 = source;
return (sources.cljs$core$IFn$_invoke$arity$1 ? sources.cljs$core$IFn$_invoke$arity$1(G__10302) : sources.call(null,G__10302));
})()));
});})(tp,td,ta))
;
var or__3732__auto__ = ((cljs.core.contains_QMARK_((function (){var G__10306 = tag;
return (tp.cljs$core$IFn$_invoke$arity$1 ? tp.cljs$core$IFn$_invoke$arity$1(G__10306) : tp.call(null,G__10306));
})(),parent))?null:(function (){
if(cljs.core.contains_QMARK_((function (){var G__10307 = tag;
return (ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(G__10307) : ta.call(null,G__10307));
})(),parent)){
throw (new Error([cljs.core.str(tag),cljs.core.str("already has"),cljs.core.str(parent),cljs.core.str("as ancestor")].join('')));
} else {
}

if(cljs.core.contains_QMARK_((function (){var G__10308 = parent;
return (ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(G__10308) : ta.call(null,G__10308));
})(),tag)){
throw (new Error([cljs.core.str("Cyclic derivation:"),cljs.core.str(parent),cljs.core.str("has"),cljs.core.str(tag),cljs.core.str("as ancestor")].join('')));
} else {
}

return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"parents","parents",-2027538891),cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h),tag,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(tp,tag,cljs.core.PersistentHashSet.EMPTY),parent)),new cljs.core.Keyword(null,"ancestors","ancestors",-776045424),tf(new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h),tag,td,parent,ta),new cljs.core.Keyword(null,"descendants","descendants",1824886031),tf(new cljs.core.Keyword(null,"descendants","descendants",1824886031).cljs$core$IFn$_invoke$arity$1(h),parent,ta,tag,td)], null);
})()
);
if(cljs.core.truth_(or__3732__auto__)){
return or__3732__auto__;
} else {
return h;
}
});
derive = function(h,tag,parent){
switch(arguments.length){
case 2:
return derive__2.call(this,h,tag);
case 3:
return derive__3.call(this,h,tag,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
derive.cljs$core$IFn$_invoke$arity$2 = derive__2;
derive.cljs$core$IFn$_invoke$arity$3 = derive__3;
return derive;
})()
;
/**
* Removes a parent/child relationship between parent and
* tag. h must be a hierarchy obtained from make-hierarchy, if not
* supplied defaults to, and modifies, the global hierarchy.
*/
cljs.core.underive = (function() {
var underive = null;
var underive__2 = (function (tag,parent){
cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(underive,cljs.core.array_seq([tag,parent], 0));

return null;
});
var underive__3 = (function (h,tag,parent){
var parentMap = new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h);
var childsParents = (cljs.core.truth_((function (){var G__10315 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__10315) : parentMap.call(null,G__10315));
})())?cljs.core.disj.cljs$core$IFn$_invoke$arity$2((function (){var G__10316 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__10316) : parentMap.call(null,G__10316));
})(),parent):cljs.core.PersistentHashSet.EMPTY);
var newParents = (cljs.core.truth_(cljs.core.not_empty(childsParents))?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(parentMap,tag,childsParents):cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(parentMap,tag));
var deriv_seq = cljs.core.flatten(cljs.core.map.cljs$core$IFn$_invoke$arity$2(((function (parentMap,childsParents,newParents){
return (function (p1__10309_SHARP_){
return cljs.core.cons(cljs.core.first(p1__10309_SHARP_),cljs.core.interpose(cljs.core.first(p1__10309_SHARP_),cljs.core.second(p1__10309_SHARP_)));
});})(parentMap,childsParents,newParents))
,cljs.core.seq(newParents)));
if(cljs.core.contains_QMARK_((function (){var G__10317 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__10317) : parentMap.call(null,G__10317));
})(),parent)){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (parentMap,childsParents,newParents,deriv_seq){
return (function (p1__10310_SHARP_,p2__10311_SHARP_){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.derive,p1__10310_SHARP_,p2__10311_SHARP_);
});})(parentMap,childsParents,newParents,deriv_seq))
,cljs.core.make_hierarchy(),cljs.core.partition.cljs$core$IFn$_invoke$arity$2((2),deriv_seq));
} else {
return h;
}
});
underive = function(h,tag,parent){
switch(arguments.length){
case 2:
return underive__2.call(this,h,tag);
case 3:
return underive__3.call(this,h,tag,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
underive.cljs$core$IFn$_invoke$arity$2 = underive__2;
underive.cljs$core$IFn$_invoke$arity$3 = underive__3;
return underive;
})()
;
cljs.core.reset_cache = (function reset_cache(method_cache,method_table,cached_hierarchy,hierarchy){
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(method_cache,(function (_){
var G__10320 = method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10320) : cljs.core.deref.call(null,G__10320));
}));

return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cached_hierarchy,(function (_){
var G__10321 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10321) : cljs.core.deref.call(null,G__10321));
}));
});
cljs.core.prefers_STAR_ = (function prefers_STAR_(x,y,prefer_table){
var xprefs = (function (){var G__10337 = prefer_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10337) : cljs.core.deref.call(null,G__10337));
})().call(null,x);
var or__3732__auto__ = (cljs.core.truth_((function (){var and__3720__auto__ = xprefs;
if(cljs.core.truth_(and__3720__auto__)){
var G__10339 = y;
return (xprefs.cljs$core$IFn$_invoke$arity$1 ? xprefs.cljs$core$IFn$_invoke$arity$1(G__10339) : xprefs.call(null,G__10339));
} else {
return and__3720__auto__;
}
})())?true:null);
if(cljs.core.truth_(or__3732__auto__)){
return or__3732__auto__;
} else {
var or__3732__auto____$1 = (function (){var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(y);
while(true){
if((cljs.core.count(ps) > (0))){
if(cljs.core.truth_(prefers_STAR_(x,cljs.core.first(ps),prefer_table))){
} else {
}

var G__10340 = cljs.core.rest(ps);
ps = G__10340;
continue;
} else {
return null;
}
break;
}
})();
if(cljs.core.truth_(or__3732__auto____$1)){
return or__3732__auto____$1;
} else {
var or__3732__auto____$2 = (function (){var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(x);
while(true){
if((cljs.core.count(ps) > (0))){
if(cljs.core.truth_(prefers_STAR_(cljs.core.first(ps),y,prefer_table))){
} else {
}

var G__10341 = cljs.core.rest(ps);
ps = G__10341;
continue;
} else {
return null;
}
break;
}
})();
if(cljs.core.truth_(or__3732__auto____$2)){
return or__3732__auto____$2;
} else {
return false;
}
}
}
});
cljs.core.dominates = (function dominates(x,y,prefer_table){
var or__3732__auto__ = cljs.core.prefers_STAR_(x,y,prefer_table);
if(cljs.core.truth_(or__3732__auto__)){
return or__3732__auto__;
} else {
return cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$2(x,y);
}
});
cljs.core.find_and_cache_best_method = (function find_and_cache_best_method(name,dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
var best_entry = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (be,p__10355){
var vec__10356 = p__10355;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10356,(0),null);
var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10356,(1),null);
var e = vec__10356;
if(cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3((function (){var G__10357 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10357) : cljs.core.deref.call(null,G__10357));
})(),dispatch_val,k)){
var be2 = (cljs.core.truth_((function (){var or__3732__auto__ = (be == null);
if(or__3732__auto__){
return or__3732__auto__;
} else {
return cljs.core.dominates(k,cljs.core.first(be),prefer_table);
}
})())?e:be);
if(cljs.core.truth_(cljs.core.dominates(cljs.core.first(be2),k,prefer_table))){
} else {
throw (new Error([cljs.core.str("Multiple methods in multimethod '"),cljs.core.str(name),cljs.core.str("' match dispatch value: "),cljs.core.str(dispatch_val),cljs.core.str(" -> "),cljs.core.str(k),cljs.core.str(" and "),cljs.core.str(cljs.core.first(be2)),cljs.core.str(", and neither is preferred")].join('')));
}

return be2;
} else {
return be;
}
}),null,(function (){var G__10358 = method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10358) : cljs.core.deref.call(null,G__10358));
})());
if(cljs.core.truth_(best_entry)){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((function (){var G__10359 = cached_hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10359) : cljs.core.deref.call(null,G__10359));
})(),(function (){var G__10360 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10360) : cljs.core.deref.call(null,G__10360));
})())){
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(method_cache,cljs.core.assoc,dispatch_val,cljs.core.second(best_entry));

return cljs.core.second(best_entry);
} else {
cljs.core.reset_cache(method_cache,method_table,cached_hierarchy,hierarchy);

return find_and_cache_best_method(name,dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy);
}
} else {
return null;
}
});

cljs.core.IMultiFn = (function (){var obj10362 = {};
return obj10362;
})();

cljs.core._reset = (function _reset(mf){
if((function (){var and__3720__auto__ = mf;
if(and__3720__auto__){
return mf.cljs$core$IMultiFn$_reset$arity$1;
} else {
return and__3720__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_reset$arity$1(mf);
} else {
var x__4376__auto__ = (((mf == null))?null:mf);
return (function (){var or__3732__auto__ = (cljs.core._reset[(function (){var G__10366 = x__4376__auto__;
return goog.typeOf(G__10366);
})()]);
if(or__3732__auto__){
return or__3732__auto__;
} else {
var or__3732__auto____$1 = (cljs.core._reset["_"]);
if(or__3732__auto____$1){
return or__3732__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-reset",mf);
}
}
})().call(null,mf);
}
});

cljs.core._add_method = (function _add_method(mf,dispatch_val,method){
if((function (){var and__3720__auto__ = mf;
if(and__3720__auto__){
return mf.cljs$core$IMultiFn$_add_method$arity$3;
} else {
return and__3720__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_add_method$arity$3(mf,dispatch_val,method);
} else {
var x__4376__auto__ = (((mf == null))?null:mf);
return (function (){var or__3732__auto__ = (cljs.core._add_method[(function (){var G__10370 = x__4376__auto__;
return goog.typeOf(G__10370);
})()]);
if(or__3732__auto__){
return or__3732__auto__;
} else {
var or__3732__auto____$1 = (cljs.core._add_method["_"]);
if(or__3732__auto____$1){
return or__3732__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-add-method",mf);
}
}
})().call(null,mf,dispatch_val,method);
}
});

cljs.core._remove_method = (function _remove_method(mf,dispatch_val){
if((function (){var and__3720__auto__ = mf;
if(and__3720__auto__){
return mf.cljs$core$IMultiFn$_remove_method$arity$2;
} else {
return and__3720__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_remove_method$arity$2(mf,dispatch_val);
} else {
var x__4376__auto__ = (((mf == null))?null:mf);
return (function (){var or__3732__auto__ = (cljs.core._remove_method[(function (){var G__10374 = x__4376__auto__;
return goog.typeOf(G__10374);
})()]);
if(or__3732__auto__){
return or__3732__auto__;
} else {
var or__3732__auto____$1 = (cljs.core._remove_method["_"]);
if(or__3732__auto____$1){
return or__3732__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-remove-method",mf);
}
}
})().call(null,mf,dispatch_val);
}
});

cljs.core._prefer_method = (function _prefer_method(mf,dispatch_val,dispatch_val_y){
if((function (){var and__3720__auto__ = mf;
if(and__3720__auto__){
return mf.cljs$core$IMultiFn$_prefer_method$arity$3;
} else {
return and__3720__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_prefer_method$arity$3(mf,dispatch_val,dispatch_val_y);
} else {
var x__4376__auto__ = (((mf == null))?null:mf);
return (function (){var or__3732__auto__ = (cljs.core._prefer_method[(function (){var G__10378 = x__4376__auto__;
return goog.typeOf(G__10378);
})()]);
if(or__3732__auto__){
return or__3732__auto__;
} else {
var or__3732__auto____$1 = (cljs.core._prefer_method["_"]);
if(or__3732__auto____$1){
return or__3732__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-prefer-method",mf);
}
}
})().call(null,mf,dispatch_val,dispatch_val_y);
}
});

cljs.core._get_method = (function _get_method(mf,dispatch_val){
if((function (){var and__3720__auto__ = mf;
if(and__3720__auto__){
return mf.cljs$core$IMultiFn$_get_method$arity$2;
} else {
return and__3720__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_get_method$arity$2(mf,dispatch_val);
} else {
var x__4376__auto__ = (((mf == null))?null:mf);
return (function (){var or__3732__auto__ = (cljs.core._get_method[(function (){var G__10382 = x__4376__auto__;
return goog.typeOf(G__10382);
})()]);
if(or__3732__auto__){
return or__3732__auto__;
} else {
var or__3732__auto____$1 = (cljs.core._get_method["_"]);
if(or__3732__auto____$1){
return or__3732__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-get-method",mf);
}
}
})().call(null,mf,dispatch_val);
}
});

cljs.core._methods = (function _methods(mf){
if((function (){var and__3720__auto__ = mf;
if(and__3720__auto__){
return mf.cljs$core$IMultiFn$_methods$arity$1;
} else {
return and__3720__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_methods$arity$1(mf);
} else {
var x__4376__auto__ = (((mf == null))?null:mf);
return (function (){var or__3732__auto__ = (cljs.core._methods[(function (){var G__10386 = x__4376__auto__;
return goog.typeOf(G__10386);
})()]);
if(or__3732__auto__){
return or__3732__auto__;
} else {
var or__3732__auto____$1 = (cljs.core._methods["_"]);
if(or__3732__auto____$1){
return or__3732__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-methods",mf);
}
}
})().call(null,mf);
}
});

cljs.core._prefers = (function _prefers(mf){
if((function (){var and__3720__auto__ = mf;
if(and__3720__auto__){
return mf.cljs$core$IMultiFn$_prefers$arity$1;
} else {
return and__3720__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_prefers$arity$1(mf);
} else {
var x__4376__auto__ = (((mf == null))?null:mf);
return (function (){var or__3732__auto__ = (cljs.core._prefers[(function (){var G__10390 = x__4376__auto__;
return goog.typeOf(G__10390);
})()]);
if(or__3732__auto__){
return or__3732__auto__;
} else {
var or__3732__auto____$1 = (cljs.core._prefers["_"]);
if(or__3732__auto____$1){
return or__3732__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-prefers",mf);
}
}
})().call(null,mf);
}
});

cljs.core.throw_no_method_error = (function throw_no_method_error(name,dispatch_val){
throw (new Error([cljs.core.str("No method in multimethod '"),cljs.core.str(name),cljs.core.str("' for dispatch value: "),cljs.core.str(dispatch_val)].join('')));
});

/**
* @constructor
*/
cljs.core.MultiFn = (function (name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
this.name = name;
this.dispatch_fn = dispatch_fn;
this.default_dispatch_val = default_dispatch_val;
this.hierarchy = hierarchy;
this.method_table = method_table;
this.prefer_table = prefer_table;
this.method_cache = method_cache;
this.cached_hierarchy = cached_hierarchy;
this.cljs$lang$protocol_mask$partition0$ = 4194305;
this.cljs$lang$protocol_mask$partition1$ = 4352;
})
cljs.core.MultiFn.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__10392 = this$__$1;
return goog.getUid(G__10392);
});

cljs.core.MultiFn.prototype.cljs$core$INamed$_name$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core._name(self__.name);
});

cljs.core.MultiFn.prototype.cljs$core$INamed$_namespace$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core._namespace(self__.name);
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_reset$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_table,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_cache,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.cached_hierarchy,((function (mf__$1){
return (function (mf__$2){
return null;
});})(mf__$1))
);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_add_method$arity$3 = (function (mf,dispatch_val,method){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(self__.method_table,cljs.core.assoc,dispatch_val,method);

cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_remove_method$arity$2 = (function (mf,dispatch_val){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(self__.method_table,cljs.core.dissoc,dispatch_val);

cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_get_method$arity$2 = (function (mf,dispatch_val){
var self__ = this;
var mf__$1 = this;
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((function (){var G__10393 = self__.cached_hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10393) : cljs.core.deref.call(null,G__10393));
})(),(function (){var G__10394 = self__.hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10394) : cljs.core.deref.call(null,G__10394));
})())){
} else {
cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);
}

var temp__4124__auto__ = (function (){var G__10395 = self__.method_cache;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10395) : cljs.core.deref.call(null,G__10395));
})().call(null,dispatch_val);
if(cljs.core.truth_(temp__4124__auto__)){
var target_fn = temp__4124__auto__;
return target_fn;
} else {
var temp__4124__auto____$1 = cljs.core.find_and_cache_best_method(self__.name,dispatch_val,self__.hierarchy,self__.method_table,self__.prefer_table,self__.method_cache,self__.cached_hierarchy);
if(cljs.core.truth_(temp__4124__auto____$1)){
var target_fn = temp__4124__auto____$1;
return target_fn;
} else {
return (function (){var G__10396 = self__.method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10396) : cljs.core.deref.call(null,G__10396));
})().call(null,self__.default_dispatch_val);
}
}
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefer_method$arity$3 = (function (mf,dispatch_val_x,dispatch_val_y){
var self__ = this;
var mf__$1 = this;
if(cljs.core.truth_(cljs.core.prefers_STAR_(dispatch_val_x,dispatch_val_y,self__.prefer_table))){
throw (new Error([cljs.core.str("Preference conflict in multimethod '"),cljs.core.str(self__.name),cljs.core.str("': "),cljs.core.str(dispatch_val_y),cljs.core.str(" is already preferred to "),cljs.core.str(dispatch_val_x)].join('')));
} else {
}

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table,((function (mf__$1){
return (function (old){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(old,dispatch_val_x,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(old,dispatch_val_x,cljs.core.PersistentHashSet.EMPTY),dispatch_val_y));
});})(mf__$1))
);

return cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_methods$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
var G__10397 = self__.method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10397) : cljs.core.deref.call(null,G__10397));
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefers$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
var G__10398 = self__.prefer_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10398) : cljs.core.deref.call(null,G__10398));
});

cljs.core.MultiFn.prototype.call = (function() {
var G__11239 = null;
var G__11239__1 = (function (self__){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return (target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null));
});
var G__11239__2 = (function (self__,a){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__10399 = a;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(G__10399) : self__.dispatch_fn.call(null,G__10399));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__10400 = a;
return (target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(G__10400) : target_fn.call(null,G__10400));
});
var G__11239__3 = (function (self__,a,b){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__10401 = a;
var G__10402 = b;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(G__10401,G__10402) : self__.dispatch_fn.call(null,G__10401,G__10402));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__10403 = a;
var G__10404 = b;
return (target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(G__10403,G__10404) : target_fn.call(null,G__10403,G__10404));
});
var G__11239__4 = (function (self__,a,b,c){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__10405 = a;
var G__10406 = b;
var G__10407 = c;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(G__10405,G__10406,G__10407) : self__.dispatch_fn.call(null,G__10405,G__10406,G__10407));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__10408 = a;
var G__10409 = b;
var G__10410 = c;
return (target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(G__10408,G__10409,G__10410) : target_fn.call(null,G__10408,G__10409,G__10410));
});
var G__11239__5 = (function (self__,a,b,c,d){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__10411 = a;
var G__10412 = b;
var G__10413 = c;
var G__10414 = d;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(G__10411,G__10412,G__10413,G__10414) : self__.dispatch_fn.call(null,G__10411,G__10412,G__10413,G__10414));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__10415 = a;
var G__10416 = b;
var G__10417 = c;
var G__10418 = d;
return (target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(G__10415,G__10416,G__10417,G__10418) : target_fn.call(null,G__10415,G__10416,G__10417,G__10418));
});
var G__11239__6 = (function (self__,a,b,c,d,e){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__10419 = a;
var G__10420 = b;
var G__10421 = c;
var G__10422 = d;
var G__10423 = e;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(G__10419,G__10420,G__10421,G__10422,G__10423) : self__.dispatch_fn.call(null,G__10419,G__10420,G__10421,G__10422,G__10423));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__10424 = a;
var G__10425 = b;
var G__10426 = c;
var G__10427 = d;
var G__10428 = e;
return (target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(G__10424,G__10425,G__10426,G__10427,G__10428) : target_fn.call(null,G__10424,G__10425,G__10426,G__10427,G__10428));
});
var G__11239__7 = (function (self__,a,b,c,d,e,f){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__10429 = a;
var G__10430 = b;
var G__10431 = c;
var G__10432 = d;
var G__10433 = e;
var G__10434 = f;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(G__10429,G__10430,G__10431,G__10432,G__10433,G__10434) : self__.dispatch_fn.call(null,G__10429,G__10430,G__10431,G__10432,G__10433,G__10434));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__10435 = a;
var G__10436 = b;
var G__10437 = c;
var G__10438 = d;
var G__10439 = e;
var G__10440 = f;
return (target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(G__10435,G__10436,G__10437,G__10438,G__10439,G__10440) : target_fn.call(null,G__10435,G__10436,G__10437,G__10438,G__10439,G__10440));
});
var G__11239__8 = (function (self__,a,b,c,d,e,f,g){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__10441 = a;
var G__10442 = b;
var G__10443 = c;
var G__10444 = d;
var G__10445 = e;
var G__10446 = f;
var G__10447 = g;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(G__10441,G__10442,G__10443,G__10444,G__10445,G__10446,G__10447) : self__.dispatch_fn.call(null,G__10441,G__10442,G__10443,G__10444,G__10445,G__10446,G__10447));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__10448 = a;
var G__10449 = b;
var G__10450 = c;
var G__10451 = d;
var G__10452 = e;
var G__10453 = f;
var G__10454 = g;
return (target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(G__10448,G__10449,G__10450,G__10451,G__10452,G__10453,G__10454) : target_fn.call(null,G__10448,G__10449,G__10450,G__10451,G__10452,G__10453,G__10454));
});
var G__11239__9 = (function (self__,a,b,c,d,e,f,g,h){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__10455 = a;
var G__10456 = b;
var G__10457 = c;
var G__10458 = d;
var G__10459 = e;
var G__10460 = f;
var G__10461 = g;
var G__10462 = h;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(G__10455,G__10456,G__10457,G__10458,G__10459,G__10460,G__10461,G__10462) : self__.dispatch_fn.call(null,G__10455,G__10456,G__10457,G__10458,G__10459,G__10460,G__10461,G__10462));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__10463 = a;
var G__10464 = b;
var G__10465 = c;
var G__10466 = d;
var G__10467 = e;
var G__10468 = f;
var G__10469 = g;
var G__10470 = h;
return (target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(G__10463,G__10464,G__10465,G__10466,G__10467,G__10468,G__10469,G__10470) : target_fn.call(null,G__10463,G__10464,G__10465,G__10466,G__10467,G__10468,G__10469,G__10470));
});
var G__11239__10 = (function (self__,a,b,c,d,e,f,g,h,i){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__10471 = a;
var G__10472 = b;
var G__10473 = c;
var G__10474 = d;
var G__10475 = e;
var G__10476 = f;
var G__10477 = g;
var G__10478 = h;
var G__10479 = i;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(G__10471,G__10472,G__10473,G__10474,G__10475,G__10476,G__10477,G__10478,G__10479) : self__.dispatch_fn.call(null,G__10471,G__10472,G__10473,G__10474,G__10475,G__10476,G__10477,G__10478,G__10479));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__10480 = a;
var G__10481 = b;
var G__10482 = c;
var G__10483 = d;
var G__10484 = e;
var G__10485 = f;
var G__10486 = g;
var G__10487 = h;
var G__10488 = i;
return (target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(G__10480,G__10481,G__10482,G__10483,G__10484,G__10485,G__10486,G__10487,G__10488) : target_fn.call(null,G__10480,G__10481,G__10482,G__10483,G__10484,G__10485,G__10486,G__10487,G__10488));
});
var G__11239__11 = (function (self__,a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__10489 = a;
var G__10490 = b;
var G__10491 = c;
var G__10492 = d;
var G__10493 = e;
var G__10494 = f;
var G__10495 = g;
var G__10496 = h;
var G__10497 = i;
var G__10498 = j;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(G__10489,G__10490,G__10491,G__10492,G__10493,G__10494,G__10495,G__10496,G__10497,G__10498) : self__.dispatch_fn.call(null,G__10489,G__10490,G__10491,G__10492,G__10493,G__10494,G__10495,G__10496,G__10497,G__10498));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__10499 = a;
var G__10500 = b;
var G__10501 = c;
var G__10502 = d;
var G__10503 = e;
var G__10504 = f;
var G__10505 = g;
var G__10506 = h;
var G__10507 = i;
var G__10508 = j;
return (target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(G__10499,G__10500,G__10501,G__10502,G__10503,G__10504,G__10505,G__10506,G__10507,G__10508) : target_fn.call(null,G__10499,G__10500,G__10501,G__10502,G__10503,G__10504,G__10505,G__10506,G__10507,G__10508));
});
var G__11239__12 = (function (self__,a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__10509 = a;
var G__10510 = b;
var G__10511 = c;
var G__10512 = d;
var G__10513 = e;
var G__10514 = f;
var G__10515 = g;
var G__10516 = h;
var G__10517 = i;
var G__10518 = j;
var G__10519 = k;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(G__10509,G__10510,G__10511,G__10512,G__10513,G__10514,G__10515,G__10516,G__10517,G__10518,G__10519) : self__.dispatch_fn.call(null,G__10509,G__10510,G__10511,G__10512,G__10513,G__10514,G__10515,G__10516,G__10517,G__10518,G__10519));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__10520 = a;
var G__10521 = b;
var G__10522 = c;
var G__10523 = d;
var G__10524 = e;
var G__10525 = f;
var G__10526 = g;
var G__10527 = h;
var G__10528 = i;
var G__10529 = j;
var G__10530 = k;
return (target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(G__10520,G__10521,G__10522,G__10523,G__10524,G__10525,G__10526,G__10527,G__10528,G__10529,G__10530) : target_fn.call(null,G__10520,G__10521,G__10522,G__10523,G__10524,G__10525,G__10526,G__10527,G__10528,G__10529,G__10530));
});
var G__11239__13 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__10531 = a;
var G__10532 = b;
var G__10533 = c;
var G__10534 = d;
var G__10535 = e;
var G__10536 = f;
var G__10537 = g;
var G__10538 = h;
var G__10539 = i;
var G__10540 = j;
var G__10541 = k;
var G__10542 = l;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(G__10531,G__10532,G__10533,G__10534,G__10535,G__10536,G__10537,G__10538,G__10539,G__10540,G__10541,G__10542) : self__.dispatch_fn.call(null,G__10531,G__10532,G__10533,G__10534,G__10535,G__10536,G__10537,G__10538,G__10539,G__10540,G__10541,G__10542));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__10543 = a;
var G__10544 = b;
var G__10545 = c;
var G__10546 = d;
var G__10547 = e;
var G__10548 = f;
var G__10549 = g;
var G__10550 = h;
var G__10551 = i;
var G__10552 = j;
var G__10553 = k;
var G__10554 = l;
return (target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(G__10543,G__10544,G__10545,G__10546,G__10547,G__10548,G__10549,G__10550,G__10551,G__10552,G__10553,G__10554) : target_fn.call(null,G__10543,G__10544,G__10545,G__10546,G__10547,G__10548,G__10549,G__10550,G__10551,G__10552,G__10553,G__10554));
});
var G__11239__14 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__10555 = a;
var G__10556 = b;
var G__10557 = c;
var G__10558 = d;
var G__10559 = e;
var G__10560 = f;
var G__10561 = g;
var G__10562 = h;
var G__10563 = i;
var G__10564 = j;
var G__10565 = k;
var G__10566 = l;
var G__10567 = m;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(G__10555,G__10556,G__10557,G__10558,G__10559,G__10560,G__10561,G__10562,G__10563,G__10564,G__10565,G__10566,G__10567) : self__.dispatch_fn.call(null,G__10555,G__10556,G__10557,G__10558,G__10559,G__10560,G__10561,G__10562,G__10563,G__10564,G__10565,G__10566,G__10567));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__10568 = a;
var G__10569 = b;
var G__10570 = c;
var G__10571 = d;
var G__10572 = e;
var G__10573 = f;
var G__10574 = g;
var G__10575 = h;
var G__10576 = i;
var G__10577 = j;
var G__10578 = k;
var G__10579 = l;
var G__10580 = m;
return (target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(G__10568,G__10569,G__10570,G__10571,G__10572,G__10573,G__10574,G__10575,G__10576,G__10577,G__10578,G__10579,G__10580) : target_fn.call(null,G__10568,G__10569,G__10570,G__10571,G__10572,G__10573,G__10574,G__10575,G__10576,G__10577,G__10578,G__10579,G__10580));
});
var G__11239__15 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__10581 = a;
var G__10582 = b;
var G__10583 = c;
var G__10584 = d;
var G__10585 = e;
var G__10586 = f;
var G__10587 = g;
var G__10588 = h;
var G__10589 = i;
var G__10590 = j;
var G__10591 = k;
var G__10592 = l;
var G__10593 = m;
var G__10594 = n;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(G__10581,G__10582,G__10583,G__10584,G__10585,G__10586,G__10587,G__10588,G__10589,G__10590,G__10591,G__10592,G__10593,G__10594) : self__.dispatch_fn.call(null,G__10581,G__10582,G__10583,G__10584,G__10585,G__10586,G__10587,G__10588,G__10589,G__10590,G__10591,G__10592,G__10593,G__10594));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__10595 = a;
var G__10596 = b;
var G__10597 = c;
var G__10598 = d;
var G__10599 = e;
var G__10600 = f;
var G__10601 = g;
var G__10602 = h;
var G__10603 = i;
var G__10604 = j;
var G__10605 = k;
var G__10606 = l;
var G__10607 = m;
var G__10608 = n;
return (target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(G__10595,G__10596,G__10597,G__10598,G__10599,G__10600,G__10601,G__10602,G__10603,G__10604,G__10605,G__10606,G__10607,G__10608) : target_fn.call(null,G__10595,G__10596,G__10597,G__10598,G__10599,G__10600,G__10601,G__10602,G__10603,G__10604,G__10605,G__10606,G__10607,G__10608));
});
var G__11239__16 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__10609 = a;
var G__10610 = b;
var G__10611 = c;
var G__10612 = d;
var G__10613 = e;
var G__10614 = f;
var G__10615 = g;
var G__10616 = h;
var G__10617 = i;
var G__10618 = j;
var G__10619 = k;
var G__10620 = l;
var G__10621 = m;
var G__10622 = n;
var G__10623 = o;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(G__10609,G__10610,G__10611,G__10612,G__10613,G__10614,G__10615,G__10616,G__10617,G__10618,G__10619,G__10620,G__10621,G__10622,G__10623) : self__.dispatch_fn.call(null,G__10609,G__10610,G__10611,G__10612,G__10613,G__10614,G__10615,G__10616,G__10617,G__10618,G__10619,G__10620,G__10621,G__10622,G__10623));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__10624 = a;
var G__10625 = b;
var G__10626 = c;
var G__10627 = d;
var G__10628 = e;
var G__10629 = f;
var G__10630 = g;
var G__10631 = h;
var G__10632 = i;
var G__10633 = j;
var G__10634 = k;
var G__10635 = l;
var G__10636 = m;
var G__10637 = n;
var G__10638 = o;
return (target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(G__10624,G__10625,G__10626,G__10627,G__10628,G__10629,G__10630,G__10631,G__10632,G__10633,G__10634,G__10635,G__10636,G__10637,G__10638) : target_fn.call(null,G__10624,G__10625,G__10626,G__10627,G__10628,G__10629,G__10630,G__10631,G__10632,G__10633,G__10634,G__10635,G__10636,G__10637,G__10638));
});
var G__11239__17 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__10639 = a;
var G__10640 = b;
var G__10641 = c;
var G__10642 = d;
var G__10643 = e;
var G__10644 = f;
var G__10645 = g;
var G__10646 = h;
var G__10647 = i;
var G__10648 = j;
var G__10649 = k;
var G__10650 = l;
var G__10651 = m;
var G__10652 = n;
var G__10653 = o;
var G__10654 = p;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(G__10639,G__10640,G__10641,G__10642,G__10643,G__10644,G__10645,G__10646,G__10647,G__10648,G__10649,G__10650,G__10651,G__10652,G__10653,G__10654) : self__.dispatch_fn.call(null,G__10639,G__10640,G__10641,G__10642,G__10643,G__10644,G__10645,G__10646,G__10647,G__10648,G__10649,G__10650,G__10651,G__10652,G__10653,G__10654));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__10655 = a;
var G__10656 = b;
var G__10657 = c;
var G__10658 = d;
var G__10659 = e;
var G__10660 = f;
var G__10661 = g;
var G__10662 = h;
var G__10663 = i;
var G__10664 = j;
var G__10665 = k;
var G__10666 = l;
var G__10667 = m;
var G__10668 = n;
var G__10669 = o;
var G__10670 = p;
return (target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(G__10655,G__10656,G__10657,G__10658,G__10659,G__10660,G__10661,G__10662,G__10663,G__10664,G__10665,G__10666,G__10667,G__10668,G__10669,G__10670) : target_fn.call(null,G__10655,G__10656,G__10657,G__10658,G__10659,G__10660,G__10661,G__10662,G__10663,G__10664,G__10665,G__10666,G__10667,G__10668,G__10669,G__10670));
});
var G__11239__18 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__10671 = a;
var G__10672 = b;
var G__10673 = c;
var G__10674 = d;
var G__10675 = e;
var G__10676 = f;
var G__10677 = g;
var G__10678 = h;
var G__10679 = i;
var G__10680 = j;
var G__10681 = k;
var G__10682 = l;
var G__10683 = m;
var G__10684 = n;
var G__10685 = o;
var G__10686 = p;
var G__10687 = q;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(G__10671,G__10672,G__10673,G__10674,G__10675,G__10676,G__10677,G__10678,G__10679,G__10680,G__10681,G__10682,G__10683,G__10684,G__10685,G__10686,G__10687) : self__.dispatch_fn.call(null,G__10671,G__10672,G__10673,G__10674,G__10675,G__10676,G__10677,G__10678,G__10679,G__10680,G__10681,G__10682,G__10683,G__10684,G__10685,G__10686,G__10687));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__10688 = a;
var G__10689 = b;
var G__10690 = c;
var G__10691 = d;
var G__10692 = e;
var G__10693 = f;
var G__10694 = g;
var G__10695 = h;
var G__10696 = i;
var G__10697 = j;
var G__10698 = k;
var G__10699 = l;
var G__10700 = m;
var G__10701 = n;
var G__10702 = o;
var G__10703 = p;
var G__10704 = q;
return (target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(G__10688,G__10689,G__10690,G__10691,G__10692,G__10693,G__10694,G__10695,G__10696,G__10697,G__10698,G__10699,G__10700,G__10701,G__10702,G__10703,G__10704) : target_fn.call(null,G__10688,G__10689,G__10690,G__10691,G__10692,G__10693,G__10694,G__10695,G__10696,G__10697,G__10698,G__10699,G__10700,G__10701,G__10702,G__10703,G__10704));
});
var G__11239__19 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__10705 = a;
var G__10706 = b;
var G__10707 = c;
var G__10708 = d;
var G__10709 = e;
var G__10710 = f;
var G__10711 = g;
var G__10712 = h;
var G__10713 = i;
var G__10714 = j;
var G__10715 = k;
var G__10716 = l;
var G__10717 = m;
var G__10718 = n;
var G__10719 = o;
var G__10720 = p;
var G__10721 = q;
var G__10722 = r;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(G__10705,G__10706,G__10707,G__10708,G__10709,G__10710,G__10711,G__10712,G__10713,G__10714,G__10715,G__10716,G__10717,G__10718,G__10719,G__10720,G__10721,G__10722) : self__.dispatch_fn.call(null,G__10705,G__10706,G__10707,G__10708,G__10709,G__10710,G__10711,G__10712,G__10713,G__10714,G__10715,G__10716,G__10717,G__10718,G__10719,G__10720,G__10721,G__10722));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__10723 = a;
var G__10724 = b;
var G__10725 = c;
var G__10726 = d;
var G__10727 = e;
var G__10728 = f;
var G__10729 = g;
var G__10730 = h;
var G__10731 = i;
var G__10732 = j;
var G__10733 = k;
var G__10734 = l;
var G__10735 = m;
var G__10736 = n;
var G__10737 = o;
var G__10738 = p;
var G__10739 = q;
var G__10740 = r;
return (target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(G__10723,G__10724,G__10725,G__10726,G__10727,G__10728,G__10729,G__10730,G__10731,G__10732,G__10733,G__10734,G__10735,G__10736,G__10737,G__10738,G__10739,G__10740) : target_fn.call(null,G__10723,G__10724,G__10725,G__10726,G__10727,G__10728,G__10729,G__10730,G__10731,G__10732,G__10733,G__10734,G__10735,G__10736,G__10737,G__10738,G__10739,G__10740));
});
var G__11239__20 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__10741 = a;
var G__10742 = b;
var G__10743 = c;
var G__10744 = d;
var G__10745 = e;
var G__10746 = f;
var G__10747 = g;
var G__10748 = h;
var G__10749 = i;
var G__10750 = j;
var G__10751 = k;
var G__10752 = l;
var G__10753 = m;
var G__10754 = n;
var G__10755 = o;
var G__10756 = p;
var G__10757 = q;
var G__10758 = r;
var G__10759 = s;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(G__10741,G__10742,G__10743,G__10744,G__10745,G__10746,G__10747,G__10748,G__10749,G__10750,G__10751,G__10752,G__10753,G__10754,G__10755,G__10756,G__10757,G__10758,G__10759) : self__.dispatch_fn.call(null,G__10741,G__10742,G__10743,G__10744,G__10745,G__10746,G__10747,G__10748,G__10749,G__10750,G__10751,G__10752,G__10753,G__10754,G__10755,G__10756,G__10757,G__10758,G__10759));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__10760 = a;
var G__10761 = b;
var G__10762 = c;
var G__10763 = d;
var G__10764 = e;
var G__10765 = f;
var G__10766 = g;
var G__10767 = h;
var G__10768 = i;
var G__10769 = j;
var G__10770 = k;
var G__10771 = l;
var G__10772 = m;
var G__10773 = n;
var G__10774 = o;
var G__10775 = p;
var G__10776 = q;
var G__10777 = r;
var G__10778 = s;
return (target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(G__10760,G__10761,G__10762,G__10763,G__10764,G__10765,G__10766,G__10767,G__10768,G__10769,G__10770,G__10771,G__10772,G__10773,G__10774,G__10775,G__10776,G__10777,G__10778) : target_fn.call(null,G__10760,G__10761,G__10762,G__10763,G__10764,G__10765,G__10766,G__10767,G__10768,G__10769,G__10770,G__10771,G__10772,G__10773,G__10774,G__10775,G__10776,G__10777,G__10778));
});
var G__11239__21 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__10779 = a;
var G__10780 = b;
var G__10781 = c;
var G__10782 = d;
var G__10783 = e;
var G__10784 = f;
var G__10785 = g;
var G__10786 = h;
var G__10787 = i;
var G__10788 = j;
var G__10789 = k;
var G__10790 = l;
var G__10791 = m;
var G__10792 = n;
var G__10793 = o;
var G__10794 = p;
var G__10795 = q;
var G__10796 = r;
var G__10797 = s;
var G__10798 = t;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(G__10779,G__10780,G__10781,G__10782,G__10783,G__10784,G__10785,G__10786,G__10787,G__10788,G__10789,G__10790,G__10791,G__10792,G__10793,G__10794,G__10795,G__10796,G__10797,G__10798) : self__.dispatch_fn.call(null,G__10779,G__10780,G__10781,G__10782,G__10783,G__10784,G__10785,G__10786,G__10787,G__10788,G__10789,G__10790,G__10791,G__10792,G__10793,G__10794,G__10795,G__10796,G__10797,G__10798));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__10799 = a;
var G__10800 = b;
var G__10801 = c;
var G__10802 = d;
var G__10803 = e;
var G__10804 = f;
var G__10805 = g;
var G__10806 = h;
var G__10807 = i;
var G__10808 = j;
var G__10809 = k;
var G__10810 = l;
var G__10811 = m;
var G__10812 = n;
var G__10813 = o;
var G__10814 = p;
var G__10815 = q;
var G__10816 = r;
var G__10817 = s;
var G__10818 = t;
return (target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(G__10799,G__10800,G__10801,G__10802,G__10803,G__10804,G__10805,G__10806,G__10807,G__10808,G__10809,G__10810,G__10811,G__10812,G__10813,G__10814,G__10815,G__10816,G__10817,G__10818) : target_fn.call(null,G__10799,G__10800,G__10801,G__10802,G__10803,G__10804,G__10805,G__10806,G__10807,G__10808,G__10809,G__10810,G__10811,G__10812,G__10813,G__10814,G__10815,G__10816,G__10817,G__10818));
});
var G__11239__22 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
});
G__11239 = function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return G__11239__1.call(this,self__);
case 2:
return G__11239__2.call(this,self__,a);
case 3:
return G__11239__3.call(this,self__,a,b);
case 4:
return G__11239__4.call(this,self__,a,b,c);
case 5:
return G__11239__5.call(this,self__,a,b,c,d);
case 6:
return G__11239__6.call(this,self__,a,b,c,d,e);
case 7:
return G__11239__7.call(this,self__,a,b,c,d,e,f);
case 8:
return G__11239__8.call(this,self__,a,b,c,d,e,f,g);
case 9:
return G__11239__9.call(this,self__,a,b,c,d,e,f,g,h);
case 10:
return G__11239__10.call(this,self__,a,b,c,d,e,f,g,h,i);
case 11:
return G__11239__11.call(this,self__,a,b,c,d,e,f,g,h,i,j);
case 12:
return G__11239__12.call(this,self__,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return G__11239__13.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return G__11239__14.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return G__11239__15.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return G__11239__16.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return G__11239__17.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return G__11239__18.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return G__11239__19.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return G__11239__20.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return G__11239__21.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return G__11239__22.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__11239.cljs$core$IFn$_invoke$arity$1 = G__11239__1;
G__11239.cljs$core$IFn$_invoke$arity$2 = G__11239__2;
G__11239.cljs$core$IFn$_invoke$arity$3 = G__11239__3;
G__11239.cljs$core$IFn$_invoke$arity$4 = G__11239__4;
G__11239.cljs$core$IFn$_invoke$arity$5 = G__11239__5;
G__11239.cljs$core$IFn$_invoke$arity$6 = G__11239__6;
G__11239.cljs$core$IFn$_invoke$arity$7 = G__11239__7;
G__11239.cljs$core$IFn$_invoke$arity$8 = G__11239__8;
G__11239.cljs$core$IFn$_invoke$arity$9 = G__11239__9;
G__11239.cljs$core$IFn$_invoke$arity$10 = G__11239__10;
G__11239.cljs$core$IFn$_invoke$arity$11 = G__11239__11;
G__11239.cljs$core$IFn$_invoke$arity$12 = G__11239__12;
G__11239.cljs$core$IFn$_invoke$arity$13 = G__11239__13;
G__11239.cljs$core$IFn$_invoke$arity$14 = G__11239__14;
G__11239.cljs$core$IFn$_invoke$arity$15 = G__11239__15;
G__11239.cljs$core$IFn$_invoke$arity$16 = G__11239__16;
G__11239.cljs$core$IFn$_invoke$arity$17 = G__11239__17;
G__11239.cljs$core$IFn$_invoke$arity$18 = G__11239__18;
G__11239.cljs$core$IFn$_invoke$arity$19 = G__11239__19;
G__11239.cljs$core$IFn$_invoke$arity$20 = G__11239__20;
G__11239.cljs$core$IFn$_invoke$arity$21 = G__11239__21;
G__11239.cljs$core$IFn$_invoke$arity$22 = G__11239__22;
return G__11239;
})()
;

cljs.core.MultiFn.prototype.apply = (function (self__,args10391){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args10391)));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){
var self__ = this;
var mf = this;
var dispatch_val = (function (){return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return (target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$1 = (function (a){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__10819 = a;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(G__10819) : self__.dispatch_fn.call(null,G__10819));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__10820 = a;
return (target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(G__10820) : target_fn.call(null,G__10820));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$2 = (function (a,b){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__10821 = a;
var G__10822 = b;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(G__10821,G__10822) : self__.dispatch_fn.call(null,G__10821,G__10822));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__10823 = a;
var G__10824 = b;
return (target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(G__10823,G__10824) : target_fn.call(null,G__10823,G__10824));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$3 = (function (a,b,c){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__10825 = a;
var G__10826 = b;
var G__10827 = c;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(G__10825,G__10826,G__10827) : self__.dispatch_fn.call(null,G__10825,G__10826,G__10827));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__10828 = a;
var G__10829 = b;
var G__10830 = c;
return (target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(G__10828,G__10829,G__10830) : target_fn.call(null,G__10828,G__10829,G__10830));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$4 = (function (a,b,c,d){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__10831 = a;
var G__10832 = b;
var G__10833 = c;
var G__10834 = d;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(G__10831,G__10832,G__10833,G__10834) : self__.dispatch_fn.call(null,G__10831,G__10832,G__10833,G__10834));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__10835 = a;
var G__10836 = b;
var G__10837 = c;
var G__10838 = d;
return (target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(G__10835,G__10836,G__10837,G__10838) : target_fn.call(null,G__10835,G__10836,G__10837,G__10838));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$5 = (function (a,b,c,d,e){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__10839 = a;
var G__10840 = b;
var G__10841 = c;
var G__10842 = d;
var G__10843 = e;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(G__10839,G__10840,G__10841,G__10842,G__10843) : self__.dispatch_fn.call(null,G__10839,G__10840,G__10841,G__10842,G__10843));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__10844 = a;
var G__10845 = b;
var G__10846 = c;
var G__10847 = d;
var G__10848 = e;
return (target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(G__10844,G__10845,G__10846,G__10847,G__10848) : target_fn.call(null,G__10844,G__10845,G__10846,G__10847,G__10848));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$6 = (function (a,b,c,d,e,f){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__10849 = a;
var G__10850 = b;
var G__10851 = c;
var G__10852 = d;
var G__10853 = e;
var G__10854 = f;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(G__10849,G__10850,G__10851,G__10852,G__10853,G__10854) : self__.dispatch_fn.call(null,G__10849,G__10850,G__10851,G__10852,G__10853,G__10854));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__10855 = a;
var G__10856 = b;
var G__10857 = c;
var G__10858 = d;
var G__10859 = e;
var G__10860 = f;
return (target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(G__10855,G__10856,G__10857,G__10858,G__10859,G__10860) : target_fn.call(null,G__10855,G__10856,G__10857,G__10858,G__10859,G__10860));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$7 = (function (a,b,c,d,e,f,g){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__10861 = a;
var G__10862 = b;
var G__10863 = c;
var G__10864 = d;
var G__10865 = e;
var G__10866 = f;
var G__10867 = g;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(G__10861,G__10862,G__10863,G__10864,G__10865,G__10866,G__10867) : self__.dispatch_fn.call(null,G__10861,G__10862,G__10863,G__10864,G__10865,G__10866,G__10867));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__10868 = a;
var G__10869 = b;
var G__10870 = c;
var G__10871 = d;
var G__10872 = e;
var G__10873 = f;
var G__10874 = g;
return (target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(G__10868,G__10869,G__10870,G__10871,G__10872,G__10873,G__10874) : target_fn.call(null,G__10868,G__10869,G__10870,G__10871,G__10872,G__10873,G__10874));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$8 = (function (a,b,c,d,e,f,g,h){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__10875 = a;
var G__10876 = b;
var G__10877 = c;
var G__10878 = d;
var G__10879 = e;
var G__10880 = f;
var G__10881 = g;
var G__10882 = h;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(G__10875,G__10876,G__10877,G__10878,G__10879,G__10880,G__10881,G__10882) : self__.dispatch_fn.call(null,G__10875,G__10876,G__10877,G__10878,G__10879,G__10880,G__10881,G__10882));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__10883 = a;
var G__10884 = b;
var G__10885 = c;
var G__10886 = d;
var G__10887 = e;
var G__10888 = f;
var G__10889 = g;
var G__10890 = h;
return (target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(G__10883,G__10884,G__10885,G__10886,G__10887,G__10888,G__10889,G__10890) : target_fn.call(null,G__10883,G__10884,G__10885,G__10886,G__10887,G__10888,G__10889,G__10890));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$9 = (function (a,b,c,d,e,f,g,h,i){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__10891 = a;
var G__10892 = b;
var G__10893 = c;
var G__10894 = d;
var G__10895 = e;
var G__10896 = f;
var G__10897 = g;
var G__10898 = h;
var G__10899 = i;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(G__10891,G__10892,G__10893,G__10894,G__10895,G__10896,G__10897,G__10898,G__10899) : self__.dispatch_fn.call(null,G__10891,G__10892,G__10893,G__10894,G__10895,G__10896,G__10897,G__10898,G__10899));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__10900 = a;
var G__10901 = b;
var G__10902 = c;
var G__10903 = d;
var G__10904 = e;
var G__10905 = f;
var G__10906 = g;
var G__10907 = h;
var G__10908 = i;
return (target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(G__10900,G__10901,G__10902,G__10903,G__10904,G__10905,G__10906,G__10907,G__10908) : target_fn.call(null,G__10900,G__10901,G__10902,G__10903,G__10904,G__10905,G__10906,G__10907,G__10908));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$10 = (function (a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__10909 = a;
var G__10910 = b;
var G__10911 = c;
var G__10912 = d;
var G__10913 = e;
var G__10914 = f;
var G__10915 = g;
var G__10916 = h;
var G__10917 = i;
var G__10918 = j;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(G__10909,G__10910,G__10911,G__10912,G__10913,G__10914,G__10915,G__10916,G__10917,G__10918) : self__.dispatch_fn.call(null,G__10909,G__10910,G__10911,G__10912,G__10913,G__10914,G__10915,G__10916,G__10917,G__10918));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__10919 = a;
var G__10920 = b;
var G__10921 = c;
var G__10922 = d;
var G__10923 = e;
var G__10924 = f;
var G__10925 = g;
var G__10926 = h;
var G__10927 = i;
var G__10928 = j;
return (target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(G__10919,G__10920,G__10921,G__10922,G__10923,G__10924,G__10925,G__10926,G__10927,G__10928) : target_fn.call(null,G__10919,G__10920,G__10921,G__10922,G__10923,G__10924,G__10925,G__10926,G__10927,G__10928));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$11 = (function (a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__10929 = a;
var G__10930 = b;
var G__10931 = c;
var G__10932 = d;
var G__10933 = e;
var G__10934 = f;
var G__10935 = g;
var G__10936 = h;
var G__10937 = i;
var G__10938 = j;
var G__10939 = k;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(G__10929,G__10930,G__10931,G__10932,G__10933,G__10934,G__10935,G__10936,G__10937,G__10938,G__10939) : self__.dispatch_fn.call(null,G__10929,G__10930,G__10931,G__10932,G__10933,G__10934,G__10935,G__10936,G__10937,G__10938,G__10939));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__10940 = a;
var G__10941 = b;
var G__10942 = c;
var G__10943 = d;
var G__10944 = e;
var G__10945 = f;
var G__10946 = g;
var G__10947 = h;
var G__10948 = i;
var G__10949 = j;
var G__10950 = k;
return (target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(G__10940,G__10941,G__10942,G__10943,G__10944,G__10945,G__10946,G__10947,G__10948,G__10949,G__10950) : target_fn.call(null,G__10940,G__10941,G__10942,G__10943,G__10944,G__10945,G__10946,G__10947,G__10948,G__10949,G__10950));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$12 = (function (a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__10951 = a;
var G__10952 = b;
var G__10953 = c;
var G__10954 = d;
var G__10955 = e;
var G__10956 = f;
var G__10957 = g;
var G__10958 = h;
var G__10959 = i;
var G__10960 = j;
var G__10961 = k;
var G__10962 = l;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(G__10951,G__10952,G__10953,G__10954,G__10955,G__10956,G__10957,G__10958,G__10959,G__10960,G__10961,G__10962) : self__.dispatch_fn.call(null,G__10951,G__10952,G__10953,G__10954,G__10955,G__10956,G__10957,G__10958,G__10959,G__10960,G__10961,G__10962));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__10963 = a;
var G__10964 = b;
var G__10965 = c;
var G__10966 = d;
var G__10967 = e;
var G__10968 = f;
var G__10969 = g;
var G__10970 = h;
var G__10971 = i;
var G__10972 = j;
var G__10973 = k;
var G__10974 = l;
return (target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(G__10963,G__10964,G__10965,G__10966,G__10967,G__10968,G__10969,G__10970,G__10971,G__10972,G__10973,G__10974) : target_fn.call(null,G__10963,G__10964,G__10965,G__10966,G__10967,G__10968,G__10969,G__10970,G__10971,G__10972,G__10973,G__10974));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$13 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__10975 = a;
var G__10976 = b;
var G__10977 = c;
var G__10978 = d;
var G__10979 = e;
var G__10980 = f;
var G__10981 = g;
var G__10982 = h;
var G__10983 = i;
var G__10984 = j;
var G__10985 = k;
var G__10986 = l;
var G__10987 = m;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(G__10975,G__10976,G__10977,G__10978,G__10979,G__10980,G__10981,G__10982,G__10983,G__10984,G__10985,G__10986,G__10987) : self__.dispatch_fn.call(null,G__10975,G__10976,G__10977,G__10978,G__10979,G__10980,G__10981,G__10982,G__10983,G__10984,G__10985,G__10986,G__10987));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__10988 = a;
var G__10989 = b;
var G__10990 = c;
var G__10991 = d;
var G__10992 = e;
var G__10993 = f;
var G__10994 = g;
var G__10995 = h;
var G__10996 = i;
var G__10997 = j;
var G__10998 = k;
var G__10999 = l;
var G__11000 = m;
return (target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(G__10988,G__10989,G__10990,G__10991,G__10992,G__10993,G__10994,G__10995,G__10996,G__10997,G__10998,G__10999,G__11000) : target_fn.call(null,G__10988,G__10989,G__10990,G__10991,G__10992,G__10993,G__10994,G__10995,G__10996,G__10997,G__10998,G__10999,G__11000));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$14 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__11001 = a;
var G__11002 = b;
var G__11003 = c;
var G__11004 = d;
var G__11005 = e;
var G__11006 = f;
var G__11007 = g;
var G__11008 = h;
var G__11009 = i;
var G__11010 = j;
var G__11011 = k;
var G__11012 = l;
var G__11013 = m;
var G__11014 = n;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(G__11001,G__11002,G__11003,G__11004,G__11005,G__11006,G__11007,G__11008,G__11009,G__11010,G__11011,G__11012,G__11013,G__11014) : self__.dispatch_fn.call(null,G__11001,G__11002,G__11003,G__11004,G__11005,G__11006,G__11007,G__11008,G__11009,G__11010,G__11011,G__11012,G__11013,G__11014));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11015 = a;
var G__11016 = b;
var G__11017 = c;
var G__11018 = d;
var G__11019 = e;
var G__11020 = f;
var G__11021 = g;
var G__11022 = h;
var G__11023 = i;
var G__11024 = j;
var G__11025 = k;
var G__11026 = l;
var G__11027 = m;
var G__11028 = n;
return (target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(G__11015,G__11016,G__11017,G__11018,G__11019,G__11020,G__11021,G__11022,G__11023,G__11024,G__11025,G__11026,G__11027,G__11028) : target_fn.call(null,G__11015,G__11016,G__11017,G__11018,G__11019,G__11020,G__11021,G__11022,G__11023,G__11024,G__11025,G__11026,G__11027,G__11028));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$15 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__11029 = a;
var G__11030 = b;
var G__11031 = c;
var G__11032 = d;
var G__11033 = e;
var G__11034 = f;
var G__11035 = g;
var G__11036 = h;
var G__11037 = i;
var G__11038 = j;
var G__11039 = k;
var G__11040 = l;
var G__11041 = m;
var G__11042 = n;
var G__11043 = o;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(G__11029,G__11030,G__11031,G__11032,G__11033,G__11034,G__11035,G__11036,G__11037,G__11038,G__11039,G__11040,G__11041,G__11042,G__11043) : self__.dispatch_fn.call(null,G__11029,G__11030,G__11031,G__11032,G__11033,G__11034,G__11035,G__11036,G__11037,G__11038,G__11039,G__11040,G__11041,G__11042,G__11043));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11044 = a;
var G__11045 = b;
var G__11046 = c;
var G__11047 = d;
var G__11048 = e;
var G__11049 = f;
var G__11050 = g;
var G__11051 = h;
var G__11052 = i;
var G__11053 = j;
var G__11054 = k;
var G__11055 = l;
var G__11056 = m;
var G__11057 = n;
var G__11058 = o;
return (target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(G__11044,G__11045,G__11046,G__11047,G__11048,G__11049,G__11050,G__11051,G__11052,G__11053,G__11054,G__11055,G__11056,G__11057,G__11058) : target_fn.call(null,G__11044,G__11045,G__11046,G__11047,G__11048,G__11049,G__11050,G__11051,G__11052,G__11053,G__11054,G__11055,G__11056,G__11057,G__11058));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$16 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__11059 = a;
var G__11060 = b;
var G__11061 = c;
var G__11062 = d;
var G__11063 = e;
var G__11064 = f;
var G__11065 = g;
var G__11066 = h;
var G__11067 = i;
var G__11068 = j;
var G__11069 = k;
var G__11070 = l;
var G__11071 = m;
var G__11072 = n;
var G__11073 = o;
var G__11074 = p;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(G__11059,G__11060,G__11061,G__11062,G__11063,G__11064,G__11065,G__11066,G__11067,G__11068,G__11069,G__11070,G__11071,G__11072,G__11073,G__11074) : self__.dispatch_fn.call(null,G__11059,G__11060,G__11061,G__11062,G__11063,G__11064,G__11065,G__11066,G__11067,G__11068,G__11069,G__11070,G__11071,G__11072,G__11073,G__11074));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11075 = a;
var G__11076 = b;
var G__11077 = c;
var G__11078 = d;
var G__11079 = e;
var G__11080 = f;
var G__11081 = g;
var G__11082 = h;
var G__11083 = i;
var G__11084 = j;
var G__11085 = k;
var G__11086 = l;
var G__11087 = m;
var G__11088 = n;
var G__11089 = o;
var G__11090 = p;
return (target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(G__11075,G__11076,G__11077,G__11078,G__11079,G__11080,G__11081,G__11082,G__11083,G__11084,G__11085,G__11086,G__11087,G__11088,G__11089,G__11090) : target_fn.call(null,G__11075,G__11076,G__11077,G__11078,G__11079,G__11080,G__11081,G__11082,G__11083,G__11084,G__11085,G__11086,G__11087,G__11088,G__11089,G__11090));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$17 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__11091 = a;
var G__11092 = b;
var G__11093 = c;
var G__11094 = d;
var G__11095 = e;
var G__11096 = f;
var G__11097 = g;
var G__11098 = h;
var G__11099 = i;
var G__11100 = j;
var G__11101 = k;
var G__11102 = l;
var G__11103 = m;
var G__11104 = n;
var G__11105 = o;
var G__11106 = p;
var G__11107 = q;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(G__11091,G__11092,G__11093,G__11094,G__11095,G__11096,G__11097,G__11098,G__11099,G__11100,G__11101,G__11102,G__11103,G__11104,G__11105,G__11106,G__11107) : self__.dispatch_fn.call(null,G__11091,G__11092,G__11093,G__11094,G__11095,G__11096,G__11097,G__11098,G__11099,G__11100,G__11101,G__11102,G__11103,G__11104,G__11105,G__11106,G__11107));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11108 = a;
var G__11109 = b;
var G__11110 = c;
var G__11111 = d;
var G__11112 = e;
var G__11113 = f;
var G__11114 = g;
var G__11115 = h;
var G__11116 = i;
var G__11117 = j;
var G__11118 = k;
var G__11119 = l;
var G__11120 = m;
var G__11121 = n;
var G__11122 = o;
var G__11123 = p;
var G__11124 = q;
return (target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(G__11108,G__11109,G__11110,G__11111,G__11112,G__11113,G__11114,G__11115,G__11116,G__11117,G__11118,G__11119,G__11120,G__11121,G__11122,G__11123,G__11124) : target_fn.call(null,G__11108,G__11109,G__11110,G__11111,G__11112,G__11113,G__11114,G__11115,G__11116,G__11117,G__11118,G__11119,G__11120,G__11121,G__11122,G__11123,G__11124));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$18 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__11125 = a;
var G__11126 = b;
var G__11127 = c;
var G__11128 = d;
var G__11129 = e;
var G__11130 = f;
var G__11131 = g;
var G__11132 = h;
var G__11133 = i;
var G__11134 = j;
var G__11135 = k;
var G__11136 = l;
var G__11137 = m;
var G__11138 = n;
var G__11139 = o;
var G__11140 = p;
var G__11141 = q;
var G__11142 = r;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(G__11125,G__11126,G__11127,G__11128,G__11129,G__11130,G__11131,G__11132,G__11133,G__11134,G__11135,G__11136,G__11137,G__11138,G__11139,G__11140,G__11141,G__11142) : self__.dispatch_fn.call(null,G__11125,G__11126,G__11127,G__11128,G__11129,G__11130,G__11131,G__11132,G__11133,G__11134,G__11135,G__11136,G__11137,G__11138,G__11139,G__11140,G__11141,G__11142));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11143 = a;
var G__11144 = b;
var G__11145 = c;
var G__11146 = d;
var G__11147 = e;
var G__11148 = f;
var G__11149 = g;
var G__11150 = h;
var G__11151 = i;
var G__11152 = j;
var G__11153 = k;
var G__11154 = l;
var G__11155 = m;
var G__11156 = n;
var G__11157 = o;
var G__11158 = p;
var G__11159 = q;
var G__11160 = r;
return (target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(G__11143,G__11144,G__11145,G__11146,G__11147,G__11148,G__11149,G__11150,G__11151,G__11152,G__11153,G__11154,G__11155,G__11156,G__11157,G__11158,G__11159,G__11160) : target_fn.call(null,G__11143,G__11144,G__11145,G__11146,G__11147,G__11148,G__11149,G__11150,G__11151,G__11152,G__11153,G__11154,G__11155,G__11156,G__11157,G__11158,G__11159,G__11160));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$19 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__11161 = a;
var G__11162 = b;
var G__11163 = c;
var G__11164 = d;
var G__11165 = e;
var G__11166 = f;
var G__11167 = g;
var G__11168 = h;
var G__11169 = i;
var G__11170 = j;
var G__11171 = k;
var G__11172 = l;
var G__11173 = m;
var G__11174 = n;
var G__11175 = o;
var G__11176 = p;
var G__11177 = q;
var G__11178 = r;
var G__11179 = s;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(G__11161,G__11162,G__11163,G__11164,G__11165,G__11166,G__11167,G__11168,G__11169,G__11170,G__11171,G__11172,G__11173,G__11174,G__11175,G__11176,G__11177,G__11178,G__11179) : self__.dispatch_fn.call(null,G__11161,G__11162,G__11163,G__11164,G__11165,G__11166,G__11167,G__11168,G__11169,G__11170,G__11171,G__11172,G__11173,G__11174,G__11175,G__11176,G__11177,G__11178,G__11179));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11180 = a;
var G__11181 = b;
var G__11182 = c;
var G__11183 = d;
var G__11184 = e;
var G__11185 = f;
var G__11186 = g;
var G__11187 = h;
var G__11188 = i;
var G__11189 = j;
var G__11190 = k;
var G__11191 = l;
var G__11192 = m;
var G__11193 = n;
var G__11194 = o;
var G__11195 = p;
var G__11196 = q;
var G__11197 = r;
var G__11198 = s;
return (target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(G__11180,G__11181,G__11182,G__11183,G__11184,G__11185,G__11186,G__11187,G__11188,G__11189,G__11190,G__11191,G__11192,G__11193,G__11194,G__11195,G__11196,G__11197,G__11198) : target_fn.call(null,G__11180,G__11181,G__11182,G__11183,G__11184,G__11185,G__11186,G__11187,G__11188,G__11189,G__11190,G__11191,G__11192,G__11193,G__11194,G__11195,G__11196,G__11197,G__11198));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$20 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__11199 = a;
var G__11200 = b;
var G__11201 = c;
var G__11202 = d;
var G__11203 = e;
var G__11204 = f;
var G__11205 = g;
var G__11206 = h;
var G__11207 = i;
var G__11208 = j;
var G__11209 = k;
var G__11210 = l;
var G__11211 = m;
var G__11212 = n;
var G__11213 = o;
var G__11214 = p;
var G__11215 = q;
var G__11216 = r;
var G__11217 = s;
var G__11218 = t;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(G__11199,G__11200,G__11201,G__11202,G__11203,G__11204,G__11205,G__11206,G__11207,G__11208,G__11209,G__11210,G__11211,G__11212,G__11213,G__11214,G__11215,G__11216,G__11217,G__11218) : self__.dispatch_fn.call(null,G__11199,G__11200,G__11201,G__11202,G__11203,G__11204,G__11205,G__11206,G__11207,G__11208,G__11209,G__11210,G__11211,G__11212,G__11213,G__11214,G__11215,G__11216,G__11217,G__11218));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11219 = a;
var G__11220 = b;
var G__11221 = c;
var G__11222 = d;
var G__11223 = e;
var G__11224 = f;
var G__11225 = g;
var G__11226 = h;
var G__11227 = i;
var G__11228 = j;
var G__11229 = k;
var G__11230 = l;
var G__11231 = m;
var G__11232 = n;
var G__11233 = o;
var G__11234 = p;
var G__11235 = q;
var G__11236 = r;
var G__11237 = s;
var G__11238 = t;
return (target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(G__11219,G__11220,G__11221,G__11222,G__11223,G__11224,G__11225,G__11226,G__11227,G__11228,G__11229,G__11230,G__11231,G__11232,G__11233,G__11234,G__11235,G__11236,G__11237,G__11238) : target_fn.call(null,G__11219,G__11220,G__11221,G__11222,G__11223,G__11224,G__11225,G__11226,G__11227,G__11228,G__11229,G__11230,G__11231,G__11232,G__11233,G__11234,G__11235,G__11236,G__11237,G__11238));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$21 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var mf = this;
var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
});

cljs.core.MultiFn.cljs$lang$type = true;

cljs.core.MultiFn.cljs$lang$ctorStr = "cljs.core/MultiFn";

cljs.core.MultiFn.cljs$lang$ctorPrWriter = (function (this__4319__auto__,writer__4320__auto__,opt__4321__auto__){
return cljs.core._write(writer__4320__auto__,"cljs.core/MultiFn");
});

cljs.core.__GT_MultiFn = (function __GT_MultiFn(name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
return (new cljs.core.MultiFn(name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy));
});

/**
* Removes all of the methods of multimethod.
*/
cljs.core.remove_all_methods = (function remove_all_methods(multifn){
return cljs.core._reset(multifn);
});
/**
* Removes the method of multimethod associated with dispatch-value.
*/
cljs.core.remove_method = (function remove_method(multifn,dispatch_val){
return cljs.core._remove_method(multifn,dispatch_val);
});
/**
* Causes the multimethod to prefer matches of dispatch-val-x over dispatch-val-y
* when there is a conflict
*/
cljs.core.prefer_method = (function prefer_method(multifn,dispatch_val_x,dispatch_val_y){
return cljs.core._prefer_method(multifn,dispatch_val_x,dispatch_val_y);
});
/**
* Given a multimethod, returns a map of dispatch values -> dispatch fns
*/
cljs.core.methods$ = (function methods$(multifn){
return cljs.core._methods(multifn);
});
/**
* Given a multimethod and a dispatch value, returns the dispatch fn
* that would apply to that value, or nil if none apply and no default
*/
cljs.core.get_method = (function get_method(multifn,dispatch_val){
return cljs.core._get_method(multifn,dispatch_val);
});
/**
* Given a multimethod, returns a map of preferred value -> set of other values
*/
cljs.core.prefers = (function prefers(multifn){
return cljs.core._prefers(multifn);
});

/**
* @constructor
*/
cljs.core.UUID = (function (uuid){
this.uuid = uuid;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2153775104;
})
cljs.core.UUID.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__11240 = cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([this$__$1], 0));
return goog.string.hashCode(G__11240);
});

cljs.core.UUID.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (_,writer,___$1){
var self__ = this;
var ___$2 = this;
return cljs.core._write(writer,[cljs.core.str("#uuid \""),cljs.core.str(self__.uuid),cljs.core.str("\"")].join(''));
});

cljs.core.UUID.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
return ((other instanceof cljs.core.UUID)) && ((self__.uuid === other.uuid));
});

cljs.core.UUID.prototype.toString = (function (){
var self__ = this;
var _ = this;
return self__.uuid;
});

cljs.core.UUID.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.UUID.cljs$lang$type = true;

cljs.core.UUID.cljs$lang$ctorStr = "cljs.core/UUID";

cljs.core.UUID.cljs$lang$ctorPrWriter = (function (this__4319__auto__,writer__4320__auto__,opt__4321__auto__){
return cljs.core._write(writer__4320__auto__,"cljs.core/UUID");
});

cljs.core.__GT_UUID = (function __GT_UUID(uuid){
return (new cljs.core.UUID(uuid));
});


/**
* @constructor
*/
cljs.core.ExceptionInfo = (function (message,data,cause){
this.message = message;
this.data = data;
this.cause = cause;
})

cljs.core.ExceptionInfo.cljs$lang$type = true;

cljs.core.ExceptionInfo.cljs$lang$ctorStr = "cljs.core/ExceptionInfo";

cljs.core.ExceptionInfo.cljs$lang$ctorPrWriter = (function (this__4319__auto__,writer__4320__auto__,opt__4321__auto__){
return cljs.core._write(writer__4320__auto__,"cljs.core/ExceptionInfo");
});

cljs.core.__GT_ExceptionInfo = (function __GT_ExceptionInfo(message,data,cause){
return (new cljs.core.ExceptionInfo(message,data,cause));
});

cljs.core.ExceptionInfo.prototype = (new Error());
cljs.core.ExceptionInfo.prototype.constructor = cljs.core.ExceptionInfo;
/**
* Alpha - subject to change.
* Create an instance of ExceptionInfo, an Error type that carries a
* map of additional data.
*/
cljs.core.ex_info = (function() {
var ex_info = null;
var ex_info__2 = (function (msg,map){
return (new cljs.core.ExceptionInfo(msg,map,null));
});
var ex_info__3 = (function (msg,map,cause){
return (new cljs.core.ExceptionInfo(msg,map,cause));
});
ex_info = function(msg,map,cause){
switch(arguments.length){
case 2:
return ex_info__2.call(this,msg,map);
case 3:
return ex_info__3.call(this,msg,map,cause);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ex_info.cljs$core$IFn$_invoke$arity$2 = ex_info__2;
ex_info.cljs$core$IFn$_invoke$arity$3 = ex_info__3;
return ex_info;
})()
;
/**
* Alpha - subject to change.
* Returns exception data (a map) if ex is an ExceptionInfo.
* Otherwise returns nil.
*/
cljs.core.ex_data = (function ex_data(ex){
if((ex instanceof cljs.core.ExceptionInfo)){
return ex.data;
} else {
return null;
}
});
/**
* Alpha - subject to change.
* Returns the message attached to the given Error / ExceptionInfo object.
* For non-Errors returns nil.
*/
cljs.core.ex_message = (function ex_message(ex){
if((ex instanceof Error)){
return ex.message;
} else {
return null;
}
});
/**
* Alpha - subject to change.
* Returns exception cause (an Error / ExceptionInfo) if ex is an
* ExceptionInfo.
* Otherwise returns nil.
*/
cljs.core.ex_cause = (function ex_cause(ex){
if((ex instanceof cljs.core.ExceptionInfo)){
return ex.cause;
} else {
return null;
}
});
/**
* Returns an JavaScript compatible comparator based upon pred.
*/
cljs.core.comparator = (function comparator(pred){
return (function (x,y){
if(cljs.core.truth_((function (){var G__11245 = x;
var G__11246 = y;
return (pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(G__11245,G__11246) : pred.call(null,G__11245,G__11246));
})())){
return (-1);
} else {
if(cljs.core.truth_((function (){var G__11247 = y;
var G__11248 = x;
return (pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(G__11247,G__11248) : pred.call(null,G__11247,G__11248));
})())){
return (1);
} else {
return (0);

}
}
});
});
cljs.core.special_symbol_QMARK_ = (function special_symbol_QMARK_(x){
return cljs.core.contains_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 19, [new cljs.core.Symbol(null,"&","&",-2144855648,null),null,new cljs.core.Symbol(null,"defrecord*","defrecord*",-1936366207,null),null,new cljs.core.Symbol(null,"try","try",-1273693247,null),null,new cljs.core.Symbol(null,"loop*","loop*",615029416,null),null,new cljs.core.Symbol(null,"do","do",1686842252,null),null,new cljs.core.Symbol(null,"letfn*","letfn*",-110097810,null),null,new cljs.core.Symbol(null,"if","if",1181717262,null),null,new cljs.core.Symbol(null,"new","new",-444906321,null),null,new cljs.core.Symbol(null,"ns","ns",2082130287,null),null,new cljs.core.Symbol(null,"deftype*","deftype*",962659890,null),null,new cljs.core.Symbol(null,"let*","let*",1920721458,null),null,new cljs.core.Symbol(null,"js*","js*",-1134233646,null),null,new cljs.core.Symbol(null,"fn*","fn*",-752876845,null),null,new cljs.core.Symbol(null,"recur","recur",1202958259,null),null,new cljs.core.Symbol(null,"set!","set!",250714521,null),null,new cljs.core.Symbol(null,".",".",1975675962,null),null,new cljs.core.Symbol(null,"quote","quote",1377916282,null),null,new cljs.core.Symbol(null,"throw","throw",595905694,null),null,new cljs.core.Symbol(null,"def","def",597100991,null),null], null), null),x);
});
/**
* test [v] finds fn at key :test in var metadata and calls it,
* presuming failure will throw exception
*/
cljs.core.test = (function test(v){
var f = v.cljs$lang$test;
if(cljs.core.truth_(f)){
(f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));

return new cljs.core.Keyword(null,"ok","ok",967785236);
} else {
return new cljs.core.Keyword(null,"no-test","no-test",-1679482642);
}
});

//# sourceMappingURL=core.js.map